{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wMi0xMFQxNTo1NDoyMy0wNjowMM4AXqLK"
    },
    "edges": [
      {
        "node": {
          "title": "Get Jacobian in UserObject",
          "author": {
            "login": "Flolaffel"
          },
          "bodyText": "Hello,\nis there a way to get the global DOFxDOF jacobian in a UserObject?\nOr do I have to assemble it myself?",
          "url": "https://github.com/idaholab/moose/discussions/26734",
          "updatedAt": "2024-02-13T14:14:31Z",
          "publishedAt": "2024-02-05T08:13:05Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWe do not recommend assembling it yourself.\nYou should be able to use the TaggingInterface to retrieve the Jacobian. I dont know which tag you would use\nIf that does not work directly, the create a new matrix tag and add it to all your kernels. Then you can retrive the Jacobian with this matrix tag.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8378212",
                  "updatedAt": "2024-02-06T05:30:47Z",
                  "publishedAt": "2024-02-06T05:30:46Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Actually, from the documentation, I think the system tag will be helpful\nhttps://mooseframework.inl.gov/source/interfaces/TaggingInterface.html",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8378226",
                          "updatedAt": "2024-02-06T05:32:44Z",
                          "publishedAt": "2024-02-06T05:32:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Flolaffel"
                          },
                          "bodyText": "I've noticed the Tensor Mechanics Master Action has no matrix_tags parameter. Will it still contribute to the system matrix by default?",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8379694",
                          "updatedAt": "2024-02-06T08:46:10Z",
                          "publishedAt": "2024-02-06T08:46:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Flolaffel"
                          },
                          "bodyText": "Furthermore, I can't seem to get the matrix import working.\n_subproblem.getMatrixTags();\ntells me there are two matrices: SYSTEM with ID=0 and TIME with ID=1. But when I do\n_sys.hasMatrix(0);\nit returns false. And as expected\n_sys.getMatrix(0) \nis not working either. Am I missing an include or something? What am I doing wrong here?",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8383083",
                          "updatedAt": "2024-02-06T13:56:42Z",
                          "publishedAt": "2024-02-06T13:56:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Will it still contribute to the system matrix by default?\n\nyes\nWhat do you mean missing an include? If it is compiling then you are not missing an include.\nWhen is this object executed? I wonder if you are querying for this matrix too early",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8384793",
                          "updatedAt": "2024-02-06T16:25:12Z",
                          "publishedAt": "2024-02-06T16:25:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Flolaffel"
                          },
                          "bodyText": "Ah okay, that's good to know.\nI'm executing said commands in the initialize function of an ElementUserObject at timestep_end post_aux.",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8385848",
                          "updatedAt": "2024-02-06T17:44:41Z",
                          "publishedAt": "2024-02-06T17:44:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@lindsayad thoughts about who to tag on the tagging system and if you, then how would the matrix not be available then?",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8385915",
                          "updatedAt": "2024-02-06T17:50:43Z",
                          "publishedAt": "2024-02-06T17:50:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "maxnezdyur"
                          },
                          "bodyText": "In AdjointSolve.C the way we get the jacobian matrix is\n // Adjoint matrix, solution, and right-hand-side\n  auto & matrix = static_cast<ImplicitSystem &>(_nl_forward.system()).get_system_matrix();",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8386812",
                          "updatedAt": "2024-02-06T19:04:26Z",
                          "publishedAt": "2024-02-06T19:04:25Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "The Jacobian matrix is only associated with a tag during Jacobian evaluation:\nvoid\nNonlinearSystemBase::computeJacobian(SparseMatrix<Number> & jacobian, const std::set<TagID> & tags)\n{\n  associateMatrixToTag(jacobian, systemMatrixTag());\n\n  computeJacobianTags(tags);\n\n  disassociateMatrixFromTag(jacobian, systemMatrixTag());\n}",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8400466",
                          "updatedAt": "2024-02-07T21:55:39Z",
                          "publishedAt": "2024-02-07T21:55:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Flolaffel"
                          },
                          "bodyText": "@maxnezdyur It works but the matrix I get is not symmetric. Shouldn't the jacobian be symmetric for a linear elastic tensor mechanics problem?\n@lindsayad What is the reason for that?",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8407082",
                          "updatedAt": "2024-02-08T16:30:21Z",
                          "publishedAt": "2024-02-08T12:41:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@Flolaffel you'll want to add a new matrix tag for now, unless @maxnezdyur 's solution works for you\nIf you are going through the action and it wont let you then you ll need to modify it",
                          "url": "https://github.com/idaholab/moose/discussions/26734#discussioncomment-8409424",
                          "updatedAt": "2024-02-08T16:18:53Z",
                          "publishedAt": "2024-02-08T16:06:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "convergence at low saturations",
          "author": {
            "login": "marinsiebert"
          },
          "bodyText": "Hi,\nMy current simulation is running into some convergence problems. The model describes a heat source in a circular body with unsaturated soil using the NCG formulation.\nThe problem arises when integrating the dispersivity kernel together with physically correct diffusion coefficients for the millington quirk formulation.\nLooking into the results I realised that without dispersivity the liquid saturation hovers around the initial value of roughly 32 %, without showing any effects of drying.\nAs soon as dispersivity is activated drying occurs, at some point throwing Max non linear iterations followed by a moose exception temperature/pressure out of  boundaries, shortly thereafter. Lowering the diffusion coefficients for h20 in the gaseous phases decreases the drying effect correspondingly. Any thoughts about the underlying problem? @GiudGiud @cpgr\nPlease find the input file below.\nCheers!\n[Mesh]\n[mesh]\n  type = FileMeshGenerator\n  file = mesh.e\n[]\n#file = steady.e\n[]\n\n[GlobalParams]\n  dim = 2\n  gravity = '0 -9.8065 0'\n  PorousFlowDictator = dictator\n  liquid_phase = 0\n # temperature_unit = Kelvin\n[]\n\n[Functions]\n[frame]\n  type = arctodusFunctionReadFile\n  file = detailed_frame.txt\n[]\n[cable]\n  type = arctodusFunctionReadFile\n  file = very_detailed_heating.txt\n[]\n[function_porosity]\n  type = ParsedFunction\n  expression = '1-(1000*(-(1/12)*y+1.55))/2650'\n\n[]\n[lambda_soil]\n  type = ParsedFunction\n  symbol_names = 'sand silt clay'\n  symbol_values = '90 10 0' #percent\n  expression = '0.0812*sand+0.054*silt+0.02*clay'\n[]\n#[heat_capacity_soil]\n#  type = ParsedFunction\n#  symbol_names = 'T'\n#  symbol_values = 'temperature'\n#  expression = '1.1567*T+4.0774'\n#[]\n\n[]\n\n[Variables]\n[temperature]\n  initial_condition = 294.5\n\n  scaling = 1e-5\n[]\n[gaspressure]\n  initial_condition = 101325\n  scaling = 1\n[]\n[z]\n  scaling = 1e4\n[]\n[]\n\n[ICs]\n[gassat]\n  type = PorousFlowFluidStateIC\n  fluid_state = fluid_state\n  gas_porepressure = gaspressure\n  saturation = 0.68\n  variable = z\n  temperature = temperature\n[]\n[]\n\n[BCs]#\n  [cabletemp]\n    type = FunctionDirichletBC\n    variable = temperature\n    boundary = 'cable'\n    function = cable\n  []\n  [frametemp]\n    type = FunctionDirichletBC\n    variable = temperature\n    boundary = 'pipe'\n    function = frame\n  []\n[]\n\n[Kernels]\n[pressure_dt]\n  type = PorousFlowMassTimeDerivative\n  fluid_component = 0\n  variable = gaspressure\n[]\n[water_pressure_dt]\n  type = PorousFlowMassTimeDerivative\n  fluid_component = 1\n  variable = z\n[]\n[flux_liquid_water]\n  type = PorousFlowFluxLimitedTVDAdvection\n  advective_flux_calculator = advection_00\n  variable = gaspressure\n[]\n[flux_liquid_n2]\n  type = PorousFlowFluxLimitedTVDAdvection\n  advective_flux_calculator = advection_01\n  variable = gaspressure\n[]\n[flux_vapor]\n  type = PorousFlowFluxLimitedTVDAdvection\n  advective_flux_calculator = advection_10\n  variable = z\n[]\n[flux_n2]\n  type = PorousFlowFluxLimitedTVDAdvection\n  advective_flux_calculator = advection_11\n  variable = z\n[]\n[vapor_dispersivity]\n  type = PorousFlowDispersiveFlux\n  variable = gaspressure\n  fluid_component = 0\n  disp_long = '0 0'  #1e-13 1e-13'\n  disp_trans = '0 0' #5e-11 5e-11'##\n  block = 'soil'\n[]\n[water_dispersivity]\n  type = PorousFlowDispersiveFlux\n  variable = z\n  fluid_component = 1\n  disp_long = '0 0' #1e-7 1e-7'\n  disp_trans = '0 0' #1e-10 1e-10'\n  block = 'soil'\n[]\n[temperature_dt]\n  type = PorousFlowEnergyTimeDerivative\n  variable = temperature\n[]\n\n[advectionT]\n  type = PorousFlowHeatAdvection\n  use_displaced_mesh = false\n  variable = temperature\n[]\n[conductionT]\n  type = PorousFlowHeatConduction\n  use_displaced_mesh = false\n  variable = temperature\n[]\n[]\n\n[AuxVariables]\n[gas_in_water]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[vapor_in_gas]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[density_water]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[density_vapor]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[wet_density]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[liquid_water]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[porepressure]\n  family = MONOMIAL\n  order = CONSTANT\n  outputs = 'exodus'\n[]\n[z_water]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[saturation_liquid]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[saturation_gas]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[porosity]\n  family = MONOMIAL\n  order = CONSTANT\n  \n  [InitialCondition]\n    type = ConstantIC\n    variable = porosity\n    value = 0.39\n    \n  []\n[]\n[lambda]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[lambda_b]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[capillary_pressure]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[saturation_test]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[n2_in_gas]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[permeability]\n  family = MONOMIAL\n  order = CONSTANT\n[]\n[]\n\n[AuxKernels]\n[permeability]\n  type = ParsedAux\n  variable = permeability\n  coupled_variables = 'saturation_liquid temperature density_water'\n  expression = 'if(saturation_liquid<0.03, 1e-20, ((0.000005*saturation_liquid^5.8826)*(0.3835*exp(-0.02*temperature)))/(density_water*9.8065))'\n  \n[]\n[saturation_test]\n  type = ParsedAux\n  coupled_variables = 'density_vapor density_water saturation_gas vapor_in_gas'\n  variable = 'saturation_test'\n  expression = '((saturation_gas*density_vapor)*(1-vapor_in_gas))/density_water'\n[]\n[capillary_pressure]\n  type = PorousFlowPropertyAux\n  variable = capillary_pressure\n  property = capillary_pressure\n[]\n[lambda_b]\n  type = FunctionAux\n  variable = lambda_b\n  function = lambda_soil\n[]\n[lambda]\n  type = ParsedAux\n  enable_jit = true\n  enable_ad_cache = true\n  variable = 'lambda'\n # couples_variables = 'saturation_liquid' # for polynomial fitting\n  coupled_variables = 'saturation_liquid porosity temperature lambda_b' # variables for brakelmann\n # expression = 'if(saturation_liquid<0.73,-145.22*saturation_liquid^5 + 258.25*saturation_liquid^4 - 144.51*saturation_liquid^3 + 20.467*saturation_liquid^2 + 5.414*saturation_liquid^1 + 0.3143, 0.0376*saturation_liquid+2.2624)' # this is the polynomial approximation of the measurements\n  expression = '((-0.869083936+0.00894880345*temperature^1-1.5836634e-5*temperature^2+7.97543259e-9*temperature^3)^porosity)*(lambda_b^(1-porosity))*exp(-3.08*porosity*(1-saturation_liquid)^2)' # this is the approximation by brakelmann\n[]\n#  [deltaT]\n#    type = ParsedAux\n#    args = temperature\n#    variable = deltaT\n#    function = 'temperature - 293'\n#    execute_on = 'INITIAL TIMESTEP_END'\n#  []\n#  [deltaP]\n#    type = ParsedAux\n#    args = gaspressure\n#    variable = deltaPgas\n#    function = '(gaspressure-101325)/1e5'\n#    execute_on = 'INITIAL TIMESTEP_END'\n#  []\n[z_water]\n  type = ParsedAux\n  args = 'z gas_in_water'\n  variable = z_water\n  function = '1-z'\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n[n2_in_gas]\n  type = PorousFlowPropertyAux\n  property = mass_fraction\n  variable = n2_in_gas\n  fluid_component = 1\n  phase = 1\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n[fluid_in_water]\n  type = PorousFlowPropertyAux\n  property = mass_fraction\n  variable = liquid_water\n  fluid_component = 0\n  phase = 0\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n[gas_in_water]\n  type = PorousFlowPropertyAux\n  variable = gas_in_water\n  property = mass_fraction\n  fluid_component = 1\n  phase = 0\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n[vapor_in_gas]\n  type = PorousFlowPropertyAux\n  variable = vapor_in_gas\n  property =mass_fraction\n  fluid_component = 0\n  phase = 1\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n\n[porepressure]\n  type = PorousFlowPropertyAux\n  property = pressure\n  phase = 0\n  variable = porepressure\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n#  [bulk_density]\n#    type = ConstantAux\n#    variable = bulk_density\n#    value = 1802\n#    execute_on = 'INITIAL TIMESTEP_END'\n#  []\n[density_water]\n  type = PorousFlowPropertyAux\n  variable = density_water\n  property = density\n  phase = 0\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n[density_vapor]\n  type = PorousFlowPropertyAux\n  variable = density_vapor\n  property = density\n  phase = 1\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n#  [enthalpy]\n#    type = PorousFlowPropertyAux\n#    variable = enthalpy\n#    property = enthalpy\n#    execute_on = 'INITIAL TIMESTEP_END'\n#  []\n[liquid_saturation]\n  type = PorousFlowPropertyAux\n  variable = saturation_liquid\n  property = saturation\n  phase = 0\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n[gas_saturation]\n  type = PorousFlowPropertyAux\n  variable = saturation_gas\n  property = saturation\n  phase = 1\n  execute_on = 'INITIAL TIMESTEP_END'\n[]\n[]\n\n\n\n[FluidProperties]\n\n[water]\n  type = Water97FluidProperties\n  tolerance = 1e-08\n  \n[]\n[water_tab]\n  type = TabulatedBicubicFluidProperties\n  fp = water\n  temperature_min = 273.15\n  temperature_max = 373.15\n  pressure_min = 1e5 \n  pressure_max = 1e7\n  save_file = false\n  fluid_property_file = water_tab.csv\n[]\n[air]\n  type = NitrogenFluidProperties\n  tolerance = 1e-08\n[]\n[air_tab]\n  type = TabulatedBicubicFluidProperties\n  fp = air\n  temperature_max = 373.15\n  temperature_min = 273.15\n  pressure_max = 1e7\n  pressure_min = 1e5 \n  save_file = false\n  fluid_property_file = air_tab.csv\n[]\n[]\n\n\n\n[Materials]\n\n[porosity_soil] #OK\n  type = PorousFlowPorosityConst\n  porosity = porosity\n[]\n\n[water]\ntype = PorousFlowFluidState\n  gas_porepressure = gaspressure\n  z = z\n  temperature_unit = Kelvin\n  capillary_pressure = capillary_pressure_soil\n  fluid_state = fluid_state\n  temperature = temperature\n  outputs = 'exodus'\n[]\n[temperature]\n  type = PorousFlowTemperature\n  temperature = temperature\n[]\n\n[thermal_conductivity]\n  type = PorousFlowThermalConductivityTensorFromVar\n  lambda = lambda\n  anisotropy = '1 0 0 0 1 0 0 0 1'\n[]\n[internal_energy_soil] #OK\n  type = PorousFlowMatrixInternalEnergy\n  density = 2650\n  specific_heat_capacity = 800\n[]\n[permeability_soil] #OK\n  type = PorousFlowPermeabilityTensorFromVar\n  perm = permeability\n  k_anisotropy = '1 0 0 0 1 0 0 0 1 '\n[]\n[relative_permeability_vapor]\n  type = PorousFlowRelativePermeabilityVG\n  wetting = false\n  s_res = 0\n  sum_s_res = 0\n  phase = 1\n  m = 0.4\n[]\n[relative_permeability_water]\n  type = PorousFlowRelativePermeabilityVG\n  wetting = true\n  s_res = 0\n  sum_s_res = 0\n  phase = 0\n  m = 0.4\n[]\n#[relative_permeability_vapor]\n#  type = PorousFlowRelativePermeabilityFLAc\n#  m = 0.3\n#  phase = 1\n#  s_res = 0.0075\n#  sum_s_res = 0.05\n#[]\n#[relative_permeability_water]\n#  type = PorousFlowRelativePermeabilityFLAC\n#  phase = 0\n#  m = 0.75\n#  s_res = 0.0075\n#  sum_s_res = 0.05\n#[]\n[diffusivity]\n  type = PorousFlowDiffusivityMillingtonQuirk\n # diffusion_coeff = '2e-9 2e-9 2e-9 2e-9'\n  diffusion_coeff = '2e-9 2.5e-6 2e-9 1.76e-6'\n[]\n[]\n\n\n[UserObjects]\n[dictator]\n  type = PorousFlowDictator\n  number_fluid_components = 2\n  number_fluid_phases = 2\n  porous_flow_vars = 'temperature z gaspressure'\n[]\n[dummy_pc]\n  type = PorousFlowCapillaryPressureConst\n  pc = 0\n[]\n\n[capillary_pressure_soil]\n  type = PorousFlowCapillaryPressureVG\n  m = 0.5 # 0.9 #0.95\n  alpha = 5e-4 #9e-5\n  log_extension = true\n#      type = PorousFlowCapillaryPressureConst\n#      block = 'soil'\n#      pc = 0\n[]\n[fluid_state]\n  type = PorousFlowWaterNCG\n  water_fp = water\n  gas_fp = air\n  capillary_pressure = capillary_pressure_soil\n[]\n[advection_00]\n  type = PorousFlowAdvectiveFluxCalculatorUnsaturatedMultiComponent\n  fluid_component = 0\n  phase = 0\n  flux_limiter_type = superbee\n[]\n[advection_01]\n  type = PorousFlowAdvectiveFluxCalculatorUnsaturatedMultiComponent\n  fluid_component = 0\n  phase = 1\n  flux_limiter_type = superbee\n[]\n[advection_10]\n  type = PorousFlowAdvectiveFluxCalculatorUnsaturatedMultiComponent\n  fluid_component = 1\n  phase = 0\n  flux_limiter_type =  superbee\n[]\n[advection_11]\n  type = PorousFlowAdvectiveFluxCalculatorUnsaturatedMultiComponent\n  fluid_component = 1\n  phase = 1\n  flux_limiter_type = superbee\n[]\n[]\n\n[Postprocessors]\n[liquid_flow]\n  type = PorousFlowFluidMass\n  phase = 0\n  outputs = csv\n[]\n[gas_flow]\n  type = PorousFlowFluidMass\n  phase = 1\n  outputs = csv\n[]\n[probe_temp_1]\n  type = PointValue\n  point = '0.011 0.040 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_2]\n  type = PointValue\n  point = '-0.004 0.051 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_3]\n  type = PointValue\n  point = '0.000 0.082 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_4]\n  type = PointValue\n  point = '0.000 0.162 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_5]\n  type = PointValue\n  point = '0.000 0.032 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_6]\n  type = PointValue\n  point = '0.041 -0.004 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_7]\n  type = PointValue\n  point = '0.052 0.000 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_8]\n  type = PointValue\n  point = '0.082 0.000 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_9]\n  type = PointValue\n  point = '0.162 0.000 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_10]\n  type = PointValue\n  point = '0.000 -0.047 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_11]\n  type = PointValue\n  point = '0.000 -0.102 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_12]\n  type = PointValue\n  point = '0.047 0.047 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n[probe_temp_13]\n  type = PointValue\n  point = '0.061 0.061 0'\n  variable = temperature\n  outputs = 'csv'\n[]\n#  [probe_temp_14]\n#    type = PointValue\n#    point = '-0.031 0.005 0'\n#    variable = temperature\n#    outputs = 'csv'\n#  []\n\n#  [probe_temp_15]\n#    type = PointValue\n#    point = '0.318 0.000 0'\n#    variable = temperature\n#    outputs = 'csv'\n#  []\n[probe_m1]\n  type = PointValue\n  point = '0.000 0.082 0'\n  variable = capillary_pressure\n  outputs = 'csv'\n[]\n[probe_m2]\n  type = PointValue\n  point = '0.000 0.132 0'\n  variable = capillary_pressure\n  outputs = 'csv'\n[]\n[probe_m3]\n  type = PointValue\n  point = '0.056 0.004 0'\n  variable = capillary_pressure\n  outputs = 'csv'\n[]\n[probe_m4]\n  type = PointValue\n  point = '0.132 0.000 0'\n  variable = capillary_pressure\n  outputs = 'csv'\n[]\n[probe_m5]\n  type = PointValue\n  point = '0.211 0.015 0'\n  variable = capillary_pressure\n  outputs = 'csv'\n[]\n[probe_m6]\n  type = PointValue\n  point = '0.294 -0.021 0'\n  variable = capillary_pressure\n  outputs = 'csv'\n[]\n[probe_m7]\n  type = PointValue\n  point = '0.000 -0.084 0'\n  variable = capillary_pressure\n  outputs = 'csv'\n[]\n[lambda_average]\n  type = ElementAverageValue\n  variable = lambda\n  outputs = 'csv'\n  \n[]\n\n[]\n\n\n\n[Preconditioning]\nactive = basic\n[bcgs]\n  type = SMP\n  solve_type = NEWTON\n  full = true\n  petsc_options_iname = '-pc_type -pc_asm_overlap -sub_pc_type -sub_pc_factor_shift_type -ksp_type'\n  petsc_options_value = ' asm 2 lu NONZERO gmres'\n[]\n[basic]\n  type = SMP\n  full = true\n#  petsc_options = '-snes_lag_jacobian -snes_lag_jacobian_persists'\n  petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n  petsc_options_value = ' lu       mumps'\n[]\n[smp]\n  type = SMP\n  full = true\n  petsc_options = '-snes_converged_reason -ksp_diagonal_scale -ksp_diagonal_scale_fix -ksp_gmres_modifiedgramschmidt -snes_linesearch_monitor'\n  petsc_options_iname = '-ksp_type -pc_type -sub_pc_type -sub_pc_factor_shift_type -pc_asm_overlap -snes_atol -snes_rtol -snes_max_it'\n  petsc_options_value = 'gmres      asm      lu           NONZERO                   2               1E-8       1E-10 20'\n[]\n[extended]\n    type = SMP\n    full = true\n    petsc_options = '-ksp_diagonal_scale -ksp_diagonal_scale_fix -snes_lag_preconditioner -snes_lag_preconditioner_persists'\n    petsc_options_iname = '-pc_type -sub_pc_type -sub_pc_factor_shift_type -pc_asm_overlap'\n    petsc_options_value = ' asm      lu           NONZERO                   2'\n[]\n[fs]\n  type = FSP\n  topsplit = 'TZPg'\n[TZPg]\n  splitting = 'T Z Pg'\n  splitting_type = multiplicative\n  petsc_options = '-snes_ksp_ew'\n  petsc_options_iname = '-ksp_type\n                          -ksp_atol -ksp_rtol -ksp_max_it\n                          -snes_type -snes_linesearch_type\n                          -snes_atol -snes_rtol -snes_max_it'\n  petsc_options_value = 'fgmres\n                          1e-4 1e-10 100\n                          newtonls basic\n                          1e-3 1e-4 100'\n[]\n[T]\n  vars = 'temperature'\n  petsc_options_iname = '-ksp_type\n                          -pc_type\n                          -sub_pc_type -sub_pc_factor_levels -sub_pc_factor_shift_type -sub_pc_shift_amount\n                          -ksp_rtol -ksp_max_it'\n  petsc_options_value = 'preonly\n                          asm\n                          ilu 1 NONZERO 1e-10\n                          1e-04 500'\n[]\n[Z]\n  vars = 'z'\n  petsc_options_iname = '-ksp_type\n                          -pc_type -pc_hypre_type\n                          -ksp_rtol -ksp_max_it'\n  petsc_options_value = 'preonly\n                          hypre boomeramg\n                          1e-04 500'\n[]\n[Pg]\n  vars = 'gaspressure'\n  petsc_options_iname = '-ksp_type\n                          -pc_type\n                          -sub_pc_type -sub_pc_factor_levels -sub_pc_factor_shift_type -sub_pc_shift_amount\n                          -ksp_rtol -ksp_max_it'\n  petsc_options_value = 'preonly\n                          asm\n                          ilu 1 NONZERO 1e-10\n                          1e-04 500'\n[]\n[]\n[hypre]\n  type = SMP\n  full = true\n  petsc_options = '-snes_ksp_ew -ksp_diagonal_scale -ksp_diagonal_scale_fix'\n  petsc_options_iname = '-snes_type\n                          -snes_linesearch_type -snes_linesearch_maxstep -sneslinesearch_minlambda\n                          -snes_atol -snes_rol -snes_max_it\n                          -ksp_type -ksp_atol -ksp_rtol -ksp_max_it\n                          -pc_type -pc_hypre_type\n                          -sub_pc_type -sub_pc_factor_shift_type -sub_pc_shift_amount'\n  petsc_options_value = 'newtonls\n                          basic 2e12 1e-3\n                          1e-3 1e-4 500\n                          fgmres 1e-4 1e-6 200\n                          hypre boomeramg\n                          lu NONZERO 1e-10'\n[]\n[]\n\n[Debug]\n  show_var_residual_norms = true\n[]\n\n\n[Executioner]\n  type = Transient\n  solve_type = NEWTON\n  compute_scaling_once = true\n  automatic_scaling = true\n  start_time = 3574800\n  end_time = 1.79e+7\n  line_search = none\n  dtmax = 86400\n  l_tol = 1e-06\n[TimeSteppers]\n[sequence_stepper]\n  type = TimeSequenceStepper\n  cutback_factor_at_failure = 0.1\n  time_sequence = '3574800\t4014299\t4014300\t4519799\t4519800\t4914599\t4914600\t5438099\t5438100\t5845199\t5845200\t5845454 5846222 5847246\t5873358\t5899470\t5925582\t5951694\t5977806\t6003918\t6030030\t6056142\t6082254\t6108366\t6134478\t6160590\t6186702\t6212814\t6238926\t6265038\t6291150\t6317262\t6343374 6369486 6714299\t6714300\t7153499\t7153500\t7245599\t7245600\t7583999\t7584000\t8093999\t8094000\t8345099\t8345100\t9042899\t9042900\t9365099\t9365100\t10168199\t10168200\t11181599\t11181600\t12547199\t12547200\t13255499\t13255500\t13871519\t13871520\t14217299\t14217300\t14512199\t14512200\t14826899\t14826900\t15580499\t15580500\t16110599\t16110600\t16272899\t16272900\t16619999\t16620000\t16905299\t16905300\t17342699\t17342700\t17490599\t17490600\t17689199\t17689200\t17834688\n  '\n[]\n[iterative_stepper]\n  type = IterationAdaptiveDT\n  cutback_factor_at_failure = 0.1\n\n  dt = 1\n[]\n[]\n[]\n[Outputs]\n  print_linear_residuals = true\n  print_nonlinear_residuals = true\n  perf_graph = true\n  [exodus]\n  type = Exodus\n  file_base = brakelmann_measured\n\n  []\n  [csv]\n  type = CSV\n  file_base = brakelmann_measured\n  []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/26788",
          "updatedAt": "2024-02-28T07:59:46Z",
          "publishedAt": "2024-02-10T10:41:39Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nat some point throwing Max non linear iterations followed by a moose exception temperature/pressure out of boundaries, shortly thereafter.\n\nCould you save an output (and ideally a Checkpoint too) a time step before it fails and examine the simulation? Are the Physics of the problem changing? Is saturation reaching a bound for the domain of validity of the equations (0%?) ?\nAre pressure and temperature nearing the fluid properties validity limits for the correlations used in the fluid properties?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26788#discussioncomment-8428153",
                  "updatedAt": "2024-02-10T16:06:42Z",
                  "publishedAt": "2024-02-10T16:06:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "marinsiebert"
                  },
                  "bodyText": "dispersive flux.zip\nsand_out_cp.zip\nPorousFlowThermalConductivityTensorFromVar.zip\nFind attached the following files:\n\ninput file for dispersive flux (runs fine wenn commenting out dispersive flux kernels and dispersivity material)\ninput mesh and txtfiles to be read\nheader and c-file for the thermalconductivitytensorfromvar (while we are at it, this could be included in the next update if you like, its just the same as permeabilitytensorfromvar)\noutput from aborted run and corresponding checkpoint\n\nRegarding your questions:\n\n\nThe physics should stay the same, there are some additional depencies with temperature for permeability and thermal conductivity though\n\n\nThe output generally seems ok, although the massfraction has a sketchy touch to it:\n\n\n\nThe pressure of the model stays within atmospheric range, temperatures vary between 20\u00b0C and 80\u00b0C. The output states that pressure is at -1940.05, this does not show in the mesh though.\n\n\nsaturation does decrease and would surely approach 0%, however it does so much faster than it should at rather low temperatures.\n\n\nAnother point to this regarding capillary pressure arose while investigating the results, as it is not directly related I outsorced this to #26790\nCheers !",
                  "url": "https://github.com/idaholab/moose/discussions/26788#discussioncomment-8433632",
                  "updatedAt": "2024-02-12T08:14:21Z",
                  "publishedAt": "2024-02-11T15:41:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The output states that pressure is at -1940.05, this does not show in the mesh though.\n\nthis is probably the nonlinear solver failing and visiting domain that is out of bounds.\nYou can prevent that by using the Bounds system to constrain the pressure.\nI m mostly off this week. @cpgr might be interested to look into this otherwise I ll see what I can see next week",
                          "url": "https://github.com/idaholab/moose/discussions/26788#discussioncomment-8448638",
                          "updatedAt": "2024-02-13T02:15:10Z",
                          "publishedAt": "2024-02-13T02:15:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Boundary Condition between 2 variables",
          "author": {
            "login": "gj19866"
          },
          "bodyText": "Hi there,\nThank you for all the help you have offered so far.\nThe problem I'm solving requires me to use a complex variable. As Moose doesn't handle complex values, I have split it into real and imaginary parts, such that C = a +i*b.\na and b are variables that are solved by kernels here.\nI want to set a boundary condition such that the magnitude of C =1, hence a^2+b^2=1.\nHow would i go about doing this?\nAll the best,\nGillian",
          "url": "https://github.com/idaholab/moose/discussions/26142",
          "updatedAt": "2024-02-13T01:08:36Z",
          "publishedAt": "2023-11-24T16:07:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can write a dirichlet BC that involves another variable.\nI would use that to set the value of one variable based on the variable of another\nEither that or write a constraint instead\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7663283",
                  "updatedAt": "2023-11-24T19:44:26Z",
                  "publishedAt": "2023-11-24T19:44:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "Hi Guillamume,\nThanks, for the help.\nYep, that makes sense.\nIs there an example that you would recommend for me to look at to write the BC/ base it on?\nAll the best,\nGillian",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7674637",
                          "updatedAt": "2023-11-26T20:46:57Z",
                          "publishedAt": "2023-11-26T20:46:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "I have implemented this, as in the example page here, (https://mooseframework.inl.gov/getting_started/examples_and_tutorials/examples/ex04_bcs.html).\nThe solve now won't converge.\nI want to clarify, what happens to the boundary condition on the other variable in this case. Will it also be adjusted? Will it default to a different BC?\nAs you now have one BC that's active on one variable, but actually it is acting on 2 variables.\nThank you",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7674752",
                          "updatedAt": "2023-11-26T21:16:59Z",
                          "publishedAt": "2023-11-26T21:16:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "gj19866"
                  },
                  "bodyText": "#pragma once\n\n#include \"NodalBC.h\"\n\n/// Implements a coupled Dirichlet BC where u^2 +Psi_im^2 = Psi_mag on the boundary.\nclass SuperBC : public NodalBC\n{\npublic:\n  SuperBC(const InputParameters & parameters);\n\n  static InputParameters validParams();\n\nprotected:\n  virtual Real computeQpResidual() override;\n\nprivate:\n  /// Multiplier on the boundary.\n  Real _psi_MAG;\n  /// reference to a user-specifiable coupled (independent) variable\n  const VariableValue & _Psi_Im;\n};\n\n```\n\n```\n\n#include \"SuperBC.h\"\n\nregisterMooseObject(\"SCResApp\", SuperBC);\n\nInputParameters\nSuperBC::validParams()\n{\n  InputParameters params = NodalBC::validParams();\n\n  // Specify input parameters that we want users to be able to set:\n  params.addParam<Real>(\"psi_MAG\", 0, \"Mag of Psi on the boundary\");\n  params.addRequiredCoupledVar(\"Psi_Im\", \"Value on the boundary\");\n  return params;\n}\n\nSuperBC::SuperBC(const InputParameters & parameters)\n  : NodalBC(parameters),\n    // store the user-specified parameters from the input file...\n    _psi_MAG(getParam<Real>(\"psi_MAG\")),        // for the multiplier\n    _Psi_Im(coupledValue(\"Psi_Im\")) // for the coupled variable\n{\n}\n\nReal\nSuperBC::computeQpResidual()\n{\n  // For dirichlet BCS, u=BC at the boundary, so the residual includes _u and the desired BC value:\n  return _u[_qp]*_u[_qp] + _Psi_Im[_qp]*_Psi_Im[_qp] - (_psi_MAG);\n}\n```",
                  "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7674798",
                  "updatedAt": "2023-11-26T21:33:16Z",
                  "publishedAt": "2023-11-26T21:29:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nI don't see a computeJacobian routine. Missing those terms is not going to help convergence.\nYou could try using AD? See the page about automatic differentiation in the website\nIf not then you should check out our page in troubleshooting failed solves. There's good advice on diagnosing convergence issues\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7674855",
                          "updatedAt": "2023-11-26T21:43:49Z",
                          "publishedAt": "2023-11-26T21:43:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "I have given it a go writing it as AD, what do i need to change here to make it AD?\nI want to clarify, what happens to the boundary condition on the other variable in this case. Will it also be adjusted? Will it default to a different BC?\nAs you now have one BC that's active on one variable, but actually it is acting on 2 variables, so will both variables be adjusted as required?",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7674877",
                          "updatedAt": "2023-11-26T21:51:56Z",
                          "publishedAt": "2023-11-26T21:51:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "I have updated to using AD, that seems like the better option, as most of my code uses AD anyway.\nThe file now will not make, but i cant understand why.\n\n#pragma once\n\n#include \"ADNodalBC.h\"\n\n/// Implements a coupled Dirichlet BC where u = alpha * some_var on the boundary.\nclass SuperBC : public ADNodalBC\n{\npublic:\n  SuperBC(const InputParameters & parameters);\n\n  static InputParameters validParams();\n\nprotected:\n  virtual ADReal computeQpResidual() override;\n\nprivate:\n  /// Multiplier on the boundary.\n  Real _psi_MAG;\n  /// reference to a user-specifiable coupled (independent) variable\n  const ADVariableValue & _Psi_Im;\n};\n\n\n.C\n\n#include \"SuperBC.h\"\n\nregisterMooseObject(\"SCResApp\", SuperBC);\n\nInputParameters\nSuperBC::validParams()\n{\n  InputParameters params = ADNodalBC::validParams();\n\n  // Specify input parameters that we want users to be able to set:\n  params.addParam<Real>(\"psi_MAG\", 0, \"Mag of Psi on the boundary\");\n  params.addRequiredCoupledVar(\"Psi_Im\", \"Value on the boundary\");\n  return params;\n}\n\nSuperBC::SuperBC(const InputParameters & parameters)\n  : ADNodalBC(parameters),\n    // store the user-specified parameters from the input file...\n    _psi_MAG(getParam<Real>(\"psi_MAG\")),        // for the multiplier\n    _Psi_Im(adCoupledValue(\"Psi_Im\")) // for the coupled variable\n{\n}\n\nADReal\nSuperBC::computeQpResidual()\n{\n  // For dirichlet BCS, u=BC at the boundary, so the residual includes _u and the desired BC value:\n  return _u[_qp]*_u[_qp] + _Psi_Im[_qp]*_Psi_Im[_qp] - (_psi_MAG);\n\n}\n\n\nIt is giving this error:\n\nChecking if header needs updating: /home/lstein/projects/moose/framework/include/base/MooseRevision.h...\nCreating Unity /home/lstein/projects/sc_res/build/unity_src/BCs_Unity.C\nCompiling C++ (in opt mode) /home/lstein/projects/sc_res/build/unity_src/BCs_Unity.C...\nIn file included from /home/lstein/projects/sc_res/build/unity_src/BCs_Unity.C:2:\n/home/lstein/projects/sc_res/src/BCs/SuperBC.C: In member function 'virtual ADReal SuperBC::computeQpResidual()':\n/home/lstein/projects/sc_res/src/BCs/SuperBC.C:29:10: error: no match for 'operator[]' (operand types are 'const type' {aka 'const MetaPhysicL::DualNumber<double, MetaPhysicL::SemiDynamicSparseNumberArray<double, long unsigned int, MetaPhysicL::NWrapper<53> >, true>'} and 'const unsigned int')\n   28 |   return _u[_qp]*_u[_qp] + _Psi_Im[_qp]*_Psi_Im[_qp] - (_psi_MAG);\n      |                    ^\nmake: *** [/home/lstein/projects/moose/framework/build.mk:149: /home/lstein/projects/sc_res/build/unity_src/BCs_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7674954",
                          "updatedAt": "2023-11-26T22:14:46Z",
                          "publishedAt": "2023-11-26T22:11:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Weird. I dont see why that would be wrong. Can you try this?\nauto u_value = _u[_qp];\nreturn u_value * u_value + _Psi_Im[_qp]*_Psi_Im[_qp] - (_psi_MAG);",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7675357",
                          "updatedAt": "2023-11-27T00:15:47Z",
                          "publishedAt": "2023-11-27T00:15:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "Still not working:\n/home/lstein/projects/sc_res/src/BCs/SuperBC.C: In member function 'virtual ADReal SuperBC::computeQpResidual()':\n/home/lstein/projects/sc_res/src/BCs/SuperBC.C:28:20: error: no match for 'operator[]' (operand types are 'const type' {aka 'const MetaPhysicL::DualNumber<double, MetaPhysicL::SemiDynamicSparseNumberArray<double, long unsigned int, MetaPhysicL::NWrapper<53> >, true>'} and 'const unsigned int')\n   28 |   auto u_value = _u[_qp];\n      |                    ^\nmake: *** [/home/lstein/projects/moose/framework/build.mk:149: /home/lstein/projects/sc_res/build/unity_src/BCs_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\n\n```",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7675392",
                          "updatedAt": "2023-11-27T00:21:22Z",
                          "publishedAt": "2023-11-27T00:21:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ah ok at least this is consistent.\nI think because there is only 1 value to _u on a node (there is no qp loop on a node) you do NOT need to index.\nso just _u not _u[_qp]",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7675410",
                          "updatedAt": "2023-11-27T00:27:42Z",
                          "publishedAt": "2023-11-27T00:27:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "thank you,\nthat has fixed the making of it.\nThe solve still isn't converging.\nI want to clarify, what happens to the boundary condition on the other variable in this case. Will it also be adjusted? Will it default to a different BC?\nAs you now have one BC that's active on one variable, but actually it is acting on 2 variables, so will both variables be adjusted as required?",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7675445",
                          "updatedAt": "2023-11-27T00:37:48Z",
                          "publishedAt": "2023-11-27T00:37:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It wont get 'adjusted' but it should converge to a configuration that meets the equation you imposed with the nodal BC. What happens to the BC also depends a lot on how you wrote the equations in the kernels.\nCan you set preset = false to the BC?\nbtw what variable types (finite element type) are the two variables?\nThis is the troubleshooting advice page btw:\nhttps://mooseframework.inl.gov/moose/application_usage/failed_solves.html",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7675466",
                          "updatedAt": "2023-11-27T00:41:06Z",
                          "publishedAt": "2023-11-27T00:41:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "The variable types are both first Lagrange.\nIt is now all working.\nThank you very much Guillamume!",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7682735",
                          "updatedAt": "2023-11-27T15:58:49Z",
                          "publishedAt": "2023-11-27T15:58:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "Looking closer at my results, it appears now that the variables _u and Psi_Im are not able to change from the initial condition set for them on the boundary.\nI had hopped that they would still change, just with the additional constraint u^2 + psi_im^2 = 1 on the boundary.\nAny ideas?",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7683773",
                          "updatedAt": "2023-11-27T17:41:45Z",
                          "publishedAt": "2023-11-27T17:41:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "gj19866"
                  },
                  "bodyText": "What are the physics you're trying to solve here? Electromagnetics? Wave propagation?\n\nI am modelling the behaviour of superconductors as they move from a superconducting to a normal resistive state by solving the Time-Dependent Ginzburg-Landau Equations for a dirty superconductor. https://link.springer.com/article/10.1007/BF00683522\nThe model is working well currently and shows the behaviour expected for boundary conditions where $|\\psi|=0$. But I would like to model superconducting boundary conditions, where the magnitude of the complex order parameter $|\\psi|=1$. Following your advice, I handle the real and imaginary parts of the order parameter separately, so I am looking to implement that $\\psi_{Re}^2+\\psi_{Im}^2=1$.",
                  "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7773031",
                  "updatedAt": "2023-12-06T07:26:35Z",
                  "publishedAt": "2023-12-06T07:26:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@cticenhour @aaelmeli I think you have worked on similar problems. Do you have advice on doing this?",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7777649",
                          "updatedAt": "2023-12-06T15:24:06Z",
                          "publishedAt": "2023-12-06T15:24:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Do you use the same BC for |psi| = 0?",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7779188",
                          "updatedAt": "2023-12-06T17:43:21Z",
                          "publishedAt": "2023-12-06T17:43:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aaelmeli"
                          },
                          "bodyText": "Hi\nYou may want to implement something like CoupledVarNeumannBC that is customized to your case. I think the current implementation does not help you but it may be a good start to get to what you want. The following is an example of how I used CoupledVarNeumannBC to couple the real and imaginary variables scaled with a coefficient on some boundary. Also, consider using a direct solver for your verifications so that you make sure that the Jacobian is computed accurately.\n    type = CoupledVarNeumannBC\n    variable = uyi #imaginar variable\n    boundary = '3'\n    v = uyr #real variable\n    coef = '${fparse -rho*omega*C_sr}' #some scaling factor which is a function of the shear wave speed, frequency and density\"",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7781934",
                          "updatedAt": "2023-12-06T22:34:12Z",
                          "publishedAt": "2023-12-06T22:34:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "Hi @aaelmeli,\nI have had a look at the CoupledVarNeumannBC, and it looks very similar to what I have been doing.\nI notice that the difference is that CoupledVarNeumannBC uses an IntegratedBC. Is this something I should try instead of the NodalBC? Does that make sense in this case?\nJust to clarify, when you use CoupledVarNeumannBC are the values of both uyi and uyr changed/adjusted on the boundary in this case, or does one of these values stay fixed?",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7790873",
                          "updatedAt": "2023-12-07T16:22:10Z",
                          "publishedAt": "2023-12-07T16:22:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "For reference this is my BC:\n\n#include \"SuperBC.h\"\n\nregisterMooseObject(\"SCResApp\", SuperBC);\n\nInputParameters\nSuperBC::validParams()\n{\n  InputParameters params = ADNodalBC::validParams();\n\n  // Specify input parameters that we want users to be able to set:\n  params.addParam<Real>(\"psi_MAG\", 1, \"Mag of Psi on the boundary\");\n  params.addRequiredCoupledVar(\"Psi_Im\", \"Value on the boundary\");\n  return params;\n}\n\nSuperBC::SuperBC(const InputParameters & parameters)\n  : ADNodalBC(parameters),\n    // store the user-specified parameters from the input file...\n    _psi_MAG(getParam<Real>(\"psi_MAG\")),        // for the multiplier\n    _Psi_Im(adCoupledValue(\"Psi_Im\")) // for the coupled variable\n{\n}\n\nADReal\nSuperBC::computeQpResidual()\n{\n  // For dirichlet BCS, u=BC at the boundary, so the residual includes _u and the desired BC value:\n  auto u_value = _u;\n//   return _u[_qp]*_u[_qp] + _Psi_Im[_qp]*_Psi_Im[_qp] - (_psi_MAG);\nreturn u_value*u_value  + _Psi_Im[_qp]*_Psi_Im[_qp] - (_psi_MAG);\n\n}\n\n\n\n#pragma once\n\n#include \"ADNodalBC.h\"\n\n\nclass SuperBC : public ADNodalBC\n{\npublic:\n  SuperBC(const InputParameters & parameters);\n\n  static InputParameters validParams();\n\nprotected:\n  virtual ADReal computeQpResidual() override;\n\n  /// Multiplier on the boundary.\n  Real _psi_MAG;\n  /// reference to a user-specifiable coupled (independent) variable\n  const ADVariableValue & _Psi_Im;\n};",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7790968",
                          "updatedAt": "2023-12-07T16:32:54Z",
                          "publishedAt": "2023-12-07T16:31:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "It would make sense to me if it isn't possible to write a BC in this way, as I can't imagine wanting a BC to act on, and adjust, 2 variables is standard.\nThanks for all the help so far everyone.",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7791002",
                          "updatedAt": "2023-12-07T16:35:00Z",
                          "publishedAt": "2023-12-07T16:34:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Writing boundary conditions for degrees of freedom that are functions of other degrees of freedom is very common, so in that sense what you are doing is \"standard\"",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7792193",
                          "updatedAt": "2023-12-07T18:15:14Z",
                          "publishedAt": "2023-12-07T18:15:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gj19866"
                          },
                          "bodyText": "Thats reassuring.\nIf the issue is to do with the natural condition being applied that the flux across the boundary is zero, how would I stop enforcing that, without setting it to a value as such?",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7792440",
                          "updatedAt": "2023-12-07T18:22:01Z",
                          "publishedAt": "2023-12-07T18:22:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "You can write a \"do-nothing\" boundary condition. So essentially you can write a BC that is your surface term coming from integration by parts",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7793610",
                          "updatedAt": "2023-12-07T20:34:50Z",
                          "publishedAt": "2023-12-07T20:34:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "gj19866"
                  },
                  "bodyText": "Do you use the same BC for |psi| = 0?\n\nTo enforce |psi|=0 I have just been using a standard Dirichlet BC, as psi_R=psi_I=0 in this case, so I presumed it would be better practice (and more computationally efficient?) to use the Dirichlet BC in that case.",
                  "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-7790486",
                  "updatedAt": "2023-12-07T15:46:22Z",
                  "publishedAt": "2023-12-07T15:46:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "We do something like this in tensor mechanics with:  https://mooseframework.inl.gov/source/bcs/PenaltyInclinedNoDisplacementBC.html\nwhere we want to enforce a zero displacement on the normal component of a surface so that it remains planar.  To do that we need to \"tie\" together the displacement components on that surface.  Displacement is a vector so each component is its own degree of freedom.  This enforces a dirichlet boundary condition weakly.  Maybe @jiangwen84 or @hugary1995 or @bwspenc would know if the penalty bc could enforce the bc you want.",
                          "url": "https://github.com/idaholab/moose/discussions/26142#discussioncomment-8448330",
                          "updatedAt": "2024-02-13T01:08:36Z",
                          "publishedAt": "2024-02-13T01:08:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to solve complex PDE (i.e with imaginary part) with MOOSE?",
          "author": {
            "login": "richmondodufisan"
          },
          "bodyText": "Hi, I was wondering if this is possible and was curious how to go about it. Say I have a PDE of the form\niw*u - d^2/dx^2(u) = 0 (but in 3D)\nso an expression with both complex and real parts. How could I go about solving it in MOOSE? The FEM discretization will still have a complex number attached. Would I run the real and complex parts independently?\nSince I'm coupling this with an optimization problem (i.e I am trying to optimize material properties) that could be an issue. I guess I would need to optimize outside of MOOSE with a script and then re-do the simulations each time. Or what other options do I have?",
          "url": "https://github.com/idaholab/moose/discussions/26711",
          "updatedAt": "2024-02-13T00:25:37Z",
          "publishedAt": "2024-02-01T18:05:10Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThere's been a few posts on that lately. I think the main idea is to create two equations that will end up being coupled\n\none for the real part of the equation\none for the imaginary part\n\nWe have an optimization module in moose that is integrated and can work with several equations. I dont think you ll need to use an external optimizer necessarily\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26711#discussioncomment-8338417",
                  "updatedAt": "2024-02-01T18:45:11Z",
                  "publishedAt": "2024-02-01T18:45:03Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "richmondodufisan"
                          },
                          "bodyText": "I guess this is more of a math question than a MOOSE one but let's say the expression was:\niw*u - d^2/dx^2(u) = f(u)\nWould the two PDEs be:\niw*u = Im(f(u) .......................(1)\n\nd^2/dx^2(u) = Re(f(u)) ...................(2)\n\nwith the overall solution being\nu = Re(u) + Im(u)\nDid I get that right? But even still, u in both expressions can be complex valued.",
                          "url": "https://github.com/idaholab/moose/discussions/26711#discussioncomment-8338546",
                          "updatedAt": "2024-02-01T19:01:57Z",
                          "publishedAt": "2024-02-01T19:01:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no I think you need to replace u with X (Re(u)  and i Y. (Im(u))\nso\nw X -d2x Y = Im(f)\nand\n-w Y - d2x X = Re(f)",
                          "url": "https://github.com/idaholab/moose/discussions/26711#discussioncomment-8338570",
                          "updatedAt": "2024-02-01T19:04:40Z",
                          "publishedAt": "2024-02-01T19:04:39Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "richmondodufisan"
                          },
                          "bodyText": "Ahh I see! That makes sense, thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/26711#discussioncomment-8339411",
                          "updatedAt": "2024-02-01T20:58:03Z",
                          "publishedAt": "2024-02-01T20:58:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lynnmunday"
                  },
                  "bodyText": "We do something like this here:  https://mooseframework.inl.gov/modules/tensor_mechanics/1d_elastic_waves.html",
                  "url": "https://github.com/idaholab/moose/discussions/26711#discussioncomment-8448097",
                  "updatedAt": "2024-02-13T00:25:37Z",
                  "publishedAt": "2024-02-13T00:25:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "SinglePhaseFluidProperties error with NaKFluidProperties",
          "author": {
            "login": "garcs2"
          },
          "bodyText": "Hello,\nI am trying to use THM to predict the outlet conditions of a sodium-potassium cooled thermal microreactor. I am following directly from the single phase flow THM tutorial, and have used the conjugate heat transfer example as a template to begin with. I've effectively adjusted TH properties for what I'm modeling, including the fluid. I use NaKFluidProperties to define the fluid and get the following error when running on lemhi:\nThe following error occurred in the object \"nak\", of type \"NaKFluidProperties\".\n\nnak: virtual void SinglePhaseFluidProperties::p_from_v_e(libMesh::Real, libMesh::Real, libMesh::Real&, libMesh::Real&, libMesh::Real&) const derivatives not implemented.\n\nI'm confused on whether this error is telling me that the variable p_from_v_e isn't implemented in my own input file or if that has not been implemented in general? In going through NaKFluidProperties documentation I didn't find that variable to input so I'm confused what the solution moving forward is. Thanks in advance!",
          "url": "https://github.com/idaholab/moose/discussions/26791",
          "updatedAt": "2024-02-12T21:04:00Z",
          "publishedAt": "2024-02-12T18:42:43Z",
          "category": {
            "name": "Q&A Modules: Thermal Hydraulics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis is not an input file problem, it s a missing implementation in the source code for the fluid property.\nIf you look at the NaKFluidProperties.h header file, you ll see that this routine does not exist.\nTo move forward you will need to implement it. This can be challenging for these weakyl/incompressible fluids as (v, e) variables are both only correlated to temperature and not pressure.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26791#discussioncomment-8446844",
                  "updatedAt": "2024-02-12T20:59:10Z",
                  "publishedAt": "2024-02-12T20:59:10Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "garcs2"
                          },
                          "bodyText": "Okay that makes sense, thanks so much for the response!",
                          "url": "https://github.com/idaholab/moose/discussions/26791#discussioncomment-8446866",
                          "updatedAt": "2024-02-12T21:01:03Z",
                          "publishedAt": "2024-02-12T21:01:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Btw if you get them implemented and they work fine we would be glad to see these routines contributed to the module.",
                          "url": "https://github.com/idaholab/moose/discussions/26791#discussioncomment-8446889",
                          "updatedAt": "2024-02-12T21:04:00Z",
                          "publishedAt": "2024-02-12T21:04:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Help to solve a lid-driven with INSFE",
          "author": {
            "login": "doquang"
          },
          "bodyText": "Hi, I'm trying to use the INSFE module to solve a lid-driven problem, but I'm not sure how to apply the lid flow to the top surface of the domain.\n\nUsing INSFEFluidMomentumBC doesn't seem to work for me. See BC lid2\nWhen using FunctionDirichletBC (BC lid), I encountered a non-convergence issue.\n\nCan someone help me understand the problem. Thanks in advance.\n[GlobalParams]\n  gravity = '0 0 0'\n#  laplace = true\n#  integrate_p_by_parts = true\n  family = LAGRANGE\n  order = FIRST\n\n  # There are multiple types of stabilization possible in incompressible\n  # Navier Stokes. The user can specify supg = true to apply streamline\n  # upwind petrov-galerkin stabilization to the momentum equations. This\n  # is most useful for high Reynolds numbers, e.g. when inertial effects\n  # dominate over viscous effects. The user can also specify pspg = true\n  # to apply pressure stabilized petrov-galerkin stabilization to the mass\n  # equation. PSPG is a form of Galerkin Least Squares. This stabilization\n  # allows equal order interpolations to be used for pressure and velocity.\n  # Finally, the alpha parameter controls the amount of stabilization.\n  # For PSPG, decreasing alpha leads to increased accuracy but may induce\n  # spurious oscillations in the pressure field. Some numerical experiments\n  # suggest that alpha between .1 and 1 may be optimal for accuracy and\n  # robustness.\n#  supg = true\n#  pspg = true\n#  alpha = 1e-1\n\n  u = vel_x\n  v = vel_y\n  pressure = p\n  temperature = T\n  porosity = 1\n  eos = eos\n  transient = false\n[]\n\n[Mesh]\n  [gen]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmin = 0\n    xmax = 1.0\n    ymin = 0\n    ymax = 1.0\n    nx = 64\n    ny = 64\n    elem_type = QUAD4\n  []\n#  [./corner_node]\n#    type = ExtraNodesetGenerator\n#    new_boundary = 'pinned_node'\n#    nodes = '0'\n#    input = gen\n#  [../]\n[]\n\n[Variables]\n  [./vel_x]\n    initial_condition = 1e-15\n  [../]\n\n  [./vel_y]\n    initial_condition = 1e-15\n  [../]\n\n  [./p]\n  [../]\n\n  [./T]\n  [../]\n[]\n\n[Kernels]\n  # mass\n  [./mass]\n    type = INSFEFluidMassKernel\n    variable = p\n  [../]\n\n  # x-momentum, space\n  [./x_momentum_space]\n    type = INSFEFluidMomentumKernel\n    variable = vel_x\n    component = 0\n  [../]\n\n  # y-momentum, space\n  [./y_momentum_space]\n    type = INSFEFluidMomentumKernel\n    variable = vel_y\n    component = 1\n  [../]\n\n [./temperature_space]\n   type = INSFEFluidEnergyKernel\n   variable = T\n [../]\n[]\n\n[BCs]\n  [./x_no_slip]\n    type = INSFEFluidMomentumBC\n    variable = vel_x\n    boundary = 'bottom right left'\n    component = 0\n    v_fn = 0.0\n  [../]\n\n#  [./lid]\n#    type = FunctionDirichletBC\n#    variable = vel_x\n#    boundary = 'top'\n#    function = lid_function\n#  [../]\n\n  [lid2]\n    type = INSFEFluidMomentumBC\n    variable = vel_x\n    boundary = 'top'\n    component = 0\n    v_fn = 'lid_function'\n  []\n\n  [./y_no_slip]\n    type = INSFEFluidWallMomentumBC\n    variable = vel_y\n    boundary = 'bottom right top left'\n    component = 1\n#    v_fn = 0.0\n  [../]\n#\n#  [./pressure_pin]\n#    type = DirichletBC\n#    variable = p\n#    boundary = 'pinned_node'\n#    value = 0\n#  [../]\n[]\n\n[FluidProperties]\n  [eos]\n    type = SimpleFluidProperties\n    density0 = 100              # kg/m^3\n    thermal_expansion = 0.001   # K^{-1}\n    cp =  100\n    viscosity = 0.1             # Pa-s, Re=rho*u*L/mu = 100*1*0.1/0.1 = 100\n    thermal_conductivity = 72\n  []\n[]\n\n[Materials]\n  [mat]\n    type = PINSFEMaterial\n    alpha = 1e3\n    beta = 100\n    outputs = 'out'\n  []\n[]\n\n[Functions]\n  [./lid_function]\n    # We pick a function that is exactly represented in the velocity\n    # space so that the Dirichlet conditions are the same regardless\n    # of the mesh spacing.\n    type = ParsedFunction\n    expression = '4*x*(1-x)'\n  [../]\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = FDP\n    full = true\n    solve_type = 'NEWTON'\n  [../]\n[]\n\n[Executioner]\n  type = Steady\n  petsc_options_iname = '-pc_type -ksp_gmres_restart'\n  petsc_options_value = 'lu 100'\n  line_search = 'none'\n  nl_rel_tol = 1e-12\n  nl_abs_tol = 1e-13\n  nl_max_its = 6\n  l_tol = 1e-6\n  l_max_its = 500\n[]\n\n[Outputs]\n  perf_graph = true\n  print_linear_residuals = false\n  interval = 1\n  execute_on = 'initial timestep_end'\n  [console]\n    type = Console\n    output_linear = false\n  []\n  [out]\n    type = Exodus\n    use_displaced = false\n  []\n[]\n\n[Postprocessors]\n  [lin]\n    type = NumLinearIterations\n  []\n  [nl]\n    type = NumNonlinearIterations\n  []\n  [lin_tot]\n    type = CumulativeValuePostprocessor\n    postprocessor = 'lin'\n  []\n  [nl_tot]\n    type = CumulativeValuePostprocessor\n    postprocessor = 'nl'\n  []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/26789",
          "updatedAt": "2024-02-12T18:54:59Z",
          "publishedAt": "2024-02-11T11:50:00Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "somu15"
                  },
                  "bodyText": "A few years ago I used the NS module for a four-sided lid-driven cavity problem for a journal article (Section 7.1): https://doi.org/10.1016/j.jcp.2022.111506\nHere is the input file that worked for me. Not sure if this is what you're looking for though.\n[Mesh]\n  [gen]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmin = 0\n    xmax = 1.0\n    ymin = 0\n    ymax = 1.0\n    nx = 40\n    ny = 40\n    # elem_type = QUAD9\n  []\n  [./corner_node]\n    type = ExtraNodesetGenerator\n    new_boundary = 'pinned_node'\n    nodes = '0'\n    input = gen\n  [../]\n  second_order = true\n[]\n\n[AuxVariables]\n  [vel_x]\n    order = SECOND\n  []\n  [vel_y]\n    order = SECOND\n  []\n[]\n\n[AuxKernels]\n  [vel_x]\n    type = VectorVariableComponentAux\n    variable = vel_x\n    vector_variable = velocity\n    component = 'x'\n  []\n  [vel_y]\n    type = VectorVariableComponentAux\n    variable = vel_y\n    vector_variable = velocity\n    component = 'y'\n  []\n[]\n\n[Variables]\n  [./velocity]\n    order = SECOND\n    family = LAGRANGE_VEC\n  [../]\n  [./p]\n  [../]\n[]\n\n[Kernels]\n  [./mass]\n    type = INSADMass\n    variable = p\n  [../]\n  [./momentum_convection]\n    type = INSADMomentumAdvection\n    variable = velocity\n  [../]\n  [./momentum_viscous]\n    type = INSADMomentumViscous\n    variable = velocity\n  [../]\n  [./momentum_pressure]\n    type = INSADMomentumPressure\n    variable = velocity\n    p = p\n    integrate_p_by_parts = true\n  [../]\n[]\n\n[BCs]\n  [./lid]\n    type = VectorDirichletBC\n    variable = velocity\n    boundary = 'top'\n    values = '0.9230366245217857 0.0 0.0'\n  [../]\n  [./lid1]\n    type = VectorDirichletBC\n    variable = velocity\n    boundary = 'bottom'\n    values = '0.7899782725722422 0.0 0.0'\n  [../]\n  [./lid2]\n    type = VectorDirichletBC\n    variable = velocity\n    boundary = 'left'\n    values = '0.0 1.0585302852469318 0.0'\n  [../]\n  [./lid3]\n    type = VectorDirichletBC\n    variable = velocity\n    boundary = 'right'\n    values = '0.0 1.095891732724342 0.0'\n  [../]\n\n  [./pressure_pin]\n    type = DirichletBC\n    variable = p\n    boundary = 'pinned_node'\n    value = 0.0\n  [../]\n[]\n\n[Materials]\n  [./const]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho mu'\n    prop_values = '1.3488116874005358 0.01615151167914382'\n  [../]\n  [ins_mat]\n    type = INSADMaterial\n    velocity = velocity\n    pressure = p\n  []\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n    solve_type = 'NEWTON'\n  [../]\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'NEWTON'\n  petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n  petsc_options_value = 'lu       superlu_dist'\n  nl_rel_tol = 1e-12\n  nl_max_its = 100\n  l_max_its = 20\n  automatic_scaling = true\n[]\n\n[Postprocessors]\n  [./vel_x]\n    type = PointValue\n    point = '0.5 0.5 0.0'\n    variable = vel_x\n  [../]\n  [./vel_y]\n    type = PointValue\n    point = '0.5 0.5 0.0'\n    variable = vel_y\n  [../]\n[]\n\n[Outputs]\n  file_base = NS\n  exodus = false\n  perf_graph = false\n  csv = true\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/26789#discussioncomment-8443485",
                  "updatedAt": "2024-02-13T01:48:47Z",
                  "publishedAt": "2024-02-12T15:53:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Hi @doquang, your Reynolds number is a bit high for the solver to work effectively without any turbulence modeling. If I use all Dirichlet BCs (and make sure I add the pressure pin), and increase the viscosity to 1 instead of 0.1, then the input you pasted runs fine",
                  "url": "https://github.com/idaholab/moose/discussions/26789#discussioncomment-8445608",
                  "updatedAt": "2024-02-12T18:55:33Z",
                  "publishedAt": "2024-02-12T18:54:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "SidesetInfoVectorPostprocessor with use_displaced_mesh=true",
          "author": {
            "login": "brinkconti"
          },
          "bodyText": "Hi moose community,\nI'm trying to get the bounding box of a sideset and found the \"SidesetInfoVectorPostprocessor\" which reports this as metadata.\nFor the undeformed configuration is works, but when I set \"use_displaced_mesh=true\", than the debug version gives\nAssertion `_boundary_data.find(_current_boundary_id) != _boundary_data.end()' failed\n_current_boundary_id not found in _boundary_data.\nat .../moose/framework/src/vectorpostprocessors/SidesetInfoVectorPostprocessor.C, line 82\n\nand the opt version results in a core dump.\nThis file reproduces the issue:\nsideset_info.i.zip\nShould this actually work or are there different ways to get a bounding box?\nThanks\nMaik",
          "url": "https://github.com/idaholab/moose/discussions/26775",
          "updatedAt": "2024-02-12T08:15:28Z",
          "publishedAt": "2024-02-09T11:56:19Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe easiest way to get a bounding box for a sideset is to run the simulation with --mesh-only on the command line or with show_info = true in a mesh generator.\nOf course neither of these work with displaced meshes, unless you reload the mesh in a FileMeshGenerator after having it displaced\nI ll take a look at the file\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26775#discussioncomment-8420246",
                  "updatedAt": "2024-02-09T15:19:51Z",
                  "publishedAt": "2024-02-09T15:19:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Thank you for reporting the issue. I put up a patch here\n#26780",
                  "url": "https://github.com/idaholab/moose/discussions/26775#discussioncomment-8422434",
                  "updatedAt": "2024-02-09T19:07:32Z",
                  "publishedAt": "2024-02-09T19:07:31Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "brinkconti"
                          },
                          "bodyText": "Thanks you for the quick response and solution!",
                          "url": "https://github.com/idaholab/moose/discussions/26775#discussioncomment-8438408",
                          "updatedAt": "2024-02-12T08:15:24Z",
                          "publishedAt": "2024-02-12T08:15:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Updating MOOSE",
          "author": {
            "login": "klaw13"
          },
          "bodyText": "Hi,\nI have MOOSE installed on two machines: Mac (M1 chip) and a Linux machine (VM) and am having issues updating both. Before updating they worked fine and I'm unsure how to resolve these issues. Any help is appreciated, thanks!\nIssue with Mac version: I fail 4 tests when testing the install of MOOSE and am unsure how to resolve these.\n\nIssue with Linux version: When I try to update conda I get this error. How do I fix this? I tried to revert to an older version, but no matter the version I specify it gives me the same error. I've tried looking in the channels for an active version but could not find anything.",
          "url": "https://github.com/idaholab/moose/discussions/26730",
          "updatedAt": "2024-02-11T21:59:38Z",
          "publishedAt": "2024-02-04T00:02:08Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nOn the mac:\nThese are VTK and IGA (which we support only with a newer version of exodus). They are both rather uncommon so I would move on even with these errors. If you run the diagnostics script in moose/scripts I will create an issue and we can address it later.\nFor linux:\nI think this is an old channel.\nYou need to delete the idaholab channels with conda config --remove  + the idaholab channels\nthen add the new one\nconda config --add channels https://conda.software.inl.gov/public\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26730#discussioncomment-8358120",
                  "updatedAt": "2024-02-04T02:16:16Z",
                  "publishedAt": "2024-02-04T02:16:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Thanks! I was able to resolve the Mac version.\nFor the Linux version though I'm now getting an error when pulling the most recent version of MOOSE. I have no work done in the heat conduction module. My version of MOOSE hasn't been updated since early-mid 2021 if that is helpful information.",
                          "url": "https://github.com/idaholab/moose/discussions/26730#discussioncomment-8363104",
                          "updatedAt": "2024-02-04T20:50:58Z",
                          "publishedAt": "2024-02-04T20:50:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The heat conduction module was renamed to heat transfer.\nYou can try moving that folder into the heat transfer module, git adding that then continuing the rebase",
                          "url": "https://github.com/idaholab/moose/discussions/26730#discussioncomment-8363541",
                          "updatedAt": "2024-02-04T22:21:17Z",
                          "publishedAt": "2024-02-04T22:21:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "That works, thank you so much!",
                          "url": "https://github.com/idaholab/moose/discussions/26730#discussioncomment-8435868",
                          "updatedAt": "2024-02-11T21:59:38Z",
                          "publishedAt": "2024-02-11T21:59:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error when compilling",
          "author": {
            "login": "echo1115"
          },
          "bodyText": "Hi all,\nI have to install a specific version of moose (tag 2023-06-13), so I follow the installation steps in moose website and  made some changes:\nconda create -n moose moose-dev=2023.06.22\nconda activate moose\nmkdir -p ~/projects\ncd ~/projects\ngit clone -b 2023-06-13 https://github.com/idaholab/moose.git\ncd moose\n\nwhen I build moose:\ncd ~/projects/moose/test\nmake -j 6\n\nIt failed and shows:\nCompiling C++ (in opt mode) /home/DengChaoQun/projects/moose/test/build/unity_src/outputs_Unity.C...\nLinking Library /home/DengChaoQun/projects/moose/framework/libmoose-opt.la...\nLinking Library /home/DengChaoQun/projects/moose/test/lib/libmoose_test-opt.la...\nLinking Executable /home/DengChaoQun/projects/moose/test/moose_test-opt...\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/test/src/.libs/main.x86_64-conda-linux-gnu.opt.o: in function `_GLOBAL__sub_I_main.C':\nmain.C:(.text.startup._GLOBAL__sub_I_main.C+0x1a6): undefined reference to `libMesh::PerfLog::PerfLog(std::string, bool)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserADBase<double>::AutoDiff(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `wasp::lsp::RPCStringToObject(std::string const&, wasp::DataObject&, std::ostream&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserBase<double>::AddConstant(std::string const&, double)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserBase<double>::ParseAndDeduceVariables(std::string const&, std::vector<std::string, std::allocator<std::string> >&, bool)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::write_global_data(std::vector<double, std::allocator<double> > const&, std::vector<std::string, std::allocator<std::string> > const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::NonlinearImplicitSystem::NonlinearImplicitSystem(libMesh::EquationSystems&, std::string const&, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `wasp::lsp::buildDocumentSymbolObject(wasp::DataObject&, std::ostream&, std::string const&, std::string const&, int, bool, int, int, int, int, int, int, int, int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `wasp::lsp::objectToRPCString(wasp::DataObject&, std::string&, std::ostream&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `std::string libMesh::Utility::enum_to_string<libMesh::ParallelType>(libMesh::ParallelType)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::PreconditionerType libMesh::Utility::string_to_enum<libMesh::PreconditionerType>(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::Nemesis_IO::read(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserBase<long>::Parse(std::string const&, std::string const&, bool)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::get_elem_var_names()'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `wasp::HITNodeView::path() const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::BoundaryInfo::get_sideset_name(short) const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::BoundaryInfo::nodeset_name(short)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `wasp::lsp::buildDiagnosticObject(wasp::DataObject&, std::ostream&, int, int, int, int, int, std::string const&, std::string const&, std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::write_information_records(std::vector<std::string, std::allocator<std::string> > const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::System::add_variables(std::vector<std::string, std::allocator<std::string> > const&, libMesh::FEType const&, std::set<unsigned short, std::less<unsigned short>, std::allocator<unsigned short> > const*)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserBase<double>::Parse(std::string const&, std::string const&, bool)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::BoundaryInfo::sideset_name(short)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/contrib/hit/libhit-opt.so: undefined reference to `wasp::HITNodeView::first_child_by_name(std::string const&) const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::get_global_var_names()'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::MeshOutput<libMesh::MeshBase>::write_equation_systems(std::string const&, libMesh::EquationSystems const&, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const*)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::copy_scalar_solution(libMesh::System&, std::vector<std::string, std::allocator<std::string> >, std::vector<std::string, std::allocator<std::string> >, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::read(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/contrib/hit/libhit-opt.so: undefined reference to `wasp::HITNodeView::data() const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::CheckpointIO::cleanup(std::string const&, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::BoundaryInfo::get_nodeset_name(short) const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::MeshBase::add_elem_integer(std::string, bool, unsigned long)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::copy_nodal_solution(libMesh::System&, std::string, std::string, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::MeshBase::subdomain_name(unsigned short) const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::write_timestep(std::string const&, libMesh::EquationSystems const&, int, double, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const*)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `std::string libMesh::Utility::enum_to_string<libMesh::FEFamily>(libMesh::FEFamily)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::Nemesis_IO::write_global_data(std::vector<double, std::allocator<double> > const&, std::vector<std::string, std::allocator<std::string> > const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::TransientSystem<libMesh::ExplicitSystem>::TransientSystem(libMesh::EquationSystems&, std::string const&, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `std::string libMesh::Utility::enum_to_string<libMesh::Order>(libMesh::Order)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/test/lib/libmoose_test-opt.so: undefined reference to `libMesh::demangle(char const*)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::Quality::name(libMesh::ElemQuality)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `std::string libMesh::Utility::enum_to_string<libMesh::ElemType>(libMesh::ElemType)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserBase<long>::ParseAndDeduceVariables(std::string const&, std::vector<std::string, std::allocator<std::string> >&, bool)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::write_timestep_discontinuous(std::string const&, libMesh::EquationSystems const&, int, double, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const*)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::copy_elemental_solution(libMesh::System&, std::string, std::string, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::MeshBase::get_info(unsigned int, bool) const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::RadialBasisInterpolation<3u, libMesh::WendlandRBF<3u, 2u> >::interpolate_field_data(std::vector<std::string, std::allocator<std::string> > const&, std::vector<libMesh::Point, std::allocator<libMesh::Point> > const&, std::vector<double, std::allocator<double> >&) const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `wasp::Value::operator[](std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ElemType libMesh::Utility::string_to_enum<libMesh::ElemType>(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserADBase<double>::JITCompileHelper(std::string const&, std::string const&, std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/contrib/hit/libhit-opt.so: undefined reference to `wasp::dir_name(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/test/lib/libmoose_test-opt.so: undefined reference to `libMesh::Order libMesh::Utility::string_to_enum<libMesh::Order>(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::LinearImplicitSystem::LinearImplicitSystem(libMesh::EquationSystems&, std::string const&, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `wasp::DataObject::operator[](std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::Nemesis_IO::write_timestep(std::string const&, libMesh::EquationSystems const&, int, double)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::Nemesis_IO::write(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::set_output_variables(std::vector<std::string, std::allocator<std::string> > const&, bool)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `TIMPI::Communicator::sync_type(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::EigenSystem::EigenSystem(libMesh::EquationSystems&, std::string const&, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::FEFamily libMesh::Utility::string_to_enum<libMesh::FEFamily>(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserADBase<double>::RegisterDerivative(std::string const&, std::string const&, std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::MeshfreeInterpolation::add_field_data(std::vector<std::string, std::allocator<std::string> > const&, std::vector<libMesh::Point, std::allocator<libMesh::Point> > const&, std::vector<double, std::allocator<double> > const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::set_extra_integer_vars(std::vector<std::string, std::allocator<std::string> > const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::System::attach_assemble_function(void (*)(libMesh::EquationSystems&, std::string const&))'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::PetscVector<double>::print_matlab(std::string const&) const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/contrib/hit/libhit-opt.so: undefined reference to `wasp::file_exists(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::PerfLog::get_perf_info() const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExplicitSystem::ExplicitSystem(libMesh::EquationSystems&, std::string const&, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::MeshBase::subdomain_name(unsigned short)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::ExodusII_IO::get_nodal_var_names()'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::CheckpointIO::write(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `FunctionParserADBase<double>::AddVariable(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::TransientSystem<libMesh::NonlinearImplicitSystem>::TransientSystem(libMesh::EquationSystems&, std::string const&, unsigned int)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::InverseDistanceInterpolation<3u>::interpolate_field_data(std::vector<std::string, std::allocator<std::string> > const&, std::vector<libMesh::Point, std::allocator<libMesh::Point> > const&, std::vector<double, std::allocator<double> >&) const'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/contrib/hit/libhit-opt.so: undefined reference to `wasp::strip_quotes(std::string const&)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/framework/libmoose-opt.so: undefined reference to `libMesh::Nemesis_IO::set_output_variables(std::vector<std::string, std::allocator<std::string> > const&, bool)'\n/opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld: /home/DengChaoQun/projects/moose/test/lib/libmoose_test-opt.so: undefined reference to `libMesh::ExodusII_IO::write(std::string const&)'\ncollect2: error: ld returned 1 exit status\nmake: *** [/home/DengChaoQun/projects/moose/framework/app.mk:442: /home/DengChaoQun/projects/moose/test/moose_test-opt] Error 1\n\nI also tried git clean -xfd  but not succeed.\nMy mpich version:\n(moose) [DengChaoQun@node01 test]$ mpichversion\nMPICH Version:          4.0.2\nMPICH Release date:     Thu Apr  7 12:34:45 CDT 2022\nMPICH Device:           ch4:ofi\nMPICH configure:        --prefix=/home/DengChaoQun/mpich-4.0.2/install\nMPICH CC:       gcc    -O2\nMPICH CXX:      g++   -O2\nMPICH F77:      gfortran   -O2\nMPICH FC:       gfortran   -O2\nMPICH Custom Information:\n\ngcc versoin:\n(moose) [DengChaoQun@node01 test]$ gcc --version\ngcc (GCC) 9.3.1 20200408 (Red Hat 9.3.1-2)\nCopyright (C) 2019 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nconda list:\n# packages in environment at /home/DengChaoQun/miniforge/envs/moose:\n#\n# Name                    Version                   Build  Channel\n_libgcc_mutex             0.1                 conda_forge    conda-forge\n_openmp_mutex             4.5                       2_gnu    conda-forge\n_sysroot_linux-64_curr_repodata_hack 3                   h69a702a_13    conda-forge\nalsa-lib                  1.2.8                h166bdaf_0    conda-forge\naom                       3.5.0                h27087fc_0    conda-forge\nastroid                   3.0.2           py310hff52083_0    conda-forge\natk-1.0                   2.38.0               hd4edc92_1    conda-forge\nattr                      2.5.1                h166bdaf_1    conda-forge\nautoconf                  2.71            pl5321h2b4cb7a_1    conda-forge\nautomake                  1.16.1          pl5320ha770c72_1004    conda-forge\nbeautifulsoup4            4.12.3             pyha770c72_0    conda-forge\nbinutils_impl_linux-64    2.39                 he00db2b_1    conda-forge\nbinutils_linux-64         2.39                h5fc0e48_13    conda-forge\nblosc                     1.21.4               h0f2a231_0    conda-forge\nbrotli                    1.0.9                h166bdaf_9    conda-forge\nbrotli-bin                1.0.9                h166bdaf_9    conda-forge\nbrotli-python             1.0.9           py310hd8f1fbe_9    conda-forge\nbrunsli                   0.1                  h9c3ff4c_0    conda-forge\nbzip2                     1.0.8                h7f98852_4    conda-forge\nc-ares                    1.18.1               h7f98852_0    conda-forge\nc-blosc2                  2.10.2               hb4ffafa_0    conda-forge\nca-certificates           2023.5.7             hbcca054_0    conda-forge\ncairo                     1.16.0            ha61ee94_1014    conda-forge\ncertifi                   2023.11.17         pyhd8ed1ab_0    conda-forge\ncfitsio                   4.2.0                hd9d235c_0    conda-forge\ncharls                    2.4.2                h59595ed_0    conda-forge\ncharset-normalizer        3.3.2              pyhd8ed1ab_0    conda-forge\nclang                     12.0.1               ha770c72_0    conda-forge\nclang-12                  12.0.1          default_ha53f305_0    conda-forge\nclang-tools               12.0.1          default_ha53f305_0    conda-forge\nclangxx                   12.0.1          default_ha53f305_0    conda-forge\nclick                     8.1.7           unix_pyh707e725_0    conda-forge\ncmake                     3.25.2               h077f3f9_0    conda-forge\ncolorama                  0.4.6              pyhd8ed1ab_0    conda-forge\ncontourpy                 1.2.0           py310hd41b1e2_0    conda-forge\ncycler                    0.12.1             pyhd8ed1ab_0    conda-forge\ndav1d                     1.2.1                hd590300_0    conda-forge\ndbus                      1.13.6               h5008d03_3    conda-forge\ndeepdiff                  6.7.1              pyhd8ed1ab_0    conda-forge\ndill                      0.3.8              pyhd8ed1ab_0    conda-forge\nexpat                     2.5.0                hcb278e6_1    conda-forge\nfftw                      3.3.10          nompi_hc118613_108    conda-forge\nfont-ttf-dejavu-sans-mono 2.37                 hab24e00_0    conda-forge\nfont-ttf-inconsolata      3.000                h77eed37_0    conda-forge\nfont-ttf-source-code-pro  2.038                h77eed37_0    conda-forge\nfont-ttf-ubuntu           0.83                 h77eed37_1    conda-forge\nfontconfig                2.14.2               h14ed4e7_0    conda-forge\nfonts-conda-ecosystem     1                             0    conda-forge\nfonts-conda-forge         1                             0    conda-forge\nfonttools                 4.47.2          py310h2372a71_0    conda-forge\nfreetype                  2.12.1               h267a509_2    conda-forge\nfribidi                   1.0.10               h36c2ea0_0    conda-forge\ngcc_impl_linux-64         10.4.0              h5231bdf_19    conda-forge\ngcc_linux-64              10.4.0              h9215b83_13    conda-forge\ngdk-pixbuf                2.42.10              h05c8ddd_0    conda-forge\ngettext                   0.21.1               h27087fc_0    conda-forge\ngfortran_impl_linux-64    10.4.0              h7d168d2_19    conda-forge\ngfortran_linux-64         10.4.0              h69d5af5_13    conda-forge\ngiflib                    5.2.1                h0b41bf4_3    conda-forge\ngitdb                     4.0.11             pyhd8ed1ab_0    conda-forge\ngitpython                 3.1.41             pyhd8ed1ab_0    conda-forge\nglib                      2.78.3               hfc55251_0    conda-forge\nglib-tools                2.78.3               hfc55251_0    conda-forge\ngmp                       6.3.0                h59595ed_0    conda-forge\ngmpy2                     2.1.2           py310h3ec546c_1    conda-forge\ngraphite2                 1.3.13            h58526e2_1001    conda-forge\ngraphviz                  7.1.0                h2e5815a_0    conda-forge\ngst-plugins-base          1.21.3               h4243ec0_1    conda-forge\ngstreamer                 1.21.3               h25f0c4b_1    conda-forge\ngstreamer-orc             0.4.36               hd590300_0    conda-forge\ngtk2                      2.24.33              h90689f9_2    conda-forge\ngts                       0.7.6                h977cf35_4    conda-forge\ngxx_impl_linux-64         10.4.0              h5231bdf_19    conda-forge\ngxx_linux-64              10.4.0              h6e491c6_13    conda-forge\nharfbuzz                  6.0.0                h8e241bc_0    conda-forge\nhdf5                      1.12.1          mpi_mpich_h08b82f9_4    conda-forge\nicu                       70.1                 h27087fc_0    conda-forge\nidna                      3.6                pyhd8ed1ab_0    conda-forge\nimagecodecs               2023.1.23       py310ha3ed6a1_0    conda-forge\nimageio                   2.33.1             pyh8c1a49c_0    conda-forge\nimportlib-metadata        7.0.1              pyha770c72_0    conda-forge\nisort                     5.13.2             pyhd8ed1ab_0    conda-forge\njack                      1.9.22               h11f4161_0    conda-forge\njinja2                    3.1.3              pyhd8ed1ab_0    conda-forge\njpeg                      9e                   h0b41bf4_3    conda-forge\njxrlib                    1.1                  hd590300_3    conda-forge\nkernel-headers_linux-64   3.10.0              h4a8ded7_13    conda-forge\nkeyutils                  1.6.1                h166bdaf_0    conda-forge\nkiwisolver                1.4.5           py310hd41b1e2_1    conda-forge\nkrb5                      1.20.1               hf9c8cef_0    conda-forge\nlame                      3.100             h166bdaf_1003    conda-forge\nlatexcodec                2.0.1              pyh9f0ad1d_0    conda-forge\nlazy_loader               0.3                pyhd8ed1ab_0    conda-forge\nlcms2                     2.15                 hfd0df8a_0    conda-forge\nld_impl_linux-64          2.39                 hcc3a1bd_1    conda-forge\nlerc                      4.0.0                h27087fc_0    conda-forge\nlibaec                    1.1.2                h59595ed_1    conda-forge\nlibavif                   0.11.1               h8182462_2    conda-forge\nlibblas                   3.9.0           17_linux64_openblas    conda-forge\nlibbrotlicommon           1.0.9                h166bdaf_9    conda-forge\nlibbrotlidec              1.0.9                h166bdaf_9    conda-forge\nlibbrotlienc              1.0.9                h166bdaf_9    conda-forge\nlibcap                    2.66                 ha37c62d_0    conda-forge\nlibcblas                  3.9.0           17_linux64_openblas    conda-forge\nlibclang                  15.0.7          default_hb11cfb5_4    conda-forge\nlibclang-cpp12            12.0.1          default_ha53f305_4    conda-forge\nlibclang13                15.0.7          default_ha2b6cf4_4    conda-forge\nlibcups                   2.3.3                h36d4200_3    conda-forge\nlibcurl                   7.87.0               h6312ad2_0    conda-forge\nlibdb                     6.2.32               h9c3ff4c_0    conda-forge\nlibdeflate                1.17                 h0b41bf4_0    conda-forge\nlibdrm-cos7-x86_64        2.4.97            h9b0a68f_1105    conda-forge\nlibedit                   3.1.20191231         he28a2e2_2    conda-forge\nlibev                     4.33                 h516909a_1    conda-forge\nlibevent                  2.1.10               h9b69904_4    conda-forge\nlibexpat                  2.5.0                hcb278e6_1    conda-forge\nlibffi                    3.4.2                h7f98852_5    conda-forge\nlibflac                   1.4.3                h59595ed_0    conda-forge\nlibgcc-devel_linux-64     10.4.0              hd38fd1e_19    conda-forge\nlibgcc-ng                 12.2.0              h65d4601_19    conda-forge\nlibgcrypt                 1.10.3               hd590300_0    conda-forge\nlibgd                     2.3.3                h5aea950_4    conda-forge\nlibgfortran-ng            12.1.0              h69a702a_16    conda-forge\nlibgfortran5              12.1.0              hdcd56e2_16    conda-forge\nlibglib                   2.78.3               h783c2da_0    conda-forge\nlibglu                    9.0.0             he1b5a44_1001    conda-forge\nlibglvnd-cos7-x86_64      1.0.1             h9b0a68f_1105    conda-forge\nlibglvnd-glx-cos7-x86_64  1.0.1             h9b0a68f_1105    conda-forge\nlibgomp                   12.2.0              h65d4601_19    conda-forge\nlibgpg-error              1.47                 h71f35ed_0    conda-forge\nlibice-cos7-x86_64        1.0.9             h9b0a68f_1105    conda-forge\nlibice-devel-cos7-x86_64  1.0.9             h9b0a68f_1105    conda-forge\nlibiconv                  1.17                 hd590300_2    conda-forge\nliblapack                 3.9.0           17_linux64_openblas    conda-forge\nlibllvm12                 12.0.1               hf817b99_2    conda-forge\nlibllvm15                 15.0.7               hadd5161_1    conda-forge\nlibnghttp2                1.51.0               hdcd2b5c_0    conda-forge\nlibnsl                    2.0.0                h7f98852_0    conda-forge\nlibogg                    1.3.4                h7f98852_1    conda-forge\nlibopenblas               0.3.23          pthreads_h80387f5_0    conda-forge\nlibopus                   1.3.1                h7f98852_1    conda-forge\nlibpng                    1.6.42               h2797004_0    conda-forge\nlibpq                     15.1                 h2baec63_3    conda-forge\nlibrsvg                   2.54.4               h7abd40a_0    conda-forge\nlibsanitizer              10.4.0              h5246dfb_19    conda-forge\nlibsm-cos7-x86_64         1.2.2             h9b0a68f_1105    conda-forge\nlibsm-devel-cos7-x86_64   1.2.2             h9b0a68f_1105    conda-forge\nlibsndfile                1.2.2                hc60ed4a_1    conda-forge\nlibsqlite                 3.44.2               h2797004_0    conda-forge\nlibssh2                   1.10.0               haa6b8db_3    conda-forge\nlibstdcxx-devel_linux-64  10.4.0              hd38fd1e_19    conda-forge\nlibstdcxx-ng              12.2.0              h46fd767_19    conda-forge\nlibsystemd0               252                  h2a991cd_0    conda-forge\nlibtiff                   4.5.0                h6adf6a1_2    conda-forge\nlibtool                   2.4.7                h27087fc_0    conda-forge\nlibudev1                  253                  h0b41bf4_0    conda-forge\nlibuuid                   2.38.1               h0b41bf4_0    conda-forge\nlibuv                     1.44.2               h166bdaf_0    conda-forge\nlibvorbis                 1.3.7                h9c3ff4c_0    conda-forge\nlibwebp                   1.2.4                h1daa5a0_1    conda-forge\nlibwebp-base              1.2.4                h166bdaf_0    conda-forge\nlibx11-common-cos7-x86_64 1.6.7             h9b0a68f_1105    conda-forge\nlibx11-cos7-x86_64        1.6.7             h9b0a68f_1105    conda-forge\nlibx11-devel-cos7-x86_64  1.6.7             h9b0a68f_1105    conda-forge\nlibxcb                    1.13              h7f98852_1004    conda-forge\nlibxext-cos7-x86_64       1.3.3             h9b0a68f_1105    conda-forge\nlibxext-devel-cos7-x86_64 1.3.3             h9b0a68f_1105    conda-forge\nlibxkbcommon              1.5.0                h79f4944_1    conda-forge\nlibxml2                   2.10.3               hca2bb57_4    conda-forge\nlibxslt                   1.1.37               h873f0b0_0    conda-forge\nlibxt-cos7-x86_64         1.1.5             h9b0a68f_1105    conda-forge\nlibxt-devel-cos7-x86_64   1.1.5             h9b0a68f_1105    conda-forge\nlibzlib                   1.2.13               h166bdaf_4    conda-forge\nlibzopfli                 1.0.3                h9c3ff4c_0    conda-forge\nlivereload                2.6.3              pyh9f0ad1d_0    conda-forge\nlxml                      4.9.2           py310hbdc0903_0    conda-forge\nlz4-c                     1.9.4                hcb278e6_0    conda-forge\nm4                        1.4.18            h516909a_1001    conda-forge\nmake                      4.3                  hd18ef5c_1    conda-forge\nmako                      1.3.2              pyhd8ed1ab_0    conda-forge\nmarkupsafe                2.1.4           py310h2372a71_0    conda-forge\nmatplotlib                3.8.2           py310hff52083_0    conda-forge\nmatplotlib-base           3.8.2           py310h62c0568_0    conda-forge\nmccabe                    0.7.0              pyhd8ed1ab_0    conda-forge\nmesa-khr-devel-cos7-x86_64 18.3.4            h9b0a68f_1105    conda-forge\nmesa-libgl-cos7-x86_64    18.3.4            h9b0a68f_1105    conda-forge\nmesa-libgl-devel-cos7-x86_64 18.3.4            h9b0a68f_1105    conda-forge\nmesa-libglapi-cos7-x86_64 18.3.4            h9b0a68f_1105    conda-forge\nmesalib                   18.3.1               h590aaf7_0    conda-forge\nmock                      5.1.0              pyhd8ed1ab_0    conda-forge\nmoose-dev                 2023.06.22              build_0    https://conda.software.inl.gov/public\nmoose-libmesh             2023.06.19              build_0    https://conda.software.inl.gov/public\nmoose-libmesh-vtk         9.2.6                hfa5b6f9_1    https://conda.software.inl.gov/public\nmoose-mpich               4.0.2                   build_8    https://conda.software.inl.gov/public\nmoose-petsc               3.16.6                  build_8    https://conda.software.inl.gov/public\nmoose-test-tools          2023.08.31      py310h0c21752_0    https://conda.software.inl.gov/public\nmoose-tools               2023.05.12      py310h0c21752_0    https://conda.software.inl.gov/public\nmoose-wasp                2023.05.01              build_0    https://conda.software.inl.gov/public\nmpc                       1.3.1                hfe3b2da_0    conda-forge\nmpfr                      4.2.1                h9458935_0    conda-forge\nmpg123                    1.32.4               h59595ed_0    conda-forge\nmpi                       1.0                       mpich    conda-forge\nmpich                     4.0.2              h846660c_100    conda-forge\nmpich-mpicc               4.0.2              hb600da9_100    conda-forge\nmpich-mpicxx              4.0.2              h166bdaf_100    conda-forge\nmpich-mpifort             4.0.2              h924138e_100    conda-forge\nmpmath                    1.3.0              pyhd8ed1ab_0    conda-forge\nmunkres                   1.1.4              pyh9f0ad1d_0    conda-forge\nmysql-common              8.0.32               h14678bc_0    conda-forge\nmysql-libs                8.0.32               h54cf53e_0    conda-forge\nncurses                   6.3                  h27087fc_1    conda-forge\nnetworkx                  3.2.1              pyhd8ed1ab_0    conda-forge\nnspr                      4.35                 h27087fc_0    conda-forge\nnss                       3.97                 h1d7d5a4_0    conda-forge\nnumpy                     1.26.3          py310hb13e2d6_0    conda-forge\nopenjpeg                  2.5.0                hfec8fc6_2    conda-forge\nopenssl                   1.1.1t               h0b41bf4_0    conda-forge\nordered-set               4.1.0              pyhd8ed1ab_0    conda-forge\norjson                    3.9.10          py310h1e2579a_0    conda-forge\npackaging                 23.2               pyhd8ed1ab_0    conda-forge\npandas                    2.2.0           py310hcc13569_0    conda-forge\npango                     1.50.14              hd33c08f_0    conda-forge\npcre2                     10.42                hcad00b1_0    conda-forge\nperl                      5.32.1          2_h7f98852_perl5    conda-forge\npillow                    9.4.0           py310h023d228_1    conda-forge\npip                       23.3.2             pyhd8ed1ab_0    conda-forge\npixman                    0.43.2               h59595ed_0    conda-forge\npkg-config                0.29.2            h36c2ea0_1008    conda-forge\nplatformdirs              4.2.0              pyhd8ed1ab_0    conda-forge\nply                       3.11                       py_1    conda-forge\npooch                     1.8.0              pyhd8ed1ab_0    conda-forge\npsycopg2                  2.9.3           py310h416cc33_2    conda-forge\npthread-stubs             0.4               h36c2ea0_1001    conda-forge\npulseaudio                16.1                 h4ab2085_1    conda-forge\npybtex                    0.24.0             pyhd8ed1ab_2    conda-forge\npycobertura               3.3.0              pyhd8ed1ab_0    conda-forge\npyflakes                  3.2.0              pyhd8ed1ab_0    conda-forge\npylatexenc                2.10               pyhd8ed1ab_0    conda-forge\npylint                    3.0.3              pyhd8ed1ab_0    conda-forge\npyparsing                 3.1.1              pyhd8ed1ab_0    conda-forge\npyqt                      5.15.7          py310hab646b1_3    conda-forge\npyqt5-sip                 12.11.0         py310heca2aa9_3    conda-forge\npysocks                   1.7.1              pyha2e5f31_6    conda-forge\npython                    3.10.8          h257c98d_0_cpython    conda-forge\npython-dateutil           2.8.2              pyhd8ed1ab_0    conda-forge\npython-tzdata             2023.4             pyhd8ed1ab_0    conda-forge\npython_abi                3.10                    4_cp310    conda-forge\npytz                      2023.4             pyhd8ed1ab_0    conda-forge\npywavelets                1.4.1           py310h1f7b6fc_1    conda-forge\npyyaml                    6.0.1           py310h2372a71_1    conda-forge\nqt-main                   5.15.6               h18908ee_6    conda-forge\nreadline                  8.2                  h8228510_1    conda-forge\nrequests                  2.31.0             pyhd8ed1ab_0    conda-forge\nrhash                     1.4.3                h166bdaf_0    conda-forge\nruamel.yaml               0.18.5          py310h2372a71_0    conda-forge\nruamel.yaml.clib          0.2.7           py310h2372a71_2    conda-forge\nscikit-image              0.22.0          py310hcc13569_2    conda-forge\nscipy                     1.10.1          py310h8deb116_2    conda-forge\nsetuptools                59.8.0          py310hff52083_1    conda-forge\nsip                       6.7.12          py310hc6cd4ac_0    conda-forge\nsix                       1.16.0             pyh6c4a22f_0    conda-forge\nsmmap                     5.0.0              pyhd8ed1ab_0    conda-forge\nsnappy                    1.1.10               h9fff704_0    conda-forge\nsoupsieve                 2.5                pyhd8ed1ab_1    conda-forge\nsympy                     1.12            pypyh9d50eac_103    conda-forge\nsysroot_linux-64          2.17                h4a8ded7_13    conda-forge\ntabulate                  0.9.0              pyhd8ed1ab_1    conda-forge\ntifffile                  2023.8.12          pyhd8ed1ab_0    conda-forge\ntk                        8.6.13          noxft_h4845f30_101    conda-forge\ntoml                      0.10.2             pyhd8ed1ab_0    conda-forge\ntomli                     2.0.1              pyhd8ed1ab_0    conda-forge\ntomlkit                   0.12.3             pyha770c72_0    conda-forge\ntornado                   6.3.3           py310h2372a71_1    conda-forge\ntyping-extensions         4.9.0                hd8ed1ab_0    conda-forge\ntyping_extensions         4.9.0              pyha770c72_0    conda-forge\ntzdata                    2023d                h0c530f3_0    conda-forge\nunicodedata2              15.1.0          py310h2372a71_0    conda-forge\nurllib3                   2.2.0              pyhd8ed1ab_0    conda-forge\nwheel                     0.42.0             pyhd8ed1ab_0    conda-forge\nxcb-util                  0.4.0                h516909a_0    conda-forge\nxcb-util-image            0.4.0                h166bdaf_0    conda-forge\nxcb-util-keysyms          0.4.0                h516909a_0    conda-forge\nxcb-util-renderutil       0.3.9                h166bdaf_0    conda-forge\nxcb-util-wm               0.4.1                h516909a_0    conda-forge\nxkeyboard-config          2.38                 h0b41bf4_0    conda-forge\nxmltodict                 0.13.0             pyhd8ed1ab_0    conda-forge\nxorg-kbproto              1.0.7             h7f98852_1002    conda-forge\nxorg-libice               1.1.1                hd590300_0    conda-forge\nxorg-libsm                1.2.4                h7391055_0    conda-forge\nxorg-libx11               1.8.4                h0b41bf4_0    conda-forge\nxorg-libxau               1.0.11               hd590300_0    conda-forge\nxorg-libxdmcp             1.1.3                h7f98852_0    conda-forge\nxorg-libxext              1.3.4                h0b41bf4_2    conda-forge\nxorg-libxrender           0.9.10            h7f98852_1003    conda-forge\nxorg-renderproto          0.11.1            h7f98852_1002    conda-forge\nxorg-x11-proto-devel-cos7-x86_64 2018.4            h9b0a68f_1105    conda-forge\nxorg-xextproto            7.3.0             h0b41bf4_1003    conda-forge\nxorg-xproto               7.0.31            h7f98852_1007    conda-forge\nxz                        5.2.6                h166bdaf_0    conda-forge\nyaml                      0.2.5                h7f98852_2    conda-forge\nzfp                       1.0.1                h59595ed_0    conda-forge\nzipp                      3.17.0             pyhd8ed1ab_0    conda-forge\nzlib                      1.2.13               h166bdaf_4    conda-forge\nzlib-ng                   2.0.7                h0b41bf4_0    conda-forge\nzstd                      1.5.2                h3eb15da_6    conda-forge",
          "url": "https://github.com/idaholab/moose/discussions/26726",
          "updatedAt": "2024-02-11T03:31:59Z",
          "publishedAt": "2024-02-03T06:50:07Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe errors point to mismatched versions between moose and the wasp and libmesh packages.\nFrom the mamba list you do have packages for these two that are older and should match.\nThere should be a file in the moose folder that keeps track of the version of these packages that you should have. I can't recall the name right now but you should be able to find it with grep\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26726#discussioncomment-8355852",
                  "updatedAt": "2024-02-03T16:34:29Z",
                  "publishedAt": "2024-02-03T16:34:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Here is the info of wasp and libmesh by running versioner.py :\ninstall: moose-wasp=2023.05.01=build_0\ninstall: moose-libmesh=2023.04.19=build_1\n\nI am not sure they're a match for the specific version of moose (tag 2023-06-13).\nActurally, I have tried installed a later version of gcc (gcc 13.1.0.), and the error is gone.",
                          "url": "https://github.com/idaholab/moose/discussions/26726#discussioncomment-8365694",
                          "updatedAt": "2024-02-05T05:45:26Z",
                          "publishedAt": "2024-02-05T05:45:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Running moose/scripts/versioner.py is indeed the sure tell way of identifying the versions of moose-$$$$$ packages you need to install.\nBecause you are after an install built ~half a year ago, there is no trackable moose-dev Conda package (we were not doing that up until more recently). Instead, you will want to install those two package versions you listed. Those are indeed the right versions, and is not a mistake.\nBecause Conda is good at solving dependencies, you can do:\nconda install moose-libmesh=2023.04.19=build_1 moose-dev\nand it will grab the compatible moose-dev built for this version of moose-libmesh, and thus everything else this version of moose-dev would install, all at the correct dates/builds:\n    moose-dev-2023.06.07       |          build_0           3 KB  https://conda.software.inl.gov/public\n    moose-libmesh-2023.04.19   |          build_1        35.7 MB  https://conda.software.inl.gov/public\n    moose-libmesh-vtk-9.2.6    |       hb552863_1        29.7 MB  https://conda.software.inl.gov/public\n    moose-mpich-4.0.2          |          build_8           7 KB  https://conda.software.inl.gov/public\n    moose-petsc-3.16.6         |          build_8        23.6 MB  https://conda.software.inl.gov/public\n    moose-test-tools-2023.08.31|  py310h39238f2_0           4 KB  https://conda.software.inl.gov/public\n    moose-tools-2023.05.12     |  py310h39238f2_0           4 KB  https://conda.software.inl.gov/public\n    moose-wasp-2023.05.01      |          build_0         639 KB  https://conda.software.inl.gov/public",
                          "url": "https://github.com/idaholab/moose/discussions/26726#discussioncomment-8371247",
                          "updatedAt": "2024-02-05T14:54:36Z",
                          "publishedAt": "2024-02-05T14:54:35Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "@milljm Thanks for your reply. It's helpful!",
                          "url": "https://github.com/idaholab/moose/discussions/26726#discussioncomment-8373237",
                          "updatedAt": "2024-02-05T17:30:20Z",
                          "publishedAt": "2024-02-05T17:30:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Additionally, I'd like to inquire about the paths (bin) of gcc and mpich   after installing moose using conda and activating the moose environment",
                          "url": "https://github.com/idaholab/moose/discussions/26726#discussioncomment-8378855",
                          "updatedAt": "2024-02-06T07:05:36Z",
                          "publishedAt": "2024-02-06T07:05:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Activation scripts in Conda are found in:\nconda activate moose\ncd $CONDA_PREFIX/etc/conda/activate.d/\nSpecifically the moose-mpich package is located here:\nconda activate moose\ncat $CONDA_PREFIX/etc/conda/activate.d/activate_moose-mpich.sh\nWe set CC, CXX, etc, which point to Conda's MPICH MPI wrapper. The wrapper will then point to the compiler. You can ask the MPI wrapper about what compiler it will 'wrap' to by supplying the -show argument:\nmpicc -show\nx86_64-conda-linux-gnu-cc ...\nAs you will see, it is not simply gcc. It will be a special name set by the Conda-Forge developers. I suspect they did this to prevent accidental usage of the system compiler gcc.\nwhich x86_64-conda-linux-gnu-cc\n~/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-cc",
                          "url": "https://github.com/idaholab/moose/discussions/26726#discussioncomment-8384685",
                          "updatedAt": "2024-02-06T16:15:28Z",
                          "publishedAt": "2024-02-06T16:15:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Thank you for your detailed reply!",
                          "url": "https://github.com/idaholab/moose/discussions/26726#discussioncomment-8430821",
                          "updatedAt": "2024-02-11T03:31:05Z",
                          "publishedAt": "2024-02-11T03:31:04Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "std::cout on MOOSE",
          "author": {
            "login": "styyokuda"
          },
          "bodyText": "All,\nI am using a PenaltyInterfaceDiffusion type of an object at an interface. I am trying to see the fluctuations of value using \u201cstd::cout << \u201c time = \u201c << _t << \u201c u_value = \u201c << u_value << std::endl;\u201d\nwhere \u201cu_value \u201c is the variable name of interest here.\nThen, I get like:\ntime = 100 u_value = (-3.62547e-06,{})\n.\n.\ntime = 100 u_value = (0.454298,{(7494,3.90874e-11), (7497,1160.03), (7704,1.45876e-10), (7707,4329.28), (16830,0), (16831,-2.50755e-05), (16836,0), (16837,-9.35832e-05)})\n.\n.\n\u201ctime = 100 u_value = (-3.62547e-06,{})\u201d seems that u_value = -3.62547e-06 at time = 100.\nWhat about\ntime = 100 u_value = (0.454298,{(7494,3.90874e-11), (7497,1160.03), (7704,1.45876e-10), (7707,4329.28), (16830,0), (16831,-2.50755e-05), (16836,0), (16837,-9.35832e-05)})?\nAre 7494, 7497, 7704, 7707, 16830, 16831, 16836, 16837 the quadrature point index?\nMy model is 2D and why 8 points?\nWhat are the values to the right of these?\nPlease help.\nS. Thomas",
          "url": "https://github.com/idaholab/moose/discussions/26785",
          "updatedAt": "2024-02-10T23:27:07Z",
          "publishedAt": "2024-02-10T02:16:08Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNo these are the automatic differentiation indices. They are actually the derivatives of the value with regards to rhe degrees of freedom, and the indices (the big integers because they are global indices) of these dofs\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26785#discussioncomment-8425002",
                  "updatedAt": "2024-02-10T02:59:13Z",
                  "publishedAt": "2024-02-10T02:59:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "styyokuda"
                          },
                          "bodyText": "Thank you very much, Guillaume , as always.\nSo, u_value = -3.62547e-06 for the first one, and u_value = 0.454298  for the second one are the values I have, aren't they?\nPlease confirm.\nS. Thomas",
                          "url": "https://github.com/idaholab/moose/discussions/26785#discussioncomment-8429814",
                          "updatedAt": "2024-02-10T21:35:54Z",
                          "publishedAt": "2024-02-10T21:35:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "exactly",
                          "url": "https://github.com/idaholab/moose/discussions/26785#discussioncomment-8429892",
                          "updatedAt": "2024-02-10T21:54:24Z",
                          "publishedAt": "2024-02-10T21:54:23Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}