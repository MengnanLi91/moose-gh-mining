{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0xMi0yOFQxNTo1NTo0OS0wNjowMM4ARbjB"
    },
    "edges": [
      {
        "node": {
          "title": "Error: ModuleNotFoundError: No module named 'PyQt5'",
          "author": {
            "login": "ykzhu2019"
          },
          "bodyText": "Error popped out when I was trying to run peacock in the example ex01_inputfile in moose directory. Error:\nError: ModuleNotFoundError: No module named 'PyQt5'\nI tried to run \"conda install -c anaconda pyqt\" but it did not help...\nAny suggestions would be appreciated.\nThanks.",
          "url": "https://github.com/idaholab/moose/discussions/22858",
          "updatedAt": "2023-01-03T22:33:24Z",
          "publishedAt": "2022-12-03T01:23:15Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nwhat do you mean it did not help? Did it not install it? What does mamba list say for pyqt?\nyou can also have try conda install pyqt5\nwhat does \u2018which Python\u2019 return?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22858#discussioncomment-4297439",
                  "updatedAt": "2022-12-03T04:57:46Z",
                  "publishedAt": "2022-12-03T04:57:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ykzhu2019"
                          },
                          "bodyText": "I ran which python and conda install pyqt5. There is an issue\n\"PackagesNotFoundError: The following packages are not available from current channels\" .\nSee below:\n(moose) ykzhu@MacBook-Pro ~ % which Python\n/Users/ykzhu/mambaforge3/envs/moose/bin/Python\n(moose) ykzhu@MacBook-Pro ~ %\n(moose) ykzhu@MacBook-Pro ~ % conda install pyqt5\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\nCollecting package metadata (repodata.json): done\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\nPackagesNotFoundError: The following packages are not available from current channels:\n\npyqt5\n\nCurrent channels:\n\nhttps://conda.software.inl.gov/public/osx-arm64\nhttps://conda.software.inl.gov/public/noarch\nhttps://conda.anaconda.org/conda-forge/osx-arm64\nhttps://conda.anaconda.org/conda-forge/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\nhttps://anaconda.org\n\nand use the search bar at the top of the page.\n(moose) ykzhu@MacBook-Pro ~ %",
                          "url": "https://github.com/idaholab/moose/discussions/22858#discussioncomment-4297660",
                          "updatedAt": "2022-12-03T07:13:41Z",
                          "publishedAt": "2022-12-03T07:13:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok I just checked and indeed you wont be able to run peacock in the same conda environment as moose.\nYou need to create new one and install the moose-peacock package there\nSee this answer for similar conclusions\n#22718 (reply in thread)\nAnd this answer for the solution\n#21606 (reply in thread)",
                          "url": "https://github.com/idaholab/moose/discussions/22858#discussioncomment-4299347",
                          "updatedAt": "2022-12-03T15:41:13Z",
                          "publishedAt": "2022-12-03T15:41:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ykzhu2019"
                          },
                          "bodyText": "Thanks. I will try that.",
                          "url": "https://github.com/idaholab/moose/discussions/22858#discussioncomment-4310158",
                          "updatedAt": "2022-12-05T06:10:45Z",
                          "publishedAt": "2022-12-05T06:10:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Problems of Peacock on Centos 7",
          "author": {
            "login": "Ofinal"
          },
          "bodyText": "Hello, i used the ' mamba create -n peacock python=3.10' command to create a separate environment for 'peacock' on CentOS 7, but then my screen showed \"nothing provides requested moose -peacock\" when i typed the 'mamba install moose-peacock' into the terminal. I wanna know how to install peacock on a separate environment created by mamba.\nThank you for your replying!\nBest Regards",
          "url": "https://github.com/idaholab/moose/discussions/22718",
          "updatedAt": "2022-12-28T23:45:04Z",
          "publishedAt": "2022-11-16T08:10:03Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Ofinal"
                  },
                  "bodyText": "I also have a similar problem when i type 'peacock' in terminal.\n(base) [cetzf@CETZF ~]$ peacock\n\nError starting peacock: Could not import vtk\n\nYou may need to either create or load an environment providing PyQt, VTK, etc.\nThe MOOSE development team provides a conda package with the required dependencies:\n\n\tmamba create -n peacock moose-peacock python=3.10\n\tmamba activate peacock\n\nThen run peacock again",
                  "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4154348",
                  "updatedAt": "2022-11-16T08:15:07Z",
                  "publishedAt": "2022-11-16T08:15:06Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Ofinal"
                          },
                          "bodyText": "When i typed 'mamba install vtk' and 'mamba create -n peacock moose-peacock python=3.10     mamba activate peacock ',  the peacock still can't be open",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4154385",
                          "updatedAt": "2022-11-16T08:20:23Z",
                          "publishedAt": "2022-11-16T08:20:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "What instructions are you following? We need to fix those, since they are not explaining steps needed before attempting an install.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4157090",
                          "updatedAt": "2022-11-16T13:30:04Z",
                          "publishedAt": "2022-11-16T13:30:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ofinal"
                          },
                          "bodyText": "Hello,  i found the separate environment could import \"vtk \":\n(base) [cetzf@CETZF ~]$ mamba activate peacock\n(peacock) [cetzf@CETZF ~]$ mamba list\n# packages in environment at /home/cetzf/mambaforge3/envs/peacock:\n#\n# Name                    Version                   Build  Channel\n_libgcc_mutex             0.1                 conda_forge    conda-forge\n_openmp_mutex             4.5                       2_gnu    conda-forge\naiohttp                   3.8.3           py310h5764c6d_1    conda-forge\naiosignal                 1.3.1              pyhd8ed1ab_0    conda-forge\nalsa-lib                  1.2.8                h166bdaf_0    conda-forge\naom                       3.5.0                h27087fc_0    conda-forge\nasync-timeout             4.0.2              pyhd8ed1ab_0    conda-forge\nattr                      2.5.1                h166bdaf_1    conda-forge\nattrs                     22.1.0             pyh71513ae_1    conda-forge\nbzip2                     1.0.8                h7f98852_4    conda-forge\nc-ares                    1.18.1               h7f98852_0    conda-forge\nca-certificates           2022.9.24            ha878542_0    conda-forge\ncharset-normalizer        2.1.1              pyhd8ed1ab_0    conda-forge\ncurl                      7.86.0               h7bff187_1    conda-forge\ndbus                      1.13.6               h5008d03_3    conda-forge\ndouble-conversion         3.2.0                h27087fc_1    conda-forge\neigen                     3.4.0                h4bd325d_0    conda-forge\nexpat                     2.5.0                h27087fc_0    conda-forge\nffmpeg                    5.1.2           gpl_hc51e5dc_103    conda-forge\nfftw                      3.3.10          nompi_hf0379b8_105    conda-forge\nfont-ttf-dejavu-sans-mono 2.37                 hab24e00_0    conda-forge\nfont-ttf-inconsolata      3.000                h77eed37_0    conda-forge\nfont-ttf-source-code-pro  2.038                h77eed37_0    conda-forge\nfont-ttf-ubuntu           0.83                 hab24e00_0    conda-forge\nfontconfig                2.14.1               hc2a2eb6_0    conda-forge\nfonts-conda-ecosystem     1                             0    conda-forge\nfonts-conda-forge         1                             0    conda-forge\nfreetype                  2.12.1               hca18f0e_0    conda-forge\nfrozenlist                1.3.3           py310h5764c6d_0    conda-forge\ngettext                   0.21.1               h27087fc_0    conda-forge\ngl2ps                     1.4.2                h0708190_0    conda-forge\nglew                      2.1.0                h9c3ff4c_2    conda-forge\nglib                      2.74.1               h6239696_1    conda-forge\nglib-tools                2.74.1               h6239696_1    conda-forge\ngmp                       6.2.1                h58526e2_0    conda-forge\ngnutls                    3.7.8                hf3e180e_0    conda-forge\ngst-plugins-base          1.21.1               h3e40eee_1    conda-forge\ngstreamer                 1.21.1               hd4edc92_1    conda-forge\nhdf4                      4.2.15               h9772cbc_5    conda-forge\nhdf5                      1.12.2          nompi_h2386368_100    conda-forge\nicu                       70.1                 h27087fc_0    conda-forge\nidna                      3.4                pyhd8ed1ab_0    conda-forge\njack                      1.9.21               he978b8e_1    conda-forge\njpeg                      9e                   h166bdaf_2    conda-forge\njsoncpp                   1.9.5                h4bd325d_1    conda-forge\nkeyutils                  1.6.1                h166bdaf_0    conda-forge\nkrb5                      1.19.3               h3790be6_0    conda-forge\nlame                      3.100             h166bdaf_1003    conda-forge\nld_impl_linux-64          2.39                 hc81fddc_0    conda-forge\nlerc                      4.0.0                h27087fc_0    conda-forge\nlibblas                   3.9.0           16_linux64_openblas    conda-forge\nlibcap                    2.66                 ha37c62d_0    conda-forge\nlibcblas                  3.9.0           16_linux64_openblas    conda-forge\nlibclang                  15.0.4          default_h2e3cab8_0    conda-forge\nlibclang13                15.0.4          default_h3a83d3e_0    conda-forge\nlibcups                   2.3.3                h3e49a29_2    conda-forge\nlibcurl                   7.86.0               h7bff187_1    conda-forge\nlibdb                     6.2.32               h9c3ff4c_0    conda-forge\nlibdeflate                1.14                 h166bdaf_0    conda-forge\nlibdrm                    2.4.114              h166bdaf_0    conda-forge\nlibedit                   3.1.20191231         he28a2e2_2    conda-forge\nlibev                     4.33                 h516909a_1    conda-forge\nlibevent                  2.1.10               h9b69904_4    conda-forge\nlibffi                    3.4.2                h7f98852_5    conda-forge\nlibflac                   1.4.2                h27087fc_0    conda-forge\nlibgcc-ng                 12.2.0              h65d4601_19    conda-forge\nlibgfortran-ng            12.2.0              h69a702a_19    conda-forge\nlibgfortran5              12.2.0              h337968e_19    conda-forge\nlibglib                   2.74.1               h606061b_1    conda-forge\nlibglu                    9.0.0             he1b5a44_1001    conda-forge\nlibgomp                   12.2.0              h65d4601_19    conda-forge\nlibiconv                  1.17                 h166bdaf_0    conda-forge\nlibidn2                   2.3.4                h166bdaf_0    conda-forge\nliblapack                 3.9.0           16_linux64_openblas    conda-forge\nlibllvm15                 15.0.4               h63197d8_1    conda-forge\nlibnetcdf                 4.8.1           nompi_h261ec11_106    conda-forge\nlibnghttp2                1.47.0               hdcd2b5c_1    conda-forge\nlibnsl                    2.0.0                h7f98852_0    conda-forge\nlibogg                    1.3.4                h7f98852_1    conda-forge\nlibopenblas               0.3.21          pthreads_h78a6416_3    conda-forge\nlibopus                   1.3.1                h7f98852_1    conda-forge\nlibpciaccess              0.17                 h166bdaf_0    conda-forge\nlibpng                    1.6.38               h753d276_0    conda-forge\nlibpq                     14.5                 hd77ab85_1    conda-forge\nlibsndfile                1.1.0                h27087fc_0    conda-forge\nlibsqlite                 3.39.4               h753d276_0    conda-forge\nlibssh2                   1.10.0               haa6b8db_3    conda-forge\nlibstdcxx-ng              12.2.0              h46fd767_19    conda-forge\nlibtasn1                  4.19.0               h166bdaf_0    conda-forge\nlibtheora                 1.1.1             h7f98852_1005    conda-forge\nlibtiff                   4.4.0                h55922b4_4    conda-forge\nlibtool                   2.4.6             h9c3ff4c_1008    conda-forge\nlibudev1                  252                  h166bdaf_0    conda-forge\nlibunistring              0.9.10               h7f98852_0    conda-forge\nlibuuid                   2.32.1            h7f98852_1000    conda-forge\nlibva                     2.16.0               h166bdaf_0    conda-forge\nlibvorbis                 1.3.7                h9c3ff4c_0    conda-forge\nlibvpx                    1.11.0               h9c3ff4c_3    conda-forge\nlibwebp-base              1.2.4                h166bdaf_0    conda-forge\nlibxcb                    1.13              h7f98852_1004    conda-forge\nlibxkbcommon              1.0.3                he3ba5ed_0    conda-forge\nlibxml2                   2.10.3               h7463322_0    conda-forge\nlibzip                    1.9.2                hc869a4a_1    conda-forge\nlibzlib                   1.2.13               h166bdaf_4    conda-forge\nloguru                    0.6.0           py310hff52083_2    conda-forge\nlz4-c                     1.9.3                h9c3ff4c_1    conda-forge\nmpg123                    1.30.2               h27087fc_1    conda-forge\nmultidict                 6.0.2           py310h5764c6d_2    conda-forge\nmysql-common              8.0.31               haf5c9bc_0    conda-forge\nmysql-libs                8.0.31               h28c427c_0    conda-forge\nncurses                   6.3                  h27087fc_1    conda-forge\nnettle                    3.8.1                hc379101_1    conda-forge\nnlohmann_json             3.11.2               h27087fc_0    conda-forge\nnspr                      4.32                 h9c3ff4c_1    conda-forge\nnss                       3.78                 h2350873_0    conda-forge\nnumpy                     1.23.4          py310h53a5b5f_1    conda-forge\nopenh264                  2.3.1                h27087fc_1    conda-forge\nopenssl                   1.1.1s               h166bdaf_0    conda-forge\np11-kit                   0.24.1               hc5aa10d_0    conda-forge\npackaging                 21.3               pyhd8ed1ab_0    conda-forge\npcre2                     10.40                hc3806b6_0    conda-forge\npip                       22.3.1             pyhd8ed1ab_0    conda-forge\nply                       3.11                       py_1    conda-forge\nproj                      9.1.0                h93bde94_0    conda-forge\npthread-stubs             0.4               h36c2ea0_1001    conda-forge\npugixml                   1.11.4               h9c3ff4c_0    conda-forge\npulseaudio                14.0                h0d2025b_11    conda-forge\npyparsing                 3.0.9              pyhd8ed1ab_0    conda-forge\npyqt                      5.15.7          py310h29803b5_2    conda-forge\npyqt5-sip                 12.11.0         py310hd8f1fbe_2    conda-forge\npython                    3.10.6          h582c2e5_0_cpython    conda-forge\npython_abi                3.10                    2_cp310    conda-forge\nqt-main                   5.15.6               hd477bba_1    conda-forge\nreadline                  8.1.2                h0f457ee_0    conda-forge\nsetuptools                65.5.1             pyhd8ed1ab_0    conda-forge\nsip                       6.7.4           py310hd8f1fbe_0    conda-forge\nsqlite                    3.39.4               h4ff8645_0    conda-forge\nsvt-av1                   1.3.0                h27087fc_0    conda-forge\ntbb                       2021.6.0             h924138e_1    conda-forge\ntbb-devel                 2021.6.0             h924138e_1    conda-forge\ntk                        8.6.12               h27826a3_0    conda-forge\ntoml                      0.10.2             pyhd8ed1ab_0    conda-forge\ntyping-extensions         4.4.0                hd8ed1ab_0    conda-forge\ntyping_extensions         4.4.0              pyha770c72_0    conda-forge\ntzdata                    2022f                h191b570_0    conda-forge\nutfcpp                    3.2.2                ha770c72_0    conda-forge\nvtk                       9.2.2           qt_py310h180de18_204    conda-forge\nwheel                     0.38.2             pyhd8ed1ab_0    conda-forge\nwslink                    1.9.1              pyhd8ed1ab_0    conda-forge\nx264                      1!164.3095           h166bdaf_2    conda-forge\nx265                      3.5                  h924138e_3    conda-forge\nxcb-util                  0.4.0                h166bdaf_0    conda-forge\nxcb-util-image            0.4.0                h166bdaf_0    conda-forge\nxcb-util-keysyms          0.4.0                h166bdaf_0    conda-forge\nxcb-util-renderutil       0.3.9                h166bdaf_0    conda-forge\nxcb-util-wm               0.4.1                h166bdaf_0    conda-forge\nxorg-fixesproto           5.0               h7f98852_1002    conda-forge\nxorg-kbproto              1.0.7             h7f98852_1002    conda-forge\nxorg-libice               1.0.10               h7f98852_0    conda-forge\nxorg-libsm                1.2.3             hd9c2040_1000    conda-forge\nxorg-libx11               1.7.2                h7f98852_0    conda-forge\nxorg-libxau               1.0.9                h7f98852_0    conda-forge\nxorg-libxdmcp             1.1.3                h7f98852_0    conda-forge\nxorg-libxext              1.3.4                h7f98852_1    conda-forge\nxorg-libxfixes            5.0.3             h7f98852_1004    conda-forge\nxorg-libxt                1.2.1                h7f98852_2    conda-forge\nxorg-xextproto            7.3.0             h7f98852_1002    conda-forge\nxorg-xproto               7.0.31            h7f98852_1007    conda-forge\nxz                        5.2.6                h166bdaf_0    conda-forge\nyarl                      1.8.1           py310h5764c6d_0    conda-forge\nzlib                      1.2.13               h166bdaf_4    conda-forge\nzstd                      1.5.2                h6239696_4    conda-forge\n\nWhen i typed the command 'mamba install moose-peacock', the instuctions were the following:\npeacock) [cetzf@CETZF ~]$ mamba install moose-peacock\n\n                  __    __    __    __\n                 /  \\  /  \\  /  \\  /  \\\n                /    \\/    \\/    \\/    \\\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n              /  / \\   / \\   / \\   / \\  \\____\n             /  /   \\_/   \\_/   \\_/   \\    o \\__,\n            / _/                       \\_____/  `\n            |/\n        \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557\n        \u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n        \u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n        \u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n        \u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\n        \u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\n\n        mamba (1.0.0) supported by @QuantStack\n\n        GitHub:  https://github.com/mamba-org/mamba\n        Twitter: https://twitter.com/QuantStack\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\n\nLooking for: ['moose-peacock']\n\nconda-forge/noarch                                 @   1.0MB/s 1m:11.8s\nconda-forge/linux-64                               @   1.0MB/s 3m:43.0s\n\nPinned packages:\n  - python 3.10.*\n\n\nEncountered problems while solving:\n  - nothing provides requested moose-peacock\n\nYou have new mail in /var/spool/mail/cetzf",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4172956",
                          "updatedAt": "2022-11-18T01:42:36Z",
                          "publishedAt": "2022-11-18T01:41:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ofinal"
                          },
                          "bodyText": "When i type the similar command '\n mamba create -n peacock moose-peacock python=3.10\nmamba activate peacock\n', the instructions are similar to the description just like '\nEncountered problems while solving:\n\nnothing provides requested moose-peacock\n'",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4172989",
                          "updatedAt": "2022-11-18T01:48:57Z",
                          "publishedAt": "2022-11-18T01:47:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I need to know what instructions you originally were looking at when you came to the conclusion to try and run:\nmamba create -n peacock moose-peacock python=3.10\nWhat ever set of instructions you were reading, are incorrect and I want to fix them. What I am asking from you is a URL to the instructions you were following.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4196157",
                          "updatedAt": "2022-11-21T14:25:48Z",
                          "publishedAt": "2022-11-21T14:25:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I think we have a communication barrier, so rather than have you wait, what you were missing in 'whatever instructions we were having you follow' is to first add our public channel, then you can install moose-* related packages. I see you've already created a 'moose' environment. Though you won't have any moose related 'stuff' in it without our public channel. Lets fix this from the beginning.\nFirst, lets start over:\nmamba activate base\nmamba env remove -n moose\nNow, lets add the proper channel containing all the moose Conda packages, and install whats needed:\nconda config --add channels https://conda.software.inl.gov/public\nmamba create -n moose moose-libmesh moose-tools\nmamba create -n peacock moose-peacock python=3.10\nI am going to assume you are simply trying to build MOOSE:\nmamba activate moose\ncd ~/projects/moose/test\nmake -j 6\n(6 or however many CPU Cores you have available)\nNow we can use Peacock to open up an input file and observe results:\nmamba activate peacock\ncd ~/projects/moose/test/tests/kernels/simple_diffusion\npeacock -i simple_diffusion.i\n(at this point, you would navigate around Peacock and click some buttons to run the test, etc)",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4205888",
                          "updatedAt": "2022-11-22T13:39:58Z",
                          "publishedAt": "2022-11-22T13:39:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ofinal"
                          },
                          "bodyText": "Hi\uff0cI've already installed MOOSE in the same way of the official website, but peacock doesn't work. Then I followed the instructions and created a separate environment to install peacock. This is what I have done so far. Do I need to reinstall the MOOSE in this separate environment just to use peacock? Thank you for your reply!",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4225178",
                          "updatedAt": "2022-11-24T12:18:23Z",
                          "publishedAt": "2022-11-24T12:18:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no you should keep both moose and peacock in their separate environments.\nYou can either:\n\nrun MOOSE in peacock from the peacock mamba environment. Since MOOSE was installed in the moose environment, it knows where to find most of the libraries it needs, even though they are not in the peacock mamba environment. (the only issue in my mind could be which MPI gets used)\nrun MOOSE in its moose mamba environment, read the results from another terminal tab in a peacock environment\n\nWe do that because the dependencies of each are often conflicting.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4228904",
                          "updatedAt": "2022-11-24T16:43:47Z",
                          "publishedAt": "2022-11-24T16:43:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ofinal"
                          },
                          "bodyText": "After i add the channels, the reults are following when i type mamba create -n moose moose-libmesh moose-tools in terminal:\n(base) [cetzf@CETZF ~]$ mamba create -n moose moose-libmesh moose-tools\n\n                  __    __    __    __\n                 /  \\  /  \\  /  \\  /  \\\n                /    \\/    \\/    \\/    \\\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n              /  / \\   / \\   / \\   / \\  \\____\n             /  /   \\_/   \\_/   \\_/   \\    o \\__,\n            / _/                       \\_____/  `\n            |/\n        \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557\n        \u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n        \u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n        \u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n        \u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\n        \u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\n\n        mamba (1.0.0) supported by @QuantStack\n\n        GitHub:  https://github.com/mamba-org/mamba\n        Twitter: https://twitter.com/QuantStack\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\n\nLooking for: ['moose-libmesh', 'moose-tools']\n\nanaconda/pkgs/main/linux-64                                   No change\nanaconda/pkgs/main/noarch                                     No change\nanaconda/pkgs/r/noarch                                        No change\nanaconda/pkgs/msys2/linux-64                                  No change\nanaconda/pkgs/r/linux-64                                      No change\nanaconda/pkgs/msys2/noarch                                    No change\nconda-forge/noarch                                            No change\nhttps://conda.software.inl.gov/public/noarch                  No change\nhttps://conda.software.inl.gov/public/linux-64                No change\nconda-forge/linux-64                               1h:4m:29.4s\nEncountered problems while solving:\n  - nothing provides python_abi 3.7.* *_cp37m needed by moose-tools-2022.06.16-py37h6512ce3_0\n  - nothing provides libpng 1.6.37 hed695b0_2 needed by moose-libmesh-2022.05.12-build_0",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4235381",
                          "updatedAt": "2022-11-25T08:32:45Z",
                          "publishedAt": "2022-11-25T08:32:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ofinal"
                          },
                          "bodyText": "i encountered some problem.  @milljm ,how do i  solve them ?\nEncountered problems while solving:\n  - nothing provides python_abi 3.7.* *_cp37m needed by moose-tools-2022.06.16-py37h6512ce3_0\n  - nothing provides libpng 1.6.37 hed695b0_2 needed by moose-libmesh-2022.05.12-build_0",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4247015",
                          "updatedAt": "2022-11-27T15:05:53Z",
                          "publishedAt": "2022-11-27T15:05:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "oleachri"
                  },
                  "bodyText": "@milljm: I've been seeing the same problems as @Ofinal.  That set of instructions is not from a URL, but rather appears when you try to run peacock from the command line of a standard moose environment, installed as per the instructions at Install MOOSE.\nAs you indicate, I haven't been able to get peacock to work following them (on the OnDemand HPC system without visualisation).  The error message is:\nERROR: In /home/conda/feedstock_root/build_artifacts/vtk_1661287198681/work/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx, line 499\nvtkXOpenGLRenderWindow (0x555556ef2290): Unable to find a valid OpenGL 3.2 or later implementation. Please update your video card driver to the latest version. If you are using Mesa please make sure you have version 11.2 or later and make sure your driver in Mesa supports OpenGL 3.2 such as llvmpipe or openswr. If you are on windows and using Microsoft remote desktop note that it only supports OpenGL 3.2 with nvidia quadro cards. You can use other remoting software such as nomachine to avoid this issue.\n\nCouldn't show a VTK window.\nThis is most likely caused by outdated Mesa drivers.\nYou can try upgrading to Mesa version 10.6.5 or later or update your video card driver.\nIf you are running in a virtual machine, you can try turning OFF 3D acceleration.\n\nYou can also try to use an alternative VTK package in a conda environment.\nYou can create a new conda environment by doing (with the miniconda module loaded):\n\n\tconda create --clone root -n <env_name>\n\tsource activate <env_name>\n\tconda install -c https://conda.software.inl.gov/public vtk=7.1.1.opengl\n\nThen you can try running peacock again.\nNote that this VTK package may have various rendering problems and some peacock tests will fail.",
                  "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4217597",
                  "updatedAt": "2022-11-23T15:23:28Z",
                  "publishedAt": "2022-11-23T15:23:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I believe those instructions are deprecated. There is no 'vtk' package available on our /public channel... The best place to actually use Peacock will be on your personal workstation, where hardware rendering is available.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4264428",
                          "updatedAt": "2022-11-29T14:10:30Z",
                          "publishedAt": "2022-11-29T14:10:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "oleachri"
                          },
                          "bodyText": "OK - thanks for confirming.  I have tried to use Peacock on a Windows desktop via WSL2/Ubuntu, but it just 'segmentation faults'; not sure if it's the WSL2 aspect or if the PC is underpowered.\nOne solution, that worked for me, has been to download Paraview onto my PC and use that to view the *.e files that the MOOSE training course generates.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4274047",
                          "updatedAt": "2022-11-30T14:13:23Z",
                          "publishedAt": "2022-11-30T14:13:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I imagine our instructions for WSL(2) are severely out of date. I've been working from home lately (feeling under the weather); I can try to run Peacock on my gaming rig, see if I can reproduce the issue and attempt a a fix.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4274290",
                          "updatedAt": "2022-11-30T14:37:26Z",
                          "publishedAt": "2022-11-30T14:37:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "What version of Ubuntu are you using? I'd like to simulate your environment as close as possible.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4274330",
                          "updatedAt": "2022-11-30T14:39:57Z",
                          "publishedAt": "2022-11-30T14:39:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "oleachri"
                          },
                          "bodyText": "Software:\nUbuntu 22.04.1 LTS\nVcXsrv 1.20.13.0\nOS:\nWindows 10 22H2 Build 19045.2311\nHardware:\nIntel i5-2500K @ 3.30 GHz\n8GB RAM\nNVIDIA GTx 660",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4274578",
                          "updatedAt": "2022-11-30T15:07:10Z",
                          "publishedAt": "2022-11-30T15:07:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "After some trial and error, I was able to get Peacock to launch. Things certainly have changed since I last visited running Peacock on WSL(2).\nFrom what I am reading, Windows 11 folks will enjoy native GL support without needing to Install VcXsrv. Their only pre-requisite is to install their optimized video card drivers (NVIDIA or AMD). While the rest of us still on Windows 10 continue to need VcXsrv. Considering myself something of a power user, even I was confused on Microsof's literature about WSL2/native GL support (but not on Windows 10).\nWindows 10 has changed somewhat from when I last created WSL instructions. Instead of export DISPLAY=localhost:0, it is now necessary to export your native host's IP address. I also found it necessary to disable access control when launching VcXsrv.\nHere's precisely everything I did:\n\nOpen PowerShell as an Administrator, and update WSL, set version to 2, restart it:\nPS C:\\Windows\\system32> wsl --update\nPS C:\\Windows\\system32> wsl --set-default-version 2\nPS C:\\Windows\\system32> wsl --shutdown\n\nInstalled Ubuntu 22.04.1 LTS using Microsoft Store\nInstalled VcXsrv and launched it with the following changes\n\n\n\nLaunch Ubuntu 22.04.1 and perform the following commands:\nsudo apt-get udpate\nsudo apt-get upgrade\nsudo apt-get install x11-apps libglu1-mesa libgl1-mesa-glx\ncurl -L -O https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\nbash Mambaforge-Linux-x86_64.sh -b -p ~/mambaforge3\nexport PATH=~/mambaforge3/bin:$PATH\nmamba init\nexit\n\nLaunch Ubuntu 22.04.1 again, and perform the following commands:\nmamba install openssl=1\nconda config --add channels https://conda.software.inl.gov/public\nmamba create -n moose moose-libmesh moose-tools\nmamba create -n peacock moose-peacock python=3.10\nmamba activate moose\nmkdir ~/projects; cd ~/projects\ngit clone https://github.com/idaholab/moose\ncd moose\ngit checkout master\ncd test\nmake -j 16\ncd tests/geomsearch/3d_moving_penetration\nmamba activate peacock\nexport DISPLAY=192.168.158.146:0\n../../../../python/peacock/peacock -i pl_test1.i\n\n\nObviously other's IP addresses will be different.\nI am going to go ahead and post this. And run through it again using a fresh Ubuntu 22.04. I may have missed an apt-get install.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4276193",
                          "updatedAt": "2022-11-30T18:10:50Z",
                          "publishedAt": "2022-11-30T18:00:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Okay, went through the above again, after re-installing my Ubuntu 22.04.1 LTS, is a success.\nThe bit about LIBGL_ALWAYS_INDIRECT, I don't seem to need to do.\nI don't mean for you to go through all this over again, but if you have the time! I would love to hear about your results.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4276694",
                          "updatedAt": "2023-01-24T13:46:25Z",
                          "publishedAt": "2022-11-30T19:14:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "oleachri"
                          },
                          "bodyText": "I went through those steps, but still got the segmentation fault.  I've dumped the output from strace into this file:\nsegfault.txt\nI did have an issue with this line:\nsudo apt-get install x11-apps libglu1-mesa libglu1-mesa-glx\n\nWhich raised the error:\nE: Unable to locate package libglu1-mesa-glx\n\nWhich I attempted to get around by install mesa-utils, i.e. following these instructions:\nHow to Upgrade Mesa Drivers on Ubuntu 22.04 LTS\nI also changed make -j 16 to make -j 4 due to my PC hardware limitations.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4281860",
                          "updatedAt": "2022-12-01T09:48:42Z",
                          "publishedAt": "2022-12-01T09:48:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Sorry I didn't expect anyone to follow my instructions until I posted again, that they worked. The package you need is libgl1-mesa-glx and not libglu1-mesa-glx that I mistakenly placed (and fixed on my second attempt).\nalso, something quick to try to make sure VcXsrv is installed and working: Try and run xeyes from your Ubuntu terminal (after export DISPLAY=<your IP address>:0",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4283548",
                          "updatedAt": "2022-12-01T13:55:12Z",
                          "publishedAt": "2022-12-01T13:52:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "oleachri"
                          },
                          "bodyText": "No problem.  I've installed libgl1-mesa-glx now, but it still segmentation faults.  I'm going to asasume it's my ancient hardware and stick to using Paraview for now, but thanks for your help.\nVcXsrv has always worked; I've been useing Nedit, gedit, Nautilus etc. without problem.",
                          "url": "https://github.com/idaholab/moose/discussions/22718#discussioncomment-4284070",
                          "updatedAt": "2022-12-01T14:47:10Z",
                          "publishedAt": "2022-12-01T14:47:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Peacock-- a problem when i open the 'simple_diffusion.i'",
          "author": {
            "login": "Ofinal"
          },
          "bodyText": "(peacock) [cetzf@CETZF simple_diffusion]$ peacock -i simple_diffusion.i\n2022-11-28 15:22:42.065 (   6.838s) [        33907F00]     vtkOpenGLState.cxx:1795  WARN| Hardware does not support the number of textures defined.\n2022-11-28 15:22:42.065 (   6.838s) [        33907F00]     vtkOpenGLState.cxx:1795  WARN| Hardware does not support the number of textures defined.\n2022-11-28 15:22:42.073 (   6.846s) [        33907F00]     vtkOpenGLState.cxx:1795  WARN| Hardware does not support the number of textures defined.\n2022-11-28 15:22:42.073 (   6.846s) [        33907F00]     vtkOpenGLState.cxx:1795  WARN| Hardware does not support the number of textures defined.\n2022-11-28 15:22:42.073 (   6.846s) [        33907F00]     vtkOpenGLState.cxx:1795  WARN| Hardware does not support the number of textures defined.\n2022-11-28 15:22:42.073 (   6.846s) [        33907F00]     vtkOpenGLState.cxx:1795  WARN| Hardware does not support the number of textures defined.\n2022-11-28 15:22:42.073 (   6.846s) [        33907F00]     vtkOpenGLState.cxx:1795  WARN| Hardware does not support the number of textures defined.\nERROR: In /home/conda/feedstock_root/build_artifacts/vtk_1661287198681/work/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx, line 499\nvtkXOpenGLRenderWindow (0x55657cc15a90): Unable to find a valid OpenGL 3.2 or later implementation. Please update your video card driver to the latest version. If you are using Mesa please make sure you have version 11.2 or later and make sure your driver in Mesa supports OpenGL 3.2 such as llvmpipe or openswr. If you are on windows and using Microsoft remote desktop note that it only supports OpenGL 3.2 with nvidia quadro cards. You can use other remoting software such as nomachine to avoid this issue.\nCouldn't show a VTK window.\nThis is most likely caused by outdated Mesa drivers.\nYou can try upgrading to Mesa version 10.6.5 or later or update your video card driver.\nIf you are running in a virtual machine, you can try turning OFF 3D acceleration.\nYou can also try to use an alternative VTK package in a conda environment.\nYou can create a new conda environment by doing (with the miniconda module loaded):\nconda create --clone root -n <env_name>\nsource activate <env_name>\nconda install -c https://conda.software.inl.gov/public vtk=7.1.1.opengl\n\nThen you can try running peacock again.\nNote that this VTK package may have various rendering problems and some peacock tests will fail.",
          "url": "https://github.com/idaholab/moose/discussions/22803",
          "updatedAt": "2023-01-03T22:32:28Z",
          "publishedAt": "2022-11-28T07:32:43Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Ofinal"
                  },
                  "bodyText": "@milljm ,thank you for your help. I have already installed the peacock successfully, but there may be some problems of version of dependancies.",
                  "url": "https://github.com/idaholab/moose/discussions/22803#discussioncomment-4250838",
                  "updatedAt": "2022-11-28T07:36:01Z",
                  "publishedAt": "2022-11-28T07:36:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "Were you able to get this working then?",
                          "url": "https://github.com/idaholab/moose/discussions/22803#discussioncomment-4361638",
                          "updatedAt": "2022-12-10T07:22:41Z",
                          "publishedAt": "2022-12-10T07:22:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Basic Kernel Related Issue",
          "author": {
            "login": "Shuvro129"
          },
          "bodyText": "\u2212\ud835\udc0a (\ud835\udf4f^\ud835\udfd0 \ud835\udc7c)/(\ud835\udf4f\ud835\udc99^\ud835\udfd0 )+\ud835\udc79\ud835\udc7c+\ud835\udc74 (\ud835\udf4f^\ud835\udfd0 \ud835\udc7c)/(\ud835\udf4f\ud835\udc95^\ud835\udfd0 )= \ud835\udf39(\ud835\udc99,\ud835\udc95)\nI want solve this equation. I am bit confused about how I am gonna write the kernel for the inertia term for this equation.",
          "url": "https://github.com/idaholab/moose/discussions/22863",
          "updatedAt": "2022-12-28T23:39:35Z",
          "publishedAt": "2022-12-03T19:55:34Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyou want to solve a wave equation?\nWe ve discussed this a bit on this forum last year you may want to search for it.\nyou ll want to look at the coupleable interface documentation for each derivative term\nThe right hand side will be a dirackernel btw\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4301054",
                  "updatedAt": "2022-12-04T04:38:36Z",
                  "publishedAt": "2022-12-03T21:50:12Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "Hey. Thank you so much. I am searching for it. I am kind of new to moose. Hope I will find something. Will let you know about that.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4301730",
                          "updatedAt": "2022-12-04T01:45:09Z",
                          "publishedAt": "2022-12-04T01:45:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "Hi, do you know anything of applying absorbing boundary condition kernel in moose? I was trying to solve the above equation from negative infinity to positive infinity domain?",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4356415",
                          "updatedAt": "2022-12-09T20:24:32Z",
                          "publishedAt": "2022-12-09T20:24:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "is this just a flux? Then it would be a NeumannBC.\nIf the flux is proportional to the value of the quantity near the boundary, it would be a coupled NeumannBC\nhttps://mooseframework.inl.gov/source/bcs/CoupledVarNeumannBC.html",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4357168",
                          "updatedAt": "2022-12-09T21:33:05Z",
                          "publishedAt": "2022-12-09T21:33:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "I mean the field variable would be zero in infinite length. There is nothing mentioned about flux. Will CoupledVarNeumannBC do the trick?",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4357287",
                          "updatedAt": "2022-12-09T21:51:30Z",
                          "publishedAt": "2022-12-09T21:51:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you are able to backtrack this 0 at infinite length to a flux at a given distance, then they should be equivalent.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4357529",
                          "updatedAt": "2022-12-09T22:07:16Z",
                          "publishedAt": "2022-12-09T22:07:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "may be there is a way. But for problem, I don't think I can. I am searching for a BC like https://mooseframework.inl.gov/moose/source/bcs/VectorTransientAbsorbingBC.html#! But this is not the one I want.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4357717",
                          "updatedAt": "2022-12-09T22:30:14Z",
                          "publishedAt": "2022-12-09T22:30:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "How did you type this equation? Looks nice.",
                  "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4301212",
                  "updatedAt": "2022-12-03T22:39:21Z",
                  "publishedAt": "2022-12-03T22:39:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Oh, and regarding your actual question... Don't think about the discretized matrix form which was usually taught at school in the old days. That's not the level MOOSE works with. In MOOSE, you directly compose the equation in its weak form. For inertia, that's as simple as \\phi \\rho \\partial^2 u / \\partial t^2, where \\phi is the test function, \\rho is the density, and u is the displacement.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4301236",
                          "updatedAt": "2022-12-03T22:45:36Z",
                          "publishedAt": "2022-12-03T22:45:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "Thank you so much for your response. I just copied the equation from a word file. Do you have any worked-out examples for this type of wave function? If you can, will you kindly paste any links for me? I will search for it as well. I just started working on moose so I don't know much about it so I am kind of finding it hard. Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4301721",
                          "updatedAt": "2022-12-04T01:41:43Z",
                          "publishedAt": "2022-12-04T01:41:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Note that the U in your equation could mean anything... But based on the way you wrote the equation, I guess you are looking for dynamics in the context of solid mechanics. If so, this one should be a good starting point: https://mooseframework.inl.gov/modules/tensor_mechanics/Dynamics.html",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4301892",
                          "updatedAt": "2022-12-04T03:21:53Z",
                          "publishedAt": "2022-12-04T03:21:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4315339",
                          "updatedAt": "2022-12-05T17:06:37Z",
                          "publishedAt": "2022-12-05T17:06:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "Hi, do you know anything of applying absorbing boundary condition kernel in moose? I was trying to solve the above equation from negative infinity to positive infinity domain?",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4356414",
                          "updatedAt": "2022-12-09T20:24:19Z",
                          "publishedAt": "2022-12-09T20:24:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "At infinite length the value of the field variable would be zero.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4357320",
                          "updatedAt": "2022-12-09T21:52:28Z",
                          "publishedAt": "2022-12-09T21:52:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "@cbolisetti do you have an absorbing boundary condition in Mastodon?  Some examples for solving an acoustics problem are given in the directory:\nmoose/modules/fsi/test/tests/fsi_acoustics/\nThese examples don't use an absorbing boundary conditions like perfectly matched layers, you'll need to implement that yourself.  But for a 1-D problem, that should be easy using one of the existing bcs.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4382172",
                          "updatedAt": "2022-12-12T18:56:41Z",
                          "publishedAt": "2022-12-12T18:56:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cbolisetti"
                          },
                          "bodyText": "We have absorbing boundaries for mechanical waves in solids. Check out NonReflectingBC in MASTODON. Note that this BC works best when the waves are perpendicular to the absorption surface. The efficiency drops as the waves become parallel to the surface. PML would definitely be an upgrade both for solids and fluid (acoustic) media, but we don't currently have it.",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4382357",
                          "updatedAt": "2022-12-12T19:15:07Z",
                          "publishedAt": "2022-12-12T19:15:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Shuvro129"
                          },
                          "bodyText": "Thanks",
                          "url": "https://github.com/idaholab/moose/discussions/22863#discussioncomment-4394754",
                          "updatedAt": "2022-12-13T22:45:54Z",
                          "publishedAt": "2022-12-13T22:45:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "INSFVMixingLengthReynoldsStress kernel modification",
          "author": {
            "login": "aiskhak"
          },
          "bodyText": "I am modifying the INSFVMixingLengthReynoldsStress kernel in a way that I read Reynolds stresses from a .csv file (supplied as auxiliary variables). Below is the code. While the main part is sort of clear, RC interpolation is vague to me. In the original kernel the coefficients were computing using autograd feature. What should I do to make it correctly in my case?\n#include \"INSFV_rs_csv_ReynoldsStress.h\"\n#include \"INSFVVelocityVariable.h\"\n#include \"NS.h\"\n#include \"SystemBase.h\"\n\nregisterMooseObject(\"NavierStokesApp\", INSFV_rs_csv_ReynoldsStress);\n\nInputParameters\nINSFV_rs_csv_ReynoldsStress::validParams()\n{\n  InputParameters params = INSFVFluxKernel::validParams();\n  params.addClassDescription(\n      \"Computes the force due to the Reynolds stress term in the incompressible\"\n      \" Reynolds-averaged Navier-Stokes equations.\");\n  params.addRequiredCoupledVar(\"u\", \"The velocity in the x direction.\");\n  params.addCoupledVar(\"v\", \"The velocity in the y direction.\");\n  params.addCoupledVar(\"w\", \"The velocity in the z direction.\");\n  params.addRequiredParam<MooseFunctorName>(NS::density, \"fluid density\");\n  params.addRequiredParam<MooseFunctorName>(\"rs_xx\", \"Reynolds stress xx from CSV file.\");\n  params.addParam<MooseFunctorName>(\"rs_xy\", \"Reynolds stress xy from CSV file.\");\n  params.addParam<MooseFunctorName>(\"rs_yy\", \"Reynolds stress yy from CSV file.\");\n  params.addParam<MooseFunctorName>(\"rs_xz\", \"Reynolds stress xz from CSV file.\");\n  params.addParam<MooseFunctorName>(\"rs_yz\", \"Reynolds stress yz from CSV file.\");\n  params.addParam<MooseFunctorName>(\"rs_zz\", \"Reynolds stress zz from CSV file.\");\n  params.addParam<Real>(\"rs_m_xx\", 1.0, \"RS multiplier\");\n  params.addParam<Real>(\"rs_m_xy\", 1.0, \"RS multiplier\");\n  params.addParam<Real>(\"rs_m_yy\", 1.0, \"RS multiplier\");\n  params.addParam<Real>(\"rs_m_xz\", 1.0, \"RS multiplier\");\n  params.addParam<Real>(\"rs_m_yz\", 1.0, \"RS multiplier\");\n  params.addParam<Real>(\"rs_m_zz\", 1.0, \"RS multiplier\");\n  MooseEnum momentum_component(\"x=0 y=1 z=2\");\n  params.addRequiredParam<MooseEnum>(\"momentum_component\",\n                                      momentum_component, \"The component of the momentum equation that this kernel applies to.\");\n  // We assume the worst, e.g. we are doing Rhie-Chow. In that case we need three layers. An 'a'\n  // coefficient evaluation at a face will necessitate evaluation of *this* object at every face of\n  // the adjoining element, necessitating a face gradient evaluation at those faces, necessitating a\n  // cell gradient evaluation in neighboring elements, necessitating cell value evaluations in\n  // neighbors of those neighbor elements\n  params.set<unsigned short>(\"ghost_layers\") = 3;\n  return params;\n}\n\nINSFV_rs_csv_ReynoldsStress::INSFV_rs_csv_ReynoldsStress(const InputParameters & params)\n  : INSFVFluxKernel(params),\n    _dim(_subproblem.mesh().dimension()),\n    _axis_index(getParam<MooseEnum>(\"momentum_component\")),\n    _u_var(dynamic_cast<const INSFVVelocityVariable *>(getFieldVar(\"u\", 0))),\n    _v_var(params.isParamValid(\"v\") ? dynamic_cast<const INSFVVelocityVariable *>(getFieldVar(\"v\", 0))\n                                    : nullptr),\n    _w_var(params.isParamValid(\"w\") ? dynamic_cast<const INSFVVelocityVariable *>(getFieldVar(\"w\", 0))\n                                    : nullptr),\n    _rho(getFunctor<ADReal>(NS::density)),\n    _rs_xx(getFunctor<ADReal>(\"rs_xx\")),\n    _rs_xy(params.isParamValid(\"v\") ? getFunctor<ADReal>(\"rs_xy\") \n                                    : getFunctor<ADReal>(\"rs_xx\")), // assign rs_xx if 1D (not needed)\n    _rs_yy(params.isParamValid(\"v\") ? getFunctor<ADReal>(\"rs_yy\") \n                                    : getFunctor<ADReal>(\"rs_xx\")), // assign rs_xx if 1D (not needed)\n    _rs_xz(params.isParamValid(\"w\") ? getFunctor<ADReal>(\"rs_xz\") \n                                    : getFunctor<ADReal>(\"rs_xx\")), // assign rs_xx if 2D (not needed)\n    _rs_yz(params.isParamValid(\"w\") ? getFunctor<ADReal>(\"rs_yz\") \n                                    : getFunctor<ADReal>(\"rs_xx\")), // assign rs_xx if 2D (not needed)\n    _rs_zz(params.isParamValid(\"w\") ? getFunctor<ADReal>(\"rs_zz\") \n                                    : getFunctor<ADReal>(\"rs_xx\")), // assign rs_xx if 2D (not needed)\n    _rs_m_xx(getParam<Real>(\"rs_m_xx\")), // can nulify/scale the RS from input file\n\t_rs_m_xy(getParam<Real>(\"rs_m_xy\")),\n\t_rs_m_yy(getParam<Real>(\"rs_m_yy\")),\n\t_rs_m_xz(getParam<Real>(\"rs_m_xz\")),\n\t_rs_m_yz(getParam<Real>(\"rs_m_yz\")),\n\t_rs_m_zz(getParam<Real>(\"rs_m_zz\"))\n{\n#ifndef MOOSE_GLOBAL_AD_INDEXING\n  mooseError(\"INSFV is not supported by local AD indexing. In order to use INSFV, please run the \"\n             \"configure script in the root MOOSE directory with the configure option \"\n             \"'--with-ad-indexing-type=global'\");\n#endif\n\n  if (!_u_var)\n    paramError(\"u\", \"the u velocity must be an INSFVVelocityVariable.\");\n\n  if (_dim >= 2 && !_v_var)\n    paramError(\"v\",\n               \"In two or more dimensions, the v velocity must be supplied and it must be an \"\n               \"INSFVVelocityVariable.\");\n\n  if (_dim >= 3 && !_w_var)\n    paramError(\"w\",\n               \"In three-dimensions, the w velocity must be supplied and it must be an \"\n               \"INSFVVelocityVariable.\");\n}\n\nADReal\nINSFV_rs_csv_ReynoldsStress::computeStrongResidual()\n{\n#ifdef MOOSE_GLOBAL_AD_INDEXING\n  \n  // interpolate density to the face\n  const auto face = Moose::FV::makeCDFace(*_face_info, faceArgSubdomains());\n  const ADReal rho = _rho(face);\n  \n  // compute Reynolds stresses contribution fo each direction\n  ADReal rs = 0.0;\t// initialize\n  \n  // 1D case\n  if (_dim == 1)\n  {\n    if (_index == 0)\n    {\n      ADReal rs_xx = _rs_xx(face);\n      rs += rs_xx*_normal(0)*_rs_m_xx; // x direction\n    }\n      else\n    {\n      mooseError(\"if case is 1D use x direction\");\n    }\n  }\n  \n  // 2D case\n  else if (_dim == 2) \n  {\n    if (_index == 0) \n    {\n      ADReal rs_xx = _rs_xx(face)*_rs_m_xx;\n      ADReal rs_xy = _rs_xy(face)*_rs_m_xy;\n      rs += rs_xx*_normal(0) + rs_xy*_normal(1); // x direction\n    }\n    else if (_index == 1)\n    {\n      ADReal rs_xy = _rs_xy(face)*_rs_m_xy;\n      ADReal rs_yy = _rs_yy(face)*_rs_m_yy;\n      rs += rs_xy*_normal(0) + rs_yy*_normal(1); // y direction\n    }\n    else \n    {\n      mooseError(\"if case is 2D use x and y directions\"); \n    }\n  }\n \n  // 3D case\n  else if (_dim == 3) \n  {\n    if (_index == 0) \n    {\n      ADReal rs_xx = _rs_xx(face)*_rs_m_xx;\n      ADReal rs_xy = _rs_xy(face)*_rs_m_xy;\n      ADReal rs_xz = _rs_xz(face)*_rs_m_xz;\n      rs += rs_xx*_normal(0) + rs_xy*_normal(1) + rs_xz*_normal(2); // x direction\n    }\n    else if (_index == 1)\n    {\n      ADReal rs_xy = _rs_xy(face)*_rs_m_xy;\n      ADReal rs_yy = _rs_yy(face)*_rs_m_yy;\n      ADReal rs_yz = _rs_yz(face)*_rs_m_yz;\n      rs += rs_xy*_normal(0) + rs_yy*_normal(1) + rs_yz*_normal(2); // y direction\n    }\n    else if (_index == 2)\n    {\n      ADReal rs_xz = _rs_xz(face)*_rs_m_xz;\n      ADReal rs_yz = _rs_yz(face)*_rs_m_yz;\n      ADReal rs_zz = _rs_zz(face)*_rs_m_zz;\n      rs += rs_xz*_normal(0) + rs_yz*_normal(1) + rs_zz*_normal(2); // z direction\n    }\n    else\n    {\n      mooseError(\"wrong index\"); \n    }\n  }\n  \n  // tally contribution of face flux to Rhie-Chow coefficient \n  // of element (ae) and neighbor (an) of the face\n  if (_face_type == FaceInfo::VarFaceNeighbors::ELEM || _face_type == FaceInfo::VarFaceNeighbors::BOTH)\n  {\n    const auto dof_number = _face_info->elem().dof_number(_sys.number(), _var.number(), 0);\n    // norm_strain_rate is a linear combination of degrees of freedom so it's safe to straight-up\n    // index into the derivatives vector at the dof we care about\n    //_ae = norm_strain_rate.derivatives()[dof_number];\n    //_ae *= -rho * eddy_diff;\n    _ae = 0.0; //rho*rs.derivatives()[dof_number];\n  }\n  if (_face_type == FaceInfo::VarFaceNeighbors::NEIGHBOR || _face_type == FaceInfo::VarFaceNeighbors::BOTH)\n  {\n    const auto dof_number = _face_info->neighbor().dof_number(_sys.number(), _var.number(), 0);\n    //_an = norm_strain_rate.derivatives()[dof_number];\n    //_an *= rho * eddy_diff;\n    _an = 0.0; //rho*rs.derivatives()[dof_number];\n  }\n\n  // Return the turbulent stress contribution to the momentum equation\n  //return -1 * rho * eddy_diff * norm_strain_rate;\n  return rho * rs;\n\n#else\n  return 0;\n#endif\n}\n\n// Move tallied contribution of Rhie-Chow coefficient into the actual coefficient, \n// held by the RC Interpolator user object. \n// The contribution is weighted by the area of the face (coord() is the RZ radius)\nvoid\nINSFV_rs_csv_ReynoldsStress::gatherRCData(const FaceInfo & fi)\n{\n  if (skipForBoundary(fi))\n    return;\n\n  _face_info = &fi;\n  _normal = fi.normal();\n  _face_type = fi.faceType(_var.name());\n\n  processResidualAndJacobian(computeStrongResidual() * (fi.faceArea() * fi.faceCoord()));\n\n  if (_face_type == FaceInfo::VarFaceNeighbors::ELEM || _face_type == FaceInfo::VarFaceNeighbors::BOTH)\n    _rc_uo.addToA(&fi.elem(), _index, _ae * (fi.faceArea() * fi.faceCoord()));\n  if (_face_type == FaceInfo::VarFaceNeighbors::NEIGHBOR || _face_type == FaceInfo::VarFaceNeighbors::BOTH)\n    _rc_uo.addToA(fi.neighborPtr(), _index, _an * (fi.faceArea() * fi.faceCoord()));\n}",
          "url": "https://github.com/idaholab/moose/discussions/23000",
          "updatedAt": "2023-01-03T22:32:47Z",
          "publishedAt": "2022-12-20T22:57:29Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@lindsayad I m curious about your thoughts on a flux kernel with the flux that does not depend on velocity (reynolds stresses preset from a CSV file), whether they should contribute to the RC coefficients.",
                  "url": "https://github.com/idaholab/moose/discussions/23000#discussioncomment-4468457",
                  "updatedAt": "2022-12-21T15:04:50Z",
                  "publishedAt": "2022-12-21T15:04:49Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "If the stresses do not depend on the velocity, then they should not contribute to the RC 'a' coefficients",
                          "url": "https://github.com/idaholab/moose/discussions/23000#discussioncomment-4469642",
                          "updatedAt": "2022-12-21T17:24:16Z",
                          "publishedAt": "2022-12-21T17:24:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think the real Reynolds stresses should, but here they dont because they are plugged in functions from CSV",
                          "url": "https://github.com/idaholab/moose/discussions/23000#discussioncomment-4471663",
                          "updatedAt": "2022-12-21T23:52:41Z",
                          "publishedAt": "2022-12-21T23:52:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Well this is the user's choice as to how they want to model it. If in their model the Reynolds stress does not change as a function of velocity, than in the linearized form of the discretized momentum equation, the Reynolds stresses would not be in the 'a' coefficients as they multiply velocity.",
                          "url": "https://github.com/idaholab/moose/discussions/23000#discussioncomment-4472036",
                          "updatedAt": "2022-12-22T01:30:37Z",
                          "publishedAt": "2022-12-22T01:30:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Swift heavy ion induced porosity and swelling",
          "author": {
            "login": "cnotthoff"
          },
          "bodyText": "Hi moose community,\nI was playing a bit with the phase field module to see if I can use moose to simulate the pore growth in GaSb under swift heavy ion irradiation see here.\nThe phase field simulation seems to describe the pore nucleation and growth quite nice for an infinite sample. However, I got stuck trying to find a way to simulate a finite samples where the volume of the matrix is conserved and the sample shape changes (uni-axial swelling) in response to the increasing pore volume. As you can see in the paper, the pore shape changes quite a lot due to the macroscopic swelling.\nIs there a way in moose to force the conservation of the matrix volume and model the swelling either by changing the mesh (using e.g. tensor_mechanics) or using a free surface on the top of a simulation volume?\nCheers,\nChristian.",
          "url": "https://github.com/idaholab/moose/discussions/17032",
          "updatedAt": "2022-12-29T08:47:36Z",
          "publishedAt": "2021-02-17T03:59:44Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Christian,\nit sounds like tensor mechanics together with strain periodicity is what you need.\nhttps://mooseframework.inl.gov/source/actions/GlobalStrainAction.html\nGlobal strain periodicity allows you to model representative volume elements with arbitrary deformation tensors applied to the overall simulation cell (uniaxial deformation, shear, volumetric expansion, etc.).\nDaniel",
                  "url": "https://github.com/idaholab/moose/discussions/17032#discussioncomment-381723",
                  "updatedAt": "2022-12-29T02:46:41Z",
                  "publishedAt": "2021-02-18T17:25:07Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cnotthoff"
                          },
                          "bodyText": "Hi Daniel,\nthanks for your response. I will give it a try with global strain.\nHowever, I'm not sure if I understand global strain correctly.\nI would like to calculate the strain which result from the bubble evolution rather then applying a given strain. What I tried up to now was to create a volumetric strain term with a magnitude dependent on the matrix/bubble fraction so that the matrix volume should remains constant, but I didn't managed to get the volume really constant and after a few iterations the solver does not converge any more.\nCheers,\nChristian.",
                          "url": "https://github.com/idaholab/moose/discussions/17032#discussioncomment-587298",
                          "updatedAt": "2022-12-29T02:46:46Z",
                          "publishedAt": "2021-04-09T00:41:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Plating stress",
          "author": null,
          "bodyText": "Dear all,\nI am trying to do electrodeposition on metal substrate.\n\nI followed several examples in https://github.com/idaholab/moose/blob/next/modules/combined/examples/phase_field-mechanics. However, it looks like all of them predict stress caused by substrate and electrolyte. At t=0, there is no deposition (or dendrite). How could I calculate stress induced by the deposition on the substrate?\nKinds,\nJung",
          "url": "https://github.com/idaholab/moose/discussions/22962",
          "updatedAt": "2023-03-28T15:38:06Z",
          "publishedAt": "2022-12-14T17:05:06Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@recuero @jiangwen84",
                  "url": "https://github.com/idaholab/moose/discussions/22962#discussioncomment-4868115",
                  "updatedAt": "2023-02-04T07:18:54Z",
                  "publishedAt": "2023-02-04T07:18:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Compiling PTScotch error while installing on a HPC Cluster",
          "author": {
            "login": "Maohua10"
          },
          "bodyText": "Dear all,\nI was following https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html to install the program and an error occurred to me while running make on PTScotch.\nI'd appreciate any help on this.\nThanks a lot,\nMaohua\n                              Compiling PTScotch; this may take several minutes                                                                                                                                             ===================================================================                                                                                                                 *******************************************************************************\n         UNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\n-------------------------------------------------------------------------------\nError running make on PTScotch: Could not execute \"['cd /storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src && make clean ptesmumps esmumps']\":\n/usr/bin/mkdir -p ../bin\n/usr/bin/mkdir -p ../include\n/usr/bin/mkdir -p ../lib\n(cd libscotch ;      make clean)\nmake[1]: Entering directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotch'\nrm -f *~ *.o lib*.a parser_yy.c parser_ly.h parser_ll.c *scotch.h *scotchf.h y.output *dummysizes\nmake[1]: Leaving directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotch'\n(cd scotch ;         make clean)\nmake[1]: Entering directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/scotch'\nrm -f *~ *.o acpl amk_ccc amk_fft2 amk_grf amk_hy amk_m2 amk_p2 atst gbase gcv gdump *ggath *gmap gmk_hy gmk_m2 gmk_m3 gmk_msh gmk_ub2 gmtst *gord gotst gout *gpart *gscat *gtst mcv mmk_m2 mmk_m3 mord mtst\nmake[1]: Leaving directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/scotch'\n(cd libscotchmetis ; make clean)\nmake[1]: Entering directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotchmetis'\nrm -f *~ *.o lib*.a metis.h metisf.h parmetis.h\nmake[1]: Leaving directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotchmetis'\n(cd check ;          make clean)\nmake[1]: Entering directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/check'\nrm -f *~ *.o\nmake[1]: Leaving directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/check'\n(cd esmumps ;        make clean)\nmake[1]: Entering directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/esmumps'\nrm -f *~ common.h *.o lib*.a main_esmumps\nmake[1]: Leaving directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/esmumps'\n(cd libscotch ;      make VERSION=6 RELEASE=1 PATCHLEVEL=1 scotch && make install)\nmake[1]: Entering directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotch'\nmake \t\t\t\t\t\\\n\t\t\t\tCC=\"mpicc\"\t\t\t\t\t\\\n\t\t\t\tCCD=\"mpicc\"\t\t\t\t\t\\\n\t\t\t\tscotch.h\t\t\t\t\t\\\n\t\t\t\tscotchf.h\t\t\t\t\t\\\n\t\t\t\tlibscotch.a\t\t\t\t\t\\\n\t\t\t\tlibscotcherr.a\t\t\t\t\\\n\t\t\t\tlibscotcherrexit.a\nmake[2]: Entering directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotch'\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch.c -o arch.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1 dummysizes.c -o dummysizes -lrt\n./dummysizes \"-s\" library.h scotch.h\n./dummysizes \"-s\" library_f.h scotchf.h\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_build.c -o arch_build.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_build2.c -o arch_build2.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_cmplt.c -o arch_cmplt.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_cmpltw.c -o arch_cmpltw.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_deco.c -o arch_deco.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_deco2.c -o arch_deco2.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_dist.c -o arch_dist.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_hcub.c -o arch_hcub.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_mesh.c -o arch_mesh.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_sub.c -o arch_sub.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_tleaf.c -o arch_tleaf.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_torus.c -o arch_torus.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_vcmplt.c -o arch_vcmplt.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c arch_vhcub.c -o arch_vhcub.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph.c -o bgraph.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_bd.c -o bgraph_bipart_bd.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_df.c -o bgraph_bipart_df.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_ex.c -o bgraph_bipart_ex.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_fm.c -o bgraph_bipart_fm.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_gg.c -o bgraph_bipart_gg.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_gp.c -o bgraph_bipart_gp.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_ml.c -o bgraph_bipart_ml.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_st.c -o bgraph_bipart_st.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_bipart_zr.c -o bgraph_bipart_zr.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_check.c -o bgraph_check.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c bgraph_store.c -o bgraph_store.o -DSCOTCH_VERSION_NUM=6 -DSCOTCH_RELEASE_NUM=1 -DSCOTCH_PATCHLEVEL_NUM=1\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c common.c -DSCOTCH_COMMON_RENAME -o common.o\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c common_file.c -DSCOTCH_COMMON_RENAME -o common_file.o\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c common_file_compress.c -DSCOTCH_COMMON_RENAME -o common_file_compress.o\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c common_file_decompress.c -DSCOTCH_COMMON_RENAME -o common_file_decompress.o\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c common_integer.c -DSCOTCH_COMMON_RENAME -o common_integer.o\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c common_memory.c -DSCOTCH_COMMON_RENAME -o common_memory.o\nmpicc -fPIC -wd1572 -g -O3 -std=c99  -DCOMMON_RANDOM_FIXED_SEED -DSCOTCH_RENAME -Drestrict=\"__restrict\" -DINTSIZE64 -DSCOTCH_METIS_PREFIX  -c common_string.c -DSCOTCH_COMMON_RENAME -o common_string.o\nmake[2]: Leaving directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotch'\nmake[1]: Leaving directory `/storage/home/m/mzz5396/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotch'In file included from /usr/include/sys/wait.h(30),\n                 from common.h(132),\n                 from common_string.c(57):\n/usr/include/signal.h(156): error: identifier \"siginfo_t\" is undefined\n  extern void psiginfo (const siginfo_t *__pinfo, const char *__s);\n                              ^\n\ncompilation aborted for common_string.c (code 2)\nmake[2]: *** [common_string.o] Error 2\nmake[1]: *** [scotch] Error 2\nmake: *** [libscotch] Error 2\n*******************************************************************************\n\nThere was an error. Exiting...          ]",
          "url": "https://github.com/idaholab/moose/discussions/22940",
          "updatedAt": "2022-12-28T23:23:31Z",
          "publishedAt": "2022-12-10T20:32:05Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "friedmud"
                  },
                  "bodyText": "You got this just from running ./scripts/update_and_rebuild_petsc.sh?  That is very odd.  Are you sure that you have loaded a good development environment (modules) on your cluster?  Check with your cluster admins / cluster documentation.\nThe other thing you could do is disable pt scotch (we don't use it normally anyway).  You can pass any PETSc configure option right to update_and_rebuild_petsc.sh and it will pass it through.  You can find the right option by running ./configure -help in the petsc directory (sorry - I'm away from a computer with PETSc on it right now to find the option).\nHowever, I really think this is most-likely a problem with your environment... and there are likely to be other issues with compiling other things.",
                  "url": "https://github.com/idaholab/moose/discussions/22940#discussioncomment-4368007",
                  "updatedAt": "2022-12-10T20:49:18Z",
                  "publishedAt": "2022-12-10T20:49:18Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Maohua10"
                          },
                          "bodyText": "Thank you for the quick feedback! I am not familiar with the environment thing, cause I am new in this field.\nCould you please tell me which modules should I load besides CMake and Python 3.x?\nBest regards,\nMaohua",
                          "url": "https://github.com/idaholab/moose/discussions/22940#discussioncomment-4368292",
                          "updatedAt": "2022-12-10T21:12:31Z",
                          "publishedAt": "2022-12-10T21:12:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You ll also need an MPI distribution\nThe instructions are here in case you have not found them https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html\nWhat modules do you have loaded now?",
                          "url": "https://github.com/idaholab/moose/discussions/22940#discussioncomment-4373492",
                          "updatedAt": "2022-12-11T21:35:30Z",
                          "publishedAt": "2022-12-11T21:35:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Maohua10"
                          },
                          "bodyText": "Thank you for the help, here are the available modules on the cluster\n\nI can see that impi is loaded here.",
                          "url": "https://github.com/idaholab/moose/discussions/22940#discussioncomment-4373522",
                          "updatedAt": "2022-12-11T21:47:09Z",
                          "publishedAt": "2022-12-11T21:47:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "oh we dont support impi and all intel compilers",
                          "url": "https://github.com/idaholab/moose/discussions/22940#discussioncomment-4373720",
                          "updatedAt": "2022-12-11T22:46:47Z",
                          "publishedAt": "2022-12-11T22:46:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you ll have to use openmpi/mpich or mvapich wrapping gcc or clang",
                          "url": "https://github.com/idaholab/moose/discussions/22940#discussioncomment-4373721",
                          "updatedAt": "2022-12-11T22:47:07Z",
                          "publishedAt": "2022-12-11T22:47:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Maohua10"
                          },
                          "bodyText": "you ll have to use openmpi/mpich or mvapich wrapping gcc or clang\n\nI loaded mpich module and it finally works, thank you for your kind help!!",
                          "url": "https://github.com/idaholab/moose/discussions/22940#discussioncomment-4437864",
                          "updatedAt": "2022-12-17T14:35:03Z",
                          "publishedAt": "2022-12-17T14:35:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Any exercises to practice phase field to faciliate understanding?",
          "author": {
            "login": "ZhigangPu"
          },
          "bodyText": "Dear,\n(Feel free to point out if it is not appropriate to pose such questions here :))\nI wonder is there some book about phase field that has exercises? I've read books  written by Nikolas Provatas and I also downloaded some sample code to play with but I still feel that I don't really understand phase field, I think I may need some exercises to help me understand.\nBest,\nzhigang",
          "url": "https://github.com/idaholab/moose/discussions/19342",
          "updatedAt": "2022-12-28T23:58:49Z",
          "publishedAt": "2021-11-10T02:08:24Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "There s a tutorial here\nhttps://mooseframework.inl.gov/modules/phase_field/Tutorial.html",
                  "url": "https://github.com/idaholab/moose/discussions/19342#discussioncomment-1616423",
                  "updatedAt": "2022-12-28T23:10:06Z",
                  "publishedAt": "2021-11-10T02:28:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "and some good info in general on this page\nhttps://mooseframework.inl.gov/modules/phase_field/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/19342#discussioncomment-1616428",
                          "updatedAt": "2022-12-28T23:10:06Z",
                          "publishedAt": "2021-11-10T02:29:21Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ZhigangPu"
                  },
                  "bodyText": "Thanks a lot, I'll read through it!",
                  "url": "https://github.com/idaholab/moose/discussions/19342#discussioncomment-1617607",
                  "updatedAt": "2022-12-28T23:10:06Z",
                  "publishedAt": "2021-11-10T08:15:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Turn all Pressure BC's off",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "I've got a model with a bunch of different pressures (using Pressure BC) applied to different surfaces. At some time, I'd like to turn all that off (zero pressure everywhere). What's a good way to do that? I've heard about controllable parameters but it doesn't look like any parameters in Pressure BC are controllable?",
          "url": "https://github.com/idaholab/moose/discussions/22706",
          "updatedAt": "2022-12-28T21:55:49Z",
          "publishedAt": "2022-11-15T13:31:51Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAre the pressure BC directly in the input file or are they added by an Action?\nThe Control system is able to turn on and off most blocks in the input file at will.\n@YaqiWang might have advice on how to do this for an action\nIf you are refering to this system, https://mooseframework.inl.gov/syntax/BCs/Pressure/index.html\nI d investigate the control tags parameter\nAnother solution is to modify/remove the sidesets when you want to turn the pressure BCs off\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4147260",
                  "updatedAt": "2022-11-15T14:38:39Z",
                  "publishedAt": "2022-11-15T14:38:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "I'm using the action if that helps. Actually, I have my own custom action that calls the Pressure action!",
                          "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4147460",
                          "updatedAt": "2022-11-15T14:56:21Z",
                          "publishedAt": "2022-11-15T14:56:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok so the control_tags parameter is likely not forwarded at this point down to the BCs.\nI would try to add the show_actions parameter to [Debug], get the names of the pressure BCs from there, then specify those names in a ConditionalEnableControl\n  [turn_off]\n    type = ConditionalFunctionEnableControl\n    disable_objects = 'BCs::name'\n    conditional_function = 'conditional_function'\n    execute_on = 'timestep_begin'\n  []\n\nif this does not work because the object name is not in the input file, then I would look at forwarding the control_tags parameter.\nYou can look at this PR to see how this was worked on recently, I may be mistaken\n#22069",
                          "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4147633",
                          "updatedAt": "2022-11-15T15:13:24Z",
                          "publishedAt": "2022-11-15T15:13:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "@GiudGiud sanity check - What's a simple way to get a signal this is working, and working for all Pressure BCs (of which there may be many)? Maybe a Postprocessor I can use to check that the applied force is zero?",
                          "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4510314",
                          "updatedAt": "2022-12-28T19:25:24Z",
                          "publishedAt": "2022-12-28T19:25:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ah I have a PR that can do that for you but it s not in yet :(\nYou can put a print statement in the BC\nor\nyou can design a postprocessor to measure the force",
                          "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4510568",
                          "updatedAt": "2022-12-28T20:18:05Z",
                          "publishedAt": "2022-12-28T20:18:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "@GiudGiud another question: can I add the ConditionalFunctionEnableControl object from an action? I don't see an addControl method.",
                          "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4510791",
                          "updatedAt": "2022-12-28T21:22:46Z",
                          "publishedAt": "2022-12-28T21:21:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If it s been done it will have been in the thermal hydraulics module",
                          "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4510821",
                          "updatedAt": "2022-12-28T21:29:58Z",
                          "publishedAt": "2022-12-28T21:29:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "THMAddControlAction.C seems to have some logic for that",
                          "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4510824",
                          "updatedAt": "2022-12-28T21:30:45Z",
                          "publishedAt": "2022-12-28T21:30:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "How much of that logic do I need for a non-THM problem?",
                          "url": "https://github.com/idaholab/moose/discussions/22706#discussioncomment-4510931",
                          "updatedAt": "2022-12-28T21:55:50Z",
                          "publishedAt": "2022-12-28T21:55:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}