{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wNC0xNFQwOToxMDoyMi0wNTowMM4AOPFR"
    },
    "edges": [
      {
        "node": {
          "title": "perf_graph_reporter tests fail",
          "author": {
            "login": "hzclarksm"
          },
          "bodyText": "perf_graph_reporter tests fail because python2 is used instead of python3.  A simple fix is\ndiff --git a/test/tests/reporters/perf_graph_reporter/tests b/test/tests/reporters/perf_graph_reporter/tests\nindex 8dd72564b0..f28107debd 100644\n--- a/test/tests/reporters/perf_graph_reporter/tests\n+++ b/test/tests/reporters/perf_graph_reporter/tests\n@@ -12,7 +12,7 @@\n[]\n[verify]\ntype = RunCommand\n\n\n command = 'python verify_perf_graph_reporter.py'\n\n\n\n\n\n command = 'python3 verify_perf_graph_reporter.py'\n prereq = test/run\n detail = 'and shall provide a tool to post process said information'\n\n[]\n@@ -39,7 +39,7 @@\n[]\n[verify]\ntype = RunCommand\n\n\n\n command = 'python verify_perf_graph_reporter.py recover'\n\n\n\n\n\n command = 'python3 verify_perf_graph_reporter.py recover'\n prereq = recover/run\n detail = 'and shall provide a tool to post process said information'\n\n[]",
          "url": "https://github.com/idaholab/moose/discussions/24049",
          "updatedAt": "2023-04-17T15:14:48Z",
          "publishedAt": "2023-04-12T19:33:38Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "Will address in #24061",
                  "url": "https://github.com/idaholab/moose/discussions/24049#discussioncomment-5638494",
                  "updatedAt": "2023-04-17T15:14:49Z",
                  "publishedAt": "2023-04-17T15:14:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "the creep under pressure is not converge",
          "author": {
            "login": "wangzhaohao"
          },
          "bodyText": "this is i first  use creep in MOOSE, I want to do is a tube with different pressure. the input is flow.\n[GlobalParams]\n  displacements = 'disp_r disp_z'\n[]\n\n[Mesh]\n  type = FileMesh\n  file = ../../geometry/clad_only.e\n  coord_type = RZ\n\n  patch_update_strategy = iteration\n[]\n\n[AuxVariables]\n  [temp]\n    initial_condition = 573.15\n  []\n[]\n\n[AuxKernels]\n  [temp_aux]\n    type = ParsedAux\n    variable = temp\n    expression = 573.15\n  []\n[]\n\n[Modules/TensorMechanics/Master]\n  [all]\n    strain = FINITE \n    incremental = true\n    add_variables = true\n  []\n[]\n\n[BCs]\n  [disp_z]\n    type = DirichletBC\n    variable = disp_z\n    boundary = 'pin_bottom'\n    value = 0.0\n    preset = true\n  []\n  [pressure_r]\n    type = Pressure\n    boundary = 'clad_inside'\n    factor = 2e6\n    variable = disp_r\n  []\n  [pressure_outer]\n    type = Pressure\n    boundary = 'outer'\n    factor = 15.5e6\n    variable = disp_r\n  []\n[]\n\n[Materials]\n  [elasticity_tensor]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 2e11\n    poissons_ratio = 0.3\n  []\n  [radial_return_stress]\n    type = ComputeMultipleInelasticStress\n    inelastic_models = 'power_law_creep'\n    tangent_operator = elastic\n  []\n  [power_law_creep]\n    type = PowerLawCreepStressUpdate\n    coefficient = 1.0e-17\n    n_exponent = 1\n    activation_energy = 0.0\n    absolute_tolerance = 1e-11\n    relative_tolerance = 1e-10\n    temperature = temp\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n\n  petsc_options_iname = '-pc_hypre_type'\n  petsc_options_value = 'boomeramg'\n\n  line_search = 'none'\n\n  nl_forced_its = 1\n  l_max_its = 50\n  nl_max_its = 20\n  nl_rel_tol = 1e-5\n  nl_abs_tol = 1e-5\n  l_tol = 1e-3\n  start_time = 0.0\n  end_time = 10\n  num_steps = 10\n  dt = 1\n[]\n\n[Outputs]\n  exodus = true\n[]\n\nand the mesh is also here\nclad_only.e.gz\uff0c\nDo you have any advice? It is due to BC? thanks for you help!",
          "url": "https://github.com/idaholab/moose/discussions/24085",
          "updatedAt": "2023-04-17T13:13:48Z",
          "publishedAt": "2023-04-17T03:06:21Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "Use  direct solver, see below\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'lu'\n\nIt will be better to use disp_x and disp_y instead of _r and _z. For visualization, Paraview can recognize displacement vector from disp_x and _y.",
                  "url": "https://github.com/idaholab/moose/discussions/24085#discussioncomment-5631897",
                  "updatedAt": "2023-04-17T03:21:02Z",
                  "publishedAt": "2023-04-17T03:21:02Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "thanks,!! how did i learn to use executioner? I usually the\npetsc_options_inam\npetsc_options_vlaue\n\nis from the test.",
                          "url": "https://github.com/idaholab/moose/discussions/24085#discussioncomment-5631926",
                          "updatedAt": "2023-04-17T03:31:36Z",
                          "publishedAt": "2023-04-17T03:31:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If you want to make custom ones, you ll want to check out the petsc manual\notherwise, the tests, the examples and the tutorials are good references for finding what has been used.\nhttps://petsc.org/release/manual/",
                          "url": "https://github.com/idaholab/moose/discussions/24085#discussioncomment-5637018",
                          "updatedAt": "2023-04-17T13:13:48Z",
                          "publishedAt": "2023-04-17T13:13:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to change an old version of the source file to a new version of the source file\uff1f",
          "author": {
            "login": "KangChenRui"
          },
          "bodyText": "Hello everyone!\nThe old version of the source file have \"template <>\" in MOOSE.\nHow can I convert an old version of the source file into a new version of the source file? Because I made modifications to the source file in the old version, now I want to use the modified source file for calculation.\nThanks for your help\uff01\nnew ACInterface.txt\nold ACInterface.txt",
          "url": "https://github.com/idaholab/moose/discussions/24082",
          "updatedAt": "2023-04-17T03:15:43Z",
          "publishedAt": "2023-04-16T00:58:27Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou're likely referring to the \"validParams\" template deprecation.\nThere's more information on updating there\nhttps://mooseframework.inl.gov/newsletter/2020/2020_04.html#c1ba1ef6-13a6-4210-bedb-0b691fec2ce7\nFrom the files it seems you've already done it. What is the issue now?\nYou can modify the source files as you need\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24082#discussioncomment-5628602",
                  "updatedAt": "2023-04-16T13:55:38Z",
                  "publishedAt": "2023-04-16T13:55:37Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "KangChenRui"
                          },
                          "bodyText": "Thanks for your reply!",
                          "url": "https://github.com/idaholab/moose/discussions/24082#discussioncomment-5631865",
                          "updatedAt": "2023-04-17T03:15:35Z",
                          "publishedAt": "2023-04-17T03:15:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Can I use THM module in my own app?",
          "author": {
            "login": "Ethan-xj"
          },
          "bodyText": "@joshuahansel @GiudGiud The codes I wrote these days are all in THM document. I was going to create a new app but I found there was no switch to turn on THM module in the Makefile. I want to know that if I can use THM module in my own app now?\nEthan",
          "url": "https://github.com/idaholab/moose/discussions/24083",
          "updatedAt": "2023-04-29T02:47:09Z",
          "publishedAt": "2023-04-16T11:54:14Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can add that switch in the Makefile.\nAdd: THERMAL_HYDRAULICS          := yes\nnext to the other modules\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24083#discussioncomment-5628577",
                  "updatedAt": "2023-04-16T13:52:04Z",
                  "publishedAt": "2023-04-16T13:52:03Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "OK, I think this need me to update the MOOSE version.",
                          "url": "https://github.com/idaholab/moose/discussions/24083#discussioncomment-5631280",
                          "updatedAt": "2023-04-17T01:13:42Z",
                          "publishedAt": "2023-04-17T01:13:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[Single-phase pipe flow] Dirackernel oscillation?",
          "author": {
            "login": "Joseph-0123"
          },
          "bodyText": "Dear all,\nRecently, I wanted to simulate a 1D single-phase pipe flow with pressure (Pa), temperature (K), and volume flow rate (m3/s) as variables. I added a Dirackernel of pressure to remove the fluid mass at the middle position and ending position, respectively.  However, the results are unstable.\nCould you please help me on fixing this kind of Dirackernel oscillation? Thanks a lot.\nRegards,\nJ\nResults of the dirackernel of pressure at the middle position\n\nResults of the dirackernel of pressure at the ending position",
          "url": "https://github.com/idaholab/moose/discussions/24011",
          "updatedAt": "2023-04-29T02:47:29Z",
          "publishedAt": "2023-04-09T21:15:48Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhy a DiracKernel and not just a boundary condition at the end, or a volumetric sink in the middle?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566112",
                  "updatedAt": "2023-04-09T21:17:50Z",
                  "publishedAt": "2023-04-09T21:17:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "Hello\nWhy a DiracKernel and not just a boundary condition at the end, or a volumetric sink in the middle?\nGuillaume\n\nThanks for your answers.\nWhat is the difference between DiracKernel and a volumetric sink in the middle? I know the DiracKernel plays as a point source. How does the role volumetric sink play?",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566129",
                          "updatedAt": "2023-04-09T21:24:05Z",
                          "publishedAt": "2023-04-09T21:24:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "a volumetric source (or sink) would be smoother numerically than a DiracKernel (adding only on one node). Less discontinuities tend to bring less oscillations",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566133",
                          "updatedAt": "2023-04-09T21:25:24Z",
                          "publishedAt": "2023-04-09T21:25:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "a volumetric source (or sink) would be smoother numerically than a DiracKernel (adding only on one node). Less discontinuities tend to bring less oscillations\n\nSo you mean the volumetric source (or sink) is adding to several nodes rather than one node? How many nodes does it apply to? How can I control the number of nodes?",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566148",
                          "updatedAt": "2023-04-09T21:29:54Z",
                          "publishedAt": "2023-04-09T21:29:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "well it really would apply to elements rather than nodes.\nAre you saying nodes because that equation is using nodal vartiables?",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566202",
                          "updatedAt": "2023-04-09T21:43:21Z",
                          "publishedAt": "2023-04-09T21:43:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "Are you saying nodes because that equation is using nodal vartiables?\n\nYes, because FE equations use nodes to compute variables. I am wondering how does this volumetric sink work on the element in the FE equations or weak forms?",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566215",
                          "updatedAt": "2023-04-09T21:48:03Z",
                          "publishedAt": "2023-04-09T21:48:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "well it really would apply to elements rather than nodes. Are you saying nodes because that equation is using nodal vartiables?\n\nSorry, I cannot find the introduction page for using a volumetric source (or sink) in MOOSE. Could you please share the links and examples? Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566223",
                          "updatedAt": "2023-04-09T21:51:54Z",
                          "publishedAt": "2023-04-09T21:51:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes, because FE equations use nodes to compute variables.\n\nTypically not, variables that live on nodes are evaluated on quadrature points within each element, to compute the contribution to the residual/jacobian of each kernel.\nYou could just try it? BodyForce is an example of a volumetric source term kernel",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566226",
                          "updatedAt": "2023-04-09T21:53:04Z",
                          "publishedAt": "2023-04-09T21:53:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "volumetric\n\nSo the volumetric source (or sink) plays the role on the element through the quadrature points, right?",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5566234",
                          "updatedAt": "2023-04-09T21:57:34Z",
                          "publishedAt": "2023-04-09T21:57:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "Yes, because FE equations use nodes to compute variables.\n\nTypically not, variables that live on nodes are evaluated on quadrature points within each element, to compute the contribution to the residual/jacobian of each kernel. You could just try it? BodyForce is an example of a volumetric source term kernel\n\n\n\nYes, because FE equations use nodes to compute variables.\n\nTypically not, variables that live on nodes are evaluated on quadrature points within each element, to compute the contribution to the residual/jacobian of each kernel. You could just try it? BodyForce is an example of a volumetric source term kernel\n\nDear Guillaume,\nI follow your suggestion and replace dirackernel at the middle point by adding the volumetric sink (i.e., BodyForce kernel) for the middle element (i.e., the 10m part 'block 1' on the middle position of the pipe).\n[./sink]\ntype = BodyForce\nvariable = p\nfunction = -600\nblock = 1\n[../]\nHowever, I also get unstable results (shown as follows) as the dirackernel. By the way, I also set pressure BCs (i.e., NeumannBC) to remove the fluid mass in the middle position of the pipe. I still get similar unstable results.\n[./sink]\ntype = FunctionNeumannBC\nvariable = p\nboundary = out_flow\nfunction = -1800\n[../]\nCould you please help me on fixing this oscillation? Thanks a lot.\nRegards,\nJ\none element as 'block 1' with a 10m length\n\n2 times refined element as 'block 1' with a 10m length",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5572656",
                          "updatedAt": "2023-04-10T17:37:15Z",
                          "publishedAt": "2023-04-10T17:37:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok seems there are other issues.\nWhat does your variables block look like? Are you using THM or the navier stokes module?",
                          "url": "https://github.com/idaholab/moose/discussions/24011#discussioncomment-5572669",
                          "updatedAt": "2023-04-10T17:39:20Z",
                          "publishedAt": "2023-04-10T17:38:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How can I use Hermite? Why doesn't it work in that way?",
          "author": {
            "login": "Moyiqi"
          },
          "bodyText": "Hello everyone! May I ask a question?\nHow can I use Hermite? Why doesn't it work in that way?\n[Mesh]\n  type = GeneratedMesh\n  dim = 3\n  nx = 15\n  ny = 15\n  nz = 15\n  xmax = 0.06\n  ymax = 0.06\n  zmax = 0.06 \n  # parallel_type = distributed\n  elem_type= HEX27\n[]\n\n[Functions]\n  [source]\n    type = ParsedFunction\n    expression = 600\n  [../]\n  [./dts]\n    type = PiecewiseLinear\n    y = '0 0.05 1 1'\n    x = '0 1 2 50'\n  [../]\n[]\n\n\n[Variables]\n  [./temperature]\n    order = THIRD\n    family = HERMITE\n    initial_condition = 295.0 # K\n  [../]\n  [./disp_x]\n    order = THIRD\n    family = HERMITE\n  [../]\n  [./disp_y]\n    order = THIRD\n    family = HERMITE\n  [../]\n  [./disp_z]\n    order = THIRD\n    family = HERMITE\n  [../]\n[]\n\n\nLily",
          "url": "https://github.com/idaholab/moose/discussions/24066",
          "updatedAt": "2023-04-16T08:23:39Z",
          "publishedAt": "2023-04-14T07:40:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDisplacements are node displacements. So only a variable that is entirely defined by its nodal values is currently supported.\nSupport for the hermite basis is likely limited to niche applications. I m not aware of anyone using them\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24066#discussioncomment-5615127",
                  "updatedAt": "2023-04-14T11:38:18Z",
                  "publishedAt": "2023-04-14T11:38:17Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Moyiqi"
                          },
                          "bodyText": "Thank you so much!\nLily",
                          "url": "https://github.com/idaholab/moose/discussions/24066#discussioncomment-5627250",
                          "updatedAt": "2023-04-16T08:23:40Z",
                          "publishedAt": "2023-04-16T08:23:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "AuxKernel",
          "author": {
            "login": "youareit125"
          },
          "bodyText": "Hi,\nI have been working on a reaction network through zapdos/MOOSE and currently am trying to implement power balance equation into the input file as,\n[AuxVariables]\n    [Te]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 3\n    []\n\nI would like to update electron temperature every time step. A problem with this is that the function looks like below.\nP_abs = qn_eu_BA_effE_t(Te) where E_t(Te) = A1exp(-E1/Te) + A2exp(-E2/Te) + A3Te + A4Te^(0.4) + ...\nAt the beginning I wanted to use AuxScalarKernels,\n[AuxScalarKernels]\n  [Te_calculation]\n    type = ParsedAuxScalar\n    variable = Te\n    function = \n    execute_on = 'INITIAL TIMESTEP_BEGIN'\n  []\n\nQuickly realized that the function needs to be Te = func which I think it is possible right now because I am running a simplified reaction network but in the future when I have a full reaction network, this won't work,\nIs there a module that I can use in order to solve for Te while the function is left as,\nfunction = (q*n_e*u_B*A_eff*E_t(Te))/P_abs\n\nThank you in advance.\nSincerely,\nTag S. Choi",
          "url": "https://github.com/idaholab/moose/discussions/24044",
          "updatedAt": "2023-04-29T02:48:12Z",
          "publishedAt": "2023-04-12T16:58:53Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSo you want to solve an ODE on each element to obtain Te ?\nDo you have a preference for the solve method?\nWould you consider having Te as part of the nonlinear system or would you rather the solves be independent from the nonlinear system?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24044#discussioncomment-5596760",
                  "updatedAt": "2023-04-12T19:51:30Z",
                  "publishedAt": "2023-04-12T19:51:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "youareit125"
                          },
                          "bodyText": "Hi,\nI apologize for a late reply. I believe so and I do not have any preference. Lastly, I think Te would be a part of the nonlinear system. To give you more details, I have created an example file.\n[Mesh]\n    type = GeneratedMesh\n    dim = 1\n    xmin = 0\n    xmax = 1\n    nx = 1\n[]\n[Variables]\n    [Ar+]\n\t\tfamily = SCALAR\n\t\torder = FIRST\n\t\tinitial_condition = 1e6\n    []\n    [Ar4p]\n\t\tfamily = SCALAR\n\t\torder = FIRST\n\t\tinitial_condition = 1.0\n    []\n    [Arm]\n\t\tfamily = SCALAR\n\t\torder = FIRST\n\t\tinitial_condition = 1.0\n    []\n    [Arr]\n\t\tfamily = SCALAR\n\t\torder = FIRST\n\t\tinitial_condition = 1.0\n    []\n    [Ar]\n\t\tfamily = SCALAR\n\t\torder = FIRST\n\t\tinitial_condition = 1.2077294685990326e+21\n    []\n[]\n\n[ScalarKernels]\n    [dAr+_dt]\n\t\ttype = ODETimeDerivative\n\t\tvariable = Ar+\n    []\n    [dAr4p_dt]\n\t\ttype = ODETimeDerivative\n\t\tvariable = Ar4p\n    []\n    [dArm_dt]\n\t\ttype = ODETimeDerivative\n\t\tvariable = Arm\n    []\n    [dArr_dt]\n\t\ttype = ODETimeDerivative\n\t\tvariable = Arr\n    []\n    [dAr_dt]\n\t\ttype = ODETimeDerivative\n\t\tvariable = Ar\n    []\n[]\n\n[ChemicalReactions]\n    [ScalarNetwork]\n        species = 'Ar+ Ar4p Arm Arr Ar'\n        equation_constants = 'R l'\n        equation_values = '0.1 0.05'\n        equation_variables = 'Te hL hR uB'\n        interpolation_type = 'spline'\n        aux_species = 'e Ar4s'\n\n        reactions = 'e + Ar -> e + Ar          :2.336e-14*Te^(1.609)*exp(0.0618*(log(Te))^2-0.1171*(log(Te))^2)\n                    e + Ar -> e + Ar4s         :5e-15*Te^(0.74)*exp(-11.56/Te)\n                    e + Ar -> e + Ar4p         :1.4e-14*Te^(0.71)*exp(-13.2/Te)\n                    e + Ar4s -> e + Ar4p       :8.9e-13*Te^(0.51)*exp(-1.59/Te)\n                    e + Ar4s -> e + Ar         :4.3e-16*Te^(0.74)\n                    e + Ar4p -> e + Ar         :3.9e-16*Te^(0.71)\n                    e + Ar4p -> e + Ar4s       :3.0e-13*Te^(0.51)\n                    e + Ar -> e + e + Ar+      :2.34e-14*Te^(0.59)*exp(-17.44/Te)\n                    e + Ar4s -> e + e + Ar+    :6.8e-15*Te^(0.67)*exp(-4.2/Te)\n                    e + Ar4p -> e + e + Ar+    :1.8e-13*Te^(0.61)*exp(-2.61/Te)\n                    e + Arm -> e + Arr         :2e-13\n                    Arr -> Ar                  :3e7\n                    Ar4p -> Ar                 :3.2e7\n                    e -> wall                  :2*uB*(R^2*hL + R*l*hL)/(R^2*l)\n                    Ar+ -> Ar                  :2*uB*(R^2*hL + R*l*hL)/(R^2*l)'\n    []\n[]\n\n[AuxVariables]\n    [neutrals]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 1.2077294685990326e+21\n    []\n    [Ar4s]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 2.0\n    []\n    [e]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 1e6\n    []\n    [Te]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 3.0\n    []\n    [k_iz]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 1.34e-16\n    []\n    [lambda_i]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 2.5593e-6\n    []\n    [Dn]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 4.0075e-4\n    []\n    [uB]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 2691.66\n    []\n    [Da]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 4.69e-2\n    []\n    [hL]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 1.367e-4\n    []\n    [hR]\n        order = FIRST\n        family = SCALAR\n        initial_condition = 5.4365e-5\n    []\n[]\n\n[AuxScalarKernels]\n    [neutral_sum]\n        type = VariableSum\n        variable = neutrals\n        args = 'Ar4p Ar4s Ar'\n        execute_on = 'LINEAR TIMESTEP_END'\n    []\n    [Ar4s_sum]\n        type = VariableSum\n        variable = Ar4s\n        args = 'Arm Arr'\n        execute_on = 'LINEAR TIMESTEP_END'\n    []\n    [Quasi_neutrality]\n        type = VariableSum\n        variable = e\n        args = 'Ar+'\n        execute_on = 'LINEAR TIMESTEP_END'\n    []\n    [k_iz_calc]\n        type = ParsedAuxScalar\n        variable = k_iz\n        args = 'Te'\n        function = '2.34e-14*Te^(0.59)*exp(-17.44/Te)'\n        execute_on = 'TIMESTEP_END'\n    []\n    [lambda_i_calc]\n        type = ParsedAuxScalar\n        variable = lambda_i\n        args = 'neutrals'\n        function = '1/(3.2368e-16*neutrals)'\n        execute_on = 'TIMESTEP_END'\n    []\n    [Dn_calc]\n        type = ParsedAuxScalar\n        variable = Dn\n        constant_names = 'kB Tg mAr pi'\n        constant_expressions = '1.38064851e-23 300 6.6335e-26 3.142'\n        args = 'lambda_i'\n        function = 'kB*Tg*lambda_i/(mAr*sqrt(8*kB*Tg/(pi*mAr)))'\n        execute_on = 'TIMESTEP_END'\n    []\n    [uB_calc]\n        type = ParsedAuxScalar\n        variable = uB\n        constant_names = 'q mAr'\n        constant_expressions = '1.602e-19 6.6335e-26'\n        args = 'Te'\n        function = 'sqrt(q*Te/mAr)'\n        execute_on = 'TIMESTEP_END'\n    []\n    [Da_calc]\n        type = ParsedAuxScalar\n        variable = Da\n        constant_names = 'q kB Tg'\n        constant_expressions = '1.602e-19 1.38064851e-23 300'\n        args = 'Dn Te'\n        function = 'Dn*sqrt(1+q*Te/(kB*Tg))'\n        execute_on = 'TIMESTEP_END'\n    []\n    [hL_calc]\n        type = ParsedAuxScalar\n        variable = hL\n        constant_names = 'pi l'\n        constant_expressions = '3.142 0.05'\n        args = 'uB Da lambda_i'\n        function = '0.86/sqrt(3 + l/(2*lambda_i) + (0.86*l*uB/(pi*Da))^2)'\n        execute_on = 'TIMESTEP_END'\n    []\n    [hR_calc]\n        type = ParsedAuxScalar\n        variable = hL\n        constant_names = 'R Xi J'\n        constant_expressions = '0.1 2.405 0.519'\n        args = 'uB Da lambda_i'\n        function = '0.8/sqrt(4 + R/lambda_i + (0.8*R*uB/(Xi*J*Da))^2)'\n        execute_on = 'TIMESTEP_END'\n    []\n    [Te_calc]\n        type = ParsedAuxScalar\n        variable = Te\n        constant_names = 'R l'\n        constant_expressions = '0.1 0.05'\n        args = 'k_iz uB neutrals hL hR'\n        function = ''\n        execute_on = 'TIMESTEP_END'\n    []\n[]\n\n[Executioner]\n    type = Transient\n    automatic_scaling = true\n    end_time = 1e-3\n    solve_type = 'linear'\n    dtmin = 1.0e-20\n    dtmax = 1e-06\n    petsc_options_iname = '-snes_linesearch_type'\n    petsc_options_value = 'basic'\n    [TimeStepper]\n        type = IterationAdaptiveDT\n        cutback_factor = 0.9\n        dt = 1e-12\n        growth_factor = 1.005\n    []\n[]\n\n[Preconditioning]\n    [smp]\n        type = SMP\n        full = true\n    []\n[]\n\n[Outputs]\n    [out]\n        type = CSV\n        execute_on = 'TIMESTEP_END'\n    []\n[]\n\nThe function for Te_calc is left blank, because the formula looks like, k_iz(Te)/uB(Te) = 1/(neutrals0.5Rl/(RhL(Te, l)+l*hR(Te, l)). I have changed the formula to solve for Te because it looks like this is simpler formula to use.\nSince I have made l as constant, I would like to update Te as neutrals are updated from sum of species at each time step.",
                          "url": "https://github.com/idaholab/moose/discussions/24044#discussioncomment-5618811",
                          "updatedAt": "2023-04-14T17:40:47Z",
                          "publishedAt": "2023-04-14T17:36:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok let s just add it as an equation then.\nYou can:\n\nadd Te to the list of nonlinear variables (instead of auxiliary)\nwrite this equation in a ParsedMaterial\nuse the MatReaction kernel to make it appear\n\nyou could also just write a custom kernel (code in C++), probably something based off of coupledReaction",
                          "url": "https://github.com/idaholab/moose/discussions/24044#discussioncomment-5620021",
                          "updatedAt": "2023-04-14T20:28:20Z",
                          "publishedAt": "2023-04-14T20:27:22Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "field split solver option to optimize performance of a mortar contact problem",
          "author": {
            "login": "BoZeng1997"
          },
          "bodyText": "Hi,\nThis question is based on #24019. This discussion focuses on the solver options to save memory usage. The input deck here is a simplified version of my real problem but includes all aspects. The real problem has more blocks and contact pairs, and the majority of the DOF is in the interior. The thermal mechanical problem is overly resolved for the coupling of a phase-field subapp (not mentioned in the simplified input deck here).\n\nI have tried using Preconditioning/FSP but it ran into error\n\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to SUBPC_ERROR \nNonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 0\n\n\nany recommendation on the petsc_options, petsc_options_iname, petsc_options_value when the lowerDblock for contact pairs is of 100k nodes and the interior 1M of nodes.\n\nThe input deck is based on #24019 and modified as follows (mostly direct copy from test files. I am not familiar with the petsc options)\n[Preconditioning]\n  [FSP]\n    type = FSP\n    topsplit = 'contact_interior'\n    solve_type = NEWTON\n    [contact_interior]\n      splitting = 'interior contact'\n      splitting_type = schur\n      petsc_options = '-snes_ksp_ew'\n      petsc_options_iname = '-ksp_gmres_restart -pc_fieldsplit_schur_fact_type -mat_mffd_err'\n      petsc_options_value = '200                full                           1e-5'\n      schur_pre = 'S'\n    []\n    [interior]\n      vars = 'disp_x disp_y disp_z T_K'\n      petsc_options_iname = '-ksp_type -pc_type -pc_hypre_type '\n      petsc_options_value = 'gmres   hypre  boomeramg'\n    []\n    [contact]\n      vars = 'lm_pellet'\n    []\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n  automatic_scaling = true\n  line_search = none\n  ignore_variables_for_autoscaling = 'lm_pellet ' \n  compute_scaling_once = true \n  scaling_group_variables = 'disp_x disp_y disp_z; T_K' \n  nl_rel_tol = 1e-50\n  nl_abs_tol = 1e-8\n  nl_max_its = 20\n  dtmin = 1\n  dt = 1\n  start_time = 0\n  end_time = 7\n[]",
          "url": "https://github.com/idaholab/moose/discussions/24020",
          "updatedAt": "2023-04-29T02:48:27Z",
          "publishedAt": "2023-04-10T19:37:57Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "BoZeng1997"
                  },
                  "bodyText": "I looked at some of the example input file with field split preconditioner for mortar method. All of them provide the normal_lm to FSP/[contact]/var, the case for mechanical contact. Does this split work on no normal_lm case, with only the heat flux lm?.",
                  "url": "https://github.com/idaholab/moose/discussions/24020#discussioncomment-5595421",
                  "updatedAt": "2023-04-12T17:12:38Z",
                  "publishedAt": "2023-04-12T17:12:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "BoZeng1997"
                  },
                  "bodyText": "I am also trying to add normal_lm to my input deck to see if this make the simulation run. My workstation runs the example ihttps://github.com/idaholab/moose/blob/5abc85030822e55c218e413f7cf282cae653ff18/modules/contact/test/tests/fieldsplit/frictionless_mortar_FS.i well. But I got the following error when running my problem with 1 cpu:\n[0]PETSC ERROR: --------------------- Error Message --------------------------------------------------------------\n[0]PETSC ERROR: Petsc has generated inconsistent data\n[0]PETSC ERROR: Unhandled case, must have at least two fields, not 0\n[0]PETSC ERROR: See https://petsc.org/release/faq/ for trouble shooting.\n[0]PETSC ERROR: Petsc Release Version 3.16.6, unknown \n[0]PETSC ERROR: /home/bz75/projects/raccoon/raccoon-opt on a  named egr-bozeng by bz75 Wed Apr 12 13:06:50 2023\n[0]PETSC ERROR: Configure options --download-hypre=1 --with-shared-libraries=1 --with-hdf5-dir=${PREFIX}  --with-make-np=16  --with-debugging=no --download-fblaslapack=1 --download-metis=1 --download-ptscotch=1 --download-parmetis=1 --download-superlu_dist=1 --download-mumps=1 --download-strumpack=1 --download-scalapack=1 --download-slepc=1 --with-mpi=1 --with-openmp=1 --with-cxx-dialect=C++11 --with-fortran-bindings=0 --with-sowing=0 --with-64-bit-indices --COPTFLAGS=-O3 --CXXOPTFLAGS=-O3 --FOPTFLAGS=-O3 --with-x=0 --with-ssl=0 CC=mpicc CXX=mpicxx FC=mpif90 FC=mpif90 FC=mpif77 AR=${PREFIX}/bin/x86_64-conda-linux-gnu-ar RANLIB=${PREFIX}/bin/x86_64-conda-linux-gnu-ranlib CFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/bz75/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/bz75/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell\" CXXFLAGS=\"-fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem ${PREFIX}/include -std=c++17 -march=nocona -mtune=haswell\" CPPFLAGS=\"-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/bz75/mambaforge3/envs/moose/include -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/bz75/mambaforge3/envs/moose/include\" FFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/bz75/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/bz75/mambaforge3/envs/moose/include   -I/home/bz75/mambaforge3/envs/moose/include\" FCFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/bz75/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/bz75/mambaforge3/envs/moose/include   -I/home/bz75/mambaforge3/envs/moose/include\" LDFLAGS=\"-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/home/bz75/mambaforge3/envs/moose/lib -Wl,-rpath-link,/home/bz75/mambaforge3/envs/moose/lib -L/home/bz75/mambaforge3/envs/moose/lib -Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/home/bz75/mambaforge3/envs/moose/lib -Wl,-rpath-link,/home/bz75/mambaforge3/envs/moose/lib -L/home/bz75/mambaforge3/envs/moose/lib\" --prefix=/home/bz75/mambaforge3/envs/moose\n[0]PETSC ERROR: #1 PCFieldSplitSetDefaults() at /data/civet1/build/mamba/conda-bld/moose-petsc_1673315186604/work/src/ksp/pc/impls/fieldsplit/fieldsplit.c:569\n[0]PETSC ERROR: #2 PCSetUp_FieldSplit() at /data/civet1/build/mamba/conda-bld/moose-petsc_1673315186604/work/src/ksp/pc/impls/fieldsplit/fieldsplit.c:612\n[0]PETSC ERROR: #3 PCSetUp() at /data/civet1/build/mamba/conda-bld/moose-petsc_1673315186604/work/src/ksp/pc/interface/precon.c:1017\n[0]PETSC ERROR: #4 KSPSetUp() at /data/civet1/build/mamba/conda-bld/moose-petsc_1673315186604/work/src/ksp/ksp/interface/itfunc.c:408\n[0]PETSC ERROR: #5 KSPSolve_Private() at /data/civet1/build/mamba/conda-bld/moose-petsc_1673315186604/work/src/ksp/ksp/interface/itfunc.c:852\n[0]PETSC ERROR: #6 KSPSolve() at /data/civet1/build/mamba/conda-bld/moose-petsc_1673315186604/work/src/ksp/ksp/interface/itfunc.c:1086\n[0]PETSC ERROR: #7 SNESSolve_NEWTONLS() at /data/civet1/build/mamba/conda-bld/moose-petsc_1673315186604/work/src/snes/impls/ls/ls.c:225\n[0]PETSC ERROR: #8 SNESSolve() at /data/civet1/build/mamba/conda-bld/moose-petsc_1673315186604/work/src/snes/interface/snes.c:4809\nlibMesh terminating:\nUnhandled case, must have at least two fields, not 0\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\n\nframework info\nFramework Information:\nMOOSE Version:           git commit b35f3b36c9 on 2023-03-23\nLibMesh Version:         \nPETSc Version:           3.16.6\nSLEPc Version:           3.16.2\nCurrent Time:            Wed Apr 12 13:06:55 2023\nExecutable Timestamp:    Tue Apr  4 14:54:57 2023\n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n\ninput file, link to the mesh file https://duke.box.com/s/rrg20ri0xi2c4p43k9u6kwoy2i8ll3p4\nstress_free_temperature = 300\nthermal_expansion_coeff = 6.66e-6\n\n[Problem]\n  type = FEProblem\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n  temperature = T_K\n[]\n\n[Mesh]\n  patch_update_strategy = iteration\n  use_displaced_mesh = true\n  patch_size = 40\n  [ori]\n    type = FileMeshGenerator\n    file = 'pellets_mm_h0.2.msh'\n  []\n  uniform_refine = 1\n[]\n\n[Variables]\n  [disp_x]\n    block = 'pellet_inner pellet_outer '\n  []\n  [disp_y]\n    block = 'pellet_inner pellet_outer '\n  []\n  [disp_z]\n    block = 'pellet_inner pellet_outer '\n  []\n  [T_K]\n    [InitialCondition]\n      type = ConstantIC\n      value = 300.0\n    []\n  []\n  [lm_pellet]\n    block = 'pellet_secondary_subdomain'\n  []\n[]\n\n[Kernels]\n  [solid_x]\n    type = ADStressDivergenceTensors\n    variable = disp_x\n    component = 0\n    block = 'pellet_inner pellet_outer'\n    use_displaced_mesh = false\n  []\n  [solid_y]\n    type = ADStressDivergenceTensors\n    variable = disp_y\n    component = 1\n    block = 'pellet_inner pellet_outer '\n    use_displaced_mesh = false\n  []\n  [solid_z]\n    type = ADStressDivergenceTensors\n    variable = disp_z\n    component = 2\n    block = 'pellet_inner pellet_outer '\n    use_displaced_mesh = false\n  []\n  [timeder]\n    type = ADHeatConductionTimeDerivative\n    variable = 'T_K'\n    density_name = density\n    specific_heat = specific_heat\n    block = 'pellet_inner pellet_outer '\n    use_displaced_mesh = true\n  []\n  [diff]\n    type = ADHeatConduction\n    variable = 'T_K'\n    thermal_conductivity = thermal_conductivity\n    block = 'pellet_inner pellet_outer '\n    use_displaced_mesh = true\n  []\n  [heatsource]\n    type = ADMatHeatSource\n    variable = 'T_K'\n    material_property = radial_source\n    block = 'pellet_inner pellet_outer '\n    use_displaced_mesh = true\n  []\n[]\n\n[Debug]\n  show_var_residual_norms = TRUE\n[]\n\n[BCs]\n  [mirror_z]\n    type = ADDirichletBC\n    variable = disp_z\n    boundary = 'mirror_innerp mirror_outerp  '\n    value = 0\n  []\n  [mirror_x]\n    type = ADDirichletBC\n    variable = disp_x\n    boundary = 'mirror_innerp mirror_outerp  '\n    value = 0\n  []\n  [mirror_y]\n    type = ADDirichletBC\n    variable = disp_y\n    boundary = 'mirror_innerp mirror_outerp  '\n    value = 0\n  []\n[]\n\n[Materials]\n  [pellet_properties]\n    type = ADGenericConstantMaterial\n    prop_names = 'density  thermal_conductivity specific_heat'\n    prop_values = '3.3112e-3  34e-3 1.2217e3' \n    block = 'pellet_inner pellet_outer'\n  []\n  [pulse_shape_linear]\n    type = ADGenericFunctionMaterial\n    prop_values = '5e-2*max(11455*(t)/7,1e-9)'\n    prop_names = 'radial_source'\n    output_properties = 'radial_source'\n    block = 'pellet_inner pellet_outer'\n    use_displaced_mesh = false\n  []\n  [strain]\n    type = ADComputeSmallStrain\n    displacements = 'disp_x disp_y disp_z'\n    eigenstrain_names = eigenstrain #nameS!\n    block = 'pellet_inner pellet_outer '\n  []\n  [thermal_strain]\n    type = ADComputeThermalExpansionEigenstrain\n    stress_free_temperature = ${stress_free_temperature} \n    thermal_expansion_coeff = ${thermal_expansion_coeff} \n    eigenstrain_name = eigenstrain\n    block = 'pellet_inner pellet_outer '\n  []\n  [elasticity]\n    type = ADComputeIsotropicElasticityTensor\n    youngs_modulus = 3.306e5\n    poissons_ratio = 0.329\n  []\n  [stress]\n    type = ADComputeLinearElasticStress\n    block = 'pellet_inner pellet_outer '\n  []\n[]\n\n[Contact]\n  [pellet]\n    primary = void_pellet_0\n    secondary = void_pellet_1\n    model = frictionless\n    formulation = mortar\n    c_normal = 1e6 \n    correct_edge_dropping = true\n  []\n[]\n\n[UserObjects]\n  [conduction]\n    type = GapFluxModelConduction\n    temperature = T_K\n    boundary = 'void_pellet_0 void_pellet_1    '\n    gap_conductivity = 0.4\n    use_displaced_mesh = true\n  []\n  [rad_pellet]\n    type = GapFluxModelRadiation\n    temperature = T_K\n    boundary = void_pellet_0\n    primary_emissivity = 0.37\n    secondary_emissivity = 0.37\n    use_displaced_mesh = true\n  []\n[]\n\n[Constraints]\n  [gap_pellet]\n    type = ModularGapConductanceConstraint\n    variable = lm_pellet\n    secondary_variable = T_K\n    primary_boundary = 'void_pellet_0'\n    primary_subdomain = pellet_primary_subdomain\n    secondary_boundary = 'void_pellet_1'\n    secondary_subdomain = pellet_secondary_subdomain\n    gap_flux_models = 'conduction rad_pellet' #closed_pellet  \n    gap_geometry_type = 'CYLINDER'\n    cylinder_axis_point_1 = '0 0 0'\n    cylinder_axis_point_2 = '0 0 1'\n    use_displaced_mesh = true\n    quadrature = SECOND\n  []\n[]\n\n[Preconditioning]\n  [FSP]\n    type = FSP\n    topsplit = 'contact_interior'\n    [contact_interior]\n      splitting = 'interior contact'\n      splitting_type = schur\n      petsc_options = '-snes_ksp_ew'\n      petsc_options_iname = '-ksp_gmres_restart -pc_fieldsplit_schur_fact_type -mat_mffd_err'\n      petsc_options_value = '200                full                           1e-5'\n      schur_pre = 'S'\n    []\n    [interior]\n      vars = 'disp_x disp_y disp_z T_K'\n      petsc_options_iname = '-ksp_type -pc_type -pc_hypre_type '\n      petsc_options_value = 'gmres   hypre  boomeramg'\n    []\n    [contact]\n      vars = 'pellet_normal_lm'\n    []\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n  line_search = none\n  nl_rel_tol = 1e-50\n  nl_abs_tol = 1e-8\n  nl_max_its = 20\n  dtmin = 1\n  dt = 1\n  start_time = 0\n  end_time = 3\n[]\n\n[Outputs]\n  print_linear_residuals = false\n  file_base = fsp_withnormallm\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/24020#discussioncomment-5595489",
                  "updatedAt": "2023-04-12T17:55:15Z",
                  "publishedAt": "2023-04-12T17:21:35Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nWhat kind of variable is 'pellet_normal_lm' here?\nI only see lm_pellet in the input file?\nTo be specified in the field split for a preconditioner, it needs to be a nonlinear variable.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/24020#discussioncomment-5615272",
                          "updatedAt": "2023-04-14T11:56:46Z",
                          "publishedAt": "2023-04-14T11:56:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "It's created by the contact action",
                          "url": "https://github.com/idaholab/moose/discussions/24020#discussioncomment-5619328",
                          "updatedAt": "2023-04-14T18:38:08Z",
                          "publishedAt": "2023-04-14T18:38:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Ok I'll try running this, but @BoZeng1997 I'm not going to be able to help out much more on these intricate questions",
                          "url": "https://github.com/idaholab/moose/discussions/24020#discussioncomment-5619353",
                          "updatedAt": "2023-04-14T18:41:44Z",
                          "publishedAt": "2023-04-14T18:41:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "To give a general answer to your question, I would encourage you to try options like the following based off work done in #22405. This is for Navier-Stokes but there are conceptual similarities with mechanical contact. I would put your primal variables (displacements and temperature) with boomeramg and then try something like Jacobi for your Lagrange multipliers. You may even try tossing the thermal contact LM in with the primal block as it does have a diagonal.\n      petsc_options_iname = '-pc_fieldsplit_schur_fact_type  -pc_fieldsplit_schur_precondition -ksp_gmres_restart'\n      petsc_options_value = 'full                            selfp                             200'\n    []\n    [u]\n      vars = 'vel_x vel_y'\n      petsc_options_iname = '-pc_type -pc_hypre_type -ksp_type'\n      petsc_options_value = 'hypre    boomeramg      preonly'\n    []\n    [p]\n      vars = 'pressure'\n      petsc_options_iname = '-ksp_type -pc_type'\n      petsc_options_value = 'preonly   jacobi'",
                  "url": "https://github.com/idaholab/moose/discussions/24020#discussioncomment-5619394",
                  "updatedAt": "2023-04-14T18:47:03Z",
                  "publishedAt": "2023-04-14T18:47:02Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "In general for NS I have had better experience using selfp and a preconditioner like Jacobi for the Schur complement preconditioning than I have with setting -pc_fieldsplit_schur_precondition self which is the petsc command line option equivalent of what you are doing when setting schur_pre = S in your top split MOOSE input block",
                          "url": "https://github.com/idaholab/moose/discussions/24020#discussioncomment-5619421",
                          "updatedAt": "2023-04-14T18:50:32Z",
                          "publishedAt": "2023-04-14T18:49:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Material property has same name as an existing variable error",
          "author": {
            "login": "AndrewFalkowski"
          },
          "bodyText": "Hello,\nI am running an input file that pulls from the tensor mechanics module and am getting the following error: The material property output max_principal_stress has the same name as an existing variable, either use the material declare_suffix parameter to disambiguate or the output_properties parameter to restrict the material properties to output. I haven't run into this issue before with similar input files, and I can't seem to find where this variable is being previously declared or what material objects are producing a variable with a similar name. Any advice on how to get around this?\nI've included relevant code below for a problem wherein a material has swelled in response to the diffusion of a species into it.:\n[GlobalParams]\n  displacements = 'disp_r'\n[]\n[Mesh]\n  coord_type = RZ\n  [gen]\n    type = FileMeshGenerator\n    file = 'outputs/Diffusion_Profile.e'\n    use_for_exodus_restart = true\n    show_info = false\n  []\n[]\n\n[AuxVariables]\n  [C]\n    initial_from_file_var = C\n  []\n[]\n\n[Kernels]\n[]\n\n[AuxKernels]\n[]\n\n[Modules/TensorMechanics/Master]\n  [all]\n    strain = SMALL\n    add_variables = true\n    use_automatic_differentiation = false\n    automatic_eigenstrain_names = true\n    material_output_order = SECOND\n    generate_output = 'vonmises_stress max_principal_stress min_principal_stress'\n  []\n[]\n\n\n[BCs]\n  [no_disp]\n    type = DirichletBC\n    variable = disp_r\n    boundary = left\n    value = 0.0\n  []\n[]\n\n[Materials]\n  [mat_E]\n    type = PiecewiseLinearInterpolationMaterial\n    variable = C\n    property = E_mat\n    x = '0 2'\n    y = '95 130'\n    scale_factor = 1e9\n  []\n  [mat_elastic_properties]\n    type = ComputeVariableIsotropicElasticityTensor\n    args = C\n    poissons_ratio = 0.32\n    youngs_modulus = E_mat\n  []\n  [swelling] # using thermal expansion as analogue \n    type = ComputeThermalExpansionEigenstrain\n    eigenstrain_name = thermal_expansion\n    stress_free_temperature = 0\n    temperature = C\n    thermal_expansion_coeff = 0.07\n  []\n  [stress]\n    type = ComputeLinearElasticStress\n  []\n[]\n[Executioner]\n  type = Steady\n  solve_type = PJFNK\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n  automatic_scaling = true\n  compute_scaling_once = false\n[]\n\n[Outputs]\n  [exo]\n    type = Exodus\n    output_material_properties = true\n    file_base = 'user/outputs/Stress_Profile'\n  []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/24065",
          "updatedAt": "2023-04-14T17:32:18Z",
          "publishedAt": "2023-04-13T23:19:48Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIt s coming from this line\n    generate_output = 'vonmises_stress max_principal_stress min_principal_stress'\nyou could just remove that one from the output\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5610468",
                  "updatedAt": "2023-04-14T00:37:45Z",
                  "publishedAt": "2023-04-14T00:37:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "AndrewFalkowski"
                          },
                          "bodyText": "Thank you for the quick response. I am a little confused though as I have never encountered this issue in similar input files where I include that line. I don't see why that would be causing an issue. Additionally, when I remove, I get a new error:\n*** ERROR ***\nThe following error occurred in the object \"all_strain\", of type \"ComputeAxisymmetricRZSmallStrain\".\n\nFor 2D simulations where the out-of-plane direction is z the number of supplied displacements must be two.\n\nThis is a 1D simulation, so it should only need one displacement variable. Not sure what could be causing this.",
                          "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5617381",
                          "updatedAt": "2023-04-14T15:24:10Z",
                          "publishedAt": "2023-04-14T15:23:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "RZ is 2D though. Is your mesh 1D?\nYou could supply a second dummy displacement for now.",
                          "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5617397",
                          "updatedAt": "2023-04-14T15:25:24Z",
                          "publishedAt": "2023-04-14T15:25:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AndrewFalkowski"
                          },
                          "bodyText": "My understanding was that RZ was simply specifying the coordinate type (in this case, cylindrical), not the number of dimensions in the simulation.\nHow does one supply a dummy displacement? Adding a dummy disp_z through [GlobalParams] throws an error because the mesh is only 1D.",
                          "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5617425",
                          "updatedAt": "2023-04-14T15:29:15Z",
                          "publishedAt": "2023-04-14T15:28:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Oh for sure, the dimension is set by the mesh.\nIt seems that this material / strain model is expecting 2D though.\nLooks like you cant use a dummy displacement unless you make your mesh trivial in an additional dimension.",
                          "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5617540",
                          "updatedAt": "2023-04-14T15:41:18Z",
                          "publishedAt": "2023-04-14T15:40:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AndrewFalkowski"
                          },
                          "bodyText": "Hmm ok, I would think it would be possible to compute that quantity over a 1D model.\n\nIt s coming from this line\ngenerate_output = 'vonmises_stress max_principal_stress min_principal_stress'\nyou could just remove that one from the output\n\nReturning to my original inquiry, removing this line also removes these calculated values from my output. While I can certainly calculate these quantities from the tensor outputs, I shouldn't have to and I haven't had to remove this line from Tensor Mechanics sims I have done in the past. Is there a material object that might be overwriting or predefining them somewhere?",
                          "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5618388",
                          "updatedAt": "2023-04-14T16:56:09Z",
                          "publishedAt": "2023-04-14T16:56:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so you have both\noutput_material_properties = true\nand\ngenerate_output = 'vonmises_stress max_principal_stress min_principal_stress'\ncould those be conflicting? Can you try only the latter",
                          "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5618448",
                          "updatedAt": "2023-04-14T17:00:53Z",
                          "publishedAt": "2023-04-14T17:00:53Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "otherwise seems like a bug and we d open an issue",
                          "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5618453",
                          "updatedAt": "2023-04-14T17:01:26Z",
                          "publishedAt": "2023-04-14T17:01:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AndrewFalkowski"
                          },
                          "bodyText": "That seems to be the problem, thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/24065#discussioncomment-5618776",
                          "updatedAt": "2023-04-14T17:32:19Z",
                          "publishedAt": "2023-04-14T17:32:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Elastic Fracture of Functionally Graded Materials with Peridynamics Module",
          "author": {
            "login": "ppandit95"
          },
          "bodyText": "Dear MOOSE Community\nI am trying to simulate propagation of crack in a functionally graded material with a initial crack using NOSPD formulation and I need to apply stress as boundary condition on the top and bottom surface of the rectangular plate . So Any headers in this regard will be helpful.\nMany Thanks\nPushkar",
          "url": "https://github.com/idaholab/moose/discussions/19588",
          "updatedAt": "2023-04-14T14:10:22Z",
          "publishedAt": "2021-12-09T09:22:26Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe NOSPD models have theoretical documentation here:\nhttps://mooseframework.inl.gov/modules/peridynamics/PeridynamicModels.html\nAnd source/input documentation (how to choose between each model) here:\nhttps://mooseframework.inl.gov/syntax/Modules/Peridynamics/Mechanics/Master/index.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1780432",
                  "updatedAt": "2022-06-21T15:37:51Z",
                  "publishedAt": "2021-12-09T16:41:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "thanks @GiudGiud for directing to the relevent documentation for NOSPD model but I didn't see any documentation for Boundary Conditions for peridynamics module and so far in most of the tests DirichletBC has been used.So I was wondering is it the only BC that is applicable or can we apply NeumannBC and Robin BC as well",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1783329",
                          "updatedAt": "2022-06-21T15:37:51Z",
                          "publishedAt": "2021-12-10T03:47:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "@hchen139  I remembered you applied NeumannBC before. Need an additional layer? Could you comment here?",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1783421",
                          "updatedAt": "2022-06-21T15:37:51Z",
                          "publishedAt": "2021-12-10T04:23:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hchen139"
                          },
                          "bodyText": "You can first construct a sideset based on the FE sideset by setting the \"construct_pd_sidesets = true\" in your mesh block, and then apply the Neumann BC in the same way as in FE using the constructed sideset.",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1786508",
                          "updatedAt": "2022-06-21T15:37:51Z",
                          "publishedAt": "2021-12-10T15:54:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "ohh... thanks @hchen139 for elaborating on the implementation of NeumannBCs",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1795702",
                          "updatedAt": "2022-07-14T21:02:28Z",
                          "publishedAt": "2021-12-13T03:58:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "thanks @jiangwen84 and @GiudGiud for looking into this discussion thread and directing to relevant sources",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1795710",
                          "updatedAt": "2022-07-14T21:02:24Z",
                          "publishedAt": "2021-12-13T04:00:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ppandit95"
                  },
                  "bodyText": "As a first step to this simulation,I tried to simply extend the 2D stress based failure test by extending the end time up to which the simulation runs but encountered an error which says that \"the shape tensor is singular\" even though I have added SingularShapeTensorEliminatorUserObjectPD\".Any header in this regard will be helpful as I am looking to reproduce a simulation of crack propagation in NOSPD material",
                  "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1811439",
                  "updatedAt": "2022-06-21T15:38:01Z",
                  "publishedAt": "2021-12-15T09:15:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hchen139"
                  },
                  "bodyText": "You may consider change the applied boundary conditions. In the input file, you fixed both left and right edges, while pulling the top and bottom edges in the positive and negative y directions, respectively. The crack would hardly open under these boundary conditions.\n\n\n\nHailong Chen, Ph.D.\nAssistant Professor\nDepartment of Mechanical Engineering\nCollege of Engineering\nUniversity of Kentucky\n279 Ralph G. Anderson Building\nLexington, KY 40506-0503\nmegroup.engr.uky.edu<http://megroup.engr.uky.edu/>\nt: (859)323-8114\nf: (859)257-3304\ne: ***@***.***\n\u2026\n________________________________\nFrom: Pushkar Anirudha Pandit ***@***.***>\nSent: Wednesday, December 15, 2021 4:51 AM\nTo: idaholab/moose ***@***.***>\nCc: Chen, Hailong ***@***.***>; Mention ***@***.***>\nSubject: Re: [idaholab/moose] Elastic Fracture of Functionally Graded Materials with Peridynamics Module (Discussion #19588)\n\nCAUTION: External Sender\n\n\nHere is the input file for the simulation\n\n[GlobalParams]\ndisplacements = 'disp_x disp_y'\n[]\n\n[Mesh]\ntype = PeridynamicsMesh\nhorizon_number = 3\ncracks_start = '0 10 0'\ncracks_end = '20 10 0'\n\n[./gmg]\ntype = GeneratedMeshGenerator\ndim = 2\nnx = 40\nny = 20\nxmax = 40\nymax = 20\n[../]\n[./gpd]\ntype = MeshGeneratorPD\ninput = gmg\nretain_fe_mesh = false\n[../]\n[]\n\n[Variables]\n[./disp_x]\n[../]\n[./disp_y]\n[../]\n[]\n\n[AuxVariables]\n[./damage]\n[../]\n[./intact_bonds_num]\n[../]\n[./critical_stress]\nfamily = MONOMIAL\norder = CONSTANT\n[../]\n[]\n\n[AuxKernels]\n[./bond_status]\ntype = RankTwoBasedFailureCriteriaNOSPD\nvariable = bond_status\nrank_two_tensor = stress\ncritical_variable = critical_stress\nfailure_criterion = VonMisesStress\n[../]\n[]\n\n[UserObjects]\n[./damage]\ntype = NodalDamageIndexPD\nvariable = damage\n[../]\n[./intact_bonds]\ntype = NodalNumIntactBondsPD\nvariable = intact_bonds_num\n[../]\n[./singular_shape_tensor]\ntype = SingularShapeTensorEliminatorUserObjectPD\n[../]\n[]\n\n[ICs]\n[./critical_stretch]\ntype = ConstantIC\nvariable = critical_stress\nvalue = 150\n[../]\n[]\n\n[BCs]\n[./left_x]\ntype = DirichletBC\nvariable = disp_x\nboundary = 1003\nvalue = 0.0\n[../]\n[./left_y]\ntype = DirichletBC\nvariable = disp_y\nboundary = 1003\nvalue = 0.0\n[../]\n[./right_x]\ntype = DirichletBC\nvariable = disp_x\nboundary = 1001\nvalue = '0.0'\n[../]\n[./right_y]\ntype = DirichletBC\nvariable = disp_y\nboundary = 1001\nvalue = '0.0'\n[../]\n[./bottom_x]\ntype = DirichletBC\nvariable = disp_x\nboundary = 1000\nvalue = '0.0'\n[../]\n[./bottom_y]\ntype = FunctionDirichletBC\nvariable = disp_y\nboundary = 1000\nfunction = '-0.0001t'\n[../]\n[./top_x]\ntype = DirichletBC\nvariable = disp_x\nboundary = 1002\nvalue = '0.0'\n[../]\n[./top_y]\ntype = FunctionDirichletBC\nvariable = disp_y\nboundary = 1002\nfunction = '0.0001t'\n[../]\n[./rbm_x]\ntype = RBMPresetOldValuePD\nvariable = disp_x\nboundary = 999\n[../]\n[./rbm_y]\ntype = RBMPresetOldValuePD\nvariable = disp_y\nboundary = 999\n[../]\n[]\n\n[Modules/Peridynamics/Mechanics/Master]\n[./all]\nformulation = NONORDINARY_STATE\nstabilization = BOND_HORIZON_I\n[../]\n[]\n[Materials]\n[./elasticity_tensor]\ntype = ComputeIsotropicElasticityTensor\nyoungs_modulus = 2e5\npoissons_ratio = 0.33\n[../]\n[./strain]\ntype = ComputePlaneSmallStrainNOSPD\nstabilization = BOND_HORIZON_I\n[../]\n[./stress]\ntype = ComputeLinearElasticStress\n[../]\n[]\n\n[Preconditioning]\n[./SMP]\ntype = SMP\nfull = true\n[../]\n[]\n\n[Executioner]\ntype = Transient\nsolve_type = PJFNK\nline_search = none\nstart_time = 0\ndt = 0.2\nend_time = 2\n\n[./Quadrature]\ntype = GAUSS_LOBATTO\norder = FIRST\n[../]\n[]\n\n[Outputs]\nfile_base = 2D_Elastic_Fracture_FGM\nexodus = true\n[]\n\nFrom the vtk result what I can see is damage model doesn't work as the simulation runs and the bond status does not change over the simulation .Any headers in this regards will be helpful.\n\nMany Thanks\nPushkar\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fidaholab%2Fmoose%2Fdiscussions%2F19588%23discussioncomment-1811618&data=04%7C01%7Chailong.chen%40uky.edu%7C8df89df5e64544cc8f1c08d9bfb07165%7C2b30530b69b64457b818481cb53d42ae%7C0%7C0%7C637751586803197447%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=HEjpyDhDVTgBDz3fFHlsODMHVyO4tQmjOrMIJb8V9Qg%3D&reserved=0>, or unsubscribe<https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FADYXHUOAQLSQ37UGMHN3YCDURBQJNANCNFSM5JV6MJ7A&data=04%7C01%7Chailong.chen%40uky.edu%7C8df89df5e64544cc8f1c08d9bfb07165%7C2b30530b69b64457b818481cb53d42ae%7C0%7C0%7C637751586803353679%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=zByygXEywQ1dkv0%2FiU%2F7MAucUa8EGH4ZrLVvJvQBks0%3D&reserved=0>.\nTriage notifications on the go with GitHub Mobile for iOS<https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapps.apple.com%2Fapp%2Fapple-store%2Fid1477376905%3Fct%3Dnotification-email%26mt%3D8%26pt%3D524675&data=04%7C01%7Chailong.chen%40uky.edu%7C8df89df5e64544cc8f1c08d9bfb07165%7C2b30530b69b64457b818481cb53d42ae%7C0%7C0%7C637751586803353679%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=eT%2FvOIRrqKWK3bxQl06MHO4Uk4a5suD0%2BeXSp8E2IPc%3D&reserved=0> or Android<https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Fplay.google.com%2Fstore%2Fapps%2Fdetails%3Fid%3Dcom.github.android%26referrer%3Dutm_campaign%253Dnotification-email%2526utm_medium%253Demail%2526utm_source%253Dgithub&data=04%7C01%7Chailong.chen%40uky.edu%7C8df89df5e64544cc8f1c08d9bfb07165%7C2b30530b69b64457b818481cb53d42ae%7C0%7C0%7C637751586803353679%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=kCUbF6bS6cFFVZfSr66QvhBcNJNwK1Kt9hoRkpXchyw%3D&reserved=0>.",
                  "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1830922",
                  "updatedAt": "2022-06-21T15:38:04Z",
                  "publishedAt": "2021-12-17T02:51:04Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "thanks @hchen139 for your suggestions on above issue and I did manage to get the damage model to work by changing BCs as you suggested but I am currently facing a error of singular shape tensor despite of adding shape tensor eliminator user object.",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-1831260",
                          "updatedAt": "2022-06-21T15:38:22Z",
                          "publishedAt": "2021-12-17T03:46:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yunlong010413"
                          },
                          "bodyText": "Hello, I'm getting the same error as you in my current simulation, how did you solve it then? Thank you! @ppandit95",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-5554540",
                          "updatedAt": "2023-04-07T15:38:41Z",
                          "publishedAt": "2023-04-07T15:38:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "Hi @Yunlong010413 ,although I am not completely sure this would resolve the issue but you can try reducing the time step",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-5591801",
                          "updatedAt": "2023-04-12T12:05:30Z",
                          "publishedAt": "2023-04-12T12:05:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@Yunlong010413 please open another post for this shape tensor is singular error",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-5592759",
                          "updatedAt": "2023-04-12T13:31:48Z",
                          "publishedAt": "2023-04-12T13:31:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hchen139"
                          },
                          "bodyText": "@Yunlong010413 The reason for having a singular shape tensor in the simulation process is that there are not sufficient number of unbroken bonds for a particle to construct its shape tensor due to the bond breakage in the fracture modeling process. There is a way to avoid this by fixing the particle and assigning unit shape tensor, which is already implemented in the peridynamics module. Further, the shape tensor eliminator user object can be used to break all the bonds of a particle whose shape tensor is singular, since the particle is fixed anyway.",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-5593598",
                          "updatedAt": "2023-04-12T14:42:18Z",
                          "publishedAt": "2023-04-12T14:42:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yunlong010413"
                          },
                          "bodyText": "@ppandit95 Hi, thanks for the answers you gave  @GiudGiud .I started a post about this earlier,is  #24004 (comment)\nAnd @hchen139 Thank you for your answer, I have a general understanding of this problem, but I still don't know how to use the SingularShapeTensorEliminatorUserObjectPD function in the module, the specific situation is that after using it, it still appears: The following error occurred in the object \"strain\", of type \"ComputePlaneSmallStrainNOSPD\".\nSingular shape tensor is detected in ComputeStrainBaseNOSPD! It may be because I just contacted MOOSE, many questions may seem very naive, thank you for your tolerance",
                          "url": "https://github.com/idaholab/moose/discussions/19588#discussioncomment-5616540",
                          "updatedAt": "2023-04-14T14:10:22Z",
                          "publishedAt": "2023-04-14T14:10:21Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}