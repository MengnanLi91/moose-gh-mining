{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wNS0zMFQwOToxOToyNy0wNTowMM4AT3PB"
    },
    "edges": [
      {
        "node": {
          "title": "How to achieve finite volume in Moose\uff1f",
          "author": {
            "login": "Moyiqi"
          },
          "bodyText": "Hello everyone, may I ask two questions?\nI want to implement the finite volume method in moose, may I ask which modules need to be mobilized?\nAnd how to realize mapping for non-finite element discrete physical field in MOOSE?\nThank you very much\uff01\nLily",
          "url": "https://github.com/idaholab/moose/discussions/24516",
          "updatedAt": "2023-06-01T01:35:33Z",
          "publishedAt": "2023-05-28T11:30:54Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nFinite volume is in the framework, it can be utilized in any module.\nThe navier stokes module is currently the only example using finite volume\nWhere is the non-finite element discrete field coming from? Does it have an analytical form?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24516#discussioncomment-6022897",
                  "updatedAt": "2023-05-28T13:15:32Z",
                  "publishedAt": "2023-05-28T13:15:32Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Moyiqi"
                          },
                          "bodyText": "Sorry,I don't make myself clear enough. In other words\uff0chow does moose implement finite element to infinite element mapping?\nLily",
                          "url": "https://github.com/idaholab/moose/discussions/24516#discussioncomment-6023042",
                          "updatedAt": "2023-05-28T13:52:50Z",
                          "publishedAt": "2023-05-28T13:52:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Not sure. Libmesh has a concept of infinite element you ll want to have a look at their website maybe ask on the libmesh discussions forum",
                          "url": "https://github.com/idaholab/moose/discussions/24516#discussioncomment-6023054",
                          "updatedAt": "2023-05-28T13:54:53Z",
                          "publishedAt": "2023-05-28T13:54:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Moyiqi"
                          },
                          "bodyText": "Thank you!\nLily",
                          "url": "https://github.com/idaholab/moose/discussions/24516#discussioncomment-6025493",
                          "updatedAt": "2023-05-29T01:10:23Z",
                          "publishedAt": "2023-05-29T01:10:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "@roystgnr",
                          "url": "https://github.com/idaholab/moose/discussions/24516#discussioncomment-6040822",
                          "updatedAt": "2023-05-30T17:34:31Z",
                          "publishedAt": "2023-05-30T17:34:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "I've never actually used the infinite elements capability myself.  It's got a bit of test coverage in libMesh that does double duty as usage examples: miscellaneous examples 1, 14, and 15 ... but has it ever been used in MOOSE?  It's a non-default configuration option and I don't think it's one that the default MOOSE libMesh build script has enabled ... and although MOOSE users can work with a custom-configured libMesh, git grep InfElemBuilder isn't showing me anything in MOOSE, and I think a meshgenerator calling on that would have been the very first thing a user would have added.  It wouldn't have been the last thing, though; the Sobolev-weighted quadrature needed for element assembly is slightly different too.",
                          "url": "https://github.com/idaholab/moose/discussions/24516#discussioncomment-6041844",
                          "updatedAt": "2023-05-30T19:43:47Z",
                          "publishedAt": "2023-05-30T19:43:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Moyiqi"
                          },
                          "bodyText": "Thank you for your answer. It's very enlightening.\nLily",
                          "url": "https://github.com/idaholab/moose/discussions/24516#discussioncomment-6055183",
                          "updatedAt": "2023-06-01T01:35:33Z",
                          "publishedAt": "2023-06-01T01:35:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Putting function is MatAnisoDiffusion",
          "author": {
            "login": "haqfariha"
          },
          "bodyText": "I am working on multi-phase field model.  I need to use 2 diffusion rate tensors for 2 different conditions. Am I providing the command correctly or do I need to change anything?\n[diff_cCu]\n    type = MatAnisoDiffusion\n    variable = c\n    diffusivity = 'if(hCu>0.8, D_bulk, D_int)' \n    v = cCu\n    args = 'etaCu'\n    material_property_names = 'hCu'\n  [ ] \n\nWhile running this, I get error message- Material property 'if(hCu>1, D_bulk, Dh2Cu)', requested by 'diff_cCu' is not defined on block Cu\nHow to fix that or is there certain format to follow for MatAnisoDiffusion?\nThanks in advance.",
          "url": "https://github.com/idaholab/moose/discussions/24551",
          "updatedAt": "2023-05-31T20:12:44Z",
          "publishedAt": "2023-05-31T19:01:26Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou cant put an expression for the diffusivity parameter. it has to be the name of a material property.\nPlease use this object instead to define that property:\nhttps://mooseframework.inl.gov/source/materials/ParsedMaterial.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24551#discussioncomment-6053024",
                  "updatedAt": "2023-05-31T19:12:29Z",
                  "publishedAt": "2023-05-31T19:12:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "DerivativeParsedMaterial may be what you're going for",
                          "url": "https://github.com/idaholab/moose/discussions/24551#discussioncomment-6053032",
                          "updatedAt": "2023-05-31T19:14:11Z",
                          "publishedAt": "2023-05-31T19:14:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "haqfariha"
                  },
                  "bodyText": "I need to put condition on tensor, if it is in bulk phase, bulk diffusion rate. If not, interfacial diffusion rate. ParsedMaterial works on functions or variables maybe not on tensors. How can I do that?",
                  "url": "https://github.com/idaholab/moose/discussions/24551#discussioncomment-6053310",
                  "updatedAt": "2023-05-31T19:53:58Z",
                  "publishedAt": "2023-05-31T19:53:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Easiest (but not so easy) way would be to make a ParsedTensorMaterial",
                          "url": "https://github.com/idaholab/moose/discussions/24551#discussioncomment-6053470",
                          "updatedAt": "2023-05-31T20:12:26Z",
                          "publishedAt": "2023-05-31T20:12:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@dschwen is there a phase field one",
                          "url": "https://github.com/idaholab/moose/discussions/24551#discussioncomment-6053472",
                          "updatedAt": "2023-05-31T20:12:45Z",
                          "publishedAt": "2023-05-31T20:12:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PETSC Error - after fresh system compilation",
          "author": {
            "login": "Florian-Konrad"
          },
          "bodyText": "Hi there,\nI have set up a new Ubuntu server and installed Moose (git commit 8664779 on 2023-05-16) and the app I use (GOLEM) without any problems just yesterday. When i want to start a test simulation which works perfectly on other machines I have but with older Moose versions (e.g. git commit d89c423 on 2023-05-04) I get an error related to PETSC.\nPETSC ERROR: Incompatible vector local lengths parameter # 1 local size 76570 != parameter # 2 local size 76215\nSee full terminal output below.\nAny idea what is causing this?\nCheers\nFlorian\npetsc_libmesh_error.txt",
          "url": "https://github.com/idaholab/moose/discussions/24499",
          "updatedAt": "2023-05-31T19:57:39Z",
          "publishedAt": "2023-05-26T15:02:48Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "My suspicion is that the change affecting you is #24018. If you could tell me the test input you're running and remind me where the golem repo is (I believe it's on github) then I could look into this for you",
                  "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6013100",
                  "updatedAt": "2023-05-26T15:19:42Z",
                  "publishedAt": "2023-05-26T15:19:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Thanks @lindsayad! The app that @Florian-Konrad is using is no longer on github but on an internal gitlab repo from my institution. I can add you to the members (would need an email associated to a valid git account) or Florian can rewrite the input syntax to match the old Golem version (on github) to replicate the problem.\nLet me know and thanks again,\nMauro",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6013331",
                          "updatedAt": "2023-05-26T15:43:23Z",
                          "publishedAt": "2023-05-26T15:43:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I would prefer to not have to leave github. If that becomes too complicated we can do the gitlab repo",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6014240",
                          "updatedAt": "2023-05-26T17:30:10Z",
                          "publishedAt": "2023-05-26T17:30:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Florian-Konrad"
                  },
                  "bodyText": "Thanks @mcacace and @lindsayad !\nI just tested and I get the same error when using this Golem:\nhttps://github.com/ajacquey/golem\nThe input I used to test is also here on github:\nhttps://github.com/ajacquey/golem-examples/tree/main/THM_doublet",
                  "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6014424",
                  "updatedAt": "2023-05-26T17:55:03Z",
                  "publishedAt": "2023-05-26T17:55:03Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ajacquey"
                  },
                  "bodyText": "The golem GitHub repository (https://github.com/ajacquey/golem.git) has been updated (thanks @lindsayad for the support) and the input file in question runs fine with this repository.",
                  "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6042554",
                  "updatedAt": "2023-05-30T21:19:10Z",
                  "publishedAt": "2023-05-30T21:19:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Florian-Konrad"
                          },
                          "bodyText": "Hi @ajacquey did you test with the current Moose ? I just reinstalled everything clean and still get the same error. I'm using your Golem from main branch, is this right?",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6048212",
                          "updatedAt": "2023-05-31T10:09:52Z",
                          "publishedAt": "2023-05-31T10:09:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "@Florian-Konrad and @ajacquey trying to check what's the problem with the gitlab repo as well , but keep having error while rebuilding moose (undefined reference to `hit::Section::render). Once I manage to sort them out, I will try to see if I can be of any help here.",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6048238",
                          "updatedAt": "2023-05-31T10:12:43Z",
                          "publishedAt": "2023-05-31T10:12:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Ok, I manage to install the current Moose. I'm on it ...",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6048318",
                          "updatedAt": "2023-05-31T10:20:54Z",
                          "publishedAt": "2023-05-31T10:20:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "So, @ajacquey I think the test passed because running on single processor. The problem only occurs if running on multiple processors.\nThis said, I managed to have it run while moving the declaration of the displacements vector out from the GlobalParams block.  I remembered we had a similar issue in the past, possibly being related to a different partitioning between the displaced and undisplaced mesh. @lindsayad  can it be a duplicated of https://github.com/idaholab/moose/issues/12799?",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6049430",
                          "updatedAt": "2023-05-31T12:27:49Z",
                          "publishedAt": "2023-05-31T12:27:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "@mcacace that link gives me a 404",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6052249",
                          "updatedAt": "2023-05-31T17:23:35Z",
                          "publishedAt": "2023-05-31T17:23:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Sorry wrong link (https://groups.google.com/g/moose-users/c/RI-2ZEiKzms/m/1ekZbofMDgAJ)",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6052345",
                          "updatedAt": "2023-05-31T17:35:58Z",
                          "publishedAt": "2023-05-31T17:35:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "It would be helpful if you could provide a smaller mesh for this problem, but maybe that's not possible.\nThe link is a good one. I expect it very well could be different partitions between undisplaced and displaced meshes",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6052371",
                          "updatedAt": "2023-05-31T17:39:48Z",
                          "publishedAt": "2023-05-31T17:39:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Ok #24550 seems to fix the issue for me",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6052750",
                          "updatedAt": "2023-05-31T18:27:00Z",
                          "publishedAt": "2023-05-31T18:26:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Thanks! Let me know if you need any assistance from my side.",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6052761",
                          "updatedAt": "2023-05-31T18:28:34Z",
                          "publishedAt": "2023-05-31T18:28:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Maybe just test it out and let me know if that PR works for you?",
                          "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6052781",
                          "updatedAt": "2023-05-31T18:32:42Z",
                          "publishedAt": "2023-05-31T18:32:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "mcacace"
                  },
                  "bodyText": "Will do. Thanks again",
                  "url": "https://github.com/idaholab/moose/discussions/24499#discussioncomment-6053335",
                  "updatedAt": "2023-05-31T19:57:40Z",
                  "publishedAt": "2023-05-31T19:57:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Slow on HPC",
          "author": {
            "login": "itgreenquist"
          },
          "bodyText": "Hi everyone,\nI'm currently trying to run several hundred relatively small simulations on INL's Sawtooth cluster, but I'm having an issue. The study I'm doing required me to modify some source code, so I did a custom install following the instructions on mooseframework.inl.gov. But the simulations are running incredibly slowly. A simulation that takes ~4 hours on my laptop had not finished after 7 days on the cluster (1 CPU in each case).\nI wanted to test whether it was my installation or my PBS job script, so I timed running the tests in moose/test/ on my laptop (1 CPU) and Sawtooth (8 CPUs). My laptop took 16 minutes and Sawtooth took 40 minutes.\nDoes anyone have any advice/tips to get MOOSE to run faster on Sawtooth?",
          "url": "https://github.com/idaholab/moose/discussions/24534",
          "updatedAt": "2023-05-31T15:53:27Z",
          "publishedAt": "2023-05-30T15:34:59Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI would turn on the perf_graph to see if anything obvious is being slow\nOutputs/perf_graph = true.\nThe output of the perf_graph will be shown at the end of the simulation, so I would recommend doing a short simulation rather than the 7 day one to get some insights.\nThen if there is a lot of file IO involved, it s worth running all the simulation on /scratch instead of the regular home.\nEvery user has a large amount of storage on scratch. The only caveat is that it s not backed up so please make sure to save your results to home every now and then.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6039825",
                  "updatedAt": "2023-05-30T15:49:17Z",
                  "publishedAt": "2023-05-30T15:49:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "itgreenquist"
                          },
                          "bodyText": "sawtooth_laptop_comparison.docx\nI just ran a BISON example. Here's a comparison of the perf_graph for my laptop and Sawtooth.",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6041279",
                          "updatedAt": "2023-05-30T18:30:46Z",
                          "publishedAt": "2023-05-30T18:30:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It does look like it's 3x slower on Sawtooth. Mostly driven by user objects. Are these bison-specific user objects?\n@gambka for advice on Sawtooth performance",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6041616",
                          "updatedAt": "2023-05-30T19:15:18Z",
                          "publishedAt": "2023-05-30T19:15:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "itgreenquist"
                          },
                          "bodyText": "I just picked one at random that had perf_graph already activated:\nbison/examples/2D-RZ_rodlet_10pellets/2D_discrete_finiteStrain/2D_discrete_finiteStrain.i\nIt doesn't have a UserObject block. They must be created by some of the actions. So there probably are some BISON-specific ones.",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042063",
                          "updatedAt": "2023-05-30T20:06:49Z",
                          "publishedAt": "2023-05-30T20:06:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "itgreenquist"
                          },
                          "bodyText": "However, I don't think it's a problem with my BISON install specifically, because a few months ago I noticed that a MARMOT install I did was much slower than the MARMOT module.",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042075",
                          "updatedAt": "2023-05-30T20:11:01Z",
                          "publishedAt": "2023-05-30T20:09:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vanwdani"
                          },
                          "bodyText": "I just picked one at random that had perf_graph already activated: bison/examples/2D-RZ_rodlet_10pellets/2D_discrete_finiteStrain/2D_discrete_finiteStrain.i It doesn't have a UserObject block. They must be created by some of the actions. So there probably are some BISON-specific ones.\n\nIt's kind of misleading since Postprocessors and VectorPostprocessors inherit from UserObjects, but there are a few true \"UserObjects\" that are created in that input file by the actions.",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042227",
                          "updatedAt": "2023-05-30T20:29:24Z",
                          "publishedAt": "2023-05-30T20:29:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gambka"
                          },
                          "bodyText": "As @vanwdani has said we've seen significant slow down on sawtooth. I don't expect 7 days compared to 4 hours but we have seen slowdowns on the order of 3x on some cases with the same number of processors. For your situation where you are running multiple samples, is each sample running slowly or a certain one out of the few hundred? How are you spawning your jobs are they serially solved or are the several hundred submitted at once? Is your custom code also present in the example you ran?",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6043087",
                          "updatedAt": "2023-05-30T22:04:58Z",
                          "publishedAt": "2023-05-30T22:04:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "vanwdani"
                  },
                  "bodyText": "It could just be the difference between processors used.  We have long\nnoted the difference in times when running locally on Mac, which are ARM\nbased, versus Sawtooth, which is an Intel Xeon.\n\u2026\nOn Tue, May 30, 2023 at 1:15\u202fPM Guillaume Giudicelli < ***@***.***> wrote:\n It does look like it's 3x slower on Sawtooth. Mostly driven by user\n objects. Are these bison-specific user objects?\n @gambka <https://github.com/gambka> for advice on Sawtooth performance\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#24534 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AIAGQHG6XKAGVS2RIUNBJN3XIZBNNANCNFSM6AAAAAAYUGHRBI>\n .\n You are receiving this because you are subscribed to this thread.Message\n ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042145",
                  "updatedAt": "2023-05-30T20:19:21Z",
                  "publishedAt": "2023-05-30T20:19:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "vanwdani"
                          },
                          "bodyText": "@loganharbour isn't possible for @itgreenquist  to run this on an ARM cluster?",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042177",
                          "updatedAt": "2023-05-30T20:23:03Z",
                          "publishedAt": "2023-05-30T20:23:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "itgreenquist"
                          },
                          "bodyText": "That's interesting, but I still suspect there's an issue with my installation. Is there a command to run tests or an example file using the prebuilt modules so I can compare my installation to those instead of my laptop?",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042377",
                          "updatedAt": "2023-05-30T20:50:28Z",
                          "publishedAt": "2023-05-30T20:50:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "module load use.moose bison if you have access to the binaries",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042410",
                          "updatedAt": "2023-05-30T20:56:50Z",
                          "publishedAt": "2023-05-30T20:56:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vanwdani"
                          },
                          "bodyText": "Sure, you can do something like ./run_tests -i examples --re 2Dtm_discrete_finiteStrain to run the aforementioned example.  This will run it in parallel and test it against a common standard.  You should be able to load Bison and Moose modules with the command module load use.moose moose-apps bison.  As to your installation, are you building Petsc and Libmesh manually or are you using a package manager like Mamba?",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042416",
                          "updatedAt": "2023-05-30T20:58:26Z",
                          "publishedAt": "2023-05-30T20:58:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vanwdani"
                          },
                          "bodyText": "I would still expect Sawtooth to take longer than your local machine.  As Guillaume stated, the file IO for the HPC system is a real bottleneck for speed.  As an example, you could just note the speed difference in doing a command like git status locally and remotely.  HPC is aware and always trying to fix it.\nNota bene; adding more cpus to a job can make it run slower.  There are tons of discussions here and on Slack for suggestions to match the job to cpus.",
                          "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6042469",
                          "updatedAt": "2023-05-30T21:11:03Z",
                          "publishedAt": "2023-05-30T21:05:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "itgreenquist"
                  },
                  "bodyText": "Thanks for your help @GiudGiud and @vanwdani. If it's normal for Sawtooth to run 3x slower, then the tests and examples are all working perfectly well. That means the problem is with my job script. I think it might be a memory issue. I'm going to play with the script and see if I can get these to run faster.",
                  "url": "https://github.com/idaholab/moose/discussions/24534#discussioncomment-6051423",
                  "updatedAt": "2023-05-31T15:53:24Z",
                  "publishedAt": "2023-05-31T15:53:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Question on Mortar method penetration into contact surface for contact module",
          "author": {
            "login": "chongxiyuan"
          },
          "bodyText": "Hi Moose Community,\nI am working on a 2d dynamic impact simulation of circle(cylinder for plane strain) onto a rectangle block. The boundary conditions is setting an initial velocity of the cylinder in positive y direction and study its response of impact on the block. Primary surface is the block bottom edge, and secondary surface is the upper 3/4 perimeter of the circle. I am using 1st order quad elements with volumetric locking.\n\nMy question is, sometimes the mortar method leads to penetration of the circle into the block.\nfor Mortar method the end time of the simulation\n\nbut for penalty this issue is gone for same input file and at same end time\n\nwhen I plot the penetration, I think the penetration is detected correctly with a positive number in the corners. What are some possible reasons for this issue, any advice is appreciated! The input file block is\n  [Mesh]\n    patch_update_strategy = always\n    patch_size = 10\n    #partitioner = centroid\n    #centroid_partitioner_direction = y\n  \n    [simple_mesh]\n      type = FileMeshGenerator\n      file = saph_al_r10_finesphquad.msh\n    []\n  \n  \n    # For NodalVariableValue to work with distributed mesh\n    allow_renumbering = false\n  [../]\n\n  [Contact]\n    [mechanical]\n      formulation = mortar\n      model = frictionless\n      primary = 'block_bottom'\n      secondary = 'sphere_up'\n      c_normal = 1.0e3\n      normalize_c=true\n      mortar_dynamics = true\n      newmark_beta = 0.25\n      newmark_gamma = 0.5\n\n    []\n  []\n\nfor penalty the contact block is\n  [Contact]\n    [mechanical]\n      formulation = penalty\n      model = frictionless\n      primary = 'block_bottom'\n      secondary = 'sphere_up'\n      penalty=1e3\n[]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/24493",
          "updatedAt": "2023-05-31T03:25:57Z",
          "publishedAt": "2023-05-26T03:46:42Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "@lyyc199586 I think you ran into a similar issue, right?",
                  "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6011571",
                  "updatedAt": "2023-05-26T12:59:37Z",
                  "publishedAt": "2023-05-26T12:59:36Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lyyc199586"
                          },
                          "bodyText": "yes, the only difference is I am running a quasi-static one",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6011732",
                          "updatedAt": "2023-05-26T13:16:43Z",
                          "publishedAt": "2023-05-26T13:16:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@lindsayad",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6011832",
                          "updatedAt": "2023-05-26T13:26:22Z",
                          "publishedAt": "2023-05-26T13:26:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Are you actually doing a dynamics simulation? The penalty formulation will not contain any dynamics treatment, so there's a slight apples and oranges comparison here. I'd be curious if @recuero has run into this before and see if he has any suggestions.\nMortar is a weak formulation as opposed to node-face so generally speaking you may see some penetration of the secondary nodes into the primary surface. But this is definitely a bit egregious and unexpected",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6013184",
                          "updatedAt": "2023-05-26T15:27:32Z",
                          "publishedAt": "2023-05-26T15:27:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "I have not run into this issue in particular. Edges can be an issue with Lagrange multiplier enforcement, but it shouldn't be the case for this problem. It can be related to the dynamics enforcement. There is another parameter to define, i.e. the capture tolerance. I have never run a dynamics problem with such large deformation, so I am very interested in this: @laimaster21 can you attach the entire input file and mesh that yield the problematic results?",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6013432",
                          "updatedAt": "2023-05-26T15:52:46Z",
                          "publishedAt": "2023-05-26T15:52:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "yes, the only difference is I am running a quasi-static one\n\nDid you try setting correct_edge_dropping in the action?",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6013438",
                          "updatedAt": "2023-05-26T15:53:45Z",
                          "publishedAt": "2023-05-26T15:53:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lyyc199586"
                          },
                          "bodyText": "yep, this is my contact block\n[Contact]\n  [top_contact]\n    primary = top_anvil_bottom\n    secondary = top_arc\n    model = frictionless\n    formulation = mortar\n    correct_edge_dropping = true\n    c_normal = 1e4\n  []\n  [bottom_contact]\n    primary = bottom_anvil_top\n    secondary = bot_arc\n    model = frictionless\n    formulation = mortar\n    # penalty = 1e10\n    correct_edge_dropping = true\n    c_normal = 1e4\n  []\n[]\n\nI will collect a MWE today",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6013651",
                          "updatedAt": "2023-05-26T16:14:55Z",
                          "publishedAt": "2023-05-26T16:14:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "chongxiyuan"
                          },
                          "bodyText": "Hi, this is my input file. The mechanics part is a modified crystal plasticity, and the phase field fracture is turned off with a very large critical  fracture energy.\n[GlobalParams]\n    volumetric_locking_correction = true\n    displacements = 'disp_x disp_y'\n  []\n  #\n  # [Problem]\n  #   # coord_type = RZ\n  #   type = ReferenceResidualProblem\n  #   reference_vector = 'ref'\n  #   extra_tag_vectors = 'ref'\n  # []\n  \n  [Mesh]\n    patch_update_strategy = always\n    patch_size = 10\n    #partitioner = centroid\n    #centroid_partitioner_direction = y\n  \n    [simple_mesh]\n      type = FileMeshGenerator\n      file = saph_al_r10_finesphquad.msh\n    []\n  \n  \n    # For NodalVariableValue to work with distributed mesh\n    allow_renumbering = false\n  [../]\n  \n  [Functions]\n    # [disp_y]\n    #   # PiecewiseLinear function of time, x is time\n    #   # y is dislacement\n    #   # approximate speed is 1.0\n    #   type = PiecewiseLinear\n    #   x = '0.  0.08'\n    #   y = '0.  -3.6' # at -3.6 contact is achieved\n    # []\n    #[./loading]\n      #type = ParsedFunction\n      #value='1.0'\n    #[]\n    [./dts]\n        # distance is 0.5um\n        # when up=0.3m/s, t_contact=1.0\n        type = PiecewiseLinear\n        x = '0   1.4    1.5   2.0     30'\n        y = '0.1 0.08   0.008  0.008  0.008'\n      [../]\n  []\n  [ICs]\n    [./cIC]\n      block='42'\n      type = ConstantIC\n      variable = c\n      value = 0\n    [../]\n    [./temperature_ic]\n      type = ConstantIC\n      variable = temperature\n      value = 300.0\n      block='35 42'\n    [../]\n    [./ic_u_1]\n      type = ConstantIC\n      variable = vel_y\n      value = 0.3\n      block=42\n    [../]\n  []\n\n\n  [Variables]\n    [disp_x]\n      order = FIRST\n      family = LAGRANGE\n      block='35 42'\n    []\n  \n    [disp_y]\n      order = FIRST\n      family = LAGRANGE\n      block='35 42'\n    []\n  \n    # [frictionless_normal_lm]\n    # []\n    [./temperature]\n      block='35 42'\n      order = FIRST\n  \n    [../]\n    [./c]\n      block='42'\n      order = FIRST\n  \n    [../]\n  []\n  \n  [AuxVariables]\n    [saved_x]\n      order = FIRST\n  \n    []\n    [saved_y]\n      order = FIRST\n  \n    []\n    [./vel_x]\n      block='35 42'\n      order = FIRST\n  \n    [../]\n    [./accel_x]\n      block='35 42'\n      order = FIRST\n  \n    [../]\n    [./vel_y]\n      block='35 42'\n      order = FIRST\n  \n    [../]\n    [./accel_y]\n      block='35 42'\n      order = FIRST\n  \n    [../]\n  \n  # slip stuff\n    [./lagestrainxx]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./lagestrainyy]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./lagestrainzz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./lagestrainxy]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./lagestrainyz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./lagestrainxz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rotxx]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rotyy]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rotzz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rotxy]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rotyz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rotxz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./theta]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./thetatr]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rexx]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./reyy]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rezz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rexy]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./reyz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./rexz]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n    [../]\n    [./dslip_increment_dedge]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n      components = 12\n    [../]\n    [./dslip_increment_dscrew]\n      block='42'\n      order = CONSTANT\n      family = MONOMIAL\n      components = 12\n    [../]\n    [./slip_incr1]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr2]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr3]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr4]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr5]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr6]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr7]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr8]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr9]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr10]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr11]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr12]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc1]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc2]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc3]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc4]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc5]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc6]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc7]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc8]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc9]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc10]\n      block='42'\n      order = FIRST\n      family = MONOMIAL\n    [../]\n    [./slip_incr_acc11]\n      block='42'\n        order = FIRST\n        family = MONOMIAL\n      [../]\n      [./slip_incr_acc12]\n        block='42'\n        order = FIRST\n        family = MONOMIAL\n      [../]\n      [./pressure]\n        block='35 42'\n        order = CONSTANT\n        family = MONOMIAL\n      [../]\n      [./slip_acc_vector]\n        block='42'\n        order = FIRST\n        family = MONOMIAL\n        components = 12\n      [../]\n  \n  \n          [./rho_edge1]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge2]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge3]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge4]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge5]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge6]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge7]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge8]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge9]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge10]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge11]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_edge12]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n          \n            [./rho_screw1]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw2]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw3]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw4]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw5]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw6]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw7]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw8]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw9]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw10]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw11]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n            [./rho_screw12]\n              order = CONSTANT\n              family = MONOMIAL\n              block='42'\n            [../]\n          \n            # [./slip_acc_vector]\n            #   order = FIRST\n            #   family = MONOMIAL\n            #   components = 12\n            #   block='42'\n            # [../]\n          \n            [edge_sum]\n            family = MONOMIAL\n            order = CONSTANT\n            block='42'\n            [../]\n            [screw_sum]\n            family = MONOMIAL\n            order = CONSTANT\n            block='42'\n            [../]\n  []\n  [AuxKernels]\n    [./accely]\n      type = NewmarkAccelAux\n      beta = 0.25 # assume default\n      displacement = disp_y\n      velocity = vel_y\n      variable = accel_y\n      execute_on = 'TIMESTEP_END'\n      block='35 42'\n  \n    [../]\n    [./vely]\n      type = NewmarkVelAux\n      gamma = 0.5\n      acceleration = accel_y\n      variable = vel_y\n      execute_on = 'TIMESTEP_END'\n      block='35 42'\n  \n    [../]\n    [./accelx]\n      type = NewmarkAccelAux\n      beta = 0.25 # assume default\n      displacement = disp_x\n      velocity = vel_x\n      variable = accel_x\n      execute_on = 'TIMESTEP_END'\n      block='35 42'\n  \n    [../]\n    [./velx]\n      type = NewmarkVelAux\n      gamma = 0.5\n      acceleration = accel_y\n      variable = vel_x\n      execute_on = 'TIMESTEP_END'\n      block='35 42'\n  \n    [../]\n  \n    [./pressure]\n      block='35 42'\n      type = RankTwoScalarAux\n      rank_two_tensor = stress\n      variable = pressure\n      scalar_type = Hydrostatic\n    [../]\n  \n    [./lagestrainxx]\n      block='42'\n      type = RankTwoAux\n      variable = lagestrainxx\n      rank_two_tensor = lage\n      index_j = 0\n      index_i = 0\n    [../]\n    [./lagestrainyy]\n      block='42'\n      type = RankTwoAux\n      variable = lagestrainyy\n      rank_two_tensor = lage\n      index_j = 1\n      index_i = 1\n    [../]\n    [./lagestrainzz]\n      block='42'\n      type = RankTwoAux\n      variable = lagestrainzz\n      rank_two_tensor = lage\n      index_j = 2\n      index_i = 2\n    [../]\n    [./lagestrainxy]\n      block='42'\n      type = RankTwoAux\n      variable = lagestrainxy\n      rank_two_tensor = lage\n      index_j = 1\n      index_i = 0\n    [../]\n    [./lagestrainyz]\n      block='42'\n      type = RankTwoAux\n      variable = lagestrainyz\n      rank_two_tensor = lage\n      index_j = 2\n      index_i = 1\n    [../]\n    [./lagestrainxz]\n      block='42'\n      type = RankTwoAux\n      variable = lagestrainxz\n      rank_two_tensor = lage\n      index_j = 2\n      index_i = 0\n    [../]\n    [./rotxx]\n      block='42'\n      type = RankTwoAux\n      variable = rotxx\n      rank_two_tensor = crysrot\n      index_j = 0\n      index_i = 0\n    [../]\n    [./rotyy]\n      block='42'\n      type = RankTwoAux\n      variable = rotyy\n      rank_two_tensor = crysrot\n      index_j = 1\n      index_i = 1\n    [../]\n    [./rotzz]\n      block='42'\n      type = RankTwoAux\n      variable = rotzz\n      rank_two_tensor = crysrot\n      index_j = 2\n      index_i = 2\n    [../]\n    [./rotxy]\n      block='42'\n      type = RankTwoAux\n      variable = rotxy\n      rank_two_tensor = crysrot\n      index_j = 1\n      index_i = 0\n    [../]\n    [./rotyz]\n      block='42'\n      type = RankTwoAux\n      variable = rotyz\n      rank_two_tensor = crysrot\n      index_j = 2\n      index_i = 1\n    [../]\n    [./rotxz]\n      block='42'\n      type = RankTwoAux\n      variable = rotxz\n      rank_two_tensor = crysrot\n      index_j = 2\n      index_i = 0\n    [../]\n  \n      [./rexx]\n        block='42'\n        type = RankTwoAux\n        variable = rexx\n        rank_two_tensor = re\n        index_j = 0\n        index_i = 0\n      [../]\n      [./reyy]\n        block='42'\n        type = RankTwoAux\n        variable = reyy\n        rank_two_tensor = re\n        index_j = 1\n        index_i = 1\n      [../]\n      [./rezz]\n        block='42'\n        type = RankTwoAux\n        variable = rezz\n        rank_two_tensor = re\n        index_j = 2\n        index_i = 2\n      [../]\n      [./rexy]\n        block='42'\n        type = RankTwoAux\n        variable = rexy\n        rank_two_tensor = re\n        index_j = 1\n        index_i = 0\n      [../]\n      [./reyz]\n        block='42'\n        type = RankTwoAux\n        variable = reyz\n        rank_two_tensor = re\n        index_j = 2\n        index_i = 1\n      [../]\n      [./rexz]\n        block='42'\n        type = RankTwoAux\n        variable = rexz\n        rank_two_tensor = re\n        index_j = 2\n        index_i = 0\n      [../]\n      [./theta_aux]\n        block='42'\n        type = MaterialRealAux\n        variable = theta\n        property = theta\n      [../]\n      [./thetatr_aux]\n        block='42'\n        type = MaterialRealAux\n        variable = thetatr\n        property = thetatr\n      [../]\n  \n    [./slip_incr1]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr1\n      property = slip_incr_out\n      index = 0\n      execute_on = timestep_end\n    [../]\n    [./slip_incr2]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr2\n      property = slip_incr_out\n      index = 1\n    [../]\n    [./slip_incr3]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr3\n      property = slip_incr_out\n      index = 2\n    [../]\n    [./slip_incr4]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr4\n      property = slip_incr_out\n      index = 3\n    [../]\n    [./slip_incr5]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr5\n      property = slip_incr_out\n      index = 4\n    [../]\n    [./slip_incr6]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr6\n      property = slip_incr_out\n      index = 5\n    [../]\n    [./slip_incr7]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr7\n      property = slip_incr_out\n      index = 6\n    [../]\n    [./slip_incr8]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr8\n      property = slip_incr_out\n      index = 7\n    [../]\n    [./slip_incr9]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr9\n      property = slip_incr_out\n      index = 8\n    [../]\n    [./slip_incr10]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr10\n      property = slip_incr_out\n      index = 9\n    [../]\n    [./slip_incr11]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr11\n      property = slip_incr_out\n      index = 10\n    [../]\n    [./slip_incr12]\n      block='42'\n      type = MaterialStdVectorAux\n      variable = slip_incr12\n      property = slip_incr_out\n      index = 11\n    [../]\n      [./slip_incr_acc1]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc1\n        property = slip_incr_acc\n        index = 0\n        execute_on = timestep_end\n      [../]\n      [./slip_incr_acc2]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc2\n        property = slip_incr_acc\n        index = 1\n      [../]\n      [./slip_incr_acc3]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc3\n        property = slip_incr_acc\n        index = 2\n      [../]\n      [./slip_incr_acc4]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc4\n        property = slip_incr_acc\n        index = 3\n      [../]\n      [./slip_incr_acc5]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc5\n        property = slip_incr_acc\n        index = 4\n      [../]\n      [./slip_incr_acc6]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc6\n        property = slip_incr_acc\n        index = 5\n      [../]\n      [./slip_incr_acc7]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc7\n        property = slip_incr_acc\n        index = 6\n      [../]\n      [./slip_incr_acc8]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc8\n        property = slip_incr_acc\n        index = 7\n      [../]\n      [./slip_incr_acc9]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc9\n        property = slip_incr_acc\n        index = 8\n      [../]\n      [./slip_incr_acc10]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc10\n        property = slip_incr_acc\n        index = 9\n      [../]\n      [./slip_incr_acc11]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc11\n        property = slip_incr_acc\n        index = 10\n      [../]\n      [./slip_incr_acc12]\n        block='42'\n        type = MaterialStdVectorAux\n        variable = slip_incr_acc12\n        property = slip_incr_acc\n        index = 11\n      [../]\n    [./edge_directional_derivative]\n      block='42'\n      type = ArrayDirectionalDerivative\n      variable = dslip_increment_dedge\n      gradient_variable = slip_acc_vector\n      dislo_character = edge\n      execute_on = timestep_end\n    [../]\n  \n    [./screw_directional_derivative]\n      block='42'\n      type = ArrayDirectionalDerivative\n      variable = dslip_increment_dscrew\n      gradient_variable = slip_acc_vector\n      dislo_character = screw\n      execute_on = timestep_end\n    [../]\n    [./build_slip_acc_vector]\n      block='42'\n      type = BuildArrayVariableAux\n      variable = slip_acc_vector\n      component_variables = 'slip_incr_acc1 slip_incr_acc2 slip_incr_acc3 slip_incr_acc4 slip_incr_acc5 slip_incr_acc6 slip_incr_acc7 slip_incr_acc8 slip_incr_acc9 slip_incr_acc10 slip_incr_acc11 slip_incr_acc12'\n    [../]\n  \n  \n    # dislocation densities\n    [./rho_edge1]\n      type = MaterialStdVectorAux\n      variable = rho_edge1\n      property = rho_gnd_edge\n      index = 0\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge2]\n      type = MaterialStdVectorAux\n      variable = rho_edge2\n      property = rho_gnd_edge\n      index = 1\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge3]\n      type = MaterialStdVectorAux\n      variable = rho_edge3\n      property = rho_gnd_edge\n      index = 2\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge4]\n      type = MaterialStdVectorAux\n      variable = rho_edge4\n      property = rho_gnd_edge\n      index = 3\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge5]\n      type = MaterialStdVectorAux\n      variable = rho_edge5\n      property = rho_gnd_edge\n      index = 4\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge6]\n      type = MaterialStdVectorAux\n      variable = rho_edge6\n      property = rho_gnd_edge\n      index = 5\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge7]\n      type = MaterialStdVectorAux\n      variable = rho_edge7\n      property = rho_gnd_edge\n      index = 6\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge8]\n      type = MaterialStdVectorAux\n      variable = rho_edge8\n      property = rho_gnd_edge\n      index = 7\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge9]\n      type = MaterialStdVectorAux\n      variable = rho_edge9\n      property = rho_gnd_edge\n      index = 8\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge10]\n      type = MaterialStdVectorAux\n      variable = rho_edge10\n      property = rho_gnd_edge\n      index = 9\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge11]\n      type = MaterialStdVectorAux\n      variable = rho_edge11\n      property = rho_gnd_edge\n      index = 10\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_edge12]\n      type = MaterialStdVectorAux\n      variable = rho_edge12\n      property = rho_gnd_edge\n      index = 11\n      execute_on = timestep_end\n      block='42'\n    [../]\n  \n    [./rho_screw1]\n      type = MaterialStdVectorAux\n      variable = rho_screw1\n      property = rho_gnd_screw\n      index = 0\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw2]\n      type = MaterialStdVectorAux\n      variable = rho_screw2\n      property = rho_gnd_screw\n      index = 1\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw3]\n      type = MaterialStdVectorAux\n      variable = rho_screw3\n      property = rho_gnd_screw\n      index = 2\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw4]\n      type = MaterialStdVectorAux\n      variable = rho_screw4\n      property = rho_gnd_screw\n      index = 3\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw5]\n      type = MaterialStdVectorAux\n      variable = rho_screw5\n      property = rho_gnd_screw\n      index = 4\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw6]\n      type = MaterialStdVectorAux\n      variable = rho_screw6\n      property = rho_gnd_screw\n      index = 5\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw7]\n      type = MaterialStdVectorAux\n      variable = rho_screw7\n      property = rho_gnd_screw\n      index = 6\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw8]\n      type = MaterialStdVectorAux\n      variable = rho_screw8\n      property = rho_gnd_screw\n      index = 7\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw9]\n      type = MaterialStdVectorAux\n      variable = rho_screw9\n      property = rho_gnd_screw\n      index = 8\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw10]\n      type = MaterialStdVectorAux\n      variable = rho_screw10\n      property = rho_gnd_screw\n      index = 9\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw11]\n      type = MaterialStdVectorAux\n      variable = rho_screw11\n      property = rho_gnd_screw\n      index = 10\n      execute_on = timestep_end\n      block='42'\n    [../]\n    [./rho_screw12]\n      type = MaterialStdVectorAux\n      variable = rho_screw12\n      property = rho_gnd_screw\n      index = 11\n      execute_on = timestep_end\n      block='42'\n    [../]\n  \n      #   [./frictionless_normal_lmak]\n  #   type = MaterialRealAux\n  #   property = frictionless_normal_lm\n  #   variable = frictionless_normal_lm\n  #   execute_on = timestep_end\n  # [../]\n  []\n  \n\n  \n  \n  [BCs]\n    # Symmetries of the Problem\n    [symm_x_indenter]\n      type = DirichletBC\n      variable = disp_x\n      boundary = 32\n      value = 0.0\n    []\n  \n    [symm_x_material]\n      type = DirichletBC\n      variable = disp_x\n      boundary = 34\n      value = 0.0\n    []\n  \n    [fix_blk_y]\n      type = DirichletBC\n      variable = disp_y\n      boundary = 33\n      value = 0.0\n    []\n  \n    # Material should not fly away\n    # [material_base_y]\n    #   type = DirichletBC\n    #   variable = disp_x\n    #   boundary = 141\n    #   value = 0.0\n    # []\n  \n    # Drive indenter motion\n    # [disp_y]\n    #   type = PresetVelocity\n    #   variable = disp_y\n    #   boundary = 141\n    #   function = loading\n    # []\n  []\n  [Modules]\n  \n    [./TensorMechanics/DynamicMaster]\n      [all]\n        add_variables = true\n        strain = FINITE\n        block = '35 42'\n        use_automatic_differentiation = false\n        generate_output = 'stress_xx stress_xy stress_xz stress_yy stress_yz stress_zz\n        strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx\n        strain_zy strain_zz\n  elastic_strain_xx  elastic_strain_xy  elastic_strain_xz  elastic_strain_yx  elastic_strain_yy\n   elastic_strain_yz  elastic_strain_zx  elastic_strain_zy  elastic_strain_zz  mechanical_strain_xx\n    mechanical_strain_xy  mechanical_strain_xz  mechanical_strain_yx  mechanical_strain_yy\n     mechanical_strain_yz  mechanical_strain_zx  mechanical_strain_zy  mechanical_strain_zz\n         vonmises_stress'\n        save_in = 'saved_x saved_y'\n      []\n    []\n  []\n  \n  [Kernels]\n    # [DynamicTensorMechanics]\n    #   displacements = 'disp_x disp_y'\n    #   generate_output = 'stress_xx stress_xy stress_xz stress_yy stress_zz\n    #   strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx\n    #    strain_zy strain_zz\n    #    vonmises_stress'\n    #   strain = FINITE\n    #   incremental=true\n    #   block='42'\n    #   stiffness_damping_coefficient = 1.0\n    #   hht_alpha = 0.0\n    # []\n    [inertia_x]\n      type = InertialForce\n      variable = disp_x\n      velocity= vel_x\n      acceleration = accel_x\n      beta = 0.25\n      gamma = 0.5\n      block='35 42'\n  \n      # assume default beta gamms\n      # use_displaced_mesh = true\n    []\n    [inertia_y]\n      type = InertialForce\n      variable = disp_y\n      velocity= vel_y\n      acceleration = accel_y\n      beta = 0.25\n      gamma = 0.5\n      block='35 42'\n  \n      # use_displaced_mesh = true\n    []\n  \n    [./hc]\n      type = HeatConduction\n      variable = temperature\n      block='35 42'\n  \n    [../]\n    [./hct]\n      type = HeatConductionTimeDerivative\n      variable = temperature\n      block='35 42'\n    [../]\n  \n    #       free_energy = E_elpl\n    #       kappa = kappa_op\n    #       mobility = L\n    [./c_dot]\n      block='42'\n     type = TimeDerivative\n     variable = c\n    [../]\n    [./op_bulk]\n      block='42'\n     type = AllenCahn\n     variable = c\n     f_name = E_elpl\n     mob_name = L\n    [../]\n    [./op_interface]\n      block='42'\n     type = ACInterface\n     variable = c\n     kappa_name = kappa_op\n     mob_name = L\n    [../]\n  []\n  \n  \n  \n  [Materials]\n    [./mat_prop]\n      type = GenericConstantMaterial\n      block='42'\n      prop_names = 'density  thermal_conductivity specific_heat'\n      prop_values = '2.7   164e-6       8.85e-4'\n      # thermal cond = 164W/m-K = 164e-6 pg nm ns^-3 K^-1\n      # specific heat 8.85E-4 kJ/g-K = 885 nm^2 ns^-2/K\n    [../]\n    # kJ/g= 1000J/g=1000J/1e-3kg=1e6J/kg\n    [./mat_sapph]\n      type = GenericConstantMaterial\n      block='35'\n      prop_names = 'density  thermal_conductivity specific_heat'\n      prop_values = '3.97          40e-6       757.3e-6'\n    [../]\n    [./pfbulkmat]\n      type = GenericConstantMaterial\n      block='42'\n      prop_names = 'gc_prop l visco'\n      prop_values = '8000 10 10' # set to no fracture\n      # gc=40J/m^2=\n    [../]\n    [./define_mobility]\n      block='42'\n      type = ParsedMaterial\n      material_property_names = 'gc_prop visco'\n      f_name = L\n      function = '1.0/(gc_prop * visco)'\n    [../]\n    [./define_kappa]\n      block='42'\n      type = ParsedMaterial\n      material_property_names = 'gc_prop l'\n      f_name = kappa_op\n      function = 'gc_prop * l'\n    [../]\n    # [strainsblk]\n    # type = ComputeFiniteStrain\n    # block = '35 42'\n    # []\n    [tensor_al]\n      block='42'\n      type = ComputeElasticityTensorCP\n      C_ijkl = '1.12e2 0.66e2 0.66e2 1.12e2 0.66e2 1.12e2 0.279e2 0.279e2 0.279e2'\n      # was 1.6e5, changed to match units\n      fill_method = symmetric9\n    []\n    [./elast_tensor_saph]\n      block='35'\n      type = ComputeIsotropicElasticityTensor\n      youngs_modulus = 384.8#Gpa\n      poissons_ratio = 0.3\n\n    [../]\n  \n  \n    [./crysp_hmx_fscp]\n    block='42'\n    type = FSCPdislo\n    gtol = 1e-2\n    abs_tol = 1e-6\n    slip_incr_tol = 0.025\n    maximum_substep_iteration = 1\n    gen_random_stress_flag = true\n    slip_sys_file_name = input_slip_sys.txt\n    nss = 12\n    num_slip_sys_flowrate_props = 2 #Number of properties in a slip system\n    #flowprops = '1 10 0.0  0.1'\n    flowprops = '1 4 0.001e-9 0.1 5 8 0.001e-9 0.1 9 12 0.001e-9 0.1' #a0(gamma_dot0)[1/s->1/ns], xm(m exponent)\n    hprops = '1.0 40e-3 40.8e-3 60.8e-3 2.5' #r, h0, tau_init, tau_sat, a\n    gprops = '1 12 40e-3' # initial slip resistance\n    C0 = 0.1\n    C1 = 1.0\n    c_l = 5.0\n    G_Gruneisen = 1.97\n    s_UsUp =1.34 #New MD results\n    bulk_modulus_ref = 81.33 #from Al elastic tensor  K=(C11+2*C12)/3\n    c = c\n    temp = temperature\n    reference_temperature = 300.0\n    plastic_factor = 0.0\n    kdamage = 1e-06\n    F_name = E_elpl\n    specific_heat = specific_heat\n    density_name = density\n    h_e = 2.0\n    p = pressure\n    min_line_search_step_size = 0.01\n    # burgers_vector_mag=1# for debugging\n    # for Al, lattice param a=0.40478nm=4.078e-4um\n    # burgers_vector_mag[FCC]=a/sqrt(2)=2.8826e-4um\n    burgers_vector_mag=2.8826e-4\n    dslip_increment_dedge = dslip_increment_dedge\n    dslip_increment_dscrew = dslip_increment_dscrew\n  [../]\n  [./compute_stress]\n    type = ComputeFiniteStrainElasticStress\n    block='35'\n  [../]\n      [./sumedge_pm]\n          block='42'\n        \n          type = ParsedMaterial\n          f_name = sum_edge_f\n          args =  'rho_edge1 rho_edge2 rho_edge3 rho_edge4 rho_edge5 rho_edge6\n          rho_edge7 rho_edge8 rho_edge9 rho_edge10 rho_edge11 rho_edge12'\n        \n          function = 'abs(rho_edge1) +abs(rho_edge2) +abs(rho_edge3) +abs(rho_edge4) +abs(rho_edge5) +abs(rho_edge6)\n          +abs(rho_edge7) +abs(rho_edge8) +abs(rho_edge9) +abs(rho_edge10) +abs(rho_edge11) +abs(rho_edge12)'\n        \n          outputs = exodus\n        [../]\n        [./sumscrew_pm]\n          block='42'\n        \n          type = ParsedMaterial\n          f_name = sum_screw_f\n          args =  'rho_screw1 rho_screw2 rho_screw3 rho_screw4 rho_screw5 rho_screw6\n          rho_screw7 rho_screw8 rho_screw9 rho_screw10 rho_screw11 rho_screw12'\n        \n          function = 'abs(rho_screw1) +abs(rho_screw2) +abs(rho_screw3) +abs(rho_screw4) +abs(rho_screw5) +abs(rho_screw6)\n          +abs(rho_screw7) +abs(rho_screw8) +abs(rho_screw9) +abs(rho_screw10) +abs(rho_screw11) +abs(rho_screw12)'\n        \n          outputs = exodus\n        [../]    \n  \n  []\n  \n  \n  \n  \n  [Preconditioning]\n    [SMP]\n      type = SMP\n      full = true\n    []\n  []\n  \n  [Executioner]\n    type = Transient\n    solve_type = 'PJFNK'\n    petsc_options = '-snes_ksp_ew'\n  \n    petsc_options_iname = '-pc_type -snes_linesearch_type -pc_factor_shift_type '\n                          '-pc_factor_shift_amount'\n    petsc_options_value = 'lu       basic                 NONZERO               1e-15'\n    line_search = 'none'\n    automatic_scaling = true\n    nl_abs_tol = 1.5e-07\n    nl_rel_tol = 1.5e-07\n    l_max_its = 40\n    l_abs_tol = 1e-08\n    l_tol = 1e-08\n    start_time = 0.0\n    [./TimeStepper]\n      type = FunctionDT\n      function = dts\n      min_dt = 0.1e-6\n    [../]\n    end_time =100.0 # Executioner\n  []\n  \n  [Postprocessors]\n    [maxdisp]\n      type = NodalVariableValue\n      nodeid = 39\n      variable = disp_y\n    []\n    [resid_y]\n      type = NodalSum\n      variable = saved_y\n      boundary = 41\n    []\n  []\n  \n  [Outputs]\n    interval = 2\n    exodus = true\n    checkpoint = true\n  []\n  \n  \n  [Contact]\n    [mechanical]\n      formulation = mortar\n      model = frictionless\n      primary = 'block_bottom'\n      secondary = 'sphere_up'\n      #penalty=1e3\n      c_normal = 1.0e3\n      normalize_c=true\n    #  interpolate_normals = true\n    # correct_edge_dropping = true\n      mortar_dynamics = true\n      newmark_beta = 0.25\n      newmark_gamma = 0.5\n    #  capture_tolerance = 1.0e-1\n    []\n  []\n  \n\nThe mesh is a .msh file, changed to txt for upload\nsaph_al_r10_finesphquad.txt",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6014111",
                          "updatedAt": "2023-05-26T17:27:38Z",
                          "publishedAt": "2023-05-26T17:15:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "This is the MWE? \ud83d\ude05",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6014203",
                          "updatedAt": "2023-05-26T17:27:14Z",
                          "publishedAt": "2023-05-26T17:27:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "chongxiyuan"
                          },
                          "bodyText": "No I can make one MWE too, this is the original",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6014229",
                          "updatedAt": "2023-05-26T17:29:16Z",
                          "publishedAt": "2023-05-26T17:29:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sapitts"
                          },
                          "bodyText": "Looks like only 12 slip systems, so that is a pretty simple crystal plasticity model \ud83d\ude02\n@laimaster21 I would guess you will need to either use one of the crystal plasticity models we have available in the MOOSE repository or (even better) reduce to an isotropic plasticity or elastic tensor mechanics material to enable the MOOSE team to help you",
                          "url": "https://github.com/idaholab/moose/discussions/24493#discussioncomment-6014255",
                          "updatedAt": "2023-05-26T17:32:06Z",
                          "publishedAt": "2023-05-26T17:32:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "phase field simulation for two-phase sintering",
          "author": {
            "login": "Wolke926"
          },
          "bodyText": "",
          "url": "https://github.com/idaholab/moose/discussions/24536",
          "updatedAt": "2023-05-30T20:47:50Z",
          "publishedAt": "2023-05-30T17:10:05Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "This is unreadable for me. See attached",
                  "url": "https://github.com/idaholab/moose/discussions/24536#discussioncomment-6041231",
                  "updatedAt": "2023-05-30T18:25:21Z",
                  "publishedAt": "2023-05-30T18:25:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The variable names are all different?\nI imagine c_a is Chi_a\nIs eta_s  phi_alpha ?\nThe advection terms seem fine for now. Once you calculate u using the Navier Stokes module, you will need to make sure that the discretization schemes for u in the NS equations and these equations are rigorously the same.",
                          "url": "https://github.com/idaholab/moose/discussions/24536#discussioncomment-6041660",
                          "updatedAt": "2023-05-30T19:21:29Z",
                          "publishedAt": "2023-05-30T19:21:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Wolke926"
                          },
                          "bodyText": "Yes, chi_A is the c_A, the concentration, and the eta_s is phi_alpha. Sorry for the misunderstanding.",
                          "url": "https://github.com/idaholab/moose/discussions/24536#discussioncomment-6042352",
                          "updatedAt": "2023-05-30T20:47:50Z",
                          "publishedAt": "2023-05-30T20:47:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Want to output the matrix of coefficients in the terminal",
          "author": {
            "login": "Raven-pro"
          },
          "bodyText": "Hello, developers!\nI am trying to know if my codes or physical equations are correct and I wanna check my matrix of coefficients, and the Jacobian matrix.\nIs there any method or option to output the matrix of coefficients in the terminal? The size of the problem is not huge, just want to have a little check of my codes so I can debug.\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/22292",
          "updatedAt": "2023-05-30T17:48:05Z",
          "publishedAt": "2022-10-04T15:32:45Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can use -ksp_view_mat to view the matrix. You can pass it on the command line or add it to the -petsc_options in the Executioner.\nYou should look at the petsc manual for more info on this\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22292#discussioncomment-3797622",
                  "updatedAt": "2022-10-04T16:23:06Z",
                  "publishedAt": "2022-10-04T16:23:06Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Raven-pro"
                          },
                          "bodyText": "Thanks! I will look into it.",
                          "url": "https://github.com/idaholab/moose/discussions/22292#discussioncomment-3813946",
                          "updatedAt": "2022-10-06T12:15:42Z",
                          "publishedAt": "2022-10-06T12:15:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": null,
                          "bodyText": "Hi @89018580 ,\nI am trying to do something similar. I am looking at outputting the coefficient matrices to solve for eigenvalues in MATLAB. Were you able to output coefficient matrices for your case? I did go through the PETSc manual, and found an option -mat_view which outputs a matrix. However, not being familiar with the PETSc system, I am not able to identify what part the matrix belongs to.",
                          "url": "https://github.com/idaholab/moose/discussions/22292#discussioncomment-6004374",
                          "updatedAt": "2023-05-25T18:50:59Z",
                          "publishedAt": "2023-05-25T18:50:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "-ksp_view_pmat is more reliable as it covers both NEWTON and PJFNK solve types\n-mat_view will print any/all matrices right after they have been assembled. In the case of MOOSE though there is only one matrix. For NEWTON this matrix is used both for the Jacobian and preconditioner. For PJFNK it is used for the preconditioner (the Jacobian is approximated matrix-free)",
                          "url": "https://github.com/idaholab/moose/discussions/22292#discussioncomment-6004472",
                          "updatedAt": "2023-05-25T19:03:43Z",
                          "publishedAt": "2023-05-25T19:03:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": null,
                          "bodyText": "Is there a way to know which part of the matrix belongs to which kernel? (corresponding term in the equation).\nThe problem I am trying to solve is attached below. What I am trying to output, is coefficient matrices A, B and C, as highlighted in the attached description and then use those matrices to solve for the quadratic eigenvalue. Any help would be greatly appreciated.\nReference .pdf",
                          "url": "https://github.com/idaholab/moose/discussions/22292#discussioncomment-6004562",
                          "updatedAt": "2023-05-25T19:14:06Z",
                          "publishedAt": "2023-05-25T19:14:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Yea it's not clear to me what A, B, and C should be, but you can save different kernels to different matrices using the tagging system. See https://mooseframework.inl.gov/framework_development/tagging.html and the input files in the moose/test/tests/tag directory",
                          "url": "https://github.com/idaholab/moose/discussions/22292#discussioncomment-6006167",
                          "updatedAt": "2023-05-25T22:53:37Z",
                          "publishedAt": "2023-05-25T22:53:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": null,
                          "bodyText": "Thanks! It worked.",
                          "url": "https://github.com/idaholab/moose/discussions/22292#discussioncomment-6032841",
                          "updatedAt": "2023-05-30T00:34:25Z",
                          "publishedAt": "2023-05-30T00:34:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "awesome, great to hear!",
                          "url": "https://github.com/idaholab/moose/discussions/22292#discussioncomment-6040942",
                          "updatedAt": "2023-05-30T17:48:06Z",
                          "publishedAt": "2023-05-30T17:48:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Issues with StitchedMeshGenerator",
          "author": {
            "login": "salaudeen-ya"
          },
          "bodyText": "Hello,\nI have two rectangular meshes below\n\nI expected to have the dimensions add up as given in the StichedMeshGenerator, but it doesn't;\nhttps://mooseframework.inl.gov/source/meshgenerators/StitchedMeshGenerator.html#!\nIn addition, the MOOSE could recognize the following IDs in one of the files:\nBoundary names that do exist: \n    ID : Name\n    0 : Line1\n    1 : Line2\n    2 : Line3\n    3 : Line4\n    5 : bottom_pmdl\n    6 : left_pmdl\n    7 : right_pmdl\n    8 : top_pmdl\n\nbut still throws this error:\n/home/salau/projects/ddm/2Dproblems/right_subdomain_pmdl_schwarz_stitch_1layer.i:83: (BCs/leftBC/boundary): the following node sets (ids) do not exist on the mesh: left_pmdl (12)\nI wondered how that could be possible.\nThe error is generated from this input file:\n[Mesh]\n  [interior]\n    type = FileMeshGenerator\n    file = interior.inp\n  []\n\n  [pmdl]\n    type = FileMeshGenerator\n    file = pmdl.inp\n  []\n\n  [smg]\n    type = StitchedMeshGenerator\n    inputs = 'interior pmdl'\n    clear_stitched_boundary_ids = false\n    stitch_boundaries_pairs = 'right_int left_pmdl'\n                              \n    #parallel_type = 'replicated'\n    #construct_side_list_from_node_list=true\n  []\n[]\n\n\n[Variables]\n  [u]\n    order = FIRST\n    family = LAGRANGE\n  []\n[]\n\n[AuxVariables]\n  [xflux]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [yflux]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n[]\n\n[Kernels]\n  [diffusion]\n    type = MatDiffusion\n    variable = u\n    diffusivity = 1\n  []\n    [reaction]\n    type =  Reaction\n    variable = u\n    rate = 0.25\n  []\n[]\n\n[AuxKernels]\n  [xfluxKernel]\n    type = DiffusionFluxAux\n    diffusivity = -1\n    variable = xflux\n    diffusion_variable = u\n    component = x\n  []\n  [yfluxKernel]\n    type = DiffusionFluxAux\n    diffusivity = -1\n    variable = yflux\n    diffusion_variable = u\n    component = y\n  []\n\n[]\n\n[BCs]\n  [topBC_int] \n    type = NeumannBC\n    variable = u\n    boundary = 'top_int'\n    value = 1\n  []\n\n  [leftBC] \n    type = DirichletBC\n    variable = u\n    boundary = 'left_pmdl'\n    value = 0\n  []\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'NEWTON'\n\n  fixed_point_max_its = 1000\n  nl_abs_tol = 1e-10\n  fixed_point_rel_tol = 1e-16\n  fixed_point_abs_tol = 1e-10\n\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n\n  [Quadrature]\n    type = 'GAUSS'\n    custom_blocks = '1 2'    \n    custom_orderX = 'FIRST CONSTANT'\n    custom_orderY = 'FIRST FIRST'\n  []\n\n[]\n\n\n[Outputs]\n  exodus = true\n  csv = true\n  console = true\n[]\n\nFor this input file, bottom_int works fine, but left_pmdl does not.\nHowever, consider when I change the order to the stitch with this input file,\n[Mesh]\n  [pmdl]\n    type = FileMeshGenerator\n    file = pmdl.inp\n  []\n\n  [interior]\n    type = FileMeshGenerator\n    file = interior.inp\n  []\n\n  [smg]\n    type = StitchedMeshGenerator\n    inputs = 'pmdl interior'\n    clear_stitched_boundary_ids = false\n    stitch_boundaries_pairs = 'right_pmdl left_int'\n                              \n    #parallel_type = 'replicated'\n    #construct_side_list_from_node_list=true\n  []\n  \n[]\n[Variables]\n  [v]\n    order = FIRST\n    family = LAGRANGE\n  []\n[]\n\n[AuxVariables]\n  [xflux_v]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [yflux_v]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n[]\n\n[Kernels]\n  [diffusion]\n    type = MatDiffusion\n    variable = v\n    diffusivity = 1\n  []\n  [reaction]\n    type =  Reaction\n    variable = v\n    rate = 0.25\n  []\n[]\n\n[AuxKernels]\n  [xfluxKernel]\n    type = DiffusionFluxAux\n    diffusivity = -1\n    variable = xflux_v\n    diffusion_variable = v\n    component = x\n  []\n  [yfluxKernel]\n    type = DiffusionFluxAux\n    diffusivity = -1\n    variable = yflux_v\n    diffusion_variable = v\n    component = y\n  []\n[]\n\n[BCs]\n   [topBC] \n    type = NeumannBC\n    variable = v\n    boundary = 'bottom_int'\n    value = 1\n  []\n\n  [toppmdl] \n    type = NeumannBC\n    variable = v\n    boundary = 'left_pmdl'\n    value = 1\n  []\n\n\n[]\n\n\n[Executioner]\n  type = Steady\n  solve_type = 'NEWTON'\n\n  fixed_point_max_its = 1000\n  nl_abs_tol = 1e-10\n  fixed_point_rel_tol = 1e-16\n  fixed_point_abs_tol = 1e-10\n\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n  \n  [Quadrature]\n    type = 'GAUSS'\n    custom_blocks = '1 2'    \n    custom_orderX = 'CONSTANT FIRST'\n    custom_orderY = 'FIRST FIRST'\n  []\n[]\n\n[Outputs]\n  exodus = true\n  csv = true\n  console = true\n[]\n\nthe left_pmdl boundary was recognized (but the bottom_int boundary was not).\nWhy is this??\nSummarily:\n\nWhy are the dimensions not adding up in the horizontal axis?\nWhy are some boundaries recognized based on the order of stitch, and some are not.\n\nThank you.",
          "url": "https://github.com/idaholab/moose/discussions/24429",
          "updatedAt": "2023-05-30T16:53:06Z",
          "publishedAt": "2023-05-19T16:06:23Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "By default we must be clearing one of the node sets.\nIf you are using node sets they are not oriented so any of the two nodesets that are stitched together can be used",
                  "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5950379",
                  "updatedAt": "2023-05-19T16:11:08Z",
                  "publishedAt": "2023-05-19T16:11:07Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "salaudeen-ya"
                          },
                          "bodyText": "That sounds logical.\nIn addition, I expected the dimension to add up on the horizontal axis, but they are not.",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5950428",
                          "updatedAt": "2023-05-19T16:16:22Z",
                          "publishedAt": "2023-05-19T16:15:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you need to translate the meshes so the boundaries align btw\nthis might be why you are not seeing the dimensions add up",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5950651",
                          "updatedAt": "2023-05-19T16:37:21Z",
                          "publishedAt": "2023-05-19T16:37:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "salaudeen-ya"
                          },
                          "bodyText": "Thank you.\nIs there a way to have an 'internal' boundary after the stitch? Something like a defined boundary between the stitched geometries that would still be recognized by MOOSE. Because that is my main objective.",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5950675",
                          "updatedAt": "2023-05-19T16:40:37Z",
                          "publishedAt": "2023-05-19T16:40:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think that s the purpose of that parameter: clear_stitched_boundary_ids = false\nIf you share your meshes i can take a look. It doesnt seem right to me that you would loose the internal boundary\nBTW to forward you need to use triple quotes, before and after code: ```",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5962783",
                          "updatedAt": "2023-05-22T03:08:00Z",
                          "publishedAt": "2023-05-22T03:06:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "salaudeen-ya"
                          },
                          "bodyText": "the_files.zip\nI have the files attached.",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5968040",
                          "updatedAt": "2023-05-22T13:56:41Z",
                          "publishedAt": "2023-05-22T13:56:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok I took a look.\nFirst they seem to be read properly. I think in\n\ninterior.inp you have overlaps between bottom/top/left..._int and the line3457 (no 6?) sidesets. That's not an issue for MOOSE, as long as that's what you intended to do.\npdml.inp similarly you have overlap between bottom/top/left..._int and the line1234.\n\nSecond, they are not aligned for stitching. The two meshes are completely overlapping. As I mentioned, you need to translate them to make the interfaces match.\nThis answers this question:\n\nWhy are the dimensions not adding up in the horizontal axis?\n\nI dont think the stitcher is meant to be used with overlapping meshes. That might just be the answer to this question:\n\nWhy are some boundaries recognized based on the order of stitch, and some are not.\n\nBut please let me know once you have fixed the stitiching if there are still lost boundaries\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5969236",
                          "updatedAt": "2023-05-22T15:44:02Z",
                          "publishedAt": "2023-05-22T15:44:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "salaudeen-ya"
                          },
                          "bodyText": "Thank you!!  I have fixed the translation by basically creating new meshes with the expected final coordinates.\nHowever, there are still lost boundaries after the stitch.",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5969906",
                          "updatedAt": "2023-05-22T16:59:21Z",
                          "publishedAt": "2023-05-22T16:58:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok I ll try translating on my end",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5971179",
                          "updatedAt": "2023-05-22T19:43:37Z",
                          "publishedAt": "2023-05-22T19:43:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok I think I see it now.\nThe sidesets are preserved but not the nodesets. Or at least not with the right names.\nI lost the _int nodesets, though they are still there for sidesets.\nSo one thing you can do right now to fix this is convert the sidesets to nodesets.\nhttps://mooseframework.inl.gov/source/meshgenerators/NodeSetsFromSideSetsGenerator.html\nthat should recover the nodesets",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5971206",
                          "updatedAt": "2023-05-22T19:49:06Z",
                          "publishedAt": "2023-05-22T19:48:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "salaudeen-ya"
                          },
                          "bodyText": "Thank you. Unfortunately, the issue still happens when I try to recover the node set. I think the merger still gives precedence to the leftmost mesh and subsumed the sidesets of the second mesh.\nThis error the following side sets (ids) do not exist on the mesh: left_pmdl (10) is basically saying that any nodeset/sideset not in the following list is not recognized\n     ID : Name\n     0 : Line1\n     1 : Line2\n     2 : Line3\n     3 : Line4\n     5 : bottom_int\n     6 : left_int\n     7 : right_int\n     8 : top_int```",
                          "url": "https://github.com/idaholab/moose/discussions/24429#discussioncomment-5972124",
                          "updatedAt": "2023-05-22T22:15:01Z",
                          "publishedAt": "2023-05-22T22:14:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Slow nonlinear convergence limit parameter",
          "author": {
            "login": "am-tc01"
          },
          "bodyText": "Hi,\nIs there any such parameter that defines the \"slowness\" of convergence of nonlinear solver i.e. if nonlinear residual is not decreasing at a considerable rate then just abort and cut the time-step in half, instead of waiting until number of iteration reaches nl_max_its.\nI googled a bit and found an old discussion, which is exactly what I am looking for. I wonder if it was ever implemented?\nRegards.",
          "url": "https://github.com/idaholab/moose/discussions/24457",
          "updatedAt": "2023-05-30T15:50:56Z",
          "publishedAt": "2023-05-23T21:11:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyou can do this with parsed expressions of postprocessors that contain the non linear residual.\nThen this expression of the ratio or a more complex expression will need to be fed into a Terminator (https://mooseframework.inl.gov/source/userobjects/Terminator.html) with a soft termination. This will just fail the time step without stopping the simulation\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-5982901",
                  "updatedAt": "2023-05-24T02:46:48Z",
                  "publishedAt": "2023-05-23T21:46:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "am-tc01"
                          },
                          "bodyText": "Hi @GiudGiud,\nYes that could do the job but not quite exactly. I tried using Terminator with execute_on = LINEAR, it does show the INFO message that terminator is causing a time step cutback by marking the current step as failed when the criteria is met but it still keeps on running that time step until the max. no of iterations are reached. What I want is to stop that time step as soon as the criteria is met and move on to the next step with half the time step.",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-5989354",
                          "updatedAt": "2023-05-24T12:29:47Z",
                          "publishedAt": "2023-05-24T12:29:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "could you please paste the Terminator here?\nI think we want fail_mode = SOFT and error-level of INFO ?",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-5989403",
                          "updatedAt": "2023-05-24T12:35:48Z",
                          "publishedAt": "2023-05-24T12:35:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "am-tc01"
                          },
                          "bodyText": "Yes, that's exactly what I used:\n[terminator]\n  type = Terminator\n  expression = 'nonlinear_residual < 1E-5'\n  fail_mode = SOFT\n  error_level = INFO\n  execute_on = 'LINEAR'\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-5989466",
                          "updatedAt": "2023-05-24T12:42:20Z",
                          "publishedAt": "2023-05-24T12:42:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok it seems we want a harder fail_mode here, but not \"HARD\" because that's going to error out the simulation.\nI ll see if I can drum that up",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-5989639",
                          "updatedAt": "2023-05-24T12:59:31Z",
                          "publishedAt": "2023-05-24T12:59:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "am-tc01"
                          },
                          "bodyText": "Yes precisely!\nMany thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-5989722",
                          "updatedAt": "2023-05-24T13:05:52Z",
                          "publishedAt": "2023-05-24T13:05:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it's a little bit of a pandora's box to throw somewhat uncontrollably within a solve.\nI made this branch, please feel free to try it out but I m not sure we ll be able to merge it very soon\n#24463",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-5990342",
                          "updatedAt": "2023-05-24T14:03:11Z",
                          "publishedAt": "2023-05-24T14:02:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "am-tc01"
                          },
                          "bodyText": "Super!\nI agree, it could be a bit tricky to throw uncontrollably, have to make sure it's safe. But I'll give it a shot.\nMany thanks!!\nRegards.",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-5992383",
                          "updatedAt": "2023-05-24T16:54:45Z",
                          "publishedAt": "2023-05-24T16:54:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok found another solution without throwing. The PR is updated. I think we should be able to add that to MOOSE",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-6001898",
                          "updatedAt": "2023-05-25T14:46:40Z",
                          "publishedAt": "2023-05-25T14:46:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "am-tc01"
                          },
                          "bodyText": "Great! this sounds better than throwing. Thanks again!!",
                          "url": "https://github.com/idaholab/moose/discussions/24457#discussioncomment-6039848",
                          "updatedAt": "2023-05-30T15:50:57Z",
                          "publishedAt": "2023-05-30T15:50:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "\"registerAll\" in Modules is deprecated, 'ADHeatConduction' is not a registered object",
          "author": {
            "login": "czadeh"
          },
          "bodyText": "Hi,\nI installed MOOSE today on a new machine so everything should be up to date. When I ran tests in the MOOSE folder and in my application folder everything went well (no failures).\nIn my application I tried running an input file with ADHeatConduction and I got the following warning and error:\n*** Warning, This code is deprecated and will be removed in future versions:\n\"registerAll\" in Modules is deprecated. Please update your *App.C file to call the new templated \"registerAllObjects\" method (e.g. ModulesApp::registerAllobject<MyApp>(...))\nStack frames: 13\n0: libMesh::print_trace(std::ostream&)\n1: void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::char_traits<char> >, char const (&) [174]>(libMesh::BasicOStreamProxy<char, std::char_traits<char> >&, bool, bool, char const (&) [174])\n2: turtleApp::registerAll(Factory&, ActionFactory&, Syntax&)\n3: turtleTestApp::registerAll(Factory&, ActionFactory&, Syntax&, bool)\n4: turtleTestApp::turtleTestApp(InputParameters)\n5: /home/cameron/projects/turtle/test/lib/libturtle_test-opt.so.0(+0xa718) [0x7fb0aa963718]\n6: /home/cameron/projects/turtle/test/lib/libturtle_test-opt.so.0(+0xa7a7) [0x7fb0aa9637a7]\n7: AppFactory::createShared(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, InputParameters, int)\n8: AppFactory::createAppShared(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, char**, int)\n9: main\n10: /usr/lib/libc.so.6(+0x23850) [0x7fb0a0d4c850]\n11: __libc_start_main\n12: ../turtle-opt(+0x33ef) [0x55f40b8e93ef]\n\n\n\n*** ERROR ***\nA 'ADHeatConduction' is not a registered object.\n\nIf you are trying to find this object in a dynamically linked library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\n\nStack frames: 21\n0: libMesh::print_trace(std::ostream&)\n1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\n2: void mooseError<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n3: Factory::reportUnregisteredError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const\n4: Factory::getValidParams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n5: MooseObjectAction::MooseObjectAction(InputParameters const&)\n6: AddKernelAction::AddKernelAction(InputParameters const&)\n7: /home/cameron/projects/moose/framework/libmoose-opt.so.0(+0x1475128) [0x7fb0a9475128]\n8: ActionFactory::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, InputParameters&)\n9: Parser::walkRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, hit::Node*)\n10: Parser::walk(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, hit::Node*)\n11: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n12: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n13: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n14: Parser::parse(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)\n15: MooseApp::setupOptions()\n16: MooseApp::run()\n17: main\n18: /usr/lib/libc.so.6(+0x23850) [0x7fb0a0d4c850]\n19: __libc_start_main\n20: ../turtle-opt(+0x33ef) [0x55f40b8e93ef]\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\n\nI have heat conduction set to yes in my makefile.\nIs ADHeatConduction not registered because \"registerAll\" is deprecated?\nOr do I need to add ADHeatConduction to the library path?\nThank you,\nCameron",
          "url": "https://github.com/idaholab/moose/discussions/24416",
          "updatedAt": "2023-05-30T14:19:27Z",
          "publishedAt": "2023-05-17T21:15:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNot sure about that first question\nCan you fix the deprecation locally by following what the deprecation message is telling you?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24416#discussioncomment-5932139",
                  "updatedAt": "2023-05-17T21:30:33Z",
                  "publishedAt": "2023-05-17T21:30:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "czadeh"
                          },
                          "bodyText": "I accidentally replied in a new comment\n#24416 (comment)",
                          "url": "https://github.com/idaholab/moose/discussions/24416#discussioncomment-5932462",
                          "updatedAt": "2023-05-17T22:29:51Z",
                          "publishedAt": "2023-05-17T22:29:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "czadeh"
                  },
                  "bodyText": "I did a search for \"registerAll\" in the project directory and I found 12 instances. My app is called turtle; \"registerAll\" comes up once in turtleApp.h, 5 times in turtleApp.C, once in turtleTestApp.h, and 5 times in turtleTestApp.C.\nI replaced all instances of registerAll with registerAllObjects and tried make -j 8 and got  this:\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nCompiling C++ (in opt mode) /home/cameron/projects/turtle/src/base/turtleApp.C...\nCompiling C++ (in opt mode) /home/cameron/projects/turtle/src/main.C...\nCompiling C++ (in opt mode) /home/cameron/projects/turtle/test/src/base/turtleTestApp.C...\n/home/cameron/projects/turtle/src/base/turtleApp.C: In static member function 'static void turtleApp::registerAllObjects(Factory&, ActionFactory&, Syntax&)':\n/home/cameron/projects/turtle/src/base/turtleApp.C:28:47: error: no matching function for call to 'ModulesApp::registerAllObjects(Factory&, ActionFactory&, Syntax&)'\n   28 |   ModulesApp::registerAllObjects(f, af, syntax);\n      |                                               ^\nIn file included from /home/cameron/projects/turtle/src/base/turtleApp.C:4:\n/home/cameron/projects/moose/modules/module_loader/build/header_symlinks/ModulesApp.h:104:15: note: candidate: 'template<class T> static void ModulesApp::registerAllObjects(Factory&, ActionFactory&, Syntax&)'\n  104 |   static void registerAllObjects(Factory & f, ActionFactory & af, Syntax & s);\n      |               ^~~~~~~~~~~~~~~~~~\n/home/cameron/projects/moose/modules/module_loader/build/header_symlinks/ModulesApp.h:104:15: note:   template argument deduction/substitution failed:\n/home/cameron/projects/turtle/src/base/turtleApp.C:28:47: note:   couldn't deduce template parameter 'T'\n   28 |   ModulesApp::registerAllObjects(f, af, syntax);\n      |                                               ^\nmake: *** [/home/cameron/projects/moose/framework/build.mk:149: /home/cameron/projects/turtle/src/base/turtleApp.x86_64-conda-linux-gnu.opt.lo] Error 1\nmake: *** Waiting for unfinished jobs....\n\nThen I tried replacing with registerAllObjects<turtleApp> instead. I got this error message:\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nCompiling C++ (in opt mode) /home/cameron/projects/turtle/src/base/turtleApp.C...\nCompiling C++ (in opt mode) /home/cameron/projects/turtle/src/main.C...\nCompiling C++ (in opt mode) /home/cameron/projects/turtle/test/src/base/turtleTestApp.C...\nIn file included from /home/cameron/projects/turtle/src/main.C:10:\n/home/cameron/projects/turtle/build/header_symlinks/turtleTestApp.h:23:15: error: variable or field 'registerAllObjects' declared void\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s, bool use_test_objs = false);\n      |               ^~~~~~~~~~~~~~~~~~\n/home/cameron/projects/turtle/build/header_symlinks/turtleTestApp.h:23:15: error: expected ';' at end of member declaration\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s, bool use_test_objs = false);\n      |               ^~~~~~~~~~~~~~~~~~\n      |                                 ;\n/home/cameron/projects/turtle/build/header_symlinks/turtleTestApp.h:23:33: error: expected unqualified-id before '<' token\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s, bool use_test_objs = false);\n      |                                 ^\nIn file included from /home/cameron/projects/turtle/test/src/base/turtleTestApp.C:9:\n/home/cameron/projects/turtle/build/header_symlinks/turtleTestApp.h:23:15: error: variable or field 'registerAllObjects' declared void\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s, bool use_test_objs = false);\n      |               ^~~~~~~~~~~~~~~~~~\n/home/cameron/projects/turtle/build/header_symlinks/turtleTestApp.h:23:15: error: expected ';' at end of member declaration\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s, bool use_test_objs = false);\n      |               ^~~~~~~~~~~~~~~~~~\n      |                                 ;\n/home/cameron/projects/turtle/build/header_symlinks/turtleTestApp.h:23:33: error: expected unqualified-id before '<' token\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s, bool use_test_objs = false);\n      |                                 ^\nIn file included from /home/cameron/projects/turtle/src/base/turtleApp.C:1:\n/home/cameron/projects/turtle/build/header_symlinks/turtleApp.h:23:15: error: variable or field 'registerAllObjects' declared void\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s);\n      |               ^~~~~~~~~~~~~~~~~~\n/home/cameron/projects/turtle/build/header_symlinks/turtleApp.h:23:15: error: expected ';' at end of member declaration\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s);\n      |               ^~~~~~~~~~~~~~~~~~\n      |                                 ;\n/home/cameron/projects/turtle/build/header_symlinks/turtleApp.h:23:33: error: expected unqualified-id before '<' token\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s);\n      |                                 ^\nIn file included from /home/cameron/projects/turtle/test/src/base/turtleTestApp.C:10:\n/home/cameron/projects/turtle/build/header_symlinks/turtleApp.h:23:15: error: variable or field 'registerAllObjects' declared void\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s);\n      |               ^~~~~~~~~~~~~~~~~~\n/home/cameron/projects/turtle/build/header_symlinks/turtleApp.h:23:15: error: expected ';' at end of member declaration\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s);\n      |               ^~~~~~~~~~~~~~~~~~\n      |                                 ;\n/home/cameron/projects/turtle/build/header_symlinks/turtleApp.h:23:33: error: expected unqualified-id before '<' token\n   23 |   static void registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s);\n      |                                 ^\n/home/cameron/projects/turtle/test/src/base/turtleTestApp.C: In constructor 'turtleTestApp::turtleTestApp(InputParameters)':\n/home/cameron/projects/turtle/test/src/base/turtleTestApp.C:25:18: error: 'registerAllObjects' is not a member of 'turtleTestApp'\n   25 |   turtleTestApp::registerAllObjects<turtleApp>(\n      |                  ^~~~~~~~~~~~~~~~~~\n/home/cameron/projects/turtle/test/src/base/turtleTestApp.C:25:46: error: expected primary-expression before '>' token\n   25 |   turtleTestApp::registerAllObjects<turtleApp>(\n      |                                              ^\n/home/cameron/projects/turtle/test/src/base/turtleTestApp.C: At global scope:\n/home/cameron/projects/turtle/test/src/base/turtleTestApp.C:32:34: error: expected initializer before '<' token\n   32 | turtleTestApp::registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s, bool use_test_objs)\n      |                                  ^\n/home/cameron/projects/turtle/test/src/base/turtleTestApp.C:54:34: error: expected initializer before '<' token\n   54 | turtleTestApp__registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s)\n      |                                  ^\n/home/cameron/projects/turtle/src/base/turtleApp.C: In constructor 'turtleApp::turtleApp(InputParameters)':\n/home/cameron/projects/turtle/src/base/turtleApp.C:20:14: error: 'registerAllObjects' is not a member of 'turtleApp'\n   20 |   turtleApp::registerAllObjects<turtleApp>(_factory, _action_factory, _syntax);\n      |              ^~~~~~~~~~~~~~~~~~\n/home/cameron/projects/turtle/src/base/turtleApp.C:20:42: error: expected primary-expression before '>' token\n   20 |   turtleApp::registerAllObjects<turtleApp>(_factory, _action_factory, _syntax);\n      |                                          ^\n/home/cameron/projects/turtle/src/base/turtleApp.C: At global scope:\n/home/cameron/projects/turtle/src/base/turtleApp.C:26:30: error: expected initializer before '<' token\n   26 | turtleApp::registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & syntax)\n      |                              ^\n/home/cameron/projects/turtle/src/base/turtleApp.C:45:30: error: expected initializer before '<' token\n   45 | turtleApp__registerAllObjects<turtleApp>(Factory & f, ActionFactory & af, Syntax & s)\n      |                              ^\nmake: *** [/home/cameron/projects/moose/framework/build.mk:149: /home/cameron/projects/turtle/src/main.x86_64-conda-linux-gnu.opt.lo] Error 1\nmake: *** Waiting for unfinished jobs....\nmake: *** [/home/cameron/projects/moose/framework/build.mk:149: /home/cameron/projects/turtle/test/src/base/turtleTestApp.x86_64-conda-linux-gnu.opt.lo] Error 1\nmake: *** [/home/cameron/projects/moose/framework/build.mk:149: /home/cameron/projects/turtle/src/base/turtleApp.x86_64-conda-linux-gnu.opt.lo] Error 1\n\nI don't think I'm using registerAllObjects correctly and I don't know what the right way is.",
                  "url": "https://github.com/idaholab/moose/discussions/24416#discussioncomment-5932439",
                  "updatedAt": "2023-05-17T22:26:18Z",
                  "publishedAt": "2023-05-17T22:26:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "yeah it s not that simple.\nMaybe just have a look at this base file and follow the same pattern\nhttps://github.com/idaholab/malamute/blob/devel/src/base/MalamuteApp.C\nthere s only a few lines to change, and no function definition",
                          "url": "https://github.com/idaholab/moose/discussions/24416#discussioncomment-5932859",
                          "updatedAt": "2023-05-17T23:54:19Z",
                          "publishedAt": "2023-05-17T23:54:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "czadeh"
                          },
                          "bodyText": "I made that change and the warning went away but I still have the other error.\n*** ERROR ***\nA 'ADHeatConduction' is not a registered object.\n\nIf you are trying to find this object in a dynamically linked library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\n\nStack frames: 21\n0: libMesh::print_trace(std::ostream&)\n1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\n2: void mooseError<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n3: Factory::reportUnregisteredError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const\n4: Factory::getValidParams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n5: MooseObjectAction::MooseObjectAction(InputParameters const&)\n6: AddKernelAction::AddKernelAction(InputParameters const&)\n7: /home/cameron/projects/moose/framework/libmoose-opt.so.0(+0x1475128) [0x7fa538e75128]\n8: ActionFactory::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, InputParameters&)\n9: Parser::walkRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, hit::Node*)\n10: Parser::walk(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, hit::Node*)\n11: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n12: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n13: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n14: Parser::parse(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)\n15: MooseApp::setupOptions()\n16: MooseApp::run()\n17: main\n18: /usr/lib/libc.so.6(+0x23850) [0x7fa53074c850]\n19: __libc_start_main\n20: ../turtle-opt(+0x33ef) [0x55fda7c793ef]\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor",
                          "url": "https://github.com/idaholab/moose/discussions/24416#discussioncomment-5944144",
                          "updatedAt": "2023-05-19T02:56:09Z",
                          "publishedAt": "2023-05-19T02:56:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "czadeh"
                          },
                          "bodyText": "I figured it out. I was only getting this issue on my Arch based OS and not on my Debian based OS.\nThis error indicated it:\nperl: error while loading shared libraries: libcrypt.so.1: cannot open shared object file: No such file or directory\nThere was a missing package. I fixed it by installing libxcrypt-compat like in this link. https://unix.stackexchange.com/questions/691479/how-to-deal-with-missing-libcrypt-so-1-on-arch-linux",
                          "url": "https://github.com/idaholab/moose/discussions/24416#discussioncomment-5952835",
                          "updatedAt": "2023-05-19T22:20:01Z",
                          "publishedAt": "2023-05-19T22:20:00Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tannhorn"
                          },
                          "bodyText": "yeah it s not that simple. Maybe just have a look at this base file and follow the same pattern https://github.com/idaholab/malamute/blob/devel/src/base/MalamuteApp.C\nthere s only a few lines to change, and no function definition\n\nHey, note that when creating a new app via stork, the resulting ...App.C file will feature the deprecated code. (at least that's what happened to me, MOOSE Version: git commit f398bfb on 2023-05-24)",
                          "url": "https://github.com/idaholab/moose/discussions/24416#discussioncomment-6038526",
                          "updatedAt": "2023-05-30T13:52:36Z",
                          "publishedAt": "2023-05-30T13:52:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There was a PR to fix this recently.\n#24280\nIt was not merged as I forgot to merge it :(\nThank you for reporting though!",
                          "url": "https://github.com/idaholab/moose/discussions/24416#discussioncomment-6038792",
                          "updatedAt": "2023-05-30T14:20:15Z",
                          "publishedAt": "2023-05-30T14:19:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}