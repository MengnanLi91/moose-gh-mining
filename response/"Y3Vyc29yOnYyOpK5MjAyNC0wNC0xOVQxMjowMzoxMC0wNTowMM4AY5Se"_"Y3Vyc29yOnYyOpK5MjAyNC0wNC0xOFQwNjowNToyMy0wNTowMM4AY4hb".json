{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wNC0xOFQwNjowNToyMy0wNTowMM4AY4hb"
    },
    "edges": [
      {
        "node": {
          "title": "How to get X and Y coordinates of every node outputted to .csv file",
          "author": {
            "login": "jackeggemeyer"
          },
          "bodyText": "Hello! I am trying to get moose to output a .cvs file that I need for post processing in MATLAB. I am looking to create a .csv or .txt file that contains the X and Y coordinate of each node and the associated variable called etab0 for each time step. For example, if I had 4 nodes, the output file would be something like:\nx   y   eta\n1   1   .2\n1   2   .4\n2   1   .3\n2   2    .6\nand the next file containing the next data set from the next time step or:\ntime   x   y   eta\n1       1   1   .2\n1       1   2   .4\n1       2   1   .3\n1       2   2    .6\n2       1   1   .2\n2       1   2   .4\n2       2   1   .3\n2       2   2    .6\nI see the NodalVariableValue Post Processor however it requires a specified node and I want all the nodes as my simulation is more the 4 nodes. Is there a \"all\" command for this? Thank you\nAlso: it doesn't need to be the exact format I just need the variable and the associated coordinates for all nodes. And I would also take just the variable associated with each node for each time step and I could write a function in excel/MATLAB to fill in the x and y location.",
          "url": "https://github.com/idaholab/moose/discussions/27419",
          "updatedAt": "2024-04-19T15:57:22Z",
          "publishedAt": "2024-04-19T14:49:23Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "I could have sworn we already have an object for that, but I cannot find it now. You could write your own derived from NodalVariableVectorPostprocessor though.",
                  "url": "https://github.com/idaholab/moose/discussions/27419#discussioncomment-9167741",
                  "updatedAt": "2024-04-19T14:55:55Z",
                  "publishedAt": "2024-04-19T14:55:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jackeggemeyer"
                          },
                          "bodyText": "Would that involve writing code in C++? I would also be fine with the just the variable being outputted for each node for each time step and I fill in the coordinate values. Is there possibly a post processor for that?",
                          "url": "https://github.com/idaholab/moose/discussions/27419#discussioncomment-9167840",
                          "updatedAt": "2024-04-19T15:03:54Z",
                          "publishedAt": "2024-04-19T15:03:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "maxnezdyur"
                          },
                          "bodyText": "@dschwen I think you are thinking of the https://mooseframework.inl.gov/source/vectorpostprocessors/NodalValueSampler.html?",
                          "url": "https://github.com/idaholab/moose/discussions/27419#discussioncomment-9168107",
                          "updatedAt": "2024-04-19T15:27:34Z",
                          "publishedAt": "2024-04-19T15:27:33Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jackeggemeyer"
                          },
                          "bodyText": "@maxnezdyur Thank you so much. That is perfect; I also found a workaround where you upload all the files to ParaView, then use the \"save data\" button and select CSV, and that also creates a file with x & y cords with associated variables.",
                          "url": "https://github.com/idaholab/moose/discussions/27419#discussioncomment-9168427",
                          "updatedAt": "2024-04-19T15:57:22Z",
                          "publishedAt": "2024-04-19T15:57:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "I try to run an input file from an example it shows the error in the picture, I want to ask what is the add_material means from the error.",
          "author": {
            "login": "zxj19910214"
          },
          "bodyText": "",
          "url": "https://github.com/idaholab/moose/discussions/27406",
          "updatedAt": "2024-04-19T12:43:17Z",
          "publishedAt": "2024-04-18T11:34:35Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou put a kernel in the [Materials] block\nFor future reference, text is best copy-pasted, not in a screenshot\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27406#discussioncomment-9154256",
                  "updatedAt": "2024-04-18T12:04:35Z",
                  "publishedAt": "2024-04-18T12:04:34Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "zxj19910214"
                          },
                          "bodyText": "Dear Guillaume,\nThank you  for the answer and suggestion. I will check and modify the files.\nBest regards,\nXiao",
                          "url": "https://github.com/idaholab/moose/discussions/27406#discussioncomment-9163049",
                          "updatedAt": "2024-04-19T07:08:30Z",
                          "publishedAt": "2024-04-19T07:08:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Sounds good\nPlease let me know if it does not work still",
                          "url": "https://github.com/idaholab/moose/discussions/27406#discussioncomment-9166266",
                          "updatedAt": "2024-04-19T12:43:18Z",
                          "publishedAt": "2024-04-19T12:43:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "how to use natural logarithm operator ('ln') in an expression of function?",
          "author": {
            "login": "ananthanarasimhanj"
          },
          "bodyText": "what is the syntax to use how to use natural logarithm operator ('ln') in an expression of function? let say example.. ln(x).",
          "url": "https://github.com/idaholab/moose/discussions/27416",
          "updatedAt": "2024-04-19T12:34:16Z",
          "publishedAt": "2024-04-19T11:54:57Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou mean an expression in a ParsedFunction?\nYou can check the fparser documentation, it s linked in the ParsedFunction moose documentation.\nI would just do log(x)/log(10) and move on\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27416#discussioncomment-9166174",
                  "updatedAt": "2024-04-19T12:34:16Z",
                  "publishedAt": "2024-04-19T12:34:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Boundary condition type",
          "author": {
            "login": "AmrIbrahim8894"
          },
          "bodyText": "Hi there,\nIs there a way to get the variable values of the nodes in blue color in the attached picture and impose these values on the boundary nodes in red color for each side of cohesive zone model. Thank you",
          "url": "https://github.com/idaholab/moose/discussions/27410",
          "updatedAt": "2024-04-19T00:00:37Z",
          "publishedAt": "2024-04-18T17:51:07Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes there are a number of ways. Are the meshes stitched in your system or apart but close?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9158167",
                  "updatedAt": "2024-04-18T17:57:21Z",
                  "publishedAt": "2024-04-18T17:57:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "AmrIbrahim8894"
                  },
                  "bodyText": "Hello,\nI am using BreakMeshByBlockGenerator to create an interface.",
                  "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9158185",
                  "updatedAt": "2024-04-18T17:59:35Z",
                  "publishedAt": "2024-04-18T17:59:34Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I think I might have mis-understood. You want the red and blue nodes on both sides of the split, both sides being independent, to have the same values?",
                  "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9158304",
                  "updatedAt": "2024-04-18T18:14:41Z",
                  "publishedAt": "2024-04-18T18:14:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "AmrIbrahim8894"
                  },
                  "bodyText": "yes. both sides are independent, i want to impose the variable values of the blue nodes on the red nodes for each side seperately.",
                  "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9158340",
                  "updatedAt": "2024-04-18T18:17:58Z",
                  "publishedAt": "2024-04-18T18:17:57Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if the gradient is 0 that would do get you a flat slope from red to blue. The values would be almost the same",
                          "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9158417",
                          "updatedAt": "2024-04-18T18:25:35Z",
                          "publishedAt": "2024-04-18T18:25:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you could define a nodeset the blue and for the red nodes, then add a Constraint to force the equality",
                          "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9158422",
                          "updatedAt": "2024-04-18T18:26:05Z",
                          "publishedAt": "2024-04-18T18:26:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "AmrIbrahim8894"
                  },
                  "bodyText": "I am using mixed formulation, so i want to impose the gradient to be zero along with equating the nodes. this will be inside a cohesive zone model that i am trying to develop for a fault embedded in a poroelastodynamic medium. if there is an easier way either than using a constraint, it will be great. thank you",
                  "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9158480",
                  "updatedAt": "2024-04-18T18:32:57Z",
                  "publishedAt": "2024-04-18T18:32:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "AmrIbrahim8894"
                  },
                  "bodyText": "I am using explicit scheme so i cannot use the a constraint like EqualValueBoundaryConstraint. if i can extract the nodesets for both blue and red nodes, how can i equate the variable values for these two nodsets ?",
                  "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9159139",
                  "updatedAt": "2024-04-18T19:55:00Z",
                  "publishedAt": "2024-04-18T19:54:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "AmrIbrahim8894"
                  },
                  "bodyText": "I used ParsedSubdomainMeshGenerator to generate new block containing both the blue and red nodes then i used ParsedGenerateSideset to create a sideset containing the blue nodes only. Then, I used NearestNodeValueAux to save the values of the blue nodes in an auxiliary variable but at the nodal positions of the red nodes. Finally, I imposed the boundary condition using MatchedValueBC between the auxiliary variable and main variable. Thank you",
                  "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9160035",
                  "updatedAt": "2024-04-18T22:07:01Z",
                  "publishedAt": "2024-04-18T22:07:00Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok that's pretty clever. Just a note that the contribution to the Jacobian  of the BC is likely not correct from the get go. But if you use PJFNK it does not matter as much as if you were using Newton's method",
                          "url": "https://github.com/idaholab/moose/discussions/27410#discussioncomment-9160476",
                          "updatedAt": "2024-04-19T00:00:37Z",
                          "publishedAt": "2024-04-19T00:00:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Building new Moose Action",
          "author": {
            "login": "AmrIbrahim8894"
          },
          "bodyText": "Hi there,\nI am trying to build a custom cohesive zone action called PoroCohesiveZoneAction for variables (fluid velocity, pressure) besides displacements and tractions in our farmsApp. Following the code in SolidMechanics, We register our action in farmsApp.C:\nstatic void\nassociateSyntaxInner(Syntax & syntax, ActionFactory & /*action_factory*/)\n{\nregisterSyntax(\"PoroCohesiveZoneAction\", \"Actions/*\");\n}\n\nAnd in the input file, we call the action:\n[Actions/PoroCohesiveZoneAction]\n    [./czm_ik]\n        boundary = 'Block0_Block1'\n        strain = SMALL\n        generate_output='traction_x traction_y jump_x jump_y jump_vel_x jump_vel_y pressure_plus pressure_minus normal_traction tangent_traction normal_jump tangent_jump'\n    [../]\n[]\n\nHowever, MOOSE is unable to find the action, returns the error:\n*** ERROR ***\n/home/amr/projects/farms/examples/benchmark_tpv2052D/version1/tpv2052D_Poro.i:84.1: section '[Actions]' does not have an associated \"Action\".\n Common causes:\n- you misspelled the Action/section name\n- the app you are running does not support this Action/syntax\n/home/amr/projects/farms/examples/benchmark_tpv2052D/version1/tpv2052D_Poro.i:84.1: section '[Actions/PoroCohesiveZoneAction]' does not have an associated \"Action\".\n Common causes:\n- you misspelled the Action/section name\n- the app you are running does not support this Action/syntax\n/home/amr/projects/farms/examples/benchmark_tpv2052D/version1/tpv2052D_Poro.i:85.5: section '[Actions/PoroCohesiveZoneAction/czm_ik]' does not have an associated \"Action\".\n Common causes:\n- you misspelled the Action/section name\n- the app you are running does not support this Action/syntax\n\nI appreciate your help. The MOOSE I used is not the most updated version, although I don't think this is the reason of the problem.\nAnd a follow-up question is: how to link this custom cohesive zone to the original cohesive zone model, since we would like to solve displacements and tractions also.",
          "url": "https://github.com/idaholab/moose/discussions/27411",
          "updatedAt": "2024-04-18T23:59:18Z",
          "publishedAt": "2024-04-18T19:33:25Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe syntax used seems to be this instead\nregisterSyntax(\"PoroCohesiveZoneAction\", \"Actions/PoroCohesiveZoneAction/*\");",
                  "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159307",
                  "updatedAt": "2024-04-18T20:16:51Z",
                  "publishedAt": "2024-04-18T20:16:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "AmrIbrahim8894"
                  },
                  "bodyText": "I did that but nothing change, it still show the same error.",
                  "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159368",
                  "updatedAt": "2024-04-18T20:24:42Z",
                  "publishedAt": "2024-04-18T20:24:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did you recompile after changing? I m asking because you replied very soon after my post that's it",
                          "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159397",
                          "updatedAt": "2024-04-18T20:27:19Z",
                          "publishedAt": "2024-04-18T20:27:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "AmrIbrahim8894"
                  },
                  "bodyText": "yes. i recompiled then i tried to run the problem again. should i do also make clobberall ?",
                  "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159423",
                  "updatedAt": "2024-04-18T20:30:41Z",
                  "publishedAt": "2024-04-18T20:30:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "should not be necessary.\nok using your executable, use the --dump or --json followed by &> some_file_name.txt to examine all the registered syntax\ntry to find what PoroCohesiveZoneAction got registered to there",
                          "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159520",
                          "updatedAt": "2024-04-18T20:45:30Z",
                          "publishedAt": "2024-04-18T20:45:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AmrIbrahim8894"
                          },
                          "bodyText": "Sorry, I don't know how to use that --dump or --json followed by &> some_file_name.txt. Can you provide example command ? Thank you",
                          "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159617",
                          "updatedAt": "2024-04-18T20:59:20Z",
                          "publishedAt": "2024-04-18T20:59:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "your_executable-opt --dump &> dump_file.txt",
                          "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159659",
                          "updatedAt": "2024-04-18T21:05:38Z",
                          "publishedAt": "2024-04-18T21:05:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AmrIbrahim8894"
                          },
                          "bodyText": "It gave this error:\n\ufffd[31m\n*** ERROR ***\nbasic_string::_M_construct null not valid\ufffd[39m\n\nStack frames: 7\n\n0: libMesh::print_trace(std::ostream&)\n1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\n2: void mooseError<char const*>(char const*&&)\n3: /home/amr/projects/moose/framework/libmoose-opt.so.0(+0x9686cf) [0x7fa8e20b86cf]\n4: main\n5: __libc_start_main\n6: ./farms-opt(+0x33ef) [0x56390badf3ef]\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\n\nwhat should i do ?",
                          "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159691",
                          "updatedAt": "2024-04-18T21:11:31Z",
                          "publishedAt": "2024-04-18T21:11:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont know about that one.\nwhat about --json",
                          "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159800",
                          "updatedAt": "2024-04-18T21:27:23Z",
                          "publishedAt": "2024-04-18T21:27:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AmrIbrahim8894"
                          },
                          "bodyText": "I tried --json but it gave me the same error.",
                          "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9159978",
                          "updatedAt": "2024-04-18T21:56:49Z",
                          "publishedAt": "2024-04-18T21:56:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ugh this is unexpected.\nwhat did you type exactly?\nand if you build in moose/test can you perform a syntax dump with the moose_test executable?",
                          "url": "https://github.com/idaholab/moose/discussions/27411#discussioncomment-9160472",
                          "updatedAt": "2024-04-18T23:59:18Z",
                          "publishedAt": "2024-04-18T23:59:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "DIVERGED_PC_FAILED",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I am trying to run a phase field simulation coupled with crystal plasticity and below is a snippet of the error I am getting:\nTime Step 1, time = 0.0005, dt = 0.0005\n|residual|_2 of individual variables:\nc:      0\neta1:   0.000389647\neta3:   0.622528\nc1:     107.533\nc3:     0.151691\ndisp_x: 30.3519\ndisp_y: 17.3831\ndisp_z: 55.1197\n0 Nonlinear |R| = \ufffd[32m1.257985e+02\ufffd[39m\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to SUBPC_ERROR\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nA MooseException was raised during FEProblemBase::computeResidualTags\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\nSolve failed, cutting timestep.\nTime Step 1, time = 0.00025, dt = 0.00025\n|residual|_2 of individual variables:\nc:      0\neta1:   0.000389647\neta3:   0.622528\nc1:     107.533\nc3:     0.151691\ndisp_x: 15.174\ndisp_y: 8.69048\ndisp_z: 27.5495\n0 Nonlinear |R| = \ufffd[32m1.123763e+02\ufffd[39m\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to SUBPC_ERROR\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nA MooseException was raised during FEProblemBase::computeResidualTags\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\nSolve failed, cutting timestep.\nTime Step 1, time = 0.000125, dt = 0.000125\n|residual|_2 of individual variables:\nc:      0\neta1:   0.000389647\neta3:   0.622528\nc1:     107.533\nc3:     0.151691\ndisp_x: 7.58654\ndisp_y: 4.34497\ndisp_z: 13.7722\n0 Nonlinear |R| = \ufffd[32m1.087648e+02\ufffd[39m\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to SUBPC_ERROR\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nA MooseException was raised during FEProblemBase::computeResidualTags\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\nSolve failed, cutting timestep.\nTime Step 1, time = 6.25e-05, dt = 6.25e-05\n|residual|_2 of individual variables:\nc:      0\neta1:   0.000389647\neta3:   0.622528\nc1:     107.533\nc3:     0.151691\ndisp_x: 3.79315\ndisp_y: 2.17242\ndisp_z: 6.88544\n0 Nonlinear |R| = \ufffd[32m1.078433e+02\ufffd[39m\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to SUBPC_ERROR\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nA MooseException was raised during FEProblemBase::computeResidualTags\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\nSolve failed, cutting timestep.\nTime Step 1, time = 3.125e-05, dt = 3.125e-05\n|residual|_2 of individual variables:\nc:      0\neta1:   0.000389647\neta3:   0.622528\nc1:     107.533\nc3:     0.151691\ndisp_x: 1.89655\ndisp_y: 1.08619\ndisp_z: 3.44256\n0 Nonlinear |R| = \ufffd[32m1.076118e+02\ufffd[39m\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to SUBPC_ERROR\nIn computing the eigenvalues and eigenvectors of a symmetric rank-2 tensor, the PETSC LAPACK syev routine returned error code 2\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n@GiudGiud @dschwen",
          "url": "https://github.com/idaholab/moose/discussions/27412",
          "updatedAt": "2024-04-18T23:58:07Z",
          "publishedAt": "2024-04-18T23:12:38Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDo you know which rank two tensor the error message is mentioning?\nCan you simplify the problem to debug? Do you need to be solving for displacements and the c_i at the same time or can you only solve on equation to start with?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27412#discussioncomment-9160466",
                  "updatedAt": "2024-04-18T23:58:08Z",
                  "publishedAt": "2024-04-18T23:58:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Mesh error",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I have stitched two meshes together from previous simulations. Below is how the mesh was generated in the previous simulation:\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 150\n  ny = 150\n#  nz = 2\n  xmin = 0\n  xmax = 300\n  ymin = 0\n  ymax = 300\n  zmin = 0\n  zmax = 0\n#  elem_type = QUAD4\n[]\n\nBelow is how I stitched together:\n[Mesh]\n  [./fmg_left]\n    type = FileMeshGenerator\n    file = my_kks_noload_110_out.e-s172\n  []\n\n  [./fmg_right]\n    type = FileMeshGenerator\n    file = my_kks_noload_one8_out.e-s172\n  []\n\n  [./smg]\n    type = StitchedMeshGenerator\n    inputs = 'fmg_left fmg_right'\n    clear_stitched_boundary_ids = true\n    stitch_boundaries_pairs = 'right left'\n  []\n[]\n\nYet I get this as the output when I test only the mesh:\n[emmanuel324@tinkercliffs1 problems]$ ../darcy_thermo_mech-opt -i bicrystal_kk\ns_mesh.i --mesh-only\nIn UnstructuredMesh::stitch_meshes:\nThis mesh has 182 nodes on boundary `right' (1).\nOther mesh has 174 nodes on boundary `' (7).\nMinimum edge length on both surfaces is 1.\nIn UnstructuredMesh::stitch_meshes:\nFound 0 matching nodes.\n\n Mesh Information:\n  elem_dimensions()={2}\n  spatial_dimension()=2\n  n_nodes()=75841\n    n_local_nodes()=75841\n  n_elem()=71685\n    n_local_elem()=71685\n    n_active_elem()=71685\n  n_subdomains()=1\n  n_elemsets()=0\n  n_partitions()=1\n  n_processors()=1\n  n_threads()=1\n  processor_id()=0\n  is_prepared()=true\n  is_replicated()=true\n\n Mesh Bounding Box:\n  Minimum: (x,y,z)=(       0,        0,        0)\n  Maximum: (x,y,z)=(     300,      300,        0)\n  Delta:   (x,y,z)=(     300,      300,        0)\n\n Mesh Element Type(s):\n  QUAD4\n\n Mesh Nodesets:\n  Nodeset 0 (bottom), 151 nodes\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,        0,        0)\n   Bounding box delta: (x,y,z)=(     300,        0,        0)\n  Nodeset 1 (right), 182 nodes\n   Bounding box minimum: (x,y,z)=(     300,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(       0,      300,        0)\n  Nodeset 2 (top), 223 nodes\n   Bounding box minimum: (x,y,z)=(       0,      300,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(     300,        0,        0)\n  Nodeset 3 (left), 179 nodes\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(       0,      300,        0)\n   Bounding box delta: (x,y,z)=(       0,      300,        0)\n  Nodeset 4 (bottom), 183 nodes\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,        0,        0)\n   Bounding box delta: (x,y,z)=(     300,        0,        0)\n  Nodeset 5 (right), 226 nodes\n   Bounding box minimum: (x,y,z)=(     300,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(       0,      300,        0)\n  Nodeset 6 (top), 178 nodes\n   Bounding box minimum: (x,y,z)=(       0,      300,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(     300,        0,        0)\n  Nodeset 7 (left), 174 nodes\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(       0,      300,        0)\n   Bounding box delta: (x,y,z)=(       0,      300,        0)\n\n Mesh Sidesets:\n  Sideset 0 (bottom), 150 sides (EDGE2), 150 elems (QUAD4), 151 nodes\n   Side volume: 300\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,        0,        0)\n   Bounding box delta: (x,y,z)=(     300,        0,        0)\n  Sideset 1 (right), 181 sides (EDGE2), 181 elems (QUAD4), 182 nodes\n   Side volume: 300\n   Bounding box minimum: (x,y,z)=(     300,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(       0,      300,        0)\n  Sideset 2 (top), 222 sides (EDGE2), 222 elems (QUAD4), 223 nodes\n   Side volume: 300\n   Bounding box minimum: (x,y,z)=(       0,      300,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(     300,        0,        0)\n  Sideset 3 (left), 178 sides (EDGE2), 178 elems (QUAD4), 179 nodes\n   Side volume: 300\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(       0,      300,        0)\n   Bounding box delta: (x,y,z)=(       0,      300,        0)\n  Sideset 4 (bottom), 182 sides (EDGE2), 182 elems (QUAD4), 183 nodes\n   Side volume: 300\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,        0,        0)\n   Bounding box delta: (x,y,z)=(     300,        0,        0)\n  Sideset 5 (right), 225 sides (EDGE2), 225 elems (QUAD4), 226 nodes\n   Side volume: 300\n   Bounding box minimum: (x,y,z)=(     300,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(       0,      300,        0)\n  Sideset 6 (top), 177 sides (EDGE2), 177 elems (QUAD4), 178 nodes\n   Side volume: 300\n   Bounding box minimum: (x,y,z)=(       0,      300,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(     300,        0,        0)\n  Sideset 7 (left), 173 sides (EDGE2), 173 elems (QUAD4), 174 nodes\n   Side volume: 300\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(       0,      300,        0)\n   Bounding box delta: (x,y,z)=(       0,      300,        0)\n Mesh Edgesets:\n  None\n Mesh Subdomains:\n  Subdomain 0: 71685 elems (QUAD4, 71685 active), 75841 active nodes\n   Volume: 180000\n   Bounding box minimum: (x,y,z)=(       0,        0,        0)\n   Bounding box maximum: (x,y,z)=(     300,      300,        0)\n   Bounding box delta: (x,y,z)=(     300,      300,        0)\n  Global mesh volume = 180000\n\nAnd the .e file does not give anything meaningful when I want to view it. @dschwen @GiudGiud",
          "url": "https://github.com/idaholab/moose/discussions/27395",
          "updatedAt": "2024-04-18T16:24:53Z",
          "publishedAt": "2024-04-17T13:47:55Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "[Mesh]\n  [./fmg_left]\n    type = FileMeshGenerator\n    file = my_kks_noload_110_out.e-s172\n  []\n\n  [./fmg_right]\n    type = FileMeshGenerator\n    file = my_kks_noload_one8_out.e-s172\n  []\n\n  [./smg]\n    type = StitchedMeshGenerator\n    inputs = 'fmg_left fmg_right'\n    clear_stitched_boundary_ids = true\n    stitch_boundaries_pairs = 'right left'\n  []\n[]\n\nthese files come from adaptivity dont they?\nif the left and right boundary are at different levels of refinement, they are not going to be stitchable properly on a node-to-node basis.\nI suspect 'right' and 'left' do not align spatially at all either, since you get 0 stitched nodes.\nyou need to use a TransformMeshGenerator to make the two sidesets super-impose",
                  "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9143652",
                  "updatedAt": "2024-04-17T14:09:38Z",
                  "publishedAt": "2024-04-17T14:09:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Yes, they do come from an adaptive mesh.",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9143801",
                          "updatedAt": "2024-04-17T14:19:37Z",
                          "publishedAt": "2024-04-17T14:19:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I get this error message:\n*** ERROR ***\nA 'TransformMeshGenerator' is not a registered object.\nIf you are trying to find this object in a dynamically loaded library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9143870",
                          "updatedAt": "2024-04-17T14:23:22Z",
                          "publishedAt": "2024-04-17T14:23:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "https://mooseframework.inl.gov/source/meshgenerators/TransformGenerator.html\nplease feel free to use the documentation :D",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9143879",
                          "updatedAt": "2024-04-17T14:24:32Z",
                          "publishedAt": "2024-04-17T14:24:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I am not getting any information close to my problem as I am trying to also stitch two meshes together. I do not know which one to transform, scale, or translate. The example input scripts are not helping",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9144224",
                          "updatedAt": "2024-04-17T14:53:26Z",
                          "publishedAt": "2024-04-17T14:53:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the two sidesets you are trying to stitch must overlap. You need to translate one if they do not currently overlap",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9144243",
                          "updatedAt": "2024-04-17T14:54:32Z",
                          "publishedAt": "2024-04-17T14:54:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I  get this error when I try to translate. Maybe I do not understand the translation well.\n*** ERROR ***\nYour MeshGenerator tree contains multiple possible generator outputs :\n\"translate_mesh and one or more of the following from an independent set: \"fmg_left, fmg_righ\nt\"\nBelow is the input script:\n[Mesh]\n[./fmg_left]\ntype = FileMeshGenerator\nfile = my_kks_noload_110_out.e-s172\n[]\n[./fmg_right]\ntype = FileMeshGenerator\nfile = my_kks_noload_one8_out.e-s172\n[]\n[translate_mesh]\ntype = TransformGenerator\ninput = fmg_left\ntransform = translate\nvector_value = '1 2 0'\n[]\n[]\nThis may be due to a missing dependency or may be intentional. Please either\n\ncheck that all the mesh generators are connected as a tree and culminate in a single final\nmesh. Having one wrong 'input=mg' parameter is the most common error\nadd additional dependencies to remove the ambiguity if you are using a user-built MeshGener\nator\nif you intend to execute a subset of the defined generators (uncommon), select the final Me\nshGenerator in the [Mesh] block with the \"final_generator\" parameter.",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9145401",
                          "updatedAt": "2024-04-17T16:25:04Z",
                          "publishedAt": "2024-04-17T16:25:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you need to have a tree with a single output for the mesh generators\nAdd the stitch mesh generator, this joins the two branches",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9145485",
                          "updatedAt": "2024-04-17T16:34:34Z",
                          "publishedAt": "2024-04-17T16:34:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I get the same error:\n** ERROR ***\nYour MeshGenerator tree contains multiple possible generator outputs :\n\"translate_mesh and one or more of the following from an independent set: \"fmg_left, smg, translate_mesh\"\nThis may be due to a missing dependency or may be intentional. Please either\n\ncheck that all the mesh generators are connected as a tree and culminate in a single final mesh. Having one wrong 'input=mg' parameter is the most common error\nadd additional dependencies to remove the ambiguity if you are using a user-built MeshGenerator\nif you intend to execute a subset of the defined generators (uncommon), select the final MeshGenerator in the [Mesh] block with the \"final_generator\" parameter.\n\ninput script:\n[Mesh]\n[./fmg_left]\ntype = FileMeshGenerator\nfile = my_kks_noload_110_out.e-s172\n[]\n[./fmg_right]\ntype = FileMeshGenerator\nfile = my_kks_noload_one8_out.e-s172\n[]\n[translate_mesh]\ntype = TransformGenerator\ninput = fmg_right\ntransform = translate\nvector_value = '1 2 0'\n[]\n[./smg]\ntype = StitchedMeshGenerator\ninputs = 'fmg_left fmg_right'\nclear_stitched_boundary_ids = true\nstitch_boundaries_pairs = 'right left'\n[]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9145629",
                          "updatedAt": "2024-04-17T16:51:32Z",
                          "publishedAt": "2024-04-17T16:51:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "do this\n[./smg]\ntype = StitchedMeshGenerator\ninputs = 'fmg_left translate_mesh'\nclear_stitched_boundary_ids = true\nstitch_boundaries_pairs = 'right left'\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9145742",
                          "updatedAt": "2024-04-17T17:01:36Z",
                          "publishedAt": "2024-04-17T17:01:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Still 0 matching nodes\nIn UnstructuredMesh::stitch_meshes:\nThis mesh has 182 nodes on boundary right' (1). Other mesh has 174 nodes on boundary ' (7).\nMinimum edge length on both surfaces is 1.\nIn UnstructuredMesh::stitch_meshes:\nFound 0 matching nodes.\nMesh Information:\nelem_dimensions()={2}\nspatial_dimension()=2\nn_nodes()=75841\nn_local_nodes()=75841\nn_elem()=71685\nn_local_elem()=71685\nn_active_elem()=71685\nn_subdomains()=1\nn_elemsets()=0\nn_partitions()=1\nn_processors()=1\nn_threads()=1\nprocessor_id()=0\nis_prepared()=true\nis_replicated()=true\nMesh Bounding Box:\nMinimum: (x,y,z)=(       0,        0,        0)\nMaximum: (x,y,z)=(     301,      302,        0)\nDelta:   (x,y,z)=(     301,      302,        0)\nMesh Element Type(s):\nQUAD4\nMesh Nodesets:\nNodeset 0 (bottom), 151 nodes\nBounding box minimum: (x,y,z)=(       0,        0,        0)\nBounding box maximum: (x,y,z)=(     300,        0,        0)\nBounding box delta: (x,y,z)=(     300,        0,        0)\nNodeset 1 (right), 182 nodes\nBounding box minimum: (x,y,z)=(     300,        0,        0)\nBounding box maximum: (x,y,z)=(     300,      300,        0)\nBounding box delta: (x,y,z)=(       0,      300,        0)\nNodeset 2 (top), 223 nodes\nBounding box minimum: (x,y,z)=(       0,      300,        0)\nBounding box maximum: (x,y,z)=(     300,      300,        0)\nBounding box delta: (x,y,z)=(     300,        0,        0)\nNodeset 3 (left), 179 nodes\nBounding box minimum: (x,y,z)=(       0,        0,        0)\nBounding box maximum: (x,y,z)=(       0,      300,        0)\nBounding box delta: (x,y,z)=(       0,      300,        0)\nNodeset 4 (bottom), 183 nodes\nBounding box minimum: (x,y,z)=(       1,        2,        0)\nBounding box maximum: (x,y,z)=(     301,        2,        0)\nBounding box delta: (x,y,z)=(     300,        0,        0)\nNodeset 5 (right), 226 nodes\nBounding box minimum: (x,y,z)=(     301,        2,        0)\nBounding box maximum: (x,y,z)=(     301,      302,        0)\nBounding box delta: (x,y,z)=(       0,      300,        0)\nNodeset 6 (top), 178 nodes\nBounding box minimum: (x,y,z)=(       1,      302,        0)\nBounding box maximum: (x,y,z)=(     301,      302,        0)\nBounding box delta: (x,y,z)=(     300,        0,        0)\nNodeset 7 (left), 174 nodes\nBounding box minimum: (x,y,z)=(       1,        2,        0)\nBounding box maximum: (x,y,z)=(       1,      302,        0)\nBounding box delta: (x,y,z)=(       0,      300,        0)\nMesh Sidesets:\nSideset 0 (bottom), 150 sides (EDGE2), 150 elems (QUAD4), 151 nodes\nSide volume: 300\nBounding box minimum: (x,y,z)=(       0,        0,        0)\nBounding box maximum: (x,y,z)=(     300,        0,        0)\nBounding box delta: (x,y,z)=(     300,        0,        0)\nSideset 1 (right), 181 sides (EDGE2), 181 elems (QUAD4), 182 nodes\nSide volume: 300\nBounding box minimum: (x,y,z)=(     300,        0,        0)\nBounding box maximum: (x,y,z)=(     300,      300,        0)\nBounding box delta: (x,y,z)=(       0,      300,        0)\nSideset 2 (top), 222 sides (EDGE2), 222 elems (QUAD4), 223 nodes\nSide volume: 300\nBounding box minimum: (x,y,z)=(       0,      300,        0)\nBounding box maximum: (x,y,z)=(     300,      300,        0)\nBounding box delta: (x,y,z)=(     300,        0,        0)\nSideset 3 (left), 178 sides (EDGE2), 178 elems (QUAD4), 179 nodes\nSide volume: 300\nBounding box minimum: (x,y,z)=(       0,        0,        0)\nBounding box maximum: (x,y,z)=(       0,      300,        0)\nBounding box delta: (x,y,z)=(       0,      300,        0)\nSideset 4 (bottom), 182 sides (EDGE2), 182 elems (QUAD4), 183 nodes\nSide volume: 300\nBounding box minimum: (x,y,z)=(       1,        2,        0)\nBounding box maximum: (x,y,z)=(     301,        2,        0)\nBounding box delta: (x,y,z)=(     300,        0,        0)\nSideset 5 (right), 225 sides (EDGE2), 225 elems (QUAD4), 226 nodes\nSide volume: 300\nBounding box minimum: (x,y,z)=(     301,        2,        0)\nBounding box maximum: (x,y,z)=(     301,      302,        0)\nBounding box delta: (x,y,z)=(       0,      300,        0)\nSideset 6 (top), 177 sides (EDGE2), 177 elems (QUAD4), 178 nodes\nSide volume: 300\nBounding box minimum: (x,y,z)=(       1,      302,        0)\nBounding box maximum: (x,y,z)=(     301,      302,        0)\nBounding box delta: (x,y,z)=(     300,        0,        0)\nSideset 7 (left), 173 sides (EDGE2), 173 elems (QUAD4), 174 nodes\nSide volume: 300\nBounding box minimum: (x,y,z)=(       1,        2,        0)\nBounding box maximum: (x,y,z)=(       1,      302,        0)\nBounding box delta: (x,y,z)=(       0,      300,        0)\nMesh Edgesets:\nNone\nMesh Subdomains:\nSubdomain 0: 71685 elems (QUAD4, 71685 active), 75841 active nodes\nVolume: 180000\nBounding box minimum: (x,y,z)=(       0,        0,        0)\nBounding box maximum: (x,y,z)=(     301,      302,        0)\nBounding box delta: (x,y,z)=(     301,      302,        0)\nGlobal mesh volume = 180000",
                          "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9145895",
                          "updatedAt": "2024-04-17T17:19:41Z",
                          "publishedAt": "2024-04-17T17:19:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "there is also a parameter called prevent_boundary_overlaps in the stichedMeshGenerator\nthis will merge the boundaries with the same names if you use it with 'false' instead of the default.\nkeep in mind merging boundaries is usually not the right thing to do, but it will load in paraivew",
                  "url": "https://github.com/idaholab/moose/discussions/27395#discussioncomment-9157200",
                  "updatedAt": "2024-04-18T16:19:14Z",
                  "publishedAt": "2024-04-18T16:19:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adding heat source and temperature dependent material properties with navier stokes",
          "author": {
            "login": "Jake-HW-Miles"
          },
          "bodyText": "Hi all,\nI am trying to simulate fluid flow, based on the thesis attached. So far, I have managed to successfully get it working, however the next step is to add a volumetric heat source function which varies with time. The function is currently defined as a ParsedFunction.\nI am using INSFV implementation and can provide more detail if needed. I was previously using the HeatSource Kernel when not using Navier Stokes, so want to know if there is an equivalent.\nI tried using a portion of the NavierStokesFV module, however no luck...\nMy attempt:\n[Modules]\n    [NavierStokesFV]\n        pin_pressure = true\n        pinned_pressure_type = average-uo\n        external_heat_source = volumetric_decay_func\n        block = fuel_salt\n        density = ${rho}\n        dynamic_viscosity = ${mu}\n       []\n[]\n\n\nIf this is a trivial solve, the second part of my question pertains to using functions to alter material properties, such as density, with temperature which seemingly requires FunctorMaterial properties.\nHappy to expand on this! Thank you in advance!\nThesis: Verification of the fluid dynamics modules of the Multiphysics simulation framework MOOSE\nLink: https://www.diva-portal.org/smash/get/diva2:1652721/FULLTEXT01.pdf",
          "url": "https://github.com/idaholab/moose/discussions/27397",
          "updatedAt": "2024-04-18T16:27:09Z",
          "publishedAt": "2024-04-17T16:39:44Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Jake\nA heat source should be easy to add.\nIf you have a working Modules/NavierStokes action syntax, adding the external_heat_source is the correct thing to do.\nOne problem may be if you are trying to block restrict the definition of the source? (not apply heat over the whole domain).\nIn that case, you can still use a FVBodyForce FVKernel on the side to define this.\nFor material properties, you will want to use a GeneralFunctorFluidProps material.\nMany of the fluid properties will work without extra work in NavierStokes.\nhttps://mooseframework.inl.gov/syntax/FluidProperties/index.html\nDo you have a working input without a heat source right now?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27397#discussioncomment-9145598",
                  "updatedAt": "2024-04-17T16:46:44Z",
                  "publishedAt": "2024-04-17T16:46:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Jake-HW-Miles"
                          },
                          "bodyText": "Hi Guillaume,\nThank you for the reply, I wanted to give these things a go before getting back to you. I have (partially) succeeded in implementing these suggestions.\nFYI I am not using the Navier Stokes module at this stage, and am instead using the respective FVKernels.\n\nFVBodyForce was exactly what was needed for the implementation of a heat source in a specified block.\nGeneralFunctorFluidProps was also what was required, where my fluid properties are now defined using TemperaturePressureFunctionFluidProperties.\n\nMy only follow up is due to confusion regarding the use of the functor properties given by GeneralFunctorFluidProps:\nCurrently this is my GeneralFunctorFluidProps block:\n[fuel_salt]\n    type = GeneralFunctorFluidProps\n    block = fuel_salt\n    fp = salt_fluid_properties\n\n    pressure = pressure\n    T_fluid = T\n    characteristic_length = 0.2\n    speed = velocity_xy\n\n    force_define_density = true\n[]\n\nWhich I believe is correct, as it has no issues being read in all my FVKernels, except one...\nIt does not work for FVHeatConductionTimeDerivative, where density_name is requested instead of rho, like the other FVKernels I am using for NS. I have tried simply defining an ADParsedMaterial which defines a new density, which should vary the same. However my follow up question is whether I can do this in a different way?\nHope that makes sense! Thank you for this advice!\nJake",
                          "url": "https://github.com/idaholab/moose/discussions/27397#discussioncomment-9155072",
                          "updatedAt": "2024-04-18T13:23:18Z",
                          "publishedAt": "2024-04-18T13:21:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nFor FVHeatConductionTimeDerivative you would be able to set: density_name = rho\nexcept not, because that kernel uses regular material properties instead of functor material properties.\nWhy do you want to use that kernel? The (P)INSFVEnergyTimeDerivative are meant to be used with NSFV, for both fluid and solid time derivatives.\nThe reason for the distinction is actually the use of a different material property system\nAnother way (same as the ADParsedMaterial) is to use this converter between systems\nhttps://mooseframework.inl.gov/source/materials/MaterialFunctorConverter.html\nthat's if you really need to use that kernel\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/27397#discussioncomment-9156487",
                          "updatedAt": "2024-04-18T15:22:45Z",
                          "publishedAt": "2024-04-18T15:22:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Jake-HW-Miles"
                          },
                          "bodyText": "Hi!\nThe use of FVHeatConductionTimeDerivative is my mistake, I thought I had seen it in a INSFV example... Upon checking the example* , it seems not! I cannot see why I would need it at this stage.\nThank you for providing a clear and concise response. I will mark your first response as the answer.\nBest regards,\nJake\n\nmodules/navier_stokes/test/tests/postprocessors/rayleigh/natural_convection.i",
                          "url": "https://github.com/idaholab/moose/discussions/27397#discussioncomment-9157196",
                          "updatedAt": "2024-04-18T16:18:54Z",
                          "publishedAt": "2024-04-18T16:18:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "QuasiStaticSolidMechanicsPhysics error",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I have an input file with this block which keeps giving this error:\n/home/emmanuel324/projects/belson2/My_Project/kks_crystal_plasticity/crystal_plasticity_myown/test1/Crysp/Bicrystal_Test/bicrystal_test5/bicrystal_test5.i:206.3:\nThe following error occurred in the Action 'phase1' of type QuasiStaticSolidMechanicsPhysics.\nNo SolidMechanics/QuasiStatic action can be block unrestricted if more than one SolidMechanics/QuasiStatic action is specified.\ufffd[39m\nBelow is the part of the input script:\n[Physics/SolidMechanics/QuasiStatic]\n[phase1]\nstrain = FINITE\nincremental = true\nadd_variables = true\ngenerate_output = stress_zz\nblock = 0\nbase_name = copper\n[]\n[phase2]\nstrain = FINITE\nincremental = true\nadd_variables = true\ngenerate_output = stress_zz\nblock = 1\nbase_name = brass\n[]\n[]\n@GiudGiud @dschwen",
          "url": "https://github.com/idaholab/moose/discussions/27409",
          "updatedAt": "2024-04-18T22:56:15Z",
          "publishedAt": "2024-04-18T15:46:48Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nSeems like a bug, they are both block-restricted. Do you mind sharing the whole input?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27409#discussioncomment-9157076",
                  "updatedAt": "2024-04-18T16:09:09Z",
                  "publishedAt": "2024-04-18T16:09:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "#This model uses crystal plasticity to simulate the deformation of a polycrystalline nickel-based super alloy in the z-direction\ngamm_p = gamma prime precipitate treated as FCC crystal structure\ngamma_dp = gamma double precipitate treated as BCC structure\ncoupled with phase field\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n[]\n\n[Mesh]\n  [phase1]  \n    type = GeneratedMeshGenerator\n    dim = 3\n    elem_type = HEX8\n  []\n  [phase1_id] \n    type = SubdomainIDGenerator\n    input = phase1\n    subdomain_id = 0\n  []\n  \n  [phase3]\n    type = GeneratedMeshGenerator\n    dim = 3\n    zmax = 2\n    zmin = 1\n    elem_type = HEX8\n  []\n  [phase3_id]\n    type = SubdomainIDGenerator\n    input = phase3\n    subdomain_id = 1\n  []\n  [sticher]\n    type = StitchedMeshGenerator\n    inputs = 'phase1_id phase3_id'\n    stitch_boundaries_pairs = 'front back'\n    prevent_boundary_ids_overlap = false\n  []\n[]\n\n[Variables]\n    # concentration\n  [./c]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  \n    # order parameter 1\n  [./eta1]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  \n    # order parameter 3\n  [./eta3]\n    order = FIRST\n    family = LAGRANGE\n      #initial_condition = 0.0\n  [../]\n  \n    # phase concentration 1\n  [./c1]\n    order = FIRST\n    family = LAGRANGE\n      #initial_condition = 0.0\n  [../]\n  \n    # phase concentration 3\n  [./c3]\n      order = FIRST\n      family = LAGRANGE\n      #initial_condition = 0.2000\n  [../]\n  \n  [./disp_x]\n    order = FIRST\n    family = LAGRANGE\n    block = 0\n  [../]\n  \n  [./disp_y]\n    order = FIRST\n    family = LAGRANGE\n    block = 0\n  [../]\n  \n  [./disp_z]\n    order = FIRST\n    family = LAGRANGE\n    block = 0\n  [../]\n  \n[]\n\n[Functions]\n  [./ic_func_c]\n    type = ParsedFunction\n    expression = 0.5+0.01*(cos(1.05*x)*cos(1.1*y)+(cos(1.3*x)*cos(0.87*y))^2+cos(0.25*x-1.5*y)*cos(0.7*x-0.2*y))\n  [../]\n  [./bc_func]\n    type = ParsedFunction\n    expression = sin(alpha*pi*x)\n    symbol_names = alpha\n    symbol_values = 16\n  [../]\n  [./disp_func]\n    type = ParsedFunction\n    expression = 'if(t<50,6e-3*t,0.3)'\n  [../]\n  [./press_func]\n    type = ParsedFunction\n    expression = '1'\n  [../]\n[]\n\n[ICs]\n  [./eta1]\n    variable = eta1\n    type = RandomIC\n    min = -0.1825\n    max = 0.1825\n    seed = 192\n  [../]\n  \n  [./c]\n    variable = c\n    type = RandomIC\n    min = 0.24375\t\n    max = 0.25625\n    seed = 89\t\n  [../]\n[]\n\n[AuxVariables]\n  [pk2]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [fp_zz]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [e_zz]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [phase1_gss]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 0\n  []\n  [phase1_slip_increment]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 0\n  []\n  [phase2_gss]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 1\n  []\n  [phase2_slip_increment]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 1\n  []\n  [./Energy]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./stress_xx]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 0\n  [../]\n  [./e_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./bounds_dummy]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n[]\n\n\n\n\n[Bounds]\n  [./eta_upper_bound]\n    type = ConstantBounds\n    variable = bounds_dummy\n    bounded_variable = eta1\n    bound_type = upper\n    bound_value = 1\n  [../]\n  [./eta_lower_bound]\n    type = ConstantBounds\n    variable = bounds_dummy\n    bounded_variable = eta1\n    bound_type = lower\n    bound_value = -1\n  [../]\n[]\n\n\n\n[AuxKernels]\n  [pk2]\n    type = RankTwoAux\n    variable = pk2\n    rank_two_tensor = second_piola_kirchhoff_stress\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [fp_zz]\n    type = RankTwoAux\n    variable = fp_zz\n    rank_two_tensor = plastic_deformation_gradient\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [e_zz]\n    type = RankTwoAux\n    variable = e_zz\n    rank_two_tensor = total_lagrangian_strain\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [gss_phase1]\n    type = MaterialStdVectorAux\n    variable = phase1_gss\n    property = phsae1_slip_resistance\n    index = 0\n    block = 0\n    execute_on = timestep_end\n  []\n  [slip_inc_phase1]\n    type = MaterialStdVectorAux\n    variable = phase1_slip_increment\n    property = phase1_slip_increment\n    index = 0\n    block = 0\n    execute_on = timestep_end\n  []\n  [gss_phase2]\n    type = MaterialStdVectorAux\n    variable = phsae2_gss\n    property = phase2_slip_resistance\n    index = 0\n    block = 1\n    execute_on = timestep_end\n  []\n  [slip_inc_phase2]\n    type = MaterialStdVectorAux\n    variable = phase2_slip_increment\n    property = phase2_slip_increment\n    index = 0\n    block = 1\n    execute_on = timestep_end\n  []\n  [./Energy_total]\n    type = KKSMultiFreeEnergy\n    Fj_names = 'F1 F3'\n    hj_names = 'h1  h3'\n    gj_names = 'g1  g3'\n    variable = Energy\n    w = 1\n    interfacial_vars =  'eta1   eta3'\n    kappa_names =       'kappa  kappa'\n  [../]\n  [./stress_xx]\n    type = RankTwoAux\n    variable = stress_xx\n    rank_two_tensor = stress\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n    block = 0\n  [../]\n[]\n\n[BCs]\n  [./u_right_pull]\n    type = Pressure\n    displacements = 'disp_x disp_y disp_z'\n    variable = disp_x\n    boundary = right\n    factor = 0\n  [../]\n  \n  [./all]\n    type =  NeumannBC\n    variable = 'c'\n    boundary = 'left right top bottom'\n    value = 0\n  [../]\t\n  \n\n  [symmy]\n    type = DirichletBC\n    variable = disp_y\n    boundary = bottom\n    value = 0\n  []\n  [symmx]\n    type = DirichletBC\n    variable = disp_x\n    boundary = left\n    value = 0\n  []\n  [symmz]\n    type = DirichletBC\n    variable = disp_z\n    boundary = back\n    value = 0\n  []\n  [tdisp]\n    type = FunctionDirichletBC\n    variable = disp_z\n    boundary = front\n    function = '0.01*t'\n  []\n[]\n\n[Materials]\n    # simple toy free energies\n  [./f1]\n    type = DerivativeParsedMaterial\n    property_name = fc_1\n    coupled_variables = 'c1'\n    expression = '100.0*(c1-0.888)^2'\n  [../]\n    # Elastic energy of the phase 1\n  [./elastic_free_energy_1]\n    type = ElasticEnergyMaterial\n    base_name = phase1\n    property_name = fe_1\n    coupled_variables = ' '\n  [../]\n    # Total free energy of the phase 1\n  [./Total_energy_1]\n    type = DerivativeSumMaterial\n    property_name = F1\n    sum_materials = 'fc_1 fe_1'\n    coupled_variables = 'c1'\n  [../]\n  \n  \n  [./f3]\n    type = DerivativeParsedMaterial\n    property_name = fc_3\n    coupled_variables = 'c3'\n    expression = '5.0*(c3-0.2)^2'\n  [../]\n  \n    # Elastic energy of the phase 3\n  [./elastic_free_energy_3]\n    type = ElasticEnergyMaterial\n    base_name = phase3\n    property_name = fe_3\n    coupled_variables = ' '\n  [../]\n    # Total free energy of the phase 3\n  [./Total_energy_3]\n    type = DerivativeSumMaterial\n    property_name = F3\n    sum_materials = 'fc_3 fe_3'\n    coupled_variables= 'c3'\n  [../]\n  \n    # Switching functions for each phase\n    # h1(eta1, eta3)\n  [./h1]\n    type = SwitchingFunctionMultiPhaseMaterial\n    phase_etas = eta1\n    all_etas = 'eta1 eta3'\n    h_name = h1\n  [../]\n  \n    # h3(eta1, eta3)\n  [./h3]\n    type = SwitchingFunctionMultiPhaseMaterial\n    phase_etas = eta3\n    all_etas = 'eta1 eta3'\n    h_name = h3\n  [../]\n  \n    # Coefficients for diffusion equation\n  [./Dh1]\n    type = DerivativeParsedMaterial\n    material_property_names = 'D h1'\n    expression = D*h1\n    property_name = Dh1\n  [../]\n  \n  [./Dh3]\n    type = DerivativeParsedMaterial\n    material_property_names = 'D h3'\n    expression = D*h3\n    property_name = Dh3\n  [../]\n  \n    # Barrier functions for each phase\n  [./g1]\n    type = BarrierFunctionMaterial\n    g_order = SIMPLE\n    eta = eta1\n    function_name = g1\n  [../]\n  \n  [./g3]\n    type = BarrierFunctionMaterial\n    g_order = SIMPLE\n    eta = eta3\n    function_name = g3\n  [../]\n  \n    # constant properties\n  [./constants]\n    type = GenericConstantMaterial\n    prop_names  = 'L    kappa  D  misfit  W'\n    prop_values = '0.3  0.01   1  0.005  0.01'\n  [../]\n  \n  [elasticity_tensor_phase1]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '1982 534 496 1606 605 1788 985 1056 388'\n    fill_method = symmetric9\n    base_name = phase_1\n    block = 0\n  []\n  [stress_phase1]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl_phase1'\n    tan_mod_type = exact\n    base_name = phase1\n    block = 0\n  []\n  [trial_xtalpl_phase1]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    base_name = phase1\n    block = 0\n  []\n  [elasticity_tensor_phase3]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '2008.5 448.9 918.5 2008.5 918.5 1538.7 779.8 779.8 309.9'\n    fill_method = symmetric9\n    euler_angle_1 = 0.0\n    euler_angle_2 = 45.0\n    euler_angle_3 = 0.9\n    base_name = phase3\n    block = 1\n  []\n  [stress_phase3]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl_phase3'\n    tan_mod_type = exact\n    base_name = phase3\n    block = 1\n  []\n  [trial_xtalpl_phase3]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 48\n    slip_sys_file_name = input_slip_sys_bcc48.txt\n    base_name = phase3\n    block = 1\n  []\n  \n  [./strain_phase1]\n    type = ComputeSmallStrain\n    displacements = 'disp_x disp_y'\n    base_name = phase1\n    eigenstrain_names = eigenstrain1\n  [../]\n  \n  [./strain_phase3]\n    type = ComputeSmallStrain\n    displacements = 'disp_x disp_y disp_z'\n    base_name = phase3\n  [../]\n  \n  [./eigen_strain1]\n    type = ComputeEigenstrain\n    base_name = phase1\n    eigen_base = '1 0 0 0 0 0'\n    prefactor = misfit\n    eigenstrain_name = eigenstrain1\n  [../]\n  \n   # Generate the global stress from the phase stresses\n  [./global_stress]\n    type = MultiPhaseStressMaterial\n    phase_base = 'phase1  phase3'\n    h          = 'h1        h3'\n  [../]\n  \n  [./global_strain]\n    type = ComputeSmallStrain\n    displacements = 'disp_x disp_y disp_z'\n  [../]\n  \n[]\n\n[Kernels]\n  [./TensorMechanics]\n    displacements = 'disp_x disp_y disp_z'\n    incremental = true\n  [../]\n  \n    #Kernels for diffusion equation\n  [./diff_time]\n    type = TimeDerivative\n    variable = c\n  [../]\n  [./diff_c1]\n    type = MatDiffusion\n    variable = c\n    diffusivity = Dh1\n    v = c1\n  [../]\n  \n  [./diff_c3]\n    type = MatDiffusion\n    variable = c\n    diffusivity = Dh3\n    v = c3\n  [../]\n  \n    # Kernels for Allen-Cahn equation for eta1\n  [./deta1dt]\n    type = TimeDerivative\n    variable = eta1\n  [../]\n  [./ACBulkF1]\n    type = KKSMultiACBulkF\n    variable  = eta1\n    Fj_names  = 'F1 F3'\n    hj_names  = 'h1 h3'\n    gi_name   = g1\n    eta_i     = eta1\n    wi        = 0.01\n    coupled_variables      = 'c1 c3 eta3'\n  [../]\n  [./ACBulkC1]\n    type = KKSMultiACBulkC\n    variable  = eta1\n    Fj_names  = 'F1 F3'\n    hj_names  = 'h1  h3'\n    cj_names  = 'c1  c3'\n    eta_i     = eta1\n    coupled_variables      = 'eta3'\n  [../]\n  [./ACInterface1]\n    type = ACInterface\n    variable = eta1\n    kappa_name = kappa\n  [../]\n  \n  \n    # Kernels for constraint equation eta1 + eta3 = 1\n    # eta3 is the nonlinear variable for the constraint equation\n  [./eta3reaction]\n    type = MatReaction\n    variable = eta3\n    mob_name = 1\n  [../]\n  [./eta1reaction]\n    type = MatReaction\n    variable = eta3\n    v = eta1\n    mob_name = 1\n  [../]\n  \n  [./one]\n    type = BodyForce\n    variable = eta3\n    value = -1.0\n  [../]\n  \n  \n    #Phase concentration constraints\n  [./chempot13]\n    type = KKSPhaseChemicalPotential\n    variable = c1\n    cb       = c3\n    fa_name  = F1\n    fb_name  = F3\n  [../]\n  \n  [./phaseconcentration]\n    type = KKSMultiPhaseConcentration\n    variable = c3\n    cj = 'c1  c3'\n    hj_names = 'h1  h3'\n    etas = 'eta1  eta3'\n    c = c\n  [../]\n[]\n\n\n[Physics/SolidMechanics/QuasiStatic]\n  [./phase1]\n    strain = FINITE\n    incremental = true\n    add_variables = true\n    generate_output = stress_zz\n    block = 0\n    base_name = phase1\n  [../]\n  [phase2]\n    strain = FINITE\n    incremental = true\n    add_variables = true\n    generate_output = stress_zz\n    block = 1\n    base_name = phase2\n  []\n[..]\n[Postprocessors]\n  [phase1_stress_zz]\n    type = ElementAverageValue\n    variable = phase1_stress_zz\n    block = 0\n  []\n  [gamma_dp_stress_zz]\n    type = ElementAverageValue\n    variable = phase1_stress_zz\n    block = 1\n  []\n  [pk2]\n    type = ElementAverageValue\n    variable = pk2\n  []\n  [fp_zz]\n    type = ElementAverageValue\n    variable = fp_zz\n  []\n  [e_zz]\n    type = ElementAverageValue\n    variable = e_zz\n  []\n  [phase1_gss]\n    type = ElementAverageValue\n    variable = phase1_gss\n    block = 0\n  []\n  [phase1_slip_increment]\n    type = ElementAverageValue\n    variable = phase1_slip_increment\n    block = 0\n  []\n  [phase2_gss]\n    type = ElementAverageValue\n    variable = phase2_gss\n    block = 1\n  []\n  [phase2_slip_increment]\n    type = ElementAverageValue\n    variable = phase2_slip_increment\n    block = 1\n  []\n  [./dofs]\n    type = NumDOFs\n  [../]\n  [./h1_error]\n    type = ElementH1Error\n    variable = eta1\n    function = bc_func\n  [../]\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n\n  petsc_options_iname = '-pc_type -pc_asm_overlap -sub_pc_type -ksp_type -ksp_gmres_restart'\n  petsc_options_value = ' asm      2              lu            gmres     200'\n  nl_abs_tol = 1e-10\n  nl_rel_tol = 1e-10\n  nl_abs_step_tol = 1e-10\n  \n  end_time = 5000\n\n   [./TimeStepper]\n     type = IterationAdaptiveDT\n     dt = 5e-4\n     cutback_factor = 0.75\n     growth_factor = 1.2\n     optimal_iterations = 20\n   [../]\n[]\n\n[Preconditioning]\n    active = 'full'\n  [./full]\n    type = SMP\n    full = true\n  [../]\n  [./mydebug]\n    type = FDP\n    full = true\n  [../]\n[]\n\n\n\n[Outputs]\n  exodus = true\n    print_linear_residuals = true\n  [./table]\n    type = CSV\n    execute_on = timestep_end\n  [../]\n  [./checkpoint]\n    type = Checkpoint\n    num_files = 10\n    interval = 10\n  [../]\n[]\n\n[Debug]\n    show_var_residual_norms = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27409#discussioncomment-9157103",
                          "updatedAt": "2024-04-18T16:12:43Z",
                          "publishedAt": "2024-04-18T16:11:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this should not be here\n[Kernels]\n  [./TensorMechanics]\n    displacements = 'disp_x disp_y disp_z'\n    incremental = true\n  [../]\n\nthis is the non-block restricted one",
                          "url": "https://github.com/idaholab/moose/discussions/27409#discussioncomment-9157173",
                          "updatedAt": "2024-04-18T16:17:58Z",
                          "publishedAt": "2024-04-18T16:17:57Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Transient solve; steady-state detection on postprocessor output",
          "author": {
            "login": "jvwilliams23"
          },
          "bodyText": "Hi,\nI am wondering if it is possible to specify a specific quantity to base the steady-state detection on when steady_state_detection = true? I see there is a check_aux option, but this is a bool and so not useful for pointing to a specific aux variable.\nI want to stop the simulation when the change in the maximum temperature is steady (not interested in other dynamics).\nSo I am looking for something similar to this:\n[Postprocessors]\n  [max-temp]\n    type = NodalExtremeValue\n    variable = temp\n  []\n[]\n\n[Executioner]\n  type = Transient\n  steady_state_detection = true\n  steady_state_monitor = max-temp # Does something like this exist?\n[]\n\nI am looking to do some UQ on a big transient simulation, so I am trying to find performance savings to minimise excess computation.\nBest,\nJosh",
          "url": "https://github.com/idaholab/moose/discussions/27404",
          "updatedAt": "2024-04-18T11:05:24Z",
          "publishedAt": "2024-04-18T08:24:02Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou cannot do this with the executioner parameters currently. You will soon be able to do thanks to development of a new Convergence system that will have many options.\nFor now,use a terminator user object to finish the simulation and a postprocessor to measure the criterion (change in the variable)\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27404#discussioncomment-9153713",
                  "updatedAt": "2024-04-18T11:03:04Z",
                  "publishedAt": "2024-04-18T11:03:04Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jvwilliams23"
                          },
                          "bodyText": "Thanks, I just checked Terminator. It looks like exactly what I need!",
                          "url": "https://github.com/idaholab/moose/discussions/27404#discussioncomment-9153739",
                          "updatedAt": "2024-04-18T11:05:23Z",
                          "publishedAt": "2024-04-18T11:05:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}