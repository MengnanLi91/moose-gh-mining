{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMC0wOS0xN1QwOToyNTo1Ni0wNTowMM1Mrg=="
    },
    "edges": [
      {
        "node": {
          "title": "Peacock - window size issue",
          "author": {
            "login": "xingz711"
          },
          "bodyText": "Hello,\nNot sure if this is only happening to my laptop. But I couldn't see the entire Peacock interface. Somehow, the buttons at the bottom are not shown completely.  Tried to reduce the window size with the mouse - didn't work.\nAny solutions here?\nThanks,\nXing",
          "url": "https://github.com/idaholab/moose/discussions/16097",
          "updatedAt": "2022-09-14T09:17:47Z",
          "publishedAt": "2020-11-06T00:25:01Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Yes, the left side panel has a minimum height this is a known issue :-(\nIt would be great if a scroll bar could be added to it. \ud83e\udd7a ... @aeslaughter :-)\nI took a stab at it, but I'm too unfamiliar with PyQt and, quite honestly I thought we could just sit that problem out, as display resolutions get larger and larger. But it looks like we can't.",
                  "url": "https://github.com/idaholab/moose/discussions/16097#discussioncomment-122874",
                  "updatedAt": "2022-09-14T09:17:47Z",
                  "publishedAt": "2020-11-06T00:34:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "I am hopeful for some major Peacock improvements this year, but don't know if that will happen for sure.",
                  "url": "https://github.com/idaholab/moose/discussions/16097#discussioncomment-122905",
                  "updatedAt": "2022-09-14T09:18:03Z",
                  "publishedAt": "2020-11-06T01:48:00Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "xingz711"
                  },
                  "bodyText": "Ha, thanks for the clarification. Guess I have to work with this for the moment.",
                  "url": "https://github.com/idaholab/moose/discussions/16097#discussioncomment-122932",
                  "updatedAt": "2022-09-14T09:18:25Z",
                  "publishedAt": "2020-11-06T03:32:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to express log ?",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello everyone,\nI have a small question.\nIn the expression pf my material energy, there is log.\n\nHow to write it?",
          "url": "https://github.com/idaholab/moose/discussions/16087",
          "updatedAt": "2022-10-25T02:24:59Z",
          "publishedAt": "2020-11-05T13:06:27Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Are you asking about log in C++ (that'd be std::log(_u[_qp]) or whatever c is), or parsed materials (which would be log(c))?",
                  "url": "https://github.com/idaholab/moose/discussions/16087#discussioncomment-122640",
                  "updatedAt": "2022-10-25T02:25:05Z",
                  "publishedAt": "2020-11-05T19:49:17Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "or rather\n((1.0 - _u[_qp]) * std::log(1.0 - _u[_qp]) + _u[_qp] * std::log(_u[_qp]))```\n\nand\n((1 - c)  * log(1 - c) + c * log(c))",
                          "url": "https://github.com/idaholab/moose/discussions/16087#discussioncomment-122642",
                          "updatedAt": "2022-10-25T02:25:05Z",
                          "publishedAt": "2020-11-05T19:49:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "You are so kind! Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/16087#discussioncomment-122872",
                          "updatedAt": "2022-10-25T02:25:07Z",
                          "publishedAt": "2020-11-06T00:28:57Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Constraints formulas in the PF module",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello,\nas you know, there are two constraints formulas in PF:\neta1 + eta2 +eta3 =1; and eta1 * c1 + eta2 * c2 +eta3 * c3 =c.\nIn ICs, I write some codes let eta3 equals 1- eta1 - eta2. And c equals ... in the whole area. And there doesn't need any constraint in Kernels.\nRight?",
          "url": "https://github.com/idaholab/moose/discussions/16085",
          "updatedAt": "2022-07-26T13:11:32Z",
          "publishedAt": "2020-11-05T08:10:47Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Does \"PF\" mean \"PhaseField\" or \"PorousFlow\"?",
                  "url": "https://github.com/idaholab/moose/discussions/16085#discussioncomment-121749",
                  "updatedAt": "2022-07-26T13:12:18Z",
                  "publishedAt": "2020-11-05T08:35:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Sorry.\nThat's phase field.",
                          "url": "https://github.com/idaholab/moose/discussions/16085#discussioncomment-121784",
                          "updatedAt": "2022-07-26T13:12:24Z",
                          "publishedAt": "2020-11-05T09:26:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "LiuPengPeter"
                  },
                  "bodyText": "I just wrote codes about eta1 * c1 + eta2 * c2 +eta3 * c3 =c, and there is no error when making.\nBut I am afraid there will be problems. Could anyone help me check the expressions of computeQpJacobian and computeQpOffDiagJacobian?\nThanks a lot!\nReal\nConstraintConcentration::computeQpResidual()\n{\nReal sum = 0.0;\nfor (unsigned int i = 0; i < _cs_num; ++i)\nsum += (* _cs[i])[_qp] * (* _etas[i])[_qp];\nreturn _test[_i][_qp] * (sum - _u[_qp]);\n}\nReal\nConstraintConcentration::computeQpJacobian()\n{\nreturn -_test[_i][_qp] * _phi[_j][_qp];\n}\nReal\nConstraintConcentration::computeQpOffDiagJacobian(unsigned int jvar)\n{\nauto cjvar = mapJvarToCvar(jvar, _cs_map);\nif (cjvar >= 0)\nreturn _test[_i][_qp] * (* _etas[cjvar])[_qp] * _phi[_j][_qp];\nauto etavar = mapJvarToCvar(jvar, _etas_map);\nif (etavar >= 0)\n{\nreturn _test[_i][_qp] * (* _cs[etavar])[_qp] * _phi[_j][_qp];\n}\nreturn 0.0;\n}",
                  "url": "https://github.com/idaholab/moose/discussions/16085#discussioncomment-122352",
                  "updatedAt": "2022-07-26T13:12:27Z",
                  "publishedAt": "2020-11-05T14:40:34Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "That looks correct if you are applying that kernel to c. Correct use of mapJvarToCvar. Nice.",
                          "url": "https://github.com/idaholab/moose/discussions/16085#discussioncomment-122397",
                          "updatedAt": "2022-07-26T13:12:33Z",
                          "publishedAt": "2020-11-05T15:44:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thanks for your encouragement!",
                          "url": "https://github.com/idaholab/moose/discussions/16085#discussioncomment-122871",
                          "updatedAt": "2022-07-26T13:12:34Z",
                          "publishedAt": "2020-11-06T00:27:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "ERROR: Material property is not defined on block 0",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello guys,\n*** ERROR ***\nMaterial property 'v_Coefficient', requested by 'StudyCoefficientGradientV' is not defined on block 0\ncode.zip\nI checked my exercise codes for many times  and still couldn't solve the problem... Could anyone help?",
          "url": "https://github.com/idaholab/moose/discussions/16079",
          "updatedAt": "2022-08-19T07:20:04Z",
          "publishedAt": "2020-11-05T00:43:20Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "This is probably not due to your C code.  It is probably due to your input file.  Your input file needs a Material block that will produce a MaterialProperty called \"v_Coefficient\", since your \"StudyCoefficientGradientV\" Material needs that MaterialProperty.",
                  "url": "https://github.com/idaholab/moose/discussions/16079#discussioncomment-121616",
                  "updatedAt": "2022-08-19T07:20:04Z",
                  "publishedAt": "2020-11-05T01:10:57Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "My .i file is also in the zip.\n`[Kernels]\n[./DiffusionU]\ntype = Diffusion\nvariable = u\n[../]\n[./StudyCoefficientGradientV]\ntype = StudyCoefficientGradientV\nvariable = u\nD = v_Coefficient\n[../]\n`[Materials]\n[./StudyMaterialCoefficientGradientV]\ntype = StudyMaterialCoefficientGradientV\nD = v_Coefficient\nv = v\n[../]\nIs there something wrong?",
                          "url": "https://github.com/idaholab/moose/discussions/16079#discussioncomment-121618",
                          "updatedAt": "2022-08-19T07:20:14Z",
                          "publishedAt": "2020-11-05T01:17:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "The problem is in your StudyMaterialCoefficientGradientV material. Take a look at this bit:\n   _v_coefficient_name(getParam<MaterialPropertyName>(\"D\")),\n   _v_coefficient(declareProperty<RealGradient>(\"_v_coefficient_name\"))\n\nYou are declaring a property called _v_coefficient_name (that actual string), not whatever you enter in the parameter D in your input file. Simply remove the \"\" in the second line and it should work as you are now declaring a property with the name given in the input file.",
                  "url": "https://github.com/idaholab/moose/discussions/16079#discussioncomment-121696",
                  "updatedAt": "2022-08-19T09:08:53Z",
                  "publishedAt": "2020-11-05T05:45:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thanks a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/16079#discussioncomment-121705",
                          "updatedAt": "2022-08-19T09:08:55Z",
                          "publishedAt": "2020-11-05T06:29:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "@cpgr saves the day again!",
                          "url": "https://github.com/idaholab/moose/discussions/16079#discussioncomment-121731",
                          "updatedAt": "2022-08-19T09:09:20Z",
                          "publishedAt": "2020-11-05T07:44:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Random error NIV2_FLOPS",
          "author": {
            "login": "srinath-chakravarthy"
          },
          "bodyText": "Hi all,\nI am having some trouble with simulations randomly stopping due to NIV2_FLOPS error.\nThe problem is a contact problem with AD and i am using superlu_dist with Newton solver. After a random period of time, the simulation aborts with \"problem with NIV2_FLOPS message  -5165450.0000000000                0  -5165450.0000000000\". In the current avatar i have used 16 cores and there does not seem to be any memory issues for this problem.\nAny help will be appreciated.\nCheers\nSrinath",
          "url": "https://github.com/idaholab/moose/discussions/15910",
          "updatedAt": "2023-05-29T17:48:15Z",
          "publishedAt": "2020-10-07T18:54:48Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "I'm very happy to see you using this forum @srinath-chakravarthy. It is going to take me a little bit to get my workflow setup so that I see discussions quickly. Right now you have to watch the whole repository to get new discussions posts notifications, and if I watch the whole repo I'm going to have to setup a filter because I don't care about every new issue and PR that gets opened.\nI have never seen this error before. Some googling shows some hits for other FEM codes (I saw Elmer) and also a PETSc post. Most of these seem to be concerned with MUMPS, although apparently they submitted a fix for that. There was also this PETSc thread. It's unclear to me from the message whether this is a CPU or memory error. What is the \"current avatar\"?\nPerhaps @fdkong has some ideas about this",
                  "url": "https://github.com/idaholab/moose/discussions/15910#discussioncomment-93003",
                  "updatedAt": "2023-05-29T17:48:16Z",
                  "publishedAt": "2020-10-07T23:53:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fdkong"
                  },
                  "bodyText": "What is the problem size? If the problem is large, it would be an out of integer error.",
                  "url": "https://github.com/idaholab/moose/discussions/15910#discussioncomment-93011",
                  "updatedAt": "2023-07-17T11:28:55Z",
                  "publishedAt": "2020-10-08T00:18:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "srinath-chakravarthy"
                  },
                  "bodyText": "Alex and fande,\nProblem size is relatively small, while I'm not in front of my computer\nnow,  it has about 3000 quad elements, 3600 nodes with 5 dof per node. I\nchecked mem usage and it is small 126 MB for each processor with replicated\nmesh. I have not faced this issue before... I'm more than happy to share my\nrepo with you as well as the input file.\n\nAlex, I also Googled before posting and found the same things you did.\n\nCheers\nSrinath\nP.S: I just thought of giving discussions a try since it is being touted as\nan alternative to the moose users forum. I am not sure about  workflow on\nmy side either ...\n\u2026\nOn Wed, Oct 7, 2020, 8:18 PM Fande Kong ***@***.***> wrote:\n What is the problem size? If the problem is large, it would be an out of\n integer error.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#15910 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/ACYC6LJ6YQAPORTBP5OJGC3SJUAMLANCNFSM4SHY4LEA>\n .",
                  "url": "https://github.com/idaholab/moose/discussions/15910#discussioncomment-93015",
                  "updatedAt": "2023-07-17T11:28:54Z",
                  "publishedAt": "2020-10-08T00:24:16Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "It is interesting. Are you using a direct solver, eg, LU?\nI was wondering what will happen if you try -pc_factor_mat_solver_type mumps and  -pc_factor_mat_solver_type superlu_dist, respectively? The reason is that we want to know where the error message comes from.\nIf you could reproduce this using a moose example, it would be a big help.",
                          "url": "https://github.com/idaholab/moose/discussions/15910#discussioncomment-93017",
                          "updatedAt": "2023-07-17T11:28:55Z",
                          "publishedAt": "2020-10-08T00:32:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "I am marking this as the answer as the discussion seems to be stale. @srinath-chakravarthy If this is not the case, you can un-mark and continue the discussion.",
                          "url": "https://github.com/idaholab/moose/discussions/15910#discussioncomment-121603",
                          "updatedAt": "2023-07-17T11:28:55Z",
                          "publishedAt": "2020-11-05T00:21:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "He is using superlu_dist\n\u2026\nOn Wed, Oct 7, 2020 at 5:32 PM Fande Kong ***@***.***> wrote:\n It is interesting. Are you using a direct solver, eg, LU?\n\n I was wondering what will happen if you try -pc_factor_mat_solver_type\n mumps and -pc_factor_mat_solver_type superlu_dist, respectively? The\n reason is that we want to know where the error message comes from.\n\n If you could reproduce this using a moose example, it would be a big help.\n\n \u2014\n You are receiving this because you commented.\n Reply to this email directly, view it on GitHub\n <#15910 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/ACOGA4CB7UYTVKZ5HMWO67TSJUCBZANCNFSM4SHY4LEA>\n .",
                  "url": "https://github.com/idaholab/moose/discussions/15910#discussioncomment-93025",
                  "updatedAt": "2023-07-17T11:29:04Z",
                  "publishedAt": "2020-10-08T01:09:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "I submitted a Pull Request: who should/could review it?",
          "author": {
            "login": "WilkAndy"
          },
          "bodyText": "In the distant past, it seemed like @permcody often assigned people to review PRs.   That doesn't often happen these days (at least for my PRs).  I'm never sure who to ask, especially as occasionally my PRs are huge (like the 16k lines #15698).  Often that means my PRs languish for a few days or weeks before they're reviewed.  (That also means they keep growing in size because i'm on a deadline to implement something and can't wait for the review, which is a viscous cycle.)\nCan we work out some sort of roster system (eg, @aeslaughter takes all PRs ending with \"1\", @loganharbour takes all PRs ending with \"2\", @andrsd takes all PRs ending with \"3\", @dschwen all those ending with \"4\", etc) or list of available people, or something?\na",
          "url": "https://github.com/idaholab/moose/discussions/16065",
          "updatedAt": "2023-03-17T20:23:38Z",
          "publishedAt": "2020-11-03T21:08:23Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "First step: Getting your PR to pass the tests ;-)",
                  "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-120700",
                  "updatedAt": "2023-03-17T20:23:38Z",
                  "publishedAt": "2020-11-03T21:12:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "I will second this, I generally won't look at something until the tests are passing.",
                          "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-120811",
                          "updatedAt": "2023-03-17T20:24:06Z",
                          "publishedAt": "2020-11-04T00:14:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "I'm curious about a viscous cycle.\nI think that @aeslaughter has been doing a lot of assigning in the last week. @loganharbour has also done some good assignment work in the past. I don't know if a numbering system would work well.\nWho should/could review it? I'm of the general opinion that the PR author probably knows the best person for that job. You should always feel free to mention someone who you think is a good candidate for review. If you ping a MOOSE team member, that person will at a minimum make sure someone gets assigned to the job. I think @WilkAndy would also be a candidate to join the change-control-board which would give you the ability to assign.\nI'm also hopeful that in the not too distant future we as a MOOSE team have a more established/documented practice for rapidly assigning PRs. I'm bad at that task myself.",
                  "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-120703",
                  "updatedAt": "2023-03-17T20:24:06Z",
                  "publishedAt": "2020-11-03T21:18:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "I think @WilkAndy would also be a candidate to join the change-control-board which would give you the ability to assign.\n\nI agree. The new process for joining the CCB requires the candidate to review 5 PRs with supervision from a current CCB member. We just need to note these 5 items and when they are all complete you can be upgraded.",
                          "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-120815",
                          "updatedAt": "2023-03-17T20:24:21Z",
                          "publishedAt": "2020-11-04T00:16:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "Can I join CCB? How do we apply this?",
                          "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-120827",
                          "updatedAt": "2023-03-17T20:24:22Z",
                          "publishedAt": "2020-11-04T00:50:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "YaqiWang"
                  },
                  "bodyText": "I'd say the assigned reviewer should be another person in your institute. Reviewing should be part of the code development. Reviewing can be volunteering but cannot expected to be. The trade-off of being a moose module has to be considered carefully.",
                  "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-120742",
                  "updatedAt": "2023-03-17T20:24:29Z",
                  "publishedAt": "2020-11-03T21:55:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "permcody"
                  },
                  "bodyText": "Yeah, back when I was acting as the unofficial integrator I really tried to keep things moving. It wasn't cheap though. I estimate I spent a third to half of my time watching, reviewing, and assigning PRs, and helping CIVET stay running due to transient failures. We almost need a hierarchy like the Linux kernel has. Maybe I need to assign lieutenants and integrators. Even without the hierarchy, our project really could use a dedicated integrator resource. I feel like @loganharbour may be a good candidate for that role as he has the discipline and eye to stick with it. Maybe when he finishes up his PhD. I'm open to other suggestions though. For now as we continue to settle, feel free to tag devs for assistance.",
                  "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-121319",
                  "updatedAt": "2023-03-17T20:24:29Z",
                  "publishedAt": "2020-11-04T15:25:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Is it unreasonable to think that this could actually be a responsibility for someone like new Jason? @loganharbour does do a great job with these things, but he's also extremely proficient at writing framework and application code and I would love to see him be able to dedicate all his time to such tasks. I feel the same way about all our current MOOSE team members (and I felt the same way when @permcody was doing most of the reviewing). It's sad to lose framework developers to maintenance, if it can be potentially avoided.",
                          "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-121346",
                          "updatedAt": "2023-03-17T20:24:30Z",
                          "publishedAt": "2020-11-04T16:21:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Whatever happens, and maybe no scheme will be formalised, we should strive to make reviewing as prestigious and respectable as writing code, if not more so.  Already it is quite difficult to contribute to MOOSE modules, in my opinion, because we require tests and documentation (which is good and necessary, but burdensome), and the interfaces to MOOSE objects are becoming increasingly complex (again good, but burdensome), and so much has been written already (while writing a kernel for the diffusion equation is nice-and-easy in MOOSE, no one is doing that any more - i suspect many contributions are much more convoluted - mine certainly are).  Reviewing helps shift this burden from people like me, because you help me with aspects of C++, and you explain MOOSE interfaces and tell me that such-and-such has already been done in other areas of MOOSE, and you encourage new developers by helping with git/QA/etc teething issues.  Reviewing allows the MOOSE team to keep a birds-eye view on how the code is growing, allowing you to eliminate duplication, and to promote cross-fertilisation between different parts of the code, and it's good for the framework developers to understand what is needed by the modules.  So, reviewing is an important part of overall architecture and design, and should be done mostly by the core MOOSE team, in my opinion.\nEvery day or week i get asked to a review a paper, and mostly the papers are rubbish and my heart sinks at the thought.  Let's try to make MOOSE reviewing a more positive experience!",
                  "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-121545",
                  "updatedAt": "2023-03-17T20:25:00Z",
                  "publishedAt": "2020-11-04T21:54:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "I have to admit that changes in MOOSE can trigger changes in modules and applications, which application developers often do not want because they typically do not add new capabilities and require non-trivial efforts. This is the reason I pushed MOOSE to remove deprecation/legacy messages in applications caused by MOOSE changes. But that is not quite successful. If a large PR can be split into smaller PRs or well communicated with the reviewer in the design stage, the reviewing can be faster and not so costly. I think that this comes from a fact that high quality codes do not come free. MOOSE is trying to bring to a very high level SQ, which may not be needed by applications. One way is to move codes in modules as much as possible to your applications, then you can have less restrictive rules.",
                          "url": "https://github.com/idaholab/moose/discussions/16065#discussioncomment-121570",
                          "updatedAt": "2023-03-17T20:25:01Z",
                          "publishedAt": "2020-11-04T22:40:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "KKS Action?",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "Would it be possible to put together an Action for a KKS model much like the existing Conserved/Nonconserved phase field actions? Seems like it should be straightforward enough for a two phase system at least.\nI do see that a KKSAction was started in the phase field module, but it's basically empty at the moment.",
          "url": "https://github.com/idaholab/moose/discussions/15801",
          "updatedAt": "2022-07-12T03:27:09Z",
          "publishedAt": "2020-09-04T20:02:56Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jessecarterMOOSE"
                  },
                  "bodyText": "ping @dschwen",
                  "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-61759",
                  "updatedAt": "2022-07-12T03:27:05Z",
                  "publishedAt": "2020-09-04T20:03:22Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Pong!\nYeah, that would be a nice easy project for someone with time on their hands. Maybe one of our incoming new hires.",
                          "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-61791",
                          "updatedAt": "2022-07-12T03:27:05Z",
                          "publishedAt": "2020-09-04T22:10:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "It's quite amazing that this husk of an action was actually merged into our code base. I bet I had grand plans back then :-D",
                          "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-61792",
                          "updatedAt": "2022-07-12T03:27:05Z",
                          "publishedAt": "2020-09-04T22:11:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "@jessecarterMOOSE Are you able to mark as answered? I am not really sure who has the power?",
                  "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-61835",
                  "updatedAt": "2022-07-12T03:27:05Z",
                  "publishedAt": "2020-09-05T04:14:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jessecarterMOOSE"
                  },
                  "bodyText": "@dschwen  I asked because I do have time at the moment (thanks to all the working from home), and I could use it in my app. I guess I was trying to get a feel for whether it was possible or if there was some complication I wasn't seeing.",
                  "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-61958",
                  "updatedAt": "2022-07-12T03:27:05Z",
                  "publishedAt": "2020-09-05T16:21:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Did you ever take a stab at this?",
                          "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-119357",
                          "updatedAt": "2022-07-12T03:27:05Z",
                          "publishedAt": "2020-11-02T16:08:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Unfortunately no. I looked around the examples saw a few different variations, for instance when coupling in elastic energy, and just ended up confusing myself. I'm still interested provided I can wrap my head around it!",
                          "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-119396",
                          "updatedAt": "2022-07-12T03:27:05Z",
                          "publishedAt": "2020-11-02T16:54:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "anilkunwar"
                  },
                  "bodyText": "@jessecarterMOOSE : it is nice to know that KKSAction was originally envisioned for addressing the volume conservation and non-conservation in the multi-phase field model (KKS method).",
                  "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-120833",
                  "updatedAt": "2022-07-12T03:27:34Z",
                  "publishedAt": "2020-11-04T01:15:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Which makes it all the more daunting as a task!",
                          "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-121127",
                          "updatedAt": "2022-07-12T03:27:36Z",
                          "publishedAt": "2020-11-04T12:39:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jessecarterMOOSE"
                  },
                  "bodyText": "@dschwen Do you envision a KKS action as being a single action rather than Conserved/Nonconserved? And as far as I can tell, it doesn't need as many formulations (direct, forward split, reverse split), at least not in practice.",
                  "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-121128",
                  "updatedAt": "2022-07-12T03:27:43Z",
                  "publishedAt": "2020-11-04T12:41:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "single action is fine, as the conserved variables are intertwined with the nonconserved variables.",
                          "url": "https://github.com/idaholab/moose/discussions/15801#discussioncomment-121318",
                          "updatedAt": "2022-07-12T03:27:43Z",
                          "publishedAt": "2020-11-04T15:18:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to get all these MOOSE discussions sent to my email inbox?",
          "author": {
            "login": "WilkAndy"
          },
          "bodyText": "I'm rather lazy because i don't spend much time reading websites such as these.  I want everything to appear in one place - my email inbox.   How can i get github to send all these discussions to my email inbox?\na",
          "url": "https://github.com/idaholab/moose/discussions/16050",
          "updatedAt": "2020-11-04T01:41:57Z",
          "publishedAt": "2020-11-02T23:26:10Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "I believe you need to \"subscribe\" to the repository to receive all notifications. Then I recommend you set up some email filters, unless you like to read all our issue and PR discussions as well...",
                  "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-119694",
                  "updatedAt": "2020-11-02T23:29:47Z",
                  "publishedAt": "2020-11-02T23:29:47Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "To future readers: this works, but as @dschwen says - you'll get a deluge of all PRs, issues, etc, which might be rather annoying.  Then you have to somehow filter all that stuff out and just leave the \"discussions\".",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-119819",
                          "updatedAt": "2020-11-03T06:55:45Z",
                          "publishedAt": "2020-11-03T06:55:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "As @cticenhour says below, just look at the top of the main MOOSE page, https://github.com/idaholab/moose , and you'll see a \"Watch\" button - click it !",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-119821",
                          "updatedAt": "2020-11-03T06:57:37Z",
                          "publishedAt": "2020-11-03T06:57:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "anilkunwar"
                          },
                          "bodyText": "Thank you Daniel for the answer.",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-120832",
                          "updatedAt": "2020-11-04T01:11:49Z",
                          "publishedAt": "2020-11-04T01:11:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "@WilkAndy You can actually do that with outlook as well:\n\nDepending on the app and version you are using for outlook your mileage may vary.",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-120839",
                          "updatedAt": "2020-11-04T01:41:57Z",
                          "publishedAt": "2020-11-04T01:41:57Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "OK, i will attempt that.",
                  "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-119699",
                  "updatedAt": "2020-11-02T23:33:49Z",
                  "publishedAt": "2020-11-02T23:33:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Here is a Google AppScripts function I wrote to tag GitHub Discussions notifications with a separate label in GMail\nfunction processInbox() {\n  // loop over the newest message threads\n  var threads = GmailApp.search(\"newer_than:1h\");\n  for (var i = 0; i < threads.length; i++) {\n    // get all messages in a given thread\n    var messages = threads[i].getMessages();\n    for (var j = 0; j < messages.length; j++) {\n      var message = messages[j];\n      var body = message.getRawContent();\n      // if any of the messages in the thread contains the message id tag, label the entire thread as a discussion\n      if (body.indexOf(\"Message-ID: <idaholab/moose/repo-discussions/\") > -1) {\n        threads[i].addLabel(GmailApp.getUserLabelByName(\"GitHub/MOOSE/Discussions\"));\n        threads[i].removeLabel(GmailApp.getUserLabelByName(\"GitHub/MOOSE\"));\n        threads[i].moveToArchive();\n        break;\n      }\n    }\n  }\n}\n\nI'm running that on a timer trigger every 5mins.\nNote that I automatically sort all GitHub MOOSE repo emails into the label GitHub/MOOSE with a regular GMail filter. The script above replaces that label with GitHub/MOOSE/Discussions if a certain header is detected.",
                  "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-119701",
                  "updatedAt": "2020-11-02T23:37:05Z",
                  "publishedAt": "2020-11-02T23:37:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Holy Dooley!!  I have no idea how i'd do something similar with MS Outlook, which is what my organisation uses for email.   I haven't yet figured out how to subscribe to all Discussions.",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-119707",
                          "updatedAt": "2020-11-02T23:50:39Z",
                          "publishedAt": "2020-11-02T23:50:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "To subscribe, you just need to \"Watch\" the repo. Look for this across from the repo title near the top right of the page. As far as filtering, I have set up automated gmail filters using the UI to label regular GitHub repo notifications and when I am mentioned, but nothing as fancy as @dschwen, where he's reading the meta-data. That's nice!",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-119709",
                          "updatedAt": "2020-11-02T23:53:47Z",
                          "publishedAt": "2020-11-02T23:53:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tophmatthews"
                          },
                          "bodyText": "So somewhere in this script is how I can figure out to bypass @dschwen's filters for my PR reviews? interesting...",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-120638",
                          "updatedAt": "2020-11-03T19:58:45Z",
                          "publishedAt": "2020-11-03T19:58:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Yeah, since the filter script does not (yet) discriminate between headers and body you could try adding the string Message-ID: <idaholab/moose/repo-discussions/ in your PR comments :-D",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-120640",
                          "updatedAt": "2020-11-03T20:06:11Z",
                          "publishedAt": "2020-11-03T20:06:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Oh em gee. Just watched the repo and the deluge is real. @dschwen do you have anything else that helps you discriminate github prs/issues that you're a participant in vs. all the others that you are not participating in? I feel like a turtle about to go back into his shell",
                          "url": "https://github.com/idaholab/moose/discussions/16050#discussioncomment-120659",
                          "updatedAt": "2020-11-03T20:39:01Z",
                          "publishedAt": "2020-11-03T20:38:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Building MOOSE without Nvidia Library",
          "author": {
            "login": "moravveji"
          },
          "bodyText": "Dear MOOSE maintainers\nI am trying to build MOOSE on our Tier-1 machine (Intel Broadwell and SkyLake) for a group of users, using foss/2018a toolchain. There are no nvidia libraries available on the compute nodes, since there need be no graphics there. However, the nvidia libraries are available on the login nodes. Also, the architecture of our login nodes and compute nodes are different, hence MOOSE must be built on the compute nodes.\nNow, here is the situation:\n\n\nit is possible to build MOOSE on the login nodes (having nvidia libs) and run them on the broadwell nodes; but such binaries run suboptimally on Skylake nodes. Hence, it seems that the nvidia libraries are not used at runtime, and it is possible to ignore them\n\n\nit is not possible to compile MOOSE on the compute nodes, due to the error below:\n\n\n  CXX      apps/version.o\n  CXX      utilities/src/metaphysicl_version.lo\n  CXXLD    libmetaphysicl.la\n/dirApps/binutils/2.28-GCCcore-6.4.0/bin/ld.gold: error: cannot f\nind -lnvidia-ml\ncollect2: error: ld returned 1 exit status\nmake[4]: *** [libmetaphysicl.la] Error 1\nmake[4]: Leaving directory `/myData/work/MOOSE/moo\nse/libmesh/build/contrib/metaphysicl/src'\nmake[3]: *** [all] Error 2\nmake[3]: Leaving directory `/myData/work/MOOSE/moo\nse/libmesh/build/contrib/metaphysicl/src'\nmake[2]: *** [all-recursive] Error 1\nmake[2]: Leaving directory `/myData/work/MOOSE/moo\nse/libmesh/build/contrib/metaphysicl'\nmake[1]: *** [all-recursive] Error 1\nmake[1]: Leaving directory `/myData/work/MOOSE/moo\nse/libmesh/build/contrib'\nmake: *** [all-recursive] Error 1\nNow my questions:\n\nHow can I get around the nvidia dependency?\nHow do I (re)set the LDFLAGS and LIBS env. vars. when executing the update_and_rebuild_libmesh.sh script?\nI also would like to add -march=native flag too, if not already introduced by you\nDo you need more inputs from my side?\n\nI have attached the full logs and the bash script which I use building MOOSE.\nI thank you in advance for your support.\nRegards\nEhsan\nmoose.log.tar.gz",
          "url": "https://github.com/idaholab/moose/discussions/15827",
          "updatedAt": "2023-01-23T06:25:07Z",
          "publishedAt": "2020-09-21T14:33:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "Hi @moravveji,\nThank you for your patience as we get through a backlog of issues, tickets, and support requests! I have moved your question to our GitHub Discussions forum, where we prefer users post questions and support requests before the creation of issues/bug reports. Because your question is related to build dependencies and platform-specific questions, I am tagging @milljm to provide some input on your problem. He is the MOOSE team member in charge of our build system. Let me know if you have more questions!\nThanks,\nCasey",
                  "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-91809",
                  "updatedAt": "2023-02-15T06:48:21Z",
                  "publishedAt": "2020-10-06T22:13:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "moravveji"
                          },
                          "bodyText": "Thanks Casey. I stay tuned.",
                          "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-92106",
                          "updatedAt": "2023-01-23T06:25:13Z",
                          "publishedAt": "2020-10-07T09:01:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "Since this has sat a while, I'll take a crack at answering some of your questions.\n\n\nI am not sure what nVidia dependency you are referring to - MOOSE doesn't strictly require particular libraries and architectures. You may be seeing a check for OpenCL that MetaPhysicL performs....in which case (if you don't need openCL support), I would try adding --disable-opencl to the update_and_rebuild_libmesh.sh script when libMesh is configured (look at lines 151 - 162 in the current version of the script)\n\n\nLDFLAGS and LIBS should be able to be set directly on the command line. (export LDFLAGS=[flags] and export LIBS=[flags]). LibMesh configure should pick them up. @roystgnr can comment more on this if I am wrong.\n\n\nAdding --enable-march to the configure lines in the libmesh script (as mentioned above) allows libmesh to determine the correct -march flag for the system, if I'm interpreting libmesh configure correctly. Try this first. If this doesn't work, you should be able to add -march=native to CFLAGS and/or CXXFLAGS for your system.\n\n\nHopefully this helps!",
                  "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-114834",
                  "updatedAt": "2023-01-23T06:25:13Z",
                  "publishedAt": "2020-10-28T22:31:20Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "moravveji"
                  },
                  "bodyText": "Thanks a lot @cticenhour for the tips. I just incorporated them all, and MOOSE builds on our SkyLake machines like a charm. No more missing Nvidia library fuss ...\nNext step is testing the build and performance by our users.\nBy the way, the two very attractive options that you mentioned (--enable-march and --disable-opencl) were not immediately fetchable by myself. Can you please point me out to the inventory of options that I can still use? Maybe I can still optimize the build further.",
                  "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-115547",
                  "updatedAt": "2023-01-23T06:25:13Z",
                  "publishedAt": "2020-10-29T12:42:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Glad it's working well! Most of these options can be found by navigating to your libmesh directory, and performing the command ./configure -h in your Terminal. Using this list, looks like you have access to --with-gcc-arch=<arch> in order to set a particular march configuration instead of guessing, which may give you some more optimization. I don't see --disable-opencl in this list, but it is a MetaPhysicL configure option, so perhaps it's being passed through by the libmesh configure script (not sure). I found that option by searching in the MetaPhysicL repository, located at (https://github.com/roystgnr/MetaPhysicL). Specifically the ax_check_cl.m4 file used as a configure file for this check in that code.",
                          "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-115743",
                          "updatedAt": "2023-01-23T06:25:13Z",
                          "publishedAt": "2020-10-29T14:41:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "I don't see --disable-opencl in this list, but it is a MetaPhysicL configure option, so perhaps it's being passed through by the libmesh configure script (not sure).\n\nThat's correct.  MetaPhysicL allows an optional build with VexCL, and tests for OpenCL to see if this is possible.  libMesh doesn't have anything to do (directly) with either, but does pass any configure arguments along to its subpackages.\nTrying to configure on a different system than you build on is pretty much never going to be supported, I'm afraid - we'd have to turn off all our autodetection to make that safe.  And that \"-lnvidia-ml\" must getting inserted by a library on an Nvidia-possessing system here; ax_check_cl.m4 only tries out -lOpenCL, -lCL, and -lclparser, not any library with a vendor-specific name.",
                          "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-119322",
                          "updatedAt": "2023-01-23T06:25:29Z",
                          "publishedAt": "2020-11-02T15:35:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "moravveji"
                          },
                          "bodyText": "@roystgnr : and still, somehow magically, the unwanted libnvidia-ml is asked for, as I had demonstrated in the original ticket.\nBut, with --disable-opencl life is happy again.\nSo, thank you guys.",
                          "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-120247",
                          "updatedAt": "2023-01-23T06:25:29Z",
                          "publishedAt": "2020-11-03T12:49:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "moravveji"
                          },
                          "bodyText": "This ticket maybe closed now.",
                          "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-120248",
                          "updatedAt": "2023-01-23T06:25:40Z",
                          "publishedAt": "2020-11-03T12:50:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "@moravveji This new discussion format never truly closes like a regular GitHub issue, since it is more like a forum. I selected my answer above as the answer that solved your issue, and that is all we need to do.",
                          "url": "https://github.com/idaholab/moose/discussions/15827#discussioncomment-120420",
                          "updatedAt": "2023-01-23T06:25:41Z",
                          "publishedAt": "2020-11-03T15:18:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "ignore auxvariables in exodiff?",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "Hi -\nIs it possible to have the testharness or exodiff only look at differences in nonlinear variables and ignore auxvariables or even ignore the fact that auxvariables might be missing that are in the gold file? Ideally I'd like to still have the auxvariables be in the file for analysis.",
          "url": "https://github.com/idaholab/moose/discussions/15821",
          "updatedAt": "2024-02-19T13:14:33Z",
          "publishedAt": "2020-09-15T18:57:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Yes, this is possible using a custom comparison file which can be generated. The file can be created with exodiff and specified in the tests specification with the 'custom_cmp' parameter. I don't know how to make that file, but perhaps @bwspenc @dschwen could help.\nI usually prefer to just remove the variables from the output, there is a 'hide' option that you can use within the Outputs block.\n[Outputs]\n  [out]\n    type = Exodus\n    hide = 'aux0 aux1'\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/15821#discussioncomment-80428",
                  "updatedAt": "2024-02-19T13:14:33Z",
                  "publishedAt": "2020-09-17T14:25:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}