{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMC0xMi0wOFQwOTo0OTozOS0wNjowMM2jnQ=="
    },
    "edges": [
      {
        "node": {
          "title": "Remote Access Firefox SOCKS proxy",
          "author": {
            "login": "aprilnovak"
          },
          "bodyText": "Hi all,\nI'm trying to get my remote access set up on my new computer (macOS 10.15.7), but am running into some difficulties actually accessing hpcgitlab.hpc.inl.gov. I can successfully ssh to hpclogin.inl.gov, but the remote access instructions on the MOOSE website don't work for me - I cannot get to hpclogin.hpc.inl.gov through Firefox 83.0. I also tried Safari 14.0 and had no luck.\nThe strange thing is that I have this proxy set up just fine on another computer (macOS 10.14.6), and I'm just straight copying what I did in Firefox's network settings to my new computer. I tried adding no proxy for google.com, and I can get through to it just fine - so it seems that something about hpclogin.hpc.inl.gov doesn't work for me.\nThis may be an issue with Firefox or Mac, but I just wanted to ask the question here in case any other Mac users have this problem? Am I missing a factor of hpc somewhere (I vaguely remember something in the past having to do with different website URLs for external vs. internal users)? Is there some permissions I need to change in macOS 10.15.7 that I didn't need before?\nThanks,\n-April",
          "url": "https://github.com/idaholab/moose/discussions/16445",
          "updatedAt": "2020-12-10T00:28:05Z",
          "publishedAt": "2020-12-09T23:46:03Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Crazy timing! I'm actually changing some of this right now. Take a look at #16446.\nIf you have the current SSH config listed within the instructions, and have a blanket proxy (all traffic to the SOCKS proxy)... it should work. Can you give the new setup a try?\nAdd the file here https://github.com/idaholab/moose/blob/4e88a478314032399feec8592e6837f7a6009f93/scripts/hpc_proxy.pac anywhere on your filesystem and add it as the \"automatic proxy configuration url\" in Firefox (file://some/path/to/hpc_proxy.pac).",
                  "url": "https://github.com/idaholab/moose/discussions/16445#discussioncomment-182695",
                  "updatedAt": "2020-12-10T00:01:15Z",
                  "publishedAt": "2020-12-10T00:01:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "Oh, I think I missed what you read some. You can't get to any resources within a browser. On first read, I took that as you could get to some resources but not all.\nThis leads me to believe that it's an issue with the SOCKS proxy as a whole, not how you're forwarding to it.",
                          "url": "https://github.com/idaholab/moose/discussions/16445#discussioncomment-182702",
                          "updatedAt": "2020-12-10T00:06:00Z",
                          "publishedAt": "2020-12-10T00:06:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aprilnovak"
                          },
                          "bodyText": "It is crazy timing!\nIf I did everything correctly, then unfortunately the new approach also doesn't work for me. The only apparent difference is that now Firefox hangs indefinitely on hpcgitlab.hpc.inl.gov, instead of just giving up right away :/",
                          "url": "https://github.com/idaholab/moose/discussions/16445#discussioncomment-182715",
                          "updatedAt": "2020-12-10T00:18:29Z",
                          "publishedAt": "2020-12-10T00:18:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "The only apparent difference is that now Firefox hangs indefinitely on hpcgitlab.hpc.inl.gov, instead of just giving up right away :/\n\nYeah, that's because with the new config if the proxy fails it'll try a direct connection (for people on INL VPN). Which means... something is definitely borked with the SOCKS proxy.\nAre you connecting to hpclogin with\nssh hpclogin\n\n?\nIf you're connecting using the FQDN (hpclogin.inl.gov), it won't setup the proxy.",
                          "url": "https://github.com/idaholab/moose/discussions/16445#discussioncomment-182722",
                          "updatedAt": "2020-12-10T00:22:25Z",
                          "publishedAt": "2020-12-10T00:22:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aprilnovak"
                          },
                          "bodyText": "That fixed it! I had copied over my bash script with a few aliases to make that ssh process shorter, so I didn't notice that what I was doing before (ssh novaapri@hpclogin.inl.gov) didn't gel with the current MOOSE access instructions. I guess I didn't expect that part to change.\nThanks, Logan!",
                          "url": "https://github.com/idaholab/moose/discussions/16445#discussioncomment-182728",
                          "updatedAt": "2020-12-10T00:27:51Z",
                          "publishedAt": "2020-12-10T00:27:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Unable to compile PETSc with Mumps",
          "author": {
            "login": "r-williams-2"
          },
          "bodyText": "Reposting this.\nI was recently updating PETSc using the update_and_rebuild_petsc.sh script. However, this failed at Mumps with the below error:\n\nIn addition, please find attached the configure.log file. It appears that the directory path for Mumps has not been created although I am not sure the reason for this. It should be noted that if I exclude mumps, PETSc compiles fine.\nThanks for your help.\nKind regards,\nRoss.",
          "url": "https://github.com/idaholab/moose/discussions/16441",
          "updatedAt": "2022-11-01T13:52:33Z",
          "publishedAt": "2020-12-09T22:00:59Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "@fdkong",
                  "url": "https://github.com/idaholab/moose/discussions/16441#discussioncomment-182309",
                  "updatedAt": "2022-11-01T13:52:47Z",
                  "publishedAt": "2020-12-09T22:31:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fdkong"
                  },
                  "bodyText": "New complied MUMPS conflict with Conda carried MUMPS. There are two options for you:\n\nuse conda to get all latest packages including PETSc and libMesh via   conda update --all\n\nor\n\ncreate a new environment without PETSc and libMesh in it. For example, conda create --name newmoose moose-mpich moose-tools. In this new environment, you can then use update_and_rebuild_petsc.sh . After you build PETSc, and you need to build libMesh.\n\nFor conda users, we suggest taking option 1.",
                  "url": "https://github.com/idaholab/moose/discussions/16441#discussioncomment-182626",
                  "updatedAt": "2022-11-01T13:52:47Z",
                  "publishedAt": "2020-12-09T23:40:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "r-williams-2"
                          },
                          "bodyText": "So anaconda automatically manages PETSc as well? I wasn't aware of that. Thanks for clarifying that.",
                          "url": "https://github.com/idaholab/moose/discussions/16441#discussioncomment-182664",
                          "updatedAt": "2022-11-01T13:52:49Z",
                          "publishedAt": "2020-12-09T23:51:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Yes, conda manages PETSc and libMesh and other dependent packages.",
                          "url": "https://github.com/idaholab/moose/discussions/16441#discussioncomment-182685",
                          "updatedAt": "2022-11-01T13:52:54Z",
                          "publishedAt": "2020-12-09T23:55:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "RealTensorValue in RotationMatrix",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "For a RealTensorValue type, do you fill in values moving left to right across rows (how arrays are usually done), or do you fill down each column?\nI ask because I'm looking at the rotation matrix from euler angles computed here. It looks like it is following the Z1X2Z3 convention as expected, but for instance the 2nd entry (row 1 column 2) isn't going in the 2nd entry for the variable, it's going in the 4th (index 3), which is where would expect column 1 row 2, unless it really does need to be filled in top to bottom. Or perhaps the function is just doing the transpose?",
          "url": "https://github.com/idaholab/moose/discussions/16140",
          "updatedAt": "2022-08-15T09:02:01Z",
          "publishedAt": "2020-11-10T15:01:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "@dschwen Do you know the answer to this?",
                  "url": "https://github.com/idaholab/moose/discussions/16140#discussioncomment-128459",
                  "updatedAt": "2022-08-15T09:02:01Z",
                  "publishedAt": "2020-11-13T04:25:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "@SudiptaBiswas worked with Euler angle rotations in her sintering work.",
                          "url": "https://github.com/idaholab/moose/discussions/16140#discussioncomment-128756",
                          "updatedAt": "2022-08-15T09:02:13Z",
                          "publishedAt": "2020-11-13T14:50:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "@SudiptaBiswas Just curious if you know the answer to this. It looks like the rotation matrix being built in https://github.com/idaholab/moose/blob/next/modules/tensor_mechanics/src/utils/RotationTensor.C is the transpose of what you would expect based on the vector indices being stored, assuming you enter in the values row-wise (index 0 is R11, index 1 is R12, etc). Depending on the application, the transpose may be what you want, but I just want to be clear what's going on. The Euler angles for a rotation matrix and its transpose will be different.",
                          "url": "https://github.com/idaholab/moose/discussions/16140#discussioncomment-138898",
                          "updatedAt": "2022-08-15T09:02:13Z",
                          "publishedAt": "2020-11-25T19:30:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jessecarterMOOSE"
                  },
                  "bodyText": "In case anybody finds this, I think the answer is clear and I just wasn't seeing it. As the documentation clearly stated, the Bunge convention is used for the Euler angles, meaning the angles are used to build the passive (sample-to-crystal) rotation matrix, so yes, the transpose of the matrix is computed and applied when using Euler angles.\nThe documentation has been updated a bit. See also #16341. I added some functionality such that one can apply a rotation matrix directly to the elasticity tensor.",
                  "url": "https://github.com/idaholab/moose/discussions/16140#discussioncomment-179132",
                  "updatedAt": "2022-08-15T09:02:19Z",
                  "publishedAt": "2020-12-09T14:57:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Compiling error - isysroot - pyhit",
          "author": {
            "login": "favinom"
          },
          "bodyText": "I am installing the latest moose, using manual install and I got\nBuilding and linking /Users/favinom/projects/moose/framework/../python/pyhit/hit.so...\ng++: error: unrecognized command line option '-iwithsysroot'; did you mean '-isysroot'?\ng++: error: unrecognized command line option '-iwithsysroot'; did you mean '-isysroot'?\nmake: *** [/Users/favinom/projects/moose/framework/../python/pyhit/hit.so] Error 1\nDoes anyone know how to fix this?",
          "url": "https://github.com/idaholab/moose/discussions/16415",
          "updatedAt": "2022-07-20T15:26:36Z",
          "publishedAt": "2020-12-08T09:27:22Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "I have also got problem with pyhit during installation on cluster.\nI had to install pyhit manually to fix it.\nAt which point of the installation procedure you get this error?\nWhat is your operating system?\nDid you install yourself compiler and mpich?",
                  "url": "https://github.com/idaholab/moose/discussions/16415#discussioncomment-163146",
                  "updatedAt": "2022-07-20T15:26:36Z",
                  "publishedAt": "2020-12-08T12:50:40Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "favinom"
                          },
                          "bodyText": "Ciao,\nI am getting this problem when I am in the test folder and try to compile.\nI am on osx, using gcc from hpc.sourceforge, mpich compiled myself",
                          "url": "https://github.com/idaholab/moose/discussions/16415#discussioncomment-163948",
                          "updatedAt": "2022-07-20T15:26:42Z",
                          "publishedAt": "2020-12-08T17:02:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Did this resolve the issue?",
                          "url": "https://github.com/idaholab/moose/discussions/16415#discussioncomment-172867",
                          "updatedAt": "2022-07-20T15:26:42Z",
                          "publishedAt": "2020-12-09T03:42:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "favinom"
                          },
                          "bodyText": "EDITED\nFIXED: read below\nThe error appears when the compiler does\ncd \"[]/moose/framework/contrib/hit\"\nand then\nmpicxx -std=c++11 -w -fPIC -lstdc++ -shared \n/Users/favinom/projects/real/moose/framework/contrib/hit/hit.cpp \n/Users/favinom/projects/real/moose/framework/contrib/hit/lex.cc \n/Users/favinom/projects/real/moose/framework/contrib/hit/parse.cc \n/Users/favinom/projects/real/moose/framework/contrib/hit/braceexpr.cc \n-L/System/Library/Frameworks/Python.framework/Versions/2.7/lib \n-iwithsysroot /System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 \n-iwithsysroot /System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 \n-undefined dynamic_lookup \n-o []/moose/framework/../python/pyhit/hit.so\nIt seems that -iwithsysroot is not an option of my mpicxx.\nActually, the only option that I see running \"mpicxx --help\" is\n--sysroot=\nbut if I try to run\nmpicxx -std=c++11 -w -fPIC -lstdc++ -shared \n/Users/favinom/projects/real/moose/framework/contrib/hit/hit.cpp \n/Users/favinom/projects/real/moose/framework/contrib/hit/lex.cc \n/Users/favinom/projects/real/moose/framework/contrib/hit/parse.cc \n/Users/favinom/projects/real/moose/framework/contrib/hit/braceexpr.cc \n-L/System/Library/Frameworks/Python.framework/Versions/2.7/lib \n--sysroot='/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7' \n-undefined dynamic_lookup \n-o []/moose/framework/../python/pyhit/hit.so\nsome inclusions fail. So I tried\nmpicxx -std=c++11 -w -fPIC -lstdc++ -shared \n/Users/favinom/projects/real/moose/framework/contrib/hit/hit.cpp \n/Users/favinom/projects/real/moose/framework/contrib/hit/lex.cc \n/Users/favinom/projects/real/moose/framework/contrib/hit/parse.cc \n/Users/favinom/projects/real/moose/framework/contrib/hit/braceexpr.cc \n-L/System/Library/Frameworks/Python.framework/Versions/2.7/lib \n-I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 \n-undefined dynamic_lookup \n-o []/moose/framework/../python/pyhit/hit.so\nand it compiled the library. I went back to the 'test' folder and proceeded to compile the rest.\nreplace [] with the correct folder in your system.",
                          "url": "https://github.com/idaholab/moose/discussions/16415#discussioncomment-174931",
                          "updatedAt": "2022-07-20T15:26:43Z",
                          "publishedAt": "2020-12-09T06:57:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Scaling issues",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello everyone,\nIn my phase field module, the value of material parameters are in different orders of magnitude. I try to scale variables and material parameters.\nI have some questions about scaling. For example:\n[Variables]\n  [./**eta**]\n    order = FIRST\n    family = LAGRANGE\n    **scaling= 1.0e5**\n  [../]\n\nDoes it means that the variable eta becomes \"eta*1.0e5\" in all of the process of simulation and return \"eta\" without \"1.0e5\"\nin the final result?\nThank you a lot!",
          "url": "https://github.com/idaholab/moose/discussions/16365",
          "updatedAt": "2022-10-25T02:25:32Z",
          "publishedAt": "2020-12-02T08:24:39Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "mangerij"
                  },
                  "bodyText": "It means the residual corresponding to eta is scaled by 1e5\n\nOn Dec 2, 2020 9:25 AM, LiuPengPeter <notifications@github.com> wrote:\n\n*Message sent from a system outside of UConn.*\n\n\nHello everyone,\n\nIn my phase field module, the value of material parameters are in different orders of magnitude. I try to scale variables and material parameters.\n\nI have some questions about scaling. For example:\n\n[Variables]\n  [./**eta**]\n    order = FIRST\n    family = LAGRANGE\n    **scaling= 1.0e5**\n  [../]\n\n\nDoes it means that the variable eta becomes \"eta*1.0e5\" in all of the process of simulation and return \"eta\" without \"1.0e5\"\nin the final result?\n\nThank you a lot!\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fidaholab%2Fmoose%2Fdiscussions%2F16365&data=04%7C01%7Cjohn.mangeri%40uconn.edu%7C6da9e03f3e5a4d0d383108d8969bc1de%7C17f1a87e2a254eaab9df9d439034b080%7C0%7C0%7C637424943015567475%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BIsZe37pe3AU8Ob4cvE6w0R%2FI1yxAETzdoG4AO%2F4PJs%3D&reserved=0>, or unsubscribe<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FABZ65FCGRJLXIJ2TMQEXO3TSSX2VVANCNFSM4UKEUDWA&data=04%7C01%7Cjohn.mangeri%40uconn.edu%7C6da9e03f3e5a4d0d383108d8969bc1de%7C17f1a87e2a254eaab9df9d439034b080%7C0%7C0%7C637424943015567475%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=QhAwSxIRu%2FgEMHvFgPMBibBOBq5RlEuZLS7Liuo8kUE%3D&reserved=0>.",
                  "url": "https://github.com/idaholab/moose/discussions/16365#discussioncomment-144614",
                  "updatedAt": "2022-10-25T02:25:56Z",
                  "publishedAt": "2020-12-02T08:46:25Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thanks for your help. Could you explain more details?\nIf there are R1, R2 and R3 whose variable is \"V\", and \"eta\" is just the coupled variable.\nR1 = V + eta^2 + eta\nR2 = partdiff{eta}{x}\nR3 = partdiff{V}{eta}\nI think that should be:\nR1*(1.0e5)^2 + R21.0e5 +R3(1/1.0e5).\nRight?",
                          "url": "https://github.com/idaholab/moose/discussions/16365#discussioncomment-144679",
                          "updatedAt": "2022-10-25T02:26:08Z",
                          "publishedAt": "2020-12-02T10:10:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "If you use\n[Debug]\n  show_var_residual_norms = true\n[]\n\nin your input file, you will see the influence of using scaling for the residuals. Remember the residual is the total sum of all the kernel contributions for that variable. So if you have only two variables, you should have only two residuals (one each).",
                          "url": "https://github.com/idaholab/moose/discussions/16365#discussioncomment-144701",
                          "updatedAt": "2022-10-25T02:26:08Z",
                          "publishedAt": "2020-12-02T10:38:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "I just want to take an example. What I care is that how the scaling factor influence the residual of the kernel. Could you tell me about the detail of scaling factor?",
                          "url": "https://github.com/idaholab/moose/discussions/16365#discussioncomment-144708",
                          "updatedAt": "2022-10-25T02:26:10Z",
                          "publishedAt": "2020-12-02T10:48:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "We work with the residual of the variable. A single kernel does not (usually) define the whole PDE that rules the variable.\nThe scaling factor is applied on the residual of the variable.\nSome kernels' residual may be scaled, for particular use cases, but that's not what you are doing here.",
                          "url": "https://github.com/idaholab/moose/discussions/16365#discussioncomment-172938",
                          "updatedAt": "2022-10-25T02:26:15Z",
                          "publishedAt": "2020-12-09T03:48:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Suddenly my SAM and MOOSE system does not work",
          "author": {
            "login": "Terryxixi2014"
          },
          "bodyText": "I got an error: error while loading shared libraries: libmoose-opt.so.0: cannot open shared object file: no such file or directory\nsuddenly, I cannot start any new calculations. The above error is there. Any idea?",
          "url": "https://github.com/idaholab/moose/discussions/16435",
          "updatedAt": "2022-12-13T14:15:33Z",
          "publishedAt": "2020-12-09T02:39:29Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Terry,\nDid you update SAM before this?\nAre you loading the moose environment? (if you are using the conda moose install)\nI would try re-building moose.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16435#discussioncomment-172854",
                  "updatedAt": "2022-12-13T14:15:34Z",
                  "publishedAt": "2020-12-09T03:41:00Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Convergence Issues with New Parameters",
          "author": {
            "login": "alanchavez86"
          },
          "bodyText": "Hi all!\nI currently have an input file (FeCrCo.i) used for the phase field simulation of the decomposition of FeCrCo alloy. The input file works correctly using parameters from Koyama 2004. When switching my parameters to those in Lv. 2010, I'm running into convergence issues where my data doesn't go past 1 second. I changed my temperature to a global parameter and now I'm looking into my executioner block to see if that's where my issue is.\nAny help is appreciated. Thank you!\nFeCrCo.zip\nKoyama_2004.pdf\nLv_2010_PF of FeCrCo.pdf",
          "url": "https://github.com/idaholab/moose/discussions/16384",
          "updatedAt": "2023-05-10T23:34:18Z",
          "publishedAt": "2020-12-04T00:24:15Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "Here are a couple suggestions to troubleshoot this:\n-Make sure that you are using the same units when you change to the new set of parameters\n-Check each parameter that you are changing and make sure that it is the same order of magnitude as the original parameter. Historically the guidance has always been that the solvers will work best when units are chosen such that all parameters are of order unity. That is why I mentioned making sure the units are the same between the parameters in the two papers.\n-A recently added option is automatic variable scaling, which will apply a scaling factor to each residual equation to try to make sure that the contribute approximately the same to the residual. This option can be turned on by setting the parameter automatic_scaling = true in the Executioner block.",
                  "url": "https://github.com/idaholab/moose/discussions/16384#discussioncomment-166871",
                  "updatedAt": "2023-05-10T23:34:20Z",
                  "publishedAt": "2020-12-08T20:18:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "libtool: error: unknown tag cxx",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hell,\nI try to install Moose on a work station. Everything goes well.\nBut when\ncd ~/projects/moose/test\nmake -j 4\n\nIt shows : libtool: error: unknown tag cxx",
          "url": "https://github.com/idaholab/moose/discussions/16319",
          "updatedAt": "2023-02-13T19:03:46Z",
          "publishedAt": "2020-11-28T12:14:21Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "LiuPengPeter"
                  },
                  "bodyText": "Could anyone help?\nIt could run simulation, but will always show that problem. Will it affect?",
                  "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-142076",
                  "updatedAt": "2023-02-13T19:03:46Z",
                  "publishedAt": "2020-11-29T23:18:52Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "What operating system are you using? Can you post some of the context of the error?",
                  "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-142608",
                  "updatedAt": "2023-02-13T19:04:01Z",
                  "publishedAt": "2020-11-30T14:33:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thnak you for your help!\nIt shows taht:\n(moose) lizhen1@dlut:/Project/big_cat$ make > a.txt\nlibtool: error: ignoring unknown tag CXX\n(moose) lizhen1@dlut:/Project/big_cat$ make\nChecking if header needs updating: /home/lizhen1/Project/moose/framework/include/base/MooseRevision.h...\nRebuilding symlinks in /home/lizhen1/Project/big_cat/build/header_symlinks\nCreating Unity Directory /home/lizhen1/Project/big_cat/build/unity_src\nCreating Unity /home/lizhen1/Project/big_cat/build/unity_src/kernels_Unity.C\nCompiling C++ (in opt mode) /home/lizhen1/Project/big_cat/build/unity_src/kernels_Unity.C...\nlibtool: error: ignoring unknown tag CXX\nLinking Library /home/lizhen1/Project/big_cat/lib/libbig_cat-opt.la...\nlibtool: error: ignoring unknown tag CXX\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\n/home/lizhen1/miniconda3/envs/moose/libmesh/contrib/bin/libtool: 9009: /usr/bin/grep: not found\nLinking Executable /home/lizhen1/Project/big_cat/big_cat-opt...\nlibtool: error: ignoring unknown tag CXX",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-143222",
                          "updatedAt": "2023-02-13T19:04:02Z",
                          "publishedAt": "2020-12-01T03:02:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "@lindsayad  /usr/bin/grep is also hard coded?\nOkay, so this feels like a moose-libmesh issue. There is a similar discussion going on about contrib/bin/libtool in moose-libmesh #16123.\nI think your only option will be to build libMesh yourself, and not use the one supplied by us. Please do the following:\nconda deactivate\nconda env remove -n moose\nconda create -n moose moose-petsc moose-tools\nconda activate moose\nThe above basically re-installs everything needed to build moose except libMesh. So we will need to build that manually. But first, let's clean the moose repository, just in case the previous failed build left any lingering issues:\ncd /home/lizhen1/Project/moose\ngit clean -xfd\nOnce moose is clean, we can try to build libMesh:\nexport MOOSE_JOBS=4\ncd /home/lizhen1/Project/moose\nscripts/update_and_rebuild_libmesh.sh\nHopefully, you can now build your application:\ncd /home/lizhen1/Project/big_cat\nmake -j 4",
                  "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-143805",
                  "updatedAt": "2023-02-13T19:04:13Z",
                  "publishedAt": "2020-12-01T14:32:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "@lindsayad /usr/bin/grep is also hard coded?\n\nYes. I think we should build our next libmesh package on a non-meowbuild machine so that we can reproduce the grep and sed (and probably other things) paths that we had before. We're not going to have a real fix until we decide what we want to use for configuration, e.g. cmake or autotools.",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-143848",
                          "updatedAt": "2020-12-03T21:37:29Z",
                          "publishedAt": "2020-12-01T15:17:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I doubt meowbuild has anything to do with it... meowbuild is running the same singularity image as buildq, mobuild, hpcbuild, etc. Which is/was CentOS 7.7.",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-143873",
                          "updatedAt": "2020-12-03T21:37:29Z",
                          "publishedAt": "2020-12-01T15:48:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I dunno. You said everything was fine until this most recent libmesh package...and wasn't that the first time we used meowbuild to create the package?",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-143926",
                          "updatedAt": "2023-02-13T19:04:14Z",
                          "publishedAt": "2020-12-01T16:10:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Maybe it's the difference between CentOS 7.6 and 7.7? I was wrong in saying they are using the same image. Turns out meowbuild is using CentOS-7.7 (and now 8), while the rest are using 7.6.\nCan't use 7.6 or 7.7 (valgrind issues as you discovered). So I stepped it up to 8.\nI can attempt to manually build our moose-libmesh package using 8, see if that works. If not... not sure stepping backwards is the right solution.",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-143935",
                          "updatedAt": "2023-02-13T19:04:13Z",
                          "publishedAt": "2020-12-01T16:20:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "You're right. Stepping back is not the right solution. I would say that if we're unable to get /bin/sed, /bin/grep with CentOS 8, then we should probably modify our conda instructions to tell the user to build libMesh...until we get an independent MOOSE configuration",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-144033",
                          "updatedAt": "2023-02-13T19:04:14Z",
                          "publishedAt": "2020-12-01T17:56:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I have an issue building libMesh on CentOS 8 using Conda supplied compilers. I have a sample PR busy working on all the moose- packages.\nhttps://civet.inl.gov/job/637387/\nI suspect it will make it, and then fail on moose-libmesh. It feels like a CentOS 8 issue. But I am not sure how to fix it.",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-144169",
                          "updatedAt": "2023-02-13T19:04:14Z",
                          "publishedAt": "2020-12-01T20:07:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Attaching the log generated by conda build . while in moose/conda/libmesh\nlibmesh.txt",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-144231",
                          "updatedAt": "2023-02-13T19:04:14Z",
                          "publishedAt": "2020-12-01T20:57:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Can we (@milljm) not patch the generated libtool scripts? The shell command paths that cause problems are assigned to variables at the top of libtool (SED=\"/bin/sed\"). Wouldn't it be possible to change this to SED=\"sed\"?",
                  "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-144200",
                  "updatedAt": "2023-02-13T19:04:14Z",
                  "publishedAt": "2020-12-01T20:28:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "And for grep as well? As the OP ran into.",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-144235",
                          "updatedAt": "2023-02-13T19:04:21Z",
                          "publishedAt": "2020-12-01T21:02:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Yes, of course",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-144237",
                          "updatedAt": "2023-02-13T19:04:21Z",
                          "publishedAt": "2020-12-01T21:03:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "This was fixed, along with /usr/bin/sed early this morning. Please perform the following:\nconda update --all\nAnd try to build again.",
                  "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-163483",
                  "updatedAt": "2023-02-13T19:04:24Z",
                  "publishedAt": "2020-12-08T15:43:13Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "Very cool. Thanks Jason",
                          "url": "https://github.com/idaholab/moose/discussions/16319#discussioncomment-164918",
                          "updatedAt": "2023-02-13T19:04:25Z",
                          "publishedAt": "2020-12-08T18:05:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Removing Boundary Conditions from specific elements",
          "author": {
            "login": "MatthewMavis"
          },
          "bodyText": "Hi all,\nI'm currently looking into trying to do topology optimisation using moose. I have looked into multiple ways of changing elements to do this. I have been able to create a meshgenerator to delete elements based on defined element IDs, though one problem with this is that to do so I'm using the ElementDeletionGeneratorBase.C which reassigns the element IDs after the elements have been removed. This means that the element IDs no longer match those of the original mesh which causes problems for example if you have to step back if you take off too much in the optimisation process.\nTo get around this I have created another meshgenerator that instead changes the blockID of the element so that the element can have its density set to 0. The problem with this method is that the elements on the boundary condition interfaces retain the BCs. So is there any way to remove them on an element by element basis?\nI'm also open to any ideas on how to retain the element IDs after deletion.\nBest Regards,\nMatt Mavis",
          "url": "https://github.com/idaholab/moose/discussions/16390",
          "updatedAt": "2023-01-04T16:42:25Z",
          "publishedAt": "2020-12-04T16:39:47Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "YaqiWang"
                  },
                  "bodyText": "If you can change blockID of elements, why cannot you do block restriction to your variables, kernels, etc.? You can add new boundaries excluding the part connecting to a certain mesh block. I am not sure if this helps.",
                  "url": "https://github.com/idaholab/moose/discussions/16390#discussioncomment-147490",
                  "updatedAt": "2023-01-04T20:38:10Z",
                  "publishedAt": "2020-12-04T20:17:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "permcody"
                  },
                  "bodyText": "I'm not sure that MOOSE will support dynamically changing the boundary definition on-the-fly very well. However, there are a few workarounds to your issue:\n\nGoing back to your original issue, you could simply turn off the renumbering of elements. We do that to keep data structures contiguous, but this is not a requirement. There is an option in the [Mesh] block that will allow you to do this.\nThere is a method in the BoundaryCondition class that lets you programmatically define when a boundary condition should be applied. You could extend the boundary condition you are using and define that method (shouldApply) to take into account your zero density property.",
                  "url": "https://github.com/idaholab/moose/discussions/16390#discussioncomment-163946",
                  "updatedAt": "2023-01-04T20:38:10Z",
                  "publishedAt": "2020-12-08T17:01:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "add/modify moose conda environment",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "@milljm How should I add extra python packages to my moose conda environment? Should I just add them to the moose conda environment or make a clone and add to the clone? Just wasn't sure if at some point in the future there could be issues if I modify the moose conda environment and try to update it for example. I'm on Linux if it matters.",
          "url": "https://github.com/idaholab/moose/discussions/16421",
          "updatedAt": "2024-01-23T16:05:18Z",
          "publishedAt": "2020-12-08T15:04:29Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "For things I use regularly I just add them to my default 'moose' environment. When I am trying something out I create a new environment.",
                  "url": "https://github.com/idaholab/moose/discussions/16421#discussioncomment-163408",
                  "updatedAt": "2024-01-23T16:05:19Z",
                  "publishedAt": "2020-12-08T15:10:26Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Sounds good.",
                          "url": "https://github.com/idaholab/moose/discussions/16421#discussioncomment-163498",
                          "updatedAt": "2024-01-23T16:05:18Z",
                          "publishedAt": "2020-12-08T15:49:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}