{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wMy0xNFQxMDowNDoyOC0wNTowMM4AYSW0"
    },
    "edges": [
      {
        "node": {
          "title": "A question about the non-convergence of a multi-app case",
          "author": {
            "login": "Yasunaoka"
          },
          "bodyText": "Hello MOOSE Community, I recently had a problem:\nTime Step 28481, time = 11.3918, dt = 2.98023e-12\nfracture0: \nfracture0: Time Step 28481, time = 11.3918, dt = 2.98023e-12\nfracture0:  0 Nonlinear |R| = 3.007129e+08\nfracture0:       0 Linear |R| = 3.007129e+08\nfracture0:       1 Linear |R| = 8.206889e-01\nfracture0:  1 Nonlinear |R| = 1.665936e+06\nfracture0:  Solve Converged!\nfracture0: Finished Solving                                                              [ 11.86 s] [ 1868 MB]\nfracture0: \nfracture0: Outlier Variable Residual Norms:\nfracture0:   c: 1.737291e+06\n    Finished Executing MultiApps                                                         [ 11.99 s] [ 1868 MB]\n  Finished Executing MultiApps                                                           [ 12.11 s] [ 1868 MB]\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 28481, time = 11.3918, dt = 1.49012e-12\nfracture0: \nfracture0: Time Step 28481, time = 11.3918, dt = 1.49012e-12\nfracture0:  0 Nonlinear |R| = 3.007129e+08\nfracture0:       0 Linear |R| = 3.007129e+08\nfracture0:       1 Linear |R| = 7.470535e-01\nfracture0:  1 Nonlinear |R| = 3.337135e+06\nfracture0:  Solve Converged!\nfracture0: Finished Solving                                                              [ 11.81 s] [ 1868 MB]\nfracture0: \nfracture0: Outlier Variable Residual Norms:\nfracture0:   c: 3.481749e+06\n    Finished Executing MultiApps                                                         [ 11.94 s] [ 1868 MB]\n  Finished Executing MultiApps                                                           [ 12.07 s] [ 1868 MB]\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 28481, time = 11.3918, dt = 1e-12\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nThis is a case consisting of a main-app: tensor mechanics and a sub-app: fracture phase field.\nUntil then the programme runs well and no sudden deformations, breaks, etc. are seen on the exodus result file. At this step it starts not converging until the step size is reduced to unacceptable and the programme terminates automatically.\nOne of the tensor mechanics is solved in explicit dynamics, so there is no convergence problem. And the subapp-fracture also shows successful convergence. Then at the end the output shows: Solve Did NOT Converge!\nWhat is the reason for this? Looking forward and thank you for your help.",
          "url": "https://github.com/idaholab/moose/discussions/26728",
          "updatedAt": "2024-03-18T15:28:32Z",
          "publishedAt": "2024-02-03T09:37:13Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSo because it is explicit dynamics it s accepting solutions with a reported huge residual?\nWhat does the multiapp convergence log say?\nDid you loosen the convergence criteria on either?\nWe need to find why it s reporting solve not converged.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8355778",
                  "updatedAt": "2024-02-03T16:20:33Z",
                  "publishedAt": "2024-02-03T16:20:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hello and thank you for your kind reply!\n\nYes, during explicit dynamics calculations, there is no coupling of known and unknown quantities, so no iterations are required and no residuals are generated.\nI don't quite understand where to view this log\nyes, I did try to loosen the convergence criterion for the phase field subapp:\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full=true\n  []\n[]\n\n[Executioner]\n  type = Transient\n\n  solve_type = PJFNK\n  petsc_options_iname = '-pc_type  -snes_type'\n  petsc_options_value = 'lu vinewtonrsls'\n\n  nl_rel_tol = 0.5\n  nl_abs_tol = 0.5e-1\n  l_max_its = 100\n  nl_max_its = 100\n[]\n\nSo the strange thing is that the main program doesn't have a convergence problem, and the output of the subroutine shows convergence\nI don't quite understand where this final non-convergence output comes from\nI notice that the non-convergence is associated with Outlier Variable Residual Norms, which are controlled below the order of e-3 until the non-convergence occurs,At this point, the Outlier Variable Residual Norms is 5.254716e-02. and the program chooses to reduce the step size, however, as the step size is reduced, the Outlier Variable Residual Norms grows larger and larger, until it grows to e +6 orders of magnitude, at which point the step size is reduced below the tolerance and the calculation is terminated.\nSo I'm wondering if I'm missing the tolerance criterion associated with Outlier Variable Residual Norms so that the program is running at the default value, and if there is indeed such a criterion, how should I set it?\nThanks again for your kind help!",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8358375",
                          "updatedAt": "2024-02-04T03:57:43Z",
                          "publishedAt": "2024-02-04T03:48:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nCan you try tightening it?\nnl_rel_tol = 1e-8\nnl_abs_tol = 1e-10\n\nwith 0.5 you are barely converging anything. Probably skipping most solves due to it being detected as already converged",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8358402",
                          "updatedAt": "2024-02-04T03:57:26Z",
                          "publishedAt": "2024-02-04T03:57:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There is no dedicated criteria for the outlier variable norm, that s just the outlier with regards to the regular convergence criteria",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8358414",
                          "updatedAt": "2024-02-04T04:01:11Z",
                          "publishedAt": "2024-02-04T04:01:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi\nI did try\nnl_rel_tol = 1e-8\nnl_abs_tol = 1e-10\n\n\nHowever\nTime Step 142, time = 11.3568, dt = 0.0004\n Solve Converged!\nfracture0: \nfracture0: Time Step 142, time = 11.3566, dt = 0.0004\nfracture0:  0 Nonlinear |R| = 6.403193e-03\nfracture0:       0 Linear |R| = 6.403193e-03\nfracture0:       1 Linear |R| = 3.480882e-10\nfracture0:  1 Nonlinear |R| = 8.341193e-07\nfracture0:       0 Linear |R| = 8.341193e-07\nfracture0:       1 Linear |R| = 4.467406e-14\nfracture0:  2 Nonlinear |R| = 4.199423e-10\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nfracture0:  3 Nonlinear |R| = 0.000000e+00\nfracture0:  Solve Converged!\nfracture0: Finished Solving                                                              [ 35.86 s] [ 1885 MB]\n    Finished Executing MultiApps                                                         [ 36.04 s] [ 1885 MB]\n  Finished Executing MultiApps                                                           [ 36.15 s] [ 1885 MB]\n\nTime Step 143, time = 11.3572, dt = 0.0004\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 143, time = 11.357, dt = 0.0002\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 143, time = 11.3569, dt = 0.0001\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 143, time = 11.3569, dt = 5e-05\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 143, time = 11.3568, dt = 2.5e-05\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 143, time = 11.3568, dt = 1.25e-05\n Solve Did NOT Converge!\nAborting as solve did not converge\n\n\nIt just suddenly failed, I am totally confused.\nI am thinking maybe there was an error in the strain calculations or something, do you have any ideas please? Much appreciated!",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8359219",
                          "updatedAt": "2024-02-04T16:38:08Z",
                          "publishedAt": "2024-02-04T08:15:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This looks odd\nfracture0:  2 Nonlinear |R| = 4.199423e-10\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nfracture0:  3 Nonlinear |R| = 0.000000e+00\n\nCan you turn on catch_up in the MultiApp parameters? That will let the multiapp try again. I guess it wont work for this very time step that returns a 'converged' but it might work on other time steps.\nI would also change the petsc options to the multiapp a bit to make them more robust\n  petsc_options_iname = '-pc_type -pc_factor_shift  -snes_type'\n  petsc_options_value = 'lu NONZERO vinewtonrsls'",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8361743",
                          "updatedAt": "2024-02-04T16:42:56Z",
                          "publishedAt": "2024-02-04T16:42:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi, I followed your advice, however:\n\nTime Step 94, time = 11.3376, dt = 0.0004\n Solve Converged!\nfracture0: \nfracture0: Time Step 94, time = 11.3374, dt = 0.0004\nfracture0:  0 Nonlinear |R| = 6.111548e-03\nfracture0:       0 Linear |R| = 6.111548e-03\nfracture0:       1 Linear |R| = 3.297955e-10\nfracture0:  1 Nonlinear |R| = 4.454659e-07\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nfracture0:  2 Nonlinear |R| = 0.000000e+00\nfracture0:  Solve Converged!\nfracture0: Finished Solving                                                              [ 24.46 s] [ 1865 MB]\n    Finished Executing MultiApps                                                         [ 24.64 s] [ 1865 MB]\n  Finished Executing MultiApps                                                           [ 24.75 s] [ 1865 MB]\n\nTime Step 95, time = 11.338, dt = 0.0004\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3378, dt = 0.0002\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3377, dt = 0.0001\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3377, dt = 5e-05\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 2.5e-05\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 1.25e-05\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 6.25e-06\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 3.125e-06\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 1.5625e-06\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 7.8125e-07\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 3.90625e-07\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 1.95313e-07\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 95, time = 11.3376, dt = 9.76563e-08\n Solve Did NOT Converge!\n\n\nPlus I also tried turn off everything about petsc, however:\n\nlibMesh terminating:\nUnrecoverable failure to converge\n--------------------------------------------------------------------------\nMPI_ABORT was invoked on rank 48 in communicator MPI_COMM_WORLD\nwith errorcode 1.\n\nNOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.\nYou may or may not see output from other processes, depending on\nexactly when Open MPI kills them.\n--------------------------------------------------------------------------\n\n\nI checked out the other discussions, but didn't seem to find any good solutions.",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8379688",
                          "updatedAt": "2024-02-06T08:47:53Z",
                          "publishedAt": "2024-02-06T08:45:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "In the multiapp can you set nl_min_its = 4. To force it to go beyond this 0 residual iteration which I dont believe\nThis is really annoying, we are not getting the logs we need to see why it s failing\nCan you set:\n[Executioner]\n  verbose = true\n\nin both applications and in the main app\n[Problem]\n  verbose_multiapps = true\n\nand\n[Outputs]\n  print_linear_residuals = true\n  print_nonlinear_residuals = true\n\nin both apps\nalso remove catch_up = true and use sub_cycle= true in the MultiApps, to see if this is more successful",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8385298",
                          "updatedAt": "2024-02-06T17:03:33Z",
                          "publishedAt": "2024-02-06T17:03:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Happy Chinese New Year, Guillaume! Thank you very much for your patience and help, after the Chinese New Year holiday I tried all your suggestions again, however still struggling with this issue. Therefore, I was wondering if I could bypass this convergence problem and instead use an explicit solution method to solve this problem (ref #26929 26929 ) and was wondering if you had any suggestions? Much appreciated!",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8627899",
                          "updatedAt": "2024-02-29T08:53:25Z",
                          "publishedAt": "2024-02-29T08:53:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nYou can try to use an explicit time integrator.\nYou ll lose the ability to run large time steps but maybe that works for you still\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8633115",
                          "updatedAt": "2024-02-29T16:19:12Z",
                          "publishedAt": "2024-02-29T16:19:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi\nI did try an explicit time integrator\nCentralDifference\n\nhowever, it doesn't work, the order parameter returns zeros all the time.\nYou can see the details in #26929\nCould you please help me? Thanks a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8637577",
                          "updatedAt": "2024-03-01T02:25:16Z",
                          "publishedAt": "2024-03-01T02:25:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "In the above (first post) you state that the subapp fracture shows successful convergence, but in the other issue #26929 you state the phase-field fracture model is not converging. Can you please clarify?",
                  "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8646381",
                  "updatedAt": "2024-03-01T18:04:59Z",
                  "publishedAt": "2024-03-01T18:04:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi, first of all, I am very sorry for the confusion I caused. I did make a clerical error, and the \"phase field not converging\" in the second post actually refers to an aborted programme for unknown reasons.\nBTW, I took Guillaume's @GiudGiud   advice and started yesterday to try other relatively simple explicit integrators. I found that with both the ExplicitEuler and ExplicitMidpoint integrators, the program aborts at about 3\u03bcs.\nTime Step 6046, time = 3.023, dt = 0.0005\n Solve Converged!\nfracture0: \nfracture0: Time Step 6046, time = 3.023, dt = 0.0005\nfracture0:  0 Nonlinear |R| = 0.000000e+00\nfracture0:  Solve Converged!\n\nTime Step 6047, time = 3.0235, dt = 0.0005\n Solve Converged!\nfracture0: \nfracture0: Time Step 6047, time = 3.0235, dt = 0.0005\nfracture0:  0 Nonlinear |R| = 2.364981e-06\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OTHER \nfracture0:  1 Nonlinear |R| = 0.000000e+00\nfracture0:  Solve Converged!\n\nTime Step 6048, time = 3.024, dt = 0.0005\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 6048, time = 3.02375, dt = 0.00025\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 6048, time = 3.02363, dt = 0.000125\n Solve Did NOT Converge!\nAborting as solve did not converge\n\n*** ERROR ***\nThe following error occurred in the object \"ConstantDT\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\n--------------------------------------------------------------------------\nMPI_ABORT was invoked on rank 187 in communicator MPI_COMM_WORLD\nwith errorcode 1.\n\nNOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.\nYou may or may not see output from other processes, depending on\nexactly when Open MPI kills them.\n--------------------------------------------------------------------------\n[c342.hpc:00450] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2198\n\nAt this point, the simulation is just starting, and the material goes into yielding at about this time and starts to affect the phase field equations. There may be a correlation between this, but I did not investigate further. When I tried ActuallyExplicitEuler, I monitored from the output that the program was still running well up to 6\u03bcs (when the simulation was midway through and the structure was starting to deform inhomogeneously), so I checked the output file and found that cracks were budding normally.\nThe problem was large and therefore slow to compute, and I waited until the next day to check its results, however found that it aborted at ~11.4\u03bcs - comparable to the abort time of the earliest problem presented in this post. I tried the calculation four times, and each time the output looked like this: the program aborts the calculation when there is no sign of it from the output.\nTime Step 28821, time = 11.5284\n             old time = 11.528\n                   dt = 0.0004\n               old dt = 0.0004\n\n\nBacking Up MultiApps on TIMESTEP_END\nBacked up MultiApp ... fracture\nFinished Backing Up MultiApps on TIMESTEP_END\n\n Solve Converged!\n\nTransfers on TIMESTEP_END To MultiApps:\n-------------------------------------------------------------------------\n|            Name            |         Type         |  From  |    To    |\n-------------------------------------------------------------------------\n| to_shearband_driving_force | MultiAppCopyTransfer | Parent | fracture |\n-------------------------------------------------------------------------\nTransfers on TIMESTEP_END Are Finished\n\n\nNo Transfers on TIMESTEP_END Between MultiApps\n\n\nExecuting MultiApps on TIMESTEP_END\nSolving MultiApp 'fracture' with target time 11.5284 and dt 0.0004 with auto-advance on\nfracture0: \nfracture0: Time Step 28821, time = 11.5284\nfracture0:              old time = 11.528\nfracture0:                    dt = 0.0004\nfracture0:                old dt = 0.0004\nfracture0: \nfracture0:  Solve Converged!\nSuccessfully Solved MultiApp fracture.\nFinished Executing MultiApps on TIMESTEP_END\n\n\nTransfers on TIMESTEP_END From MultiApps:\n-----------------------------------------------------\n|  Name  |         Type         |   From   |   To   |\n-----------------------------------------------------\n| from_c | MultiAppCopyTransfer | fracture | Parent |\n-----------------------------------------------------\nTransfers on TIMESTEP_END Are Finished\n\n\nTime Step 28822, time = 11.5288\n             old time = 11.5284\n                   dt = 0.0004\n               old dt = 0.0004\n\n\nBacking Up MultiApps on TIMESTEP_END\nBacked up MultiApp ... fracture\nFinished Backing Up MultiApps on TIMESTEP_END\n\nlibMesh terminating:\nUnrecoverable failure to converge\n--------------------------------------------------------------------------\nMPI_ABORT was invoked on rank 118 in communicator MPI_COMM_WORLD\nwith errorcode 1.\n\nNOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.\nYou may or may not see output from other processes, depending on\nexactly when Open MPI kills them.\n--------------------------------------------------------------------------\n\nWhen I checked its output, I found that the result was the same as the result of this post, i.e. whether or not an explicit integrator was used did not affect whether or not the programme aborted at that point. It seems that my attempt to bypass this problem by displaying the integrator has failed, but it's a good thing that the computation has been made more efficient (down from 24 hours to 14 hours)\n\nThe mesh distortion doesn't look too bad to me, and I can't find any information on the output to solve the problem.",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8666801",
                          "updatedAt": "2024-03-04T13:39:22Z",
                          "publishedAt": "2024-03-04T13:32:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "libMesh terminating:\nUnrecoverable failure to converge\n--------------------------------------------------------------------------\nMPI_ABORT was invoked on rank 118 in communicator MPI_COMM_WORLD\nwith errorcode 1.\n\nNOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.\nYou may or may not see output from other processes, depending on\nexactly when Open MPI kills them.\n------------------------------------\n\nthis isnt enough information. We need the full message. Can you use --keep-cout and --redirect-stdout to keep ALL the logs from all processes. Then please find the one that crashed and attach the full log",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8668596",
                          "updatedAt": "2024-03-04T15:41:28Z",
                          "publishedAt": "2024-03-04T15:41:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi, I did a re-run of the problem using restart, starting at 11.2\u03bcs.\n[Problem]\n  restart_file_base = displacement_t_out_cp/LATEST  \n\nA total of 224 (the number of processors) output files were generated in the folder stdout.processor. X , where:\nThe stdout.processor.48:\nTime Step 163, time = 11.2652\n           old time = 11.2648\n                 dt = 0.0004\n             old dt = 0.0004\n\n\nBacking Up MultiApps on TIMESTEP_END\nBacked up MultiApp ... fracture\nFinished Backing Up MultiApps on TIMESTEP_END\n\n Solve Converged!\n\nTransfers on TIMESTEP_END To MultiApps:\n-------------------------------------------------------------------------\n|            Name            |         Type         |  From  |    To    |\n-------------------------------------------------------------------------\n| to_shearband_driving_force | MultiAppCopyTransfer | Parent | fracture |\n-------------------------------------------------------------------------\nTransfers on TIMESTEP_END Are Finished\n\n\nNo Transfers on TIMESTEP_END Between MultiApps\n\n\nExecuting MultiApps on TIMESTEP_END\nSolving MultiApp 'fracture' with target time 11.2652 and dt 0.0004 with auto-advance on\nfracture0: \nfracture0: Time Step 163, time = 11.2652\nfracture0:            old time = 11.2648\nfracture0:                  dt = 0.0004\nfracture0:              old dt = 0.0004\nfracture0: \nfracture0:  Solve Converged!\nSuccessfully Solved MultiApp fracture.\nFinished Executing MultiApps on TIMESTEP_END\n\n\nTransfers on TIMESTEP_END From MultiApps:\n-----------------------------------------------------\n|  Name  |         Type         |   From   |   To   |\n-----------------------------------------------------\n| from_c | MultiAppCopyTransfer | fracture | Parent |\n-----------------------------------------------------\nTransfers on TIMESTEP_END Are Finished\n\n\nTime Step 164, time = 11.2656\n           old time = 11.2652\n                 dt = 0.0004\n             old dt = 0.0004\n\n\nBacking Up MultiApps on TIMESTEP_END\nBacked up MultiApp ... fracture\nFinished Backing Up MultiApps on TIMESTEP_END\n\n**libMesh terminating:\nUnrecoverable failure to converge**\n\nOthers\nTime Step 163, time = 11.2652\n           old time = 11.2648\n                 dt = 0.0004\n             old dt = 0.0004\n\n\nBacking Up MultiApps on TIMESTEP_END\nBacked up MultiApp ... fracture\nFinished Backing Up MultiApps on TIMESTEP_END\n\n Solve Converged!\n\nTransfers on TIMESTEP_END To MultiApps:\n-------------------------------------------------------------------------\n|            Name            |         Type         |  From  |    To    |\n-------------------------------------------------------------------------\n| to_shearband_driving_force | MultiAppCopyTransfer | Parent | fracture |\n-------------------------------------------------------------------------\nTransfers on TIMESTEP_END Are Finished\n\n\nNo Transfers on TIMESTEP_END Between MultiApps\n\n\nExecuting MultiApps on TIMESTEP_END\nSolving MultiApp 'fracture' with target time 11.2652 and dt 0.0004 with auto-advance on\nfracture0: \nfracture0: Time Step 163, time = 11.2652\nfracture0:            old time = 11.2648\nfracture0:                  dt = 0.0004\nfracture0:              old dt = 0.0004\nfracture0: \nfracture0:  Solve Converged!\nSuccessfully Solved MultiApp fracture.\nFinished Executing MultiApps on TIMESTEP_END\n\n\nTransfers on TIMESTEP_END From MultiApps:\n-----------------------------------------------------\n|  Name  |         Type         |   From   |   To   |\n-----------------------------------------------------\n| from_c | MultiAppCopyTransfer | fracture | Parent |\n-----------------------------------------------------\nTransfers on TIMESTEP_END Are Finished\n\n\nTime Step 164, time = 11.2656\n           old time = 11.2652\n                 dt = 0.0004\n             old dt = 0.0004\n\n\nBacking Up MultiApps on TIMESTEP_END\nBacked up MultiApp ... fracture\nFinished Backing Up MultiApps on TIMESTEP_END\n\nThe output.err\n--------------------------------------------------------------------------\nMPI_ABORT was invoked on rank 48 in communicator MPI_COMM_WORLD\nwith errorcode 1.\n\nNOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.\nYou may or may not see output from other processes, depending on\nexactly when Open MPI kills them.\n--------------------------------------------------------------------------\n\nIt doesn't look like there's any extra logging, is it a problem with my settings?",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8680199",
                          "updatedAt": "2024-03-05T13:22:06Z",
                          "publishedAt": "2024-03-05T13:22:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Maybe check 49 and 47 in case the rank indexing is different.\nBut no I don't think you're doing anything wrong. It seems to be a parallel bug and we have no information about it.\nCan you try turning off transfers one by one and see if the simulation can go further ?",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8680652",
                          "updatedAt": "2024-03-05T13:56:34Z",
                          "publishedAt": "2024-03-05T13:56:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Yes, 47 and 49 I have also checked and there is no additional information. In fact, I checked all 224 of these files and only 48 has this extra line in it.\n**libMesh terminating:\nUnrecoverable failure to converge**\n\nAfter turning off transfers, if you run only the phase field part, it will change nothing. And if you run only the tensor mechanics part results in no problem. Before this I also successfully reproduced the results of a CMAME paper with my setup.\n\nThe problem is essentially this: shear strain energy is generated when the cylinder collapses, transported to the phase field module leading to cracking, which further weakens the load carrying capacity, which in turn generates even more strain energy - a cycle that leads to catastrophic collapse of the cylinder.\nIt may be that this extreme change is what makes the calculations difficult, and once the transfers is turned off, this property will cease to exist.\nI'm going to debug it via debugging  combined-dbg to see what's wrong.Do you have any suggestions, please?",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8694849",
                          "updatedAt": "2024-03-06T14:42:31Z",
                          "publishedAt": "2024-03-06T14:42:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Actually this tells us something.\nThis message is only output by these two locations\nsrc/fe/fe_map.C:            libmesh_catch (ConvergenceFailure &)\nsrc/geom/cell_tet4.C:  libmesh_catch (ConvergenceFailure &)\n\nso it's an error in libmesh.\nCan you share these input files and meshes?",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8695659",
                          "updatedAt": "2024-03-06T15:43:44Z",
                          "publishedAt": "2024-03-06T15:43:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi, here's my input file and the mesh is directly in there as well.\n#use miug mius mm\n[MultiApps]\n  [fracture]\n    type = TransientMultiApp\n    input_files = fracture.i\n    execute_on = TIMESTEP_END\n  []\n[]\n\n[Transfers]\n  [from_c]\n    type = MultiAppCopyTransfer\n    from_multi_app = fracture\n    variable = c\n    source_variable = c\n  []\n  [to_shearband_driving_force]\n    type = MultiAppCopyTransfer\n    to_multi_app = fracture\n    variable = shearband_driving_force\n    source_variable = shearband_driving_force\n  []\n[]\n\n[Mesh]\n  allow_renumbering = false\n  [TWC]\n    type = AnnularMeshGenerator\n    rmax = 5\n    rmin = 3.5\n    nt = 3200\n    nr = 210\n  []\n[]\n\n[Problem]\n  #Note that the suffix is left off in the parameter below.\n  #restart_file_base = displacement_t_out_cp/LATEST  # You may also use a specific number here\n verbose_multiapps = true\n[]\n\n[Variables]\n  [disp_x]\n  []\n  [disp_y]\n  []\n[]\n\n[AuxVariables]\n  [c]\n  []\n  [shearband_driving_force]\n    order = CONSTANT\n    family = MONOMIAL\n    [AuxKernel]\n      type = MaterialRealAux\n      property = local_energy_dev\n    []\n  []\n  [vonmises]\n    order = CONSTANT\n    family = MONOMIAL\n    [AuxKernel]\n      type = RankTwoScalarAux\n      rank_two_tensor = stress\n      variable = vonmises\n      scalar_type = VonMisesStress\n    []\n  []\n  [pressure]\n    order = CONSTANT\n    family = MONOMIAL\n    [AuxKernel]\n      type = RankTwoScalarAux\n      rank_two_tensor = stress\n      variable = pressure\n      scalar_type = Hydrostatic\n    []\n  []\n  [EPS]\n    order = CONSTANT\n    family = MONOMIAL\n    [AuxKernel]\n      type = MaterialRealAux\n      property = eqv_plastic_strain\n      variable = EPS\n    []\n  []\n  [yield_factor]\n    order = CONSTANT\n    family = MONOMIAL\n    [AuxKernel]\n      type = MaterialRealAux\n      property = yield_factor\n      variable = yield_factor\n    []\n  []\n  [accel_x]\n  []\n  [vel_x]\n  []\n  [accel_y]\n  []\n  [vel_y]\n  []\n[]\n\n\n[AuxKernels]\n  [accel_x]\n      type = TestNewmarkTI\n      variable = accel_x\n      displacement = disp_x\n      first = false\n  []\n  [vel_x]\n      type = TestNewmarkTI\n      variable = vel_x\n      displacement = disp_x\n  []\n  [accel_y]\n      type = TestNewmarkTI\n      variable = accel_y\n      displacement = disp_y\n      first = false\n  []\n  [vel_y]\n      type = TestNewmarkTI\n      variable = vel_y\n      displacement = disp_y\n  []\n[]\n\n[Kernels]\n  [DynamicTensorMechanics]\n    displacements = 'disp_x disp_y'\n    strain = FINITE\n    incremental = true\n    decomposition_method = HughesWinget\n  []\n  [inertia_x]\n    type = InertialForce\n    variable = disp_x\n  []\n  [inertia_y]\n    type = InertialForce\n    variable = disp_y\n  []   \n[]\n\n[BCs]\n  [Pressure]\n      [outter_surface]\n          boundary = 'rmax'\n          function = triangle_pulse\n          displacements = 'disp_x disp_y'\n      []\n  []\n[]\n\n[Functions]\n  [triangle_pulse]\n      #4Gpa=4e9n/m^2=4e9 kg/(m*s^2)=4e9 kg/(e3e12mm*mius^2)=4e3 miug/(mm*mius^2)\n      type = PiecewiseLinear\n      x = '0\t0.1\t0.2\t0.3\t0.4\t0.5\t0.6\t0.7\t0.8\t0.9\t1\t1.1\t1.2\t1.3\t1.4\t1.5\t1.6\t1.7\t1.8\t1.9\t2\t2.1\t2.2\t2.3\t2.4\t2.5\t2.6\t2.7\t2.8\t2.9\t3\t3.1\t3.2\t3.3\t3.4\t3.5\t3.6\t3.7\t3.8\t3.9\t4\t4.1\t4.2\t4.3\t4.4\t4.5\t4.6\t4.7\t4.8\t4.9\t5\t5.1\t5.2\t5.3\t5.4\t5.5\t5.6\t5.7\t5.8\t5.9\t6\t6.1\t6.2\t6.3\t6.4\t6.5\t6.6\t6.7\t6.8\t6.9\t7\t7.1\t7.2\t7.3\t7.4\t7.5\t7.6\t7.7\t7.8\t7.9\t8\t8.1\t8.2\t8.3\t8.4\t8.5\t8.6\t8.7\t8.8\t8.9\t9\t9.1\t9.2\t9.3\t9.4\t9.5\t9.6\t9.7\t9.8\t9.9\t10\t10.1\t10.2\t10.3\t10.4\t10.5\t10.6\t10.7\t10.8\t10.9\t11\t11.1\t11.2\t11.3\t11.4\t11.5\t11.6\t11.7\t11.8\t11.9\t12\t12.1\t12.2\t12.3\t12.4\t12.5\t12.6\t12.7\t12.8\t12.9\t13\t13.1\t13.2\t13.3\t13.4\t13.5\t13.6\t13.7\t13.8\t13.9\t14\t14.1\t14.2\t14.3\t14.4\t14.5\t14.6\t14.7\t14.8\t14.9\t15\t15.1\t15.2\t15.3\t15.4\t15.5\t15.6\t15.7\t15.8\t15.9\t16\t16.1\t16.2\t16.3\t16.4\t16.5\t16.6\t16.7\t16.8\t16.9\t17\t17.1\t17.2\t17.3\t17.4\t17.5\t17.6\t17.7\t17.8\t17.9\t18\t18.1\t18.2\t18.3\t18.4\t18.5\t18.6\t18.7\t18.8\t18.9\t19\t19.1\t19.2\t19.3\t19.4\t19.5\t19.6\t19.7\t19.8\t19.9\t20\n'\n      y = '\n\n4.02E-02\t4.03E-02\t3.96E-02\t3.93E-02\t2.76E-02\t-8.19E-03\t-8.96E-02\t-2.25E-01\t-4.23E-01\t-6.42E-01\t-8.92E-01\t-1.06E+00\t-1.00E+00\t-5.29E-01\t4.22E-01\t2.00E+00\t4.27E+00\t7.34E+00\t1.12E+01\t1.59E+01\t2.15E+01\t2.80E+01\t3.54E+01\t4.36E+01\t5.25E+01\t6.20E+01\t7.22E+01\t8.31E+01\t9.45E+01\t1.07E+02\t1.19E+02\t1.33E+02\t1.47E+02\t1.61E+02\t1.76E+02\t1.91E+02\t2.07E+02\t2.23E+02\t2.40E+02\t2.56E+02\t2.73E+02\t2.90E+02\t3.07E+02\t3.24E+02\t3.41E+02\t3.59E+02\t3.76E+02\t3.94E+02\t4.11E+02\t4.28E+02\t4.46E+02\t4.63E+02\t4.81E+02\t4.99E+02\t5.17E+02\t5.34E+02\t5.52E+02\t5.69E+02\t5.86E+02\t6.02E+02\t6.19E+02\t6.35E+02\t6.51E+02\t6.67E+02\t6.83E+02\t6.98E+02\t7.13E+02\t7.27E+02\t7.41E+02\t7.55E+02\t7.69E+02\t7.82E+02\t7.95E+02\t8.07E+02\t8.18E+02\t8.29E+02\t8.39E+02\t8.48E+02\t8.56E+02\t8.64E+02\t8.70E+02\t8.75E+02\t8.80E+02\t8.84E+02\t8.87E+02\t8.89E+02\t8.90E+02\t8.90E+02\t8.89E+02\t8.87E+02\t8.84E+02\t8.80E+02\t8.75E+02\t8.68E+02\t8.60E+02\t8.52E+02\t8.43E+02\t8.32E+02\t8.21E+02\t8.09E+02\t7.96E+02\t7.83E+02\t7.69E+02\t7.55E+02\t7.40E+02\t7.26E+02\t7.12E+02\t6.97E+02\t6.82E+02\t6.67E+02\t6.50E+02\t6.33E+02\t6.15E+02\t5.97E+02\t5.79E+02\t5.61E+02\t5.42E+02\t5.23E+02\t5.03E+02\t4.83E+02\t4.64E+02\t4.45E+02\t4.26E+02\t4.07E+02\t3.88E+02\t3.70E+02\t3.52E+02\t3.35E+02\t3.17E+02\t3.00E+02\t2.82E+02\t2.65E+02\t2.49E+02\t2.33E+02\t2.17E+02\t2.02E+02\t1.87E+02\t1.72E+02\t1.59E+02\t1.45E+02\t1.32E+02\t1.20E+02\t1.08E+02\t9.71E+01\t8.63E+01\t7.61E+01\t6.63E+01\t5.69E+01\t4.83E+01\t4.03E+01\t3.31E+01\t2.66E+01\t2.09E+01\t1.59E+01\t1.15E+01\t7.91E+00\t4.95E+00\t2.66E+00\t9.90E-01\t4.47E-02\t-2.36E-01\t2.15E-01\t1.34E+00\t3.22E+00\t5.72E+00\t8.89E+00\t1.27E+01\t1.72E+01\t2.23E+01\t2.81E+01\t3.47E+01\t4.18E+01\t4.97E+01\t5.81E+01\t6.73E+01\t7.71E+01\t8.72E+01\t9.79E+01\t1.09E+02\t1.20E+02\t1.32E+02\t1.44E+02\t1.57E+02\t1.70E+02\t1.83E+02\t1.96E+02\t2.10E+02\t2.24E+02\t2.38E+02\t2.52E+02\t2.67E+02\t2.82E+02\t2.97E+02\t3.12E+02\t3.27E+02\t3.42E+02\t3.56E+02\t3.71E+02\t3.85E+02\t3.99E+02\t4.13E+02\n\n'\n  []\n[]\n\n[Materials]\n  [density]\n    type = Density\n    displacements = 'disp_x disp_y'\n    density = 7.9e3 #miug/mm^3\n  []\n  [strain]\n    type = ComputeFiniteStrain\n    displacements = 'disp_x disp_y'\n    implicit = false\n    decomposition_method = HughesWinget\n  []\n  [elasticity_tensor]\n    type = ComputeIsotropicElasticityTensor\n    shear_modulus = 77.5e3  #77.5Gpa\n    poissons_ratio = 0.3\n  []\n  [damage_stress]\n    type = JCEOSnl\n    A = 110#Mpa\n    B = 1500\n    n = 0.36\n    C = 0.025\n    reference_strain_rate = 1\n    m = 0.81\n    T_m = 1800#kelvin\n    T_r = 298\n    T_i = 298\n    SpecHeat = 500e-6 #1e-6mm^2/(mius^2*kelvin)=1*m*m/(s*s*kelvin)\n    D_i = 7.9e3\n    ShearModule = 77.5e3\n    C0 = 4569e-3 #1e-3 mm/mius = 1m/s\n    S1 = 1.49\n    gamma0 = 2.17\n    a = 0\n    read_prop_user_object = prop_read\n    c = c\n    D_name = 'degradation'\n    shearband_driving_force_name = local_energy_dev\n  []\n  [degradation]#a1\n    type = DerivativeParsedMaterial\n    property_name = degradation\n    coupled_variables = 'c'\n    expression = '((1.0-c)^2)/(((1.0-c)^2)+a1*c*(1-0.5*c))'\n    constant_names       = 'a1'\n    constant_expressions = '0.8'\n    derivative_order = 2\n  []\n[]\n\n[UserObjects]\n  [prop_read]\n    type = PropertyReadFile\n    prop_file_name = '0.02722-10.txt'\n    nprop = 1\n    read_type = element\n  []\n[]\n\n[Executioner]\nverbose=true\n  type = Transient\n  start_time = 0\n  end_time = 20\n  dt = 0.0005  # local speed is 6000m/s=6000mium/mius\u2014\u20141e-4mius for 0.6mium\n   petsc_options_iname = '-pc_type -pc_factor_shift  -snes_type'\n   petsc_options_value = 'lu NONZERO vinewtonrsls'\n  [TimeIntegrator]\n    type = CentralDifference\n    solve_type = lumped\n  []\n[]\n\n[Outputs]\n  exodus = true\n  interval = 200\n  checkpoint = true\n[]\n\n#use miug mius mm\n[Mesh]\n  allow_renumbering = false\n  [TWC]\n    type = AnnularMeshGenerator\n    rmax = 5\n    rmin = 3.5\n    nt = 3200\n    nr = 210\n  []\n[]\n\n#[GlobalParams]\n  #implicit = false\n#[]\n\n#[Problem]\n  #Note that the suffix is left off in the parameter below.\n  #restart_file_base = displacement_t_out_cp/LATEST  # You may also use a specific number here\n#[]\n\n[AuxVariables]\n  [shearband_driving_force]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [bounds_dummy]\n  []\n[]\n\n[Bounds]\n  [irreversibility]\n    type = VariableOldValueBoundsAux\n    variable = bounds_dummy\n    bounded_variable = c\n    bound_type = lower\n  []\n  [upper]\n    type = ConstantBoundsAux\n    variable = bounds_dummy\n    bounded_variable = c\n    bound_type = upper\n    bound_value = 1.0\n  []\n[]\n\n# [ICs]\n#   [pre]\n#     type = BoundingBoxIC\n#     x1 = -0.0044\n#     y1 = 1.75\n#     x2 = 0.0044\n#     y2 = 1.7715\n#     variable = c\n#     inside = 0.999\n#     outside = 0\n#   []\n# []\n\n#[Modules]\n  #[PhaseField]\n   # [Nonconserved]\n     # [c]\n      #  free_energy = F#refers to floc\n       # kappa = kappa_op\n       # mobility = L\n    #  []\n   # []\n # []\n#[]\n\n[Variables]\n  [c]\n  []\n[]\n\n[Kernels]\n  [trans]\n    type = TimeDerivative\n    #lumping = true\n    variable = c\n    #implicit = false\n  []\n  [Bulk]\n    type = AllenCahn\n    variable = c\n    f_name = F\n    mob_name = L\n  []\n  [ACInterface]\n    type = ACInterface\n    variable = c\n    kappa_name = kappa_op\n    mob_name = L\n  []\n[]\n\n[Materials]\n  [pfbulkmat]\n    type = GenericConstantMaterial\n    prop_names = 'gc_prop l visco'\n    prop_values = '23.090706\t0.013744468\t0.363785637' # *2/12 before:/8\n\n    #16.8kj/m^2 = 16.8 1e3 N*m/m^2 = 16.8 1e3 N/m = 16.8 10e3 kg/s^2 = 16.8 miug/mius^2\n    #10 mium = 1e-2 mm\n    #yita~(zhang) = yita* c_a * l/gc = 0.01 mius, c_a = 2\n    #yita(origin) = 0.01*gc/(c_a*l) miug/(mm * mius)\n    #visco(moose) = yita(origin)/gc = yita~(zhang)/(c_a*l) = 0.5 mius/mm\n  []\n  [define_mobility]\n    type = ParsedMaterial\n    material_property_names = 'gc_prop visco'\n    property_name = L\n    expression = '1.0/(gc_prop * visco)'\n  []\n  [define_kappa]\n    type = ParsedMaterial\n    material_property_names = 'gc_prop l'\n    property_name = kappa_op\n    expression = 'gc_prop * l'#kappa = 2gc * l/c_a), c_a = 2\n  []\n  [local_fracture_energy]#c_a = 2, a(d) = d^2, f_frac = (1/c_a) * (gc/l) * a(d)\n    type = DerivativeParsedMaterial\n    property_name = local_fracture_energy\n    coupled_variables = 'c'\n    material_property_names = 'gc_prop l'\n    expression = '(c^2 * gc_prop)/(2 * l)'\n    derivative_order = 2\n  []\n  [fracture_driving_energy]\n    type = DerivativeParsedMaterial\n    coupled_variables = 'c shearband_driving_force'\n    material_property_names = 'local_fracture_energy(c) degradation(c)'\n    expression = 'local_fracture_energy + degradation * shearband_driving_force'\n    derivative_order = 2\n    property_name = F\n  []\n  [degradation]#a1\n  type = DerivativeParsedMaterial\n    property_name = degradation\n    coupled_variables = 'c'\n    expression = '((1.0-c)^2)/(((1.0-c)^2)+a1*c*(1-0.5*c))'\n    constant_names       = 'a1'\n    constant_expressions = '0.8'\n    derivative_order = 2\n  []\n[]\n\n[Executioner]\nverbose=true\n  type = Transient\n   petsc_options_iname = '-pc_type -pc_factor_shift  -snes_type'\n   petsc_options_value = 'lu NONZERO vinewtonrsls'\n\n  [TimeIntegrator]\n    type = ActuallyExplicitEuler\n    solve_type = lumped\n  []\n\n   nl_rel_tol = 1e-8\n   nl_abs_tol = 1e-10\n   l_max_its = 100\n   nl_max_its = 100\n[]\n\nFirst of all, an update: the tensor mechanics section after turning off transmission also shows the same error at a later stage\nTime Step 28994, time = 11.5976, dt = 0.0004\n Solve Converged!\n\nTime Step 28995, time = 11.598, dt = 0.0004\n Solve Converged!\n\nTime Step 28996, time = 11.5984, dt = 0.0004\nlibMesh terminating:\nUnrecoverable failure to converge\n[bithuangsen@ln1 only_tensor_mechanics]$ cat 2971570.err \n--------------------------------------------------------------------------\nMPI_ABORT was invoked on rank 48 in communicator MPI_COMM_WORLD\nwith errorcode 1.\n\nNOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.\nYou may or may not see output from other processes, depending on\nexactly when Open MPI kills them.\n--------------------------------------------------------------------------\n\nThe phase field part after switching off transport is not simulated as it will remain unchanged without a driving force.\n\n\nThe graph above shows their final outputs before and after turning off transfer. They are very close to each other, both are moments when the catastrophic collapse is about to start. Combined with your comment \"it's an error in libmesh\", I think the error may be caused by the mesh being about to distort. But at least looking at the final output, I can't see a big distortion, before and after turning off transfer as shown below.\n\n\nI will use restart and output to the exodus file step by step starting from the approaching error instead of '''interval'''.\nAlso, I'll check the\nsrc/fe/fe_map.C: libmesh_catch (ConvergenceFailure &)\nsrc/geom/cell_tet4.C: libmesh_catch (ConvergenceFailure &)",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8701978",
                          "updatedAt": "2024-03-07T04:02:12Z",
                          "publishedAt": "2024-03-07T04:02:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It seems I need this object JCEOSnl and this file 0.02722-10.txt at least to run this simulation.\nIf you cannot share them, it would be could to create substitutes for a minimal non-working example",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8702066",
                          "updatedAt": "2024-03-07T04:15:03Z",
                          "publishedAt": "2024-03-07T04:15:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Sorry, it was the zip that failed to upload, it's attached now!\nJCEOSnl.zip\n10-0.0005-1-3.zip",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8702688",
                          "updatedAt": "2024-03-07T06:10:01Z",
                          "publishedAt": "2024-03-07T06:10:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi, at the moment of approaching the crash I went through restart and wrote the results of each step to the exodus file and found that the mesh was completely corrupted. Is this situation avoidable?",
                          "url": "https://github.com/idaholab/moose/discussions/26728#discussioncomment-8703677",
                          "updatedAt": "2024-03-07T08:16:05Z",
                          "publishedAt": "2024-03-07T08:16:04Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "how to get a component of the applied shear stress",
          "author": {
            "login": "RWTHLHK"
          },
          "bodyText": "I need the first component of the applied shear stress and its type is MaterialProperty<std::vector<Real>> as I see in CrystalPlasticityKalidindiUpdate. Then, I need to finally compute the element's average value in the postprocessor. I learned that the AuxKernel MaterialRealVectorValueAux is what I need. But I got the error:\nThe following error occurred in the object \"shear_stress0\", of type \"MaterialRealVectorValueAux\".\n\nThe requested non-AD material property 'uncracked_applied_shear_stress' of type 'libMesh::VectorValue<double>'\nis already retrieved or declared as a non-AD property of type 'std::vector<double>' \n\nI know this is because of different type as std::vector<Real> instead of libMesh::VectorValue<double>. But how can I fix this? Or I must write my own auxkernel?",
          "url": "https://github.com/idaholab/moose/discussions/27114",
          "updatedAt": "2024-03-18T09:23:52Z",
          "publishedAt": "2024-03-17T20:40:25Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\njust prefix the auxkernel withAD to use the AD version",
                  "url": "https://github.com/idaholab/moose/discussions/27114#discussioncomment-8821070",
                  "updatedAt": "2024-03-18T01:50:02Z",
                  "publishedAt": "2024-03-17T21:01:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "thanks for your reply. But I still got the error:\n*** ERROR ***\nThe following error occurred in the object \"shear_stress0\", of type \"ADMaterialRealVectorValueAux\".\n\nThe requested AD material property 'uncracked_applied_shear_stress' of type` 'libMesh::VectorValue<double>'`\nis already retrieved or declared as a non-AD property of type `'std::vector<double>`'\n\nI think the reason is MaterialRealVectorValueAux and ADMaterialRealVectorValueAux only support 'libMesh::VectorValue<double>'. And I checked the source code and this is indeed the case.",
                          "url": "https://github.com/idaholab/moose/discussions/27114#discussioncomment-8821191",
                          "updatedAt": "2024-03-18T01:50:18Z",
                          "publishedAt": "2024-03-17T21:38:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "I tried many methods and all failed. This is not a difficult task but it is so hard to do in MOOSE......",
                          "url": "https://github.com/idaholab/moose/discussions/27114#discussioncomment-8821463",
                          "updatedAt": "2024-03-17T23:04:11Z",
                          "publishedAt": "2024-03-17T23:04:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "Sounds like the material is a vector in the c++ container sense, not a vector in the mathematical sense. You should use MaterialStdVectorAux instead of MaterialRealVectorAux",
                          "url": "https://github.com/idaholab/moose/discussions/27114#discussioncomment-8821516",
                          "updatedAt": "2024-03-17T23:27:12Z",
                          "publishedAt": "2024-03-17T23:27:11Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/27114#discussioncomment-8825161",
                          "updatedAt": "2024-03-18T09:23:52Z",
                          "publishedAt": "2024-03-18T09:23:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Tests failing after compilation and generation of executable in an HPC system",
          "author": {
            "login": "arjunvarmar"
          },
          "bodyText": "run_tests_log.txt\nI am trying to run MOOSE on an HPC system. I have finished the installation process as per the documentation and generated the run_tests executable in the test folder in moose. However, when I run the tests, only 2 are successful and the rest fail.\nI am attaching the output log of the run as a txt file herewith.\nOne of the errors that I see here (and also when I submit specific jobs using an example input file) is that the parameters mentioned in the input files are supplied twice.\nFor instance,\n/misc/check_error/bad_kernel_var_test.i:41.5: parameter 'BCs/DirichletBC_type/boundary' supplied multiple times\nI was wondering if anyone has come across this issue before or knows how to resolve it. Any help would be much appreciated.",
          "url": "https://github.com/idaholab/moose/discussions/27109",
          "updatedAt": "2024-03-16T21:43:06Z",
          "publishedAt": "2024-03-15T22:07:10Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "brandonlangley"
                  },
                  "bodyText": "@arjunvarmar -\nI see from looking at your test output log that the problem is your WASP package has an incorrect configuration.\nSpecifically, the DISABLE_HIT_TYPE_PROMOTION CMake variable is turned off for your WASP build when it should be turned on.\nAre you building MOOSE by using the pre-built Conda packages for WASP (and libMesh and PETSc)?\nOr are you building your own WASP by using the scripts/update_and_rebuild_wasp.sh script?",
                  "url": "https://github.com/idaholab/moose/discussions/27109#discussioncomment-8808006",
                  "updatedAt": "2024-03-15T22:45:54Z",
                  "publishedAt": "2024-03-15T22:45:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "brandonlangley"
                          },
                          "bodyText": "@arjunvarmar -\nI missed where you said this is a HPC system, so I assume you are building your own WASP and not using the Conda build.\nAre you calling the scripts/update_and_rebuild_wasp.sh script to build WASP?\nThis script should use a configuration that turns on DISABLE_HIT_TYPE_PROMOTION, but that is not what your failures show.",
                          "url": "https://github.com/idaholab/moose/discussions/27109#discussioncomment-8808050",
                          "updatedAt": "2024-03-15T22:59:26Z",
                          "publishedAt": "2024-03-15T22:54:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "arjunvarmar"
                          },
                          "bodyText": "Thanks a lot for that input. I was trying to use a pre-built module of WASP. When I used the scripts/update_and_rebuild_wasp.sh build instead, the tests ran fine! Thanks again.",
                          "url": "https://github.com/idaholab/moose/discussions/27109#discussioncomment-8814614",
                          "updatedAt": "2024-03-16T21:43:31Z",
                          "publishedAt": "2024-03-16T21:42:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Using the VectorNeumannBC",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I am attempting to use the VectorNeumannBC with the vector velocity. I get the following error:\nNo standard variable named velocity found. Did you specify a vector variable when you meant to specify a standard variable?\nIs it possible to use VectorNeumannBC with the NS variable velocity?",
          "url": "https://github.com/idaholab/moose/discussions/27105",
          "updatedAt": "2024-03-16T02:23:04Z",
          "publishedAt": "2024-03-15T20:43:39Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Which NS? INSAD or INSFE?\nVectorNeumannBC is actually not for vector variables\nFor NS applications you ll have more specific BCs",
                  "url": "https://github.com/idaholab/moose/discussions/27105#discussioncomment-8807345",
                  "updatedAt": "2024-03-15T20:52:00Z",
                  "publishedAt": "2024-03-15T20:52:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "@GiudGiud INSAD. I'm looking the implement the Directional Do Nothing BC.",
                          "url": "https://github.com/idaholab/moose/discussions/27105#discussioncomment-8807451",
                          "updatedAt": "2024-03-15T21:36:13Z",
                          "publishedAt": "2024-03-15T21:10:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "maxnezdyur"
                          },
                          "bodyText": "You want to look at ADVectorFunctionNeumannBC.  This bit me before too!",
                          "url": "https://github.com/idaholab/moose/discussions/27105#discussioncomment-8808286",
                          "updatedAt": "2024-03-15T23:41:18Z",
                          "publishedAt": "2024-03-15T23:41:17Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Solving Eigenvalue problem for a square plate with a circular hole",
          "author": {
            "login": "adhithya96"
          },
          "bodyText": "I am trying to solve the eigenvalue problem for a square plate with a hole using the XFEM and level set modules. I checked out a few examples on the MOOSE repository for both modules and setup an input file for the same. I am getting some output but I am unable to see the circular hole or any change in eigenvalues. The following is the input file I am using\n[GlobalParams]\n    displacements = 'ux uy'\n[]  \n\n[XFEM]\n    geometric_cut_userobjects = 'cut_mesh'\n    qrule = volfrac\n    output_cut_plane = true\n[]\n  \n\n[Mesh]\n    [First]\n        type = FileMeshGenerator\n        file = square.msh\n    []\n[]\n\n[Modules/TensorMechanics/Master]\n    [./all]\n      strain = SMALL\n      planar_formulation = PLANE_STRAIN\n      add_variables = true\n      generate_output = 'stress_xx stress_xy stress_yy stress_zz strain_xx strain_xy strain_yy strain_zz'\n    [../]\n[]\n  \n\n[UserObjects]\n    [cut_mesh]\n      type = InterfaceMeshCut2DUserObject\n      mesh_file = circle_surface.e\n      interface_velocity_function = vel_func\n      #heal_always = true\n    []\n[]\n\n[Functions]\n    [vel_func]\n      type = ConstantFunction\n      value = 0\n    []\n[]\n\n[AuxVariables]\n    [ls]\n      order = FIRST\n      family = LAGRANGE\n    []\n[]  \n\n[Kernels]\n    [eigen1]\n        type = CoefReaction\n        variable = ux\n        coefficient = -1.0\n        extra_vector_tags = 'eigen'\n    []\n\n    [eigen2]\n        type = CoefReaction\n        variable = uy\n        coefficient = -1.0\n        extra_vector_tags = 'eigen'\n    []\n[]\n\n[AuxKernels]\n    [ls]\n      type = MeshCutLevelSetAux\n      mesh_cut_user_object = cut_mesh\n      variable = ls\n      execute_on = 'TIMESTEP_BEGIN'\n    []\n  []\n  \n\n[BCs]\n    [fixed1]\n        type = DirichletBC\n        variable = ux\n        boundary = 'boundary'\n        value = 0\n    []\n    [fixed2]\n        type = DirichletBC\n        variable = uy\n        boundary = 'boundary'\n        value = 0\n    []\n\n[]\n\n[Materials]\n    [./linear_stress]\n        type = ComputeLinearElasticStress\n    [../]\n    [./elasticity_tensor]\n        type = ComputeIsotropicElasticityTensor\n        poissons_ratio = 0.3\n        youngs_modulus = 1e10\n    [../]\n[]\n\n[VectorPostprocessors]\n    [eigen]\n      type = Eigenvalues\n      inverse_eigenvalue = true\n    []\n[]\n  \n#[Postprocessors]\n#    [fluxintegral]\n#      type = ElementIntegralVariablePostprocessor\n#      variable = u\n#      execute_on = linear\n#    []\n#[]\n\n[Problem]\n    type = EigenProblem\n[]\n\n#Linear  eigenvalue solver\n[Executioner]\n    type = Eigenvalue\n    solve_type = arnoldi\n    n_eigen_pairs = 4\n[]\n\n[Outputs]\n    file_base =  eigen_circularhole_out\n    exodus =  true\n    csv = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27072",
          "updatedAt": "2024-03-15T15:59:20Z",
          "publishedAt": "2024-03-13T12:40:14Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI just run your case with a couple meshes that have the same name that I found in the moose folder and I immediately hit this error:\n*** ERROR ***\nThe following error occurred in the object \"cut_mesh\", of type \"InterfaceMeshCut2DUserObject\".\n\ncutFragmentByGeometry not yet implemented for InterfaceMeshCut2DUserObject\n\nso it seems there is some development work to do on this first.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27072#discussioncomment-8777711",
                  "updatedAt": "2024-03-13T19:05:56Z",
                  "publishedAt": "2024-03-13T19:05:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "Oh damn! Will look into the codes and get back to you with more questions. The moose examples have bimaterial interface but none with a hole. I was thinking I'll use it and use zero Young's modulus and poisson's ratio and try but yeah will see what I can do.",
                          "url": "https://github.com/idaholab/moose/discussions/27072#discussioncomment-8778348",
                          "updatedAt": "2024-03-14T11:58:52Z",
                          "publishedAt": "2024-03-13T20:24:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "I tried two things\n\nI used the LevelSetCutUserObject in MOOSE to specify the circular hole using equation $x^2  + y^2 - 25 = 0 $. I used the same square mesh. Some of the input files given as example  had a bimaterial interface. So I used it to change the materials properties to 0 (very close to zero) to see if it'll work. When I use ADTypeproperty, I got mismatch between AD and non-AD property.  When I changed it to nonAD type material  and strains I am getting this error\n\nThe following error occurred in the object \"MOOSE Problem\", of type \"EigenProblem\".\n\nMaterial property 'Jacobian_mult', requested by 'TM_TensorMechanics0' is not defined on block 1\nMaterial property 'Jacobian_mult', requested by 'TM_TensorMechanics1' is not defined on block 1\n\nHow can one mention subdomain when there  is a square and hole in the center ?\n\nI copied one of the examples  of bimaterial from xfem module and changed the executioner and kernel to see if the eigenvalue problem can be coupled with xfem. Ran into this error\n\nThe following error occurred in the object \"MOOSE Problem\", of type \"EigenProblem\".\n\nA libMesh::PetscSolverException was raised during FEProblemBase::computeJacobianTags\nNew nonzero at (0,0) caused a malloc\nUse MatSetOption(A, MAT_NEW_NONZERO_ALLOCATION_ERR, PETSC_FALSE) to turn off this check\n\nI have  added the input files in the github repo in the files titled eigen2d_xfem_trial2.i and eigen2d_xfem_trial3.i",
                          "url": "https://github.com/idaholab/moose/discussions/27072#discussioncomment-8801045",
                          "updatedAt": "2024-03-15T12:05:00Z",
                          "publishedAt": "2024-03-15T12:05:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "How can one mention subdomain when there is a square and hole in the center ?\n\nthe hole is not meshed right? So you dont need to worry about defining a material there\nwhat is block 1 in the mesh?\n\nI copied one of the examples of bimaterial from xfem module and changed the executioner and kernel to see if the eigenvalue problem can be coupled with xfem. Ran into this error\n\nsee other thread. You can allow these re-allocations, which are due to XFEM",
                          "url": "https://github.com/idaholab/moose/discussions/27072#discussioncomment-8803586",
                          "updatedAt": "2024-03-15T15:24:19Z",
                          "publishedAt": "2024-03-15T15:24:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "There is no hole. When the level set module represents a circle, the phantom nodes are created differentiating between the two domains and hence two materials. All the other examples I found in xfem rated to solid mechanics are related to crack propagation. This is the only thing I thought might work.\nWill check out the other threads",
                          "url": "https://github.com/idaholab/moose/discussions/27072#discussioncomment-8803655",
                          "updatedAt": "2024-03-15T15:30:01Z",
                          "publishedAt": "2024-03-15T15:29:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok then define the materials in all the blocks that the equations are defined on. If some equations should not be defined in the hole, then block restrict the kernels or the variables",
                          "url": "https://github.com/idaholab/moose/discussions/27072#discussioncomment-8804060",
                          "updatedAt": "2024-03-15T15:59:20Z",
                          "publishedAt": "2024-03-15T15:59:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Difference between JunctionOneToOne1Phase and VolumeJunction1Phase",
          "author": {
            "login": "SomnusYu"
          },
          "bodyText": "Hi all,\nI would like to know the difference between JunctionOneToOne1Phase and VolumeJunction1Phase in THM.\nIf the simulation is Pipe1-Junction-Pipe2, I think the result using these two junction types should be the same. But I tested it using a lax_shock_tube test, the result is not the same. What's the reason?\nlax_shock_tube_OnetoOne.txt\nlax_shock_tube_VolumeBranch.txt\nResult:",
          "url": "https://github.com/idaholab/moose/discussions/27090",
          "updatedAt": "2024-03-15T14:48:08Z",
          "publishedAt": "2024-03-14T13:52:49Z",
          "category": {
            "name": "Q&A Modules: Thermal Hydraulics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@joshuahansel\nit looks to me like the junctions arent exactly at the same locations",
                  "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8789965",
                  "updatedAt": "2024-03-14T18:08:43Z",
                  "publishedAt": "2024-03-14T18:08:43Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "It is truly at the same location, please see the input file. The discontinuity of JunctionOneToOne1Phase's result is caused by the shock tube, not the junction.",
                          "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8793574",
                          "updatedAt": "2024-03-15T01:28:20Z",
                          "publishedAt": "2024-03-15T01:28:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "joshuahansel"
                  },
                  "bodyText": "One difference between the two is that the volume junction doesn't do any slope reconstruction across the junction (maybe it could after some development? \ud83e\udd14 ). So first compare them both with rdg_slope_reconstruction = none. The differences in the results are quite striking though, so I'd be surprised if that were everything.\nI think the main reason may be the volume you've chosen does not yield an equivalent problem. You have A = 1 and volume = 1, so it's like you're junction is actually L = volume / A = 1 long, twice the length of each of the pipes. For an equivalent problem, probably choose the volume to give you an element length. Then take away one element from one of the connected pipes. Then you probably need to shift the ICs by a half element. Make sense? You basically want to replace one of the elements from the one-to-one junction case with this volume junction.",
                  "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8801346",
                  "updatedAt": "2024-03-15T12:34:41Z",
                  "publishedAt": "2024-03-15T12:34:41Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "I got it! Thanks a lot! I use rdg_slope_reconstruction = none for these two cases, but it still has a little difference. What's the reason?",
                          "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8802032",
                          "updatedAt": "2024-03-15T13:27:15Z",
                          "publishedAt": "2024-03-15T13:27:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "And did you try what I said in the second paragraph too? If so, please supply input files again.",
                          "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8802653",
                          "updatedAt": "2024-03-15T14:13:06Z",
                          "publishedAt": "2024-03-15T14:13:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Yes, I changed volume=_element_lenth * _A = 0.01. Here are the input files.\nlax_shock_tube_VolumeBranch.txt\nlax_shock_tube_OnetoOne.txt",
                          "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8802694",
                          "updatedAt": "2024-03-15T14:16:16Z",
                          "publishedAt": "2024-03-15T14:16:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "It appears you didn't do the element deletion I talked about: For your volume junction input file, shorten the length and number of elements of the right channel by 1 element.",
                          "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8802996",
                          "updatedAt": "2024-03-15T14:41:04Z",
                          "publishedAt": "2024-03-15T14:41:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "What's happening is that your volume junction case has additional length that is not captured in your plot.",
                          "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8803009",
                          "updatedAt": "2024-03-15T14:41:55Z",
                          "publishedAt": "2024-03-15T14:41:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "I understand it! Thanks a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/27090#discussioncomment-8803086",
                          "updatedAt": "2024-03-15T14:47:59Z",
                          "publishedAt": "2024-03-15T14:47:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Couple diffusion and cohesive models",
          "author": {
            "login": "sidharthsarmah"
          },
          "bodyText": "Hi @GiudGiud , @arovinelli :\nI want to couple the concentration of a diffusion problem with the cohesive zone model:\nFor this I want to do something like this:\nSay my Diffusion variable is c\n[Kernels]\n    type = MatDiffusion\n    variable = c\n[]\n\nTHe couple statement is:\nIn [Materials]\nIf c>c0\nCZM is\n  type = TractionLaw1\n  boundary = 'interface'\n  normal_stiffness = 100*(1-c)\n  tangent_stiffness = 100\n normal_jump = 1*(1-c)\n  tangentjump = 100\n[../]\n\nelse\n  type = TractionLaw2\n  boundary = 'interface'\n  normal_stiffness = 200*(1+c)\n  tangent_stiffness = 200\n normal_jump = 1*(1+c)\n  tangentjump = 100\n[../]\n\nPlease suggest incorporating if-else in choosing materials property and coupling cohesive models.",
          "url": "https://github.com/idaholab/moose/discussions/25799",
          "updatedAt": "2024-03-16T17:49:57Z",
          "publishedAt": "2023-10-20T21:40:41Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nMake a 3rd material property that incorporates this if-else condition\nOR\ncombine 1&2 in a single property to be able to host the if-else there",
                  "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7344066",
                  "updatedAt": "2023-10-21T00:10:07Z",
                  "publishedAt": "2023-10-21T00:10:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , I tried finding for an example in the MOOSE directory that could help me sort things but could not, can you please suggest one.\nPlease suggest?",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7348901",
                          "updatedAt": "2023-10-22T06:03:39Z",
                          "publishedAt": "2023-10-22T01:24:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I was thinking of new .C and .h files but ADParsedMaterial should work too!",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7348934",
                          "updatedAt": "2023-10-22T01:47:32Z",
                          "publishedAt": "2023-10-22T01:47:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , @arovinelli ,I got this error:\n*** ERROR ***\n/Users/sidharthsarmah/MOOSE/projects/moose/modules/tensor_mechanics/CZM/Block/elastic.i:182: invalid float syntax for parameter: Materials/czm/maximum_normal_traction=stiff\n/Users/sidharthsarmah/MOOSE/projects/moose/modules/tensor_mechanics/CZM/Block/elastic.i:183: invalid float syntax for parameter: Materials/czm/normal_gap_at_maximum_normal_traction=jump",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7348968",
                          "updatedAt": "2023-10-22T02:50:56Z",
                          "publishedAt": "2023-10-22T02:04:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you need to change the valid param I think\nit s expecting floats for these parameters",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7349023",
                          "updatedAt": "2023-10-22T02:32:54Z",
                          "publishedAt": "2023-10-22T02:32:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "@GiudGiud , this is what I want to achieve.\n\nI have two different traction laws, TSL1 and TSL2 for the cohesive models.\nBased on the variable cL values,\n\n[Kernels]\n    type = MatDiffusion\n    variable = cL\n[]\n\nI want either of the TSL to execute.\n[Materials]\n\n      if (cL >0.5)\n            [./TSL1]\n            type = TractionLaw1\n            boundary = 'interface'\n            normal_stiffness = 100(1-cL)\n            tangent_stiffness = 10\n           normal_jump = 1(1-cL)\n            tangentjump = 10\n          [../]\n\n      else \n  [./TSL2]\n            type = TractionLaw2\n            boundary = 'interface'\n            normal_stiffness = 200(1+cL)\n            tangent_stiffness = 10\n           normal_jump = 2*(1+cL)\n            tangentjump = 10\n   [../]\n\nCan you suggest any example in MOOSE, or which object I need to use for this?",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7349188",
                          "updatedAt": "2023-10-22T06:12:07Z",
                          "publishedAt": "2023-10-22T04:17:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think the ParsedMaterial route should have worked.\nWhat did you try in the input?",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7350814",
                          "updatedAt": "2023-10-22T12:23:07Z",
                          "publishedAt": "2023-10-22T12:23:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , no the conditional on cL does not come into play to switch the material properties, could you suggest something.\n\n  [./CZM_stiffness]\n    type = ADParsedMaterial\n    property_name = stiffness\n    coupled_variables = 'cL'\n    expression = 'if(cL>0.5, 1500*(1-cL), 500'\n    material_property_names = 'Q    R\tT'\n    outputs = exodus\n  [../]\n\n  [./CZM_jump]\n    type = ADParsedMaterial\n    property_name = jump\n    coupled_variables = 'cL'\n    expression = 'if(cL >0.5, 0.25*(1-cL), 0.1'\n    material_property_names = 'Q    R\tT'\n    outputs = exodus\n  [../]\n\n  [./TSL1]\n    type = Traction1\n    boundary = 'interface'\n    maximum_normal_traction = stiffness\n    normal_gap_at_maximum_normal_traction = jump\n    maximum_shear_traction = 1\n    tangential_gap_at_maximum_shear_traction = 0.2\n  [../]\n\n  [./TSL2]\n    type = Traction2\n    boundary = 'interface'\n    maximum_normal_traction = stiffness\n    normal_gap_at_maximum_normal_traction = jump\n    maximum_shear_traction = 1\n    tangential_gap_at_maximum_shear_traction = 0.2\n  [../]\n[]\n\nIs there anything like this:\n expression = 'if(cL >0.5, TSL1 (T0=100*(1-cL), d0=0.25*(1-cL)), TSL2(T0=100*(1+cL), d0=0.25*(1+cL))' instead?",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7350953",
                          "updatedAt": "2023-10-22T13:01:27Z",
                          "publishedAt": "2023-10-22T12:56:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The syntax of the conditions is not right, you need to move that last parenthesis.\nThe TSL, have many material properties do they define? And what name do they use for these properties?\nYou ll have to define a new name for each in the ParsedMaterial(s) and then use that new name in the rest of the input file",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7350967",
                          "updatedAt": "2023-10-22T12:59:47Z",
                          "publishedAt": "2023-10-22T12:59:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , I did not get it.\nI corrected expression = 'if(cL>0.5, 1500*(1-cL), 500)\nThe TSL have 3 max tractions (1 normal and 2 shear) and 3 max jumps (1 normal and 2 shear)\nsay the TSLS are\nhttps://mooseframework.inl.gov/source/materials/cohesive_zone_model/SalehaniIrani3DCTraction.html.\nand\nhttps://mooseframework.inl.gov/source/materials/cohesive_zone_model/PureElasticTractionSeparation.html.\nCan you suggest even if I name one new input, how will I restrict one of the TSL from being active based on cL?",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7351008",
                          "updatedAt": "2023-10-22T13:54:33Z",
                          "publishedAt": "2023-10-22T13:09:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "They are both active and compute a value but it s the ParsedMaterial that makes the selection of the value based on the conditional evaluation and provides the value to the consumer objects",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-7351028",
                          "updatedAt": "2023-10-22T13:14:52Z",
                          "publishedAt": "2023-10-22T13:14:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sidharthsarmah"
                  },
                  "bodyText": "Hi @GiudGiud , I want to add a rate dependent term to the traction law as indicated in red:\n\nStep 1: Define parameter nu in .h, 'const ADMaterialProperty & _nu;':\nPlease suggest, also if Steps 1 and 2 are correct.",
                  "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8724501",
                  "updatedAt": "2024-03-16T17:50:18Z",
                  "publishedAt": "2024-03-08T20:33:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nyou could try using the old material prioperty and the current one and forming the time derivative by dividing the difference by _dt\n(mat - mat_old) / dt\nUse getMaterialPropertyOld to get the old material property. No need to use AD\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8724651",
                          "updatedAt": "2024-03-08T20:49:34Z",
                          "publishedAt": "2024-03-08T20:49:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , is this correct:",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8724828",
                          "updatedAt": "2024-03-16T17:50:37Z",
                          "publishedAt": "2024-03-08T21:09:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You're doing old minus current\nIs this intended? Eg are you propagation a minus sign from elsewhere?",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8724862",
                          "updatedAt": "2024-03-08T21:14:23Z",
                          "publishedAt": "2024-03-08T21:14:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , its : current - old:\n traction_local(i) = viscosity*(_max_allowable_traction(i)/_delta_u0(i))*((_interface_displacement_jump[_qp] - _interface_displacement_jump_old[_qp])/_dt);",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8724876",
                          "updatedAt": "2024-03-08T21:16:49Z",
                          "publishedAt": "2024-03-08T21:15:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , so this is what I did:\n\nDefine new parameters in .h files, Can I define it this way even though the _interface_displacement_jump_old is a vector in 3D:",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8726134",
                          "updatedAt": "2024-03-16T17:50:51Z",
                          "publishedAt": "2024-03-09T01:15:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThis is an easy one to fix. It says right in the error message.\nYou need to order initializations in the constructor initialiser list the same way that they are ordered in the header\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8726984",
                          "updatedAt": "2024-03-09T05:38:35Z",
                          "publishedAt": "2024-03-09T05:38:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud thanks, but my doubt is, the Max traction and displacement are vector value, it is correct to store their old values as material property?\nScheiderViscous::ScheiderViscous(const InputParameters & parameters)\n  : CZMComputeLocalTractionTotalBase(parameters),\n   \n _delta_u0({getParam<Real>(\"normal_gap_at_maximum_normal_traction\"),\n               getParam<Real>(\"tangential_gap_at_maximum_shear_traction\"),\n               getParam<Real>(\"tangential_gap_at_maximum_shear_traction\")}),\n   \n _max_allowable_traction({getParam<Real>(\"maximum_normal_traction\"),\n                             getParam<Real>(\"maximum_shear_traction\"),\n                             getParam<Real>(\"maximum_shear_traction\")}),\n    \n_interface_displacement_jump_old(\n    getMaterialPropertyOld<RealVectorValue>(_base_name + \"interface_displacement_jump\")),",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8730414",
                          "updatedAt": "2024-03-09T16:26:41Z",
                          "publishedAt": "2024-03-09T16:26:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The interface displacement is a vector in your code now.\nAre delta_u and max_traction supposed to be vectors? They are Real in this code.\nIn general there are no issues with working a vector material property, with its current and old values.",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8732653",
                          "updatedAt": "2024-03-10T00:11:54Z",
                          "publishedAt": "2024-03-10T00:11:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "HI @GiudGiud, thanks:\nI still think there is some issue as there was no convergence, could you please check:\n\n.h:",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8737239",
                          "updatedAt": "2024-03-16T17:51:03Z",
                          "publishedAt": "2024-03-10T18:09:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "in 4., this math for the tracition separation derivative doesnt look right.\nyou can only exchange the derivatives if the second derivatives are continuous (Schwarz theorem).\nThen it looks like you are simplifying the 'd' away for the old term.\nI would redo the last step of the derivation in 4 by approximating with the forward Euler time derivative the (delta - delta_old)/d_delta term",
                          "url": "https://github.com/idaholab/moose/discussions/25799#discussioncomment-8738506",
                          "updatedAt": "2024-03-10T22:20:57Z",
                          "publishedAt": "2024-03-10T22:20:57Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Questions about the NS module",
          "author": {
            "login": "Ethan-xj"
          },
          "bodyText": "@GiudGiud Hello guys, I know that the Reactor module can create complex geometry meshes that are related to reactors. Can I use the NS module on the mesh which is created by the Reactor module?\nEthan",
          "url": "https://github.com/idaholab/moose/discussions/27089",
          "updatedAt": "2024-03-15T01:23:52Z",
          "publishedAt": "2024-03-14T11:59:59Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes but you'll want to keep the number of elements down until we merge the scalable solver.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27089#discussioncomment-8787122",
                  "updatedAt": "2024-03-14T14:29:58Z",
                  "publishedAt": "2024-03-14T14:29:57Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "We have scalable solvers for moderate Reynolds number for finite elements",
                          "url": "https://github.com/idaholab/moose/discussions/27089#discussioncomment-8790149",
                          "updatedAt": "2024-03-14T18:28:39Z",
                          "publishedAt": "2024-03-14T18:28:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to set boundary conditions",
          "author": {
            "login": "PEI0214"
          },
          "bodyText": "Hi\uff0c\nI am simulating the shear process of the soil, but when there is a deviating stress, it creates a very large horizontal displacement, which is not normal. What is the reason for this? I set the boundary conditions as follows:\n[Functions]\n  [zhouya]\n    type = PiecewiseLinear\n    x = '0 3600 10800 21600'\n    y = '0 5e5  5e5   1e6'\n  []\n  [weiya]\n    type = PiecewiseLinear\n    x = '0 3600 10800 21600'\n    y = '0 5e5  5e5  5e5'\n  []\n[]\n\n[BCs]\n  [Pressure]\n    [load1]\n      boundary = 'upface'\n      function = zhouya\n    []\n    [load2]\n      boundary = 'boundface'\n      function = weiya\n    []\n  []\n\n  [no_z_disp_at_bottom]\n    type = DirichletBC\n    variable = disp_z\n    value = 0\n    boundary = 'downface'\n  []\n\n  [topdrained]\n    type = DirichletBC\n    variable = porepressure\n    value = 0\n    boundary = 'upface'\n  []\n[]\n\nThanks for your help.",
          "url": "https://github.com/idaholab/moose/discussions/27086",
          "updatedAt": "2024-03-14T16:57:29Z",
          "publishedAt": "2024-03-14T09:35:27Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\n@PEI0214 what units are the pressures in zhouya and weiya?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27086#discussioncomment-8787200",
                  "updatedAt": "2024-03-14T14:36:45Z",
                  "publishedAt": "2024-03-14T14:36:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lynnmunday"
                  },
                  "bodyText": "How many dimensions is your problem?  I only see a bc set on disp_z.",
                  "url": "https://github.com/idaholab/moose/discussions/27086#discussioncomment-8789074",
                  "updatedAt": "2024-03-14T16:57:29Z",
                  "publishedAt": "2024-03-14T16:57:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Frequency domain analysis - two materials",
          "author": {
            "login": "Luca-R27"
          },
          "bodyText": "Hello MOOSE users,\nI am trying to modify the input script that performs a frequency-domain analysis of a cantilever to have it accept several materials. The source example is here:\nmodules/solid_mechanics/examples/wave_propagation/cantilever_sweep.i\nI am reading a mesh from an exodus file where blocks were already pre-defined (blocks 1, 2, ... N). I would like to assign material properties based on the block definitions. The elastic properties is easy and having N snippets like this one works:\n  [elastic_tensor_Al]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 68e9\n    poissons_ratio = 0.36\n    block = 1\n  []\n\nBut I still haven't found a way to define densities based on block definitions. Density is provided in:\n[Functions]\n  [./freq2]\n    type = ParsedFunction\n    symbol_names = density\n    symbol_values = 2.7e3 #Al kg/m3\n    expression = '-t * t * density'\n  [../]\n[]\n\nParsedFunction does not accept a 'block' argument. I tried using variations of if-else statements, like \" expression = if(block==1,'freq1' ,if(block==2, 'freq2', 'freq3')) \". I tried for expression and symbol_names/symbol_values but unsuccessfully.\nAny ideas?\nMany thanks.\nLuca",
          "url": "https://github.com/idaholab/moose/discussions/27071",
          "updatedAt": "2024-03-14T15:04:28Z",
          "publishedAt": "2024-03-13T09:06:59Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nFunctions are global and predefined functions of space and time. They cannot be block restricted.\nWhat object type of the freq123?\nSame question for t and density ?\nIf they are not functions or postprocessors, they cannot be used here. You ll have to use a ParsedMaterial. (Which can be block restricted)\nguillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27071#discussioncomment-8774396",
                  "updatedAt": "2024-03-13T14:46:14Z",
                  "publishedAt": "2024-03-13T14:46:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Luca-R27"
                          },
                          "bodyText": "Hi Guillaume,\nThanks for your reply. So copying from the original example in https://mooseframework.inl.gov/modules/solid_mechanics/1d_elastic_waves.html :\n[Functions]\n  [./freq2]\n    type = ParsedFunction\n    symbol_names = density\n    symbol_values = 2.7e3 #Al kg/m3\n    expression = '-t * t * density'\n  [../]\n[]\n\n[Controls]\n  [./func_control]\n    type = RealFunctionControl\n    parameter = 'Kernels/*/rate'\n    function = 'freq2'\n    execute_on = 'initial timestep_begin'\n  [../]\n[]\n\nFrom here I understand that freq2 is of type FunctionName and density is the name (string) of a variable to which value 2700 is assigned inside the definition of freq2. t is time. This input file was among the examples provided in the solid_mechanics/examples folder. All I need to do is to specify -- based on blocks defined in the ingested mesh -- two different densities. So, if you like, it would be finding the resonances of a bilayered beam of say aluminium (say block = 1) and steel (say block = 2).\nSince RealFunctionControl takes a function as parameter I cannot specify a ParsedMaterial instead of ParsedFunction, unless there's a workaround (?)\nThanks!\nLuca",
                          "url": "https://github.com/idaholab/moose/discussions/27071#discussioncomment-8776683",
                          "updatedAt": "2024-03-13T18:43:55Z",
                          "publishedAt": "2024-03-13T17:26:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok this is fine if t = time and density is a constant.\nThe function will only be sampled at point 0,0,0 in a Control, so there's no point block restricting it.\nMaybe you should have multiple kernels, one for each block, and use one Control for each kernel",
                          "url": "https://github.com/idaholab/moose/discussions/27071#discussioncomment-8777507",
                          "updatedAt": "2024-03-13T18:46:04Z",
                          "publishedAt": "2024-03-13T18:46:03Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Luca-R27"
                          },
                          "bodyText": "This suggestion of multiple kernels and controls worked like a charm. Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/27071#discussioncomment-8787564",
                          "updatedAt": "2024-03-14T15:04:29Z",
                          "publishedAt": "2024-03-14T15:04:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}