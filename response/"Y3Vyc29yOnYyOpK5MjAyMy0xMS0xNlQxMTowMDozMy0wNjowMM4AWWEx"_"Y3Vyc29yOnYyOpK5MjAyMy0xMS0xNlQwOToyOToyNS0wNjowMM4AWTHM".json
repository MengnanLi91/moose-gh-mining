{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0xMS0xNlQwOToyOToyNS0wNjowMM4AWTHM"
    },
    "edges": [
      {
        "node": {
          "title": "BCs in tabular format with PorousFlowSink",
          "author": {
            "login": "vabufano"
          },
          "bodyText": "Hi all,\nas part of a seepage analysis I am performing, I need to apply time-varying flows (constant within each time interval) to an edge of my model.\nSo far, the solution I have found is to set different boundary conditions, each for the various flow values I want to apply, and then enable and disable the conditions with the Control System. However, I would like to set this boundary condition in tabular format, associating each flow value with a time duration, without using the Control System.\nWould it be possible to do something like this?",
          "url": "https://github.com/idaholab/moose/discussions/26076",
          "updatedAt": "2023-11-16T16:58:30Z",
          "publishedAt": "2023-11-16T08:42:05Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "Have you tried a Function(you can even read a csv file if necessary) and passing that to the BC?",
                  "url": "https://github.com/idaholab/moose/discussions/26076#discussioncomment-7585927",
                  "updatedAt": "2023-11-16T09:04:36Z",
                  "publishedAt": "2023-11-16T09:04:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "like this one https://mooseframework.inl.gov/source/functions/PiecewiseLinear.html\nusing a t axis and data from CSV parameter",
                          "url": "https://github.com/idaholab/moose/discussions/26076#discussioncomment-7589460",
                          "updatedAt": "2023-11-16T15:23:28Z",
                          "publishedAt": "2023-11-16T15:23:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vabufano"
                          },
                          "bodyText": "Thank you both. I will definitely try to use the solution proposed. Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/26076#discussioncomment-7590420",
                          "updatedAt": "2023-11-16T16:57:50Z",
                          "publishedAt": "2023-11-16T16:57:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Sweeping a State Variable Using PF",
          "author": {
            "login": "jsevic"
          },
          "bodyText": "This question may be for more general MOOSE use, at the moment I have a PF simulation and one of the variables is an applied external electric potential V. Usually I run a transient simulation for a fixed V, however I would like to simulate to steady-state for say V = 0 to 1 in steps in 0.1 V.\nThank you.",
          "url": "https://github.com/idaholab/moose/discussions/26049",
          "updatedAt": "2023-11-16T16:21:08Z",
          "publishedAt": "2023-11-13T19:06:29Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you use a FunctionAux?\nIs the variable a nonlienar variable or an auxiliary variable?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26049#discussioncomment-7590090",
                  "updatedAt": "2023-11-16T16:21:08Z",
                  "publishedAt": "2023-11-16T16:21:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to define the boundaries of 2D slice cut from 3D model",
          "author": {
            "login": "rh201"
          },
          "bodyText": "Dear MOOSEers,\nI run a 3D simulation first, and cut a cross-section using 'slice' function in paraview to get a 2D model. Then I want to run simulation on the 2D slice with mesh of the slice using FileMesh, but how to define the boundaries of it?  I tried to use boundaries such as \"left right...\" directly, but the error pop up as follow. Thanks.\n\nthe following node sets (ids) do not exist on the mesh: left (1), right (2)",
          "url": "https://github.com/idaholab/moose/discussions/25981",
          "updatedAt": "2023-11-16T16:19:47Z",
          "publishedAt": "2023-11-06T16:31:07Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "richmondodufisan"
                  },
                  "bodyText": "If you know how to write the geometry of the slice mathematically you can use ParsedGenerateSideset with FileMeshGenerator. You can extract whatever postprocessor value you need from there. You might also be able to run a simulation only on that slice by defining it as a block with SubdomainBoundingBoxGenerator (I haven't tried this, but give it a shot)\n[Mesh]\n  [name_1]\n    type = FileMeshGenerator\n    file = <meshfile>\n  []\n  [name_2]\n    type = ParsedGenerateSideset\n    input = name_1\n    combinatorial_geometry =<parsed expression for slice e.g '((z > 0-1e-8) & (z < 0+1e-8))' for a slice at z = 0>\n    new_sideset_name =<what_you_want_to_call it>\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/25981#discussioncomment-7543110",
                  "updatedAt": "2023-11-12T04:44:01Z",
                  "publishedAt": "2023-11-12T01:54:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "rh201"
                          },
                          "bodyText": "thanks. @richmondodufisan",
                          "url": "https://github.com/idaholab/moose/discussions/25981#discussioncomment-7556163",
                          "updatedAt": "2023-11-13T16:32:44Z",
                          "publishedAt": "2023-11-13T16:32:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nOnce you have extracted a slice using this technique, you can turn it into blcoks with this:\nhttps://mooseframework.inl.gov/source/meshgenerators/LowerDBlockFromSidesetGenerator.html\nthen if you want to delete the rest use this first to create an independent mesh:\nhttps://mooseframework.inl.gov/source/meshgenerators/BlockToMeshConverterGenerator.html\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/25981#discussioncomment-7590080",
                          "updatedAt": "2023-11-16T16:19:48Z",
                          "publishedAt": "2023-11-16T16:19:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How stresses/strains are outputted?",
          "author": {
            "login": "hchen139"
          },
          "bodyText": "Hi,\nI'm working on postprocessing stresses/strains from MOOSE simulation. For each element, the stresses/strains are calculated at _qp points of an element. However, when output the stress/strain values using Auxkernel, a single value is outputted for an element. I wonder how this single value for an element is determined. Is this an \"average\" value based on the _qp values of an element? If so, what is the averaging algorithm? Also, is it possible to output all the values for all the _qp points of an element?\nThanks for the help.",
          "url": "https://github.com/idaholab/moose/discussions/26005",
          "updatedAt": "2023-11-16T16:07:44Z",
          "publishedAt": "2023-11-08T22:29:01Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "richmondodufisan"
                  },
                  "bodyText": "How are you getting the output from an AuxKernel? To my understanding those just tell MOOSE what to calculate for an AuxVariable over the domain that variable is defined.\nOn the other hand, a Postprocessor block is what I use to output what I need. If there's a single value being output maybe you can check that block of your input file and see if its a PointValue/NodalSum/ElementAverageValue etc? The full documentation of Postprocessor objects is here: https://mooseframework.inl.gov/syntax/Postprocessors/",
                  "url": "https://github.com/idaholab/moose/discussions/26005#discussioncomment-7543081",
                  "updatedAt": "2023-11-12T01:41:58Z",
                  "publishedAt": "2023-11-12T01:41:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSo if using an AuxKernel, the output is based on the finite element family used for the auxiliary variables.\nThe value of the property is computed at all Qps then there is a least-square solve to pick the coefficients multiplying the shape functions for the variable. So essentially a projection happens under the hood.\nBy default we use constant monomials to output the material properties.  There are material property output parameters on each Material object\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26005#discussioncomment-7589966",
                  "updatedAt": "2023-11-16T16:07:44Z",
                  "publishedAt": "2023-11-16T16:07:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Extract Strain Rate from PorousFlowVolumetricStrain",
          "author": {
            "login": "jrpatterson79"
          },
          "bodyText": "Hello Moose community,\nI'm actively developing and de-bugging a multi-dimensional HM model. The general concept is a 2D horizontal fracture plane embedded in a 3D volume using a conforming mesh generated with Gmsh, both represented as separate subdomains.\nMy understanding is that PorousFlowVolumetricStrain computes the principal and volumetric strain rates. Is it possible to have this material output the zz component of the strain rate at each time step / is there a minimal working example I can follow as a reference? Or is there a different / better approach I should be considering to output strain rates?",
          "url": "https://github.com/idaholab/moose/discussions/26030",
          "updatedAt": "2023-11-16T19:30:22Z",
          "publishedAt": "2023-11-10T21:45:47Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nUse the output_properties parameter to trigger a material property output\nIf you need to find the name of the material properties first, you can get them from show_material_properties in the Debug block\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26030#discussioncomment-7589699",
                  "updatedAt": "2023-11-16T15:44:49Z",
                  "publishedAt": "2023-11-16T15:44:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jrpatterson79"
                          },
                          "bodyText": "Thank you @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/26030#discussioncomment-7589790",
                          "updatedAt": "2023-11-16T15:52:42Z",
                          "publishedAt": "2023-11-16T15:52:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "local paraview in moose env throws seg fault but sustem paraview runs fine",
          "author": {
            "login": "tckosvic"
          },
          "bodyText": "Paraview as run local in moose environment throws seg fault.  See below:\n(moose) tom@localhost:~/projects> paraview\n\nLoguru caught a signal: SIGSEGV\nStack trace:\n36      0x55ff29e018ad paraview(+0x88ad) [0x55ff29e018ad]\n35      0x7f1571828279 __libc_start_main + 139\n34      0x7f15718281b0 /lib64/libc.so.6(+0x281b0) [0x7f15718281b0]\n33      0x55ff29e01592 paraview(+0x8592) [0x55ff29e01592]\n32      0x55ff29e07071 paraview(+0xe071) [0x55ff29e07071]\n31      0x55ff29e0682d paraview(+0xd82d) [0x55ff29e0682d]\n30      0x7f15715894ea pqParaViewBehaviors::pqParaViewBehaviors(QMainWindow*, QObject*) + 2506\n29      0x7f15714dfc4b pqAlwaysConnectedBehavior::pqAlwaysConnectedBehavior(QObject*) + 331\n28      0x7f157072e7b9 pqObjectBuilder::createServer(pqServerResource const&, int) + 409\n27      0x7f156f7c17f5 vtkSMSession::ConnectToSelf(int) + 37\n26      0x7f157174a9fc vtkProcessModule::RegisterSession(vtkSession*) + 172\n25      0x7f156eeef9f2 /home/tom/mambaforge3/envs/moose/bin/../lib/libvtkCommonCore-pv5.10.so.1(+0x4ef9f2) [0x7f156eeef9f2]\n24      0x7f156edd3c79 vtkCallbackCommand::Execute(vtkObject*, unsigned long, void*) + 25\n23      0x7f1571a3a31e /home/tom/mambaforge3/envs/moose/bin/../lib/libvtkGUISupportQt-pv5.10.so.1(+0x2831e) [0x7f1571a3a31e]\n22      0x7f156fbdf5c3 /home/tom/mambaforge3/envs/moose/bin/../lib/libQt5Core.so.5(+0x1df5c3) [0x7f156fbdf5c3]\n21      0x7f15706920e3 pqServerManagerObserver::connectionCreated(long long) + 67\n20      0x7f156fbdf5c3 /home/tom/mambaforge3/envs/moose/bin/../lib/libQt5Core.so.5(+0x1df5c3) [0x7f156fbdf5c3]\n19      0x7f1570780f4d pqServerManagerModel::onConnectionCreated(long long) + 861\n18      0x7f157068ec43 pqServerManagerModel::serverAdded(pqServer*) + 67\n17      0x7f156fbdf5c3 /home/tom/mambaforge3/envs/moose/bin/../lib/libQt5Core.so.5(+0x1df5c3) [0x7f156fbdf5c3]\n16      0x7f1571549c95 pqDefaultViewBehavior::onServerCreation(pqServer*) + 85\n15      0x7f156f6c92f5 vtkPVSessionCore::GatherInformation(unsigned int, vtkPVInformation*, unsigned int) + 389\n14      0x7f156f6c8fc6 vtkPVSessionCore::GatherInformationInternal(vtkPVInformation*, unsigned int) + 54\n13      0x7f156cfb781a vtkPVRenderingCapabilitiesInformation::CopyFromObject(vtkObject*) + 10\n12      0x7f156cfb77ee vtkPVRenderingCapabilitiesInformation::GetLocalCapabilities() + 334\n11      0x7f156bb4bbcd vtkOpenGLRenderWindow::SupportsOpenGL() + 1021\n10      0x7f156bbe9d53 vtkXOpenGLRenderWindow::WindowInitialize() + 19\n9       0x7f156bbed551 vtkXOpenGLRenderWindow::CreateAWindow() + 977\n8       0x7f15658435b4 /lib64/libGLX.so.0(+0x1b5b4) [0x7f15658435b4]\n7       0x7f15603b5378 /lib64/libGLX_mesa.so.0(+0x42378) [0x7f15603b5378]\n6       0x7f15603b4fd1 /lib64/libGLX_mesa.so.0(+0x41fd1) [0x7f15603b4fd1]\n5       0x7f153dedd3d7 /usr/lib64/dri/swrast_dri.so(+0xdd3d7) [0x7f153dedd3d7]\n4       0x7f153dedb8e0 /usr/lib64/dri/swrast_dri.so(+0xdb8e0) [0x7f153dedb8e0]\n3       0x7f157189528f /lib64/libc.so.6(+0x9528f) [0x7f157189528f]\n2       0x7f153e0a54eb /usr/lib64/dri/swrast_dri.so(+0x2a54eb) [0x7f153e0a54eb]\n1       0x7f15603532a3 _glapi_add_dispatch + 147\n0       0x7f157183f190 /lib64/libc.so.6(+0x3f190) [0x7f157183f190]\n(   0.648s) [paraview        ]                       :0     FATL| Signal: SIGSEGV\nSegmentation fault (core dumped)\n(moose) tom@localhost:~/projects> `\n\nBut separate system paraview run with /usr/bin/paraview starts up fine and can access moose output file at least for Example1.\nNot a major issue since I can view output using system paraview.  I reinstalled local paraview in moose env using conda but no change.  Any one have idea of what is killing local paraview.\ntom kosvic",
          "url": "https://github.com/idaholab/moose/discussions/26018",
          "updatedAt": "2023-11-16T15:48:26Z",
          "publishedAt": "2023-11-10T01:01:13Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "@grmnptr or @lindsayad You have a local Linux machine right? Can you mamba create paraview paraview and see if it launches?\nAlso, when I attempted to do the same, the first run failed. A second worked. Very odd.\n\u276f mamba create -n paraview paraview\n\u276f mamba activate paraview\n\u276f paraview\ndyld[7821]: Library not loaded: @rpath/libQt5Widgets.5.dylib\n  Referenced from: <FD4987AE-247F-39AC-A7D7-A1AD55254246> /Users/milljm/mambaforge3/pkgs/paraview-5.11.2-py312hfea8ab8_102_qt/Applications/paraview.app/Contents/MacOS/paraview\n  Reason: tried: '/Users/milljm/mambaforge3/pkgs/paraview-5.11.2-py312hfea8ab8_102_qt/Applications/paraview.app/Contents/MacOS/../../../../lib/libQt5Widgets.5.dylib' (no such file), '/Users/milljm/mambaforge3/pkgs/paraview-5.11.2-py312hfea8ab8_102_qt/Applications/paraview.app/Contents/MacOS/../../../../lib/libQt5Widgets.5.dylib' (no such file), '/usr/local/lib/libQt5Widgets.5.dylib' (no such file), '/usr/lib/libQt5Widgets.5.dylib' (no such file, not in dyld cache)\nzsh: abort      paraview\n\u276f paraview       <----- this worked immediately after the above error... lol?\n\nEDIT: What I am getting at, is that this feels finicky.",
                  "url": "https://github.com/idaholab/moose/discussions/26018#discussioncomment-7534442",
                  "updatedAt": "2023-11-10T14:41:15Z",
                  "publishedAt": "2023-11-10T14:40:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I do but I do not have mamba installed. If @grmnptr can't help, then I'll install it and test this",
                          "url": "https://github.com/idaholab/moose/discussions/26018#discussioncomment-7535647",
                          "updatedAt": "2023-11-10T16:58:47Z",
                          "publishedAt": "2023-11-10T16:58:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "@tckosvic, Is this a Windows WSL instance? Or a full-native Linux machine? Also, what Linux flavor are you running? As well as CPU architecture (x86_64, arm64, etc).\nThanks!",
                          "url": "https://github.com/idaholab/moose/discussions/26018#discussioncomment-7554059",
                          "updatedAt": "2023-11-13T13:25:48Z",
                          "publishedAt": "2023-11-13T13:25:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Symbol Names in ParsedFunction",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I am having to define functions similar to the one below for a large number of objects. I would like to define the constants used in this case as symbol_names as global parameters that do not have to be defined each and every time as in the below example. Is there a way to reduce the repitetion of constant value definition for each function that will have to be defined?\n  [./p14displ_x]\n    type = ParsedFunction \n    symbol_names = 'A P02 tau2 m xf zf yf xi_1 xi_2 Vmax t0 n'    \n    symbol_values = '7.85e-7 1e6 2.0e-3 2.0e-6 4.77e-3 0.0 0.0 1.53e5 6.375e6 392.5 8.0e-4 2'           \n    expression = 'if(t < t0*n, 1e-1*t+x, (A*P02*tau2/m*(1-exp(-(t0*n)/tau2))/xi_1*(1-exp(-xi_1*t))/Vmax)+x)'# x+(A*P02*tau2/m*(1-exp(-t/tau2)))*sin(cot((yf-y)/(xf-x))) #(A*P02*tau2/m*(1-exp(-t/tau2)))*sin(cot((yf-y)/(xf-x))))\n  []",
          "url": "https://github.com/idaholab/moose/discussions/25963",
          "updatedAt": "2023-11-16T15:47:36Z",
          "publishedAt": "2023-11-04T00:16:06Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "richmondodufisan"
                  },
                  "bodyText": "At the top of your input file (not within any block), you can define the parameter\nparam = 0\nand then access it anywhere within any block with ${param}",
                  "url": "https://github.com/idaholab/moose/discussions/25963#discussioncomment-7543117",
                  "updatedAt": "2023-11-12T01:57:12Z",
                  "publishedAt": "2023-11-12T01:57:02Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "yes that is correct. So something like:\nA = 7.85e-7\nP02 = 1e6\n....\n\n\n...\n[Functions]\n   [./p14displ_x]\n    type = ParsedFunction \n    symbol_names = 'A P02 ...'    \n    symbol_values = '${A} ${P02} ...'           \n    expression = 'if(t < t0*n, 1e-1*t+x, (A*P02*tau2/m*(1-exp(-(t0*n)/tau2))/xi_1*(1-exp(-xi_1*t))/Vmax)+x)'# x+(A*P02*tau2/m*(1-exp(-t/tau2)))*sin(cot((yf-y)/(xf-x))) #(A*P02*tau2/m*(1-exp(-t/tau2)))*sin(cot((yf-y)/(xf-x))))\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/25963#discussioncomment-7589729",
                          "updatedAt": "2023-11-16T15:47:35Z",
                          "publishedAt": "2023-11-16T15:47:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Is the PorousFlowEffectiveStressCoupling kernel compulsory?",
          "author": {
            "login": "steam-simulator"
          },
          "bodyText": "Hello,\nI\u2019m conducting a Thermo-hydro-mechanical simulation using the porous flow module. I\u2019m wondering whether the PorousFlowEffectiveStressCoupling kernel is compulsory for this simulation. When is it advisable to ignore it? Thanks.",
          "url": "https://github.com/idaholab/moose/discussions/26020",
          "updatedAt": "2023-11-17T06:48:11Z",
          "publishedAt": "2023-11-10T04:21:43Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIf you remove this you are decoupling the thermo-hydro and the mechanical parts. The fluid pressure gradient stress term wont exist to affect the displacements.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26020#discussioncomment-7589670",
                  "updatedAt": "2023-11-16T15:43:21Z",
                  "publishedAt": "2023-11-16T15:43:12Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Trouble with ParsedMaterial",
          "author": {
            "login": "AlexSacMorane"
          },
          "bodyText": "Dear all,\nI am using MOOSE to solve a Phase-Field problem but I have trouble with a ParsedMaterial.\nYou will find my code in the following. I got an error from the if condition in the material expected '=' after parameter name '0.03', got ','\nI would like to define a variable kappa_psi depending on the value of the variable psi.\nHow can I correct my code?\nI stay available\nThanks in advance\nRegards\nAlexandre\n---------------------------------------------------\n\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 250\n  ny = 250\n  nz = 0\n  xmin = -1.5\n  xmax = 1.5\n  ymin = -1.5\n  ymax = 1.5\n  elem_type = QUAD4\n[]\n\n[GlobalParams]\n  outputs = exodus\n[]\n\n[Variables]\n  active = 'psi'\n  [./psi]\n    order = FIRST\n    family = LAGRANGE\n    [./InitialCondition]\n      type = SmoothCircleIC\n      invalue = 1\n      outvalue = 0\n      radius = 1\n      x1 = 0\n      y1 = 0\n      int_width = 0.15\n    [../]\n  [../]\n[]\n\n[Kernels]\n  active = 'dpsidt ACBulk_psi ACInterface_psi'\n\n  [./dpsidt]\n    type = TimeDerivative\n    variable = psi\n  [../]\n  [./ACBulk_psi]\n    type = AllenCahn\n    variable = psi\n    mob_name = L_psi\n    f_name = g_psi\n  [../]\n  [./ACInterface_psi]\n    type = ACInterface\n    variable = psi\n    mob_name = L_psi\n    kappa_name = kappa_psi\n  [../]\n\n[]\n\n[Materials]\n  active = 'consts var free_energy_psi'\n\n  [./consts]\n    type = GenericConstantMaterial\n    prop_names  = 'L_psi'\n    prop_values = '1'\n  [../]\n\n  [./free_energy_psi]\n    type = DerivativeParsedMaterial\n    block = 0\n    f_name = g_psi\n    args = 'psi'\n    constant_names = 'A_psi B_psi C_psi'\n    constant_expressions = '46.5 -83. 31.5'\n    function = 'A_psi * psi^4+B_psi * psi^3+C_psi * psi^2'\n    enable_jit = true\n    derivative_order = 2\n  [../]\n\n  [./var]\n    type = ParsedMaterial\n    property_name = kappa_psi\n    coupled_variables = 'psi'\n    function = if(psi>0.5, 0.03, 0.01)\n  [../]\n[]\n\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  scheme = 'bdf2'\n  solve_type = 'NEWTON'\n\n  l_max_its = 20\n  l_tol = 1.0e-4\n  l_abs_tol = 1.0e-6\n\n  nl_max_its = 10\n  nl_rel_tol = 1.0e-4\n  nl_abs_tol = 1.0e-6\n\n  start_time = 0.0\n  end_time   = 1\n\n  [./TimeStepper]\n    type = SolutionTimeAdaptiveDT\n    dt = 0.1\n  [../]\n[]\n\n[Outputs]\n  execute_on = 'initial timestep_end'\n  exodus = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/25990",
          "updatedAt": "2023-11-16T15:33:21Z",
          "publishedAt": "2023-11-07T11:44:01Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Can you try putting quotes around your function?",
                  "url": "https://github.com/idaholab/moose/discussions/25990#discussioncomment-7502232",
                  "updatedAt": "2023-11-07T18:31:23Z",
                  "publishedAt": "2023-11-07T18:31:22Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "AlexSacMorane"
                          },
                          "bodyText": "I tried with quotes function = 'if(psi>0.5, 0.03, 0.01)' but I get an error Invalid function if(psi>0.5, 0.03, 0.01) in ParsedMaterialHelper. Syntax error: Unknown identifier",
                          "url": "https://github.com/idaholab/moose/discussions/25990#discussioncomment-7502459",
                          "updatedAt": "2023-11-07T18:58:00Z",
                          "publishedAt": "2023-11-07T18:57:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "You need to fix this line\nfunction = 'A_psipsi^4+B_psipsi^3+C_psi*psi^2'\n\npresumably you want a * between the psis in psipsi?",
                          "url": "https://github.com/idaholab/moose/discussions/25990#discussioncomment-7502565",
                          "updatedAt": "2023-11-07T19:11:22Z",
                          "publishedAt": "2023-11-07T19:11:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "In the future please paste the whole error as that will make it easier to help you",
                          "url": "https://github.com/idaholab/moose/discussions/25990#discussioncomment-7502570",
                          "updatedAt": "2023-11-07T19:11:55Z",
                          "publishedAt": "2023-11-07T19:11:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AlexSacMorane"
                          },
                          "bodyText": "Thanks for your answer. Unfortunately, the error is not coming from here (the * were here, github erased them editing my text).\nYou will find the whole error in the following.\n\n*** ERROR ***\nInvalid function\nif(psi>0.5, 0.03, 0.01)\nin ParsedMaterialHelper.\nSyntax error: Unknown identifier\nStack frames: 19\n0: libMesh::print_trace(std::ostream&)\n1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::__cxx11::basic_string<char, std::char_traits, std::allocator >)\n2: void mooseError<char const (&) [18], std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, char, std::__cxx11::basic_string<char, std::char_traits, std::allocator >&, char const (&) [27], char const*>(char const (&) [18], std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, char&&, std::__cxx11::basic_string<char, std::char_traits, std::allocator >&, char const (&) [27], char const*&&)\n3: ParsedMaterialHelper::functionParse(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::allocator<std::__cxx11::basic_string<char, std::char_traits, std::allocator > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::allocator<std::__cxx11::basic_string<char, std::char_traits, std::allocator > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::allocator<std::__cxx11::basic_string<char, std::char_traits, std::allocator > > > const&, std::vector<PostprocessorName, std::allocator > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::allocator<std::__cxx11::basic_string<char, std::char_traits, std::allocator > > > const&, std::vector<double, std::allocator > const&)\n4: ParsedMaterialTempl::ParsedMaterialTempl(InputParameters const&)\n5: /home/asacmora/projects/moose/framework/libmoose-opt.so.0(+0x15cc598) [0x7f8399bb3598]\n6: Factory::create(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, InputParameters const&, unsigned int, bool)\n7: /home/asacmora/projects/moose/framework/libmoose-opt.so.0(+0x120bfeb) [0x7f83997f2feb]\n8: FEProblemBase::addMaterialHelper(std::vector<MaterialWarehouse*, std::allocator<MaterialWarehouse*> >, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, InputParameters&)\n9: FEProblemBase::addMaterial(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, InputParameters&)\n10: Action::timedAct()\n11: ActionWarehouse::executeActionsWithAction(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&)\n12: ActionWarehouse::executeAllActions()\n13: MooseApp::runInputFile()\n14: MooseApp::run()\n15: main\n16: /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7f8391907d90]\n17: __libc_start_main\n18: /home/asacmora/projects/moose/modules/phase_field/phase_field-opt(+0x240f) [0x564355e1840f]\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\n\nIt seems Moose does not recognize psi, even if it is declared in the coupled variables.",
                          "url": "https://github.com/idaholab/moose/discussions/25990#discussioncomment-7507645",
                          "updatedAt": "2023-11-08T08:43:08Z",
                          "publishedAt": "2023-11-08T08:43:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I ran your input yesterday. When I put quotes around 'if(psi>0.5, 0.03, 0.01)' and made the suggested edit to the other parsed function, it ran fine for me",
                          "url": "https://github.com/idaholab/moose/discussions/25990#discussioncomment-7513609",
                          "updatedAt": "2023-11-08T17:43:52Z",
                          "publishedAt": "2023-11-08T17:43:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AlexSacMorane"
                          },
                          "bodyText": "Thanks for your time and your discussion.",
                          "url": "https://github.com/idaholab/moose/discussions/25990#discussioncomment-7514698",
                          "updatedAt": "2023-11-08T19:43:02Z",
                          "publishedAt": "2023-11-08T19:43:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Execution order of functions in UserObject and Material systems",
          "author": {
            "login": "NorthMagic"
          },
          "bodyText": "I want to update material properties in each linear iteration of a PJFNK calculation. So a material object derived from GenericConstantMaterial is constructed, and the computeQpProperties() is dependent on a self-defined function's return value to update the material properties. The self-defined function is constructed in a UserObject object which is derived from ElementIntegralUserObject. What I want is running execute() method along all elements and gathering values in finalize() method in each linear iteration, then the self-defined function will return a correct value when it is called by computeQpProperties(). However, I found that the self-defined function was called before finalize() so I got a wrong return value checked in the debug mode.\nHere is the related execution order:\n      0 Linear |R| = 4.176985e+02\n[DBG] Computing elemental user objects on LINEAR\n[DBG] Ordering of User Objects on block 1\n[DBG] Executing ElementUserObject on LINEAR\n[DBG] Order of execution:\n[DBG] sph\n                             \n[DBG] Only user objects active on local element/sides are executed\n[DBG] Ordering of User Objects on block 2\n[DBG] Executing ElementUserObject on LINEAR\n[DBG] Order of execution:\n[DBG] sph\n\nHere is the related part in the input file:\n[Materials]\n  [openmc_mgxs]\n    type = OpenMCXSMaterial\n    indexed_by_subdomain_name = true\n    openmc_userobject = openmc\n    sph_userobject = sph\n  []\n[]\n\n[UserObjects]\n  [openmc]\n    type = RunOpenMCUO\n    mgxs_cell = 'fuel moderator'\n   []\n   [sph]\n      type = SPHFactorUO\n      openmc_userobject = openmc\n      group_fluxes = 'group_1 group_2'\n      execute_on = LINEAR\n    []\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = PJFNK\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n[]",
          "url": "https://github.com/idaholab/moose/discussions/26038",
          "updatedAt": "2023-11-16T15:29:25Z",
          "publishedAt": "2023-11-13T07:17:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Before executing user objects, materials will be computed. See the relevant source code here:\nvoid\nComputeUserObjectsThread::onElement(const Elem * elem)\n{\n  _fe_problem.prepare(elem, _tid);\n  _fe_problem.reinitElem(elem, _tid);\n\n  // Set up Sentinel class so that, even if reinitMaterials() throws, we                                              \n  // still remember to swap back during stack unwinding.                                                              \n  SwapBackSentinel sentinel(_fe_problem, &FEProblem::swapBackMaterials, _tid);\n  _fe_problem.reinitMaterials(_subdomain, _tid);\n\n  for (const auto & uo : _element_objs)\n  {\n    uo->execute();",
                  "url": "https://github.com/idaholab/moose/discussions/26038#discussioncomment-7557940",
                  "updatedAt": "2023-11-13T19:37:02Z",
                  "publishedAt": "2023-11-13T19:37:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "When you copied GenericConstantMaterial to make your material, did you make sure to delete this line:\nparams.set(\"constant_on\") = \"SUBDOMAIN\";\nor is the discretization of your SPH factors by subdomains?",
                          "url": "https://github.com/idaholab/moose/discussions/26038#discussioncomment-7589519",
                          "updatedAt": "2023-11-16T15:30:24Z",
                          "publishedAt": "2023-11-16T15:29:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}