{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wOS0wNVQxMToyMDo1MS0wNTowMM4AVTJu"
    },
    "edges": [
      {
        "node": {
          "title": "\"Zigzagging\" side sets in gmsh 2.5D meshes",
          "author": {
            "login": "ln53"
          },
          "bodyText": "I've been generating disjoint 2D meshes in 3D space using Gmsh. After the mesh has been processed by MOOSE (and opened in ParaView), the side sets (which should be straight along the edges) are in the pictured \"zigzag\" or \"stitched\" pattern.\n\nThis happens using Gmsh physical groups to specify sidesets, as well as ParsedGenerateSideset, SideSetsFromNormalsGenerator, and various other side set generators.\nIt only seems to happen when there are multiple disjoint meshes in 3D  - individual 2D meshes or disjoint & coplanar 2D meshes both behave as expected.\nMWE image and code under dropdowns below.\n\n\n\n Mesh generation with Gmsh Python API \nimport gmsh\nocc = gmsh.model.occ\ngmsh.initialize()\n\nocc.addRectangle(0, 0, 0, 1, 1)\nocc.addRectangle(0, 0, 0.5, 1, 1)\nocc.synchronize()\n\ngmsh.model.addPhysicalGroup(1, [1], name=\"MWE_Sideset\")\ngmsh.option.setNumber(\"Mesh.MeshSizeMax\", 0.1)\ngmsh.option.setNumber(\"Mesh.SaveAll\", 1)\ngmsh.model.mesh.generate()\ngmsh.write(\"MWE.msh\")\n\n\n\n MOOSE input file mesh block \n[Mesh]\n  [mesh]\n    type = FileMeshGenerator\n    file = 'MWE.msh'\n  []\n  #   [sideset2]\n  #     type = SideSetsFromNormalsGenerator\n  #     input = mesh\n  #     normals = '1 0 0'\n  #     new_boundary = 'MWE_Sideset2'\n  #   []\n  #   [sideset3]\n  #     type = ParsedGenerateSideset\n  #     input = mesh\n  #     combinatorial_geometry = 'x = 0 & z = 0'\n  #     new_sideset_name = 'MWE_Sideset3'\n  #   []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/24630",
          "updatedAt": "2023-09-08T07:17:01Z",
          "publishedAt": "2023-06-08T15:37:51Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "This looks like fundamentally an issue in our gmsh mesh reader. @roystgnr or I will have to investigate to see what's going on, but I can't promise a fix soon",
                  "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6124445",
                  "updatedAt": "2023-06-08T16:06:25Z",
                  "publishedAt": "2023-06-08T16:06:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I've created an issue from this: #24631",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6124462",
                          "updatedAt": "2023-06-08T16:07:53Z",
                          "publishedAt": "2023-06-08T16:07:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ln53"
                          },
                          "bodyText": "Okay, thanks for the update.",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6130303",
                          "updatedAt": "2023-06-09T08:05:02Z",
                          "publishedAt": "2023-06-09T08:05:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ln53"
                          },
                          "bodyText": "An additional case if it helps:\n\nFileMeshGenerator importing a rectangular \"plate\" generated in Gmsh: sidesets display fine.\nAdding a GeneratedMeshGenerator plate (and combining with Gmsh plane, and translating in-plane): sidesets still display fine.\nTranslating the new plate out-of-plane: sidesets display issue.\nAdding a GeneratedMeshGenerator 3D box instead of plate: sidesets display issue.\n\nSo it seems the problem is with 2D gmsh meshes and any additions to the 3rd dimension.",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6150637",
                          "updatedAt": "2023-06-12T09:53:08Z",
                          "publishedAt": "2023-06-12T09:53:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "Check out #24631; I think the problem's with paraview.  I don't need a mesh generator to trigger it; I can do so with vim.",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6168058",
                          "updatedAt": "2023-06-13T22:02:47Z",
                          "publishedAt": "2023-06-13T22:02:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ln53"
                          },
                          "bodyText": "@roystgnr Thanks for looking into it. In that case I imagine my MOOSE models should run fine despite the odd looking sidesets in ParaView? I will raise this on the ParaView forum instead!",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6171265",
                          "updatedAt": "2023-06-14T07:29:59Z",
                          "publishedAt": "2023-06-14T07:29:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "In that case I imagine my MOOSE models should run fine despite the odd looking sidesets in ParaView?\n\nYes, but remember that \"convergence studies\" and \"manufactured solutions\" are standard subcategories of \"verification\", whereas \"imagination\" is not.  ;-)  If you're writing new models you should generally be double-checking your convergence rate against a benchmark problem in any case; if you're just assembling existing MOOSE kernels then normally I'd say you can trust us but this might be a case where trust-but-verify is a better philosophy.",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6174818",
                          "updatedAt": "2023-06-14T13:09:41Z",
                          "publishedAt": "2023-06-14T13:09:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ln53"
                          },
                          "bodyText": "Indeed! We're using existing shell/solid mechanics kernels and doing some validation against NASTRAN - I hadn't even bothered running the models when I saw this issue, but now I know it's only a ParaView artefact I'll press on. Thanks again.",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6174867",
                          "updatedAt": "2023-06-14T13:13:13Z",
                          "publishedAt": "2023-06-14T13:13:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "There appears to be a little model of Tinsley Oden living in my head, who insists on pointing out that code-to-code comparisons are still just a \"verification\" (\"solving the equations right\") subcategory; it's not \"validation\" (\"solving the right equations\") until you're comparing to experimental data for your problem too.",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6174970",
                          "updatedAt": "2023-06-14T13:20:53Z",
                          "publishedAt": "2023-06-14T13:20:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ln53"
                          },
                          "bodyText": "@roystgnr update on this, it seems Paraview is behaving as expected (albeit a little confusingly) - here's the relevant excerpt from the ParaView thread:\n\nFrom Greg Sjaardema, the designer and developer of the Exodus format:\nOK, took me too long to figure out what is happening. For a 4-noded element, we have a quad in 2D and a shell in 3D. However, when we started using 3-noded elements more, we decided for some reason to name both the 3D shell version and the 2D planar version \u201ctriangle\u201d or \u201ctri\u201d.\nWe then determine whether it is a normal 3-sided two-dimensional triangular element, or a \u201c5-sided\u201d triangular shell element based on the dimensionality of the database.\nIn this case, we have a three dimensional database, so the \u201ctri\u201d elements in the element block are \u201ctriangular shell\u201d elements.\nGiven a triangular shell with connectivity <1 2 3>, we have:\nFace 1 is triangle front face with connectivity 1 2 3\nFace 2 is triangle back face with reverse connectivity 3 2 1\nFace 3 is first edge with connectivity 1 2. [ This is face 1 in a 2d triangle element]\nFace 4 is second edge \u2013 2 3\nFace 5 is third edge \u2013 3 1\nThe mesh you have is assuming that the elements are 3-sided elements and the \u201csides\u201d are all edges, so the side numbering is off by 2. \u2014 They should have all sides as \u20185\u2019 instead of \u20183\u2019 to get the sideset definition that they think they have.\nHope that makes sense.\n\u2026Greg\n\nThis is outlined under the \"Triangular\" section of the Exodus II element types documentation, suggesting MOOSE is off by 2 when numbering the edges. I removed Gmsh from the equation just to be sure, and managed to produce a similar issue in MWE_2 below. This should add the triangle edges along the mesh boundary to the sideset, but selects some of the triangle faces and at least one \"jaggy\" edge.\n\n\nMWE_2.i\n[Mesh]\n  [poly]\n    type = PolyLineMeshGenerator\n    points = '0 0 0\n              0 1 0\n              1 1 0\n              1 0 0'\n    loop = true\n  []\n  [triangulate]\n    type = XYDelaunayGenerator\n    boundary = 'poly'\n    add_nodes_per_boundary_segment = 9\n    refine_boundary = false\n    desired_area = 0.007\n  []\n  [duplicate]\n    type = CombinerGenerator\n    inputs = 'triangulate'\n    positions = '0 0 0 0 0 0.5'\n  []\n  [sideset]\n    type = ParsedGenerateSideset\n    input = 'duplicate'\n    combinatorial_geometry = 'z = 0 & x = 0'\n    new_sideset_name = 'mwe_sideset'\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6302640",
                          "updatedAt": "2023-06-28T10:26:57Z",
                          "publishedAt": "2023-06-28T09:24:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "Well, that's horrifying.  I'll see if I can fix it in our ExodusII_IO.",
                          "url": "https://github.com/idaholab/moose/discussions/24630#discussioncomment-6305250",
                          "updatedAt": "2023-06-28T13:51:53Z",
                          "publishedAt": "2023-06-28T13:51:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Geochemistry module question",
          "author": {
            "login": "Fruitwind"
          },
          "bodyText": "Dear MOOSE team,\nwe are  learning to apply the geochemistry module with the self-developed application to run 1D calcite dissolution with acidic injected water (pH=4).  I have two questions about applying the module and am grateful for any input or suggestion:\n\n\nThe example is on the developing stage, but I faced the issue with being able to run the simulations with the version  of geochemistry module of 30.04 and  not being able to run it with the version of 30.07.\n\n\nWhile running the simulations, I receive negative concentrations on the first time steps which obviously should not happen.\n\n\nWould you have any idea what could be the reason for both of these issues?\nI am providing below the geochemistry input file:\n\nchem_THC1D.txt\nThanks a lot and a great day,\nElena",
          "url": "https://github.com/idaholab/moose/discussions/25096",
          "updatedAt": "2023-09-07T23:46:40Z",
          "publishedAt": "2023-08-03T14:16:13Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@WilkAndy @rpodgorney",
                  "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6628613",
                  "updatedAt": "2023-08-03T14:23:29Z",
                  "publishedAt": "2023-08-03T14:23:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Fruitwind"
                          },
                          "bodyText": "Dear @WilkAndy @rpodgorney, dear @GiudGiud ,\nI have been trying to resolve the abovementioned issue with negative concentrations of H+ with unfortunately no success, and I would highly appreciate any advice on how to proceed with it. In addition, I noticed reported negative concentration in one of examples given in MOOSE-Geochemistry simulations: table 9 in:\nhttps://mooseframework.inl.gov/modules/geochemistry/tests_and_examples/geotes_weber_tensleep.html#table:model_bulk\nConcentrations of H+ and O2(aq) are negative. Could you please provide some comment on that?\nMany thanks and have a great day,\nElena",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6852451",
                          "updatedAt": "2023-08-29T12:05:14Z",
                          "publishedAt": "2023-08-29T12:05:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nDid you try the Bounds system? That forces variables to stay within a range\nhttps://mooseframework.inl.gov/source/auxkernels/ConstantBoundsAux.html",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6854293",
                          "updatedAt": "2023-08-29T15:00:35Z",
                          "publishedAt": "2023-08-29T15:00:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Fruitwind"
                  },
                  "bodyText": "upd. Not sure if I need to make another post, but when I do the Multiapp copy tranfer with the transport, the geochemistry module simulation overwrites the boundary condition in the transport (Dirichlet BC with the constant concentrations)",
                  "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6629176",
                  "updatedAt": "2023-08-03T15:15:17Z",
                  "publishedAt": "2023-08-03T15:15:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "that s normal. Transfers can overwrite inital conditions for a variable.\nIf you dont want that, transfer with an execute_on of TIMESTEP_END",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6629245",
                          "updatedAt": "2023-08-03T15:21:46Z",
                          "publishedAt": "2023-08-03T15:21:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Fruitwind"
                          },
                          "bodyText": "Thank you! The fact is, we are using the Dirichlet boundary condition with the fixed concentration, and the fixed concentration is overwritten.",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6629261",
                          "updatedAt": "2023-08-03T15:23:10Z",
                          "publishedAt": "2023-08-03T15:23:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Fruitwind"
                          },
                          "bodyText": "preset option is on and we do the TIMESTEP_END transfer",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6629264",
                          "updatedAt": "2023-08-03T15:23:40Z",
                          "publishedAt": "2023-08-03T15:23:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you apply the DirichletBC in the app that provides the data for the transfer too?",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6629283",
                          "updatedAt": "2023-08-03T15:26:17Z",
                          "publishedAt": "2023-08-03T15:26:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Fruitwind"
                          },
                          "bodyText": "we use Geochemistry module of MOOSE to update the reactions and send it to the transport simulation. The BC is set in the transport app, while it cannot be set up in the Geochemistry module. The problem is, the BC for the solute transport in the transport app are overwritten by Geochemistry.",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6629337",
                          "updatedAt": "2023-08-03T15:32:28Z",
                          "publishedAt": "2023-08-03T15:32:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Fruitwind"
                          },
                          "bodyText": "update: we set up transfer to  Geochemistry TIMESTEP_BEGINNING and it seems to work. The issues above keep being a problem.",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6629428",
                          "updatedAt": "2023-08-03T15:44:16Z",
                          "publishedAt": "2023-08-03T15:44:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MengnanLi91"
                          },
                          "bodyText": "Have you tried to run a batch simulation with just Geochemistry module?  It may be easier to figure out the problem. One issue I find with your constraint is that you don't actually  have a fixed pH=4 in your setup. If you have a fixed pH for your chemical reaction, you should reflect it using constraint_species and constraint_value, usually is the log10activity  of H+",
                          "url": "https://github.com/idaholab/moose/discussions/25096#discussioncomment-6942553",
                          "updatedAt": "2023-09-07T23:47:02Z",
                          "publishedAt": "2023-09-07T23:46:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Changing subdomains based on element types",
          "author": {
            "login": "TheGreatCid"
          },
          "bodyText": "Hi all,\nDoes MOOSE have the capability to read a mesh and reassign the subdomains for elements of a specified type?\nFor example, I have a mesh of HEX8's and TET4's on subdomain 1. I want to create a new subdomain, remove the HEX8's from subdomain 1, and move them onto the new subdomain.\nThen, as an aside, if anyone knows how to perform this in GMSH, advice there would be welcome as well.\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/25425",
          "updatedAt": "2023-09-07T19:43:50Z",
          "publishedAt": "2023-09-07T18:12:00Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Yes\nplease use the meshrepairgenerator with the separate element type parameter\nyou ll have to use this Generator after loading the mesh",
                  "url": "https://github.com/idaholab/moose/discussions/25425#discussioncomment-6940838",
                  "updatedAt": "2023-09-07T19:20:45Z",
                  "publishedAt": "2023-09-07T19:20:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This is a fairly new capability you will need moose to be up to date for this",
                          "url": "https://github.com/idaholab/moose/discussions/25425#discussioncomment-6940852",
                          "updatedAt": "2023-09-07T19:22:59Z",
                          "publishedAt": "2023-09-07T19:22:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "Just updated and tested it. It works great! Thank you for the response",
                          "url": "https://github.com/idaholab/moose/discussions/25425#discussioncomment-6940983",
                          "updatedAt": "2023-09-07T19:43:47Z",
                          "publishedAt": "2023-09-07T19:43:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Offline installation of Moose compilation error",
          "author": {
            "login": "09liu"
          },
          "bodyText": "I install moose on a computer without an internet connection and successfully compile petsc and libmesh(https://mooseframework.inl.gov/getting_started/installation/offline_installation.html). But I meet an error when I compile moose. What caused this error and how can I fix it. @hugary1995\noutput.txt",
          "url": "https://github.com/idaholab/moose/discussions/25391",
          "updatedAt": "2023-09-07T15:53:23Z",
          "publishedAt": "2023-09-03T13:50:15Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "This looks to me like a mismatch between your MOOSE version and your libMesh/TIMPI version. Did you recursively update submodules?",
                  "url": "https://github.com/idaholab/moose/discussions/25391#discussioncomment-6897658",
                  "updatedAt": "2023-09-03T16:06:49Z",
                  "publishedAt": "2023-09-03T16:06:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "09liu"
                          },
                          "bodyText": "I meet the same error as https://github.com/idaholab/moose/discussions/21342?sort=top. So I install libtirpc-1.1.4-5.el8.x86_64 and libtirpc-devel-1.1.4-5.el8.x86_64 before compile libmesh. In addition, I install mpich-3.4.2 due to my computer's system is RHEL8.4 without mpich. Is it because of the problem with their version\uff1f",
                          "url": "https://github.com/idaholab/moose/discussions/25391#discussioncomment-6904304",
                          "updatedAt": "2023-09-04T12:18:50Z",
                          "publishedAt": "2023-09-04T12:18:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Alex is talking about MOOSE and libmesh versions.\n\nHow did you obtain both codes to install offline?\nCan you give us the current commit for moose and libmesh? cd into each folder and type git log HEAD",
                          "url": "https://github.com/idaholab/moose/discussions/25391#discussioncomment-6905093",
                          "updatedAt": "2023-09-04T13:52:28Z",
                          "publishedAt": "2023-09-04T13:52:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Also will need to know the TIMPI hash. You can run\ngit submodule status \u2014recursive",
                          "url": "https://github.com/idaholab/moose/discussions/25391#discussioncomment-6905467",
                          "updatedAt": "2023-09-04T14:35:30Z",
                          "publishedAt": "2023-09-04T14:35:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "09liu"
                          },
                          "bodyText": "I want to use the program developed on the updated moose in July 2022, so I downloaded the latest version of moose first.\nhttps://mooseframework.inl.gov/getting_started/installation/offline_installation.html\ngit clone https://github.com/idaholab/moose.git cd moose git checkout master git submodule update --init git submodule foreach --recursive git submodule update --init\nThen I use the following command for version rollback.\ngit reset --hard ccf25ce\nFinally I install moose  on a computer without an internet connection. The following are the results I obtaine using the command.\n\n\nmoose:\ncommit ccf25ce (HEAD -> master)\nMerge: 27d8863 3bb5876\nAuthor: moosetest bounces@inl.gov\nDate:   Wed Jul 13 22:46:33 2022 -0600\nMerge commit '3bb5876c5c3f29649f426ff5535f8a3007658acb'\n\n\nlibmesh:\ncommit fd900b54a02b9d1b99f0a4371d4acb4761e57b0f (HEAD)\nMerge: c965dd619 9341cc9bc\nAuthor: Roy H. Stogner Roy.Stogner@inl.gov\nDate:   Tue Jul 25 08:06:06 2023 -0500\nMerge pull request #3604 from roystgnr/l2_hierarchic_prism\nHierarchic (and L2_HIERARCHIC) FE prism support\n\n\ngit submodule status:\n[liu@localhost moose_22.7]$ git submodule status\n+08357135db54e430770ee8433f5e6e9735e2c931 large_media (remotes/origin/phase_field_old_wiki-128-g0835713)\n+fd900b54a02b9d1b99f0a4371d4acb4761e57b0f libmesh (cpp03_final-8761-gfd900b54a)\nf855b95493736b087b8ccc16dc6c5b29bc4b5aa8 petsc (v3.16.5-15-gf855b954937)",
                          "url": "https://github.com/idaholab/moose/discussions/25391#discussioncomment-6934265",
                          "updatedAt": "2023-09-07T07:34:49Z",
                          "publishedAt": "2023-09-07T07:34:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Well no you can't do that.\nYou reset MOOSE to this old version, you did not reset libmesh or timpi.\nWe do not advise you do that at all.\nPlease use the latest moose version and update your application to make it work with this latest MOOSE. This is the path of least effort and of least bugs!",
                          "url": "https://github.com/idaholab/moose/discussions/25391#discussioncomment-6938702",
                          "updatedAt": "2023-09-07T15:19:37Z",
                          "publishedAt": "2023-09-07T15:19:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Yea the rolled back moose is not going to work with the new submodule hashes. If you really want to use that moose version you should run the git submodule update command after checking out the old moose",
                          "url": "https://github.com/idaholab/moose/discussions/25391#discussioncomment-6938721",
                          "updatedAt": "2023-09-07T15:21:32Z",
                          "publishedAt": "2023-09-07T15:21:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "09liu"
                          },
                          "bodyText": "So I should use the follow command to aligne the version of moose and libmesh .\ncd ~/projects\ngit clone https://github.com/idaholab/moose.git\ncd moose\ngit reset --hard ccf25ce\ngit checkout master\ngit submodule update --init\ngit submodule foreach --recursive git submodule update --init\n\n\nmoose\ncommit ccf25ce (HEAD -> master, next)\nMerge: 27d8863 3bb5876\nAuthor: moosetest bounces@inl.gov\nDate:   Wed Jul 13 22:46:33 2022 -0600\nMerge commit '3bb5876c5c3f29649f426ff5535f8a3007658acb'\n\n\nlibmesh\ncommit 4747096de5d6c69ed79f28e38ce45c76546364c3 (HEAD)\nMerge: b50932009 fd6ba0e0a\nAuthor: Roy H. Stogner Roy.Stogner@inl.gov\nDate:   Fri Jun 3 13:23:45 2022 -0500\nMerge pull request #3311 from roystgnr/matrix_dual_decl\nUse declarations header for declarations\n\n\ngit submodule status:\ne1211aaf2dec766e9a8e2da1631ee2f36ec7c5de large_media (remotes/origin/phase_field_old_wiki-67-ge1211aa)\n4747096de5d6c69ed79f28e38ce45c76546364c3 libmesh (cpp03_final-7575-g4747096de)\nf855b95493736b087b8ccc16dc6c5b29bc4b5aa8 petsc (v3.16.5-15-gf855b954937)\n\n\nNow their versions seem to match, I will try to install again.",
                          "url": "https://github.com/idaholab/moose/discussions/25391#discussioncomment-6939116",
                          "updatedAt": "2023-09-07T15:53:24Z",
                          "publishedAt": "2023-09-07T15:53:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "aspect ratio distribution of 2d grains",
          "author": {
            "login": "liang-tech"
          },
          "bodyText": "Hello. Does MOOSE have the function to calculate aspect ratio distribution of 2d grains?\nIn the phase-field simulation, we can get a final grain structure. Then we focus on the geometric properties of grains that are related to ellipses fitted to the grains and calculate aspect ratio distribution like the pictures.",
          "url": "https://github.com/idaholab/moose/discussions/25417",
          "updatedAt": "2023-09-07T15:25:54Z",
          "publishedAt": "2023-09-07T02:02:39Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "@dschwen",
                  "url": "https://github.com/idaholab/moose/discussions/25417#discussioncomment-6938778",
                  "updatedAt": "2023-09-07T15:25:55Z",
                  "publishedAt": "2023-09-07T15:25:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Failing CIVET test under \"Build unit test\"",
          "author": {
            "login": "smpark7"
          },
          "bodyText": "I'm working on a PR to remove various deprecated code in Moltres. After replacing ModulesApp::registerAll with ModulesApp::registerAllObjects<MoltresApp> and other associated changes, the CI test for the PR fails at the \"Build unit test\" stage. Here's the link to the Civet test results: https://civet.inl.gov/job/1749366/\nIt seems to be related to the Reactor module. Do I need to make additional changes to accommodate compiling reactor with Moltres?",
          "url": "https://github.com/idaholab/moose/discussions/25406",
          "updatedAt": "2023-09-06T15:19:36Z",
          "publishedAt": "2023-09-05T22:01:29Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNothing comes to mind rn. @permcody were there specific changes for unit tests to do?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25406#discussioncomment-6921128",
                  "updatedAt": "2023-09-06T04:58:33Z",
                  "publishedAt": "2023-09-06T04:58:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "permcody"
                  },
                  "bodyText": "The easy fix is to make sure the set of modules for your Unit Makefile\nexactly matches your main application Makefile.\n\u2026\nOn Tue, Sep 5, 2023 at 10:58 PM Guillaume Giudicelli < ***@***.***> wrote:\n Hello\n\n Nothing comes to mind rn. @permcody <https://github.com/permcody> were\n there specific changes for unit tests to do?\n\n Guillaume\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#25406 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAXFOIBSDVREPGNMMD26Z73XY77IHANCNFSM6AAAAAA4MM2TMA>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/25406#discussioncomment-6925672",
                  "updatedAt": "2023-09-06T13:07:15Z",
                  "publishedAt": "2023-09-06T13:07:14Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "smpark7"
                          },
                          "bodyText": "This fixed the issue. Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/25406#discussioncomment-6927224",
                          "updatedAt": "2023-09-06T15:19:37Z",
                          "publishedAt": "2023-09-06T15:19:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "FV vs FE memory consumption",
          "author": {
            "login": "heinono1"
          },
          "bodyText": "Hi,\nI am testing my  FV version of the Ferret app and it seems like it consumes a LOT more memory than the FE version. Is this generally the case (or is there perhaps something goofy with my FV implementation)?",
          "url": "https://github.com/idaholab/moose/discussions/25407",
          "updatedAt": "2023-09-06T13:56:45Z",
          "publishedAt": "2023-09-05T22:12:06Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "One thing you can try is setting cache_cell_gradients = false in your variable blocks",
                  "url": "https://github.com/idaholab/moose/discussions/25407#discussioncomment-6919222",
                  "updatedAt": "2023-09-05T22:24:56Z",
                  "publishedAt": "2023-09-05T22:24:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "heinono1"
                          },
                          "bodyText": "Thanks, Alex. I'll give it a shot.",
                          "url": "https://github.com/idaholab/moose/discussions/25407#discussioncomment-6926258",
                          "updatedAt": "2023-09-06T13:56:45Z",
                          "publishedAt": "2023-09-06T13:56:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Keep Block Array Data - Mesh Operations With --mesh-only",
          "author": {
            "login": "Florian-Konrad"
          },
          "bodyText": "Hi there :)\nI'm running some mesh manipulations (eg refinement) on an exodus file containing material parametrization as block arrays. I'm doing that with an input file containing only the mesh block together with --mesh-only.\nI prefer to do the mesh stuff in a separate step and would still like to be able use the block array information in the subsquent simulations (input files that only use FileMeshGenerator, loading the manipulated and checked mesh file).\nIs there a way to keep element data when using --mesh-only? I tried use_for_exodus_restart = true with my FileMeshGenerator without any effect.\nCheers\nFlorian",
          "url": "https://github.com/idaholab/moose/discussions/25319",
          "updatedAt": "2023-09-06T07:54:58Z",
          "publishedAt": "2023-08-28T14:55:36Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes in the filemeshgenerator you use this parameter:\nexodus_extra_element_integers\nto keep the element integers that are already defined on the mesh\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25319#discussioncomment-6843951",
                  "updatedAt": "2023-08-28T15:37:20Z",
                  "publishedAt": "2023-08-28T15:37:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Florian-Konrad"
                          },
                          "bodyText": "Awesome, works! I totally overlooked this.  Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/25319#discussioncomment-6844540",
                          "updatedAt": "2023-08-28T16:25:09Z",
                          "publishedAt": "2023-08-28T16:25:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Florian-Konrad"
                          },
                          "bodyText": "oh I just noticed that this is only working with integers as the name of the parameter suggests. My material values eg are rock permeability which are floats like 1e-14 and this gets rounded to zero. Any way to preserve these values?",
                          "url": "https://github.com/idaholab/moose/discussions/25319#discussioncomment-6849984",
                          "updatedAt": "2023-08-29T07:35:02Z",
                          "publishedAt": "2023-08-29T07:35:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nYes! That s a different thing. In your file_mesh_generator add use_for_exodus_restart then in your auxvariables, you specify the initial_from_file_var field.\nYou can also specify the step\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/25319#discussioncomment-6854312",
                          "updatedAt": "2023-08-29T15:02:38Z",
                          "publishedAt": "2023-08-29T15:02:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Florian-Konrad"
                          },
                          "bodyText": "this is possible while using --mesh-only flag?",
                          "url": "https://github.com/idaholab/moose/discussions/25319#discussioncomment-6855360",
                          "updatedAt": "2023-08-29T16:30:07Z",
                          "publishedAt": "2023-08-29T16:30:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "nope",
                          "url": "https://github.com/idaholab/moose/discussions/25319#discussioncomment-6855654",
                          "updatedAt": "2023-08-29T16:59:37Z",
                          "publishedAt": "2023-08-29T16:59:36Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Florian-Konrad"
                          },
                          "bodyText": "alright thanks! :)",
                          "url": "https://github.com/idaholab/moose/discussions/25319#discussioncomment-6922433",
                          "updatedAt": "2023-09-06T07:54:58Z",
                          "publishedAt": "2023-09-06T07:54:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "August 2023 MOOSE Newsletter",
          "author": {
            "login": "cticenhour"
          },
          "bodyText": "The August 2023 MOOSE Newsletter has been released! A summary of the content is below:\n\nMOOSE Improvements\n\nFin heat transfer enhancement functor materials added\nGenerating images on-the-fly in MooseDocs\nFunctor Neumann boundary condition\nCylindrical gap heat flux functor material\nNearest-point layered side averages for functors\nPost-processors can now be used in functor parameters\nComponent to apply heat flux from an external application\nParsed functor material\nTime interval times\nMesh repairs during the mesh generation/loading phase\n\n\nBug Fixes and Minor Enhancements",
          "url": "https://github.com/idaholab/moose/discussions/25402",
          "updatedAt": "2023-09-05T17:24:13Z",
          "publishedAt": "2023-09-05T17:24:12Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Error on make after update",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I performed a mamba update all and updates to moose last night. Upon attempting to perform make of the modules, I am getting the following error:\nfatal error: DistributedForce.h: No such file or directory\nWhat is the possible solutions to avoid this error?",
          "url": "https://github.com/idaholab/moose/discussions/25384",
          "updatedAt": "2023-09-05T16:20:51Z",
          "publishedAt": "2023-09-01T19:19:04Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "Without knowing what mamba packages you updated to, you may have run into the following (just a guess): #25358",
                  "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6888981",
                  "updatedAt": "2023-09-01T19:26:15Z",
                  "publishedAt": "2023-09-01T19:26:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "The potential solution as presented did not fix the issue. Here is a more detail to the error:\n/home/twise/projects/moose/modules/navier_stokes/src/kernels/DistributedPower.C:10:10: fatal error: DistributedPower.h: No such file or directory\n10 | #include \"DistributedPower.h\"\n|          ^~~~~~~~~~~~~~~~~~~~\ncompilation terminated.\nmake: *** [/home/twise/projects/moose/framework/build.mk:144: /home/twise/projects/moose/modules/navier_stokes/build/unity_src/kernels_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\nmake: *** Waiting for unfinished jobs....",
                  "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6909049",
                  "updatedAt": "2023-09-05T01:29:10Z",
                  "publishedAt": "2023-09-05T01:29:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThis looks odd. Does the file exist? Look in navier_stokes/include/kernels for DistributedPower.h (your current error) and DistributedForce.h (the first one you pasted)\nDid the clone of the moose repo go well? What does git diff and git status return ?",
                          "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6909193",
                          "updatedAt": "2023-09-05T02:02:18Z",
                          "publishedAt": "2023-09-05T02:02:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "The DistributedForce.h  file does not exit, however there is a file DistributedForce.C. I'll check the git diff and git status as soon as I have  an opportunity. Thanks.\n\nGet Outlook for iOS<https://aka.ms/o0ukef>\n\u2026\n________________________________\nFrom: Guillaume Giudicelli ***@***.***>\nSent: Monday, September 4, 2023 10:02:28 PM\nTo: idaholab/moose ***@***.***>\nCc: Wise, Tammy ***@***.***>; Author ***@***.***>\nSubject: Re: [idaholab/moose] Error on make after update (Discussion #25384)\n\n\nHello\n\nThis looks odd. Does the file exist? Look in navier_stokes/include/kernels for DistributedPower.h (your current error) and DistributedForce.h (the first one you pasted)\n\nDid the clone of the moose repo go well? What does git diff and git status return ?\n\n\u2014\nReply to this email directly, view it on GitHub<#25384 (reply in thread)>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AJQ6AYW6YF77XXWFHHOUDADXY2B3JANCNFSM6AAAAAA4H65WSU>.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6909344",
                  "updatedAt": "2023-09-05T02:29:26Z",
                  "publishedAt": "2023-09-05T02:29:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think the clone must have failed to download it. It s in the repo, I checked",
                          "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6909439",
                          "updatedAt": "2023-09-05T02:50:47Z",
                          "publishedAt": "2023-09-05T02:50:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "either that or a gremlin deleted it from your folder",
                          "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6909440",
                          "updatedAt": "2023-09-05T02:51:01Z",
                          "publishedAt": "2023-09-05T02:51:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "It appears during the update --all process most of the .h files in this directory were deleted: modules/navier_stokes/include/kernels/",
                  "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6910853",
                  "updatedAt": "2023-09-05T07:18:56Z",
                  "publishedAt": "2023-09-05T07:18:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "If we're talking about mamba update --all, that process does not have the ability to delete files anywhere other than in $CONDA_PREFIX.\nBut also, mamba update --all is not the correct solution for this round of updates. Please visit the sticky post for more details on how to properly 'update' to the latest moose packages: #25358",
                          "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6913877",
                          "updatedAt": "2023-09-05T12:33:40Z",
                          "publishedAt": "2023-09-05T12:33:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "when I run the \"make\" command, I get the following message: /home/twise/projects/moose/framework/app.mk:209: warning: ignoring old recipe for target '/home/twise/projects/moose/modules/navier_stokes/build/header_symlinks/DistributedForce.h'",
                  "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6912572",
                  "updatedAt": "2023-09-05T10:04:46Z",
                  "publishedAt": "2023-09-05T10:04:45Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "make clobberall will help for that",
                          "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6913864",
                          "updatedAt": "2023-09-05T12:32:23Z",
                          "publishedAt": "2023-09-05T12:32:23Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "I used the clobberall, that appears to have got MOOSE functional again. With all that I have attempted to try, all of my previous folders and work in the module folders is no longer there. Luckily I have some backups on a separate disk to retrieve some of my work.",
                          "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6916288",
                          "updatedAt": "2023-09-05T16:03:36Z",
                          "publishedAt": "2023-09-05T16:03:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I'm sorry to hear about this inconvenience.\nmake clobberall is fairly safe with regards to deletions iirc. git clean -xfd is a lot more dangerous in that regard",
                          "url": "https://github.com/idaholab/moose/discussions/25384#discussioncomment-6916444",
                          "updatedAt": "2023-09-05T16:20:52Z",
                          "publishedAt": "2023-09-05T16:20:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}