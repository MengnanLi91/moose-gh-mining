{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0xMi0wMVQxNzo0NTo0OS0wNjowMM4AWkCW"
    },
    "edges": [
      {
        "node": {
          "title": "How to get historical maximum values?",
          "author": {
            "login": "RWTHLHK"
          },
          "bodyText": "For some reason I have to get historical maximum values of elements or nodes and then use them to compute some free energy. But after reading documentation, I find there is seemingly no material object or kernels that can do that. Am I right? And how can I get such maximum values?",
          "url": "https://github.com/idaholab/moose/discussions/26236",
          "updatedAt": "2023-12-04T17:14:45Z",
          "publishedAt": "2023-12-03T21:08:42Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nUse a MaterialRealAux to store the material property in an auxiliary variable.\nThen use a parsed expression with a max() in it in a ParsedAux to keep the max of the current and previous max of the variable.\nThis will give you a spatially dependent max.\nIf you need a single value, use an ElementExtremeValue postprocessor on the variable\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26236#discussioncomment-7747018",
                  "updatedAt": "2023-12-03T22:05:18Z",
                  "publishedAt": "2023-12-03T22:05:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "Thanks! It works.",
                          "url": "https://github.com/idaholab/moose/discussions/26236#discussioncomment-7755694",
                          "updatedAt": "2023-12-04T17:14:46Z",
                          "publishedAt": "2023-12-04T17:14:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "CP using neper mesh",
          "author": null,
          "bodyText": "Hello,\nI want to use the FiniteStrainCrystalPlasticity material with a neper generated mesh but I am getting a constitutive failure error in the FiniteStrainCrystalPlasticity block. When I use normal Moose generated mesh with Voronoi tessellation I do not get any error and it works fine. Am I missing a step here for using a neper mesh with moose ?",
          "url": "https://github.com/idaholab/moose/discussions/26208",
          "updatedAt": "2023-12-04T11:33:08Z",
          "publishedAt": "2023-11-30T16:14:51Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@amassaf what's the printout for the error on the console?\n@laagesen @dschwen  who uses neper we could tag?",
                  "url": "https://github.com/idaholab/moose/discussions/26208#discussioncomment-7719937",
                  "updatedAt": "2023-11-30T16:24:56Z",
                  "publishedAt": "2023-11-30T16:24:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": null,
                          "bodyText": "*** ERROR ***\nThe following error occurred in the object \"crysp\", of type \"FiniteStrainCrystalPlasticity\".\nFiniteStrainCrystalPlasticity: Constitutive failure",
                          "url": "https://github.com/idaholab/moose/discussions/26208#discussioncomment-7719993",
                          "updatedAt": "2023-11-30T16:30:07Z",
                          "publishedAt": "2023-11-30T16:30:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sapitts"
                  },
                  "bodyText": "The class FiniteStrainCrystalPlasticity is no longer actively developed and is deprecated. We recommend using the crystal plasticity capabilities in the ComputeMultipleCrystalPlasticityStress and CrystalPlasticityKalidindiUpdate combination, which is actively being developed. Please see the documentation here.",
                  "url": "https://github.com/idaholab/moose/discussions/26208#discussioncomment-7720040",
                  "updatedAt": "2023-11-30T16:34:21Z",
                  "publishedAt": "2023-11-30T16:34:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": null,
                          "bodyText": "OK thank you, I will look into it.",
                          "url": "https://github.com/idaholab/moose/discussions/26208#discussioncomment-7720077",
                          "updatedAt": "2023-11-30T16:38:36Z",
                          "publishedAt": "2023-11-30T16:38:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "@amassaf  I made a youtube video about this:\nhttps://www.youtube.com/watch?v=qG7EoX34hZ8&t=1s\nand there's an example here:\nhttps://github.com/ngrilli/c_pfor_am/tree/main/test/tests/neper\nthe main issue being reading the node sets, therefore I used the bounding box node set generator",
                  "url": "https://github.com/idaholab/moose/discussions/26208#discussioncomment-7731191",
                  "updatedAt": "2023-12-01T16:10:41Z",
                  "publishedAt": "2023-12-01T16:10:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": null,
                          "bodyText": "Hello, Thank you I will check this out.",
                          "url": "https://github.com/idaholab/moose/discussions/26208#discussioncomment-7744187",
                          "updatedAt": "2023-12-03T15:21:07Z",
                          "publishedAt": "2023-12-03T15:21:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": null,
                          "bodyText": "Hello, thank you so much this has been very useful. I noticed that in your example you use ComputeElasticityTensorCPGrain and for GrainPropertyReadFile to be able to define euler angles, is this still required now after updates to be able to use neper mesh with moose? because the changes in the neper2moose.txt aren't needed anymore, right? Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/26208#discussioncomment-7752101",
                          "updatedAt": "2023-12-04T11:33:09Z",
                          "publishedAt": "2023-12-04T11:33:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Navier Stokes Module in Combined Module",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I have found that when I used the combined app (freshly installed MOOSE) that there are postprocessors from the Navier Stokes app that are not available for use in the combined app. Is there a way for me to point the combined app to the directory in the NS app that has the required postprocessors? I have found that copying the .h and .C files to a folder used by the combined app allows me use of the post processors. Some of the postprocessors are too convoluted and connected to multiple other files to use a copying method to use them.",
          "url": "https://github.com/idaholab/moose/discussions/26235",
          "updatedAt": "2023-12-04T04:36:26Z",
          "publishedAt": "2023-12-03T19:52:32Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe combined app should include NS, moving the files should not be necessary.\nAre you on linux or macos? Can you ldd (linux) / otool -L (macos) the combined executable please?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7747656",
                  "updatedAt": "2023-12-04T00:01:28Z",
                  "publishedAt": "2023-12-04T00:01:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Is this the correct syntax for the information that you requested? ~/projects/moose/modules/combined$ ldd /bin/ls",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7747935",
                          "updatedAt": "2023-12-04T01:06:12Z",
                          "publishedAt": "2023-12-04T01:06:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ldd combined-opt\nin that same directory",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7747957",
                          "updatedAt": "2023-12-04T01:11:21Z",
                          "publishedAt": "2023-12-04T01:11:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Lots of information follows. Thanks for taking a look.:\nlinux-vdso.so.1 (0x00007ffc623fd000)\nlibcombined_test-opt.so.0 => /home/twise/projects/moose/modules/combined/test/lib/libcombined_test-opt.so.0 (0x00007f218eab9000)\nlibcombined-opt.so.0 => /home/twise/projects/moose/modules/combined/lib/libcombined-opt.so.0 (0x00007f218eaa9000)\nlibxfem-opt.so.0 => /home/twise/projects/moose/modules/xfem/lib/libxfem-opt.so.0 (0x00007f218e600000)\nlibscalar_transport-opt.so.0 => /home/twise/projects/moose/modules/scalar_transport/lib/libscalar_transport-opt.so.0 (0x00007f218ea32000)\nlibporous_flow-opt.so.0 => /home/twise/projects/moose/modules/porous_flow/lib/libporous_flow-opt.so.0 (0x00007f218e000000)\nlibphase_field-opt.so.0 => /home/twise/projects/moose/modules/phase_field/lib/libphase_field-opt.so.0 (0x00007f218d600000)\nlibperidynamics-opt.so.0 => /home/twise/projects/moose/modules/peridynamics/lib/libperidynamics-opt.so.0 (0x00007f218d200000)\nliboptimization-opt.so.0 => /home/twise/projects/moose/modules/optimization/lib/liboptimization-opt.so.0 (0x00007f218d021000)\nlibfsi-opt.so.0 => /home/twise/projects/moose/modules/fsi/lib/libfsi-opt.so.0 (0x00007f218e9a3000)\nlibcontact-opt.so.0 => /home/twise/projects/moose/modules/contact/lib/libcontact-opt.so.0 (0x00007f218cc00000)\nlibstochastic_tools-opt.so.0 => /home/twise/projects/moose/modules/stochastic_tools/lib/libstochastic_tools-opt.so.0 (0x00007f218c400000)\nlibrichards-opt.so.0 => /home/twise/projects/moose/modules/richards/lib/librichards-opt.so.0 (0x00007f218c000000)\nlibreactor-opt.so.0 => /home/twise/projects/moose/modules/reactor/lib/libreactor-opt.so.0 (0x00007f218d43e000)\nliblevel_set-opt.so.0 => /home/twise/projects/moose/modules/level_set/lib/liblevel_set-opt.so.0 (0x00007f218e8d1000)\nlibgeochemistry-opt.so.0 => /home/twise/projects/moose/modules/geochemistry/lib/libgeochemistry-opt.so.0 (0x00007f218ce61000)\nlibfunctional_expansion_tools-opt.so.0 => /home/twise/projects/moose/modules/functional_expansion_tools/lib/libfunctional_expansion_tools-opt.so.0 (0x00007f218df34000)\nlibexternal_petsc_solver-opt.so.0 => /home/twise/projects/moose/modules/external_petsc_solver/lib/libexternal_petsc_solver-opt.so.0 (0x00007f218def9000)\nlibelectromagnetics-opt.so.0 => /home/twise/projects/moose/modules/electromagnetics/lib/libelectromagnetics-opt.so.0 (0x00007f218cb2c000)\nlibmoose-opt.so.0 => /home/twise/projects/moose/framework/libmoose-opt.so.0 (0x00007f2189600000)\nlibpcre-opt.so.0 => /home/twise/projects/moose/framework/contrib/pcre/libpcre-opt.so.0 (0x00007f218decc000)\nlibhit-opt.so.0 => /home/twise/projects/moose/framework/contrib/hit/libhit-opt.so.0 (0x00007f218c392000)\nlibchemical_reactions_test-opt.so.0 => /home/twise/projects/moose/modules/chemical_reactions/test/lib/libchemical_reactions_test-opt.so.0 (0x00007f218e5ee000)\nlibelectromagnetics_test-opt.so.0 => /home/twise/projects/moose/modules/electromagnetics/test/lib/libelectromagnetics_test-opt.so.0 (0x00007f218ce2b000)\nlibexternal_petsc_solver_test-opt.so.0 => /home/twise/projects/moose/modules/external_petsc_solver/test/lib/libexternal_petsc_solver_test-opt.so.0 (0x00007f218debd000)\nlibfluid_properties_test-opt.so.0 => /home/twise/projects/moose/modules/fluid_properties/test/lib/libfluid_properties_test-opt.so.0 (0x00007f218c2ef000)\nlibfunctional_expansion_tools_test-opt.so.0 => /home/twise/projects/moose/modules/functional_expansion_tools/test/lib/libfunctional_expansion_tools_test-opt.so.0 (0x00007f218cb1c000)\nlibgeochemistry_test-opt.so.0 => /home/twise/projects/moose/modules/geochemistry/test/lib/libgeochemistry_test-opt.so.0 (0x00007f218cb0d000)\nliblevel_set_test-opt.so.0 => /home/twise/projects/moose/modules/level_set/test/lib/liblevel_set_test-opt.so.0 (0x00007f218cafe000)\nlibray_tracing_test-opt.so.0 => /home/twise/projects/moose/modules/ray_tracing/test/lib/libray_tracing_test-opt.so.0 (0x00007f21894d2000)\nlibrdg_test-opt.so.0 => /home/twise/projects/moose/modules/rdg/test/lib/librdg_test-opt.so.0 (0x00007f218c2cf000)\nlibreactor_test-opt.so.0 => /home/twise/projects/moose/modules/reactor/test/lib/libreactor_test-opt.so.0 (0x00007f218c2c0000)\nlibrichards_test-opt.so.0 => /home/twise/projects/moose/modules/richards/test/lib/librichards_test-opt.so.0 (0x00007f218c2af000)\nlibstochastic_tools_test-opt.so.0 => /home/twise/projects/moose/modules/stochastic_tools/test/lib/libstochastic_tools_test-opt.so.0 (0x00007f21893e7000)\nlibheat_transfer_test-opt.so.0 => /home/twise/projects/moose/modules/heat_transfer/test/lib/libheat_transfer_test-opt.so.0 (0x00007f218bfb6000)\nlibsolid_properties_test-opt.so.0 => /home/twise/projects/moose/modules/solid_properties/test/lib/libsolid_properties_test-opt.so.0 (0x00007f21893b9000)\nlibtensor_mechanics_test-opt.so.0 => /home/twise/projects/moose/modules/tensor_mechanics/test/lib/libtensor_mechanics_test-opt.so.0 (0x00007f2189261000)\nlibnavier_stokes_test-opt.so.0 => /home/twise/projects/moose/modules/navier_stokes/test/lib/libnavier_stokes_test-opt.so.0 (0x00007f2189113000)\nlibcontact_test-opt.so.0 => /home/twise/projects/moose/modules/contact/test/lib/libcontact_test-opt.so.0 (0x00007f218c28c000)\nlibfsi_test-opt.so.0 => /home/twise/projects/moose/modules/fsi/test/lib/libfsi_test-opt.so.0 (0x00007f218bfa7000)\nlibmisc_test-opt.so.0 => /home/twise/projects/moose/modules/misc/test/lib/libmisc_test-opt.so.0 (0x00007f21890c1000)\nliboptimization_test-opt.so.0 => /home/twise/projects/moose/modules/optimization/test/lib/liboptimization_test-opt.so.0 (0x00007f218903e000)\nlibperidynamics_test-opt.so.0 => /home/twise/projects/moose/modules/peridynamics/test/lib/libperidynamics_test-opt.so.0 (0x00007f2188fe9000)\nlibphase_field_test-opt.so.0 => /home/twise/projects/moose/modules/phase_field/test/lib/libphase_field_test-opt.so.0 (0x00007f2188f65000)\nlibporous_flow_test-opt.so.0 => /home/twise/projects/moose/modules/porous_flow/test/lib/libporous_flow_test-opt.so.0 (0x00007f2188f19000)\nlibthermal_hydraulics_test-opt.so.0 => /home/twise/projects/moose/modules/thermal_hydraulics/test/lib/libthermal_hydraulics_test-opt.so.0 (0x00007f2188d81000)\nlibscalar_transport_test-opt.so.0 => /home/twise/projects/moose/modules/scalar_transport/test/lib/libscalar_transport_test-opt.so.0 (0x00007f2188d72000)\nlibchemical_reactions-opt.so.0 => /home/twise/projects/moose/modules/chemical_reactions/lib/libchemical_reactions-opt.so.0 (0x00007f2188c46000)\nlibthermal_hydraulics-opt.so.0 => /home/twise/projects/moose/modules/thermal_hydraulics/lib/libthermal_hydraulics-opt.so.0 (0x00007f2188200000)\nlibnavier_stokes-opt.so.0 => /home/twise/projects/moose/modules/navier_stokes/lib/libnavier_stokes-opt.so.0 (0x00007f2187800000)\nlibfluid_properties-opt.so.0 => /home/twise/projects/moose/modules/fluid_properties/lib/libfluid_properties-opt.so.0 (0x00007f2187400000)\nlibrdg-opt.so.0 => /home/twise/projects/moose/modules/rdg/lib/librdg-opt.so.0 (0x00007f2188b8e000)\nlibsolid_properties-opt.so.0 => /home/twise/projects/moose/modules/solid_properties/lib/libsolid_properties-opt.so.0 (0x00007f2187743000)\nlibheat_transfer-opt.so.0 => /home/twise/projects/moose/modules/heat_transfer/lib/libheat_transfer-opt.so.0 (0x00007f2187000000)\nlibray_tracing-opt.so.0 => /home/twise/projects/moose/modules/ray_tracing/lib/libray_tracing-opt.so.0 (0x00007f2186c00000)\nlibmisc-opt.so.0 => /home/twise/projects/moose/modules/misc/lib/libmisc-opt.so.0 (0x00007f2186f6e000)\nlibxfem_test-opt.so.0 => /home/twise/projects/moose/modules/xfem/test/lib/libxfem_test-opt.so.0 (0x00007f21876f1000)\nlibtensor_mechanics-opt.so.0 => /home/twise/projects/moose/modules/tensor_mechanics/lib/libtensor_mechanics-opt.so.0 (0x00007f2185c00000)\nlibwaspcore.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwaspcore.so.04 (0x00007f2188b6d000)\nlibwaspddi.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwaspddi.so.04 (0x00007f21876d2000)\nlibwaspexpr.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwaspexpr.so.04 (0x00007f2186f3a000)\nlibwasphalite.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwasphalite.so.04 (0x00007f2186ee5000)\nlibwasphit.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwasphit.so.04 (0x00007f2186e9e000)\nlibwasphive.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwasphive.so.04 (0x00007f21881f6000)\nlibwaspjson.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwaspjson.so.04 (0x00007f2186e5a000)\nlibwasplsp.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwasplsp.so.04 (0x00007f2186e1d000)\nlibwaspsiren.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwaspsiren.so.04 (0x00007f2186be4000)\nlibwaspson.so.04 => /home/twise/mambaforge3/envs/moose/wasp/lib/libwaspson.so.04 (0x00007f2186b96000)\nlibmesh_opt.so.0 => /home/twise/mambaforge3/envs/moose/libmesh/lib/libmesh_opt.so.0 (0x00007f2184400000)\nlibtimpi_opt.so.11 => /home/twise/mambaforge3/envs/moose/libmesh/lib/libtimpi_opt.so.11 (0x00007f21876c3000)\nlibvtkIOCore-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkIOCore-9.2.so.1 (0x00007f2186b28000)\nlibvtkCommonCore-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkCommonCore-9.2.so.1 (0x00007f2183a00000)\nlibvtkCommonDataModel-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkCommonDataModel-9.2.so.1 (0x00007f2183400000)\nlibvtkFiltersCore-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkFiltersCore-9.2.so.1 (0x00007f2182a00000)\nlibvtkIOXML-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkIOXML-9.2.so.1 (0x00007f2185ae6000)\nlibvtkImagingCore-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkImagingCore-9.2.so.1 (0x00007f2182600000)\nlibvtkIOImage-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkIOImage-9.2.so.1 (0x00007f2182422000)\nlibvtkImagingMath-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkImagingMath-9.2.so.1 (0x00007f2186adf000)\nlibvtkIOParallelXML-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkIOParallelXML-9.2.so.1 (0x00007f2186a96000)\nlibvtkParallelMPI-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkParallelMPI-9.2.so.1 (0x00007f2186a7a000)\nlibvtkParallelCore-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkParallelCore-9.2.so.1 (0x00007f218439f000)\nlibvtkCommonExecutionModel-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkCommonExecutionModel-9.2.so.1 (0x00007f21842a1000)\nlibvtksys-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/libvtksys-9.2.so.1 (0x00007f21839af000)\nlibz.so.1 => /home/twise/mambaforge3/envs/moose/lib/libz.so.1 (0x00007f2186a5f000)\nlibslepc.so.3.20 => /home/twise/mambaforge3/envs/moose/lib/libslepc.so.3.20 (0x00007f2182000000)\nlibpetsc.so.3.20 => /home/twise/mambaforge3/envs/moose/lib/libpetsc.so.3.20 (0x00007f2180400000)\nlibHYPRE-2.29.0.so => /home/twise/mambaforge3/envs/moose/lib/libHYPRE-2.29.0.so (0x00007f217fe00000)\nlibstrumpack.so.7.1 => /home/twise/mambaforge3/envs/moose/lib/libstrumpack.so.7.1 (0x00007f217ec00000)\nlibscalapack.so.2.2 => /home/twise/mambaforge3/envs/moose/lib/libscalapack.so.2.2 (0x00007f217e400000)\nlibsuperlu_dist.so.8 => /home/twise/mambaforge3/envs/moose/lib/libsuperlu_dist.so.8 (0x00007f218327c000)\nlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f218c287000)\nlibparmetis.so => /home/twise/mambaforge3/envs/moose/lib/libparmetis.so (0x00007f2183971000)\nlibmetis.so => /home/twise/mambaforge3/envs/moose/lib/libmetis.so (0x00007f2182995000)\nlibhdf5_hl.so.200 => /home/twise/mambaforge3/envs/moose/lib/libhdf5_hl.so.200 (0x00007f218427d000)\nlibhdf5.so.200 => /home/twise/mambaforge3/envs/moose/lib/libhdf5.so.200 (0x00007f217de00000)\nlibmpifort.so.12 => /home/twise/mambaforge3/envs/moose/lib/libmpifort.so.12 (0x00007f2182944000)\nlibgfortran.so.5 => /home/twise/mambaforge3/envs/moose/lib/libgfortran.so.5 (0x00007f217fc55000)\nlibgcc_s.so.1 => /home/twise/mambaforge3/envs/moose/lib/libgcc_s.so.1 (0x00007f2183956000)\nlibquadmath.so.0 => /home/twise/mambaforge3/envs/moose/lib/libquadmath.so.0 (0x00007f218290b000)\nlibstdc++.so.6 => /home/twise/mambaforge3/envs/moose/lib/libstdc++.so.6 (0x00007f217dc1d000)\nlibrt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f21873e8000)\nlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f2186e18000)\nlibmpi.so.12 => /home/twise/mambaforge3/envs/moose/lib/libmpi.so.12 (0x00007f217d800000)\nlibmpicxx.so.12 => /home/twise/mambaforge3/envs/moose/lib/libmpicxx.so.12 (0x00007f2183937000)\nlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f2181f19000)\nlibgomp.so.1 => /home/twise/mambaforge3/envs/moose/lib/libgomp.so.1 (0x00007f21828cf000)\nlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f217d400000)\n/lib64/ld-linux-x86-64.so.2 (0x00007f218eafc000)\nlibnetcdf.so.13 => /home/twise/mambaforge3/envs/moose/libmesh/lib/./libnetcdf.so.13 (0x00007f21802f0000)\nlibvtkdoubleconversion-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkdoubleconversion-9.2.so.1 (0x00007f2185ad5000)\nlibvtklz4-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtklz4-9.2.so.1 (0x00007f218289b000)\nlibvtklzma-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtklzma-9.2.so.1 (0x00007f21823f5000)\nlibvtkzlib-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkzlib-9.2.so.1 (0x00007f218325e000)\nlibvtkloguru-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkloguru-9.2.so.1 (0x00007f21823bd000)\nlibvtkCommonTransforms-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkCommonTransforms-9.2.so.1 (0x00007f2181ed6000)\nlibvtkCommonMisc-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkCommonMisc-9.2.so.1 (0x00007f217ce00000)\nlibvtkCommonSystem-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkCommonSystem-9.2.so.1 (0x00007f2181e96000)\nlibvtkpugixml-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkpugixml-9.2.so.1 (0x00007f21802b3000)\nlibvtkCommonMath-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkCommonMath-9.2.so.1 (0x00007f218028c000)\nlibvtkIOXMLParser-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkIOXMLParser-9.2.so.1 (0x00007f2181e7c000)\nlibvtkDICOMParser-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkDICOMParser-9.2.so.1 (0x00007f218026f000)\nlibvtkmetaio-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkmetaio-9.2.so.1 (0x00007f217eb62000)\nlibvtkpng-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkpng-9.2.so.1 (0x00007f217eb1b000)\nlibvtktiff-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtktiff-9.2.so.1 (0x00007f217e37e000)\nlibvtkjpeg-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkjpeg-9.2.so.1 (0x00007f217e301000)\nlibvtkIOLegacy-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkIOLegacy-9.2.so.1 (0x00007f217e242000)\nlibzfp.so.0 => /home/twise/mambaforge3/envs/moose/lib/./libzfp.so.0 (0x00007f217d7ac000)\nlibcrypto.so.1.1 => /home/twise/mambaforge3/envs/moose/lib/./libcrypto.so.1.1 (0x00007f217ca00000)\nlibcurl.so.4 => /home/twise/mambaforge3/envs/moose/lib/./libcurl.so.4 (0x00007f217d709000)\nlibvtkkissfft-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/././libvtkkissfft-9.2.so.1 (0x00007f2184275000)\nlibvtkexpat-9.2.so.1 => /home/twise/mambaforge3/envs/moose/libmesh-vtk/lib/././libvtkexpat-9.2.so.1 (0x00007f217fc22000)\nlibnghttp2.so.14 => /home/twise/mambaforge3/envs/moose/lib/././libnghttp2.so.14 (0x00007f217d6dd000)\nlibssh2.so.1 => /home/twise/mambaforge3/envs/moose/lib/././libssh2.so.1 (0x00007f217d699000)\nlibssl.so.1.1 => /home/twise/mambaforge3/envs/moose/lib/././libssl.so.1.1 (0x00007f217d370000)\nlibgssapi_krb5.so.2 => /home/twise/mambaforge3/envs/moose/lib/././libgssapi_krb5.so.2 (0x00007f217d646000)\nlibkrb5.so.3 => /home/twise/mambaforge3/envs/moose/lib/./././libkrb5.so.3 (0x00007f217d299000)\nlibk5crypto.so.3 => /home/twise/mambaforge3/envs/moose/lib/./././libk5crypto.so.3 (0x00007f217eb01000)\nlibcom_err.so.3 => /home/twise/mambaforge3/envs/moose/lib/./././libcom_err.so.3 (0x00007f218426b000)\nlibkrb5support.so.0 => /home/twise/mambaforge3/envs/moose/lib/./././libkrb5support.so.0 (0x00007f217e233000)\nlibkeyutils.so.1 => /home/twise/mambaforge3/envs/moose/lib/./././libkeyutils.so.1 (0x00007f2182894000)\nlibresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 (0x00007f217d632000)",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7747967",
                          "updatedAt": "2023-12-04T01:12:59Z",
                          "publishedAt": "2023-12-04T01:12:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Navier stokes does show up in the list. Can you attach a full syntax dump ? I think you need to add  --json or --dump  after the executable on the command line. You ll have to put it in a text file",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748089",
                          "updatedAt": "2023-12-04T01:39:34Z",
                          "publishedAt": "2023-12-04T01:39:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Still a rookie at this command line stuff, BCs and ICs are much easier. Should it look like so:\n../../combined-opt --dump -i DGF_Benchmark_Scaling_No_HT.i",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748136",
                          "updatedAt": "2023-12-04T01:49:25Z",
                          "publishedAt": "2023-12-04T01:49:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "just\n../../combined-opt --dump",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748258",
                          "updatedAt": "2023-12-04T02:19:03Z",
                          "publishedAt": "2023-12-04T02:19:03Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "There was so much data that it did not all display on the terminal display. Is there a way to have it save to a data file instead? Here is what I was able to copy and paste. datadump.txt",
                  "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748224",
                  "updatedAt": "2023-12-04T02:11:56Z",
                  "publishedAt": "2023-12-04T02:11:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "../../combined-opt --dump &> my_file.txt",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748259",
                          "updatedAt": "2023-12-04T02:19:14Z",
                          "publishedAt": "2023-12-04T02:19:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Yep. I was able to figure out the proper syntax to do that. The file is 31 MB the max paste size is 25 MB. I'll chop it down by taking out the last of the file, since you will already have that from the previous paste.",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748283",
                          "updatedAt": "2023-12-04T02:22:37Z",
                          "publishedAt": "2023-12-04T02:22:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "datadump2_part1.txt Whew!",
                  "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748449",
                  "updatedAt": "2023-12-04T02:54:20Z",
                  "publishedAt": "2023-12-04T02:54:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "thx\nInteresting. You see the action, the kernels, the BCs, some PPs from Navier Stokes, but not all the PPs. I dont see volumetricFlowRate for example",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748502",
                          "updatedAt": "2023-12-04T03:03:15Z",
                          "publishedAt": "2023-12-04T03:03:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Is there a way to resolve that issue without a major modification to the code? I'm open to doing a clean install.",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748522",
                          "updatedAt": "2023-12-04T03:05:36Z",
                          "publishedAt": "2023-12-04T03:05:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "clean + re-install is a good idea.\nI dont see what could have gone wrong",
                          "url": "https://github.com/idaholab/moose/discussions/26235#discussioncomment-7748983",
                          "updatedAt": "2023-12-04T04:36:27Z",
                          "publishedAt": "2023-12-04T04:36:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PorousFlowPolyLineSink  line_base error",
          "author": {
            "login": "anupkgeos"
          },
          "bodyText": "Hi\nMy source is like this:\n [./winter_injection_P]\n    type = PorousFlowPolyLineSink\n    fluid_phase = 0\n    variable = porepressure\n    SumQuantityUO = fluid_mass_in_inc\n    line_base = '1 0 0 0.3' #w x y z\n    line_length = ${well_length}\n    line_direction = '0 0 1'\n    use_mobility = false\n    p_or_t_vals = '-1e9 1e9'\n    fluxes = '-${inj_ext_flux} -${inj_ext_flux}'\n  [../]\n\ngetting error:\n(DiracKernels/winter_injection_P/line_base):\n    PorousFlowLineGeometry: wrong number of arguments - got 4, expected 3 '<weight> <x> [<y> [z]]'\n\nwhy is it giving an error as 4 arguments were passed?",
          "url": "https://github.com/idaholab/moose/discussions/26229",
          "updatedAt": "2023-12-04T01:39:26Z",
          "publishedAt": "2023-12-02T22:42:10Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nHow many dimensions is the problem you are solving using?\n4 arguments is only for 3D\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26229#discussioncomment-7741431",
                  "updatedAt": "2023-12-03T01:39:56Z",
                  "publishedAt": "2023-12-03T01:39:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "anupkgeos"
                          },
                          "bodyText": "3D problem",
                          "url": "https://github.com/idaholab/moose/discussions/26229#discussioncomment-7742732",
                          "updatedAt": "2023-12-03T09:14:21Z",
                          "publishedAt": "2023-12-03T09:14:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "The code for this is\n    if (_line_base.size() != _mesh.dimension() + 1)\n      paramError(\"line_base\",\n                 \"PorousFlowLineGeometry: wrong number of arguments - got \",\n                 _line_base.size(),\n                 \", expected \",\n                 _mesh.dimension() + 1,\n                 \" '<weight> <x> [<y> [z]]'\");\n\nso for some reason _mesh.dimension isn't 3 in your case.",
                          "url": "https://github.com/idaholab/moose/discussions/26229#discussioncomment-7743094",
                          "updatedAt": "2023-12-03T10:47:52Z",
                          "publishedAt": "2023-12-03T10:47:51Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "anupkgeos"
                          },
                          "bodyText": "there was an issue with my mesh.",
                          "url": "https://github.com/idaholab/moose/discussions/26229#discussioncomment-7748088",
                          "updatedAt": "2023-12-04T01:39:27Z",
                          "publishedAt": "2023-12-04T01:39:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to output and check mesh partition?",
          "author": {
            "login": "Minjiang-Zhu"
          },
          "bodyText": "I am using mesh adaptivity, yet the simulation is slower than expected. I want to check how is the mesh partitioned for each processor.",
          "url": "https://github.com/idaholab/moose/discussions/26237",
          "updatedAt": "2023-12-03T23:19:45Z",
          "publishedAt": "2023-12-03T23:10:57Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Minjiang-Zhu"
                  },
                  "bodyText": "I found ProcessorIDAux.",
                  "url": "https://github.com/idaholab/moose/discussions/26237#discussioncomment-7747506",
                  "updatedAt": "2023-12-03T23:16:05Z",
                  "publishedAt": "2023-12-03T23:16:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "there's a debug option to show the partitions too. It relies on processorIDaux though, so it s the same",
                          "url": "https://github.com/idaholab/moose/discussions/26237#discussioncomment-7747530",
                          "updatedAt": "2023-12-03T23:16:57Z",
                          "publishedAt": "2023-12-03T23:16:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Minjiang-Zhu"
                          },
                          "bodyText": "Good to know. Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/26237#discussioncomment-7747540",
                          "updatedAt": "2023-12-03T23:19:45Z",
                          "publishedAt": "2023-12-03T23:19:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to output equivalent_plastic_strain and elastic strain energy?",
          "author": {
            "login": "RWTHLHK"
          },
          "bodyText": "I need to output equivalent_plastic_strain and elastic strain energy in my app. Is it possible to output them directly or I have to compute them by myself?",
          "url": "https://github.com/idaholab/moose/discussions/26212",
          "updatedAt": "2023-12-03T21:02:23Z",
          "publishedAt": "2023-11-30T19:15:19Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "@RWTHLHK  you can output and visualize in paraview any material property declared in the material object.\nFor instance I use this material:\nhttps://github.com/idaholab/moose/blob/next/modules/tensor_mechanics/src/materials/ComputePFFractureStressBase.C\nI add to the input file an auxvariable:\n[./elastic_energy]\norder = CONSTANT\nfamily = MONOMIAL\n[../]\nthen an auxkernel:\n[./elastic_energy]\ntype = MaterialRealAux\nvariable = elastic_energy\nproperty = elastic_energy\n[../]\nthen you will be able to visualize it in paraview. Same for other material properties.",
                  "url": "https://github.com/idaholab/moose/discussions/26212#discussioncomment-7731152",
                  "updatedAt": "2023-12-01T16:06:26Z",
                  "publishedAt": "2023-12-01T16:06:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "Thanks a lot! I also solve the problem by setting declared property to output properties in a material project then adding a Postprocessor SideAverageMaterialProperty or NodeAverageMaterialProperty, etc. for postprocessing.",
                          "url": "https://github.com/idaholab/moose/discussions/26212#discussioncomment-7746393",
                          "updatedAt": "2023-12-03T21:02:23Z",
                          "publishedAt": "2023-12-03T21:02:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "computeQpOffDiagJacobian when used with the tensor mechanics Master action",
          "author": {
            "login": "kengwit"
          },
          "bodyText": "Hello,\nI am trying to add off-diagonal terms corresponding to the off-diagonal block or stiffness matrix $K_{\\mathbf{u},\\epsilon^p}$, where $\\mathbf{u}$=nodal displacement vector, $\\epsilon^p$ = a coupled variable.\nI am basing the implementation off the PhaseFieldFractureMechanicsOffDiag::computeQpOffDiagJacobian function in the kernel PhaseFieldFractureMechanicsOffDiag.C. My kernel is identical to the code of this function:\n  if (_c_coupled && jvar == _c_var)\n  {\n    Real val = 0.0;\n    for (unsigned int k = 0; k < 3; ++k)\n      val += _d_stress_dc[_qp](_component, k) * _grad_test[_i][_qp](k);\n    return val * _phi[_j][_qp];\n  }\n\nexcept that, in my case, _d_stress_dc would be replaced by _d_stress_depsP. As you can see in this code, _component is a user input parameter. I am unsure of how I will be using this when the tensor mechanics Master action, which already defines the needed stress divergence kernels, is used. For e.g., in the 2D case, with the displacement variables being $u_x$ and $u_y$, how would Moose know that it would be assembling $K_{u_x^{_i},\\epsilon^{p,_j}}$ when _component=0 and $K_{u_y^{_i},\\epsilon^{p,_j}}$ when _component=1?\nThanks\nKengwit",
          "url": "https://github.com/idaholab/moose/discussions/26230",
          "updatedAt": "2023-12-03T22:41:12Z",
          "publishedAt": "2023-12-03T00:30:37Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSo _component is meant to differentiate between x and y here right?\nThe kernel would simply be added twice, once with component=0 and once with component=1\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26230#discussioncomment-7741540",
                  "updatedAt": "2023-12-03T02:17:13Z",
                  "publishedAt": "2023-12-03T02:17:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "kengwit"
                          },
                          "bodyText": "I understand it needs to be added twice. But how does Moose know the location of the elements in the matrix based on the user parameter _component?",
                          "url": "https://github.com/idaholab/moose/discussions/26230#discussioncomment-7741557",
                          "updatedAt": "2023-12-03T02:25:18Z",
                          "publishedAt": "2023-12-03T02:25:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "MOOSE knows it from the variable parameter most likely. There's two variables, once for each component right?",
                          "url": "https://github.com/idaholab/moose/discussions/26230#discussioncomment-7741565",
                          "updatedAt": "2023-12-03T02:28:30Z",
                          "publishedAt": "2023-12-03T02:28:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kengwit"
                          },
                          "bodyText": "Do you mean jvar? I believe that jvar corresponds to the coupled variable $\\epsilon^p$ (or $c$ for the phase field problem), not the displacement components. I checked that jvar remains constant at the value 2.",
                          "url": "https://github.com/idaholab/moose/discussions/26230#discussioncomment-7741590",
                          "updatedAt": "2023-12-03T05:11:44Z",
                          "publishedAt": "2023-12-03T02:37:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I meant the variable parameter of the kernel. It's not that then\nIf the variable is eps_p, then I think the _c_var is the displacement? As you can see this extra term is only added when jvar = _c_var (in the if condition)",
                          "url": "https://github.com/idaholab/moose/discussions/26230#discussioncomment-7741615",
                          "updatedAt": "2023-12-03T14:21:47Z",
                          "publishedAt": "2023-12-03T02:45:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@sveerara",
                          "url": "https://github.com/idaholab/moose/discussions/26230#discussioncomment-7743943",
                          "updatedAt": "2023-12-03T14:23:06Z",
                          "publishedAt": "2023-12-03T14:23:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kengwit"
                          },
                          "bodyText": "_c_var is the coupled variable. I think you mean _var in the base class? I think your explanation makes sense. Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/26230#discussioncomment-7745169",
                          "updatedAt": "2023-12-03T19:40:50Z",
                          "publishedAt": "2023-12-03T18:09:49Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error when make moose with phase field",
          "author": {
            "login": "lizhi1008"
          },
          "bodyText": "Dear all,\nThis is my first time to use the phase field module in moose.\nFirst, I run the stork.sh script to create an new application. Next, I modify the Makefile to enable the phase field module. Then, I make it but the following error occurred.\n\nIt looks like the class EulerAngles is defined repeatedly.\nI wonder how to fix it?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/26226",
          "updatedAt": "2023-12-03T02:27:38Z",
          "publishedAt": "2023-12-02T07:27:21Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe problem is probably that you compiled once without phase_field and now with phase_field.\nSo there's an old header around that gets picked up too early and defines symbols that get redefined later.\nYou need to clean the repository (git commit all your work then make clobberall. If that does not work use git clean -xfd)\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26226#discussioncomment-7741562",
                  "updatedAt": "2023-12-03T02:27:39Z",
                  "publishedAt": "2023-12-03T02:27:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Numerical artifacts when using SubdomainBoundingBoxGenerator- block-restricted variables existing outside of their blocks",
          "author": {
            "login": "richmondodufisan"
          },
          "bodyText": "Hi, I was wondering if there are any fixes to this other than meshing the interface very finely. I created a mesh with gmsh but due to the fact that I automated the process (since I need to alter the configurations slightly each time), I cannot define physical groups properly. If you've used gmsh, the \"Coherence/RemoveAllDuplicates\" option used to make a mesh with multiple subvolumes coherent makes it harder to define physical groups by geometry.\nSo I have to use MOOSE's inbuilt SubdomainBoundingBoxGenerator. In the image below, I have a very thin layer over another layer, and I used the above object to define each of them as blocks.\n  [sample_block]\n    type = SubdomainBoundingBoxGenerator\n    input = sample_mesh\n    block_id = 1\n    top_right = '40 0 0'\n    bottom_left = '-40 -40 0'\n  []\n  [transducer_block]\n    type = SubdomainBoundingBoxGenerator\n    input = sample_block\n    block_id = 2\t\n    top_right = '40 ${transducer_thickness} 0'\n    bottom_left = '-40 0 0'\n  []\n\n\nzoomed in, it looks like this:\n\nThe mesh is less refined further away from points of interest, and the object seems to be including elements from the substrate/lower block the less refined it as at the interface. However I am not sure why it would include those other elements at all, since the mesh was created in a way that elements terminate EXACTLY at the interface. So it should be easier for it to make a \"clean break\" between the upper and lower boxes. See the mesh below:\n\nand zoomed in, for example:\n\nIs there anything I can do to fix this?",
          "url": "https://github.com/idaholab/moose/discussions/26232",
          "updatedAt": "2023-12-03T02:15:02Z",
          "publishedAt": "2023-12-03T01:37:32Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis could also be a visualization artefact btw.\nThe temp_trans variable, is it only defined in the sliver on top? Or is it defined on both blocks with a sharp transition?\nWhat kind of finite element family and order is it?\nHaving a non-zero value on a node, with zeros all around, logically creates these shapes you see\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26232#discussioncomment-7741470",
                  "updatedAt": "2023-12-03T01:56:23Z",
                  "publishedAt": "2023-12-03T01:55:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "richmondodufisan"
                          },
                          "bodyText": "Yes its only defined on the sliver on top, and its first order. And yeah I guess that makes sense, so that means the exodus file is outputting the solution at the nodes only then, and the artefacts are a linear interpolation.",
                          "url": "https://github.com/idaholab/moose/discussions/26232#discussioncomment-7741483",
                          "updatedAt": "2023-12-03T01:59:20Z",
                          "publishedAt": "2023-12-03T01:59:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes. If you project using a projectionAux to a constant monomial it should look a little better",
                          "url": "https://github.com/idaholab/moose/discussions/26232#discussioncomment-7741531",
                          "updatedAt": "2023-12-03T02:15:03Z",
                          "publishedAt": "2023-12-03T02:15:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "error when installing Moose",
          "author": {
            "login": "tqcthai"
          },
          "bodyText": "Dear all,\nI've installed Moose and got this error message:\nMOOSE_projects/moose/framework/src/userobjects/RadialAverage.C:254:14: error: 'SearchParams' is not a member of 'nanoflann'; did you mean 'SearchParameters'?\n254 |   nanoflann::SearchParams search_params;\n|              ^~~~~~~~~~~~\n|              SearchParameters\n/MOOSE_projects/moose/framework/src/userobjects/RadialAverage.C:262:69: error: 'search_params' was not declared in this scope; did you mean '_ri_params'?\n262 |         &(bn(0)), Utility::pow<2>(_radius + _padding), ret_matches, search_params);\n|                                                                     ^~~~~~~~~~~~~\n|                                                                     _ri_params\nI wonder how to fix it?\nThanks.\nT",
          "url": "https://github.com/idaholab/moose/discussions/26220",
          "updatedAt": "2023-12-01T23:45:49Z",
          "publishedAt": "2023-12-01T22:00:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIs this a new install from scratch? Or you updated moose (and forgot to update libmesh conda packages?) ?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26220#discussioncomment-7734649",
                  "updatedAt": "2023-12-01T22:14:47Z",
                  "publishedAt": "2023-12-01T22:14:46Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "tqcthai"
                          },
                          "bodyText": "Hi Giudgiud,\nIt is a new install.\nThai",
                          "url": "https://github.com/idaholab/moose/discussions/26220#discussioncomment-7734851",
                          "updatedAt": "2023-12-01T22:57:09Z",
                          "publishedAt": "2023-12-01T22:57:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tqcthai"
                          },
                          "bodyText": "I checked conda list | grep libmesh, and the moose-libmesh is 2023.11.29",
                          "url": "https://github.com/idaholab/moose/discussions/26220#discussioncomment-7734897",
                          "updatedAt": "2023-12-01T23:11:15Z",
                          "publishedAt": "2023-12-01T23:11:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Your libmesh is up to date but your MOOSE is out of date. The line that you're erroring on was changed in 445e4bf, more than a month ago.",
                  "url": "https://github.com/idaholab/moose/discussions/26220#discussioncomment-7735030",
                  "updatedAt": "2023-12-01T23:45:50Z",
                  "publishedAt": "2023-12-01T23:45:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}