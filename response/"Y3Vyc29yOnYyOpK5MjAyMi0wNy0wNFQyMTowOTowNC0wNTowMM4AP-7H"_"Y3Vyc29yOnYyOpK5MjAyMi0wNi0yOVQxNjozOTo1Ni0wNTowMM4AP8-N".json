{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wNi0yOVQxNjozOTo1Ni0wNTowMM4AP8-N"
    },
    "edges": [
      {
        "node": {
          "title": "About eigenstrain in RSPHERICAL coord_type",
          "author": {
            "login": "Xfengrui"
          },
          "bodyText": "Hi,\nI'm trying to use coord_type = RSPHERICAL to solve a 1D hollow sphere problem.\nThe mesh info is\n[Mesh]\n    type = GeneratedMesh\n    dim = 1\n    xmin = 2e-3\n    xmax = 3e-3\n    nx = 1\n[]\n\nI wish the the thickness of the sphere shell increase from 1mm to 1.1mm. So I gave a eigenstrain of '0.1 0.1 .0.1' as follows:\n  [./eigen]\n    type = ComputeEigenstrain\n    eigen_base = '0.1 0.1 0.1'\n    eigenstrain_name = eigenstrain\n    outputs = exodus\n  [../]\n\nHowever, the thickness of the shell after the calculation became 1.2mm rather than 1.1mm.\nI then give the same eigenstrain to a solid sphere with r=1e-3, and the radius of the sphere increased to 1.1mm as expected.  I'm now wondering if I gave a wrong eigenstrain for the hollow sphere in view of the coord_type = RSPHERICAL  ?\n[Mesh]\n    type = GeneratedMesh\n    dim = 1\n    xmin = 0    #solid sphere with r=1e-3\n    xmax = 1e-3\n    nx = 1\n[]",
          "url": "https://github.com/idaholab/moose/discussions/21475",
          "updatedAt": "2022-07-21T23:47:21Z",
          "publishedAt": "2022-07-01T03:24:31Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWell what is the analytical result for this?\nAlso only one element in the mesh? Are you supposed to get the exact solution with just one?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3061073",
                  "updatedAt": "2022-07-01T04:37:20Z",
                  "publishedAt": "2022-07-01T04:37:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Xfengrui"
                          },
                          "bodyText": "Thanks for your reply.\nIn sphere coord type, strain_rr = du_rr / dr, thus the analytical result for this should be about 1.1mm from my point of view. And the solid sphere case has proved it.\nI also have tried to use more elements but it didn't change the results.",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3061120",
                          "updatedAt": "2022-07-01T04:52:02Z",
                          "publishedAt": "2022-07-01T04:52:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "What is the spatial extent of the 1D hollow shell after you apply the strain? Like the new xmin and xmax?",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3061143",
                          "updatedAt": "2022-07-01T04:55:57Z",
                          "publishedAt": "2022-07-01T04:55:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Xfengrui"
                          },
                          "bodyText": "I gave a fixed boundary condition for \"left\", so the new xmin = 2e-3  and xmax= 3.2e-3.\nFor the solid sphere, the new xmin = 0 and xmax = 1.1e-3.",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3061196",
                          "updatedAt": "2022-07-01T05:13:24Z",
                          "publishedAt": "2022-07-01T05:13:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think strain for a shell would be dr / r so since r is 2e-3, the dr should be 0.1 * 2e-3 not 0.1 * 1e-3\nfound a cool video about it\nhttps://www.youtube.com/watch?v=7t9t4Sotl8U",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3061227",
                          "updatedAt": "2022-07-01T05:23:45Z",
                          "publishedAt": "2022-07-01T05:23:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Xfengrui"
                          },
                          "bodyText": "Sorry, I'm not sure I have understood it.\nr=2e-3 for inner radius, r=3e-3 for outer radius. In the case that inner radius is fixed,  dr shoud be 3e-4 for the outer?",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3062026",
                          "updatedAt": "2022-07-01T07:58:15Z",
                          "publishedAt": "2022-07-01T07:58:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think the formula takes the inner radius for r",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3064251",
                          "updatedAt": "2022-07-01T13:31:33Z",
                          "publishedAt": "2022-07-01T13:31:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Xfengrui"
                          },
                          "bodyText": "Thanks for your help! I think you are correct in the case of free BCs. And the elongation should be (0.13e-3-0.12e-3)=0.1e-3.\nHere I imposed a Dirichlet BC for inner side and the problem seem to be much more complicated according to @hugary1995 .",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3076475",
                          "updatedAt": "2022-07-04T08:40:04Z",
                          "publishedAt": "2022-07-04T08:40:03Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "This is actually an interesting question (plus it's boring here at the airport...), so I decided to write it down:\nThe strain measure we have in tensor_mechanics for large deformation is notionally the logarithmic strain\n\nwhere\n\nSay the r-displacement is u, then the total strain is\n\nSubtracting the diagonal eigenstrain you get the mechanical strain as\n\nLet Young's modulus be E, and poisson's ratio be 0 to make my life easier. The stress is\n\nNext, the linear momentum balance is\n\nwhich has become a second order nonlinear ordinary differential equation that I don't know how to solve analytically. So I'll stop here. But I think this is enough to convince you that the problem isn't as simple as it looks like.\nA couple of remarks here:\n\nTo get what you want, you'll need to make many simplifications. If you make the small strain assumption, and use Poisson's ratio = 0, and do not impose any Dirichlet boundary conditions, the elongation will be exactly the eigenstrain times the thickness of the hollow sphere, spot on.\nIf the Poisson's ratio gets larger, the elongation will be larger due to z and theta contributions, which is the so-called Poisson's effect.\nIf you are additionally imposing a Dirichlet BC on the inner surface, you are effectively applying a traction on that surface, which will make the solution further away from your guess.\n\nIt seems to me that you doing all of the above: large deformation, using a nonzero Poisson's ratio, and imposing a Dirichlet BC, which makes the problem very difficult (analytically, not numerically). (Although I know it seems to be pretty straightforward...) Not to mention the fact that we are doing a specific form of objective integration, and using a specific hypoelasticity model -- all of that complicates the picture.",
                  "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3067913",
                  "updatedAt": "2022-07-02T06:43:00Z",
                  "publishedAt": "2022-07-02T06:27:54Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Oh, and a minor correction after inspecting the math, if you use small strain, and remove all the Dirichlet BCs, then the Poisson's ratio actually won't affect the result in this specific case.\nFor example, if you have a domain [2e-3, 3e-3], then using strain = SMALL in the TM action, (or ComputeRSphericalSmallStrain), and don't impose any Dirichet BCs, the displacements are always gonna be 2e-4 and 3e-4 at the left and the right nodes, with an eigenstrain of 0.1, regardless of the value of the Poisson's ratio.",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3067934",
                          "updatedAt": "2022-07-02T06:39:37Z",
                          "publishedAt": "2022-07-02T06:39:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Xfengrui"
                          },
                          "bodyText": "Thanks a lot!\nI moved the DirichletBCs  and the elongation obtained was 0.1mm as I expected. And I think that the elongation was much larger than 0.1 mm before is mainly due to the \"traction\" as you said.  Thanks for your helpful suggestions.\nHowever, here comes another problem. The case I mentioned above is somewhat simplified. In a real situation, the sphere have a three -layers structure, and the growth occurs at the middle layer (which means that the two side of the layer are both affected by the other layers). To get a exact elongation of the middle layer will be tricky then.\nWhat's more, it's not very clear for me about whether the eigenstrain models in Cartesian coordinates (for example, thermal expansions) are still suitable for Spherical coordinates for hollow sphere cases in view that we will get different elongations.",
                          "url": "https://github.com/idaholab/moose/discussions/21475#discussioncomment-3076364",
                          "updatedAt": "2022-07-04T08:25:36Z",
                          "publishedAt": "2022-07-04T08:25:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Questions about Heat Transfer Calculation Boundaries",
          "author": {
            "login": "Gallasd"
          },
          "bodyText": "I have a question, for a physics problem, suppose the surface of an object needs to impose two boundary conditions, such as radiation and heat flow boundary, although radiation is also a heat flow.\nFor radiation, I use FunctionRadiativeBC.For heat flow, and I use NeumannBC,but getting error of duplicate boundary.\nTherefore, I consider whether it is necessary to build a function boundary to convert radiation into heat flow,then add them together to calculate. I try to use FunctionNeumannBC.But it is found that the function can only be related to space and time, not temperature.\nSo I don't know how to deal with this kind of problem that needs to impose two boundary conditions.Whether the kernel needs to be modified.\nThank you for reading, I hope you can help me.",
          "url": "https://github.com/idaholab/moose/discussions/21387",
          "updatedAt": "2022-07-04T03:30:19Z",
          "publishedAt": "2022-06-23T03:48:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe Neumann BC is not meant to be combined, it must provide all of the flux. Use the convective heat flux BC instead\nhttps://mooseframework.inl.gov/source/bcs/CoupledConvectiveHeatFluxBC.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21387#discussioncomment-3007285",
                  "updatedAt": "2022-06-23T05:20:11Z",
                  "publishedAt": "2022-06-23T05:19:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Gallasd"
                          },
                          "bodyText": "Hello\nI'm sorry I didn't understand you,\nCoupledConvectiveHeatFluxBC, as I understand it,  is possible to use vector coupling to compute the heat flux for multi-phase fluids.The heat flow here is actually q in the usual sense, not convection.I see the introduction of the boundary, the temperature is first order, which is not consistent with the calculation of radiation.\nI hope you can provide me with a more detailed answer, thank you for your help",
                          "url": "https://github.com/idaholab/moose/discussions/21387#discussioncomment-3008133",
                          "updatedAt": "2022-06-23T07:55:11Z",
                          "publishedAt": "2022-06-23T07:55:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Look at this input that has both on different boundaries. But seems to work to add radiation on the convective boundary\nhttps://github.com/idaholab/moose/blob/next/modules/heat_conduction/test/tests/radiative_bcs/ad_function_radiative_bc.i\n[BCs]\n  [top_right]\n    type = ADConvectiveHeatFluxBC\n    variable = temp\n    boundary = top_right\n    T_infinity = 300.0\n    heat_transfer_coefficient = 3.0\n  []\n  [bot_right]\n    type = ADFunctionRadiativeBC\n    variable = temp\n    boundary = bot_right\n    # htc/(stefan-boltzmann*4*T_inf^3)\n    emissivity_function = '3/(5.670367e-8*4*300*300*300)'\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/21387#discussioncomment-3013903",
                          "updatedAt": "2022-06-23T22:54:45Z",
                          "publishedAt": "2022-06-23T22:54:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Gallasd"
                  },
                  "bodyText": "hello\nI'm glad you've been paying attention to this issue, because of some things I didn't reply to you right away, I'm very sorry\nThe study you provided should use a radiation study instead of convection by simplifying it. In the calculation example, the convection condition is applied to the top_right, and the simplified radiation is applied to the bot_right. I think this is still one boundary corresponding to one boundary condition, and it does not solve the problem of applying two working conditions to one boundary.\nI checked all the heat-related boundaries provided by moose's official website and found that no similar boundaries are provided\n\nAmong them, the fourth order corresponds to radiation, the first order corresponds to convection, and C corresponds to constant heat flux density.",
                  "url": "https://github.com/idaholab/moose/discussions/21387#discussioncomment-3020955",
                  "updatedAt": "2022-06-25T02:46:59Z",
                  "publishedAt": "2022-06-25T02:46:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Well first it really woudlnt be hard to add this particular boundary condition for your needs. We're talking 10 minutes of coding max here.\nSecondly, while the input i linked does indeed use radiation and convection on different boundaries, you can add a second radiation condition on the same boundary as the convective one and it still works.",
                          "url": "https://github.com/idaholab/moose/discussions/21387#discussioncomment-3021018",
                          "updatedAt": "2022-06-25T03:25:19Z",
                          "publishedAt": "2022-06-25T03:25:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Gallasd"
                          },
                          "bodyText": "I solved the problem, one geometry bound can impose different bounds, thanks for your help",
                          "url": "https://github.com/idaholab/moose/discussions/21387#discussioncomment-3075119",
                          "updatedAt": "2022-07-04T03:30:12Z",
                          "publishedAt": "2022-07-04T03:30:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Boundary conditions at the interface when a fluid flows vertically over a solid surface",
          "author": {
            "login": "sychang2021"
          },
          "bodyText": "Hello everyone!\nI am trying to solve a problem of liquid flowing in a vertical pipe. There is an obstacle in the pipe, and the liquid flows in the area between the pipe and the obstacle. But I can't solve the correct pressure field and velocity field. I think there may be a problem with the velocity boundary conditions on the surface of the liquid and the obstacle. Shouldn't the boundary conditions of the fluid and solid interface be Neumann boundary conditions, but other boundary conditions? Are there any similar cases in MOOSE that I can learn from?",
          "url": "https://github.com/idaholab/moose/discussions/21466",
          "updatedAt": "2022-07-01T13:11:46Z",
          "publishedAt": "2022-06-30T15:17:26Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDoes the pipe only case work as expected? Are you getting the expected pressure drop then?\nWhat discretization are you using for Navier Stokes for this problem? FE? INS? INSAD?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21466#discussioncomment-3061270",
                  "updatedAt": "2022-07-01T05:33:19Z",
                  "publishedAt": "2022-07-01T05:33:19Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sychang2021"
                          },
                          "bodyText": "INSAD. I have found the problem. I forgot to add no-slip boundary conditions to the walls of solids and fluids. Adding this boundary condition gives reasonable results. thank you for your reply.",
                          "url": "https://github.com/idaholab/moose/discussions/21466#discussioncomment-3064099",
                          "updatedAt": "2022-07-01T13:11:47Z",
                          "publishedAt": "2022-07-01T13:11:46Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How mesh density is partitioned in GeneratedMesh\uff1f",
          "author": {
            "login": "PengWei97"
          },
          "bodyText": "Dear MOOSE experts,\nRecently I created an initial microstructure of gradient nano-grains for grain growth and used GeneratedMesh for uniform meshing. Under the condition that the grain mesh of the surface layer of Level 1 is guaranteed to be reasonable (see figure.(c)), it also causes the grain grid of the coarse-grained layer of level 3 to be excessively dense (see figure.(d)), which makes dofs extremely high.\n\nFigure: (a) Initial microstructure of gradient nano-grains (GNGs) by PolycrystalVoronoi object, (b) Global meshing graph, (c) Enlarged view of meshing at Level 1 fine-grained layer, (d) Enlarged view of meshing at Level 3 coarse-grained layer.\nSo what I'm asking now is if there is a way to use GeneratedMesh or similar meshing tool to use different mesh densities at different levels or regions.\nAny suggestions or recommendations to fix the problem would be greatly appreciated.\nThank you\nWei",
          "url": "https://github.com/idaholab/moose/discussions/21426",
          "updatedAt": "2022-07-01T01:55:59Z",
          "publishedAt": "2022-06-27T03:24:39Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nHow are the different regions defined? Cartesian regions? Or have you defined subdomains?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21426#discussioncomment-3028393",
                  "updatedAt": "2022-06-27T03:26:44Z",
                  "publishedAt": "2022-06-27T03:26:42Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Should be a Cartesian coordinate area. Specifically, I want to divide three areas or more according to different y-axis coordinates, by the way I modified my figure.",
                          "url": "https://github.com/idaholab/moose/discussions/21426#discussioncomment-3028412",
                          "updatedAt": "2022-06-27T03:33:18Z",
                          "publishedAt": "2022-06-27T03:33:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "and this is the mesh setup I'm using now,\nmy_nx = 25 # 30 94\nmy_xmax = 886 # 1200 3760 400e-1 nm\nmy_ny = 25 # 30 94 \nmy_ymax = 886 # 1200 3760 400e-1 nm\n[Mesh]\n  # Mesh block.  Meshes can be read in or automatically generated\n  type = GeneratedMesh\n  dim = 2 # Problem dimension\n  nx = ${my_nx} # Number of elements in the x-direction\n  ny = ${my_ny} # Number of elements in the y-direction\n  xmin = 0    # minimum x-coordinate of the mesh\n  xmax = ${my_xmax} # 1000 maximum x-coordinate of the mesh 2000-400 400 1600\n  ymin = 0    # minimum y-coordinate of the mesh\n  ymax = ${my_ymax} # 1000 maximum y-coordinate of the mesh\n  elem_type = QUAD4  # Type of elements used in the mesh\n  uniform_refine = 0 # Initial uniform refinement of the mesh\n\n  parallel_type = distributed # Periodic BCs distributed replicated\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/21426#discussioncomment-3028417",
                          "updatedAt": "2022-06-27T03:35:14Z",
                          "publishedAt": "2022-06-27T03:35:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This mesh generator will let you set different mesh fineness in different cartesian regions\nhttps://mooseframework.inl.gov/source/meshgenerators/CartesianMeshGenerator.html\nI ll just mention that if you assign blocks to regions you can also perform selective block refinements (sideset is also an option, with another MG)\nusing this\nhttps://mooseframework.inl.gov/source/meshgenerators/RefineBlockGenerator.html",
                          "url": "https://github.com/idaholab/moose/discussions/21426#discussioncomment-3028418",
                          "updatedAt": "2022-06-27T03:36:01Z",
                          "publishedAt": "2022-06-27T03:35:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Ok, thanks for your answer, I will try it.",
                          "url": "https://github.com/idaholab/moose/discussions/21426#discussioncomment-3028497",
                          "updatedAt": "2022-06-27T04:05:43Z",
                          "publishedAt": "2022-06-27T04:05:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "hi, @GiudGiud. According to your suggestion, I used CartesianMeshGenerator and SideSetsBetweenSubdomainsGenerator to refine the mesh, the code and mesh figure are as follows,\n\nHowever, passing RefineBlockGenerator in this way does not meet my needs very well. Specifically, I want to be able to set nx and ny belonging to each block like in GeneratedMesh, is this possible?\nwei",
                          "url": "https://github.com/idaholab/moose/discussions/21426#discussioncomment-3037177",
                          "updatedAt": "2022-06-28T06:48:12Z",
                          "publishedAt": "2022-06-28T06:48:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThe refineblockGenerator only does uniform refinement currently.\nIf you want custom nx and ny you may set them directly for each block in the Cartesian mesh generator.\nI recommend using parsed expressions if you want to functionalize this mesh as a function of a few refinement parameters\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21426#discussioncomment-3041156",
                          "updatedAt": "2022-06-28T15:21:39Z",
                          "publishedAt": "2022-06-28T15:21:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Yeah, I solved this problem by modifying max_h_level, the effect is as follows.\n\nThank you so much.\nwei",
                          "url": "https://github.com/idaholab/moose/discussions/21426#discussioncomment-3060473",
                          "updatedAt": "2022-07-01T01:55:13Z",
                          "publishedAt": "2022-07-01T01:55:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to include damage in plasticity model?",
          "author": {
            "login": "tstepan333"
          },
          "bodyText": "I'm trying to simulate a tensile test for plastic material. As a first step, I implemented a plasticity model using ComputeMultiPlasticityStress and UserObjects to define the hardening function. My goal is to capture the effect of damage on stress and stiffness. What type of material do I need to use to define a damage index?",
          "url": "https://github.com/idaholab/moose/discussions/19539",
          "updatedAt": "2022-06-30T23:01:17Z",
          "publishedAt": "2021-12-03T21:58:11Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "Dear @tstepan333\nIf you want to couple phase field damage model with plasticity model, you will need to define your own material class.\nYou can see an example here:\nhttps://github.com/ngrilli/c_pfor_am/blob/main/src/materials/FiniteStrainUObasedCPDamageVol.C\nwhere I couple phase field damage with crystal plasticity.\nTest cases are available here:\nhttps://github.com/ngrilli/c_pfor_am/tree/main/test/tests/CPDamage\nThe idea is that you need to define the free energy and derivatives that are needed\nin the phase field model for damage.\nThe approach is documented here:\nhttps://aip.scitation.org/doi/abs/10.1063/1.5109761\nNicol\u00f2",
                  "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1749668",
                  "updatedAt": "2022-06-06T12:14:37Z",
                  "publishedAt": "2021-12-04T17:21:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "In case you want to use smeared cracking model, you can use ComputeSmearedCrackingStress in conjunction with any inelastic models, e.g., plasticity and creep. You can also implement your own damage models following the smeared cracking models.\nTo use this, the plasticity and creep need to be defined as StressUpdate models which are a bit different than the UO based plasticity models. For more information, please look at https://mooseframework.inl.gov/source/materials/ComputeMultipleInelasticStress.html",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1749737",
                          "updatedAt": "2022-06-06T12:14:42Z",
                          "publishedAt": "2021-12-04T17:44:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tstepan333"
                          },
                          "bodyText": "@jiangwen84 Thank you for your help. Could you clarify what the UO-based plasticity model means?",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1817421",
                          "updatedAt": "2022-06-06T12:14:43Z",
                          "publishedAt": "2021-12-15T21:45:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "@jiangwen84 Thank you for your help. Could you clarify what the UO-based plasticity model means?\n\nThe UserObject-based plasticity models you used. In MOOSE, we have both UO-based and stress-update based plasticity models.",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1817460",
                          "updatedAt": "2022-06-06T12:14:43Z",
                          "publishedAt": "2021-12-15T21:55:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tstepan333"
                          },
                          "bodyText": "Hi @jiangwen84, I need your help.\nI am getting errors when using plasticity and the smeared crack model.\n\nIn my model, the plate stretches in the x-direction, and cracks form in the y-direction.\nDo I need to specify both plasticity and smeared crack model in ComputeMultipleInelasticStress?",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1964083",
                          "updatedAt": "2022-06-28T18:51:30Z",
                          "publishedAt": "2022-01-13T17:19:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "@tstepan333 in the future can you please post plain text not as a screenshot and instead in a code block (see https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks)\nIt will then display as :\n*** ERROR ***\nThe following...\n\nBy pasting text directly, it makes it searchable for future users experiencing the same issue.",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1964429",
                          "updatedAt": "2022-06-28T18:51:34Z",
                          "publishedAt": "2022-01-13T18:04:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "@tstepan333 ComputeSmearedCrackingStress derives from ComputeMultipleInelasticStress. So you only need ComputeSmearedCrackingStress in the input file.",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1987523",
                          "updatedAt": "2022-06-28T18:51:39Z",
                          "publishedAt": "2022-01-18T03:34:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "whitewalker63"
                          },
                          "bodyText": "@ngrilli @jiangwen84  I\u2019m using the ComputeMultipleinelasticstress class to compute the stress state of multiple inelastic models based on the RadialreturnStressupdate. Each of my inelastic models (which are child classes of the RadialReturnCreepStressUpdateBase) has a damage parameter/variable. How do I get the damage variable into these inelastic models? If I have to use the computeSmearedCrackingStress, do I have to first include (or call) the ScalarDamageBase in each of these inelastic modules?",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-3059974",
                          "updatedAt": "2022-06-30T23:01:18Z",
                          "publishedAt": "2022-06-30T23:01:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "karthigesut"
                  },
                  "bodyText": "@ngrilli I have a question to ask. If i want to do a damage model (crystal plasticity) on MOOSE FRAMEWORK, can i import the microstructure from NEPER? or MOOSE has the capability to create a synthetic microstructure like what NEPER and DREAM3D can do?\nThank you.\nkarthi",
                  "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1856950",
                  "updatedAt": "2022-06-06T12:15:12Z",
                  "publishedAt": "2021-12-22T08:17:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ngrilli"
                          },
                          "bodyText": "@karthigesut\nAn example of importing Neper .msh file to run a polycrystal simulation is here:\nhttps://github.com/ngrilli/c_pfor_am/tree/main/test/tests/neper\nHope this helps,\nNicol\u00f2",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1872543",
                          "updatedAt": "2022-06-06T12:15:12Z",
                          "publishedAt": "2021-12-26T17:36:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "karthigesut"
                          },
                          "bodyText": "@ngrilli Thanks sir.",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-1878063",
                          "updatedAt": "2022-06-06T12:15:12Z",
                          "publishedAt": "2021-12-28T08:49:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "karthigesut"
                          },
                          "bodyText": "@ngrilli is there any free training for moose framework software? i would like to join if there is any.\nThank you.\nKarthi",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-2521401",
                          "updatedAt": "2022-06-06T12:15:12Z",
                          "publishedAt": "2022-04-07T07:22:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThere's the tutorial video on the website\nhttps://mooseframework.inl.gov/index.html\nand we may stream a live training in June, we're still organizing this.  it ll be advertised.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-2524495",
                          "updatedAt": "2022-06-19T20:20:51Z",
                          "publishedAt": "2022-04-07T14:57:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "karthigesut"
                          },
                          "bodyText": "@GiudGiud thanks for your reply.\nI would be happy if you can confirm the date of the training earlier. I presume its a free training.\nThank you sir.\nKarthi",
                          "url": "https://github.com/idaholab/moose/discussions/19539#discussioncomment-2527851",
                          "updatedAt": "2022-06-19T20:20:52Z",
                          "publishedAt": "2022-04-08T02:21:21Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "where is mixedProductIlJk in RankTwoTensorImplementation.h",
          "author": {
            "login": "howietu0601"
          },
          "bodyText": "Hi, I just upgraded my moose from the version half years ago, but realize lots of changes happened and my own development is totally messed up now. I used \"mixedProductIlJk\" in my code which was in RankTwoTensorImplementation.h before but not now; how can I solve this issue? Thanks!",
          "url": "https://github.com/idaholab/moose/discussions/21467",
          "updatedAt": "2022-06-30T17:29:00Z",
          "publishedAt": "2022-06-30T15:58:57Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ajacquey"
                  },
                  "bodyText": "Hi,\nI had the same experience a few days ago.\nIt seems that some functions (such as mixedProductXxXx) have been replaced by a more general approach using usingTensorIndices from MooseTypes (see framework/include/utils/MooseTypes.h)\nFirst, you define the indices:\nusingTensorIndices(i_, j_, k_, l_);\n\nAnd then the equivalent (someone please correct me if I'm wrong) for two RankTwoTensor a and b:\na.mixedProductIkJl(b) becomes a.times<i_, k_, j_, l_>(b)\na.mixedProductJkIl(b) becomes a.times<j_, k_, i_, l_>(b)\na.mixedProductIlJk(b) becomes a.times<i_, l_, j_, k_>(b)\nand so on...\nHope that helps.",
                  "url": "https://github.com/idaholab/moose/discussions/21467#discussioncomment-3058298",
                  "updatedAt": "2022-06-30T17:23:04Z",
                  "publishedAt": "2022-06-30T17:23:03Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "heat transfer between two blocks",
          "author": {
            "login": "sychang2021"
          },
          "bodyText": "Dear all.\nI have some confusion about heat conduction and advection between blocks in MOOSE. I want to calculate a system with an inner heat source, which is a cylindrical structure, with an outer cylinder heating an inner cylinder. I set the initial temperature to 300K. Since I wanted to set both the upper and lower and outer boundary conditions as adiabatic, I didn't do anything in the BCs section. Since the outer block is releasing heat all the time, there shouldn't be a region where the temperature falls below 300K in the whole system, but it turns out that's not the case:\n\nI would like to know where I am setting it wrong, is it possible that there is something wrong with my mesh?\nIn addition, I also want to ask, if I set the inner cylinder to have water flowing (this is a fluid-solid conjugate heat transfer problem), what conditions do I need to set on the interface? Does heat conduction between solids require no conditions at the interface?\nHere are input file and mesh file.\nfile.zip",
          "url": "https://github.com/idaholab/moose/discussions/21265",
          "updatedAt": "2022-07-21T23:46:47Z",
          "publishedAt": "2022-06-10T15:24:36Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nTo diagnose if something is wrong with your mesh, you can re-create it using MOOSE mesh generators and see if the result improves.\nhttps://mooseframework.inl.gov/syntax/Mesh/index.html\nTo understand what you need to make heat flow between regions you need to consider the block restriction of your kernels and maybe if you need to set up interface kernels.\nhttps://mooseframework.inl.gov/syntax/InterfaceKernels/index.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2924529",
                  "updatedAt": "2022-06-10T16:24:48Z",
                  "publishedAt": "2022-06-10T16:24:47Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sychang2021"
                          },
                          "bodyText": "Thank you for paying attention to my problem. Are there any three-dimensional solid-solid heat transfer and fluid-solid heat transfer cases in MOOSE?\nI re-create mesh by MOOSE mesh generators, but the problem still exists. Here is the results:\n\nI can't understand why the temperature in some places is 300K lower than the initial temperature. The system is adiabatic at the boundaries, and the outer cylinder is releasing heat, so the temperature inside should not drop. Here is the input file using mesh generated by MOOSE mesh generators:\nini_temp = 300 # K\n\n[Variables]\n  [./temp]\n    initial_condition = ${ini_temp}\n  [../]\n[]\n\n[Mesh]\n  [./ccmg]\n    type = ConcentricCircleMeshGenerator\n    radii = '3 4'\n    rings = '20 10'\n    has_outer_square = false\n    preserve_volumes = true\n    num_sectors = 20 # what does this mean\n    smoothing_max_it = 3\n  [../]\n  [./outer_circle]\n    type = SideSetsBetweenSubdomainsGenerator\n    input = ccmg\n    primary_block = 2\n    paired_block = 1\n    new_boundary = 'outer_bottom'\n  [../]\n  [./extrude]\n    type = MeshExtruderGenerator\n    extrusion_vector = '0 0 20'\n    input = 'outer_circle'\n    bottom_sideset = 'outer_bottom'\n    top_sideset = 'outer_top'\n    num_layers = 10\n  [../]\n[]\n\n[Kernels]\n  [./temp_time_derivative]\n    type = INSTemperatureTimeDerivative\n    variable = temp\n  [../]\n  [./temp_diffusion]\n    type = MatDiffusion\n    diffusivity = 'k'\n    variable = temp\n  [../]\n  [./temp_heat_source]\n    type = HeatSource\n    variable = temp\n    block = '2'\n    value = 1e8\n  [../]\n[]\n\n[BCs]\n[]\n\n[Materials]\n  [./outer_cylinder]\n    type = GenericConstantMaterial\n    prop_names = 'rho cp k'\n    prop_values = '0.011 300 0.06'\n    block = '2'\n  [../]\n  [./inner_cylinder]\n    type = GenericConstantMaterial\n    prop_names = 'rho cp k'\n    prop_values = '0.01 1500 0.12'\n    block = '1'\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  num_steps = 100\n  dt = 2e-7\n\n  nl_rel_tol = 1e-6\n  nl_abs_tol = 1e-6\n\n  solve_type = 'NEWTON'\n  petsc_options = '-snes_converged_reason -ksp_converged_reason -snes_linesearch_monitor'\n  petsc_options_iname = '-pc_type -pc_factor_shift_type'\n  petsc_options_value = 'lu       NONZERO'\n  line_search = 'none'\n\n  nl_max_its = 30\n  l_max_its = 100\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Outputs]\n  type = Exodus\n[]\n\n\nThe results of the steady state calculations appear to be fine. Because I did not define the outer wall of the cylinder, only outer_bottom, so I set a temperature boundary condition (600K) for outer_bottom, and its output is like this:\n\nHere is steady simulation input file:\nini_temp = 300 # K\n\n[Variables]\n  [./temp]\n    initial_condition = ${ini_temp}\n  [../]\n[]\n\n[Mesh]\n  [./ccmg]\n    type = ConcentricCircleMeshGenerator\n    radii = '3 4'\n    rings = '20 10'\n    has_outer_square = false\n    preserve_volumes = true\n    num_sectors = 20 # what does this mean\n    smoothing_max_it = 3\n  [../]\n  [./outer_circle]\n    type = SideSetsBetweenSubdomainsGenerator\n    input = ccmg\n    primary_block = 2\n    paired_block = 1\n    new_boundary = 'outer_bottom'\n  [../]\n  [./extrude]\n    type = MeshExtruderGenerator\n    extrusion_vector = '0 0 20'\n    input = 'outer_circle'\n    bottom_sideset = 'outer_bottom'\n    top_sideset = 'outer_top'\n    num_layers = 10\n  [../]\n[]\n\n[Kernels]\n  [./temp_diffusion]\n    type = MatDiffusion\n    diffusivity = 'k'\n    variable = temp\n  [../]\n  [./temp_heat_source]\n    type = HeatSource\n    variable = temp\n    block = '2'\n    value = 1e3\n  [../]\n[]\n\n[BCs]\n  [./inner_dirichlet]\n    type = DirichletBC\n    variable = temp\n    value = 600\n    boundary = 'outer_top'\n  [../]\n[]\n\n[Materials]\n  [./outer_cylinder]\n    type = GenericConstantMaterial\n    prop_names = 'rho cp k'\n    prop_values = '0.011 300 0.6'\n    block = '2'\n  [../]\n  [./inner_cylinder]\n    type = GenericConstantMaterial\n    prop_names = 'rho cp k'\n    prop_values = '0.01 150 1.2'\n    block = '1'\n  [../]\n[]\n\n\n[Outputs]\n  type = Exodus\n[]\n\nIn addition, I would like to ask, if two solids contact and conduct heat, but the solids share an interface, what conditions do I need to set on the interface (will MOOSE default to the same heat flux density inside and outside the shared interface)? If the solid has two faces that fit together (no gap between the two faces), what conditions do I need to set? If the fluid transfers heat in the pipeline, the fluid and the solid share an interface. Do I need to set the InterfaceKernel on the interface? If it is a fluid and solid interface with two faces that fit together (no gap between the two faces), do I have to set the InterfaceKernel on the interface?",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2928982",
                          "updatedAt": "2022-06-11T16:04:34Z",
                          "publishedAt": "2022-06-11T15:04:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nI m not sure the INSTimeDerivative is the one to use here. Where did you find a heat conduction example with this?\nyour density is very small. This means the solid heats up very quickly as well.\nThe first picture makes me think the boundary conditions are wrong. Which is outer bottom between the inner and outer cylinders?\nFinally if the block restriction of the diffusion kernel includes both regions, and they are in contact in the mesh, you do not need to set a special interface condition not let heat flux though.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2929310",
                          "updatedAt": "2022-06-11T16:33:22Z",
                          "publishedAt": "2022-06-11T16:33:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sychang2021"
                          },
                          "bodyText": "I think the way MOOSE solves the problem is to combine different terms so that the whole equation can be solved. For example, INSTemperatureTimeDerivative corresponds to \u03c1cp\u2202T/\u2202t, so I think adding it to Kernels can add a time term to the equation being solved. Is there any difference between HeatConductionTimeDerivative and INSTemperatureTimeDerivative (they both stand for \u03c1cp\u2202T/\u2202t)? Or is there any difference between INSADHeatConductionTimeDerivative and ADHeatConductionTimeDerivative (they both also stand for \u03c1cp\u2202T/\u2202t but use automatic differentiation)?\nI think a similar problem occurs when I crank up the density, the root of the problem is where there is a drop in temperature in a system that is constantly gaining heat with the same initial temperature.\nOuter_bottom represents the bottom of the outer cylinder, and there is an interface between the inner cylinder and the outer cylinder (but I didn't give it a name because I'm not very good at using MOOSE mesh generators). The upper, lower, and surrounding boundary conditions are adiabatic, meaning that no heat is dissipated.\nThanks a lot.",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2929372",
                          "updatedAt": "2022-06-11T18:04:07Z",
                          "publishedAt": "2022-06-11T16:49:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There are differences between those four kernels, but if you have checked the documentation and they add the term you want to the residual then you should be ok.\nthis\n  [./outer_circle]\n    type = SideSetsBetweenSubdomainsGenerator\n    input = ccmg\n    primary_block = 2\n    paired_block = 1\n    new_boundary = 'outer_bottom'\n  [../]\n\nnamed the boundary between block 1 and 2 (eg outer and inner rings) as outer_bottom.  I think outer_bottom is the z = 0 plane,  not this circular boundary. If you made this boundary an adiabtatic boundary that is definitely a problem",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2930975",
                          "updatedAt": "2022-06-12T04:30:16Z",
                          "publishedAt": "2022-06-12T04:30:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sychang2021"
                          },
                          "bodyText": "I replaced the original with the following Mesh block:\n[Mesh]\n  [./ccmg]\n    type = ConcentricCircleMeshGenerator\n    radii = '3 4'\n    rings = '20 10'\n    has_outer_square = false\n    preserve_volumes = true\n    num_sectors = 20 # what does this mean\n    smoothing_max_it = 3\n  [../]\n  [./outer_circle]\n    type = SideSetsBetweenSubdomainsGenerator\n    input = ccmg\n    primary_block = 2\n    paired_block = 1\n    new_boundary = 'inner_wall'\n  [../]\n  [./extrude]\n    type = MeshExtruderGenerator\n    extrusion_vector = '0 0 20'\n    input = 'outer_circle'\n    bottom_sideset = 'outer_bottom'\n    top_sideset = 'outer_top'\n    num_layers = 10\n  [../]\n[]\n\nI named the interface inner_wall and the bottom of the outer cylinder outer_bottom . But the output is the same as before. I don't think this should be a mesh issue.\n\nAlso, when I generate a very fine radial mesh (change rings='20 10' to rings='100 50' ), I have this result:\n\nI don't think Kernels is the reason. I recreated an input file today using ADHeatConductionTimeDerivative, ADHeatConduction, ADMatHeatSource as follows:\nini_temp = 300 # K\n\n[Variables]\n  [./temp]\n    initial_condition = ${ini_temp}\n  [../]\n[]\n\n[Mesh]\n  file = cylinder.msh\n[]\n\n[Kernels]\n  [./time]\n    type = ADHeatConductionTimeDerivative\n    variable = temp\n    density_name = rho\n    specific_heat = cp\n  [../]\n  [./diff]\n    type = ADHeatConduction\n    variable = temp\n    thermal_conductivity = k\n  [../]\n  [./source]\n    type = ADMatHeatSource\n    variable = temp\n    block = 'outer'\n    scalar = 1e3\n    material_property = const_heat\n  [../]\n[]\n\n[BCs]\n[]\n\n[Materials]\n  [./inner_mat]\n    type = ADGenericConstantMaterial\n    block = 'inner'\n    prop_names = 'rho cp k'\n    prop_values = '11343.7 130 34.8'\n  [../]\n  [./outer_mat]\n    type = ADGenericConstantMaterial\n    block = 'outer'\n    prop_names = 'rho cp k'\n    prop_values = '7860 460 46.52'\n  [../]\n  [./heat_mat]\n    type = ADParsedMaterial\n    block = 'outer'\n    f_name = const_heat\n    function = '1e11'\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  num_steps = 100\n  dt = 2e-7\n\n  nl_rel_tol = 1e-6\n  nl_abs_tol = 1e-6\n\n  solve_type = 'NEWTON'\n  petsc_options = '-snes_converged_reason -ksp_converged_reason -snes_linesearch_monitor'\n  petsc_options_iname = '-pc_type -pc_factor_shift_type'\n  petsc_options_value = 'lu       NONZERO'\n  line_search = 'none'\n\n  nl_max_its = 30\n  l_max_its = 100\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Outputs]\n  type = Exodus\n[]\n\nThe mesh file(cylinder.zip) and outputs are as follows:\n\nIt can be found that there will be temperature distortions at two or three layers of meshes near the interface. What do you think is the cause?",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2932698",
                          "updatedAt": "2022-06-12T13:50:26Z",
                          "publishedAt": "2022-06-12T13:50:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nSo for your .msh file the results look distinctively worse. I think there is an issue with that one.\nA few potential issues:\n\nmesh isnt conformal at the interface or is conformal but still not properly stitched together\nsidesets are not consistently oriented at the interface\n\nFor the MOOSE mesh, the results do look bad. I m wondering if it s because you dont have a boundary condition. So the problem is ill-determined, and the solver converges to an unphysical solution.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2933676",
                          "updatedAt": "2022-06-12T17:52:40Z",
                          "publishedAt": "2022-06-12T17:52:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sychang2021"
                          },
                          "bodyText": "I set up a DirichletBC with a temperature of 600K at outer_bottom:\n[BCs]\n  [./outer_bottom]\n    type = DirichletBC\n    variable = temp\n    value = 600\n    boundary = 'outer_bottom'\n  [../]\n[]\n\nBut it still has problems with its results. The results and output files are as follows:\nout_bottom.zip\n\nAnd I also set inner_wall (interface between inner cylinder and outer cylinder) equal to 600K, the result still has problems:\n[BCs]\n  [./inner_wall]\n    type = DirichletBC\n    variable = temp\n    value = 600\n    boundary = 'inner_wall'\n  [../]\n[]\n\ninner_wall.zip",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2935548",
                          "updatedAt": "2022-06-13T05:05:58Z",
                          "publishedAt": "2022-06-13T05:05:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You mesh cells have a really high aspect ratio right now. Could that be the issue?\nDont place a boundary condition inside the mesh, only on the outside\nWhat is the convergence history for this case? Can you please attach the log here",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2935587",
                          "updatedAt": "2022-06-13T05:20:16Z",
                          "publishedAt": "2022-06-13T05:20:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sychang2021"
                          },
                          "bodyText": "I reduced the aspect ratio of the mesh, but the result doesn't seem to change anything. The boundary condition I used is that the temperature of outer_bottom is 600K.  As a result, there are two problems, one is that the temperature rises and falls abnormally at the interface, and the other is that it seems that the heat of the heat source is not introduced into the inner cylinder.  I would also like to ask, are there any examples of 3D transient heat conduction and convection heat transfer in MOOSE? I think maybe my input file is written wrong somewhere (though I can't find the error so far and have rewritten it many times). If there are examples of successful thermal conduction and convection heat transfer as a reference, maybe I can find my mistake(I think it should be a relatively low-level error, not a MOOSE bug).\nouter_bottom.zip\n\nThe following are modifications to the aspect ratio of the mesh\uff1a\n  [./ccmg]\n    type = ConcentricCircleMeshGenerator\n    radii = '3 4'\n    rings = '20 10'\n    has_outer_square = false\n    preserve_volumes = true\n    num_sectors = 40 \n    smoothing_max_it = 3\n  [../]\n\nThe convergence is very good during the calculation process, the following is the log of the last 5 steps:\nTime Step 96, time = 1.92e-05, dt = 2e-07\n 0 Nonlinear |R| = 3.270938e+14\n    |residual|_2 of individual variables:\n                       temp: 3.27094e+14\n      0 Linear |R| = 3.270938e+14\n      1 Linear |R| = 2.970805e-01\n  Linear solve converged due to CONVERGED_RTOL iterations 1\n 1 Nonlinear |R| = 8.471404e-01\n    |residual|_2 of individual variables:\n                       temp: 0.84714\nNonlinear solve converged due to CONVERGED_FNORM_RELATIVE iterations 1\n Solve Converged!\n\nTime Step 97, time = 1.94e-05, dt = 2e-07\n 0 Nonlinear |R| = 3.270938e+14\n    |residual|_2 of individual variables:\n                       temp: 3.27094e+14\n      0 Linear |R| = 3.270938e+14\n      1 Linear |R| = 5.163189e+00\n  Linear solve converged due to CONVERGED_RTOL iterations 1\n 1 Nonlinear |R| = 5.164568e+00\n    |residual|_2 of individual variables:\n                       temp: 5.16457\nNonlinear solve converged due to CONVERGED_FNORM_RELATIVE iterations 1\n Solve Converged!\n\nTime Step 98, time = 1.96e-05, dt = 2e-07\n 0 Nonlinear |R| = 3.270938e+14\n    |residual|_2 of individual variables:\n                       temp: 3.27094e+14\n      0 Linear |R| = 3.270938e+14\n      1 Linear |R| = 9.871416e+00\n  Linear solve converged due to CONVERGED_RTOL iterations 1\n 1 Nonlinear |R| = 9.930024e+00\n    |residual|_2 of individual variables:\n                       temp: 9.93002\nNonlinear solve converged due to CONVERGED_FNORM_RELATIVE iterations 1\n Solve Converged!\n\nTime Step 99, time = 1.98e-05, dt = 2e-07\n 0 Nonlinear |R| = 3.270938e+14\n    |residual|_2 of individual variables:\n                       temp: 3.27094e+14\n      0 Linear |R| = 3.270938e+14\n      1 Linear |R| = 1.598523e+00\n  Linear solve converged due to CONVERGED_RTOL iterations 1\n 1 Nonlinear |R| = 1.865783e+00\n    |residual|_2 of individual variables:\n                       temp: 1.86578\nNonlinear solve converged due to CONVERGED_FNORM_RELATIVE iterations 1\n Solve Converged!\n\nTime Step 100, time = 2e-05, dt = 2e-07\n 0 Nonlinear |R| = 3.270938e+14\n    |residual|_2 of individual variables:\n                       temp: 3.27094e+14\n      0 Linear |R| = 3.270938e+14\n      1 Linear |R| = 8.782678e-01\n  Linear solve converged due to CONVERGED_RTOL iterations 1\n 1 Nonlinear |R| = 1.366968e+00\n    |residual|_2 of individual variables:\n                       temp: 1.36697\nNonlinear solve converged due to CONVERGED_FNORM_RELATIVE iterations 1\n Solve Converged!",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2935908",
                          "updatedAt": "2022-06-13T12:53:39Z",
                          "publishedAt": "2022-06-13T06:44:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThis is very not converged. A residual of roughly 1 roughly means the solution changed by 100% between two non linear iterations.\nDrop the nl_rel_tol by a lot to make sure you are converging your solutions. This makes a lot more sense now why the results look so odd.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21265#discussioncomment-2939546",
                          "updatedAt": "2022-06-13T15:11:01Z",
                          "publishedAt": "2022-06-13T15:10:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "error about Getting Started : Install MOOSE Conda Packages",
          "author": {
            "login": "xiaojbing"
          },
          "bodyText": "I try to install moose in Ubuntu , but an error occurred during the installation of MOOSE Conda Packages.",
          "url": "https://github.com/idaholab/moose/discussions/18625",
          "updatedAt": "2022-06-30T11:17:37Z",
          "publishedAt": "2021-08-18T02:17:43Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nLooks like a conda error to me. Not much we may be able to do about it.\nCan you try this instead\nconda env remove -n moose\nconda install mamba\nmamba create -n moose moose-libmesh moose-tools\nconda activate moose\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1198074",
                  "updatedAt": "2022-06-16T01:51:55Z",
                  "publishedAt": "2021-08-18T02:20:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xiaojbing"
                          },
                          "bodyText": "I followed your steps, but the following problems occurred",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1198094",
                          "updatedAt": "2022-06-16T01:51:55Z",
                          "publishedAt": "2021-08-18T02:29:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok run conda deactivate first, then the other steps",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1198173",
                          "updatedAt": "2022-06-16T01:52:16Z",
                          "publishedAt": "2021-08-18T03:00:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if this doesnt work, I'd remove conda completely and re-install",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1198174",
                          "updatedAt": "2022-06-16T01:52:16Z",
                          "publishedAt": "2021-08-18T03:00:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "I would not uninstall conda, as it seems to be a channel issue. Please see my answer in this thread.",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1198247",
                          "updatedAt": "2022-06-29T16:07:06Z",
                          "publishedAt": "2021-08-18T03:35:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "I just experienced this with a fresh conda installation, and it seems to be an issue with https://conda.software.inl.gov, as switching to idaholab allowed package metadata collection and package resolution. Tagging @milljm.\nIn the meantime @xiaojbing, please run the following commands individually:\nconda deactivate\nconda env remove -n moose\nconda config --remove channels https://conda.software.inl.gov\nconda config --add channels idaholab\nconda create --name moose -q -y\nconda activate moose\nconda install moose-tools\nconda install moose-libmesh\n\nNow you should be able to attempt to build MOOSE. Do not forget to run conda activate moose anytime you start a new terminal instance.\nIf you run into issues, please copy and paste your error into the conversation rather than post screenshots! It helps others who may be encountering the same errors and searching the Discussions forum.",
                  "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1198246",
                  "updatedAt": "2022-06-16T01:52:17Z",
                  "publishedAt": "2021-08-18T03:34:41Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xiaojbing"
                          },
                          "bodyText": "Thank you, I ran the command and the problem has been solved.",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1198263",
                          "updatedAt": "2022-06-16T01:52:43Z",
                          "publishedAt": "2021-08-18T03:47:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "eastglow-zz"
                          },
                          "bodyText": "I got the same issue with @xiaojbing on Big Sur, but it was resolved by this answer.",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1201142",
                          "updatedAt": "2022-06-16T01:52:43Z",
                          "publishedAt": "2021-08-18T13:53:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "The channel is incorrect... Sorry. It should be:\nconda config --add channels https://conda.software.inl.gov/public\nI have a fix rolling through the system now: #18630",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-1201300",
                          "updatedAt": "2022-06-16T01:52:44Z",
                          "publishedAt": "2021-08-18T14:25:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "eduardogrodriguez89"
                          },
                          "bodyText": "I have this error and I coudn't solucionate it.\n(moose) erodriguez@moccai-11:~$ conda install moose-libmesh\nCollecting package metadata (current_repodata.json): failed\nUnavailableInvalidChannel: The channel is not accessible or is invalid.\nchannel name: idaholab\nchannel url: https://conda.anaconda.org/idaholab\nerror code: 404\nYou will need to adjust your conda configuration to proceed.\nUse conda config --show channels to view your configuration's current state,\nand use conda config --show-sources to view config file locations.",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-3049309",
                          "updatedAt": "2022-06-29T15:07:10Z",
                          "publishedAt": "2022-06-29T15:07:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "The idaholab conda channel has been closed due to Anaconda's Terms of Service. We are using the https://conda.software.inl.gov/public channel as our primary channel. Please run the following commands to fix your channels and to make sure your environment is set up properly to use the new channel:\nconda deactivate\nconda env remove -n moose\nconda config --remove channels idaholab\nconda config --add channels https://conda.software.inl.gov/public\nconda create --name moose -q -y\nconda activate moose\nconda install moose-tools\nconda install moose-libmesh",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-3049714",
                          "updatedAt": "2022-06-29T16:01:31Z",
                          "publishedAt": "2022-06-29T16:00:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "eduardogrodriguez89"
                          },
                          "bodyText": "thanks, it works",
                          "url": "https://github.com/idaholab/moose/discussions/18625#discussioncomment-3055544",
                          "updatedAt": "2022-06-30T11:17:37Z",
                          "publishedAt": "2022-06-30T11:17:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Radiant heat transfer problem",
          "author": {
            "login": "Gallasd"
          },
          "bodyText": "Hello,\nI have some questions about radiation heat transfer that I need to ask you\nHere's my 2D radiation geometry, here's the solid, heat transfer to outer space, and the naming of the edges.Obviously, there is surface radiation heat exchange between ce1 and top1, and there is surface radiation heat exchange between ce2 and top2.\n\nThere are two viewfactor calculation programs provided by Moose, one is UnobstructedPlanarViewFactor, the other is ViewFactorRayStudy, UnobstructedPlanarViewFactor is for the calculation of the unobstructed surface, and ViewFactorRayStudy is for the calculation of the surface with obstacles.\nThe viewfactor calculation method suitable for my problem is ViewFactorRayStudy. I tried to use ViewFactorRayStudy to calculate, but I found that the angle coefficient obtained is like this:\n\nMoose recognized my solid model as a cavity, so there are only angular coefficients at ce1 and ce2. But my model is solid and the rays should be emitted outwards instead of inwards, I don't know if you have any suggestions to solve this problem.",
          "url": "https://github.com/idaholab/moose/discussions/21452",
          "updatedAt": "2022-07-04T03:28:12Z",
          "publishedAt": "2022-06-29T14:26:56Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWe only support view factor calculations inside meshed regions currently. So make sure the domain is meshed both inside and outside.\nWe will have support for external-to-the-mesh view factors next year\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21452#discussioncomment-3051964",
                  "updatedAt": "2022-06-29T22:43:03Z",
                  "publishedAt": "2022-06-29T22:43:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error from reading vtk files",
          "author": {
            "login": "hugy888"
          },
          "bodyText": "Hello,\nThe vtk file was made using dream3D and we wanted to read it with moose and assign each grain ID from vtk to a subdomain_id from moose.\nBut when I tried to load vtk file with following code:\n[Mesh]\ntype = FileMesh\nfile = new.vtk\ndim = 3\nelem_type = HEX8\n[]\nError shows up as followed:\n\nWould you please take a look? Thanks.",
          "url": "https://github.com/idaholab/moose/discussions/21453",
          "updatedAt": "2022-06-30T09:23:47Z",
          "publishedAt": "2022-06-29T14:32:09Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you try a FileMeshGenerator instead of the old FileMesh syntax please\nhttps://mooseframework.inl.gov/source/meshgenerators/FileMeshGenerator.html\nif that doesnt work i recommend installing meshio and converting it to exodus\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21453#discussioncomment-3051647",
                  "updatedAt": "2022-06-29T21:39:56Z",
                  "publishedAt": "2022-06-29T21:39:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}