{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0xMS0wNlQxMDo0OToyOS0wNjowMM4AVu05"
    },
    "edges": [
      {
        "node": {
          "title": "no issues on entire linux install but post-install tests do not run with problem with \"hit\" module",
          "author": {
            "login": "tckosvic"
          },
          "bodyText": "No issue during install following installation instructions.  But, running test first says that \"hit\" is up to date and then finds \"no module named hit\".  I have no idea what hit is.  Any ideas?\nopensuse leap 15.5 linux system.\n(moose) tom@mydesktop:~/projects/moose/test> ./run_tests\nBuilding and linking hit...\nmake[1]: Entering directory '/home/tom/projects/moose/framework/contrib/hit'\nBuilding hit for python with python3-config\nmake[1]: 'hit' is up to date.\nmake[1]: Leaving directory '/home/tom/projects/moose/framework/contrib/hit'\nTraceback (most recent call last):\n  File \"/home/tom/projects/moose/python/pyhit/__init__.py\", line 13, in <module>\n    import hit\nModuleNotFoundError: No module named 'hit'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/tom/projects/moose/python/pyhit/__init__.py\", line 18, in <module>\n    import hit\nImportError: /home/tom/mambaforge3/envs/moose/lib/libmpicxx.so.12: undefined symbol: MPII_Errhandler_set_cxx\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/tom/projects/moose/test/./run_tests\", line 6, in <module>\n    from TestHarness import TestHarness\n  File \"/home/tom/projects/moose/python/TestHarness/__init__.py\", line 15, in <module>\n    from .TestHarness import TestHarness\n  File \"/home/tom/projects/moose/python/TestHarness/TestHarness.py\", line 20, in <module>\n    from FactorySystem.Factory import Factory\n  File \"/home/tom/projects/moose/python/FactorySystem/__init__.py\", line 13, in <module>\n    from .Parser import Parser\n  File \"/home/tom/projects/moose/python/FactorySystem/Parser.py\", line 13, in <module>\n    import pyhit\n  File \"/home/tom/projects/moose/python/pyhit/__init__.py\", line 22, in <module>\n    import hit\nImportError: /home/tom/mambaforge3/envs/moose/lib/libmpicxx.so.12: undefined symbol: MPII_Errhandler_set_cxx\n(moose) tom@mydesktop:~/projects/moose/test>",
          "url": "https://github.com/idaholab/moose/discussions/25996",
          "updatedAt": "2023-11-09T13:59:56Z",
          "publishedAt": "2023-11-08T02:32:58Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "Can you run the diagnostics.sh script in moose/scripts and report the results of running that script?",
                  "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7512514",
                  "updatedAt": "2023-11-08T16:05:05Z",
                  "publishedAt": "2023-11-08T16:05:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "tckosvic"
                  },
                  "bodyText": "In another thread concerned with \"hit\" module, a channel was not right.  Here is my channel list:\n`(moose) tom@mydesktop:~/projects> conda config --show channels\nchannels:\n\nhttps://conda.software.inl.gov/public\nconda-forge\ndefaults\n(moose) tom@mydesktop:~/projects>\n`",
                  "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7512669",
                  "updatedAt": "2023-11-08T16:17:22Z",
                  "publishedAt": "2023-11-08T16:17:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "tckosvic"
                  },
                  "bodyText": "Per request, I ran ./diagnostics script.  Long output but here it is:\n(moose) tom@mydesktop:~/projects/moose/scripts> ./diagnostics.sh\nWed 08 Nov 2023 10:18:37 AM CST\n\nSystem Arch: LSB Version: core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0.fake-amd64:desktop-4.0.fake-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0.fake-amd64:graphics-4.0.fake-noarch Distributor ID: openSUSE Description: openSUSE Leap 15.5 Release: 15.5 Codename: n/a\n\nMOOSE Package Version: Custom Build\n\nCPU Count: 12\n\nMemory Free: 10890.227 MB\n\nVariable `which $CC` check:\n/home/tom/mambaforge3/envs/moose/bin/mpicc\n\n$CC --version:\nx86_64-conda-linux-gnu-cc (conda-forge gcc 10.4.0-19) 10.4.0\nCopyright (C) 2020 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nMPICC:\nwhich mpicc:\n        /home/tom/mambaforge3/envs/moose/bin/mpicc\nmpicc -show:\n        x86_64-conda-linux-gnu-cc -I/home/tom/mambaforge3/envs/moose/include -I/home/tom/mambaforge3/envs/moose/include -L/home/tom/mambaforge3/envs/moose/lib -Wl,-rpath,/home/tom/mambaforge3/envs/moose/lib -I/home/tom/mambaforge3/envs/moose/include -L/home/tom/mambaforge3/envs/moose/lib -Wl,-rpath -Wl,/home/tom/mambaforge3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nCOMPILER x86_64-conda-linux-gnu-cc:\nx86_64-conda-linux-gnu-cc (conda-forge gcc 10.4.0-19) 10.4.0\nCopyright (C) 2020 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nPython:\n        /home/tom/mambaforge3/envs/moose/bin/python\n        Python 3.10.8\n\nMODULES:\nNo modules loaded\n\nPETSc configure:\nstatic const char *petscconfigureoptions = \"--with-64-bit-indices --with-cxx-dialect=C++17 --with-debugging=no --with-fortran-bindings=0 --with-mpi=1 --with-openmp=1 --with-shared-libraries=1 --with-sowing=0 --download-fblaslapack=1 --download-hypre=1 --download-metis=1 --download-mumps=1 --download-ptscotch=1 --download-parmetis=1 --download-scalapack=1 --download-slepc=1 --download-strumpack=1 --download-superlu_dist=1 --with-hdf5-dir=${PREFIX} --with-make-np=16 --COPTFLAGS=-O3 --CXXOPTFLAGS=-O3 --FOPTFLAGS=-O3 --with-x=0 --with-ssl=0 --with-mpi-dir=/home/tom/mambaforge3/envs/moose AR=${PREFIX}/bin/x86_64-conda-linux-gnu-ar RANLIB=${PREFIX}/bin/x86_64-conda-linux-gnu-ranlib CFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell\" CXXFLAGS=\"-fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem ${PREFIX}/include  -march=nocona -mtune=haswell\" CPPFLAGS=\"-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/tom/mambaforge3/envs/moose/include -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/tom/mambaforge3/envs/moose/include\" FFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include   -I/home/tom/mambaforge3/envs/moose/include\" FCFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include   -I/home/tom/mambaforge3/envs/moose/include\" LDFLAGS=\"-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/home/tom/mambaforge3/envs/moose/lib -Wl,-rpath-link,/home/tom/mambaforge3/envs/moose/lib -L/home/tom/mambaforge3/envs/moose/lib -Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/home/tom/mambaforge3/envs/moose/lib -Wl,-rpath-link,/home/tom/mambaforge3/envs/moose/lib -L/home/tom/mambaforge3/envs/moose/lib\" --prefix=/home/tom/mambaforge3/envs/moose\";\n\nPETSc linked libraries:\n        linux-vdso.so.1 (0x00007fff33d7e000)\n        libHYPRE-2.29.0.so => /home/tom/mambaforge3/envs/moose/lib/./libHYPRE-2.29.0.so (0x00007f3c5a8f5000)\n        libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f3c5a860000)\n        libstrumpack.so.7.1 => /home/tom/mambaforge3/envs/moose/lib/./libstrumpack.so.7.1 (0x00007f3c5983f000)\n        libscalapack.so.2.2 => /home/tom/mambaforge3/envs/moose/lib/./libscalapack.so.2.2 (0x00007f3c59148000)\n        libsuperlu_dist.so.8 => /home/tom/mambaforge3/envs/moose/lib/./libsuperlu_dist.so.8 (0x00007f3c58fc4000)\n        libparmetis.so => /home/tom/mambaforge3/envs/moose/lib/./libparmetis.so (0x00007f3c58f86000)\n        libmetis.so => /home/tom/mambaforge3/envs/moose/lib/./libmetis.so (0x00007f3c58f1b000)\n        libhdf5.so.200 => /home/tom/mambaforge3/envs/moose/lib/./libhdf5.so.200 (0x00007f3c58ae9000)\n        libm.so.6 => /lib64/libm.so.6 (0x00007f3c5899b000)\n        libdl.so.2 => /lib64/libdl.so.2 (0x00007f3c58996000)\n        libmpifort.so.12 => /home/tom/mambaforge3/envs/moose/lib/./libmpifort.so.12 (0x00007f3c58945000)\n        libmpi.so.12 => /home/tom/mambaforge3/envs/moose/lib/./libmpi.so.12 (0x00007f3c5852b000)\n        libgfortran.so.5 => /home/tom/mambaforge3/envs/moose/lib/./libgfortran.so.5 (0x00007f3c58380000)\n        libgcc_s.so.1 => /home/tom/mambaforge3/envs/moose/lib/./libgcc_s.so.1 (0x00007f3c58365000)\n        libstdc++.so.6 => /home/tom/mambaforge3/envs/moose/lib/./libstdc++.so.6 (0x00007f3c58180000)\n        libgomp.so.1 => /home/tom/mambaforge3/envs/moose/lib/./libgomp.so.1 (0x00007f3c58144000)\n        libc.so.6 => /lib64/libc.so.6 (0x00007f3c57f4d000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007f3c5c7d6000)\n        libquadmath.so.0 => /home/tom/mambaforge3/envs/moose/lib/././libquadmath.so.0 (0x00007f3c57f14000)\n        libzfp.so.0 => /home/tom/mambaforge3/envs/moose/lib/././libzfp.so.0 (0x00007f3c57ec0000)\n        libmpicxx.so.12 => /home/tom/mambaforge3/envs/moose/lib/././libmpicxx.so.12 (0x00007f3c57e9f000)\n        libcrypto.so.1.1 => /home/tom/mambaforge3/envs/moose/lib/././libcrypto.so.1.1 (0x00007f3c57bcd000)\n        libcurl.so.4 => /home/tom/mambaforge3/envs/moose/lib/././libcurl.so.4 (0x00007f3c57b2a000)\n        librt.so.1 => /lib64/librt.so.1 (0x00007f3c57b20000)\n        libz.so.1 => /home/tom/mambaforge3/envs/moose/lib/././libz.so.1 (0x00007f3c57b05000)\n        libnghttp2.so.14 => /home/tom/mambaforge3/envs/moose/lib/./././libnghttp2.so.14 (0x00007f3c57ad7000)\n        libssh2.so.1 => /home/tom/mambaforge3/envs/moose/lib/./././libssh2.so.1 (0x00007f3c57a93000)\n        libssl.so.1.1 => /home/tom/mambaforge3/envs/moose/lib/./././libssl.so.1.1 (0x00007f3c57a03000)\n        libgssapi_krb5.so.2 => /home/tom/mambaforge3/envs/moose/lib/./././libgssapi_krb5.so.2 (0x00007f3c579b0000)\n        libkrb5.so.3 => /home/tom/mambaforge3/envs/moose/lib/././././libkrb5.so.3 (0x00007f3c578d7000)\n        libk5crypto.so.3 => /home/tom/mambaforge3/envs/moose/lib/././././libk5crypto.so.3 (0x00007f3c578bd000)\n        libcom_err.so.3 => /home/tom/mambaforge3/envs/moose/lib/././././libcom_err.so.3 (0x00007f3c578b7000)\n        libkrb5support.so.0 => /home/tom/mambaforge3/envs/moose/lib/././././libkrb5support.so.0 (0x00007f3c578a8000)\n        libkeyutils.so.1 => /home/tom/mambaforge3/envs/moose/lib/././././libkeyutils.so.1 (0x00007f3c578a1000)\n        libresolv.so.2 => /lib64/libresolv.so.2 (0x00007f3c57889000)\n\nENVIRONMENT:\n ;;\n ;;\n ;;\n}\n}\nADDR2LINE=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-addr2line\nADIOS2_ARCH_PATH=/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/ADIOS2-2.8.3\nAR=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ar\nAS=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-as\nAUDIODRIVER=pulseaudio\nBASH_ENV=/usr/share/lmod/8.7.17/init/bash\nBASH_FUNC_ml%%=() {  eval \"$($LMOD_DIR/ml_cmd \"$@\")\"\nBASH_FUNC_module%%=() {  if [ -z \"${LMOD_SH_DBG_ON+x}\" ]; then\nBOOST_ARCH_PATH=/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/boost_1_74_0\nbuild_alias=x86_64-conda-linux-gnu\nBUILD=x86_64-conda-linux-gnu\n case \"$-\" in \nCC_FOR_BUILD=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-cc\nCC=mpicc\n_CE_CONDA=\n_CE_M=\nCFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include\nCGAL_ARCH_PATH=/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/CGAL-4.14.3\nC_INCLUDE_PATH=/home/tom/mambaforge3/envs/moose/include\nCMAKE_ARGS=-DCMAKE_AR=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ar -DCMAKE_CXX_COMPILER_AR=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ar -DCMAKE_C_COMPILER_AR=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ar -DCMAKE_RANLIB=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ranlib -DCMAKE_CXX_COMPILER_RANLIB=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ranlib -DCMAKE_C_COMPILER_RANLIB=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ranlib -DCMAKE_LINKER=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ld -DCMAKE_STRIP=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-strip\nCMAKE_PREFIX_PATH=/home/tom/mambaforge3/envs/moose:/home/tom/mambaforge3/envs/moose/x86_64-conda-linux-gnu/sysroot/usr\nCOLORFGBG=15;0\nCOLORTERM=truecolor\nCONDA_BACKUP_HOST=mydesktop\nCONDA_BUILD_SYSROOT=/home/tom/mambaforge3/envs/moose/x86_64-conda-linux-gnu/sysroot\nCONDA_DEFAULT_ENV=moose\nCONDA_EXE=/home/tom/mambaforge3/bin/conda\nCONDA_PREFIX_1=/home/tom/miniconda3\nCONDA_PREFIX_2=/home/tom/mambaforge3\nCONDA_PREFIX_3=/home/tom/mambaforge3/envs/moose\nCONDA_PREFIX_4=/home/tom/mambaforge3\nCONDA_PREFIX=/home/tom/mambaforge3/envs/moose\nCONDA_PROMPT_MODIFIER=(moose) \nCONDA_PYTHON_EXE=/home/tom/mambaforge3/bin/python\n_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu\nCONDA_SHLVL=5\nCONDA_TOOLCHAIN_BUILD=x86_64-conda-linux-gnu\nCONDA_TOOLCHAIN_HOST=x86_64-conda-linux-gnu\nCONFIG_SITE=/usr/share/site/x86_64-unknown-linux-gnu\nCPPFLAGS=-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/tom/mambaforge3/envs/moose/include\nCPP=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-cpp\nCPU=x86_64\nCSHEDIT=emacs\nCVS_RSH=ssh\nCXXFILT=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-c++filt\nCXXFLAGS=-fvisibility-inlines-hidden  -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include -std=c++17\nCXX_FOR_BUILD=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-c++\nCXX=mpicxx\nDBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus\nDEBUG_CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fvar-tracking-assignments -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include\nDEBUG_CPPFLAGS=-D_DEBUG -D_FORTIFY_SOURCE=2 -Og -isystem /home/tom/mambaforge3/envs/moose/include\nDEBUG_CXXFLAGS=-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fvar-tracking-assignments -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include\nDEBUG_FFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments -ffunction-sections -pipe\nDEBUG_FORTRANFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments -ffunction-sections -pipe\nDESKTOP_SESSION=mate\nDISPLAY=:1\n echo \"Shell debugging restarted\" 1>&2;\n echo \"Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod's output\" 1>&2;\nEigen3_DIR=/home/tom/mambaforge3/envs/moose/libmesh/include/Eigen\nELFEDIT=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-elfedit\n esac;\n eval \"$($LMOD_CMD shell \"$@\")\" && eval \"$(${LMOD_SETTARG_CMD:-:} -s sh)\";\nF77=mpif77\nF90=mpif90\nF95=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-f95\nFC_FOR_BUILD=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gfortran\nFC=mpif90\nFFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include\nFFTW_ARCH_PATH=/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/fftw-3.3.10\n fi;\n fi;\n fi;\nFOAM_API=2306\nFOAM_APPBIN=/home/tom/openfoam/OpenFOAM-v2306/platforms/linux64GccDPInt32Opt/bin\nFOAM_APP=/home/tom/openfoam/OpenFOAM-v2306/applications\nFOAM_ETC=/home/tom/openfoam/OpenFOAM-v2306/etc\nFOAM_EXT_LIBBIN=/home/tom/openfoam/ThirdParty-v2306/platforms/linux64GccDPInt32/lib\nFOAM_LIBBIN=/home/tom/openfoam/OpenFOAM-v2306/platforms/linux64GccDPInt32Opt/lib\nFOAM_MPI=sys-openmpi\nFOAM_RUN=/home/tom/OpenFOAM/tom-v2306/run\nFOAM_SITE_APPBIN=/home/tom/openfoam/OpenFOAM-v2306/site/2306/platforms/linux64GccDPInt32Opt/bin\nFOAM_SITE_LIBBIN=/home/tom/openfoam/OpenFOAM-v2306/site/2306/platforms/linux64GccDPInt32Opt/lib\nFOAM_SOLVERS=/home/tom/openfoam/OpenFOAM-v2306/applications/solvers\nFOAM_SRC=/home/tom/openfoam/OpenFOAM-v2306/src\nFOAM_TUTORIALS=/home/tom/openfoam/OpenFOAM-v2306/tutorials\nFOAM_USER_APPBIN=/home/tom/OpenFOAM/tom-v2306/platforms/linux64GccDPInt32Opt/bin\nFOAM_USER_LIBBIN=/home/tom/OpenFOAM/tom-v2306/platforms/linux64GccDPInt32Opt/lib\nFOAM_UTILITIES=/home/tom/openfoam/OpenFOAM-v2306/applications/utilities\nFORTRANFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/tom/mambaforge3/envs/moose/include\nFROM_HEADER=\nG_BROKEN_FILENAMES=1\nGCC_AR=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ar\nGCC=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc\nGCC_NM=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-nm\nGCC_RANLIB=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ranlib\nGDL_HOME=/home/tom/gdl/install/\nGDL_PATH=/home/tom/gdl/install/\nGDL_STARTUP=/home/tom/.gdl/gdl_startup.pro\nGDM_LANG=en_US.utf8\nGDMSESSION=mate\nG_FILENAME_ENCODING=@locale,UTF-8,ISO-8859-15,CP1252\nGFORTRAN=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gfortran\nGIO_LAUNCHED_DESKTOP_FILE_PID=19108\nGPG_TTY=/dev/pts/2\nGPROF=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gprof\nGSETTINGS_SCHEMA_DIR_CONDA_BACKUP=\nGSETTINGS_SCHEMA_DIR=/home/tom/mambaforge3/envs/moose/share/glib-2.0/schemas\nGTK_IM_MODULE=ibus\nGTK_MODULES=canberra-gtk-module\nGTK_OVERLAY_SCROLLING=0\nGUESTFISH_INIT=\nGUESTFISH_OUTPUT=\nGUESTFISH_PS1=\\[\\]><fs>\\[\\] \nGUESTFISH_RESTORE=\nGXX=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-g++\nHDF5_DIR=/home/tom/mambaforge3/envs/moose\nHISTSIZE=1000\nHOME=/home/tom\nhost_alias=x86_64-conda-linux-gnu\nHOSTNAME=mydesktop\nHOSTTYPE=x86_64\nHOST=x86_64-conda-linux-gnu\n if [ -n \"${__lmod_sh_dbg:-}\" ]; then\n if [ -n \"${__lmod_sh_dbg:-}\" ]; then\nINPUT_METHOD=ibus\nJAVA_BINDIR=/usr/lib64/jvm/java-11-openjdk-11/bin\nJAVA_HOME=/usr/lib64/jvm/java-11-openjdk-11\nJAVA_ROOT=/usr/lib64/jvm/java-11-openjdk-11\nJDK_HOME=/usr/lib64/jvm/java-11-openjdk-11\nJRE_HOME=/usr/lib64/jvm/java-11-openjdk-11\nKONSOLE_DBUS_SERVICE=:1.121\nKONSOLE_DBUS_SESSION=/Sessions/1\nKONSOLE_DBUS_WINDOW=/Windows/1\nKONSOLE_VERSION=221203\nLANG=en_US.utf8\nLANGUAGE=\nLDFLAGS=-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/home/tom/mambaforge3/envs/moose/lib -Wl,-rpath-link,/home/tom/mambaforge3/envs/moose/lib -L/home/tom/mambaforge3/envs/moose/lib\nLD_GOLD=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ld.gold\nLD=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ld\nLD_LIBRARY_PATH=/home/tom/OpenFOAM/tom-v2306/platforms/linux64GccDPInt32Opt/lib:/home/tom/openfoam/OpenFOAM-v2306/site/2306/platforms/linux64GccDPInt32Opt/lib:/home/tom/openfoam/OpenFOAM-v2306/platforms/linux64GccDPInt32Opt/lib/sys-openmpi:/home/tom/openfoam/OpenFOAM-v2306/platforms/linux64GccDPInt32Opt/lib:/home/tom/openfoam/ThirdParty-v2306/platforms/linux64GccDPInt32/lib/sys-openmpi:/home/tom/openfoam/ThirdParty-v2306/platforms/linux64GccDPInt32/lib:/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/fftw-3.3.10/lib64:/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/CGAL-4.14.3/lib64:/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/boost_1_74_0/lib64:/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/ADIOS2-2.8.3/lib64:/usr/lib64/mpi/gcc/openmpi/lib64:/home/tom/openfoam/OpenFOAM-v2306/platforms/linux64GccDPInt32Opt/lib/dummy:/usr/lib64/mpi/gcc/openmpi/lib64/\nLESS_ADVANCED_PREPROCESSOR=no\nLESSCLOSE=lessclose.sh %s %s\nLESSKEY=/etc/lesskey.bin\nLESS=-M -I -R\nLESSOPEN=lessopen.sh %s\nLIBMESH_DIR=/home/tom/mambaforge3/envs/moose/libmesh\nLMOD_CMD=/usr/share/lmod/lmod/libexec/lmod\nLMOD_COLORIZE=no\nLMOD_DIR=/usr/share/lmod/lmod/libexec\nLMOD_FULL_SETTARG_SUPPORT=no\n __lmod_my_status=$?;\nLMOD_PKG=/usr/share/lmod/lmod\nLMOD_PREPEND_BLOCK=normal\n__LMOD_REF_COUNT_MODULEPATH=/usr/share/lmod/modulefiles:1\nLMOD_ROOT=/usr/share/lmod\nLMOD_SETTARG_CMD=:\nLMOD_SETTARG_FULL_SUPPORT=no\n __lmod_sh_dbg='v'\n __lmod_sh_dbg='vx'\n __lmod_sh_dbg='x'\nLMOD_VERSION=8.7.17\nLOGNAME=tom\nLS_COLORS=no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=41;33;01:ex=00;32:*.cmd=00;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.lzma=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.xz=00;31:*.avi=01;35:*.bmp=01;35:*.dl=01;35:*.fli=01;35:*.gif=01;35:*.gl=01;35:*.jpg=01;35:*.jpeg=01;35:*.mkv=01;35:*.mng=01;35:*.mov=01;35:*.mp4=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.svg=01;35:*.tga=01;35:*.tif=01;35:*.webm=01;35:*.webp=01;35:*.wmv=01;35:*.xbm=01;35:*.xcf=01;35:*.xpm=01;35:*.aiff=00;32:*.ape=00;32:*.au=00;32:*.flac=00;32:*.m4a=00;32:*.mid=00;32:*.mp3=00;32:*.mpc=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:*.wma=00;32:*.wv=00;32:\nLS_OPTIONS=-N --color=tty -T 0\nMACHTYPE=x86_64-suse-linux\nMAIL=/var/spool/mail/tom\nMALLOC_CHECK_=3\nMALLOC_PERTURB_=69\nMANPATH=/home/tom/.local/man:/usr/local/man:/usr/local/share/man:/usr/share/man:\nMATE_DESKTOP_SESSION_ID=this-is-deprecated\nMESON_ARGS=--buildtype release\nMINICOM=-c on\nMODULEPATH=/usr/share/lmod/modulefiles\nMODULESHOME=/usr/share/lmod/lmod\n_ModuleTable001_=X01vZHVsZVRhYmxlXyA9IHsKTVR2ZXJzaW9uID0gMywKY19yZWJ1aWxkVGltZSA9IGZhbHNlLApjX3Nob3J0VGltZSA9IGZhbHNlLApkZXB0aFQgPSB7fSwKZmFtaWx5ID0ge30sCm1UID0ge30sCm1wYXRoQSA9IHsKIi91c3Ivc2hhcmUvbG1vZC9tb2R1bGVmaWxlcyIsCn0sCnN5c3RlbUJhc2VNUEFUSCA9ICIvdXNyL3NoYXJlL2xtb2QvbW9kdWxlZmlsZXMiLAp9Cg==\n_ModuleTable_Sz_=1\nMOOSE_NO_CODESIGN=true\nMORE=-sl\nMPI_ARCH_PATH=/usr/lib64/mpi/gcc/openmpi\nMPIHOME=/home/tom/mambaforge3/envs/moose\nNM=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-nm\nOBJCOPY=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-objcopy\nOBJDUMP=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-objdump\nOLDPWD=/home/tom/projects/moose\nOSTYPE=linux\nPAGER=less\nPAM_KWALLET5_LOGIN=/run/user/1000/kwallet5.socket\nPATH=/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/ADIOS2-2.8.3/bin:/home/tom/OpenFOAM/tom-v2306/platforms/linux64GccDPInt32Opt/bin:/home/tom/openfoam/OpenFOAM-v2306/site/2306/platforms/linux64GccDPInt32Opt/bin:/home/tom/openfoam/OpenFOAM-v2306/platforms/linux64GccDPInt32Opt/bin:/home/tom/openfoam/OpenFOAM-v2306/bin:/home/tom/openfoam/OpenFOAM-v2306/wmake:/home/tom/mambaforge3/envs/moose/bin:/home/tom/miniconda3/condabin:/home/tom/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/lib64/mpi/gcc/openmpi/bin:/home/tom/gdl/install:/home/tom/.gdl/gdl_startup.pro:/usr/lib64/jvm/java-11-openjdk-11/bin:/home/tom/.local/bin:/usr/lib64/mpi/gcc/openmpi/bin:/home/tom/gdl/install:/usr/lib64/jvm/java-11-openjdk-11/bin:/usr/local/bin:/home/tom/mambaforge3/envs/moose/wasp/bin:/home/tom/mambaforge3/envs/moose/wasp/bin:/home/tom/mambaforge3/envs/moose/wasp/bin\nPETSC_DIR=/home/tom/mambaforge3/envs/moose\nPROFILEHOME=\nPROFILEREAD=true\nPWD=/home/tom/projects/moose/scripts\nPYTHONSTARTUP=/etc/pythonstart\nQEMU_AUDIO_DRV=pa\nQT4_IM_MODULE=xim\nQT_BIN_DIR=/usr/bin/\nQT_FONT_DPI=92\nQT_IM_MODULE=ibus\nQT_IM_SWITCHER=imsw-multi\nQT_QPA_PLATFORMTHEME=gtk2\nQT_SCALE_FACTOR=1\nRANLIB=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ranlib\nREADELF=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-readelf\n return $__lmod_my_status\nSCOTCH_ARCH_PATH=/home/tom/openfoam/ThirdParty-v2306/platforms/linux64GccDPInt32/scotch_6.1.0\nSDK_HOME=/usr/lib64/jvm/java-11-openjdk-11\nSESSION_MANAGER=local/mydesktop:@/tmp/.ICE-unix/3612,unix/mydesktop:/tmp/.ICE-unix/3612\n set +$__lmod_sh_dbg;\n set -$__lmod_sh_dbg;\nSHELL=/bin/bash\nSHELL_SESSION_ID=c44c6a5988c143e2a584cf279d5e17d3\nSHLVL=2\nSIZE=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-size\nSSH_AGENT_PID=4237\nSSH_ASKPASS=/usr/lib/ssh/ssh-askpass\nSSH_AUTH_SOCK=/run/user/1000/keyring/ssh\nSTRINGS=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-strings\nSTRIP=/home/tom/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-strip\nSU2_HOME=/home/tom/SU2/su2code-SU2-aec088c\nSU2_RUN=/usr/local/bin/\nSYSTEMD_EXEC_PID=3537\nTERM=xterm-256color\n unset __lmod_sh_dbg;\nUSERNAME=tom\nUSER=tom\n_=/usr/bin/env\n *v*)\nVTKINCLUDE_DIR=/home/tom/mambaforge3/envs/moose/libmesh-vtk/include/vtk-9.2\nVTKLIB_DIR=/home/tom/mambaforge3/envs/moose/libmesh-vtk/lib\n *v*x*)\nWASP_DIR=/home/tom/mambaforge3/envs/moose/wasp\nWINDOWID=45088775\nWINDOWMANAGER=mate-session\nWINDOWPATH=2\nWM_ARCH=linux64\nWM_COMPILE_OPTION=Opt\nWM_COMPILER=Gcc\nWM_COMPILER_LIB_ARCH=64\nWM_COMPILER_TYPE=system\nWM_DIR=/home/tom/openfoam/OpenFOAM-v2306/wmake\nWM_LABEL_OPTION=Int32\nWM_LABEL_SIZE=32\nWM_MPLIB=SYSTEMOPENMPI\nWM_OPTIONS=linux64GccDPInt32Opt\nWM_PRECISION_OPTION=DP\nWM_PROJECT_DIR=/home/tom/openfoam/OpenFOAM-v2306\nWM_PROJECT=OpenFOAM\nWM_PROJECT_USER_DIR=/home/tom/OpenFOAM/tom-v2306\nWM_PROJECT_VERSION=v2306\nWM_THIRD_PARTY_DIR=/home/tom/openfoam/ThirdParty-v2306\n *x*)\nXAUTHLOCALHOSTNAME=mydesktop\nXAUTHORITY=/run/user/1000/gdm/Xauthority\nXCURSOR_THEME=DMZ\nXDG_CONFIG_DIRS=/etc/xdg\nXDG_CURRENT_DESKTOP=MATE\nXDG_DATA_DIRS=/usr/share/mate:/home/tom/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share\nXDG_RUNTIME_DIR=/run/user/1000\nXDG_SEAT=seat0\nXDG_SESSION_CLASS=user\nXDG_SESSION_DESKTOP=mate\nXDG_SESSION_ID=2\nXDG_SESSION_TYPE=x11\nXDG_VTNR=2\nXKEYSYMDB=/usr/X11R6/lib/X11/XKeysymDB\nXML_CATALOG_FILES=file:///home/tom/mambaforge3/envs/moose/etc/xml/catalog file:///etc/xml/catalog\nXMODIFIERS=@im=ibus\nXNLSPATH=/usr/share/X11/nls\nXSESSION_IS_UP=yes\n(moose) tom@mydesktop:~/projects/moose/scripts>",
                  "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7512704",
                  "updatedAt": "2023-11-08T16:28:31Z",
                  "publishedAt": "2023-11-08T16:20:52Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "It's possible a different MPI wrapper was used during the build vs when attempting to run tests. I see the following available among PATH:\n/usr/lib64/mpi/gcc/openmpi/bin\n\n(OpenMPI vs MPICH) The way your PATH is setup is fine, but if somehow MOOSE was built before say mamba activate moose completed successfully, I can see where MOOSE may have linked incorrectly. Probably not the case... but worth mentioning.\nFor curiosity's sake, can you perform the follow before continuing:\nldd ~/projects/moose/tests/moose_test-opt\nThis will print out what moose_test-opt actually linked with.\nAlso there appears to be two instances of Conda installed:\n/home/tom/mambaforge3/envs/moose/bin:/home/tom/miniconda3/condabin\n\nThe one we want is being made available before the other, but I do wonder if a conflict arose when something was requested and mambaforge3 didn't have it. The next place it would look would be and should be among system paths. But in this case, perhaps that something was found in miniconda3, and thus, additional Python 'packages' are now being used from this location instead of mambaforge3.\nCan you try the following as a test? We are going to cancel out the other MPI wrapper, and Miniconda, clean out an old build in MOOSE, rebuild and re-test:\nexport PATH=/home/tom/openfoam/ThirdParty-v2306/platforms/linux64Gcc/ADIOS2-2.8.3/bin:/home/tom/OpenFOAM/tom-v2306/platforms/linux64GccDPInt32Opt/bin:/home/tom/openfoam/OpenFOAM-v2306/site/2306/platforms/linux64GccDPInt32Opt/bin:/home/tom/openfoam/OpenFOAM-v2306/platforms/linux64GccDPInt32Opt/bin:/home/tom/openfoam/OpenFOAM-v2306/bin:/home/tom/openfoam/OpenFOAM-v2306/wmake:/home/tom/mambaforge3/envs/moose/bin:/home/tom/.local/bin:/usr/local/bin:/usr/bin:/bin:/home/tom/gdl/install:/home/tom/.gdl/gdl_startup.pro:/usr/lib64/jvm/java-11-openjdk-11/bin:/home/tom/.local/bin:/usr/lib64/mpi/gcc/openmpi/bin:/home/tom/gdl/install:/usr/lib64/jvm/java-11-openjdk-11/bin:/usr/local/bin:/home/tom/mambaforge3/envs/moose/wasp/bin:/home/tom/mambaforge3/envs/moose/wasp/bin:/home/tom/mambaforge3/envs/moose/wasp/bin\n\ncd ~/projects/moose\ngit clean -xfd\ncd test\nmake\n./run_tests",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7513119",
                          "updatedAt": "2023-11-08T16:54:01Z",
                          "publishedAt": "2023-11-08T16:54:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tckosvic"
                          },
                          "bodyText": "milljm,  the miniconda was in play before I started anything with moose.  Tried your suggestion and got the same errors with \"hit\".  I think errors were the same but they are included below:\n`(moose) tom@mydesktop:~/projects/moose/test> ./run_tests\nBuilding and linking hit...\nmake[1]: Entering directory '/home/tom/projects/moose/framework/contrib/hit'\nBuilding hit for python with python3-config\nmake[1]: 'hit' is up to date.\nmake[1]: Leaving directory '/home/tom/projects/moose/framework/contrib/hit'\nTraceback (most recent call last):\nFile \"/home/tom/projects/moose/python/pyhit/init.py\", line 13, in \nimport hit\nModuleNotFoundError: No module named 'hit'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/home/tom/projects/moose/python/pyhit/init.py\", line 18, in \nimport hit\nImportError: /home/tom/mambaforge3/envs/moose/lib/libmpicxx.so.12: undefined symbol: MPII_Errhandler_set_cxx\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/home/tom/projects/moose/test/./run_tests\", line 6, in \nfrom TestHarness import TestHarness\nFile \"/home/tom/projects/moose/python/TestHarness/init.py\", line 15, in \nfrom .TestHarness import TestHarness\nFile \"/home/tom/projects/moose/python/TestHarness/TestHarness.py\", line 20, in \nfrom FactorySystem.Factory import Factory\nFile \"/home/tom/projects/moose/python/FactorySystem/init.py\", line 13, in \nfrom .Parser import Parser\nFile \"/home/tom/projects/moose/python/FactorySystem/Parser.py\", line 13, in \nimport pyhit\nFile \"/home/tom/projects/moose/python/pyhit/init.py\", line 22, in \nimport hit\nImportError: /home/tom/mambaforge3/envs/moose/lib/libmpicxx.so.12: undefined symbol: MPII_Errhandler_set_cxx\n(moose) tom@mydesktop:~/projects/moose/test> `",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7513632",
                          "updatedAt": "2023-11-08T17:46:39Z",
                          "publishedAt": "2023-11-08T17:46:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I am not sure why hit is complaining like it is... What version of MOOSE are you operating on? We have since moved to using WASP. Which I see you have within your Conda environment.\ngit rev-parse HEAD\nFor that matter, what version of moose-dev are you using?\nmamba list | grep moose",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7513671",
                          "updatedAt": "2023-11-08T17:51:10Z",
                          "publishedAt": "2023-11-08T17:51:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tckosvic"
                          },
                          "bodyText": "I think I just pasted in the dev version from the installation dialogue from the install site.\n`(moose) tom@mydesktop:~/projects/moose/test> mamba list | grep moose\npackages in environment at /home/tom/mambaforge3/envs/moose:\nmoose-dev                 2023.11.06              build_0    https://conda.software.inl.gov/public\nmoose-libmesh             2023.11.06              build_0    https://conda.software.inl.gov/public\nmoose-libmesh-vtk         9.2.6                   build_6    https://conda.software.inl.gov/public\nmoose-mpich               4.0.2                  build_13    https://conda.software.inl.gov/public\nmoose-peacock             2023.11.06           h4a0b53b_0    https://conda.software.inl.gov/public\nmoose-petsc               3.20.0                  build_1    https://conda.software.inl.gov/public\nmoose-tools               2023.10.27      py310h55675f2_0    https://conda.software.inl.gov/public\nmoose-wasp                2023.11.06              build_0    https://conda.software.inl.gov/public\n(moose) tom@mydesktop:~/projects/moose/test>`",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7514310",
                          "updatedAt": "2023-11-08T18:54:01Z",
                          "publishedAt": "2023-11-08T18:54:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "This would return the exact HASH of what version of MOOSE you are operating on:\ncd moose\ngit rev-parse HEAD\nI would like to know, because the switch from HIT to WASP was rather recent.\nI am sure you clone of MOOSE is modern enough that you are using WASP and not HIT.\nI am not sure whats going on... but it is probably environment related. You have everything installed correctly as far as I can tell. The only last thing I can try, is to completely isolate all your other environment variables from the minimum we need:\nenv -i bash --norc --noprofile\nenv\n# as you can see, `env` is extremely empty\n# so empty in fact, we need to set HOME:\nexport HOME=/home/tom\n\nexport PATH=$HOME/mambaforge3/bin:$PATH\nsource activate $HOME/mambaforge3/envs/moose\ncd ~/projects/moose\n\n# The next two commands will ensure we are operating in a pristine clone\ngit clean -xfd\ngit submodule foreach --recursive git clean -xfd\n\n# Then of course, build and try to run tests:\ncd ~/projects/moose/tests\nmake\n./run_tests\nIf we still run into the same errors, I am out of ideas... something on this system is preventing us from build MOOSE correctly...",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7515169",
                          "updatedAt": "2023-11-08T20:45:31Z",
                          "publishedAt": "2023-11-08T20:45:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tckosvic"
                          },
                          "bodyText": "Per suggestion re: git -- see below:\n(moose) tom@mydesktop:~/projects/moose> git rev-parse HEAD e1c3d90079676ba7e7c7f3cfb42b8fc75a4bda9a (moose) tom@mydesktop:~/projects/moose> \nI do not know what this string means .\nI will work on the additional mods you kindly sent and report back ASAP.   tom kosvic",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7515397",
                          "updatedAt": "2023-11-08T21:24:07Z",
                          "publishedAt": "2023-11-08T21:24:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tckosvic"
                          },
                          "bodyText": "Test are now running.  Don't know how long it will take.  Looks OK.\nIf test pass, does that mean I have a good system and can go onto examples?\nor:\nDo I need to make some adjustments to environment somewhere?\nWill report back  on test outcome.      tom kosvic",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7515535",
                          "updatedAt": "2023-11-08T21:41:13Z",
                          "publishedAt": "2023-11-08T21:41:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tckosvic"
                          },
                          "bodyText": "Tests finished, results below:\n-------------------------------------------------------------------------------------------------------------- Ran 4026 tests in 2857.1 seconds. Average test time 0.6 seconds, maximum test time 50.2 seconds. 4026 passed, 93 skipped, 0 pending, 0 failed (moose) bash-4.4$  \nLooks good to me.  Don't know what the skipped tests were.\nIs my system OK to move onto examples?  Did my env problem only effect the running of the tests or does it affect the future performance of the system?\nIf I need a new environment to run moose, I will look to see if a conda env, i.e., moose can have a path specified for it alone.\nThanks for the help and sticking with me.          tom kosvic",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7515945",
                          "updatedAt": "2023-11-08T22:37:00Z",
                          "publishedAt": "2023-11-08T22:37:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "tckosvic"
                  },
                  "bodyText": "An update:   I found that examples installed in moose also will only run with the path below:\n(moose) bash-4.4$ echo $PATH /home/tom/mambaforge3/envs/moose/bin:/home/tom/mambaforge3/condabin:/home/tom/mambaforge3/bin:/usr/local/bin:/usr/bin:/bin:.:/home/tom/mambaforge3/envs/moose/wasp/bin (moose) bash-4.4$ \nNow I need to automate a path change to the above path when the moose env is activated.  Probably possible but I don't know how right now.\ntom kosvic",
                  "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7517635",
                  "updatedAt": "2023-11-09T03:28:38Z",
                  "publishedAt": "2023-11-09T03:28:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Is my system OK to move onto examples? Did my env problem only effect the running of the tests or does it affect the future performance of the system?\n\nIts possible your runtime environment will work without having to modify the environment. Does not hurt to try!\n\nNow I need to automate a path change to the above path when the moose env is activated. Probably possible but I don't know how right now.\n\nYou can try to move the bits about Mamba to the end of your profile (most likely occurring in ~/.bashrc or ~/.bash_profile). Your looking for a section that looks something like this:\n# >>> conda initialize >>>\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('//home/tom/mambaforge3/bin/conda' 'shell.sh' 'hook' 2> /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/home/tom/mambaforge3/etc/profile.d/conda.sh\" ]; then\n        . \"/home/tom/mambaforge3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/home/tom/mambaforge3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n\nif [ -f \"/Users/milljm/mambaforge3/etc/profile.d/mamba.sh\" ]; then\n    . \"/Users/milljm/mambaforge3/etc/profile.d/mamba.sh\"\nfi\n# <<< conda initialize <<<\n\nFind that thing, and move it to the end of what ever file you found it in. That way it gets sourced last (last thing sourced takes priority).\nOne worry I have doing this, is that what ever is conflicting with build/running MOOSE, may now conflict with other things. However, hopefully not. When you are not actively in the MOOSE environment (mamba activate moose), it should leave those other \"things\" alone.\nSorry I don't have an exact answer as to where the conflict is occurring!",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7522495",
                          "updatedAt": "2023-11-09T13:29:48Z",
                          "publishedAt": "2023-11-09T13:29:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tckosvic"
                          },
                          "bodyText": "I established that runtime will only run with the reduced path you provided.  Threw errors with full path.  A problem though is that I can't get to my system paraview very easily when running with reduced path.\nThe conda statements in ~/.bashrc are at the bottom.\nI thought that the most likely cause of any env related problem would be the miniconda install that was included in the path.  Seemed like obvious place for conflicts to arise.  I removed miniconda from the path effectively by temporarily renaming that directory so the miniconda reference in the path would find nothing.  Trying runtime with miniconda renamed and using full path also did not run.  So the problem is likely somewhere else than miniconda.\nI thank you for your efforts.  Your help got me started.  I will try this for a while on my own and see what I can do.  If any insights strike you drop me a note.\nthanks,      tom kosvic",
                          "url": "https://github.com/idaholab/moose/discussions/25996#discussioncomment-7522837",
                          "updatedAt": "2023-11-09T13:59:56Z",
                          "publishedAt": "2023-11-09T13:59:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to set all nodes in same displacement by BCs?",
          "author": {
            "login": "LifengGan"
          },
          "bodyText": "Dear moose users,\nI want to let all nodes on one surface with same displacement in one paticular direction. But it is not fixed, just all node deformed in the same way in one direction.\nHow can I do that with BCs?\nBest regards,\nLifeng",
          "url": "https://github.com/idaholab/moose/discussions/25961",
          "updatedAt": "2023-11-23T02:01:28Z",
          "publishedAt": "2023-11-03T09:28:49Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can set a DirichletBC on disp_x or disp_y for example.\nAre you solving the solid mechanics equations? Are you solving for the total mesh deformation or are you simply modifying the location of nodes at a certain location?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7466579",
                  "updatedAt": "2023-11-03T12:38:16Z",
                  "publishedAt": "2023-11-03T12:22:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "I just want all the nodes on selected surface moving in the same way, more like a \"weak\" constrain to let nodes tie together\nCound it be done in the follwing way, by not define the value? I want those to be passive movement\n[./right_v]\n  type = DirichletBC\n  variable = disp_x\n  boundary = right\n[../]",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7468414",
                          "updatedAt": "2023-11-03T15:29:12Z",
                          "publishedAt": "2023-11-03T15:29:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it would not be done like that. DirichletBCs impose a value.\nDo you want to impose the displacement value or just constrain the nodes to move together with the same amplitude / direction?",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7468483",
                          "updatedAt": "2023-11-03T15:36:34Z",
                          "publishedAt": "2023-11-03T15:36:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Yes, the latter, just constrain the nodes to move together with the same amplitude / direction",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7468729",
                          "updatedAt": "2023-11-03T16:01:33Z",
                          "publishedAt": "2023-11-03T16:01:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You'll want to work in the Constraints system.\nBut we don't have this object right now. So you ll have to make a new one",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7469107",
                          "updatedAt": "2023-11-03T16:36:54Z",
                          "publishedAt": "2023-11-03T16:36:53Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Thanks a lot.",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7472728",
                          "updatedAt": "2023-11-04T06:25:34Z",
                          "publishedAt": "2023-11-04T06:25:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Hi, @GiudGiud\nMaybe it can be done this way?\n[Constraints]\n  [./z_top]\n    type = EqualValueBoundaryConstraint\n    variable = disp_z\n    primary = '45' # node on top boundary\n    secondary = 'top' # boundary\n    penalty = 10e6\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7493780",
                          "updatedAt": "2023-11-08T09:33:38Z",
                          "publishedAt": "2023-11-07T01:55:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So one node by one node? You can try but these constraints come at a cost (harder to solve)\nIt's also not very friendly if you have 100 nodes to set together, or if you go from one mesh to another mesh (all the ids change)\nso I would develop a custom constraint instead",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7510063",
                          "updatedAt": "2023-11-08T12:37:18Z",
                          "publishedAt": "2023-11-08T12:32:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Here the idea is to use  EqualValueBoundaryConstraint to link the surface top and the node with id 45, which is also one node on top surface. And we those nodes in top surface can move in the same way.\nIf develop a custon constraint, which one i should take it as reference? and any suggestions on that?",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7511394",
                          "updatedAt": "2023-11-08T14:25:36Z",
                          "publishedAt": "2023-11-08T14:25:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I havent worked much with Constraints unfortunately.\nI see @bwspenc @jbadger95 and @dschwen have contributed to that system, if they want to guide you",
                          "url": "https://github.com/idaholab/moose/discussions/25961#discussioncomment-7513378",
                          "updatedAt": "2023-11-08T17:19:23Z",
                          "publishedAt": "2023-11-08T17:19:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Some tests fail",
          "author": {
            "login": "bylore"
          },
          "bodyText": "Hi, I am building moose on  HPC cluster. Follwing the construction, I arrive at the test step. After excuting the ./run_test -j 6. I get the following.\n\nmesh/split_uniform_refine.square ................................................. [min_cpus=3] FAILED (CRASH)\nmesh/mesh_only.mesh_only_checkpoint .............................................. [min_cpus=3] FAILED (CRASH)\npostprocessors/num_elems.test_split .............................................. [min_cpus=4] FAILED (CRASH)\nmesh/nemesis.nemesis_repartitioning_test ......................................... [min_cpus=4] FAILED (CRASH)\npartitioners/petsc_partitioner.ptscotch ........................ [min_cpus=4] FAILED (EXPECTED OUTPUT MISSING)\npartitioners/petsc_partitioner.ptscotch_weight_elment .......... [min_cpus=4] FAILED (EXPECTED OUTPUT MISSING)\npostprocessors/num_nodes.test_split .............................................. [min_cpus=4] FAILED (CRASH)\npartitioners/petsc_partitioner.ptscotch_weight_side ............ [min_cpus=4] FAILED (EXPECTED OUTPUT MISSING)\npartitioners/petsc_partitioner.ptscotch_weight_both ............ [min_cpus=4] FAILED (EXPECTED OUTPUT MISSING)\npartitioners/petsc_partitioner.parmetis ........................ [min_cpus=4] FAILED (EXPECTED OUTPUT MISSING)\npartitioners/petsc_partitioner.parmetis_weight_element ......... [min_cpus=4] FAILED (EXPECTED OUTPUT MISSING)\npartitioners/petsc_partitioner.parmetis_weight_side ............ [min_cpus=4] FAILED (EXPECTED OUTPUT MISSING)\npartitioners/petsc_partitioner.parmetis_weight_both ............ [min_cpus=4] FAILED (EXPECTED OUTPUT MISSING)\n\n\nRan 3919 tests in 526.5 seconds. Average test time 0.7 seconds, maximum test time 23.6 seconds.\n3906 passed, 200 skipped, 0 pending, 13 FAILED\nDo you have any advice? Can I just ignore thest failures, or what these failure mean? Thank you!",
          "url": "https://github.com/idaholab/moose/discussions/25999",
          "updatedAt": "2023-11-08T16:31:22Z",
          "publishedAt": "2023-11-08T06:39:54Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "bylore"
                  },
                  "bodyText": "It seems these failures related to my mpich (4.0.2) mpich/install/lib/libucs.so.0",
                  "url": "https://github.com/idaholab/moose/discussions/25999#discussioncomment-7506853",
                  "updatedAt": "2023-11-08T07:02:19Z",
                  "publishedAt": "2023-11-08T07:02:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "bylore"
                          },
                          "bodyText": "configure --with-ucx=embedded",
                          "url": "https://github.com/idaholab/moose/discussions/25999#discussioncomment-7506884",
                          "updatedAt": "2023-11-08T07:07:11Z",
                          "publishedAt": "2023-11-08T07:07:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "If you happen to have the exact errors produced, can you paste those?",
                          "url": "https://github.com/idaholab/moose/discussions/25999#discussioncomment-7512537",
                          "updatedAt": "2023-11-08T16:06:09Z",
                          "publishedAt": "2023-11-08T16:06:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bylore"
                          },
                          "bodyText": "run_tests --re=mesh/split_uniform_refine.square -v for example.\n\nmesh/split_uniform_refine.square: Working Directory: */moose/test/tests/mesh/split_uniform_refine\nmesh/split_uniform_refine.square: Running command: mpiexec -n 3 */moose/test/moose_test-opt -i 3d_diffusion.i -r 1 Mesh/skip_refine_when_use_split=false --use-split --split-file square --error --error-override --no-gdb-backtrace\nmesh/split_uniform_refine.square:\nmesh/split_uniform_refine.square: ===================================================================================\nmesh/split_uniform_refine.square: =   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\nmesh/split_uniform_refine.square: =   PID 21523 RUNNING AT ln3\nmesh/split_uniform_refine.square: =   EXIT CODE: 139\nmesh/split_uniform_refine.square: =   CLEANING UP REMAINING PROCESSES\nmesh/split_uniform_refine.square: =   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES\nmesh/split_uniform_refine.square: ===================================================================================\nmesh/split_uniform_refine.square: YOUR APPLICATION TERMINATED WITH THE EXIT STRING: Segmentation fault (signal 11)\nmesh/split_uniform_refine.square: This typically refers to a problem with your application.\nmesh/split_uniform_refine.square: Please see the FAQ page for debugging suggestions\nmesh/split_uniform_refine.square: [ln3:21523:0:21523] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30)\nmesh/split_uniform_refine.square: ==== backtrace (tid:  21523) ====\nmesh/split_uniform_refine.square:  0  /data/home/yongzhang/software/mpich/install/lib/libucs.so.0(ucs_handle_error+0x2a4) [0x7f087cbd3674]\nmesh/split_uniform_refine.square:  1  /mpich/install/lib/libucs.so.0(+0x2f86c) [0x7f087cbd386c]\nmesh/split_uniform_refine.square:  2  /mpich/install/lib/libucs.so.0(+0x2fb36) [0x7f087cbd3b36]\nmesh/split_uniform_refine.square:  3  /lib64/libpthread.so.0(+0xf630) [0x7f087c56f630]\nmesh/split_uniform_refine.square:  4  */moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(+0xcb4388) [0x7f0886a65388]\nmesh/split_uniform_refine.square:  5  */moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(_ZN7libMesh11Partitioner22set_node_processor_idsERNS_8MeshBaseE+0x10c1) [0x7f0886a71431]\nmesh/split_uniform_refine.square:  6  */moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(_ZN7libMesh11Partitioner9partitionERNS_8MeshBaseEj+0x61) [0x7f0886a71b91]\nmesh/split_uniform_refine.square:  7  */moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(_ZN7libMesh8MeshBase15prepare_for_useEv+0x6a) [0x7f08867da6ea]\nmesh/split_uniform_refine.square:  8  */moose/framework/libmoose-opt.so.0(_ZN10Adaptivity13uniformRefineEP9MooseMeshj+0x5a) [0x7f088af1fb2a]\nmesh/split_uniform_refine.square:  9  */moose/framework/libmoose-opt.so.0(_ZN23SetupMeshCompleteAction3actEv+0x3e8) [0x7f088ac17278]\nmesh/split_uniform_refine.square: 10  */moose/framework/libmoose-opt.so.0(_ZN6Action8timedActEv+0x2b) [0x7f088ac1470b]\nmesh/split_uniform_refine.square: 11  */moose/framework/libmoose-opt.so.0(_ZN15ActionWarehouse24executeActionsWithActionERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x51) [0x7f088ac20451]\nmesh/split_uniform_refine.square: 12  */moose/framework/libmoose-opt.so.0(_ZN15ActionWarehouse17executeAllActionsEv+0x1a1) [0x7f088ac20ad1]\nmesh/split_uniform_refine.square: 13  */moose/framework/libmoose-opt.so.0(_ZN8MooseApp12runInputFileEv+0x88) [0x7f088aed9428]\nmesh/split_uniform_refine.square: 14  */moose/framework/libmoose-opt.so.0(_ZN8MooseApp3runEv+0x302) [0x7f088aed8b02]\nmesh/split_uniform_refine.square: 15  */moose/test/moose_test-opt(main+0x6f) [0x40236f]\nmesh/split_uniform_refine.square: 16  /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f087ab21555]\nmesh/split_uniform_refine.square: 17  */moose/test/moose_test-opt() [0x4025c1]\nmesh/split_uniform_refine.square: =================================\nmesh/split_uniform_refine.square:\nmesh/split_uniform_refine.square: ===================================================================================\nmesh/split_uniform_refine.square: =   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\nmesh/split_uniform_refine.square: =   PID 21523 RUNNING AT ln3\nmesh/split_uniform_refine.square: =   EXIT CODE: 139\nmesh/split_uniform_refine.square: =   CLEANING UP REMAINING PROCESSES\nmesh/split_uniform_refine.square: =   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES\nmesh/split_uniform_refine.square: ===================================================================================\nmesh/split_uniform_refine.square: YOUR APPLICATION TERMINATED WITH THE EXIT STRING: Segmentation fault (signal 11)\nmesh/split_uniform_refine.square: This typically refers to a problem with your application.\nmesh/split_uniform_refine.square: Please see the FAQ page for debugging suggestions\nmesh/split_uniform_refine.square: [ln3:21523:0:21523] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30)\nmesh/split_uniform_refine.square: ==== backtrace (tid:  21523) ====\nmesh/split_uniform_refine.square:  0  /install/lib/libucs.so.0(ucs_handle_error+0x2a4) [0x7f087cbd3674]\nmesh/split_uniform_refine.square:  1  /install/lib/libucs.so.0(+0x2f86c) [0x7f087cbd386c]\nmesh/split_uniform_refine.square:  2  /install/lib/libucs.so.0(+0x2fb36) [0x7f087cbd3b36]\nmesh/split_uniform_refine.square:  3  /lib64/libpthread.so.0(+0xf630) [0x7f087c56f630]\nmesh/split_uniform_refine.square:  4  */moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(+0xcb4388) [0x7f0886a65388]\nmesh/split_uniform_refine.square:  5  */moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(_ZN7libMesh11Partitioner22set_node_processor_idsERNS_8MeshBaseE+0x10c1) [0x7f0886a71431]\nmesh/split_uniform_refine.square:  6  */moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(_ZN7libMesh11Partitioner9partitionERNS_8MeshBaseEj+0x61) [0x7f0886a71b91]\nmesh/split_uniform_refine.square:  7  */moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(_ZN7libMesh8MeshBase15prepare_for_useEv+0x6a) [0x7f08867da6ea]\nmesh/split_uniform_refine.square:  8  */moose/framework/libmoose-opt.so.0(_ZN10Adaptivity13uniformRefineEP9MooseMeshj+0x5a) [0x7f088af1fb2a]\nmesh/split_uniform_refine.square:  9  */moose/framework/libmoose-opt.so.0(_ZN23SetupMeshCompleteAction3actEv+0x3e8) [0x7f088ac17278]\nmesh/split_uniform_refine.square: 10  */moose/framework/libmoose-opt.so.0(_ZN6Action8timedActEv+0x2b) [0x7f088ac1470b]\nmesh/split_uniform_refine.square: 11  */moose/framework/libmoose-opt.so.0(_ZN15ActionWarehouse24executeActionsWithActionERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x51) [0x7f088ac20451]\nmesh/split_uniform_refine.square: 12  */moose/framework/libmoose-opt.so.0(_ZN15ActionWarehouse17executeAllActionsEv+0x1a1) [0x7f088ac20ad1]\nmesh/split_uniform_refine.square: 13  */moose/framework/libmoose-opt.so.0(_ZN8MooseApp12runInputFileEv+0x88) [0x7f088aed9428]\nmesh/split_uniform_refine.square: 14  */moose/framework/libmoose-opt.so.0(_ZN8MooseApp3runEv+0x302) [0x7f088aed8b02]\nmesh/split_uniform_refine.square: 15  */moose/test/moose_test-opt(main+0x6f) [0x40236f]\nmesh/split_uniform_refine.square: 16  /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f087ab21555]\nmesh/split_uniform_refine.square: 17  */moose/test/moose_test-opt() [0x4025c1]\nmesh/split_uniform_refine.square: =================================\nmesh/split_uniform_refine.square:\nmesh/split_uniform_refine.square:\nmesh/split_uniform_refine.square: Exit Code: 139\nmesh/split_uniform_refine.square: ################################################################################\nmesh/split_uniform_refine.square: Tester failed, reason: CRASH\nmesh/split_uniform_refine.square:\nmesh/split_uniform_refine.square ....................................... [min_cpus=3,OVERSIZED] FAILED (CRASH)",
                          "url": "https://github.com/idaholab/moose/discussions/25999#discussioncomment-7512777",
                          "updatedAt": "2023-11-08T16:32:59Z",
                          "publishedAt": "2023-11-08T16:27:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bylore"
                          },
                          "bodyText": "I just tried mpich-4.1.2 configure --with-ucx=embeded, and these failure tests all passed! So there seems to be some mismatch between mpich-4.0.2 (--with-ucx=embeded) and the latest moose(2023.11.09).",
                          "url": "https://github.com/idaholab/moose/discussions/25999#discussioncomment-7512813",
                          "updatedAt": "2023-11-08T16:31:22Z",
                          "publishedAt": "2023-11-08T16:31:21Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Computing Vector Electric Field from grad V",
          "author": {
            "login": "jsevic"
          },
          "bodyText": "I think I should know this by now, I have voltage V as a state variable and I want to compute E = grad V as a vector so I can use in Paraview. I have this in an AuxKernel I get a compile error as follows...\nerror: no viable conversion from returned value of type 'const libMesh::VectorValue' to function return type 'libMesh::Real' (aka 'double')\nreturn  _grad_V[_qp];\n^~~~~~~~~~~~\n/Users/johnsevic/projects/xenon/src/auxkernels/ElectricFieldVector.C:47:10: error: no viable conversion from returned value of type 'const libMesh::VectorValue' to function return type 'libMesh::Real' (aka 'double')\nreturn _grad_V[_qp];\nIn my .h file I declared as follows...\n  const VariableGradient & _grad_V;\n  const VariableValue & _D;\n\nIn my .c file I have the following...\nInputParameters\nElectricFieldVector::validParams()\n{\n  InputParameters params = Kernel::validParams();\nparams.addRequiredCoupledVar(\"coupled_V\", \"grad V is E\");\nparams.addRequiredCoupledVar(\"coupled_sigma\", \"The sigma variable\");\n\n  return params;\n}\n\nElectricFieldVector::ElectricFieldVector(const InputParameters & parameters)\n  : Kernel(parameters),\n    _grad_V(coupledGradient(\"coupled_V\")),\n    _D(coupledValue(\"coupled_sigma\"))\n{\n}\n\nReal\nElectricFieldVector::computeQpResidual()\n{\n  return  _grad_V[_qp];\n}\n\nReal\nElectricFieldVector::computeQpJacobian()\n{\n  return _grad_V[_qp];\n}\n\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/25993",
          "updatedAt": "2023-11-08T01:37:39Z",
          "publishedAt": "2023-11-07T20:32:22Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "The error you are seeing is because the computeQpResidual method wants a Real number, but you are attempting to return a RealVectorValue.\nIf you are only wanting E for visualization, I would compute this as a VectorAuxKernel instead of inheriting from Kernel. Then, you'd only need to define a computeValue method (removing the Residual and Jacobian methods you have defined).\nDid you mean in your original message that you wanted to compute E = - grad V? That's the normal form I see it in. Thus computeValue would simply be\nRealVectorValue\nElectricFieldVector::computeValue()\n{\n   return -_grad_V[_qp];\n}",
                  "url": "https://github.com/idaholab/moose/discussions/25993#discussioncomment-7503712",
                  "updatedAt": "2023-11-07T21:45:51Z",
                  "publishedAt": "2023-11-07T21:45:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "That works thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/25993#discussioncomment-7505013",
                          "updatedAt": "2023-11-08T01:37:37Z",
                          "publishedAt": "2023-11-08T01:37:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Import EBSD data error",
          "author": {
            "login": "LifengGan"
          },
          "bodyText": "Dear moose users,\nI am trying import ebsd data from deam3d\nThe error message I got when I runing modules/phase_field/test/tests/reconstruction/1phase_reconstruction.i with input file of\nSmall_IN100.txt\nfrom dream3d through\nINL_Export.json\nThe following error occurred in the object \"ebsd_reader\", of type \"EBSDReader\".\nData point must be on the interior of the mesh elements. In EBSD Reader ebsd_reader\n\nBest regards,\nLifeng",
          "url": "https://github.com/idaholab/moose/discussions/25960",
          "updatedAt": "2023-11-07T07:34:01Z",
          "publishedAt": "2023-11-03T05:34:53Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nis the error message inaccurate? What is the spatial extent of your mesh?\nEBSD data seems to lie in [-50,0] x [0.50]\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25960#discussioncomment-7466615",
                  "updatedAt": "2023-11-03T12:27:12Z",
                  "publishedAt": "2023-11-03T12:27:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Probably not accurate. I dont know how to set mesh element spatial extent,\nThe X_MIN, X_MAX, Y_MIN, Y_MAX is given in this file, and there is no limit setting of size in the i file? (I just only change the input file name)\nSo why me data point did not on the interior of the mesh elements?",
                          "url": "https://github.com/idaholab/moose/discussions/25960#discussioncomment-7469026",
                          "updatedAt": "2023-11-03T16:27:50Z",
                          "publishedAt": "2023-11-03T16:27:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what does your mesh block look like? in your MOOSE simulation input file",
                          "url": "https://github.com/idaholab/moose/discussions/25960#discussioncomment-7470092",
                          "updatedAt": "2023-11-03T18:47:06Z",
                          "publishedAt": "2023-11-03T18:37:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Here is the mesh block\n[Mesh]\n  [ebsd_mesh]\n    type = EBSDMeshGenerator\n    filename = Small_IN100.txt\n    show_info = true\n  []\n[]\n\n\nand show_info gives\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m Mesh Information:\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  elem_dimensions()={3}\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  spatial_dimension()=3\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  n_nodes()=76760\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m    n_local_nodes()=76760\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  n_elem()=37989\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m    n_local_elem()=37989\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m    n_active_elem()=37989\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  n_subdomains()=1\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  n_elemsets()=0\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  n_partitions()=1\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  n_processors()=1\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  n_threads()=1\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  processor_id()=0\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  is_prepared()=false\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  is_replicated()=true\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m Mesh Bounding Box:\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Minimum: (x,y,z)=(     -47,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Maximum: (x,y,z)=(    0.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Delta:   (x,y,z)=(   47.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m Mesh Element Type(s):\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  HEX8\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m Mesh Nodesets:\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Nodeset 0 (back), 38380 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,    50.25,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Nodeset 1 (bottom), 380 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,        0,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,        0,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Nodeset 2 (right), 404 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(    0.25,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(       0,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Nodeset 3 (top), 380 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,    50.25,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,        0,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Nodeset 4 (left), 404 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(     -47,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(       0,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Nodeset 5 (front), 38380 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,    50.25,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m Mesh Sidesets:\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Sideset 0 (back), 37989 sides (QUAD4), 37989 elems (HEX8), 38380 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Side volume: 2374.31\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,    50.25,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Sideset 1 (bottom), 189 sides (QUAD4), 189 elems (HEX8), 380 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Side volume: 47.25\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,        0,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,        0,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Sideset 2 (right), 201 sides (QUAD4), 201 elems (HEX8), 404 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Side volume: 50.25\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(    0.25,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(       0,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Sideset 3 (top), 189 sides (QUAD4), 189 elems (HEX8), 380 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Side volume: 47.25\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,    50.25,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,        0,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Sideset 4 (left), 201 sides (QUAD4), 201 elems (HEX8), 404 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Side volume: 50.25\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(     -47,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(       0,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Sideset 5 (front), 37989 sides (QUAD4), 37989 elems (HEX8), 38380 nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Side volume: 2374.31\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,    50.25,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m Mesh Edgesets:\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  None\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m Mesh Subdomains:\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Subdomain 0: 37989 elems (HEX8, 37989 active), 76760 active nodes\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Volume: 2374.31\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box minimum: (x,y,z)=(     -47,        0,        0)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box maximum: (x,y,z)=(    0.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m   Bounding box delta: (x,y,z)=(   47.25,    50.25,        1)\n\ufffd[36mEBSDMeshGenerator 'ebsd_mesh': \ufffd[39m  Global mesh volume = 2374.31",
                          "url": "https://github.com/idaholab/moose/discussions/25960#discussioncomment-7494181",
                          "updatedAt": "2023-11-07T05:15:36Z",
                          "publishedAt": "2023-11-07T03:07:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "I update my DREAM3D from 6.5.141 to 6.5.171, then I sort this out. Thanks a lot for your reply.",
                          "url": "https://github.com/idaholab/moose/discussions/25960#discussioncomment-7495651",
                          "updatedAt": "2023-11-07T07:33:57Z",
                          "publishedAt": "2023-11-07T07:33:56Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Improving 'LinearNodalConstraint' as a means to apply periodic BC's more conveniently",
          "author": {
            "login": "abarun22"
          },
          "bodyText": "Hi,\nI was using LinearNodalConstraint to constrain my periodic boundaries for an example model with minimal set of nodes and obtained results that are realistic enough to be applicable for bigger models. The issue being that, this class only accepts direct node numbers as a way of specifying the periodic boundaries and this i feel might get replaced (or perhaps included) with boundary ID's option if we've to go bigger. In principle, i am interested in solving the following set of constraint equations for the model here i am considering.\n\nLooking at these equations, i see that we may have to innovate slightly here to implement these equations in a more simplistic manner. Creation of boundary ID's for the primary and secondary faces will help here, as it's hard for the user to specify many number of nodes in the input file when the model grows. I am particularly keen on including the third term in the equation in an elegant way, so a manual nodal entry against an item like \"secondary_node_ids\" would be handy here and would be included in the system along with the nodes identified for the boundary ID's. I am kind of checking the various constraint methods implemented in Moose to see if we can specify a mixed way (from ID's and manual entry) of including the participating nodes within the computeQpResidual setup. I welcome your suggestions here and appreciate your references in identifying the right methods to be used as a base for improving this class. I envisage the following block of input commands that best describes this proposed method.\n[./disp_x_1]\n    type = LinearNodalConstraint_new\n    variable = disp_x\n    primary = left\n\tsecondary = right    \n\tsecondary_node_ids = 3\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n[]\n[./disp_y_1]\n    type = LinearNodalConstraint_new\n    variable = disp_y\n    primary = left\n\tsecondary = right    \n\tsecondary_node_ids = 3\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n[]\n[./disp_x_2]\n    type = LinearNodalConstraint_new\n    variable = disp_x\n    primary = bottom\n\tsecondary = top\n\tsecondary_node_ids = 7\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n[]\n[./disp_y_2]\n    type = LinearNodalConstraint_new\n    variable = disp_y\n    primary = bottom\n\tsecondary = top\n\tsecondary_node_ids = 7\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n[]\n\n\nThanks and regards,\nArun",
          "url": "https://github.com/idaholab/moose/discussions/25441",
          "updatedAt": "2023-11-07T04:32:20Z",
          "publishedAt": "2023-09-11T18:30:00Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "boundary IDs and boundary names would be way better than manually suppling the node IDs",
                  "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6971642",
                  "updatedAt": "2023-09-11T19:55:28Z",
                  "publishedAt": "2023-09-11T19:55:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is LinearNodalConstraint only accepting one node at a time?",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6973633",
                          "updatedAt": "2023-09-12T01:28:01Z",
                          "publishedAt": "2023-09-12T01:28:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "It allows passing a vector of node IDs, but still definitely not ideal",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6973877",
                          "updatedAt": "2023-09-12T02:21:02Z",
                          "publishedAt": "2023-09-12T02:21:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "To be specific it is actually problem dependent. For the case i've described above, i can only specify one secondary node against a set of primary nodes. Specification of multiple secondary nodes may not help here, as it would repetitively process all the primary nodes irrespective of the matching pairs. The proposed implementation should be able to detect the matching pairs from the supplied boundary ID's, plus the additional node (third term) taken from the manual entry of nodes (possibly through 'secondary_node_ids'). I am  looking for the right constraint methods in Moose that has similar way of implementation.",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6976804",
                          "updatedAt": "2023-09-12T09:31:32Z",
                          "publishedAt": "2023-09-12T09:31:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "abarun22"
                  },
                  "bodyText": "Here is an example i am working at present where it requires 8 blocks of this constraint class for matching four pairs of periodic middle nodes. For a reasonably sized problem with 20 pairs, we might need 40 blocks, which is too muck ask on the user.\n# Constraining secondary nodes to move a linear combination of primary nodes\n#\n# The test consists of a 2D rectangular block divided into two Quad elements\n# (along its height) which have different material properties.\n# A displacement of 2 m is applied to the top surface of the block in x direction and the\n# bottom surface is held fixed.\n# The nodes of the interface between the two elements will tend to move as\n# dictated by the material models of the two elements.\n\n# LinearNodalConstraint forces the interface nodes to move as a linear combination\n# of the nodes on the top and bottom of the block.\n# primary node ids and the corresponding weights are taken as input by the LinearNodalConstraint\n# along with the secondary node set or secondary node ids.\n# The constraint can be applied using either penalty or penalty formulation.\n\n# In this example, the final x displacement of the top surface is 2m and bottom surface is 0m.\n# Therefore, the final x displacement of the interface nodes would be 0.25*top+0.75*bottom = 0.5m\n\n[Mesh]\n  file=Square_coarse.e\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n[]\n\n[Variables]\n  # scale with one over Youngs modulus\n  [./disp_x]\n    scaling = 1e-10\n  [../]\n  [./disp_y]\n    scaling = 1e-10\n  [../]\n[]\n\n[UserObjects]\n  [./prop_read]\n    type = PropertyReadFile\n    prop_file_name = 'pcrystal_standard.csv'\n    # Enter file data as prop#1, prop#2, .., prop#nprop\n    nprop = 3\n    read_type = element\n  [../]\n[]\n\n[AuxVariables]\n  [./fp_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./e_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./gss]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./slin]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n\n[Modules/TensorMechanics/Master/all]\n  strain = FINITE\n  add_variables = true\n  generate_output = stress_xx\n[]\n\n[AuxKernels]\n  [./fp_xx]\n    type = RankTwoAux\n    variable = fp_xx\n    rank_two_tensor = plastic_deformation_gradient\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n  [../]\n  [./e_xx]\n    type = RankTwoAux\n    variable = e_xx\n    rank_two_tensor = total_lagrangian_strain\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n  [../]\n  [./gss]\n    type = MaterialStdVectorAux\n    variable = gss\n    property = slip_resistance\n    index = 0\n    execute_on = timestep_end\n  [../]\n  [./sincr]\n    type = MaterialStdVectorAux\n    variable = slin\n    property = slip_increment\n    index = 0\n    execute_on = timestep_end\n  [../]\n[]\n\n[BCs]\n  [./lbot_x]\n      type = ADDirichletBC\n      variable = disp_x\n      boundary = \"left_bottom\"\n      value = 0.0\n  [../]\n  [./ltop_x]\n      type = ADDirichletBC\n      variable = disp_x\n      boundary = \"left_top\"\n      value = 0.0\n  [../]\n  [./lbot_y]\n      type = ADDirichletBC\n      variable = disp_y\n      boundary = \"left_bottom\"\n      value = 0.0\n  [../]\n  [./rbot_y]\n      type = ADDirichletBC\n      variable = disp_y\n      boundary = \"right_bottom\"\n      value = 0.0\n  [../]\n  [./dispLoad]\n    type = ADFunctionDirichletBC\n    variable = disp_x\n    function = '0.1*t'\n    boundary = \"right_bottom\"\n  [../]\n[]\n\n[Materials]\n  [./elasticity_tensor]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '1.684e5 1.214e5 1.214e5 1.684e5 1.214e5 1.684e5 0.754e5 0.754e5 0.754e5'\n    fill_method = symmetric9\n    read_prop_user_object = prop_read   \n  [../]\n  [./stress]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl'\n    tan_mod_type = exact\n    maximum_substep_iteration = 10\n  [../]\n  [./trial_xtalpl]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    resistance_tol = 1.0e-2\n    gss_initial = 60.8\n  [../]\n[]\n\n[Constraints]\n  [./disp_x_1]\n    type = LinearNodalConstraint\n    variable = disp_x\n    primary = '8 14'\n    weights = '1 1'\n    secondary_node_ids = '4'\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n  [./disp_x_2]\n    type = LinearNodalConstraint\n    variable = disp_x\n    primary = '12 14'\n    weights = '1 1'\n    secondary_node_ids = '10'\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n  [./disp_y_1]\n    type = LinearNodalConstraint\n    variable = disp_y\n    primary = '8 14'\n    weights = '1 1'\n    secondary_node_ids = '4'\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n  [./disp_y_2]\n    type = LinearNodalConstraint\n    variable = disp_y\n    primary = '12 14'\n    weights = '1 1'\n    secondary_node_ids = '10'\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n  [./disp_x_3]\n    type = LinearNodalConstraint\n    variable = disp_x\n    primary = '15 7'\n    weights = '1 1'\n    secondary_node_ids = '5'\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n  [./disp_x_4]\n    type = LinearNodalConstraint\n    variable = disp_x\n    primary = '13 7'\n    weights = '1 1'\n    secondary_node_ids = '2'\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n  [./disp_y_3]\n    type = LinearNodalConstraint\n    variable = disp_y\n    primary = '15 7'\n    weights = '1 1'\n    secondary_node_ids = '5'\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n  [./disp_y_4]\n    type = LinearNodalConstraint\n    variable = disp_y\n    primary = '13 7'\n    weights = '1 1'\n    secondary_node_ids = '2'\n    penalty = 1e8\n    formulation = kinematic\n  [../]\n[]\n\n[Postprocessors]\n  [./stress_xx]\n    type = ElementAverageValue\n    variable = stress_xx\n  [../]\n  [./fp_xx]\n    type = ElementAverageValue\n    variable = fp_xx\n  [../]\n  [./e_xx]\n    type = ElementAverageValue\n    variable = e_xx\n  [../]\n  [./gss]\n    type = ElementAverageValue\n    variable = gss\n  [../]\n  [./slin]\n    type = ElementAverageValue\n    variable = slin\n  [../]\n[]\n\n[Preconditioning]\n  [./smp]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  dt = 2.0\n  solve_type = 'PJFNK'\n  petsc_options_iname = '-pc_type -pc_asm_overlap -sub_pc_type -ksp_type -ksp_gmres_restart'\n  petsc_options_value = ' asm      2              lu            gmres     200'\n  nl_abs_tol = 1e-8\n  nl_rel_step_tol = 1e-8\n  dtmax = 10.0\n  nl_rel_tol = 1e-8\n  dtmin = 0.5\n  end_time = 20\n  nl_abs_step_tol = 1e-10\n[]\n\n[Outputs]\n  exodus = true\n  csv = true\n  gnuplot = true\n[]\n\nAnd the relevant model showing the nodal numbers (add 1 to match moose node numbering scheme)",
                  "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6976912",
                  "updatedAt": "2023-09-12T09:52:49Z",
                  "publishedAt": "2023-09-12T09:43:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "primary = '12 14'\n\nare these ids too?\ndo you have a nodeset that includes all the primary nodes?\nand all the secondary nodes?",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6980128",
                          "updatedAt": "2023-09-12T15:00:30Z",
                          "publishedAt": "2023-09-12T15:00:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "When you want to match 12 1 and 14 4 on the primary and secondary sides and if you say\nprimary = '12 14'\nsecondary='1 4'\nThis will just solve u1-u12-u14=0 and u4-u12-u14=0 respectively.\nYou will have to say\nprimary = '12 '\nsecondary='1'\nprimary = '14'\nsecondary='4'\nA complete revamp of LinearNodalConstraint is necessary if we want to simplify this class with the specification of boundary ID's.",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6981278",
                          "updatedAt": "2023-09-12T16:46:53Z",
                          "publishedAt": "2023-09-12T16:46:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok I see what you want. This is another way of thinking the input of these constraints. We could add a parameter to enable both ways, since both make sense in their own way\nWe dont have anyone working on this right now.\nWould you do it? We can review the contribution",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6994611",
                          "updatedAt": "2023-09-13T20:17:35Z",
                          "publishedAt": "2023-09-13T20:17:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Is the periodic boundary system not good enough for this? You can also use mortar constraints to weakly impose periodicity",
                  "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-6981096",
                  "updatedAt": "2023-09-12T16:28:19Z",
                  "publishedAt": "2023-09-12T16:28:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Flolaffel"
                          },
                          "bodyText": "That was my first idea also since I used the auto PBC successfully before in a diffusion setting. But I can't quite seem to get it working properly for a mechanical problem. My input is:\n[Mesh]\n  [domain]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmin = 0\n    xmax = 10\n    ymin = 0\n    ymax = 10\n    nx = 10\n    ny = 10\n  []\n  [top_right]\n    type = ExtraNodesetGenerator\n    input = domain\n    new_boundary = tr\n    coord = '10 10 0'\n  []\n  [bottom_right]\n    type = ExtraNodesetGenerator\n    input = top_right\n    new_boundary = br\n    coord = '10 0 0'\n  []\n  [top_left]\n    type = ExtraNodesetGenerator\n    input = bottom_right\n    new_boundary = tl\n    coord = '0 10 0'\n  []\n  [bottom_left]\n    type = ExtraNodesetGenerator\n    input = top_left\n    new_boundary = bl\n    coord = '0 0 0'\n  []\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n[]\n\n[Modules/TensorMechanics/Master]\n  [all]\n    strain = SMALL\n    add_variables = true\n    incremental = false\n    generate_output = 'vonmises_stress'\n  []\n[]\n\n[Functions]\n  [tdisp]\n    type = ParsedFunction\n    expression = 't'\n  []\n[]\n\n[BCs]\n  [Periodic]\n    [all]\n      variable = 'disp_x disp_y'\n      auto_direction = 'x y'\n    []\n  []\n  [no_y]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'bl br tl'\n    value = 0\n  []\n  [no_x]\n    type = DirichletBC\n    variable = disp_x\n    boundary = 'bl'\n    value = 0\n  []\n  [tdisp]\n    type = FunctionDirichletBC\n    variable = disp_x\n    boundary = tl\n    function = tdisp\n  []\n[]\n\n\n[Materials]\n  [elasticity]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 210000\n    poissons_ratio = 0.3\n  []\n  [stress]\n    type = ComputeLinearElasticStress\n  []\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  dt = 0.5\n  end_time = 1\n  solve_type = 'PJFNK'\n  petsc_options_iname = -pc_type\n  petsc_options_value = lu\n[]\n\n[Outputs]\n  exodus = true\n[]\n\nIn theory, this should behave like a homogeneous shear experiment. But the auto PBC makes it not deform at all. Why is that?",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7357303",
                          "updatedAt": "2023-10-23T10:22:12Z",
                          "publishedAt": "2023-10-23T10:20:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\ntopleft is on a corner right?\nso you are imposing two BCs on that node, one periodic and tdisp\ncan you move the loading point inside the boundary away from the corner?",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7358399",
                          "updatedAt": "2023-10-23T12:33:42Z",
                          "publishedAt": "2023-10-23T12:33:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Flolaffel"
                          },
                          "bodyText": "I mean you can, but then the four corner nodes act as fixed which is usually not the behavior one aims to achieve in this kind of model setup.\nWhen you think of the square in the original post as a RVE, then a common approach for imposing PBCs is to fix the bottom left corner node and use the bottom right and the top left corner nodes as the \"controlling nodes\". You do this by coupling the displacement of all the boundary nodes to the displacement of these corner nodes  (like @abarun22 showed in his post).\nI don't have any knowledge about the implementation of the Periodic BC System in MOOSE but it seems like this approach is not compatible. Which leads back to the use of LinearNodalConstraint which - as already discussed previously - would become quite tedious for larger models. It's the same way in ABAQUS (Constraint Equations).\nConcluding I'd say being able to impose a Periodic BC and a normal DirichletBC on one node would be quite nice but I don't know if that's a feasible approach.",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7358613",
                          "updatedAt": "2023-10-23T13:09:31Z",
                          "publishedAt": "2023-10-23T12:56:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@lindsayad\nIf mixing Dirichlet and periodic BCs does not work right now I think we'd need to refactor periodic BCs in libmesh to change that",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7359072",
                          "updatedAt": "2023-10-23T13:37:00Z",
                          "publishedAt": "2023-10-23T13:36:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Let me see if I understand the issue. What I would expect to happen is that the periodic boundary constraint is overriding the Dirichlet constraint? Both are strong enforcement conditions; it just so happens that right now I believe the strong periodicity constraint will be enforced after the Dirichlet one",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7360721",
                          "updatedAt": "2023-10-23T16:00:39Z",
                          "publishedAt": "2023-10-23T16:00:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Flolaffel"
                          },
                          "bodyText": "I guess so, yes. This is also true for BCs like NeumannBC oder NodalGravity though.\nBeing able to apply normal BCs in conjunction with the Periodic BCs would be a pretty elegant solution for solving RVE problems.",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7366545",
                          "updatedAt": "2023-10-24T06:47:59Z",
                          "publishedAt": "2023-10-24T06:47:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "@roystgnr is there a way to weakly enforce periodicity?",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7372517",
                          "updatedAt": "2023-10-24T16:59:44Z",
                          "publishedAt": "2023-10-24T16:59:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "\"Weakly\" == \"add a residual term\", but the details of that then depend on how the rest of your residual works, so we can't do it at the libMesh level.\nIs MOOSE even enforcing Dirichlet constraints via libMesh DirichletBoundary objects, though?  Last I looked it was just some manually applied NodalBC residual term, not anything that would construct a constraint row; and then at the libMesh level we can't even distinguish between \"residual entry that needs to be respected\" vs \"residual entry that should be overridden by a constraint\".  I was actually so surprised to see that (while trying to figure out why it wasn't working for IGA) that I feel like I have to be missing something.  What happens if someone tries to do a Dirichlet BC on a cubic Hierarchic variable?",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7372733",
                          "updatedAt": "2023-10-24T17:22:42Z",
                          "publishedAt": "2023-10-24T17:22:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Hahaha. We've talked about this... I believe MOOSE Dirichlet BCs pre-date libMesh Dirichlet boundaries. Yea MOOSE Dirichlet BCs are not done through libMesh. I think when I suggested that we should move to libMesh Dirichlet boundary enforcement you responded by saying that we would then lose the ability to apply nonlinear Dirichlet BCs which would be problematic.\n\nWhat happens if someone tries to do a Dirichlet BC on a cubic Hierarchic variable?\n\nMOOSE would probably die.\n\n\"Weakly\" == \"add a residual term\", but the details of that then depend on how the rest of your residual works, so we can't do it at the libMesh level.\n\nSo @Flolaffel I think weak enforcement of the periodic BC is the way to go. As I mentioned somewhere on this thread, we can do periodic BCs (weakly) using mortar. Note that you may also then want to consider enforcing the Dirichlet BCs weakly as well unless you're fine having the Dirichlet BCs always \"win\" at the place the Dirichlet BCs intersect the periodic BC conditions.",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7372858",
                          "updatedAt": "2023-10-24T17:37:17Z",
                          "publishedAt": "2023-10-24T17:37:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "I'll definitely be making libMesh Dirichlet boundary enforcement available for the purposes of IGA, high-order (or non-Lagrange in general?) elements, etc. in the near future.  Better to support linear-only than nothing at all for those cases.  Nonlinear libMesh::DirichletBoundary is something we really ought to have too, and until we have it there's no way to wholly replace the MOOSE-level Dirichlet BCs, but that's not going to be something I can fix this year.\nI'd strongly agree with falling back on weak enforcement for this sort of use case for now.",
                          "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7373608",
                          "updatedAt": "2023-10-24T19:03:26Z",
                          "publishedAt": "2023-10-24T19:03:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Ttw0626"
                  },
                  "bodyText": "Hi, is there any updated info about pervious discussion ?\nthe multiple point constraints or periodic condition by boundary-constraints seems like be most-stable\nand common way to do homogenization.\nBy the way, as @abarun22 mentioned before, his opinion is also called as dummy nodes approach (Multiple Point Constraints).\nMy suggestion is that we do not need to put the secondary_node_ids as node which belong to mesh with the material property. It is not advanced or novel method but important from my view, I would like to do this.\n`[./disp_y_2]`\n`   type = LinearNodalConstraint_new`\n`   variable = disp_y`\n`   primary = bottom`\n`   secondary = top`\n`   dummy_node_ids = \"any node outside material domain\"`\n`   penalty = 1e8`\n`   formulation = kinematic`\n`[../]`\n\nWe cannot ignore the shared object such as corner nodes in 2D and corner nodes / shared ledges in 3D.",
                  "url": "https://github.com/idaholab/moose/discussions/25441#discussioncomment-7494587",
                  "updatedAt": "2024-03-30T14:08:35Z",
                  "publishedAt": "2023-11-07T04:32:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MacOS Sonoma",
          "author": {
            "login": "milljm"
          },
          "bodyText": "As with any latest release from Apple, we are not ready to officially support it. Give us some time to rattle the cage before allowing your machine(s) to be upgraded, if possible!",
          "url": "https://github.com/idaholab/moose/discussions/25601",
          "updatedAt": "2023-11-06T23:37:44Z",
          "publishedAt": "2023-09-27T18:01:54Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "UPDATE: MacOS Sonoma is now fully supported! Please reach out in a new Discussion post with any support requests, as normal.",
                  "url": "https://github.com/idaholab/moose/discussions/25601#discussioncomment-7493031",
                  "updatedAt": "2023-11-06T23:37:45Z",
                  "publishedAt": "2023-11-06T23:37:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "INSFV model - periodic boundary conditions",
          "author": {
            "login": "thomas-petersen-1"
          },
          "bodyText": "Does MOOSE currently support periodic boundary conditions in its finite volume implementation of the Navier-Stokes equations?",
          "url": "https://github.com/idaholab/moose/discussions/25946",
          "updatedAt": "2023-11-06T20:41:28Z",
          "publishedAt": "2023-11-02T03:04:42Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nFor velocity?\nI ll check tomorrow what we need for that. We have not looked into it so it s unlikely we support it\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7451982",
                  "updatedAt": "2023-11-02T03:08:37Z",
                  "publishedAt": "2023-11-02T03:08:36Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "thomas-petersen-1"
                          },
                          "bodyText": "Yes, for the velocity components. Thank you for verifying, Guillaume.",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7452071",
                          "updatedAt": "2023-11-02T03:28:53Z",
                          "publishedAt": "2023-11-02T03:28:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Periodic BCs seem to be silently ignored.\nIf I set a flat inlet velocity it gets obeyed first.\nIf I set an inlet and outlet pressure, then the periodic solution in velocity appears with or without PeriodicBCs (could you use that?)\nIf I set an outlet pressure and a momemtum source and PeriodicBCs I dont get convergence which makes me think they are not applied",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7456803",
                          "updatedAt": "2023-11-02T13:25:23Z",
                          "publishedAt": "2023-11-02T13:25:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@roystgnr do we do periodic BCs on constant monomials?",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7456809",
                          "updatedAt": "2023-11-02T13:25:42Z",
                          "publishedAt": "2023-11-02T13:25:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "grmnptr"
                          },
                          "bodyText": "I dont think we have an FVPeriodicBC. FV has its own system for BCs.",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7456880",
                          "updatedAt": "2023-11-02T13:31:55Z",
                          "publishedAt": "2023-11-02T13:31:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "grmnptr"
                          },
                          "bodyText": "If I remember correctly in the assembly loops we query FVFluxBCs and the FVDirichletBCs are applied in the different residual terms which need face values (laplacians, gradients etc).",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7456923",
                          "updatedAt": "2023-11-02T13:35:59Z",
                          "publishedAt": "2023-11-02T13:35:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If we did it on the MOOSE side it would be a dirichlet BC on one side that goes to retrieve the value on the other side.\nPeriodic BCs are not done in MOOSE, they rely on some libmesh mechanics I havent dwelled in",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7456959",
                          "updatedAt": "2023-11-02T13:40:08Z",
                          "publishedAt": "2023-11-02T13:40:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "grmnptr"
                          },
                          "bodyText": "Yeah we need coupling between (potentially multiple) cell layers next to the boundaries, especially if we use Newton's method and want perfect Jacobians.",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7457669",
                          "updatedAt": "2023-11-02T14:38:44Z",
                          "publishedAt": "2023-11-02T14:38:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "periodic enforcement in libMesh won't work for DISCONTINUOUS finite element types",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7459210",
                          "updatedAt": "2023-11-02T16:59:41Z",
                          "publishedAt": "2023-11-02T16:59:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "we could make this work with a finite volume implementation of the EqualValueConstraint",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7459228",
                          "updatedAt": "2023-11-02T17:01:10Z",
                          "publishedAt": "2023-11-02T17:01:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "but it would require adding more Lagrange multipliers to the system",
                          "url": "https://github.com/idaholab/moose/discussions/25946#discussioncomment-7459232",
                          "updatedAt": "2023-11-02T17:01:31Z",
                          "publishedAt": "2023-11-02T17:01:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "construct_node_list_from_side_list adding nodes to existing nodesets",
          "author": {
            "login": "naabwxt"
          },
          "bodyText": "Quick question on how construct_node_list_from_side_list is intended to work. I have defined a model in Cubit with SideSets and NodeSets...by default cubit gives the first sideset an ID of 1 and the first node set an ID of 1. When this exodus is loaded into MOOSE with construct_node_list_from_side_list = true as is the default, it is adding the nodes from sideset ID 1 to the nodeset ID 1. Is that what is supposed to happen? Am I supposed to make sure the nodesets in cubit start at double the highest id in sidesets? Or am I missing a setting somewhere?",
          "url": "https://github.com/idaholab/moose/discussions/25983",
          "updatedAt": "2023-11-06T19:19:49Z",
          "publishedAt": "2023-11-06T19:19:48Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Local axes displaying for line element",
          "author": {
            "login": "andrey1887"
          },
          "bodyText": "Hello. I want to show a local axes of line element in Paraview, but as far as i understood, it is needed to define some data for it in input file.\nFor example i took a code from Moose framework site: https://mooseframework.inl.gov/modules/tensor_mechanics/beam_vandv.html\n\"Small strain Euler beam bending\"\nFinally i would like to get something like this: https://www.youtube.com/watch?v=FUiFjAtCyX0&ab_channel=AetherEngineering\nWoluld you help me with such problem, please.",
          "url": "https://github.com/idaholab/moose/discussions/25653",
          "updatedAt": "2023-11-06T16:49:45Z",
          "publishedAt": "2023-10-03T11:05:31Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis looks like mostly work in Paraview work to me.\nIf you identify which fields you need to output them in Paraview, we can help you output them.\n@cbolisetti  on beam elements plotting\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7175542",
                  "updatedAt": "2023-10-03T13:06:21Z",
                  "publishedAt": "2023-10-03T13:06:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you. It's fields wich coressponds to x, y and z direction of local axes for each element. For this case https://mooseframework.inl.gov/modules/tensor_mechanics/beam_vandv.html i assumed such direction:\nx - along elment\ny - according to 'y-orientation' parameter in material block\nz - with x and y constitutes a right hand coordinate system\nI can't understand how to define this data and in what place of input file.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7175885",
                          "updatedAt": "2023-10-03T13:35:48Z",
                          "publishedAt": "2023-10-03T13:35:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Seems like you want a VectorVariable to have this information\ni think you should build a VectorAuxKernel to do this",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7179458",
                          "updatedAt": "2023-10-03T19:22:10Z",
                          "publishedAt": "2023-10-03T19:22:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you. I will try it.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7179693",
                          "updatedAt": "2023-10-03T19:47:38Z",
                          "publishedAt": "2023-10-03T19:47:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Hello.\nI think the orientation of the x and y axes is already defined.\nFor beams there is an option \"Y-axis orientation\". Can i pass this parameter in VectorVariable?\nAnd what about x an z axes. Are they defined implicitly? But how to extract them?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7217533",
                          "updatedAt": "2023-10-07T14:06:46Z",
                          "publishedAt": "2023-10-07T14:06:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@cbolisetti\nI could try to have a look\nWhere is this all defined? What are the element types called? What kind of kernels are you using?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7224105",
                          "updatedAt": "2023-10-08T17:39:26Z",
                          "publishedAt": "2023-10-08T17:39:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Sorry, maybe i don't understand the approach correctly. I took the input file euler_small_strain_y.i from here\nhttps://mooseframework.inl.gov/modules/tensor_mechanics/beam_vandv.html .\nIn materials block there is 'y_orientation'.\nI see second moments of area Iy Iz, wich related to y and z axes is not it?\nHow i can change z and x orientation in this context?\nI think the axes displayed in the paraview should follow these parameters.\nIf i not right, please help me to understand process of specifying axes in input file.\n[Materials]\n  [./elasticity]\n    type = ComputeElasticityBeam\n    youngs_modulus = 2.60072400269\n    poissons_ratio = -0.9998699638\n    shear_coefficient = 0.85\n    block = 0\n  [../]\n  [./strain]\n    type = ComputeIncrementalBeamStrain\n    block = '0'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    area = 0.554256\n    Ay = 0.0\n    Az = 0.0\n    Iy = 0.0141889\n    Iz = 0.0141889\n    y_orientation = '0.0 1.0 0.0'\n  [../]\n  [./stress]\n    type = ComputeBeamResultants\n    block = 0\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7229112",
                          "updatedAt": "2023-10-09T13:16:23Z",
                          "publishedAt": "2023-10-09T10:41:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Kind of looks like it's a constant. I checked the LineElementAction and it kind of just stays as a constant.\nIf you look at the material properties defined you also cant see them?\nSo I m not sure how you would retrieve it",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7231594",
                          "updatedAt": "2023-10-09T15:07:47Z",
                          "publishedAt": "2023-10-09T15:07:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Do i need to define a common variable in input, wich value will be assigned to\nVectorVariable for axis representation and\n'y_orientation' in Materials block ?\n\n\nHow i can extract an element orientation from the mesh for x-axis definition?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7231980",
                          "updatedAt": "2023-10-09T15:46:46Z",
                          "publishedAt": "2023-10-09T15:46:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "wich value will be assigned to VectorVariable for axis representation and 'y_orientation' in Materials block ?\n\nIt s whichever value is specified in the input\n\nHow i can extract an element orientation from the mesh for x-axis definition?\n\nI dont know. @cbolisetti if you know or if you know who may know",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7232540",
                          "updatedAt": "2023-10-09T16:48:33Z",
                          "publishedAt": "2023-10-09T16:48:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cbolisetti"
                  },
                  "bodyText": "Hello @andrey1887, sorry for the late response. Beam orientation is defined as follows:\n\nX axis is along the length of the beam and this cannot be changed.\nY axis is defined according to the y_orientation input parameter in the strain block (e.g., ComputeIncrementalBeamStrain). Note that you may not see this block if you are using the LineElementMaster action, in which case, you provide this input parameter in the LineElementMaster block.\nZ axis is the cross product of X and Y. So you basically adjust the orientation using the y_orientation parameter.\nAnd you are right, Ix, Iy, Iz, and other cross sectional inputs relate to the local coordinate system of the beam, so you need to input them accordingly.\n\ny_orientation is currently just a LibMesh VectorValue type. So I am not sure how to plot this in paraview. I don't think plotting in paraview was an intention when the beam element formulation was developed, but its a nice thing to have.",
                  "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7232834",
                  "updatedAt": "2023-10-09T17:25:08Z",
                  "publishedAt": "2023-10-09T17:22:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Hello @cbolisetti. Thank you for your answer. But what determines the direction of X axis? Are these element node numbers?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7233043",
                          "updatedAt": "2023-10-09T17:48:22Z",
                          "publishedAt": "2023-10-09T17:48:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cbolisetti"
                          },
                          "bodyText": "Yes, that is correct. When the elements are looped over, each of them first gets assigned an X axis based on the nodal coordinates. Y and Z axis definitions follow, according to my previous response.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7233064",
                          "updatedAt": "2023-10-09T17:50:24Z",
                          "publishedAt": "2023-10-09T17:50:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you.\nI think, that i need another variable for axes representation with the same value of y-orientation.\n@cbolisetti, what are you think about this way for local axes definition for representation:\n\nSeems like you want a VectorVariable to have this information\ni think you should build a VectorAuxKernel to do this\n\n#25653 (reply in thread)\nAnd how i can get X-axis vector from the element?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7233477",
                          "updatedAt": "2023-10-09T18:52:04Z",
                          "publishedAt": "2023-10-09T18:52:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cbolisetti"
                          },
                          "bodyText": "(@GiudGiud correct me if I am wrong) I believe we currently don't have an object to do that. You will have to develop a small AuxKernel object to do that. @GiudGiud can you suggest an AuxKernel that @andrey1887 can use as a template for this? Also, do you know if the orientations have to be converted to MaterialProperty objects to make this possible, or can they write an AuxKernel for any VectorValue?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7233580",
                          "updatedAt": "2023-10-09T19:05:28Z",
                          "publishedAt": "2023-10-09T19:05:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There are VectorAuxKernels so you could use that as the base class\nI think the difficulty for me is how to go from _current_elem to knowing x,y and z\nx is probably easy enough using the nodes of the _current_elem to compute the change in X",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7234031",
                          "updatedAt": "2023-10-09T20:05:14Z",
                          "publishedAt": "2023-10-09T20:05:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cbolisetti"
                          },
                          "bodyText": "Here's how its done in ComputeIncrementalBeamStrain. I think these lines can just be copied into the new AuxKernel to get the orientations, although its not ideal to do that twice.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7234392",
                          "updatedAt": "2023-10-09T20:58:28Z",
                          "publishedAt": "2023-10-09T20:58:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "I copied these lines:\n  const std::vector<RealGradient> * orientation =\n      &_subproblem.assembly(_tid).getFE(FEType(), 1)->get_dxyzdxi();\n  RealGradient x_orientation = (*orientation)[0];\n  x_orientation /= x_orientation.norm();\n\n  RealGradient y_orientation = getParam<RealGradient>(\"y_orientation\");\n  y_orientation /= y_orientation.norm();\n  Real sum = x_orientation(0) * y_orientation(0) + x_orientation(1) * y_orientation(1) +\n             x_orientation(2) * y_orientation(2);\n\n  if (std::abs(sum) > 1e-4)\n    mooseError(\"ComputeIncrementalBeamStrain: y_orientation should be perpendicular to \"\n               \"the axis of the beam.\");\n\n  // Calculate z orientation as a cross product of the x and y orientations\n  RealGradient z_orientation;\n  z_orientation(0) = (x_orientation(1) * y_orientation(2) - x_orientation(2) * y_orientation(1));\n  z_orientation(1) = (x_orientation(2) * y_orientation(0) - x_orientation(0) * y_orientation(2));\n  z_orientation(2) = (x_orientation(0) * y_orientation(1) - x_orientation(1) * y_orientation(0));\n\nBut what i need to add for getting access to these variables in paraview?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7303116",
                          "updatedAt": "2023-10-17T11:44:50Z",
                          "publishedAt": "2023-10-17T11:44:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You need to write an auxkernel that takes as parameters the component to output.\nThen in the computeValue routine for the auxkernel, you simply have the expression you just wrote, but returning the component selected by the user with the parameter",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7303436",
                          "updatedAt": "2023-10-17T12:19:52Z",
                          "publishedAt": "2023-10-17T12:19:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Hello. This is my .C file:\n#include \"libmesh/quadrature.h\"\n#include \"libmesh/utility.h\"\n\n#include \"LocalAxisVectorAux.h\"\n\nregisterMooseObject(\"LocalAxisVectorAux\", LocalAxisVectorAux);\n\nInputParameters\nLocalAxisVectorAux::validParams()\n{\n  InputParameters params = VectorAuxKernel::validParams();\n\n  /*\u0437\u0430\u0434\u0430\u043d\u043d\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443, \u044f\u043a\u0438\u0439 \u043f\u0440\u0438\u0439\u043c\u0430\u0454\u0442\u044c\u0441\u044f \u0431\u0435\u0437\u043f\u043e\u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e \u0437 input \u0444a\u0439\u043b\u0443,\n  \u044f\u043a\u0449\u043e \u0436 \u0432\u0456\u043d \u0432\u0456\u0434\u0441\u0443\u0442\u043d\u0456\u0439, \u0431\u0443\u0434\u0435 \u0432\u0438\u0434\u0430\u043d\u0430 \u043f\u043e\u043c\u0438\u043b\u043a\u0430*/\n  params.addRequiredParam<RealGradient>(\"y_orientation\",\n                                        \"Orientation of the y direction along \"\n                                        \"with Iyy is provided. This should be \"\n                                        \"perpendicular to the axis of the beam.\");\n\n  return params;\n}\n\nLocalAxisVectorAux::LocalAxisVectorAux(const InputParameters & parameters)\n  : VectorAuxKernel(parameters){\n\n    };\n\nRealVectorValue\nLocalAxisVectorAux::computeValue()\n{\n  // compute initial orientation of the beam for calculating initial rotation matrix\n  const std::vector<RealGradient> * orientation =\n      &_subproblem.assembly(_tid).getFE(FEType(), 1)->get_dxyzdxi();\n  RealGradient x_orientation = (*orientation)[0];\n  x_orientation /= x_orientation.norm();\n\n  RealGradient y_orientation = getParam<RealGradient>(\"y_orientation\");\n  y_orientation /= y_orientation.norm();\n  Real sum = x_orientation(0) * y_orientation(0) + x_orientation(1) * y_orientation(1) +\n             x_orientation(2) * y_orientation(2);\n\n  if (std::abs(sum) > 1e-4)\n    mooseError(\"ComputeIncrementalBeamStrain: y_orientation should be perpendicular to \"\n               \"the axis of the beam.\");\n\n  // Calculate z orientation as a cross product of the x and y orientations\n  RealGradient z_orientation;\n  z_orientation(0) = (x_orientation(1) * y_orientation(2) - x_orientation(2) * y_orientation(1));\n  z_orientation(1) = (x_orientation(2) * y_orientation(0) - x_orientation(0) * y_orientation(2));\n  z_orientation(2) = (x_orientation(0) * y_orientation(1) - x_orientation(1) * y_orientation(0));\n  \n  return \n}\n\n\nBut i don't entirely understand what i must return in computeValue() method. y_orientation is the single input required parameter in my case.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7341743",
                          "updatedAt": "2023-10-20T17:21:41Z",
                          "publishedAt": "2023-10-20T17:21:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nYou are trying to output z_orientation right? So you can visualize that vector?\nI would make your auxkernel derived from the VectorAuxkernel base class, then return z_orientation will do what you want\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7342856",
                          "updatedAt": "2023-10-20T19:59:36Z",
                          "publishedAt": "2023-10-20T19:59:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "andrey1887"
                  },
                  "bodyText": "use 3 auxkernels then. One for each vector\n\nDo i need 3 separate .C files and 3 .h ?",
                  "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7390383",
                  "updatedAt": "2023-10-26T08:54:38Z",
                  "publishedAt": "2023-10-26T08:54:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no you should be able to have a parameter in that kernel to select the component.\nUse a MooseEnum for example in the validParams\nMooseEnum component(\"x y z\");\nparams.addParam<MooseEnum>(component, component, \"Component to output\");",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7392085",
                          "updatedAt": "2023-10-26T12:06:54Z",
                          "publishedAt": "2023-10-26T12:06:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you, @GiudGiud . But what about glyphs displaying at the center point of elements in Paraview ?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7392158",
                          "updatedAt": "2023-10-26T12:14:27Z",
                          "publishedAt": "2023-10-26T12:14:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont know about that one. maybe ask on the paraview forum",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7392281",
                          "updatedAt": "2023-10-26T12:26:28Z",
                          "publishedAt": "2023-10-26T12:26:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "andrey1887"
                  },
                  "bodyText": "MooseEnum component(\"x y z\");\nparams.addParam<MooseEnum>(component, component, \"Component to output\");\n\n\n@GiudGiud, how i can use this in defining parameters in input file how it will look?",
                  "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7394597",
                  "updatedAt": "2023-10-26T15:51:25Z",
                  "publishedAt": "2023-10-26T15:51:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "add this to your validParams routine\nthen in your header:\nconst MooseEnum _component;\n\nin your initializer list:\n_component(getParam<MooseEnum>(\"component\")),\n\nthen in your code you can do:\nif (_component == \"x\")\n{\ndo this\n}\nelse if (_component == \"y\")\n{\ndo this other thing, return y component\n}",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7394769",
                          "updatedAt": "2023-10-26T17:45:26Z",
                          "publishedAt": "2023-10-26T16:08:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "In file included from /home/and/projects/thin_walled/build/unity_src/auxkernels_Unity.C:2:\n/home/and/projects/thin_walled/src/auxkernels/LocalAxisVectorAux.C: In member function 'virtual libMesh::RealVectorValue LocalAxisVectorAux::computeValue()':\n/home/and/projects/thin_walled/src/auxkernels/LocalAxisVectorAux.C:69:1: warning: control reaches end of non-void function [-Wreturn-type]\n   69 | }\n      | ^\n\n@GiudGiud, i got this warning during compilation.\nmy file computeValue method:\nRealVectorValue\nLocalAxisVectorAux::computeValue()\n{\n  // compute initial orientation of the beam for calculating initial rotation matrix\n  const std::vector<RealGradient> * orientation =\n      &_subproblem.assembly(_tid).getFE(FEType(), 1)->get_dxyzdxi();\n  RealGradient x_orientation = (*orientation)[0];\n  x_orientation /= x_orientation.norm(); // \u043d\u043e\u0440\u043c\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0432\u0435\u043a\u0442\u043e\u0440\u0430\n\n  RealGradient y_orientation = getParam<RealGradient>(\"y_orientation\");\n  y_orientation /= y_orientation.norm();\n  Real sum = x_orientation(0) * y_orientation(0) + x_orientation(1) * y_orientation(1) +\n             x_orientation(2) * y_orientation(2);\n\n  if (std::abs(sum) > 1e-4)\n    mooseError(\"ComputeIncrementalBeamStrain: y_orientation should be perpendicular to \"\n               \"the axis of the beam.\");\n\n  // Calculate z orientation as a cross product of the x and y orientations\n  RealGradient z_orientation;\n  z_orientation(0) = (x_orientation(1) * y_orientation(2) - x_orientation(2) * y_orientation(1));\n  z_orientation(1) = (x_orientation(2) * y_orientation(0) - x_orientation(0) * y_orientation(2));\n  z_orientation(2) = (x_orientation(0) * y_orientation(1) - x_orientation(1) * y_orientation(0));\n\n  if (_component == \"x\")\n  {\n    return x_orientation;\n  }\n  else if (_component == \"y\")\n  {\n    return y_orientation;\n  }\n  else if (_component == \"z\")\n  {\n    return z_orientation;\n  }\n}",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7396865",
                          "updatedAt": "2023-10-26T20:04:22Z",
                          "publishedAt": "2023-10-26T20:04:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "/home/and/projects/thin_walled/src/auxkernels/LocalAxisVectorAux.C:69:1: warning: control reaches end of non-void function [-Wreturn-type]\n\nthat means you forgot a brakcet",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7396919",
                          "updatedAt": "2023-10-26T20:12:37Z",
                          "publishedAt": "2023-10-26T20:12:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "@GiudGiud , may be something wrong in the input file?\n[AuxVariables]\n  [local_axis_x]\n    family = MONOMIAL_VEC\n  []\n  [local_axis_y]\n    family = MONOMIAL_VEC\n  []\n  [local_axis_z]\n    family = MONOMIAL_VEC\n  []\n[]\n\n[AuxKernels]\n  [local_axis_x]\n    type = LocalAxisVectorAux\n    variable = local_axis_x\n    y_orientation = '0.0 1.0 0.0'\n    component = 'x'\n  []\n  [local_axis_y]\n    type = LocalAxisVectorAux\n    variable = local_axis_y\n    y_orientation = '0.0 1.0 0.0'\n    component = 'y'\n  []\n  [local_axis_z]\n    type = LocalAxisVectorAux\n    variable = local_axis_z\n    y_orientation = '0.0 1.0 0.0'\n    component = 'z'\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7396993",
                          "updatedAt": "2023-10-26T20:22:01Z",
                          "publishedAt": "2023-10-26T20:22:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no this is a compilation error\nIn file included from /home/and/projects/thin_walled/build/unity_src/auxkernels_Unity.C:2:\n/home/and/projects/thin_walled/src/auxkernels/LocalAxisVectorAux.C: In member function 'virtual libMesh::RealVectorValue LocalAxisVectorAux::computeValue()':\n/home/and/projects/thin_walled/src/auxkernels/LocalAxisVectorAux.C:69:1: warning: control reaches end of non-void function [-Wreturn-type]\n   69 | }\n      | ^\n\nit comes from the C file",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7396997",
                          "updatedAt": "2023-10-26T20:22:57Z",
                          "publishedAt": "2023-10-26T20:22:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "i changed the last snipped this way:\n  RealGradient returnValue;\n\n  if (_component == \"x\")\n  {\n    returnValue = x_orientation;\n  }\n  else if (_component == \"y\")\n  {\n    returnValue = y_orientation;\n  }\n  else if (_component == \"z\")\n  {\n    returnValue = z_orientation;\n  }\n\n  return returnValue;\n\nThen the warning disappeared",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7397080",
                          "updatedAt": "2023-10-27T08:07:27Z",
                          "publishedAt": "2023-10-26T20:35:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "@GiudGiud  if i open exodus file in paraview, i can't access to display it.\nMay i output local axes in csv file to check it before.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7401066",
                          "updatedAt": "2023-10-27T08:12:26Z",
                          "publishedAt": "2023-10-27T08:12:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This is odd. Exodus is well supported. Can you try the latest paraview?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7403208",
                          "updatedAt": "2023-10-27T12:16:09Z",
                          "publishedAt": "2023-10-27T12:16:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "I will try to describe what i have:\n\n@GiudGiud, I doubt that the data for the glyphs is displayed according to the local_axis_ vectors data. I can display one direction, but switching a component gives no result.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7403737",
                          "updatedAt": "2023-10-27T13:14:03Z",
                          "publishedAt": "2023-10-27T13:07:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "where do you select the glyphs in paraview?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7404045",
                          "updatedAt": "2023-10-27T13:40:12Z",
                          "publishedAt": "2023-10-27T13:40:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "andrey1887"
                  },
                  "bodyText": "@cbolisetti, @GiudGiud, now i have solution for elements along one line. To put it briefly : there are 2 enums: first - for axis name, the second one is for separate component (number), when axis is defined by 3 components. So i have 9 variables, which are define 3 vectors.\n\n\nBut when i try to extend mesh to more than one direction line elements i see 9 variables\n\n\nWhich additionally is empty. Help me please, what  i need to do to solve this issue?\nLocalAxisVectorAux.C:\n#include \"libmesh/quadrature.h\"\n#include \"libmesh/utility.h\"\n\n#include \"LocalAxisVectorAux.h\"\n\nregisterMooseObject(\"ThinWalledApp\", LocalAxisVectorAux);\n\nInputParameters\nLocalAxisVectorAux::validParams()\n{\n  InputParameters params = VectorAuxKernel::validParams();\n\n  params.addRequiredParam<RealGradient>(\"y_orientation\",\n                                        \"Orientation of the y direction along \"\n                                        \"with Iyy is provided. This should be \"\n                                        \"perpendicular to the axis of the beam.\");\n\n  MooseEnum axis(\"x y z\");\n  params.addParam<MooseEnum>(\"axis\", axis, \"Axis to output\");\n\n  MooseEnum component(\"x y z\");\n  params.addParam<MooseEnum>(\"component\", component, \"Component to output\");\n\n  return params;\n}\n\nLocalAxisVectorAux::LocalAxisVectorAux(const InputParameters & parameters)\n  : VectorAuxKernel(parameters),\n    _axis(getParam<MooseEnum>(\"axis\")),\n    _component(getParam<MooseEnum>(\"component\")){\n\n    };\n\nRealVectorValue\nLocalAxisVectorAux::computeValue()\n{\n  // compute initial orientation of the beam for calculating initial rotation matrix\n  const std::vector<RealGradient> * orientation =\n      &_subproblem.assembly(_tid).getFE(FEType(), 1)->get_dxyzdxi();\n\n  RealGradient x_orientation = (*orientation)[0];\n  x_orientation /= x_orientation.norm(); // \u043d\u043e\u0440\u043c\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0432\u0435\u043a\u0442\u043e\u0440\u0430\n\n  RealGradient y_orientation = getParam<RealGradient>(\"y_orientation\");\n  y_orientation /= y_orientation.norm();\n\n  Real sum = x_orientation(0) * y_orientation(0) + x_orientation(1) * y_orientation(1) +\n             x_orientation(2) * y_orientation(2);\n\n  if (std::abs(sum) > 1e-4)\n    mooseError(\"ComputeIncrementalBeamStrain: y_orientation should be perpendicular to \"\n               \"the axis of the beam.\");\n\n  // Calculate z orientation as a cross product of the x and y orientations\n  RealGradient z_orientation;\n  z_orientation(0) = (x_orientation(1) * y_orientation(2) - x_orientation(2) * y_orientation(1));\n  z_orientation(1) = (x_orientation(2) * y_orientation(0) - x_orientation(0) * y_orientation(2));\n  z_orientation(2) = (x_orientation(0) * y_orientation(1) - x_orientation(1) * y_orientation(0));\n\n  Real returnValue;\n  RealGradient direction;\n\n  if (_axis == \"x\")\n  {\n    direction = x_orientation;\n  }\n  else if (_axis == \"y\")\n  {\n    direction = y_orientation;\n  }\n  else if (_axis == \"z\")\n  {\n    direction = z_orientation;\n  }\n\n  if (_component == \"x\")\n  {\n    returnValue = direction(0);\n  }\n  else if (_component == \"y\")\n  {\n    returnValue = direction(1);\n    // std::cout << \"y_orientation\" << y_orientation << std::endl;\n  }\n  else if (_component == \"z\")\n  {\n    returnValue = direction(2);\n    // std::cout << \"z_orientation\" << z_orientation << std::endl;\n  }\n\n  return returnValue;\n}\n\nLocalAxisVectorAux.h\n#pragma once\n\n#include \"AuxKernel.h\"\n\nclass LocalAxisVectorAux : public VectorAuxKernel\n{\n\npublic:\n  static InputParameters validParams();\n\n  LocalAxisVectorAux(const InputParameters & parameters);\n\nprotected:\n  /**\n   * AuxKernels MUST override computeValue.  computeValue() is called on\n   * every quadrature point.  For Nodal Auxiliary variables those quadrature\n   * points coincide with the nodes.\n   */\n  virtual RealVectorValue computeValue() override;\n  const MooseEnum _axis;\n  const MooseEnum _component;\n};\n\nAnd the next line are described local axes in input-file:\n[AuxVariables]\n  [local_axisX_x]\n    family = MONOMIAL_VEC\n  []\n  [local_axisX_y]\n    family = MONOMIAL_VEC\n  []\n  [local_axisX_z]\n    family = MONOMIAL_VEC\n  []\n\n  [local_axisY_x]\n    family = MONOMIAL_VEC\n  []\n  [local_axisY_y]\n    family = MONOMIAL_VEC\n  []\n  [local_axisY_z]\n    family = MONOMIAL_VEC\n  []\n\n  [local_axisZ_x]\n    family = MONOMIAL_VEC\n  []\n  [local_axisZ_y]\n    family = MONOMIAL_VEC\n  []\n  [local_axisZ_z]\n    family = MONOMIAL_VEC\n  []\n[]\n\n[AuxKernels]\n  [local_axisX_x]\n    type = LocalAxisVectorAux\n    variable = local_axisX_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'x'\n  []\n  [local_axisX_y]\n    type = LocalAxisVectorAux\n    variable = local_axisX_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'y'\n  []\n  [local_axis_x_z]\n    type = LocalAxisVectorAux\n    variable = local_axisX_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'z'\n  []\n\n  [local_axisY_x]\n    type = LocalAxisVectorAux\n    variable = local_axisY_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'x'\n  []\n  [local_axisY_y]\n    type = LocalAxisVectorAux\n    variable = local_axisY_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'y'\n  []\n  [local_axisY_z]\n    type = LocalAxisVectorAux\n    variable = local_axisY_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'z'\n  []\n\n  [local_axisZ_x]\n    type = LocalAxisVectorAux\n    variable = local_axisZ_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'x'\n  []\n  [local_axisZ_y]\n    type = LocalAxisVectorAux\n    variable = local_axisZ_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'y'\n  []\n  [local_axisZ_z]\n    type = LocalAxisVectorAux\n    variable = local_axisZ_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'z'\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7469357",
                  "updatedAt": "2023-11-03T17:02:32Z",
                  "publishedAt": "2023-11-03T17:02:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you are using one variable per component you do not need to use vector variables.\nSo it should be\n  [local_axisX_y]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n\nfor all 9 variables",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7470079",
                          "updatedAt": "2023-11-03T18:35:50Z",
                          "publishedAt": "2023-11-03T18:35:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "BUT since you coded a VectorAuxKernel instead of an auxkernel you could keep vector varaible, but you only need 3 of them",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7470086",
                          "updatedAt": "2023-11-03T18:36:44Z",
                          "publishedAt": "2023-11-03T18:36:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you, @GiudGiud.  I have added order = CONSTANT but i expect  for another result: that 3 components will make up a 1 vector. Since i also can't use obtained data as orientation array, because this needs 3 component - vectors.\nMaybe it depends on using blocks for mesh. How i can do this correctly? Now i have two blocks: Beams and Columns:\n[Mesh]\n  type = FileMesh\n  file = 'beam.msh'\n[]\n\n[AuxVariables]\n  [local_axisX_x]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n  [local_axisX_y]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n  [local_axisX_z]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n\n  [local_axisY_x]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n  [local_axisY_y]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n  [local_axisY_z]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n\n  [local_axisZ_x]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n  [local_axisZ_y]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n  [local_axisZ_z]\n    family = MONOMIAL_VEC\n    order = CONSTANT\n  []\n[]\n\n[Variables]\n  [disp_x]\n    order = FIRST\n    family = LAGRANGE\n  []\n  [disp_y]\n    order = FIRST\n    family = LAGRANGE\n  []\n  [disp_z]\n    order = FIRST\n    family = LAGRANGE\n  []\n  [rot_x]\n    order = FIRST\n    family = LAGRANGE\n  []\n  [rot_y]\n    order = FIRST\n    family = LAGRANGE\n  []\n  [rot_z]\n    order = FIRST\n    family = LAGRANGE\n  []\n[]\n\n[BCs]\n  [fixx1]\n    type = DirichletBC\n    variable = disp_x\n    boundary = 'Supports'\n    value = 0.0\n  []\n  [fixy1]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'Supports'\n    value = 0.0\n  []\n  [fixz1]\n    type = DirichletBC\n    variable = disp_z\n    boundary = 'Supports'\n    value = 0.0\n  []\n  [fixr1]\n    type = DirichletBC\n    variable = rot_x\n    boundary = 'Supports'\n    value = 0.0\n  []\n  [fixr2]\n    type = DirichletBC\n    variable = rot_y\n    boundary = 'Supports'\n    value = 0.0\n  []\n  [fixr3]\n    type = DirichletBC\n    variable = rot_z\n    boundary = 'Supports'\n    value = 0.0\n  []\n[]\n\n[NodalKernels]\n  [force_y2]\n    type = ConstantRate\n    variable = disp_z\n    boundary = 'Force'\n    rate = -1.0e-4\n  []\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = NEWTON\n  line_search = 'none'\n  nl_max_its = 15\n  nl_rel_tol = 1e-10\n  nl_abs_tol = 1e-10\n\n  dt = 1\n  dtmin = 1\n  end_time = 2\n[]\n\n[Kernels]\n  [solid_disp_x]\n    type = StressDivergenceBeam\n    block = '1'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 0\n    variable = disp_x\n  []\n  [solid_disp_y]\n    type = StressDivergenceBeam\n    block = '1'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 1\n    variable = disp_y\n  []\n  [solid_disp_z]\n    type = StressDivergenceBeam\n    block = '1'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 2\n    variable = disp_z\n  []\n  [solid_rot_x]\n    type = StressDivergenceBeam\n    block = '1'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 3\n    variable = rot_x\n  []\n  [solid_rot_y]\n    type = StressDivergenceBeam\n    block = '1'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 4\n    variable = rot_y\n  []\n  [solid_rot_z]\n    type = StressDivergenceBeam\n    block = '1'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 5\n    variable = rot_z\n  []\n[]\n\n[AuxKernels]\n  [local_axisX_x]\n    type = LocalAxisVectorAux\n    variable = local_axisX_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'x'\n\n  []\n  [local_axisX_y]\n    type = LocalAxisVectorAux\n    variable = local_axisX_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'y'\n\n  []\n  [local_axis_x_z]\n    type = LocalAxisVectorAux\n    variable = local_axisX_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'z'\n\n  []\n\n  [local_axisY_x]\n    type = LocalAxisVectorAux\n    variable = local_axisY_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'x'\n\n  []\n  [local_axisY_y]\n    type = LocalAxisVectorAux\n    variable = local_axisY_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'y'\n\n  []\n  [local_axisY_z]\n    type = LocalAxisVectorAux\n    variable = local_axisY_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'z'\n\n  []\n\n  [local_axisZ_x]\n    type = LocalAxisVectorAux\n    variable = local_axisZ_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'x'\n\n  []\n  [local_axisZ_y]\n    type = LocalAxisVectorAux\n    variable = local_axisZ_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'y'\n\n  []\n  [local_axisZ_z]\n    type = LocalAxisVectorAux\n    variable = local_axisZ_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'z'\n\n  []\n\n[]\n\n[Materials]\n  [elasticity]\n    type = ComputeElasticityBeam\n    youngs_modulus = 2.60072400269\n    poissons_ratio = -0.9998699638\n    shear_coefficient = 0.85\n    block = '1 2'\n  []\n  [strain]\n    type = ComputeIncrementalBeamStrain\n    block = '1 2'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    area = 0.554256\n    Ay = 0.0\n    Az = 0.0\n    Iy = 0.0141889\n    Iz = 0.0141889\n    y_orientation = '0.0 1.0 0.0'\n  []\n  [stress]\n    type = ComputeBeamResultants\n    block = '1 2'\n  []\n[]\n\n[Postprocessors]\n  [disp_x]\n    type = PointValue\n    point = '3.0 0.0 0.0'\n    variable = disp_x\n  []\n  [disp_y]\n    type = PointValue\n    point = '3.0 0.0 0.0'\n    variable = disp_y\n  []\n[]\n\n[Outputs]\n  exodus = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7470222",
                          "updatedAt": "2023-11-03T19:10:47Z",
                          "publishedAt": "2023-11-03T19:10:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you have 9 vector variables in the input file, when you only have 3 vectors to define. This isnt right",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7470236",
                          "updatedAt": "2023-11-03T19:13:50Z",
                          "publishedAt": "2023-11-03T19:13:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "@GiudGiud, tell mwe please what data type i should use instead of enum to make possible such notation in input file:\ncomponent = 'x y z'",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7470427",
                          "updatedAt": "2023-11-03T19:42:18Z",
                          "publishedAt": "2023-11-03T19:42:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you can use MultiMooseEnum for that.\nIt s a mooseenum but with the option to have multiple options active at the same time",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7470582",
                          "updatedAt": "2023-11-03T20:05:59Z",
                          "publishedAt": "2023-11-03T20:05:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "@GiudGiud , thank you,  but how i can check this conditions :",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7471192",
                          "updatedAt": "2023-11-03T21:47:39Z",
                          "publishedAt": "2023-11-03T21:47:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "see MultiMooseEnum.h.\nI think the routine is called \"contains\" instead of == since there are multiple choices",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7471234",
                          "updatedAt": "2023-11-03T21:54:01Z",
                          "publishedAt": "2023-11-03T21:54:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "@GiudGiud , may be i need Coupled variable for this case like made in https://github.com/idaholab/moose/blob/df1150a47192719fbde83216251b259770a3a77a/modules/tensor_mechanics/src/kernels/StressDivergenceBeam.C#L35C20-L35C20 ?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7471524",
                          "updatedAt": "2023-11-03T22:46:30Z",
                          "publishedAt": "2023-11-03T22:46:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont think so. \"x\", \"y\", \"z\" are not variables, they are strings. And an enum is appropriate for comparisons / selection of strings",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7471893",
                          "updatedAt": "2023-11-04T00:32:23Z",
                          "publishedAt": "2023-11-04T00:32:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "ok bad news. Vector variables were a bad idea. The output is really buggy. At 0th order the monomial_vec dont even appear in the exodus file and at 1st order they are output wrong.\nI ll paste a way with regular variables soon",
                  "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7476868",
                  "updatedAt": "2023-11-05T00:32:26Z",
                  "publishedAt": "2023-11-05T00:32:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "this seems to work\nheader\n#pragma once\n\n#include \"AuxKernel.h\"\n\n/**\n *\n */\nclass LocalAxisAux : public AuxKernel\n{\npublic:\n  static InputParameters validParams();\n\n  LocalAxisAux(const InputParameters & parameters);\n\nprotected:\n  virtual Real computeValue() override;\n\n  const MooseEnum _axis;\n  const MooseEnum _component;\n};\n\nsource\n#include \"libmesh/quadrature.h\"\n#include \"libmesh/utility.h\"\n\n#include \"LocalAxisAux.h\"\n\nregisterMooseObject(\"MooseApp\", LocalAxisAux);\n\nInputParameters\nLocalAxisAux::validParams()\n{\n  InputParameters params = AuxKernel::validParams();\n\n  params.addRequiredParam<RealGradient>(\"y_orientation\",\n                                        \"Orientation of the y direction along \"\n                                        \"with Iyy is provided. This should be \"\n                                        \"perpendicular to the axis of the beam.\");\n\n  MooseEnum axis(\"x y z\");\n  params.addRequiredParam<MooseEnum>(\"axis\", axis, \"Axis to output\");\n  params.addRequiredParam<MooseEnum>(\"component\", axis, \"Axis component to output\");\n  return params;\n}\n\nLocalAxisAux::LocalAxisAux(const InputParameters & parameters)\n  : AuxKernel(parameters),\n    _axis(getParam<MooseEnum>(\"axis\")),\n    _component(getParam<MooseEnum>(\"component\"))\n{\n}\n\nReal\nLocalAxisAux::computeValue()\n{\n  // compute initial orientation of the beam for calculating initial rotation matrix\n  const std::vector<RealGradient> * orientation =\n      &_subproblem.assembly(_tid).getFE(FEType(), 1)->get_dxyzdxi();\n  RealGradient x_orientation = (*orientation)[0];\n  x_orientation /= x_orientation.norm(); // \u043d\u043e\u0440\u043c\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0432\u0435\u043a\u0442\u043e\u0440\u0430\n\n  RealGradient y_orientation = getParam<RealGradient>(\"y_orientation\");\n  y_orientation /= y_orientation.norm();\n\n  Real sum = x_orientation(0) * y_orientation(0) + x_orientation(1) * y_orientation(1) +\n             x_orientation(2) * y_orientation(2);\n\n  if (std::abs(sum) > 1e-4)\n    mooseError(\"ComputeIncrementalBeamStrain: y_orientation should be perpendicular to \"\n               \"the axis of the beam.\");\n\n  // Calculate z orientation as a cross product of the x and y orientations\n  RealGradient z_orientation;\n  z_orientation(0) = (x_orientation(1) * y_orientation(2) - x_orientation(2) * y_orientation(1));\n  z_orientation(1) = (x_orientation(2) * y_orientation(0) - x_orientation(0) * y_orientation(2));\n  z_orientation(2) = (x_orientation(0) * y_orientation(1) - x_orientation(1) * y_orientation(0));\n\n  // _console << x_orientation << \" \" << y_orientation << \" \" << z_orientation << std::endl;\n\n  int comp = -1;\n  if (_component == \"x\")\n    comp = 0;\n  else if (_component == \"y\")\n    comp = 1;\n  else if (_component == \"z\")\n    comp = 2;\n\n  if (_axis == \"x\")\n    return x_orientation(comp);\n  else if (_axis == \"y\")\n    return y_orientation(comp);\n  else\n    return z_orientation(comp);\n}\n\ninput\n[Mesh]\n  [1d_beam]\n    type = CartesianMeshGenerator\n    dim = 1\n    dx = 3\n    ix = 2\n    subdomain_id = '1'\n  []\n  # this makes it a 3D problem\n  [translate]\n    type = TransformGenerator\n    input = 1d_beam\n    transform = TRANSLATE\n    vector_value = '1 1 1'\n  []\n[]\n\n[AuxVariables]\n  [local_axisX_x]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [local_axisX_y]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [local_axisX_z]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [local_axisY_x]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [local_axisY_y]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [local_axisY_z]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [local_axisZ_x]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [local_axisZ_y]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [local_axisZ_z]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n[]\n\n[AuxKernels]\n  [local_axisXx]\n    type = LocalAxisAux\n    variable = local_axisX_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'x'\n  []\n  [local_axisXy]\n    type = LocalAxisAux\n    variable = local_axisX_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'y'\n  []\n  [local_axisXz]\n    type = LocalAxisAux\n    variable = local_axisX_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'x'\n    component = 'z'\n  []\n\n  [local_axisYx]\n    type = LocalAxisAux\n    variable = local_axisY_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'x'\n  []\n  [local_axisYy]\n    type = LocalAxisAux\n    variable = local_axisY_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'y'\n  []\n  [local_axisYz]\n    type = LocalAxisAux\n    variable = local_axisY_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'y'\n    component = 'z'\n  []\n\n  [local_axisZx]\n    type = LocalAxisAux\n    variable = local_axisZ_x\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'x'\n  []\n  [local_axisZy]\n    type = LocalAxisAux\n    variable = local_axisZ_y\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'y'\n  []\n  [local_axisZz]\n    type = LocalAxisAux\n    variable = local_axisZ_z\n    y_orientation = '0.0 1.0 0.0'\n    axis = 'z'\n    component = 'z'\n  []\n[]\n\n[Problem]\n  solve = false\n[]\n\n[Executioner]\n  type = Steady\n[]\n\n[Outputs]\n  exodus = true\n[]\n\nthe variables are not identically 0 anyway.\nIn the future will you always need to specify the Y orientation? What if there are beam elements in several directions in a single mesh?",
                  "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7476888",
                  "updatedAt": "2023-11-05T00:43:13Z",
                  "publishedAt": "2023-11-05T00:42:09Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you, @GiudGiud . I think it can be possible to use blocks:\n [./block_1]\n    block = 1\n    area = 9e-2\n    Iy = 6.75e-4\n    Iz = 6.75e-4\n    y_orientation = '0.0 0.0 1.0'\n  [../]\n  [./block_2]\n    block = 2\n    area = 9e-2\n    Iy = 6.75e-1\n    Iz = 6.75e-1\n    y_orientation = '0.0 1.0 0.0'\n  [../]\n\nTell me please how i can write a values in components when i  use coupled Variables? As i use auxkernels i must override computeValue method, which returns a RealVectorValue. But how it related to coupled Variables?\nHow to assign values to the components of coupled variable.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7476927",
                          "updatedAt": "2023-11-05T01:03:05Z",
                          "publishedAt": "2023-11-05T00:57:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Blocks work, as long as all the elements with the same orientation are in the same block,\nI dont think writing to components of coupled varaibles will work since the output to exodus is the part that is not working as expected. the VectorAuxkErnel with a RealVectorValue are working fine.\nDid you try to use what I pasted?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7477109",
                          "updatedAt": "2023-11-05T02:18:44Z",
                          "publishedAt": "2023-11-05T02:18:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Hello. @GiudGiud ,\n\nDid you try to use what I pasted?\n\nYes, it works thank you.\n\nBut not at all elements, although it is more better then it was.\nMaybe it's related to paraview?",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7488443",
                          "updatedAt": "2023-11-06T14:42:02Z",
                          "publishedAt": "2023-11-06T14:42:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont know why that would be.\nIf you visualize the components without the glyph (using the coloring for example) are they correct?\nIf this is purely a glyph problem you should ask there https://discourse.paraview.org/c/paraview-support/7",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7488526",
                          "updatedAt": "2023-11-06T14:48:42Z",
                          "publishedAt": "2023-11-06T14:48:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Ok, it solved here: https://discourse.paraview.org/t/glyphs-displayed-not-in-all-elements/13199\nThanks for all of you for your help.\n@GiudGiud, thank you so much for working solution.",
                          "url": "https://github.com/idaholab/moose/discussions/25653#discussioncomment-7489919",
                          "updatedAt": "2023-11-06T16:49:30Z",
                          "publishedAt": "2023-11-06T16:49:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}