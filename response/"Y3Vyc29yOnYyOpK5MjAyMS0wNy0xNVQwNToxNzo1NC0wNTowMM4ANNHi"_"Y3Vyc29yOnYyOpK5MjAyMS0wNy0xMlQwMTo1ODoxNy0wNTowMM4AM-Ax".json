{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0wNy0xMlQwMTo1ODoxNy0wNTowMM4AM-Ax"
    },
    "edges": [
      {
        "node": {
          "title": "PorousFlow - Pressure dependent sink",
          "author": {
            "login": "MatiasAllay"
          },
          "bodyText": "Hi MOOSE,\nI would like to implement a sink in which I set up a pressure condition and the flux in and out is computed internally. Just like PorousFlowPiecewiseLinearSink does. But I would like to implement it in the middle of my model rather than in a boundary. I looked at the sink documentation, but I couldn't find something that fit what I need.\nThanks in advance!\nMatias",
          "url": "https://github.com/idaholab/moose/discussions/18327",
          "updatedAt": "2022-07-29T01:53:49Z",
          "publishedAt": "2021-07-14T12:56:50Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "If there is a boundary (eg, a 2D surface) in the middle of your model, then you should make one in the Mesh (there are mesh generators for that, eg SideSetsBetweenSubdomainsGenerator).\nIf there is no boundary, but instead you've got some point sources, then one of the PorousFlow DiracKernels should help: https://mooseframework.inl.gov/modules/porous_flow/sinks.html",
                  "url": "https://github.com/idaholab/moose/discussions/18327#discussioncomment-1006005",
                  "updatedAt": "2022-07-29T01:54:00Z",
                  "publishedAt": "2021-07-14T21:47:58Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Debugging error : After Solving Segmentation Fault Error",
          "author": {
            "login": "uchiha-JN"
          },
          "bodyText": "Hello guys,\nI had the error : segmentation fault(core dumped) when i tried to run an input file. I followed the debugger tutorial in example 21. However when i hit my first break point in the debugging process, i get an error like this\n**Assertion `_dynamic_n < N' failed.\n/home/mfm_student/miniconda3/envs/moose/libmesh/include/metaphysicl/dynamic_std_array_wrapper.h, line 69, compiled Jul 14 2021 at 11:38:59\nThread 1 \"babbler-dbg\" hit Breakpoint 1, 0x00007fffec90e000 in PMPI_Abort () from /home/mfm_student/miniconda3/envs/moose/lib/libmpi.so.12**\nI might be wrong but It does not seem to be from a .h or c++ file within my babbler app. Can anyone kindly help out with this error?",
          "url": "https://github.com/idaholab/moose/discussions/18339",
          "updatedAt": "2022-07-04T08:35:04Z",
          "publishedAt": "2021-07-14T19:12:36Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Could you please post the backtrace?\nSee some help with debugging here https://mooseframework.inl.gov/application_development/debugging.html\nThis is related to AD. I would say increase the container size, but let's look at the backtrace",
                  "url": "https://github.com/idaholab/moose/discussions/18339#discussioncomment-1005490",
                  "updatedAt": "2022-07-04T08:34:48Z",
                  "publishedAt": "2021-07-14T19:19:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "uchiha-JN"
                          },
                          "bodyText": "#1  0x00007fffeffaed8e in libMesh::libmesh_terminate_handler () at /home/mfm_student/projects/raccoon/moose/scripts/../libmesh/src/base/libmesh.C:321\n#2  0x00007fffee877f69 in __cxxabiv1::__terminate (handler=<optimized out>)\n    at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48\n#3  0x00007fffee877fab in std::terminate ()\n    at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58\n#4  0x00007fffee878194 in __cxxabiv1::__cxa_throw (obj=0x555555e30b40, tinfo=0x7ffff7f9d060 <typeinfo for MetaPhysicL::LogicError>, \n    dest=0x7ffff7f10746 <MetaPhysicL::LogicError::~LogicError()>)\n    at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95\n#5  0x00007ffff7f21c46 in MetaPhysicL::DynamicStdArrayWrapper<double, MetaPhysicL::NWrapper<50ul> >::operator= (this=0x7fffffff1a68, src=...)\n    at /home/mfm_student/miniconda3/envs/moose/libmesh/include/metaphysicl/dynamic_std_array_wrapper.h:69\n#6  0x00007ffff7f19771 in MetaPhysicL::DynamicSparseNumberBase<MetaPhysicL::DynamicStdArrayWrapper<double, MetaPhysicL::NWrapper<50ul> >, MetaPhysicL::DynamicStdArrayWrapper<unsigned long, MetaPhysicL::NWrapper<50ul> >, MetaPhysicL::SemiDynamicSparseNumberArray, double, unsigned long, MetaPhysicL::NWrapper<50ul> >::operator= (\n    this=0x7fffffff1a68, src=...) at /home/mfm_student/miniconda3/envs/moose/libmesh/include/metaphysicl/dynamicsparsenumberbase_decl.h:47\n#7  0x00007ffff7f197bb in MetaPhysicL::SemiDynamicSparseNumberArray<double, unsigned long, MetaPhysicL::NWrapper<50ul> >::operator= (this=0x7fffffff1a68, src=...)\n    at /home/mfm_student/miniconda3/envs/moose/libmesh/include/metaphysicl/semidynamicsparsenumberarray_decl.h:34\n#8  0x00007ffff7f19849 in MetaPhysicL::DualNumber<double, MetaPhysicL::SemiDynamicSparseNumberArray<double, unsigned long, MetaPhysicL::NWrapper<50ul> >, true>::DualNumber\n    (this=0x7fffffff1a60, dn=...) at /home/mfm_student/miniconda3/envs/moose/libmesh/include/metaphysicl/dualnumber.h:140\n#9  0x00007ffff7f127df in MetaPhysicL::operator/<double, MetaPhysicL::SemiDynamicSparseNumberArray<double, unsigned long, MetaPhysicL::NWrapper<50ul> >, double, true> (\n    a=..., b=@0x7fffffff1a58: 3) at /home/mfm_student/miniconda3/envs/moose/libmesh/include/metaphysicl/dualnumber.h:460\n#10 0x00007ffff7f0d45b in ADDiffCoupledElasticStressMaterial::computeQpStress (this=0x555555cd0050)\n    at /home/mfm_student/projects/babbler/src/materials/ADDiffCoupledElasticStressMaterial.C:34\n#11 0x00007fffed7116f1 in ADComputeStressBase::computeQpProperties (this=0x555555cd0050)\n    at /home/mfm_student/projects/moose/modules/tensor_mechanics/src/materials/ADComputeStressBase.C:57\n#12 0x00007ffff53354b8 in Material::computeProperties (this=0x555555cd0050) at /home/mfm_student/projects/moose/framework/src/materials/Material.C:134\n#13 0x00007ffff533bfab in MaterialData::reinit (this=0x555555a8ce30, mats=..., execute_stateful=true)\n    at /home/mfm_student/projects/moose/framework/src/materials/MaterialData.C:86\n#14 0x00007ffff5e1b7bc in FEProblemBase::reinitMaterials (this=0x555555af35d0, blk_id=0, tid=0, swap_stateful=true)\n    at /home/mfm_student/projects/moose/framework/src/problems/FEProblemBase.C:3155\n#15 0x00007ffff61ee6e0 in ComputeElemAuxVarsThread<AuxKernelTempl<double> >::onElement (this=0x7fffffffb4f0, elem=0x555555a64ff0)\n    at /home/mfm_student/projects/moose/framework/src/loops/ComputeElemAuxVarsThread.C:109\n#16 0x00007ffff5102c17 in ThreadedElementLoopBase<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> >::operator() (\n    this=0x7fffffffb4f0, range=..., bypass_threading=false) at /home/mfm_student/projects/moose/framework/build/header_symlinks/ThreadedElementLoopBase.h:217\n#17 0x00007ffff5b9a75a in libMesh::Threads::parallel_reduce<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*>, ComputeElemAuxVarsThread<AuxKernelTempl<double> > > (range=..., body=...) at /home/mfm_student/miniconda3/envs/moose/libmesh/include/libmesh/threads_pthread.h:380\n#18 0x00007ffff5b306ad in AuxiliarySystem::computeElementalVarsHelper<AuxKernelTempl<double> > (this=0x555555b2fa60, warehouse=..., vars=..., timer=159)\n    at /home/mfm_student/projects/moose/framework/src/systems/AuxiliarySystem.C:762\n#19 0x00007ffff5b3004b in AuxiliarySystem::computeElementalVars (this=0x555555b2fa60, type=...)\n    at /home/mfm_student/projects/moose/framework/src/systems/AuxiliarySystem.C:686\n#20 0x00007ffff5b2dc04 in AuxiliarySystem::compute (this=0x555555b2fa60, type=...) at /home/mfm_student/projects/moose/framework/src/systems/AuxiliarySystem.C:434\n#21 0x00007ffff5e1fc7f in FEProblemBase::computeAuxiliaryKernels (this=0x555555af35d0, type=...)\n    at /home/mfm_student/projects/moose/framework/src/problems/FEProblemBase.C:3751\n#22 0x00007ffff5e1fb21 in FEProblemBase::execute (this=0x555555af35d0, exec_type=...) at /home/mfm_student/projects/moose/framework/src/problems/FEProblemBase.C:3728\n#23 0x00007ffff5e080d3 in FEProblemBase::initialSetup (this=0x555555af35d0) at /home/mfm_student/projects/moose/framework/src/problems/FEProblemBase.C:1018\n#24 0x00007ffff60bf1bf in Transient::init (this=0x555555b71ae0) at /home/mfm_student/projects/moose/framework/src/executioners/Transient.C:234",
                          "url": "https://github.com/idaholab/moose/discussions/18339#discussioncomment-1005508",
                          "updatedAt": "2022-07-04T08:34:47Z",
                          "publishedAt": "2021-07-14T19:25:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "uchiha-JN"
                          },
                          "bodyText": "Very lengthy but this is the backtrace",
                          "url": "https://github.com/idaholab/moose/discussions/18339#discussioncomment-1005511",
                          "updatedAt": "2022-07-04T08:34:50Z",
                          "publishedAt": "2021-07-14T19:26:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok could you please try rebuilding with a larger derivative container size? Maybe like 150 instead of 50\nSee the configure command there\nhttps://mooseframework.inl.gov/source/utils/DualReal.html#!\nAfter configuring, you'll have to rebuild MOOSE and your application after",
                          "url": "https://github.com/idaholab/moose/discussions/18339#discussioncomment-1005643",
                          "updatedAt": "2022-07-04T08:34:49Z",
                          "publishedAt": "2021-07-14T19:58:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "uchiha-JN"
                          },
                          "bodyText": "@GiudGiud  I will do that. Thank you so much for your help.",
                          "url": "https://github.com/idaholab/moose/discussions/18339#discussioncomment-1005661",
                          "updatedAt": "2022-07-04T08:34:54Z",
                          "publishedAt": "2021-07-14T20:01:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "uchiha-JN"
                          },
                          "bodyText": "@GiudGiud . i changed the derivative container size but i still got the same error which after doing a backtrace led me to my C++ code. i had to change a property type from ADReal to Real. So i guess it was an AD problem just like you said earlier. My input file is running now Thank you very much again for the help.",
                          "url": "https://github.com/idaholab/moose/discussions/18339#discussioncomment-1005889",
                          "updatedAt": "2022-07-04T08:34:54Z",
                          "publishedAt": "2021-07-14T21:06:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ah weird this should have errored out at build time with different types. Ok thanks for reporting back!",
                          "url": "https://github.com/idaholab/moose/discussions/18339#discussioncomment-1005894",
                          "updatedAt": "2022-07-04T08:34:55Z",
                          "publishedAt": "2021-07-14T21:07:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Segmentation fault (core dumped)",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello guys, when I run my .i file, it shows:\nInitializing equation system                                                               [  1.28 s]\nSegmentation fault (core dumped)\nWhat's the erroe?",
          "url": "https://github.com/idaholab/moose/discussions/16222",
          "updatedAt": "2022-07-04T08:35:09Z",
          "publishedAt": "2020-11-17T14:12:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "You need to build a debug version of your app with make METHOD=dbg and then run it in a debugger. We have instructions on our website (search for \"debugging\").",
                  "url": "https://github.com/idaholab/moose/discussions/16222#discussioncomment-131671",
                  "updatedAt": "2022-07-04T08:35:09Z",
                  "publishedAt": "2020-11-17T15:03:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thank you! I solved the problem.",
                          "url": "https://github.com/idaholab/moose/discussions/16222#discussioncomment-132154",
                          "updatedAt": "2022-07-04T08:35:10Z",
                          "publishedAt": "2020-11-18T01:22:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "uchiha-JN"
                          },
                          "bodyText": "Hello guys,\nI had the same segmentation fault(core dumped) when i tried to run an input file. I used the debugger tutorial in example 21. However when i hit my first break point in the debugging process, i get an error like this\nAssertion `_dynamic_n < N' failed.\n/home/mfm_student/miniconda3/envs/moose/libmesh/include/metaphysicl/dynamic_std_array_wrapper.h, line 69, compiled Jul 14 2021 at 11:38:59\nThread 1 \"babbler-dbg\" hit Breakpoint 1, 0x00007fffec90e000 in PMPI_Abort () from /home/mfm_student/miniconda3/envs/moose/lib/libmpi.so.12\nIt does not seem to be from a .h or c++ file within my babbler app. Can anyone kindly help out with this error?",
                          "url": "https://github.com/idaholab/moose/discussions/16222#discussioncomment-1005418",
                          "updatedAt": "2022-07-04T08:35:08Z",
                          "publishedAt": "2021-07-14T18:58:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "please create another discussions thread. This is unlikely to be the same segfault and this thread is 10 months old.",
                          "url": "https://github.com/idaholab/moose/discussions/16222#discussioncomment-1005438",
                          "updatedAt": "2022-07-04T08:35:33Z",
                          "publishedAt": "2021-07-14T19:05:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "uchiha-JN"
                          },
                          "bodyText": "Alright. Thank you",
                          "url": "https://github.com/idaholab/moose/discussions/16222#discussioncomment-1005453",
                          "updatedAt": "2022-07-04T08:35:54Z",
                          "publishedAt": "2021-07-14T19:08:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error experience when using file_base in [Outputs] block",
          "author": {
            "login": "duenam5913"
          },
          "bodyText": "I'm currently using BISON which has been updated and rebuilt 3 weeks ago. I noticed that if I include the input parameter \"file_base\" in the [Outputs] block with an string such as \"file_base=out\" that following error occurs:\n*** ERROR ***\nAn output file with the name, out.csv, already exists.\n\nI verified that there are no files named as out.csv in the directory as well. The code is able to run successfully the input parameter \"file_base\" was not included.\nHas anyone else encountered an issue like this using \"file_base\" in the [Outputs] block?",
          "url": "https://github.com/idaholab/moose/discussions/18323",
          "updatedAt": "2023-06-20T20:55:19Z",
          "publishedAt": "2021-07-13T22:02:11Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "'out' might be a special case (bug) because that's the default for the suffix.\nCould you please try another file_base?",
                  "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1001165",
                  "updatedAt": "2023-06-20T20:55:19Z",
                  "publishedAt": "2021-07-13T22:11:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "duenam5913"
                          },
                          "bodyText": "Thank you for your reply. I tried another case with \"file_base=test_case\" and \"file_base=try_2\" but encountered the same error for both.",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1003666",
                          "updatedAt": "2023-06-20T21:12:11Z",
                          "publishedAt": "2021-07-14T12:46:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Could you please paste your [Outputs] block here? Maybe there is some duplicates (like two csv outputs)",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1004474",
                          "updatedAt": "2023-06-20T21:12:11Z",
                          "publishedAt": "2021-07-14T15:24:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This will trigger the error for example\n[Outputs]\n  csv = true\n\n  [csv]\n    type = CSV\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1004492",
                          "updatedAt": "2023-06-20T21:12:11Z",
                          "publishedAt": "2021-07-14T15:26:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok I m creating an issue for this thing. Please let us know if this is not your problem",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1004504",
                          "updatedAt": "2023-06-20T21:12:12Z",
                          "publishedAt": "2021-07-14T15:28:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "Perhaps we need to improve the message, but @GiudGiud \"csv=true\" is equivalent to the block you added. It is even documented: https://mooseframework.inl.gov/syntax/Outputs/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1004520",
                          "updatedAt": "2023-06-20T20:55:19Z",
                          "publishedAt": "2021-07-14T15:32:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "Another option would be to change the name of the block created by \"csv=true\" some something else, e.g., \"_csv\" or \"auto_csv\", etc. However, this has been this way for 5+ years, so I don't think we should sink a lot of time into it. Perhaps, just a better error message is the solution.",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1004532",
                          "updatedAt": "2023-06-20T20:55:24Z",
                          "publishedAt": "2021-07-14T15:34:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "duenam5913"
                          },
                          "bodyText": "This is the output block that I am using. If the file_base line is commented out than no error occurs. Is there something with the input parameters of the [no_print] block that should be adjusted then?\n[Outputs]\n  interval = 1\n  exodus = false\n  csv = true\n  print_linear_residuals = true\n  perf_graph = true\n  color = false\n  [console]\n    type = Console\n    max_rows = 25\n  []\n  [exodus]\n    type = Exodus\n    interval = 3\n  []\n  [no_print]\n    type = CSV\n    enable = false\n  []\n  file_base = test_case\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1004902",
                          "updatedAt": "2023-06-20T20:55:24Z",
                          "publishedAt": "2021-07-14T16:45:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "just remove the csv = true line.\nSame for exodus. Why have exodus = false then an exodus block ?",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1004956",
                          "updatedAt": "2023-06-20T20:55:25Z",
                          "publishedAt": "2021-07-14T16:57:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "duenam5913"
                          },
                          "bodyText": "Thank you for the assistance, that fixed the error in my input deck. I've removed the exodus=false line as well since it was unnecessary.",
                          "url": "https://github.com/idaholab/moose/discussions/18323#discussioncomment-1005074",
                          "updatedAt": "2023-06-20T20:55:25Z",
                          "publishedAt": "2021-07-14T17:23:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Testing MultiApps",
          "author": {
            "login": "rtaylo45"
          },
          "bodyText": "Hello,\nSo I have a problem where I would like to test one way MultiApp coupling with my main app and a sub app. My main app and the sub app are developed by two different teams and not all users will have access to the sub app. The sub app solves for a number of variables which are required for my main app to use during its solve, so during coupling the sub app is called first. I was wondering if I could use an existing exidus output file to pull the required variable into my main app, to take out the requirement of the sub app. Maybe the restart and recovery system can help me do this? I know i can just apply functions as my AuxVariables used for coupling, but I thought it might add some robustness to testing if i used an existing output file. I am not fully aware how variable transfer happens under the hood, so my idea about how to do this might not add anything to testing.\nIf anyone has ideas on how to do testing with MultiApps, I am all ears.\nThanks,\nZack",
          "url": "https://github.com/idaholab/moose/discussions/18328",
          "updatedAt": "2022-07-08T08:04:49Z",
          "publishedAt": "2021-07-14T14:21:04Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Zack\nI see at least two options here:\n\nIf you are fine with not testing the coupling part, you can reload the quantities that your subapp was providing:\n\n\nauxiliary variables using either exodus restart (add use_for_exodus_restart to [Mesh] and initial_from_file_var = for each variable) OR checkpoint restart\npostprocessors using a the default field on Receivers\nThe exodus/checkpoint to use would be previously generated using your subapp.\n\n\nif you want to test the coupling part (the transfers) but cannot provide the real subapp, then do 1) but in the subapp, so perform all the restarts in a new emptied out subapp (you can add solve = false to Problem and kernel_coverage_check = false to make it very bare).\n\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18328#discussioncomment-1004460",
                  "updatedAt": "2022-07-08T08:04:42Z",
                  "publishedAt": "2021-07-14T15:21:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "adding two mesh generators",
          "author": {
            "login": "starkeyk"
          },
          "bodyText": "I am trying to create periodic boundary conditions on the displacement field and constrain one of the corner nodes to have zero displacement (to get rid of rigid body translations). I was able to do this in an older version of MOOSE (before mesh generators), but now I get an error\n\"Your MeshGenerator tree contains multiple possible generator outputs :\n\"sidesets and one or more of the following from an independent set: \"ns1\"\nThis may be due to a missing dependency or may be intentional. Please select the final MeshGenerator in\nthe [Mesh] block with the \"final_generator\" parameter or add additional dependencies to remove the ambiguity.\"\nThe way that I created the boundary side sets is using the SideSetsFromNormalsGenerator and to create the corner node I use ExtraNodesetGenerator with coord='0 0 0'. I think this error is referring to the fact that the side sets contain the extra node set that I am creating. For some reason, this wasn't a problem in the older code (I think the Dirichlet BC had precedence over the periodic BC's) but it is now.\nIs there another way to implement these BC's?",
          "url": "https://github.com/idaholab/moose/discussions/18320",
          "updatedAt": "2022-06-10T19:21:06Z",
          "publishedAt": "2021-07-13T15:19:24Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCould you please paste your [Mesh] / mesh generators block here?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18320#discussioncomment-999667",
                  "updatedAt": "2022-06-10T19:21:07Z",
                  "publishedAt": "2021-07-13T16:03:34Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "starkeyk"
                          },
                          "bodyText": "[Mesh]\n[./msh]\ntype = FileMeshGenerator\nfile = ../../test.exo\ndim = 3\n[]\n[./sidesets]\ntype = SideSetsFromNormalsGenerator\ninput = msh\nnormals = '0  0  1\n0  0 -1\n0  1  0\n0 -1  0\n1  0  0\n-1 0  0'\nfixed_normal = true\nnew_boundary = 'top1 bottom1 front1 back1 right1 left1'\n[]\n[./ns1]\ntype = ExtraNodesetGenerator\ninput = msh\nnew_boundary = 'nodeset1'\ncoords = '0 0 0'\n[../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/18320#discussioncomment-999679",
                          "updatedAt": "2022-06-10T19:21:12Z",
                          "publishedAt": "2021-07-13T16:06:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so the problem is that ns1 should take sidesets as input, not msh\nRight now there are two final meshes, like two branches. MOOSE cant choose, so it asks for a final_generator parameter. But the fix is to create a single mesh incorporating both changes",
                          "url": "https://github.com/idaholab/moose/discussions/18320#discussioncomment-999809",
                          "updatedAt": "2022-06-10T19:21:14Z",
                          "publishedAt": "2021-07-13T16:31:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "starkeyk"
                          },
                          "bodyText": "when write sidesets as input to the node set generator I get the following error:\nThe following error occurred in the object \"ns1\", of type \"ExtraNodesetGenerator\".\nNode set can not be empty!",
                          "url": "https://github.com/idaholab/moose/discussions/18320#discussioncomment-999894",
                          "updatedAt": "2022-06-10T19:21:13Z",
                          "publishedAt": "2021-07-13T16:45:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what about inverting the chain?\nso msh -> ns1 -> sidesets\nAlso is there a node at 0,0,0 in test.exo?",
                          "url": "https://github.com/idaholab/moose/discussions/18320#discussioncomment-999961",
                          "updatedAt": "2022-06-10T19:21:23Z",
                          "publishedAt": "2021-07-13T16:58:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "starkeyk"
                          },
                          "bodyText": "there was not a node located at 0,0,0. I think it is working now with the following input configuration:\n[Mesh]\n[./msh]\ntype = FileMeshGenerator\nfile = ../../test.exo\ndim = 3\n[]\n[./sidesets]\ntype = SideSetsFromNormalsGenerator\ninput = msh\nnormals = '0  0  1\n0  0 -1\n0  1  0\n0 -1  0\n1  0  0\n-1 0  0'\nfixed_normal = true\nnew_boundary = 'top1 bottom1 front1 back1 right1 left1'\n[]\n[./ns1]\ntype = ExtraNodesetGenerator\ninput = sidesets\nnew_boundary = 'nodeset1'\nnodes = '1'\n[../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/18320#discussioncomment-1000048",
                          "updatedAt": "2022-06-10T19:21:23Z",
                          "publishedAt": "2021-07-13T17:20:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adaptivity Mesh",
          "author": {
            "login": "ahmad681"
          },
          "bodyText": "I have a problem nanocomposite pillar in a matrix. The interface is modelled as a diffuse and the phases pillar/matrix is define with phase variable chi. The lenght of the interface is 0.5 and described by heaviside type function. I am trying to add addaptive mesh at the interface between the pillar and the matrix where it is refined at the interface and I keep getting this error:\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\nIn the input file I add:\n[Functions]\n[solution]\ntype = ParsedFunction\nvalue = z*z\n[]\n[]\n[Adaptivity]\ninitial_steps = 2\ncycles_per_step = 2\nmarker = markers\ninitial_marker = markers\nmax_h_level = 2\n[Indicators]\n[error]\ntype = AnalyticalIndicator\nvariable = phase_pillar\nfunction = solution\n[]\n[]\n[Markers]\n[markers]\ntype = ErrorFractionMarker\nindicator = error\ncoarsen = 0.1\nrefine = 0.5\n[]\n[]\n[]\nAny tips in this issue and how I can do it?\nThank you",
          "url": "https://github.com/idaholab/moose/discussions/18315",
          "updatedAt": "2022-08-23T14:30:26Z",
          "publishedAt": "2021-07-12T22:34:22Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ahmad681"
                  },
                  "bodyText": "I am sorry I am not sure why it added my discussion twice",
                  "url": "https://github.com/idaholab/moose/discussions/18315#discussioncomment-996065",
                  "updatedAt": "2022-08-23T14:30:12Z",
                  "publishedAt": "2021-07-12T22:35:22Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to draw a stress-strain curve from a uni-axial traction simulation",
          "author": {
            "login": "Xelver"
          },
          "bodyText": "Hi, guys,\nI'm working on a simple uniaxial traction simulation for a 1mm x 1mm x 1mm cube with some randomly distributed defect elements inside, as:\n\nBecause there are some defects, the stress and strain in different elements are not the same. I've tried to get the average value on the surface or the whole cube, but the result seems wrong.\nIn Abaqus, we can set a reference point and couple the point with the traction surface. Then we can obtain the displacement and the reaction force of the reference point to calculate the stress-strain curve.  So I am wondering whether MOOSE has a similar function.\nThanks for your answers",
          "url": "https://github.com/idaholab/moose/discussions/18241",
          "updatedAt": "2022-07-25T08:01:15Z",
          "publishedAt": "2021-07-02T08:58:23Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "What do you mean \"the result seems wrong\"?  Usually you plot average stress vs average strain (which you can get using a couple of Postprocessors).  The average stress is equal to (average) surface traction, so you could use that instead.  The average strain is equal to (average) surface displacement, so you could use that instead.   Obviously you have to choose the relevant components of stress and strain.\nPerhaps the result \"looks wrong\" because you're incorrectly normalising using the void volume?",
                  "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-956062",
                  "updatedAt": "2022-07-25T08:01:13Z",
                  "publishedAt": "2021-07-02T10:05:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Xelver"
                          },
                          "bodyText": "Thanks for your answer.\nI had used ElementAverageValue to get average stress and average strain, but the curve I had got was exactly the same as the cube without the defects. (Normally the slope should be lower).  I think it's because the ElementAverageValue doesn't count the volume of the defect.\nSo I used another method.  I didn't delete the defect elements, instead, I put them into a subdomain and assigned them a very small Young's modules\uff080.001\uff09 and poisons ratio \uff081e-11\uff09.  The slope changed with this method, but it still wasn't what I wanted.  Normally the Young's modulus of a cube (430GPa, 0.2) with 10% voids is about 352 GPa ( I've got the same result with ABAQUS), but here I've got 370 GPa.",
                          "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-967920",
                          "updatedAt": "2022-07-25T08:01:13Z",
                          "publishedAt": "2021-07-06T01:08:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Firstly, i'd check your boundary conditions - load the result into paraview and check that the cube \"moves\" in roughly the same way as ABAQUS.  You're getting a stiffer result, so maybe the MOOSE model is more constrained than the ABAQUS one.\nSecondly, you could easily be using different shape functions in ABAQUS and MOOSE.  If you use linear-lagrange (the default in MOOSE) then you'll get a stiffer result because the solid material can't deform accurately around a 1-element void.  That's a bit hard to explain - tell me if you don't understand.\nYou're correct about the ElementAverageValue : it simply averages over the elements.",
                          "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-967945",
                          "updatedAt": "2022-07-25T08:01:12Z",
                          "publishedAt": "2021-07-06T01:21:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Xelver"
                          },
                          "bodyText": "The boundary conditions are\n\ndisp_x = 0, left\ndisp_y = 0, bottom\ndisp_z = 0, back\ndisp_y = f, top (1e-6 m at 10 s)\nI've used the same boundary conditions for ABAQUS.\n\nYes, I used the default option as follows.  I'll try to use higher-order later. But I'm not very clear about it. Could you please explain a little bit if it doesn't trouble you?\n[Modules/TensorMechanics/Master]\n  [./all]\n    add_variables = true\n    strain = FINITE\n    #incremental = true\n    generate_output = 'vonmises_stress stress_yy strain_yy'\n    use_displaced_mesh = true\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-968190",
                          "updatedAt": "2022-07-25T08:01:58Z",
                          "publishedAt": "2021-07-06T03:20:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Xelver"
                          },
                          "bodyText": "Hey, I have tried using a higher-order elem_type with HEX20 and HEX27 with second-order-Lagrange variables. The resulted effective Young's modulus are 355 GPa (which is closer to ABAQUS result)  for HEX20 and 348 GPa for HEX27.",
                          "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-972848",
                          "updatedAt": "2022-09-12T17:16:07Z",
                          "publishedAt": "2021-07-07T03:24:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "Dear @Xelver\nIt's easy to plot stress-strain curves with paraview:\n\nClick on \"Select cell through\" (or \"f\" on keyboard)\nSelect the element at the boundary where you want the stress\nFilters > Extract Selection > Apply\nNow you will see only the selected elements\nFilters > Integrate Variables + tick \"Divide cell data by volume\" in the properties tab > Apply\nIn the spreadsheet on the right you will see the average quantities, select Attribute > Cell Data\nand you will see your average stress.\nIf you want to plot the stress as a function of time, you can select the line in the spreadsheet,\nthen Filters > Plot Selection over time\nYou will see all Cell Quantities as a function of time, averaged over the selected element.\nBecause you can see the selected elements, making mistakes is very unlikely.\n\nTrust this helps,\nNicol\u00f2",
                  "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-957599",
                  "updatedAt": "2022-07-25T08:01:58Z",
                  "publishedAt": "2021-07-02T16:16:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Xelver"
                          },
                          "bodyText": "Thanks for your answer.\nIt really helps. But I want to obtain the curve of the entire object or the \"equivalent young's modulus\" of the object .\nI used your method to get the average value of the cube, the results were as same as using postprocessors ElementAverageValue.  So I thought that it may not be the average value that we should use to draw the stress-strain curve?",
                          "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-967981",
                          "updatedAt": "2022-07-25T08:02:02Z",
                          "publishedAt": "2021-07-06T01:37:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ngrilli"
                          },
                          "bodyText": "Dear @Xelver\nGetting a stress-strain curve by averaging over all elements does not make a lot of sense to me.\nPhysically the stress is measured as average over a surface.\nI am not sure what you mean by \"equivalent Young's modulus\",\nif your material properties are homogeneous, the Young modulus will be the same everywhere anyway.\nIf you mean you want an effective Young modulus of the structure, which will be lower than Young modulus\nof the bulk because of the holes, then definitely average the stress on a surface.\nYou can repeat the operations on different surfaces and with different distribution of the holes\nto get more statistics\nNicol\u00f2",
                          "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-968922",
                          "updatedAt": "2022-07-25T08:18:56Z",
                          "publishedAt": "2021-07-06T08:26:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Xelver"
                          },
                          "bodyText": "Dear @ngrilli\nI think that you're right.  I mean the effective Young modulus of the structure.\nSo I tried to get the stress on different surfaces with different distributions of the holes.  The boundary conditions are\ndisp_x = 0, left\ndisp_y = 0, bottom\ndisp_z = 0, back\ndisp_y = f, top (1e-6 m at 10 s)\nThe average stress of the bottom and the top kept pretty much unchanged with different distribution of the holes, while the average stress of the other surfaces changed a lot with the different distribution.  So I'm not sure which could be used to calculate the effective Young's modulus.",
                          "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-969714",
                          "updatedAt": "2022-07-25T08:18:56Z",
                          "publishedAt": "2021-07-06T11:46:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sapitts"
                  },
                  "bodyText": "Hi @Xelver,\nIf you would like to determine the effective Young's modulus of the complete structure, you may also find the Asymptotic Expansion Homogenization capabilities useful, particularly the AsymptoticExpansionHomogenizationElasticConstants postprocessor and the associated kernels--links to documentation on the kernels are given on the postprocessor page. More details about this approach are available in Hales et al.(2015).",
                  "url": "https://github.com/idaholab/moose/discussions/18241#discussioncomment-995465",
                  "updatedAt": "2022-07-25T08:18:59Z",
                  "publishedAt": "2021-07-12T19:36:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Dynamic loading for multiApps",
          "author": {
            "login": "rtaylo45"
          },
          "bodyText": "Hello,\nI am running into an issue when trying to run multiapps. I have my main app called mole and the subapp called SAM. SAM uses git submodule for MOOSE and has it located in its main directory. I have set my MOOSE_DIR path for both SAM and mole to point to the git submodule for MOOSE in SAM. I have built both codes using this MOOSE directory. Both codes compile and are able to run independently. I have a simple input file which uses the mutliapps block to call SAM from mole.\n[MultiApps]\n  [sam]\n    type = FullSolveMultiApp\n    app_type = SAMApp\n    input_files = 'sam_pipe.i'\n    execute_on = 'INITIAL'\n  []\n[]\n\nI have tried two ways of setting the library path. First by setting library_path in the MultiApps block to the SAM lib. Second by exporting the MOOSE_LIBRARY_PATH to the SAM lib folder. Both of these methods lead to the same error, shown below.\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/tensor_mechanics/lib/libtensor_mechanics-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/ray_tracing/lib/libray_tracing-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/heat_conduction/lib/libheat_conduction-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/ray_tracing/lib/libray_tracing-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/fluid_properties/lib/libfluid_properties-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/module_loader/lib/libmodule_loader_with_fp_ray_hc_tm-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/tensor_mechanics/lib/libtensor_mechanics-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/ray_tracing/lib/libray_tracing-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/heat_conduction/lib/libheat_conduction-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/ray_tracing/lib/libray_tracing-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/moose/modules/fluid_properties/lib/libfluid_properties-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** Warning ***\nUnable to find extern \"C\" method \"SAMApp__registerApps\" in library: /Users/qt5/Desktop/coding/projects/SAM/lib/libsam-dbg.0.dylib.\nThis doesn't necessarily indicate an error condition unless you believe that the method should exist in that library.\n\n*** ERROR ***\nUnable to locate library for \"SAMApp\".\nWe attempted to locate the library \"libsam-dbg.la\" in the following paths:\n\nMake sure you have compiled the library and either set the \"library_path\" variable in your input file or exported \"MOOSE_LIBRARY_PATH\".\nCompiled in debug mode to see the list of libraries checked for dynamic loading methods.```",
          "url": "https://github.com/idaholab/moose/discussions/18217",
          "updatedAt": "2022-06-26T09:19:28Z",
          "publishedAt": "2021-06-30T19:14:50Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "rwcarlsen"
                  },
                  "bodyText": "From those warnings, it is clear that libsam is being correctly discovered and searched.  But there should be an extern C (exported) function like this: \n  \n    \n      moose/test/src/base/MooseTestApp.C\n    \n    \n         Line 125\n      in\n      d4a83b1\n    \n  \n  \n    \n\n        \n          \n           MooseTestApp__registerApps() \n        \n    \n  \n\n.  Can you confirm such functions exist for SamApp?",
                  "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-951420",
                  "updatedAt": "2022-06-26T09:19:55Z",
                  "publishedAt": "2021-07-01T17:45:10Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "rtaylo45"
                          },
                          "bodyText": "Im not familiar with these lines of code from that file you mentioned.\nextern \"C\" void\nMooseTestApp__registerAll(Factory & f, ActionFactory & af, Syntax & s)\n{\n  MooseTestApp::registerAll(f, af, s);\n}\n\n// External entry point for dynamic application loading\nextern \"C\" void\nMooseTestApp__registerApps()\n{\n  MooseTestApp::registerApps();\n}\n\nIve never see it in any documentation or in the MOOSE tutorials. Can you provide more information on them?",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-951455",
                          "updatedAt": "2022-06-26T09:19:55Z",
                          "publishedAt": "2021-07-01T17:58:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rwcarlsen"
                          },
                          "bodyText": "We don't say too much about them because the stork templates we provide for people to create new apps with automatically include/provide these functions.  Users generally should never need to do anything with them.  But it's possible these functions were inadvertently removed from SAM.  If there are not similar functions in SAM, then this pattern will need to be followed to add them back (in the SAMApp.C file).  i.e. add back SAMApp__registerApps() {SAMApp::registerApps();} and SAMApp__registerAll(...) {SAMApp::registerAll(...);}",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-951585",
                          "updatedAt": "2022-06-26T09:20:05Z",
                          "publishedAt": "2021-07-01T18:33:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rtaylo45"
                          },
                          "bodyText": "These functions are in SAMApp.C",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-951627",
                          "updatedAt": "2022-06-26T09:20:06Z",
                          "publishedAt": "2021-07-01T18:45:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rwcarlsen"
                          },
                          "bodyText": "Hmmm...  That's too bad because that would have been an easy fix.  Maybe @permcody has some ideas.  I know that there have been some issues related to dynamic library loading for us on macs.",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-953045",
                          "updatedAt": "2022-07-08T07:20:38Z",
                          "publishedAt": "2021-07-01T19:34:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rtaylo45"
                          },
                          "bodyText": "I am running on a mac, Big Sur version 11.4. What issues are there on the macs?",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-953141",
                          "updatedAt": "2022-07-08T07:20:38Z",
                          "publishedAt": "2021-07-01T20:03:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rwcarlsen"
                          },
                          "bodyText": "Your issue doesn't seem to be the same as some of the other ones, but if you just search our issues for \"dynamic loading\" you'll find several.  Some to do with path handling, some to do with inter-module dependencies, some to do with crashes, etc.  Have you tried running your scenario/setup on a linux system?  Does it work there or do you observe the same problem?",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-953198",
                          "updatedAt": "2022-07-08T07:20:37Z",
                          "publishedAt": "2021-07-01T20:19:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rtaylo45"
                          },
                          "bodyText": "So i do get this same error when i try to run on linux.",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-970622",
                          "updatedAt": "2022-07-08T07:20:37Z",
                          "publishedAt": "2021-07-06T15:02:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrsd"
                          },
                          "bodyText": "Your error message is complaining about SAMApp__registerApps, but SAM implemented SamApp__registerApps, SamApp__registerAll and SamApp__registerObjects.\nProbably you want to change app_type = SAMApp to app_type = SamApp. These things are case-sensitive.",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-979578",
                          "updatedAt": "2022-07-08T07:20:37Z",
                          "publishedAt": "2021-07-08T13:42:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rtaylo45"
                          },
                          "bodyText": "Wow, i feel dumb now. This fixed the issue. Thank you for the help.",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-980738",
                          "updatedAt": "2022-07-08T07:20:37Z",
                          "publishedAt": "2021-07-08T17:43:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrsd"
                          },
                          "bodyText": "Cool! Glad to hear that. Maybe, ping the SAM developers to they make spelling of SAM consistent thought out the code. Sometimes that use SAM, sometimes they use Sam. Then, it leads to problems like this.",
                          "url": "https://github.com/idaholab/moose/discussions/18217#discussioncomment-995257",
                          "updatedAt": "2022-07-08T07:20:37Z",
                          "publishedAt": "2021-07-12T18:41:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "a question about \u201cAnistropic mobility\u201d or Interface Orientation",
          "author": {
            "login": "dongcongcong606"
          },
          "bodyText": "Dear friends\uff01\nHi everyone, I have a question about the code of \"anistropy\". I would like to know how to introduce anisotropic mobility into the phase field model in Moose. And I read some file  such as \"InterfaceOrienation.c\" \u3001\"ADInterfaceOrienationMaterial.c\" . But I don't know which of these two models is a better model for anisotropic mobility. And why the \"Orientation angle\" in terms of acos rather than atan? I am very grateful to all the friends and experts present here for giving me directions. Thanks again!",
          "url": "https://github.com/idaholab/moose/discussions/18016",
          "updatedAt": "2022-06-16T03:02:17Z",
          "publishedAt": "2021-06-07T08:50:56Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "Hello- the InterfaceOrientationMaterial is to account for anisotropic interfacial energy rather than anisotropic order parameter mobility. So, you do not want to use this material if you want to include anisotropic mobility in the Allen-Cahn equation. If you want a similar 2-D anisotropy as described in the Kobayashi paper, you would need to create a new material that would be very similar to InterfaceOrientationMaterial. However, rather than eps, you would want to create a material property called L (for example) that could be supplied to the mob_name parameter in the AllenCahn and ACInterface kernels (also make sure to also specify variable_L = true to ACInterface).",
                  "url": "https://github.com/idaholab/moose/discussions/18016#discussioncomment-841492",
                  "updatedAt": "2022-06-16T03:02:19Z",
                  "publishedAt": "2021-06-08T18:08:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dongcongcong606"
                          },
                          "bodyText": "Thank you very much. I obey your suggestion to define a new material named \"ADANisotropicFirst\"  in the following file, and I also introduce an anisotropic function to represent \"mobility\" \uff0cand whether I am supposed to adjust or even define a new kernel like \u201cKobayashi1\u201d to describe my own Jacobian codes \uff1fPlease forgive me for my shallow knowledge. I would like to express my gratitude again here.",
                          "url": "https://github.com/idaholab/moose/discussions/18016#discussioncomment-895675",
                          "updatedAt": "2022-06-16T03:02:32Z",
                          "publishedAt": "2021-06-21T03:34:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "If you use the AD versions of the other kernels, you won't need to code the Jacobians, they will be calculated automatically.",
                          "url": "https://github.com/idaholab/moose/discussions/18016#discussioncomment-940182",
                          "updatedAt": "2022-06-16T03:02:32Z",
                          "publishedAt": "2021-06-29T20:30:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dongcongcong606"
                          },
                          "bodyText": "If you use the AD versions of the other kernels, you won't need to code the Jacobians, they will be calculated automatically.\nthank you very much",
                          "url": "https://github.com/idaholab/moose/discussions/18016#discussioncomment-992214",
                          "updatedAt": "2022-06-16T03:02:32Z",
                          "publishedAt": "2021-07-12T06:58:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}