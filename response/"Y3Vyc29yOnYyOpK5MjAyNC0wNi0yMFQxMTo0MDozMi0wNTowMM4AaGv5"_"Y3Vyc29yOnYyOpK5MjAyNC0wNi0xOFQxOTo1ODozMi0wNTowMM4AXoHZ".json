{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wNi0xOFQxOTo1ODozMi0wNTowMM4AXoHZ"
    },
    "edges": [
      {
        "node": {
          "title": "Whether support FMI",
          "author": {
            "login": "richman2024"
          },
          "bodyText": "Hi,\nDoes MOOSE support FMI(Functional Mock-up Interface)?\nIf it does, could you please share a guidline or some instances to me? If not, is there any interface or method for co-simulation with other tools like OpenModeilca, FEniCS and etc.\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/25828",
          "updatedAt": "2024-06-20T15:04:52Z",
          "publishedAt": "2023-10-24T08:29:40Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNo we don't.\nBut the capabilities offered by FMI should be easy to replicate.\nYou can wrap your moose solves in a Python script and read the post processing data output to file. FMI only supports scalar values so you don't have to worry about fields.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7369399",
                  "updatedAt": "2023-10-24T11:56:40Z",
                  "publishedAt": "2023-10-24T11:56:39Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "richman2024"
                          },
                          "bodyText": "Hi Guillaume,\nThank you for you quick answer!\nI don't know how to wrap MOOSE slover in a Python script, and FMU make of '.dll' or '.c' file, is Python script availible? Could you please describe the process more detail (a example should be better)? Thanks a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7369586",
                          "updatedAt": "2023-10-24T12:18:00Z",
                          "publishedAt": "2023-10-24T12:17:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ah so if you are looking for a FMU we don't provide that either and that's harder to do for now. FMI is easier to replicate without following the standard. You ll have to manually wrap around MOOSE using the python os or subprocess modules.\nAn example would be, once you have compiled the heat transfer module for example:\nimport subprocess\nimport csv\n\n# Run the simulation\nsubprocess.call(\"heat_transfer-opt -i diffusion.i\", shell=True)\n\n# Parse the output file\nimport csv\nwith open('diffusion_out.csv') as csvfile:\n    reader = csv.reader(csvfile, delimiter=',')\n    for row in reader:\n        print(', '.join(row))",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7371736",
                          "updatedAt": "2023-10-24T15:47:53Z",
                          "publishedAt": "2023-10-24T15:41:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "richman2024"
                          },
                          "bodyText": "Thank you! I want to wrap it as FMU so that make MOOSE co-simulation with other electromagnetic simulation tools (seems not found this module in MOOSE) like OpenModelica else.\nI'll try this way, it's like run MOOSE by python script and get the results after the simulation finished. Can I get data of each time-steps and set parameters during the simulation progress dynamicly?",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7376456",
                          "updatedAt": "2023-10-25T03:12:58Z",
                          "publishedAt": "2023-10-25T03:12:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "We have an EM module, it just only does waves for now.\nThe csv file will have the data for each time step.\nTo change parameters dynamically, there's two options:\n\nrun each input with a single time step and use the restart capabilities\ntry to figure out the web server. I dont have experience on that",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7376527",
                          "updatedAt": "2023-10-25T03:27:28Z",
                          "publishedAt": "2023-10-25T03:27:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "richman2024"
                          },
                          "bodyText": "Thank you a lot!\nWhere can I find the guidline for csv file's settings to get the data what I want? For example, I want to get the temperature value at some particular points by time steps in 3D (mesh type is exodus mesh file).",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7377798",
                          "updatedAt": "2023-10-25T07:05:16Z",
                          "publishedAt": "2023-10-25T07:05:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "use the postprocessors for that. A PointValue will do what you want\nhttps://mooseframework.inl.gov/syntax/Postprocessors/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7380706",
                          "updatedAt": "2023-10-25T12:15:13Z",
                          "publishedAt": "2023-10-25T12:15:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "richman2024"
                          },
                          "bodyText": "Thank you!\nIs the value of point =  means 'x y z' of coordinate. When I set it as point = '5 5 5', I got below error:\n`The following error occurred in the object \"test_point\", of type \"PointValue\".\nNo element located at (x,y,z)=(       5,        5,        5) in PointValue Postprocessor named: test_point\n`\nOnly when I set it as '0 0 0' then it can runing correct.\nI use exodus mesh file instead of generate mesh by MOOSE. How can I get the value of a particular point or a plane?\nBesides, I just get 1 step value by this way. How can I get more value by time steps?",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7389776",
                          "updatedAt": "2023-10-26T08:01:43Z",
                          "publishedAt": "2023-10-26T08:01:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you run your simulation with --mesh-only what does it report for the mesh bounding box?",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7392134",
                          "updatedAt": "2023-10-26T12:11:57Z",
                          "publishedAt": "2023-10-26T12:11:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "richman2024"
                          },
                          "bodyText": "Part of its report:\n`Mesh Information:\nelem_dimensions()={3}\nspatial_dimension()=3\nn_nodes()=52815\nn_local_nodes()=13452\nn_elem()=34746\nn_local_elem()=8688\nn_active_elem()=34746\nn_subdomains()=77\nn_elemsets()=0\nn_partitions()=4\nn_processors()=4\nn_threads()=1\nprocessor_id()=0\nis_prepared()=true\nis_replicated()=true\nMesh Bounding Box:\nMinimum: (x,y,z)=( -0.3, -0.3, -0.01)\nMaximum: (x,y,z)=( 0.3, 0.3, 0.004)\nDelta: (x,y,z)=( 0.6, 0.6, 0.014)\nMesh Element Type(s):\nHEX8\nMesh Nodesets:\nNodeset 1, 32238 nodes\nBounding box minimum: (x,y,z)=( -0.3, -0.3, 0)\nBounding box maximum: (x,y,z)=( 0.3, 0.3, 0.004)\nBounding box delta: (x,y,z)=( 0.6, 0.6, 0.004)\n............................\nMesh Sidesets:\nSideset 1, 31470 sides (QUAD4), 30990 elems (HEX8), 32231 nodes\nSide volume: 0.687315\nBounding box minimum: (x,y,z)=( -0.3, -0.3, 0)\nBounding box maximum: (x,y,z)=( 0.3, 0.3, 0.004)\nBounding box delta: (x,y,z)=( 0.6, 0.6, 0.004)\nSideset 2 (r1_wall), 132 sides (QUAD4), 80 elems (HEX8), 155 nodes\nSide volume: 0.003444\nBounding box minimum: (x,y,z)=( 0.1815, -0.236, -0.01)\nBounding box maximum: (x,y,z)=( 0.2685, -0.214, 0)\nBounding box delta: (x,y,z)=( 0.087, 0.022, 0.01)\n...................................\nMesh Edgesets:\nNone\nMesh Subdomains:\nSubdomain 1: 32900 elems (HEX8, 32900 active), 50073 active nodes\nVolume: 0.00144\nBounding box minimum: (x,y,z)=( -0.3, -0.3, 0)\nBounding box maximum: (x,y,z)=( 0.3, 0.3, 0.004)\nBounding box delta: (x,y,z)=( 0.6, 0.6, 0.004)\n..............................................`",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7392234",
                          "updatedAt": "2023-10-26T12:21:35Z",
                          "publishedAt": "2023-10-26T12:21:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "your mesh only extends to Bounding box maximum: (x,y,z)=( 0.3, 0.3, 0.004)\nso5,5,5 is too far.\nYou need to check the coordinates",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7392255",
                          "updatedAt": "2023-10-26T12:23:57Z",
                          "publishedAt": "2023-10-26T12:23:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "chrbertsch"
                  },
                  "bodyText": "FMI only supports scalar values so you don't have to worry about fields.\n\nThis is true for FMI 1.0 and 2.0, not for 3.0, see https://fmi-standard.org/docs/3.0.1/",
                  "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7384354",
                  "updatedAt": "2023-10-25T18:15:16Z",
                  "publishedAt": "2023-10-25T18:15:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Thanks for sharing the link!\ndo you mind pasting a section number?",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7384499",
                          "updatedAt": "2023-10-25T18:34:15Z",
                          "publishedAt": "2023-10-25T18:34:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "chrbertsch"
                  },
                  "bodyText": "https://fmi-standard.org/docs/3.0.1/#fmu-variables",
                  "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7384535",
                  "updatedAt": "2023-10-25T18:39:41Z",
                  "publishedAt": "2023-10-25T18:39:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Thank you!\nSo to do a \"Transfer\" in the MOOSE sense ( https://mooseframework.inl.gov/syntax/Transfers/index.html ) we would send 4 variables (one for each of x, y, z and the variable) and the either the receiving FMU or some wrapping code in between would translate that to the potentially non-matching (because the number of cells are different, coarser mesh for example) receiving code?\nOr is the conversion (between different representations of the same field, again due to non-matching geometries/meshes) codified in the standard as well?\nfrom what I see in the standard with the get and set routines, I would expect the code in between to do the conversion.\nOr be limited to fully-matching field representations (a CopyTransfer in MOOSE-speak)\nLooking around it seems people are planning to codify the representation of variables (fields?) here\nhttps://github.com/modelica/fmi-ls-struct\nand their communication here\nhttps://github.com/modelica/fmi-ls-bus\nam I correct?",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7384599",
                          "updatedAt": "2023-10-25T18:59:06Z",
                          "publishedAt": "2023-10-25T18:49:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "chrbertsch"
                  },
                  "bodyText": "Hm. I do not know anything obout Moose, so the \"translation\" is difficult for me.\nThe FMI Interface does not know anything about meshes etc. The variable are typically used as \"signals\", not as spacially distributed fields in the multy-physics sense.\nBut your could give new meaning to certain array variables in a layered standard on top of FMI (see https://fmi-standard.org/docs/3.0.1/#VersioningLayered and https://www.conftool.com/modelica2023/index.php/Bertsch-Beyond_FMI_-_Towards_New_Applications_with_Layered_Standards-132_a.pdf?page=downloadPaper&filename=Bertsch-Beyond_FMI_-_Towards_New_Applications_with_Layered_Standards-132_a.pdf&form_id=132&form_version=final  for the concept of layered standards) for your use cases - this is what is done for in fmi-ls-bus and fmi-ls-struct.\nBefore you go the a spatially distributed multi-phyiscs-extension of FMI, I think exchanging avarage values e.g.  on surfaces with a system simulation tool via signals is the lower hanging fruit. See e.g.  https://www.conftool.com/modelica2023/index.php/Willeke-A_preCICE-FMI_Runner_to_Couple_FMUs_to_PDE-Based_Simulations-175_a.pdf?page=downloadPaper&filename=Willeke-A_preCICE-FMI_Runner_to_Couple_FMUs_to_PDE-Based_Simulations-175_a.pdf&form_id=175&form_version=final",
                  "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7384741",
                  "updatedAt": "2023-10-25T19:12:14Z",
                  "publishedAt": "2023-10-25T19:12:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "burritotukituki"
                  },
                  "bodyText": "Hello\nNo we don't. But the capabilities offered by FMI should be easy to replicate.\nYou can wrap your moose solves in a Python script and read the post processing data output to file. FMI only supports scalar values so you don't have to worry about fields.\nGuillaume\n\nHi,\nI am also interested in wrapping MOOSE into a FMI object. So far we are able to do what @GiudGiud suggested above. In our case MOOSE is the master app and Modelica the slave, however the simulation is quite expensive as the Modelica simulation needs to restart in every simulation step. A FMI would be a nice fix to improve performance.\n@chrbertsch and @richman2024 are you aware of any FEM or CFD code that has been wrapped into a FMU?\nThanks!",
                  "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7390258",
                  "updatedAt": "2023-10-26T08:41:56Z",
                  "publishedAt": "2023-10-26T08:41:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "they have the list of codes there\nhttps://fmi-standard.org/tools/\nthere's quite a few",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7392241",
                          "updatedAt": "2023-10-26T12:22:26Z",
                          "publishedAt": "2023-10-26T12:22:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "yifanm4"
                          },
                          "bodyText": "Hello\nNo we don't. But the capabilities offered by FMI should be easy to replicate.\nYou can wrap your moose solves in a Python script and read the post processing data output to file. FMI only supports scalar values so you don't have to worry about fields.\nGuillaume\n\nHi, I am also interested in wrapping MOOSE into a FMI object. So far we are able to do what @GiudGiud suggested above. In our case MOOSE is the master app and Modelica the slave, however the simulation is quite expensive as the Modelica simulation needs to restart in every simulation step. A FMI would be a nice fix to improve performance.\n@chrbertsch and @richman2024 are you aware of any FEM or CFD code that has been wrapped into a FMU? Thanks!\n\nHi @burritotukituki ,\nI am also thinking about getting Modelica to talk with my MOOSE-based application. I understand how to get and read the output csv file from a python script, but I am not familiar with the restart option in MOOSE. Will you be able to give some detailed tutorial on how you use MOOSE as the master app and Modelica as the slave? I think it will serve as a good starting point for me.\nBesides, do you end up succeeding in wrapping MOOSE into a FMI object? If so, can you please give me some suggestions on how it can be done?\nThank you so much!",
                          "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-9830305",
                          "updatedAt": "2024-06-20T15:04:52Z",
                          "publishedAt": "2024-06-20T15:04:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "chrbertsch"
                  },
                  "bodyText": "@chrbertsch and @richman2024 are you aware of any FEM or CFD code that has been wrapped into a FMU?\n\nYou can filter the FMI tools list with \"FMI\" or \"CFD\" https://fmi-standard.org/tools/.\nMostly the import of Functional Mock-up Units is supported by FMI and CFD tools.\nSee also  https://www.3ds.com/support/hardware-and-software/simulia-system-information/compatibility/co-simulation/ \"Abaqus 2019 and later use the FMI 2.0 standard for communicate with Dymola.\"\nRegarding the export of FMUs many tools can generate reduced-order or surrogate models as FMUs (e.g. Ansys Twin Builder, Optislang ...),\nBut there are als tools such as XFlow that support the export of the unreduced model as FMU",
                  "url": "https://github.com/idaholab/moose/discussions/25828#discussioncomment-7407379",
                  "updatedAt": "2023-10-27T20:28:31Z",
                  "publishedAt": "2023-10-27T20:28:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to compute plastic strain rate",
          "author": {
            "login": "RWTHLHK"
          },
          "bodyText": "I need to compute some plastic work requiring a plastic strain rate. However, I looked at the website and the source codes, and currently, there is no way to retrieve the plastic strain rate directly.",
          "url": "https://github.com/idaholab/moose/discussions/27611",
          "updatedAt": "2024-06-20T08:08:07Z",
          "publishedAt": "2024-05-13T13:18:47Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Use Debug/show_material_props to see if it s computed as a material property\nIf so, then a MaterialRealAux (or the appropriate type depending on the data type of that property) will do the trick",
                  "url": "https://github.com/idaholab/moose/discussions/27611#discussioncomment-9420508",
                  "updatedAt": "2024-05-13T13:36:24Z",
                  "publishedAt": "2024-05-13T13:36:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "it seems like plastic strain rate is not computed as a material property. Can (p - p_old)/delta_t work? p is the plastic strain and delta_t is the time increment.",
                          "url": "https://github.com/idaholab/moose/discussions/27611#discussioncomment-9815634",
                          "updatedAt": "2024-06-19T09:49:41Z",
                          "publishedAt": "2024-06-19T09:49:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If you are using an implicit Euler time integrator, the default, then this will be correct",
                          "url": "https://github.com/idaholab/moose/discussions/27611#discussioncomment-9818102",
                          "updatedAt": "2024-06-19T13:54:25Z",
                          "publishedAt": "2024-06-19T13:54:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/27611#discussioncomment-9825930",
                          "updatedAt": "2024-06-20T08:08:08Z",
                          "publishedAt": "2024-06-20T08:08:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "The deformation process cannot be displayed directly using paraview post-processing",
          "author": {
            "login": "zengyuxin0807"
          },
          "bodyText": "Dear Moose Experts,\nI am studying the example about the plasticity part of the crystal and now have some questions. When I run the exception.i file ( moose/modules/solid_mechanics/test/tests/crystal_plasticity/stress_update_material_based/exception.i) , I can't see the deformation over time like in the other examples when I put the results into the paraview software for visualisation.\n\nI want to get a deformation display like the other examples, how do I go about doing that?\nI would greatly appreciate any insights or suggestions from the community to help resolve this issue.\nThank you very much for your time and consideration.",
          "url": "https://github.com/idaholab/moose/discussions/27906",
          "updatedAt": "2024-06-20T07:43:19Z",
          "publishedAt": "2024-06-15T03:28:54Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI m not sure what you mean. Do you mean the displacements should be called disp instead of u ?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27906#discussioncomment-9782784",
                  "updatedAt": "2024-06-15T16:42:34Z",
                  "publishedAt": "2024-06-15T16:42:34Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "zengyuxin0807"
                          },
                          "bodyText": "Thank you very much for being able to reply to me, I'm sorry it took so long to get back to you, it's not the name of the displacement but how it shows up in the visualisation. As in the original question, you can see the shape change over time in the other examples, but not in the result of running the exception.i file.",
                          "url": "https://github.com/idaholab/moose/discussions/27906#discussioncomment-9823230",
                          "updatedAt": "2024-06-20T01:35:08Z",
                          "publishedAt": "2024-06-20T01:35:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think that's tied to the name.\nYou need paraview to recognize that the vector is a vector of the displacements of nodes\nhttps://discourse.paraview.org/t/displacement-of-mesh-operator-in-paraview/11590/6\nEither that or you can output the displaced mesh by specifying use_displaced_mesh in the Output",
                          "url": "https://github.com/idaholab/moose/discussions/27906#discussioncomment-9823455",
                          "updatedAt": "2024-06-20T02:12:24Z",
                          "publishedAt": "2024-06-20T02:12:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "zengyuxin0807"
                          },
                          "bodyText": "Thank you very much for your answer, I will try this!",
                          "url": "https://github.com/idaholab/moose/discussions/27906#discussioncomment-9825654",
                          "updatedAt": "2024-06-20T07:43:19Z",
                          "publishedAt": "2024-06-20T07:43:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Help in understanding structure of code",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nFor the code bellow does the code \"return grad_u * diffusivity\" transfer to the code\n  {\n   RealVectorValue d_grad_u = grad_u;\n   for (const auto i : make_range(Moose::dim))\n     d_grad_u(i) *= diffusivity(i);\n\n   return d_grad_u;\n }\n\n?\ntemplate <bool is_ad, typename T>\n Real\n SideDiffusiveFluxIntegralTempl<is_ad, T>::computeQpIntegral()\n {\n   return -diffusivityGradientProduct(_grad_u[_qp],\n                                      MetaPhysicL::raw_value((*_diffusion_coef)[_qp])) *\n          _normals[_qp];\n }\n \n template <bool is_ad, typename T>\n RealVectorValue\n SideDiffusiveFluxIntegralTempl<is_ad, T>::diffusivityGradientProduct(const RealVectorValue & grad_u,\n                                                                      const Real diffusivity)\n {\n   return grad_u * diffusivity;\n }\n \n template <bool is_ad, typename T>\n RealVectorValue\n SideDiffusiveFluxIntegralTempl<is_ad, T>::diffusivityGradientProduct(\n     const RealVectorValue & grad_u, const RealVectorValue & diffusivity)\n {\n   RealVectorValue d_grad_u = grad_u;\n   for (const auto i : make_range(Moose::dim))\n     d_grad_u(i) *= diffusivity(i);\n\n   return d_grad_u;\n }",
          "url": "https://github.com/idaholab/moose/discussions/27950",
          "updatedAt": "2024-06-20T02:14:54Z",
          "publishedAt": "2024-06-20T00:47:13Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyes it does. This is for an anisotropic diffusivity, where the x y and z components could be different, but the diffusivity tensor is still diagonal.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27950#discussioncomment-9823010",
                  "updatedAt": "2024-06-20T00:52:10Z",
                  "publishedAt": "2024-06-20T00:52:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Thank you. Does it transfer as a revised grad_u or a diffusivity?",
                          "url": "https://github.com/idaholab/moose/discussions/27950#discussioncomment-9823026",
                          "updatedAt": "2024-06-20T00:56:46Z",
                          "publishedAt": "2024-06-20T00:56:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what do you mean by transfer?\nIt's a diffusive flux (D * grad_u)",
                          "url": "https://github.com/idaholab/moose/discussions/27950#discussioncomment-9823066",
                          "updatedAt": "2024-06-20T01:08:20Z",
                          "publishedAt": "2024-06-20T01:08:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Is the code as written redundant? Is the \"return grad_u * diffusivity\" needed or is the end result of the code simply \"d_grad_u(i) *= diffusivity(i);\" ?",
                          "url": "https://github.com/idaholab/moose/discussions/27950#discussioncomment-9823083",
                          "updatedAt": "2024-06-20T01:13:32Z",
                          "publishedAt": "2024-06-20T01:13:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This code is returning a value, we must have the return statement.\n\"d_grad_u(i) *= diffusivity(i);\n\nis not sufficient because we do not have a reference to d_grad_u outside the scope of this function",
                          "url": "https://github.com/idaholab/moose/discussions/27950#discussioncomment-9823209",
                          "updatedAt": "2024-06-20T01:32:09Z",
                          "publishedAt": "2024-06-20T01:32:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "In the previous section prior to defining d_grad_u, could the statement just have simply been \"return grad_u\", then in the subject section, \"RealVectorValue d_grad_u = grad_u\"?",
                          "url": "https://github.com/idaholab/moose/discussions/27950#discussioncomment-9823250",
                          "updatedAt": "2024-06-20T01:38:56Z",
                          "publishedAt": "2024-06-20T01:38:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This function\n template <bool is_ad, typename T>\n RealVectorValue\n SideDiffusiveFluxIntegralTempl<is_ad, T>::diffusivityGradientProduct(const RealVectorValue & grad_u,\n                                                                      const Real diffusivity)\n {\n   return grad_u * diffusivity;\n }\n\nis not called before this one\n template <bool is_ad, typename T>\n RealVectorValue\n SideDiffusiveFluxIntegralTempl<is_ad, T>::diffusivityGradientProduct(\n     const RealVectorValue & grad_u, const RealVectorValue & diffusivity)\n {\n   RealVectorValue d_grad_u = grad_u;\n   for (const auto i : make_range(Moose::dim))\n     d_grad_u(i) *= diffusivity(i);\n\n   return d_grad_u;\n }\n\nif that is the confusion",
                          "url": "https://github.com/idaholab/moose/discussions/27950#discussioncomment-9823467",
                          "updatedAt": "2024-06-20T02:14:54Z",
                          "publishedAt": "2024-06-20T02:14:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Crystal plasticity model",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I am using the crystal plasticity kernel and the 'trial_xtalpl' as shown below is a required parameter of the crystal_plasticity_models object. I need more information about what 'trial_xtalpl' is but I can't find it. Is there a place to get more information on that, thanks.\n@dschwen @vprithiv @GiudGiud\n[Materials]\n[stress]\ntype = ComputeMultipleCrystalPlasticityStress\ncrystal_plasticity_models = 'trial_xtalpl'\ntan_mod_type = exact\n[]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27920",
          "updatedAt": "2024-06-19T20:46:06Z",
          "publishedAt": "2024-06-18T01:31:48Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nHere it s just the name of another object in that input file I think.\nCan you please paste the whole input file?",
                  "url": "https://github.com/idaholab/moose/discussions/27920#discussioncomment-9800458",
                  "updatedAt": "2024-06-18T01:42:49Z",
                  "publishedAt": "2024-06-18T01:42:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "[GlobalParams]\n  displacements = 'ux uy uz'\n[]\n\n[Mesh]\n  type = GeneratedMesh\n  dim = 3\n  elem_type = HEX8\n[]\n\n[AuxVariables]\n  [fp_zz]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [e_zz]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [gss]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n[]\n\n[Functions]\n  [tdisp]\n    type = ParsedFunction\n    expression = 0.01*t\n  []\n[]\n\n[Physics/SolidMechanics/QuasiStatic/all]\n  strain = FINITE\n  add_variables = true\n  generate_output = stress_zz\n[]\n\n[AuxKernels]\n  [fp_zz]\n    type = RankTwoAux\n    variable = fp_zz\n    rank_two_tensor = plastic_deformation_gradient\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [e_zz]\n    type = RankTwoAux\n    variable = e_zz\n    rank_two_tensor = total_lagrangian_strain\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [gss1]\n    type = MaterialStdVectorAux\n    variable = gss\n    property = slip_resistance\n    index = 0\n    execute_on = timestep_end\n  []\n[]\n\n[BCs]\n  [symmy]\n    type = DirichletBC\n    variable = uy\n    boundary = bottom\n    value = 0\n  []\n  [symmx]\n    type = DirichletBC\n    variable = ux\n    boundary = left\n    value = 0\n  []\n  [symmz]\n    type = DirichletBC\n    variable = uz\n    boundary = back\n    value = 0\n  []\n  [tdisp]\n    type = FunctionDirichletBC\n    variable = uz\n    boundary = front\n    function = tdisp\n  []\n[]\n\n[Materials]\n  [elasticity_tensor]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '1.684e5 1.214e5 1.214e5 1.684e5 1.214e5 1.684e5 0.754e5 0.754e5 0.754e5'\n    fill_method = symmetric9\n  []\n  [stress]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl'\n    tan_mod_type = exact\n    maximum_substep_iteration = 200\n    use_line_search = true\n    min_line_search_step_size = 0.01\n  []\n  [trial_xtalpl]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    resistance_tol = 0.01\n  []\n[]\n\n[Postprocessors]\n  [stress_zz]\n    type = ElementAverageValue\n    variable = stress_zz\n  []\n  [fp_zz]\n    type = ElementAverageValue\n    variable = fp_zz\n  []\n  [e_zz]\n    type = ElementAverageValue\n    variable = e_zz\n  []\n  [gss]\n    type = ElementAverageValue\n    variable = gss\n  []\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  dt = 0.05\n  solve_type = 'PJFNK'\n\n  petsc_options_iname = -pc_hypre_type\n  petsc_options_value = boomerang\n  nl_abs_tol = 1e-10\n  nl_rel_step_tol = 1e-10\n  dtmax = 10.0\n  nl_rel_tol = 1e-10\n  end_time = 1\n  dtmin = 0.02\n  num_steps = 10\n  nl_abs_step_tol = 1e-10\n[]\n\n[Outputs]\n  exodus = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27920#discussioncomment-9800551",
                          "updatedAt": "2024-06-18T01:56:21Z",
                          "publishedAt": "2024-06-18T01:56:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It's this object\n  [trial_xtalpl]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    resistance_tol = 0.01\n  []",
                          "url": "https://github.com/idaholab/moose/discussions/27920#discussioncomment-9800566",
                          "updatedAt": "2024-06-18T01:58:56Z",
                          "publishedAt": "2024-06-18T01:58:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Does that mean I can choose any name I want for that block? Does trial_xtalpl do whatever [trial_xtalpl] block executes?",
                          "url": "https://github.com/idaholab/moose/discussions/27920#discussioncomment-9800664",
                          "updatedAt": "2024-06-18T02:15:59Z",
                          "publishedAt": "2024-06-18T02:15:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "yes. You can change that name to be whatever you want",
                          "url": "https://github.com/idaholab/moose/discussions/27920#discussioncomment-9800725",
                          "updatedAt": "2024-06-18T02:28:15Z",
                          "publishedAt": "2024-06-18T02:28:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "vprithiv"
                  },
                  "bodyText": "@Emmanuel-324\nCrystalPlasticityKalidindiUpdate is the object we are dealing with, search in the codebase to see implementation. Please be aware that the model parameters have default values within this implementation. If you want to change that, you need to assign those parameters within the input file, like:\n[trial_xtalpl]\ntype = CrystalPlasticityKalidindiUpdate\nnumber_slip_systems = 12\ngss_initial = 120\nslip_sys_file_name = input_slip_sys.txt\nresistance_tol = 0.01\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/27920#discussioncomment-9806936",
                  "updatedAt": "2024-06-18T14:10:41Z",
                  "publishedAt": "2024-06-18T14:10:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Thanks @GiudGiud , @vprithiv . I am also looking for some information on the 'CrystalPlasticityStressUpdateBase' in the MOOSE documentation but I can't find it. Any help?",
                          "url": "https://github.com/idaholab/moose/discussions/27920#discussioncomment-9809195",
                          "updatedAt": "2024-06-18T17:39:20Z",
                          "publishedAt": "2024-06-18T17:39:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vprithiv"
                          },
                          "bodyText": "Check this one, most of the framework is in Compute Multiple Crystal Plasticity Stress\nhttps://mooseframework.inl.gov/source/materials/crystal_plasticity/ComputeMultipleCrystalPlasticityStress.html\nCrystalPlasticityStressUpdateBase is the base class, I think it has the general framework. You can directly check the code in the codebase.",
                          "url": "https://github.com/idaholab/moose/discussions/27920#discussioncomment-9821794",
                          "updatedAt": "2024-06-19T20:46:06Z",
                          "publishedAt": "2024-06-19T20:46:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "INSTALL MOOSE IN WSL",
          "author": {
            "login": "ljeft"
          },
          "bodyText": "I installed moose in wsl for download and had the same problem when building PETSc.This is a problem I have not encountered before installing moose, I do not know how to solve it.\n/home/sohar/projects/moose/scripts\nINFO: Checking for HDF5...\nINFO: HDF5 library not detected, opting to download via PETSc...\n=============================================================================================\n                         Configuring PETSc to compile on your system\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: CC=mpicc. Ignoring it! Use \"./configure CC=$CC\" if you really\n  want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: CXX=mpicxx. Ignoring it! Use \"./configure CXX=$CXX\" if you\n  really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: FC=mpif90. Ignoring it! Use \"./configure FC=$FC\" if you\n  really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: F77=mpif77. Ignoring it! Use \"./configure F77=$F77\" if you\n  really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: F90=mpif90. Ignoring it! Use \"./configure F90=$F90\" if you\n  really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Using default C optimization flags \"-g -O\". You might consider manually setting optimal\n  optimization flags for your system with COPTFLAGS=\"optimization flags\" see\n  config/examples/arch-*-opt.py for examples\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Using default Cxx optimization flags \"-g -O\". You might consider manually setting optimal\n  optimization flags for your system with CXXOPTFLAGS=\"optimization flags\" see\n  config/examples/arch-*-opt.py for examples\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Using default CUDA optimization flags \"-O3\". You might consider manually setting optimal\n  optimization flags for your system with CUDAOPTFLAGS=\"optimization flags\" see\n  config/examples/arch-*-opt.py for examples\n=============================================================================================\n=============================================================================================\n  Trying to download\n  https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.2/src/hdf5-1.12.2.tar.bz2\n  for HDF5\n=============================================================================================\n=============================================================================================\n                   Running configure on HDF5; this may take several minutes\n=============================================================================================\n=============================================================================================\n                     Running make on HDF5; this may take several minutes\n=============================================================================================\n=============================================================================================\n                 Running make install on HDF5; this may take several minutes\n=============================================================================================\nTESTING: consistencyChecks from config.packages.fblaslapack(config/BuildSystem/config/package.py:1095)\n*********************************************************************************************\n           UNABLE to CONFIGURE with GIVEN OPTIONS (see configure.log for details):\n---------------------------------------------------------------------------------------------\n        Cannot use fblaslapack without Fortran, make sure you do NOT have --with-fc=0\n*********************************************************************************************\n\nthis my   diagnostics script\nMon Jan 29 21:29:55 CST 2024\nNo LSB modules are available.\n\nSystem Arch: Distributor ID: Ubuntu Description: Ubuntu 22.04.3 LTS Release: 22.04 Codename: jammy\n\nMOOSE Package Version: Custom Build\n\nCPU Count: 28\n\nMemory Free: 6164.730 MB\n\nVariable `which $CC` check:\n/usr/local/openmpi-4.1.6/bin/mpicc\n\n$CC --version:\ngcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nCopyright (C) 2021 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nMPICC:\nwhich mpicc:\n        /usr/local/openmpi-4.1.6/bin/mpicc\nmpicc -show:\n        gcc -I/usr/local/openmpi-4.1.6/include -L/usr/local/openmpi-4.1.6/lib -Wl,-rpath -Wl,/usr/local/openmpi-4.1.6/lib -Wl,--enable-new-dtags -lmpi\n\nCOMPILER gcc:\ngcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nCopyright (C) 2021 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nPython: NO PYTHON DETECTED\n\nMODULES NOT AVAILABLE\n\nPETSC_DIR not set\n\nENVIRONMENT:\nCC=mpicc\nCUDA_HOME=:/usr/local/cuda-11.8\nCXX=mpicxx\nDBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus\nDISPLAY=:0\nF77=mpif77\nF90=mpif90\nFC=mpif90\nHOME=/home/sohar\nHOSTTYPE=x86_64\nLANG=C.UTF-8\nLD_LIBRARY_PATH=:/usr/local/cuda-11.8/lib64\nLESSCLOSE=/usr/bin/lesspipe %s %s\nLESSOPEN=| /usr/bin/lesspipe %s\nLOGNAME=sohar\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:\nMETHODS=opt\nMOOSE_JOBS=6\nNAME=DESKTOP-RPC0OMG\nOLDPWD=/home/sohar\nPATH=/usr/local/openmpi-4.1.6/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/WindowsApps/CanonicalGroupLimited.Ubuntu22.04LTS_2204.3.63.0_x64__79rhkp1fndgsc:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/libnvvp:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Microsoft SQL Server/150/Tools/Binn/:/mnt/c/Program Files/Microsoft SQL Server/Client SDK/ODBC/170/Tools/Binn/:/mnt/e/Windows Kits/10/Windows Performance Toolkit/:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.3.0/:/mnt/e/Git/cmd:/mnt/c/Users/DZKD/AppData/Local/Microsoft/WindowsApps:/mnt/d/Users/DZKD/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin:/usr/local/cuda-11.8/bin\nPULSE_SERVER=unix:/mnt/wslg/PulseServer\nPWD=/home/sohar/projects/moose/scripts\nSHELL=/bin/bash\nSHLVL=1\nTERM=xterm-256color\nUSER=sohar\nWAYLAND_DISPLAY=wayland-0\nWSL2_GUI_APPS_ENABLED=1\nWSLENV=\nWSL_DISTRO_NAME=Ubuntu-22.04\nWSL_INTEROP=/run/WSL/656_interop\nXDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop\nXDG_RUNTIME_DIR=/run/user/1000/\n_=/usr/bin/env",
          "url": "https://github.com/idaholab/moose/discussions/26668",
          "updatedAt": "2024-06-19T16:36:06Z",
          "publishedAt": "2024-01-29T14:21:18Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "What is the error?",
                  "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-8283640",
                  "updatedAt": "2024-01-29T14:22:20Z",
                  "publishedAt": "2024-01-29T14:22:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "FYI, when trying to post pre-formated text, GitHub honors the three tick header:\n       ```pre\n       stuff in here followed by three ticks on a new line:\n       ```",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-8283818",
                          "updatedAt": "2024-01-29T14:30:43Z",
                          "publishedAt": "2024-01-29T14:30:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "What does the following return?\n$FC -show\nwhich $($FC -show | cut -d\\  -f1)\n(fyi, I am now using GitHub's syntax markdown, by supplying):\n     ```bash\n     bash commands are syntax highlighted\n     ```",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-8283876",
                          "updatedAt": "2024-01-29T14:34:17Z",
                          "publishedAt": "2024-01-29T14:34:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ljeft"
                          },
                          "bodyText": "sohar@DESKTOP-RPC0OMG:~/projects/moose/scripts$ $FC -show\nch $($FC -show | cut -d\\  -f1)--------------------------------------------------------------------------\nNo underlying compiler was specified in the wrapper compiler data file\n(e.g., mpicc-wrapper-data.txt)\n--------------------------------------------------------------------------\nsohar@DESKTOP-RPC0OMG:~/projects/moose/scripts$ which $($FC -show | cut -d\\  -f1)\n--------------------------------------------------------------------------\nNo underlying compiler was specified in the wrapper compiler data file\n(e.g., mpicc-wrapper-data.txt)\n--------------------------------------------------------------------------",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-8283958",
                          "updatedAt": "2024-01-29T14:38:40Z",
                          "publishedAt": "2024-01-29T14:38:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I think you might not have a Fortran compiler installed? I've never seen a return like that before. This might be as easy as using apt-get install. However, I do not know the exact line you will need, as it looks like you are using a custom built OpenMPI (because it is sitting in /usr/local and not /usr/bin).\nIf you do have gfortran installed:\nwhich gfortran\n...It looks like your custom built OpenMPI was not configured to use it or something like that? Can you elaborate on your installation of OpenMPI a bit more? I feel this might also be something related to the Cuda compilers also installed?",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-8284219",
                          "updatedAt": "2024-01-29T14:44:43Z",
                          "publishedAt": "2024-01-29T14:44:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ljeft"
                          },
                          "bodyText": "sohar@DESKTOP-RPC0OMG:~/projects/moose/scripts$ sudo apt-get install gfortran\n[sudo] password for sohar:\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\ngfortran is already the newest version (4:11.2.0-1ubuntu1).\n0 upgraded, 0 newly installed, 0 to remove and 24 not upgraded.\nsohar@DESKTOP-RPC0OMG:~/projects/moose/scripts$ which gfortran\n/usr/bin/gfortran\n\nI downloaded the installation package manually in order to keep the version of openmpi and other computers the same. Maybe this is the problem, I will try to reinstall openmpi.",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-8284398",
                          "updatedAt": "2024-01-29T14:48:50Z",
                          "publishedAt": "2024-01-29T14:48:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Would it be possible to link the OpenMPI instructions you were following? I am curious!",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-8284482",
                          "updatedAt": "2024-01-29T14:50:45Z",
                          "publishedAt": "2024-01-29T14:50:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ljeft"
                          },
                          "bodyText": "I also had the same problem in ubuntu of VMware. Before, my solution was to update the version of openmpi, but now this method did not work. I did not see similar errors in the forum, so I hope you can provide some suggestions.\n=============================================================================================\n                     Running make on HDF5; this may take several minutes\n=============================================================================================\n=============================================================================================\n                 Running make install on HDF5; this may take several minutes\n=============================================================================================\nTESTING: consistencyChecks from config.packages.fblaslapack(config/BuildSystem/config/package.py:1095)\n*********************************************************************************************\n           UNABLE to CONFIGURE with GIVEN OPTIONS (see configure.log for details):\n---------------------------------------------------------------------------------------------\n        Cannot use fblaslapack without Fortran, make sure you do NOT have --with-fc=0\n*********************************************************************************************\n\nThis is the diagnose\n##################################################################################################\nInfluential Environment Variables\n\nCC=mpicc\nCONDA_CHANNEL=https://conda.software.inl.gov/public\nCURL_CA_BUNDLE=\nCXX=mpicxx\nF77=mpif77\nF90=mpif90\nFC=mpif90\nLD_LIBRARY_PATH=/usr/local/lib:\nMOOSE_JOBS=6\nPATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\nREQUESTS_CA_BUNDLE=\nSSL_CERT_FILE=\n\n##################################################################################################\nCompiler(s) (CC CXX FC F77 F90):\n\nCC=/usr/local/bin/mpicc\nCC -show:\ngcc -I/usr/local/include -L/usr/local/lib -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -lmpi\nCC version:\tgcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\n\nCXX=/usr/local/bin/mpicxx\nCXX -show:\ng++ -I/usr/local/include -L/usr/local/lib -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -lmpi\nCXX version:\tg++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\n\nFC=/usr/local/bin/mpif90\n--------------------------------------------------------------------------\nNo underlying compiler was specified in the wrapper compiler data file\n(e.g., mpicc-wrapper-data.txt)\n--------------------------------------------------------------------------\nFC -show:\n\n--------------------------------------------------------------------------\nNo underlying compiler was specified in the wrapper compiler data file\n(e.g., mpicc-wrapper-data.txt)\n--------------------------------------------------------------------------\nFC version:\t\n\nF77=/usr/local/bin/mpif77\n--------------------------------------------------------------------------\nNo underlying compiler was specified in the wrapper compiler data file\n(e.g., mpicc-wrapper-data.txt)\n--------------------------------------------------------------------------\nF77 -show:\n\n--------------------------------------------------------------------------\nNo underlying compiler was specified in the wrapper compiler data file\n(e.g., mpicc-wrapper-data.txt)\n--------------------------------------------------------------------------\nF77 version:\t\n\nF90=/usr/local/bin/mpif90\n--------------------------------------------------------------------------\nNo underlying compiler was specified in the wrapper compiler data file\n(e.g., mpicc-wrapper-data.txt)\n--------------------------------------------------------------------------\nF90 -show:\n\n--------------------------------------------------------------------------\nNo underlying compiler was specified in the wrapper compiler data file\n(e.g., mpicc-wrapper-data.txt)\n--------------------------------------------------------------------------\nF90 version:\t\n\nOK\n\n##################################################################################################\nPython Sanity Checks\n\nVerify `/usr/bin/env python3 --version` (reporting as: Python 3.10.12),\nmatches versions for: `which python3 && which python`\n\n\nWARNING: `python` does not exist\nThis does not mean there will be a failure, but some shebangs in some python\nfiles may still be relying on calling: `/usr/bin/env python` (Python 2.x era)\nOK\n\n##################################################################################################\nPython Modules (TestHarness, run-ability)\n\nOK",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-9803596",
                          "updatedAt": "2024-06-18T08:46:05Z",
                          "publishedAt": "2024-06-18T08:46:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You need a fortran compiler.\nIt seems while the F90, FC, F77 environment variables are set, there's not a working fortran compiler there",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-9808102",
                          "updatedAt": "2024-06-18T15:50:09Z",
                          "publishedAt": "2024-06-18T15:50:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "hmmm... this should have said FAIL instead of OK\nF90 version:\t\n\nOK\n\n##################################################################################################\nPython Sanity Checks\n\nEdit:\nOh I see why it didn't fail. I am checking on the presence of the variable being set. Not actually checking if the variable is pointing to a working binary.",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-9808444",
                          "updatedAt": "2024-06-18T16:22:33Z",
                          "publishedAt": "2024-06-18T16:21:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ljeft"
                          },
                          "bodyText": "I've downloaded fortran\nsohar@sohar-vm:~/projects/moose/scripts$ gfortran -v\nUsing built-in specs.\nCOLLECT_GCC=gfortran\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/11/lto-wrapper\nOFFLOAD_TARGET_NAMES=nvptx-none:amdgcn-amdhsa\nOFFLOAD_TARGET_DEFAULT=1\nTarget: x86_64-linux-gnu\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu 11.4.0-1ubuntu1~22.04' --with-bugurl=file:///usr/share/doc/gcc-11/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,m2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-11 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --enable-libphobos-checking=release --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --enable-cet --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-11-XeT9lY/gcc-11-11.4.0/debian/tmp-nvptx/usr,amdgcn-amdhsa=/build/gcc-11-XeT9lY/gcc-11-11.4.0/debian/tmp-gcn/usr --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --with-build-config=bootstrap-lto-lean --enable-link-serialization=2\nThread model: posix\nSupported LTO compression algorithms: zlib zstd\ngcc version 11.4.0 (Ubuntu 11.4.0-1ubuntu1~22.04)",
                          "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-9814104",
                          "updatedAt": "2024-06-19T07:13:16Z",
                          "publishedAt": "2024-06-19T07:13:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ljeft"
                  },
                  "bodyText": "This is a Chinese video without subtitles, so it may be difficult to understand\nhttps://www.bilibili.com/video/BV1LA411K7Pe/?spm_id_from=333.337.search-card.all.click",
                  "url": "https://github.com/idaholab/moose/discussions/26668#discussioncomment-8295671",
                  "updatedAt": "2024-01-30T03:15:06Z",
                  "publishedAt": "2024-01-30T03:15:06Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Output boundary heat flux",
          "author": {
            "login": "lucuo"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHow to output the boundary heat flux in the process of 3D heat transfer calculation. It's best to keep it in Lagrange auxvariable. thanks a lot",
          "url": "https://github.com/idaholab/moose/discussions/27947",
          "updatedAt": "2024-06-19T16:30:49Z",
          "publishedAt": "2024-06-19T16:14:35Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis should work unless you used an exotic FE discretization\nhttps://mooseframework.inl.gov/source/postprocessors/SideDiffusiveFluxIntegral.html",
                  "url": "https://github.com/idaholab/moose/discussions/27947#discussioncomment-9819859",
                  "updatedAt": "2024-06-19T16:28:26Z",
                  "publishedAt": "2024-06-19T16:28:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lucuo"
                  },
                  "bodyText": "\u8fd9\u662f\u6765\u81eaQQ\u90ae\u7bb1\u7684\u5047\u671f\u81ea\u52a8\u56de\u590d\u90ae\u4ef6\u3002\u4f60\u597d\uff0c\u5df2\u6536\u5230\u4f60\u7684\u5f62\u52bf\u4e0e\u653f\u7b56\u4f5c\u4e1a\uff0c\u795d\u4f60\u5929\u5929\u6109\u5feb~",
                  "url": "https://github.com/idaholab/moose/discussions/27947#discussioncomment-9819868",
                  "updatedAt": "2024-06-19T16:29:00Z",
                  "publishedAt": "2024-06-19T16:29:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "\u4f60\u597d",
                          "url": "https://github.com/idaholab/moose/discussions/27947#discussioncomment-9819890",
                          "updatedAt": "2024-06-19T16:30:49Z",
                          "publishedAt": "2024-06-19T16:30:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to efficiently model hundreds of parallel 1D channels without junctions by THM module",
          "author": {
            "login": "NorthMagic"
          },
          "bodyText": "I was modeling a full core with hundreds of 1D flow channels by using THM. Firstly, I found THM needs a long time to initialize setting up, and the consuming time increases greatly with used number of threads.\n\nBesides, the initialization time increases slightly with used number of processors.\n\nThen, I tried to run this simulation with the command line of \"mpiexec -n 4 ......\". But I encountered an error with \"EXIT CODE: 9\" which was caused by out of memory. The computing machine is WSL with 32 GB RAM and one Intel Ultra 9 CPU. The number of DOFs of nonlinear system and auxiliary systems are 27,360 and 110,580 respectively. It seems small and should not exceed memory requirement.\n\nWhen I used 1 or 2 processors with a single thread, the simulation was passed both with a consuming memory of about 5 GB. It seems conflict with the mentioned error by using 4 processors.\nIs it possibile to effectively model hundreds of 1D flow channels by THM?",
          "url": "https://github.com/idaholab/moose/discussions/27941",
          "updatedAt": "2024-06-19T14:28:58Z",
          "publishedAt": "2024-06-19T05:41:53Z",
          "category": {
            "name": "Q&A Modules: Thermal Hydraulics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "NorthMagic"
                  },
                  "bodyText": "This is the input file for test. I hope it could help you find out how the unexpected things happened.\nmsre_thm.zip",
                  "url": "https://github.com/idaholab/moose/discussions/27941#discussioncomment-9813489",
                  "updatedAt": "2024-06-19T05:51:14Z",
                  "publishedAt": "2024-06-19T05:51:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nPlease follow the profiling instructions to see what is taking a long time:\nhttps://mooseframework.inl.gov/application_development/profiling.html\n\nIs it possibile to effectively model hundreds of 1D flow channels by THM?\n\nyes I have seen it done.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27941#discussioncomment-9818525",
                  "updatedAt": "2024-06-19T14:28:59Z",
                  "publishedAt": "2024-06-19T14:28:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Multiple Sideset Generation Error",
          "author": {
            "login": "agniksr"
          },
          "bodyText": "In a annular cylrindrical mesh, i am trying to generate 3 extra sidesets at equal distance that is at z = 10, 20 , 30.\nHowever i am getting the following error:\nWARNING\n Error producing mesh: '/home/agniksr/projects/leo/leo-opt -i /home/agniksr/projects/leo/Input Files/peacock_run_mesh_tmp.i --mesh-only /home/agniksr/projects/leo/Input Files/peacock_run_mesh_tmp_PlasticThermalExpansion.e --allow-test-objects' exited with non zero status 1.\n\nPlease make sure your application is built and able to execute the given arguments.\nWorking dir: /home/agniksr/projects/leo/Input Files\nOutput: \n\n*** Warning, This code is deprecated and will be removed in future versions:\nPlease update your main.C to adapt new main function in MOOSE framework, see'test/src/main.C in MOOSE as an example of moose::main()'. \nStack frames: 6\n0: libMesh::print_trace(std::ostream&)\n1: void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::char_traits<char> >, char const (&) [136]>(libMesh::BasicOStreamProxy<char, std::char_traits<char> >&, bool, bool, char const (&) [136])\n2: AppFactory::createAppShared(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, char**, int)\n3: main\n4: __libc_start_main\n5: /home/agniksr/projects/leo/leo-opt(+0x33ef) [0x55b8583713ef]\n\n\n\n*** ERROR ***\nYour MeshGenerator tree contains multiple possible generator outputs :\n\"sideset30 and one or more of the following from an independent set: \"layer_10, layer_20, layer_30, make3D, sideset10, sideset20, sideset30\"\n\nThis may be due to a missing dependency or may be intentional. Please either\n- check that all the mesh generators are connected as a tree and culminate in a single final mesh. Having one wrong 'input=mg' parameter is the most common error\n- add additional dependencies to remove the ambiguity if you are using a user-built MeshGenerator\n- if you intend to execute a subset of the defined generators (uncommon), select the final MeshGenerator in the [Mesh] block with the \"final_generator\" parameter.\n\n\nI have also attached the mesh block of the input file here\n[Mesh]\n   [annular]\n     type = AnnularMeshGenerator\n     nr = 10\n     rmin = 7.5\n     rmax = 10.0\n     nt = 40\n   []\n   [make3D]\n     type = MeshExtruderGenerator\n     extrusion_vector = '0 0 40'\n     num_layers = 10\n     bottom_sideset = 'bottom'\n     top_sideset = 'top'\n     input = annular\n   []\n  [layer_10]\n    type = BoundingBoxNodeSetGenerator\n    input = make3D\n    new_boundary = 'z10'\n    top_right = '10 10 10'\n    bottom_left = '-10 -10 10'\n  []\n  [sideset10]\n    type = SideSetsFromNodeSetsGenerator\n    input = layer_10\n  []\n\n  [layer_20]\n    type = BoundingBoxNodeSetGenerator\n    input = make3D\n    new_boundary = 'z20'\n    top_right = '10 10 20'\n    bottom_left = '-10 -10 20'\n  []\n  [sideset20]\n    type = SideSetsFromNodeSetsGenerator\n    input = layer_20\n  []\n\n  [layer_30]\n    type = BoundingBoxNodeSetGenerator\n    input = make3D\n    new_boundary = 'z30'\n    top_right = '10 10 30'\n    bottom_left = '-10 -10 30'\n  []\n  [sideset30]\n    type = SideSetsFromNodeSetsGenerator\n    input = layer_30\n  []\n\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27932",
          "updatedAt": "2024-06-19T07:45:37Z",
          "publishedAt": "2024-06-18T19:39:38Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyou need to chain them not create parallel branches\nfor example\n  [sideset20]\n    type = SideSetsFromNodeSetsGenerator\n    input = layer_20\n  []\n\n  [layer_30]\n    type = BoundingBoxNodeSetGenerator\n    input = sideset20\n    new_boundary = 'z30'\n    top_right = '10 10 30'\n    bottom_left = '-10 -10 30'\n  []\n  [sideset30]\n    type = SideSetsFromNodeSetsGenerator\n    input = layer_30\n  []",
                  "url": "https://github.com/idaholab/moose/discussions/27932#discussioncomment-9810299",
                  "updatedAt": "2024-06-18T19:58:19Z",
                  "publishedAt": "2024-06-18T19:58:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "agniksr"
                          },
                          "bodyText": "I got it work like this. Thank you so much",
                          "url": "https://github.com/idaholab/moose/discussions/27932#discussioncomment-9814414",
                          "updatedAt": "2024-06-19T07:45:38Z",
                          "publishedAt": "2024-06-19T07:45:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Nodal loads",
          "author": {
            "login": "sidharthsarmah"
          },
          "bodyText": "Hi @GiudGiud ,\nI applied a nodal loads at one of the nodes for a bending test, but the higher loads resulted in an infinite stress at the notes.\nCould you suggest if I should\n\nUse a pressure BC over some nodes OR\nDistribute these nodal loads over some nodes using UserForcingFunctionNodalKernel.",
          "url": "https://github.com/idaholab/moose/discussions/26768",
          "updatedAt": "2024-06-19T00:58:32Z",
          "publishedAt": "2024-02-08T02:17:42Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI dont know. I reckon you should try both since these are input files modifications and should not take too long.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8403245",
                  "updatedAt": "2024-02-08T04:42:19Z",
                  "publishedAt": "2024-02-08T04:42:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Thanks, @GiudGiud , but there is a discrepancy when I applied the same concentrated loads at nodes in the same problem in ABAQUS, there is no deformation. Is there something I am missing while considering the NodalKernal?",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8414024",
                          "updatedAt": "2024-02-09T01:37:53Z",
                          "publishedAt": "2024-02-09T01:37:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "maybe the magnitude is different?\nwhat do you have in Abaqus and what are you putting in MOOSE?",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8414088",
                          "updatedAt": "2024-02-09T01:47:50Z",
                          "publishedAt": "2024-02-09T01:47:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , Its the same magnitude.\nIn MOOSE:",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8414099",
                          "updatedAt": "2024-02-13T23:45:37Z",
                          "publishedAt": "2024-02-09T01:49:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "same mesh too?",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8414118",
                          "updatedAt": "2024-02-09T01:51:44Z",
                          "publishedAt": "2024-02-09T01:51:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud,\nI tried for linear elastic case without CZM where the loading works and continues till completion, which means loading is okay.\nJust for a comparison, the VM stress for elastic case goes in MOOSE goes to 94000 MPa without nodal failure, while in the plastic case in ABAQUS, it goes to 2583 MPA, which smaller than elastic and should be the same for MOOSE.\nI think maybe it is with the stress-strain curve implementation. Could you please check, if this is correct way to incorporate an stress-strain curve in MOOSE?",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8422877",
                          "updatedAt": "2024-02-10T00:43:02Z",
                          "publishedAt": "2024-02-09T20:04:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "why are your stress units in MPa?\nThe mesh is in meters right?",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8423469",
                          "updatedAt": "2024-02-09T21:28:07Z",
                          "publishedAt": "2024-02-09T21:28:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , no its in mm and stress is in MPa (N/mm^2), loads in N",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8424279",
                          "updatedAt": "2024-02-10T00:03:03Z",
                          "publishedAt": "2024-02-10T00:03:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the function is used like that:\n    const Real strain_old = this->_effective_inelastic_strain_old[_qp];\n    return _hardening_function->value(strain_old + scalar) - _yield_stress;\n\nso is the 1st column in the same units as the strain?\nand has the yield stress NOT been substrated already from the 2nd column",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8424300",
                          "updatedAt": "2024-02-10T00:09:07Z",
                          "publishedAt": "2024-02-10T00:09:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , yes the first column is the plastic strain, and second is the flow stress, which has yet not been subtracted.",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8424321",
                          "updatedAt": "2024-02-10T00:38:04Z",
                          "publishedAt": "2024-02-10T00:12:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , do you suggest I tabulate with something like this:\nwhere 1500 is the yield stress",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8424389",
                          "updatedAt": "2024-02-10T00:38:25Z",
                          "publishedAt": "2024-02-10T00:26:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "bwspenc"
                  },
                  "bodyText": "Reading this discussion, it sounds like you're using CZM, is that right? Do you have CZMs running on the interfaces right where you're applying the load?\nI would suggest backing off some of the complexity of the model to sort this out (e.g., turning off some of the things like CZMs and plastic material, and just running this with elastic material).",
                  "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8443493",
                  "updatedAt": "2024-02-12T15:54:12Z",
                  "publishedAt": "2024-02-12T15:54:11Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "bwspenc"
                          },
                          "bodyText": "Actually, now that I've gone back in the thread, it sounds like maybe you successfully did just that.",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8443527",
                          "updatedAt": "2024-02-12T15:56:28Z",
                          "publishedAt": "2024-02-12T15:56:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bwspenc"
                          },
                          "bodyText": "I'm really having a tough time following what the issue is from this thread. If you are able to share an input file I can take a look.",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8443563",
                          "updatedAt": "2024-02-12T15:59:04Z",
                          "publishedAt": "2024-02-12T15:59:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @bwspenc @GiudGiud , I tried elastic case where the force worked, but plastic case don't work.",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8443680",
                          "updatedAt": "2024-02-13T23:46:08Z",
                          "publishedAt": "2024-02-12T16:10:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bwspenc"
                          },
                          "bodyText": "Thanks! Could you share the mesh too?",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8444068",
                          "updatedAt": "2024-02-12T16:38:24Z",
                          "publishedAt": "2024-02-12T16:38:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , @bwspenc\nThis is something I found:\nWhen I changed the BC from Load to displacement type keeping everything similar (plastic case) I get a full deformation without breakage of mesh unlike in loads.",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8445334",
                          "updatedAt": "2024-02-13T23:46:26Z",
                          "publishedAt": "2024-02-12T18:36:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bwspenc"
                          },
                          "bodyText": "Is it possible that you were just applying too high of a load with the NodalKernel? I typically use Dirichlet BCs for this sort of thing whenever possible it generally works better in any code.",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8447054",
                          "updatedAt": "2024-02-12T21:27:41Z",
                          "publishedAt": "2024-02-12T21:27:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @bwspenc @GiudGiud , thanks but the problem is I am validating this model that has a loading BC, could you suggest if there is any way because when I have used Dirichlet BCs, the load in the the same nodes goes to higher values (~900), but when. apply a NodalKernel, the same load does not reach that values, its very confusing, please suggest?",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8447113",
                          "updatedAt": "2024-02-12T21:38:11Z",
                          "publishedAt": "2024-02-12T21:36:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bwspenc"
                          },
                          "bodyText": "I believe that you shared the mesh and one of the CSV files earlier today, but I don't see those now. Maybe I'm just missing something! If you can send all the files I need to run this, I can take a look.",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8447314",
                          "updatedAt": "2024-02-12T22:04:32Z",
                          "publishedAt": "2024-02-12T22:04:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bwspenc"
                          },
                          "bodyText": "I tried running your model with both force and displacement control. I added the following postprocessors to look at the average displacements at those two nodes as well as the reaction forces at them individually:\n[Postprocessors]\n  [top_disp]\n    type = NodalL2Norm\n    boundary = 'top_left top_right'\n    variable = disp_y\n  []\n  [top_left_react]\n    type = NodalL2Norm\n    boundary = 'top_left'\n    variable = force_y\n  []\n  [top_right_react]\n    type = NodalL2Norm\n    boundary = 'top_right'\n    variable = force_y\n  []\n[]\n\nIt looks to me like the model is behaving similarly in both cases. You're using pretty large time steps in the model you sent, so after just a few time steps it's getting up to the force level of 1462.5 (90*16.25) where your function plateaus out for a while, and you're getting pretty significant nonlinearity at that point. It seems like it would be expected behavior to end up with yielding right at the supports under those conditions.",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8448078",
                          "updatedAt": "2024-02-13T00:23:44Z",
                          "publishedAt": "2024-02-13T00:23:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @bwspenc , thanks.\nYou mean at say at 90 x 16.25N (around 3600s) the model breaks the mesh because of large loads. In actuality, the final load goes to 468000 s and applies 940 x16.25N load and is not occur as huge plasticity is involved beyond realistic values.\nCan you please check once how it behaves at 468000s?",
                          "url": "https://github.com/idaholab/moose/discussions/26768#discussioncomment-8448163",
                          "updatedAt": "2024-02-13T00:50:22Z",
                          "publishedAt": "2024-02-13T00:36:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}