{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNS0wMi0wMlQwMTo1MToxMi0wNjowMM4AeIy-"
    },
    "edges": [
      {
        "node": {
          "title": "FeatureFloodCount issue",
          "author": {
            "login": "mdh23rct"
          },
          "bodyText": "Dear all,\nI am using FeatureFloodCount to determine the number of two new phases generated in the microstructure. The single phase-field variable has a value of -1 and 1 inside two different phases. Interestingly, FeatureFloodCount is only counting phases having a field value of 1. It is not counting the phases having a value of -1 and therefore, not included in the CSV file. Means, FeatureFloodCount is only considering the phase value range from 0 to 1, while 0 to -1 is neglected. Do I need to adjust something in the FeatureFloodCount so that the entire range 1 to -1 is included in the counting process? Do you have advice for me? Thanks.",
          "url": "https://github.com/idaholab/moose/discussions/29776",
          "updatedAt": "2025-02-05T15:15:42Z",
          "publishedAt": "2025-01-31T12:22:26Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nthat's odd but you can work around that by creating auxiliary variables that are set, using a ParsedAux, to the absolute value or the square of the current variables you are using for detecting features.\nalternatively we would need to add more options to the FeatureFloodCount user object",
                  "url": "https://github.com/idaholab/moose/discussions/29776#discussioncomment-12019207",
                  "updatedAt": "2025-01-31T15:34:58Z",
                  "publishedAt": "2025-01-31T15:34:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mdh23rct"
                          },
                          "bodyText": "@GiudGiud absolute value of the current variable worked. Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/29776#discussioncomment-12070923",
                          "updatedAt": "2025-02-05T15:15:42Z",
                          "publishedAt": "2025-02-05T15:15:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Defining vector-valued current densities, conservation laws, and a Joule heating term",
          "author": {
            "login": "JLB577"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nI'm a beginner to MOOSE, and I'm struggling to understand how to build an input file that encompasses my use case.\nI'm attempting to solve a set of four coupled PDEs relating to semiconductor physics in four variables: psi (electrical potential), n (electron number density), p (hole number density), and T (temperature). I have questions about how to set up these PDEs in a MOOSE input file. My equations look like:\n\n\nPoisson's equation for psi. (I've already successfully set this one up, so I don't have any questions on it.)\n\n\nA conservation law for n: partial n / partial t + div.J_n = 0. Here \"div.J_n\" means the divergence of the electron number density current J_n (a vector field), which is in turn a function of n, T, the gradient of n, the gradient of psi, the gradient of T, and various parameters.\n\n\nA conservation law for p: partial p / partial t + div.J_p = 0. Here \"div.J_p\" means the divergence of the hole number density current J_p (a vector field), which is in turn a function of p, T, the gradient of p, the gradient of psi, the gradient of T, and various parameters.\n\n\nThe thermal equation: rhoc_ppartial T/partial t - E.J + (other terms I already know how to implement) = 0. Here \"E.J\" is the Joule heating term, i.e. the dot product between the electric field vector E = -grad psi and the total current density J = q(J_p - J_n). (rho, c_p, and q are fixed parameters.)\n\n\nI already know how to invoke the appropriate kernels to create the time derivative terms in the PDEs above, as well as to create a few other terms I didn't list explicitly. My questions are:\n\n\nHow do I define the vector fields J_n and J_p with their somewhat complex dependence on the independent variables and their gradients?\n\n\nWhat kernel (if any) do I use to include the terms div.J_n and div.J_p in their respective conservation laws?\n\n\nHow do I define the electric field E = -grad psi vector field for use in the Joule heating term?\n\n\nHow do I define the total current density J = q(J_p - J_n) vector field for use in the Joule heating term?\n\n\nWhat kernel (if any) do I use to include the Joule heating term -E.J in my thermal PDE? Note: I'm aware of the existence of the \"JouleHeatingSource\" kernel. However, it does not have a general enough form for my purposes. It assumes Ohm's law J = sigma E holds, which doesn't apply in my situation. It also appears to have the wrong sign.\n\n\nPlease let me know if I can clarify any of the above, or if there is any other information I should provide. Thanks for any and all help.",
          "url": "https://github.com/idaholab/moose/discussions/29809",
          "updatedAt": "2025-02-05T04:43:54Z",
          "publishedAt": "2025-02-04T18:54:48Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nHow do I define the vector fields J_n and J_p with their somewhat complex dependence on the independent variables and their gradients?\n\nThere are two options:\n\neither define a new material property with an ADRealVectorValue type that computes J_n / J_p. This will let you look at the value of the vector field. Then create a new kernel that computes div (J). This will likely mean that material property will also need to define dJ/dx, dJ/dy etc as properties\ndirectly implement div J_n in a kernel. This is the simplest, but you wont be able to look at J_n unless you create an auxkernel that computes it\n\n\nWhat kernel (if any) do I use to include the terms div.J_n and div.J_p in their respective conservation laws?\n\nThere are quite a few divergence kernels implemented in the MOOSE modules, but I think you may want to code your own. You can look at the Navier Stokes conservation of mass for an example. This one does not use AD. I recommend you use AD\nhttps://mooseframework.inl.gov/source/kernels/INSMass.html\n\nHow do I define the electric field E = -grad psi vector field for use in the Joule heating term?\n\nSince this field depends on a nonlinear variable, you should use a kernel to add this Joule heating term. You can use the Coupleable API in a kernel to retrieve the gradient of a field\nhttps://mooseframework.inl.gov/source/interfaces/Coupleable.html\n\nHow do I define the total current density J = q(J_p - J_n) vector field for use in the Joule heating term?\n\nnew kernel probably unless you find one which fits you already\n\nWhat kernel (if any) do I use to include the Joule heating term -E.J in my thermal PDE? Note: I'm aware of the existence of the \"JouleHeatingSource\" kernel. However, it does not have a general enough form for my purposes. It assumes Ohm's law J = sigma E holds, which doesn't apply in my situation.\n\nProbably make a new kernel then. We wont have an additional JouleHeatingSource kernel.\n\nIt also appears to have the wrong sign.\n\nAre you sure? Kernels compute a residual which is on the left hand side always.",
                  "url": "https://github.com/idaholab/moose/discussions/29809#discussioncomment-12062597",
                  "updatedAt": "2025-02-05T04:43:54Z",
                  "publishedAt": "2025-02-05T04:43:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I get the error below from my simulation\nI have read the debugging procedure on the moose website and even created a debug executable yet I am still confused  how to approach this problem.\nBelow is the error:\netting Up\n  Initializing\n    Finished Initializing Equation Systems                                               [\ufffd[33m  1.04 s\ufffd[39m] [\ufffd[33m  397 MB\ufffd[39m]\n  Finished Initializing                                                                  [\ufffd[33m  1.09 s\ufffd[39m] [\ufffd[33m  397 MB\ufffd[39m]\nUsing EXPERIMENTAL Stateful Material Property projection with Adaptivity!\nFinished Setting Up                                                                      [\ufffd[33m  1.42 s\ufffd[39m] [\ufffd[33m  397 MB\ufffd[39m]\nFramework Information:\nMOOSE Version:           git commit d438806199 on 2025-01-17\nLibMesh Version:         \nPETSc Version:           3.22.1\nSLEPc Version:           3.22.1\nCurrent Time:            Fri Jan 31 16:02:28 2025\nExecutable Timestamp:    Fri Jan 17 02:55:05 2025\n\nInput File(s):\n  /home/emmanuel324/projects/belson324/Crystal_Plasticity/1-31-25/Test1/New_work5.i\n\nCheckpoint:\n  Wall Time Interval:      Every 3600 s\n  User Checkpoint:         Disabled\n  # Checkpoints Kept:      2\n  Execute On:              TIMESTEP_END \n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   56827\n  Elems:                   52497\n  Num Subdomains:          1\n\nNonlinear System:\n  Num DOFs:                227308\n  Num Local DOFs:          227308\n  Variables:               { \"disp_x\" \"disp_y\" \"eta0\" \"eta1\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                371809\n  Num Local DOFs:          371809\n  Variables:               \"vonmises\" \"stress_xx\" \"temperature\" { \"eth_xx\" \"eth_yy\" \"fth_xx\" \"fth_yy\" \n                             } \n  Finite Element Types:    \"MONOMIAL\" \"MONOMIAL\" \"LAGRANGE\" \"MONOMIAL\" \n  Approximation Orders:    \"CONSTANT\" \"CONSTANT\" \"FIRST\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             IterationAdaptiveDT\n  TimeIntegrator(s):       ImplicitEuler\n  Solver Mode:             Preconditioned JFNK\n  PETSc Preconditioner:    lu mat_superlu_dist_fact: SamePattern  mat_superlu_dist_replacetinypivot: true \n  MOOSE Preconditioner:    SMP\n\nCurrently Executing\n  Performing Initial Setup\n    Finished Setting Up Initial Conditions                                               [\ufffd[33m  0.52 s\ufffd[39m] [\ufffd[33m  894 MB\ufffd[39m]\n    Setting Up Materials\n      Finished Computing Initial Material Values                                         [\ufffd[33m  1.25 s\ufffd[39m] [\ufffd[33m 1738 MB\ufffd[39m]\n    Finished Setting Up Materials                                                        [\ufffd[33m  1.25 s\ufffd[39m] [\ufffd[33m 1738 MB\ufffd[39m]\n    Currently Performing Initial Adaptivity\n      Handling Mesh Changes..                                                            [\ufffd[33m 20.86 s\ufffd[39m] [\ufffd[33m 4301 MB\ufffd[39m]\n    Finished Performing Initial Adaptivity                                               [\ufffd[33m 26.32 s\ufffd[39m] [\ufffd[33m 4351 MB\ufffd[39m]\n  Finished Performing Initial Setup                                                      [\ufffd[33m 32.95 s\ufffd[39m] [\ufffd[33m 4386 MB\ufffd[39m]\n  Outputting\n    Outputting Step\n      Handling Mesh Changes.                                                             [\ufffd[33m 14.66 s\ufffd[39m] [\ufffd[33m 4735 MB\ufffd[39m]\n    Finished Outputting Step                                                             [\ufffd[33m 16.86 s\ufffd[39m] [\ufffd[33m 4735 MB\ufffd[39m]\n\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n| time           | eth_xx         | eth_yy         | fth_xx         | fth_yy         | stress_xx      | temperature    |\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n  Finished Outputting                                                                    [\ufffd[33m 16.87 s\ufffd[39m] [\ufffd[33m 4735 MB\ufffd[39m]\n\nTime Step 1, time = 5e-08, dt = 5e-08\n\n    Computing Residual....                                                               [\ufffd[33m 27.78 s\ufffd[39m] [\ufffd[33m 4735 MB\ufffd[39m]\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian......                                                             [\ufffd[33m 35.94 s\ufffd[39m] [\ufffd[33m 4939 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual.....                                                              [\ufffd[33m 32.23 s\ufffd[39m] [\ufffd[33m 8747 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 32.20 s\ufffd[39m] [\ufffd[33m 8747 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 31.77 s\ufffd[39m] [\ufffd[33m 8802 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819610e+02\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 30.16 s\ufffd[39m] [\ufffd[33m 8802 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.681539e-01\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 30.19 s\ufffd[39m] [\ufffd[33m 8802 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m249.51 s\ufffd[39m] [\ufffd[33m 6646 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 2.5e-08, dt = 2.5e-08\n\n    Computing Residual....                                                               [\ufffd[33m 26.06 s\ufffd[39m] [\ufffd[33m 6652 MB\ufffd[39m]\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian......                                                             [\ufffd[33m 35.11 s\ufffd[39m] [\ufffd[33m 6653 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual.....                                                              [\ufffd[33m 32.00 s\ufffd[39m] [\ufffd[33m 8862 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 31.72 s\ufffd[39m] [\ufffd[33m 8862 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 32.82 s\ufffd[39m] [\ufffd[33m 8917 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819615e+02\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 32.87 s\ufffd[39m] [\ufffd[33m 8917 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.679795e-01\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 31.14 s\ufffd[39m] [\ufffd[33m 8917 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m247.58 s\ufffd[39m] [\ufffd[33m 7053 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.25e-08, dt = 1.25e-08\n\n    Computing Residual....                                                               [\ufffd[33m 26.29 s\ufffd[39m] [\ufffd[33m 7054 MB\ufffd[39m]\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.....                                                              [\ufffd[33m 34.36 s\ufffd[39m] [\ufffd[33m 7054 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....                                                               [\ufffd[33m 29.51 s\ufffd[39m] [\ufffd[33m 8863 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 31.05 s\ufffd[39m] [\ufffd[33m 8863 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 32.76 s\ufffd[39m] [\ufffd[33m 8918 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819612e+02\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 33.19 s\ufffd[39m] [\ufffd[33m 8918 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.681913e-01\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 32.13 s\ufffd[39m] [\ufffd[33m 8918 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m246.54 s\ufffd[39m] [\ufffd[33m 7346 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 6.25e-09, dt = 6.25e-09\n\n    Computing Residual....                                                               [\ufffd[33m 27.54 s\ufffd[39m] [\ufffd[33m 7346 MB\ufffd[39m]\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian......                                                             [\ufffd[33m 35.78 s\ufffd[39m] [\ufffd[33m 7346 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....                                                               [\ufffd[33m 29.61 s\ufffd[39m] [\ufffd[33m 8871 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 30.83 s\ufffd[39m] [\ufffd[33m 8871 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 30.68 s\ufffd[39m] [\ufffd[33m 8926 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819610e+02\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 30.20 s\ufffd[39m] [\ufffd[33m 8926 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.680848e-01\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 31.54 s\ufffd[39m] [\ufffd[33m 8926 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m239.30 s\ufffd[39m] [\ufffd[33m 7556 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.125e-09, dt = 3.125e-09\n\n    Computing Residual....                                                               [\ufffd[33m 27.87 s\ufffd[39m] [\ufffd[33m 7556 MB\ufffd[39m]\n    |residual|_2 of individual variables:\n                     disp_x: 213504\n                     disp_y: 106835\n                     eta0:   0\n                     eta1:   0\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian......                                                             [\ufffd[33m 36.35 s\ufffd[39m] [\ufffd[33m 7556 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual.....                                                              [\ufffd[33m 31.70 s\ufffd[39m] [\ufffd[33m 9040 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238451e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 31.55 s\ufffd[39m] [\ufffd[33m 9040 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419122e+04\ufffd[39m\n    Computing Residual.....                                                              [\ufffd[33m 31.67 s\ufffd[39m] [\ufffd[33m 9040 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819611e+02\ufffd[39m\n    Computing Residual...\n\nBelow is my input script.\n[Mesh]\n  [file]\n     type = FileMeshGenerator\n     file = Two_phase_noload_out.e-s183\n     use_for_exodus_restart = true\n     \n   []\n []\n[Problem]\n  allow_initial_conditions_with_restart = true\n[]\n [Variables]\n  [./disp_x]\n  [../]\n  [./disp_y]\n  [../]\n   \n  \n  # order parameter 0\n  [./eta0]\n    initial_from_file_var = eta1\n  [../]\n  # order parameter 1\n  [./eta1]\n    initial_from_file_var = eta3\n  [../]\n  []\n  [ICs]\n    [./eta1]\n      variable = eta1\n      type = RandomIC\n      min = -0.1625\n      max = 0.1625\n      seed = 192\n    [../]\n  []\n[AuxVariables]\n  [./vonmises]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./stress_xx]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 0\n  [../]\n  [temperature]\n    order = FIRST\n    family = LAGRANGE\n  []\n  [eth_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [eth_yy]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  \n  [fth_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [fth_yy]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  \n[]\n\n\n[AuxKernels]\n  [./vonmises]\n    type = RankTwoScalarAux\n    rank_two_tensor = stress\n    variable = vonmises\n    scalar_type = VonMisesStress\n    execute_on = timestep_end\n#   block = 0\n  [../]\n  [./stress_xx]\n    type = RankTwoAux\n    rank_two_tensor = stress\n    variable = stress_xx\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n    block = 0\n  [../]\n  [temperature]\n    type = FunctionAux\n    variable = temperature\n    function = '300' # temperature increases at a constant rate\n    execute_on = timestep_begin\n  []\n  [eth_xx]\n    type = RankTwoAux\n    variable = eth_xx\n    rank_two_tensor =  phase0_thermal_eigenstrain\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n  []\n  [eth_yy]\n    type = RankTwoAux\n    variable = eth_yy\n    rank_two_tensor = phase0_thermal_eigenstrain\n    index_j = 1\n    index_i = 1\n    execute_on = timestep_end\n  []\n  \n  [fth_xx]\n    type = RankTwoAux\n    variable = fth_xx\n    rank_two_tensor = phase0_thermal_deformation_gradient\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n  []\n  [fth_yy]\n    type = RankTwoAux\n    variable = fth_yy\n    rank_two_tensor = phase0_thermal_deformation_gradient\n    index_j = 1\n    index_i = 1\n    execute_on = timestep_end\n  []\n  \n[]\n\n[BCs]\n  [symmy]\n    type = DirichletBC\n    variable = disp_y\n    boundary = bottom\n    value = 0\n  []\n  [symmx]\n    type = DirichletBC\n    variable = disp_x\n    boundary = left\n    value = 0\n  []\n  \n  [tdisp]\n    type = FunctionDirichletBC\n    variable = disp_x\n    boundary = right\n    function = '0.1*t'\n  []\n[]\n\n[Materials]\n  [elasticity_tensor_phase0]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '2.906e5 1.87e5 1.87e5 2.906e5 1.87e5 2.906e5 1.142e5 1.142e5 1.142e5'\n    fill_method = symmetric9\n    base_name = phase0\n  []\n  [stress_phase0]\n    type = ComputeMultipleCrystalPlasticityStress_abs\n    crystal_plasticity_models = 'trial_xtalpl_phase0'\n    eigenstrain_names = 'thermal_eigenstrain'\n    tan_mod_type = exact\n    rtol = 1e-08\n    base_name = phase0\n  []\n  \n  [trial_xtalpl_phase0]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    crystal_lattice_type = FCC\n    resistance_tol = 0.01\n    r = 1.0             \n    h = 6000            \n    t_sat = 598.5        \n    gss_a = 1.5         \n    ao = 0.001           \n    xm = 0.017             \n    gss_initial = 400\n    base_name = phase0\n  []\n  [thermal_eigenstrain]\n    type = ComputeCrystalPlasticityThermalEigenstrain\n    eigenstrain_name = thermal_eigenstrain\n    deformation_gradient_name = thermal_deformation_gradient\n    temperature = temperature\n    thermal_expansion_coefficients = '12.8e-06 12.8e-06 12.8e-06'\n    base_name = phase0\n  []\n  \n  [./strain_phase0]\n    type = ComputeFiniteStrain\n    displacements = 'disp_x disp_y'\n    base_name = phase0\n   # eigenstrain_names = 'eigenstrain_phase0'\n  [../]\n\n  \n  [elasticity_tensor_phase1]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '2.721e5 1.69e5 1.69e5 2.721e5 1.69e5 2.721e5 1.31e5 1.31e5 1.31e5'\n    fill_method = symmetric9\n    base_name = phase1\n  []\n  [stress_phase1]\n    type = ComputeMultipleCrystalPlasticityStress_abs\n    crystal_plasticity_models = 'trial_xtalpl_phase1'\n    tan_mod_type = exact\n    rtol = 1e-08\n    base_name = phase1\n  []\n  [trial_xtalpl_phase1]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    crystal_lattice_type = FCC\n    resistance_tol = 0.01\n    r = 1.0             \n    h = 6000            \n    t_sat = 598.5        \n    gss_a = 1.5         \n    ao = 0.001           \n    xm = 0.017             \n    gss_initial = 316 \n    base_name = phase1\n  [] \n  [./strain_phase1]\n    type = ComputeFiniteStrain\n    displacements = 'disp_x disp_y'\n    base_name = phase1\n  [../]\n \n   # Switching functions for each phase\n   [./h0]\n    type = SwitchingFunctionMultiPhaseMaterial\n    phase_etas = eta0\n    all_etas = 'eta0 eta1'\n    h_name = h0\n  [../]\n  [./h1]\n    type = SwitchingFunctionMultiPhaseMaterial\n    phase_etas = eta1\n    all_etas = 'eta0 eta1'\n    h_name = h1\n  [../]\n \n  # Generate the global stress from the phase stresses\n  [./global_stress]\n    type = MultiPhaseStressMaterial\n    phase_base = 'phase0 phase1'\n    h          = 'h0     h1'\n  [../]\n[]\n\n[Kernels]\n  [./eta0_dt]\n    type = TimeDerivative\n    variable = eta0\n  [../]\n  [./eta1_dt]\n    type = TimeDerivative\n    variable = eta1\n  [../]\n  [./TensorMechanics]\n    displacements = 'disp_x disp_y'\n    strain = FINITE\n    incremental = true\n    add_variables = true\n    generate_output = stress_xx\n  [../]\n[]\n\n[Postprocessors]\n  [stress_xx]\n    type = ElementAverageValue\n    variable = stress_xx\n  []\n  [eth_xx]\n    type = ElementAverageValue\n    variable = eth_xx\n  []\n  [eth_yy]\n    type = ElementAverageValue\n    variable = eth_yy\n  []\n  \n  [fth_xx]\n    type = ElementAverageValue\n    variable = fth_xx\n  []\n  [fth_yy]\n    type = ElementAverageValue\n    variable = fth_yy\n  []\n  \n  [temperature]\n    type = ElementAverageValue\n    variable = temperature\n  []\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n\n  petsc_options_iname = '-pc_type -pc_factor_mat_solver_package -snes_type'\n  petsc_options_value = 'lu            superlu_dist          vinewtonrsls'  \n\n#  petsc_options_iname = '-pc_type -pc_asm_overlap -sub_pc_type -ksp_type -ksp_gmres_restart'\n#  petsc_options_value = ' asm      2              lu            gmres     200'\n  l_max_its = 20\n  nl_max_its = 10\n  nl_rel_tol = 1.0e-8\n  nl_abs_tol = 1.0e-9\n\n  end_time = 100\n\n  [./TimeStepper]\n    type = IterationAdaptiveDT\n    dt = 5e-8\n    cutback_factor = 0.75\n    growth_factor = 1.2\n    optimal_iterations = 20\n  [../]\n  \n    [./Adaptivity]\n      initial_adaptivity = 1\n      refine_fraction = 0.6\n      coarsen_fraction = 0.1\n      max_h_level = 1\n    [../]\n  \n\n[]\n\n[Outputs]\n  csv = true\n  exodus = true\n  print_linear_residuals = true\n  [console]\n    type = Console\n    max_rows = 5\n  []\n[]\n\n[Debug]\n  show_var_residual_norms = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/29779",
          "updatedAt": "2025-02-04T19:40:57Z",
          "publishedAt": "2025-01-31T21:27:14Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis is not a bug you dont need to use a debug version.\nit s a physics model issue. see this failure in the log\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.",
                  "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12022810",
                  "updatedAt": "2025-01-31T22:45:40Z",
                  "publishedAt": "2025-01-31T22:45:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "What is your suggestion for this type of error.",
                          "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12045265",
                          "updatedAt": "2025-02-03T17:29:30Z",
                          "publishedAt": "2025-02-03T17:29:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You ll have to debug the materials. One of them is failing. Using a debugger you can step into the properties and print their values",
                          "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12046214",
                          "updatedAt": "2025-02-03T18:51:37Z",
                          "publishedAt": "2025-02-03T18:51:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Is this what you mean by using a debugger  /home/emmanuel324/projects/belson324/belson324-dbg  -i  New_work5_a.i\nBelow is the .out file of the input script above\nResetting modules to system default. Reseting $MODULEPATH back to system default. All extra directories will be removed from $MODULEPATH.\n\n\ufffd[33m\n*** Warning, This code is deprecated and will be removed in future versions:\n/home/emmanuel324/projects/belson324/Crystal_Plasticity/1-31-25/Test3/New_work5_a.i:270.3: The 'Kernels/TensorMechanics' syntax is deprecated. Please use 'Physics/SolidMechanics/QuasiStatic' instead.\ufffd[39m\nStack frames: 17\n0: libMesh::print_trace(std::ostream&)\n1: void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(libMesh::BasicOStreamProxy<char, std::char_traits<char> >&, bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n2: void mooseDeprecated<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n3: Moose::Builder::walkRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, hit::Node*)\n4: Moose::Builder::walk(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, hit::Node*)\n5: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n6: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n7: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n8: /home/emmanuel324/projects/moose/framework/libmoose-dbg.so.0(+0x230b18a) [0x155552efd18a]\n9: Moose::Builder::build()\n10: MooseApp::setupOptions()\n11: MooseApp::run()\n12: /home/emmanuel324/projects/belson324/belson324-dbg(+0x7d8c) [0x55555555bd8c]\n13: main\n14: /lib64/libc.so.6(+0x295d0) [0x1555386295d0]\n15: __libc_start_main\n16: /home/emmanuel324/projects/belson324/belson324-dbg(+0x6079) [0x55555555a079]\n\n\n\nActive Materials:\n    Subdomain:  (0)\n      Material Name:       elasticity_tensor_phase0\n      Property Names:      \"phase0_Euler_angles\" \"phase0_crysrot\" \"phase0_effective_stiffness\" \"phase0_elasticity_tensor\" \n                             \n      Material Name:       stress_phase0\n      Property Names:      \"eigenstrain_deformation_gradient\" \"phase0_Jacobian_mult\" \"phase0_elastic_strain\" \n                             \"phase0_plastic_deformation_gradient\" \"phase0_rotation_total\" \"phase0_second_piola_kirchhoff_stress\" \n                             \"phase0_stress\" \"phase0_total_lagrangian_strain\" \"phase0_updated_rotation\" \n                             \n      Material Name:       trial_xtalpl_phase0\n      Property Names:      \"phase0_applied_shear_stress\" \"phase0_flow_direction\" \"phase0_slip_increment\" \n                             \"phase0_slip_resistance\" \n      Material Name:       eigenstrain_0\n      Property Names:      \"dphase0_deformation_gradient_1/dtemperature\" \"phase0_deformation_gradient_1\" \n                             \"phase0_eigenstrain_0\" \"phase0_eigenstrain_0_lattice_thermal_expansion_coefficients\" \n                             \n      Material Name:       strain_phase0\n      Property Names:      \"phase0_deformation_gradient\" \"phase0_mechanical_strain\" \"phase0_rotation_increment\" \n                             \"phase0_strain_increment\" \"phase0_strain_rate\" \"phase0_total_strain\" \n      Material Name:       elasticity_tensor_phase1\n      Property Names:      \"phase1_Euler_angles\" \"phase1_crysrot\" \"phase1_effective_stiffness\" \"phase1_elasticity_tensor\" \n                             \n      Material Name:       stress_phase1\n      Property Names:      \"phase1_Jacobian_mult\" \"phase1_elastic_strain\" \"phase1_plastic_deformation_gradient\" \n                             \"phase1_rotation_total\" \"phase1_second_piola_kirchhoff_stress\" \"phase1_stress\" \n                             \"phase1_total_lagrangian_strain\" \"phase1_updated_rotation\" \n      Material Name:       trial_xtalpl_phase1\n      Property Names:      \"phase1_applied_shear_stress\" \"phase1_flow_direction\" \"phase1_slip_increment\" \n                             \"phase1_slip_resistance\" \n      Material Name:       strain_phase1\n      Property Names:      \"phase1_deformation_gradient\" \"phase1_mechanical_strain\" \"phase1_rotation_increment\" \n                             \"phase1_strain_increment\" \"phase1_strain_rate\" \"phase1_total_strain\" \n      Material Name:       h0\n      Property Names:      \"d^2h0/deta0^2\" \"d^2h0/deta0deta1\" \"d^2h0/deta1^2\" \"dh0/deta0\" \"dh0/deta1\" \n                             \"h0\" \n      Material Name:       h1\n      Property Names:      \"d^2h1/deta0^2\" \"d^2h1/deta0deta1\" \"d^2h1/deta1^2\" \"dh1/deta0\" \"dh1/deta1\" \n                             \"h1\" \n      Material Name:       global_stress\n      Property Names:      \"Jacobian_mult\" \"stress\" \n\n    Active Face Materials:\n    Subdomain:  (0)\n      Material Name:       elasticity_tensor_phase0_face\n      Property Names:      \"phase0_Euler_angles\" \"phase0_crysrot\" \"phase0_effective_stiffness\" \"phase0_elasticity_tensor\" \n                             \n      Material Name:       stress_phase0_face\n      Property Names:      \"eigenstrain_deformation_gradient\" \"phase0_Jacobian_mult\" \"phase0_elastic_strain\" \n                             \"phase0_plastic_deformation_gradient\" \"phase0_rotation_total\" \"phase0_second_piola_kirchhoff_stress\" \n                             \"phase0_stress\" \"phase0_total_lagrangian_strain\" \"phase0_updated_rotation\" \n                             \n      Material Name:       trial_xtalpl_phase0_face\n      Property Names:      \"phase0_applied_shear_stress\" \"phase0_flow_direction\" \"phase0_slip_increment\" \n                             \"phase0_slip_resistance\" \n      Material Name:       eigenstrain_0_face\n      Property Names:      \"dphase0_deformation_gradient_1/dtemperature\" \"phase0_deformation_gradient_1\" \n                             \"phase0_eigenstrain_0\" \"phase0_eigenstrain_0_lattice_thermal_expansion_coefficients\" \n                             \n      Material Name:       strain_phase0_face\n      Property Names:      \"phase0_deformation_gradient\" \"phase0_mechanical_strain\" \"phase0_rotation_increment\" \n                             \"phase0_strain_increment\" \"phase0_strain_rate\" \"phase0_total_strain\" \n      Material Name:       elasticity_tensor_phase1_face\n      Property Names:      \"phase1_Euler_angles\" \"phase1_crysrot\" \"phase1_effective_stiffness\" \"phase1_elasticity_tensor\" \n                             \n      Material Name:       stress_phase1_face\n      Property Names:      \"phase1_Jacobian_mult\" \"phase1_elastic_strain\" \"phase1_plastic_deformation_gradient\" \n                             \"phase1_rotation_total\" \"phase1_second_piola_kirchhoff_stress\" \"phase1_stress\" \n                             \"phase1_total_lagrangian_strain\" \"phase1_updated_rotation\" \n      Material Name:       trial_xtalpl_phase1_face\n      Property Names:      \"phase1_applied_shear_stress\" \"phase1_flow_direction\" \"phase1_slip_increment\" \n                             \"phase1_slip_resistance\" \n      Material Name:       strain_phase1_face\n      Property Names:      \"phase1_deformation_gradient\" \"phase1_mechanical_strain\" \"phase1_rotation_increment\" \n                             \"phase1_strain_increment\" \"phase1_strain_rate\" \"phase1_total_strain\" \n      Material Name:       h0_face\n      Property Names:      \"d^2h0/deta0^2\" \"d^2h0/deta0deta1\" \"d^2h0/deta1^2\" \"dh0/deta0\" \"dh0/deta1\" \n                             \"h0\" \n      Material Name:       h1_face\n      Property Names:      \"d^2h1/deta0^2\" \"d^2h1/deta0deta1\" \"d^2h1/deta1^2\" \"dh1/deta0\" \"dh1/deta1\" \n                             \"h1\" \n      Material Name:       global_stress_face\n      Property Names:      \"Jacobian_mult\" \"stress\" \n\nActive Neighboring Materials:\n    Subdomain:  (0)\n      Material Name:       elasticity_tensor_phase0_neighbor\n      Property Names:      \"phase0_Euler_angles\" \"phase0_crysrot\" \"phase0_effective_stiffness\" \"phase0_elasticity_tensor\" \n                             \n      Material Name:       stress_phase0_neighbor\n      Property Names:      \"eigenstrain_deformation_gradient\" \"phase0_Jacobian_mult\" \"phase0_elastic_strain\" \n                             \"phase0_plastic_deformation_gradient\" \"phase0_rotation_total\" \"phase0_second_piola_kirchhoff_stress\" \n                             \"phase0_stress\" \"phase0_total_lagrangian_strain\" \"phase0_updated_rotation\" \n                             \n      Material Name:       trial_xtalpl_phase0_neighbor\n      Property Names:      \"phase0_applied_shear_stress\" \"phase0_flow_direction\" \"phase0_slip_increment\" \n                             \"phase0_slip_resistance\" \n      Material Name:       eigenstrain_0_neighbor\n      Property Names:      \"dphase0_deformation_gradient_1/dtemperature\" \"phase0_deformation_gradient_1\" \n                             \"phase0_eigenstrain_0\" \"phase0_eigenstrain_0_lattice_thermal_expansion_coefficients\" \n                             \n      Material Name:       strain_phase0_neighbor\n      Property Names:      \"phase0_deformation_gradient\" \"phase0_mechanical_strain\" \"phase0_rotation_increment\" \n                             \"phase0_strain_increment\" \"phase0_strain_rate\" \"phase0_total_strain\" \n      Material Name:       elasticity_tensor_phase1_neighbor\n      Property Names:      \"phase1_Euler_angles\" \"phase1_crysrot\" \"phase1_effective_stiffness\" \"phase1_elasticity_tensor\" \n                             \n      Material Name:       stress_phase1_neighbor\n      Property Names:      \"phase1_Jacobian_mult\" \"phase1_elastic_strain\" \"phase1_plastic_deformation_gradient\" \n                             \"phase1_rotation_total\" \"phase1_second_piola_kirchhoff_stress\" \"phase1_stress\" \n                             \"phase1_total_lagrangian_strain\" \"phase1_updated_rotation\" \n      Material Name:       trial_xtalpl_phase1_neighbor\n      Property Names:      \"phase1_applied_shear_stress\" \"phase1_flow_direction\" \"phase1_slip_increment\" \n                             \"phase1_slip_resistance\" \n      Material Name:       strain_phase1_neighbor\n      Property Names:      \"phase1_deformation_gradient\" \"phase1_mechanical_strain\" \"phase1_rotation_increment\" \n                             \"phase1_strain_increment\" \"phase1_strain_rate\" \"phase1_total_strain\" \n      Material Name:       h0_neighbor\n      Property Names:      \"d^2h0/deta0^2\" \"d^2h0/deta0deta1\" \"d^2h0/deta1^2\" \"dh0/deta0\" \"dh0/deta1\" \n                             \"h0\" \n      Material Name:       h1_neighbor\n      Property Names:      \"d^2h1/deta0^2\" \"d^2h1/deta0deta1\" \"d^2h1/deta1^2\" \"dh1/deta0\" \"dh1/deta1\" \n                             \"h1\" \n      Material Name:       global_stress_neighbor\n      Property Names:      \"Jacobian_mult\" \"stress\" \n\nActive Boundary Materials:\n                           \nCurrently Setting Up\n  Initializing\n    Initializing Equation Systems.......                                                 [\ufffd[33m 45.29 s\ufffd[39m] [\ufffd[33m  493 MB\ufffd[39m]\n  Finished Initializing                                                                  [\ufffd[33m 45.87 s\ufffd[39m] [\ufffd[33m  493 MB\ufffd[39m]\nUsing EXPERIMENTAL Stateful Material Property projection with Adaptivity!\nFinished Setting Up                                                                      [\ufffd[33m 52.59 s\ufffd[39m] [\ufffd[33m  493 MB\ufffd[39m]\nFramework Information:\nMOOSE Version:           git commit d438806199 on 2025-01-17\nLibMesh Version:         \nPETSc Version:           3.22.1\nSLEPc Version:           3.22.1\nCurrent Time:            Fri Jan 31 16:07:12 2025\nExecutable Timestamp:    Fri Jan 31 15:28:40 2025\n\nInput File(s):\n  /home/emmanuel324/projects/belson324/Crystal_Plasticity/1-31-25/Test3/New_work5_a.i\n\nCheckpoint:\n  Wall Time Interval:      Every 3600 s\n  User Checkpoint:         Disabled\n  # Checkpoints Kept:      2\n  Execute On:              TIMESTEP_END \n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   56827\n  Elems:                   52497\n  Num Subdomains:          1\n\nNonlinear System:\n  Num DOFs:                227308\n  Num Local DOFs:          227308\n  Variables:               { \"disp_x\" \"disp_y\" \"eta0\" \"eta1\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                371809\n  Num Local DOFs:          371809\n  Variables:               \"vonmises\" \"stress_xx\" \"temperature\" { \"eth_xx\" \"eth_yy\" \"fth_xx\" \"fth_yy\" \n                             } \n  Finite Element Types:    \"MONOMIAL\" \"MONOMIAL\" \"LAGRANGE\" \"MONOMIAL\" \n  Approximation Orders:    \"CONSTANT\" \"CONSTANT\" \"FIRST\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             IterationAdaptiveDT\n  TimeIntegrator(s):       ImplicitEuler\n  Solver Mode:             Preconditioned JFNK\n  PETSc Preconditioner:    lu mat_superlu_dist_fact: SamePattern  mat_superlu_dist_replacetinypivot: true \n  MOOSE Preconditioner:    SMP\n\nCurrently Executing\n  Performing Initial Setup\n    Finished Setting Up Initial Conditions                                               [\ufffd[33m  1.14 s\ufffd[39m] [\ufffd[33m  989 MB\ufffd[39m]\n    Projecting Initial Solutions..                                                       [\ufffd[33m 24.54 s\ufffd[39m] [\ufffd[33m  993 MB\ufffd[39m]\n    Currently Setting Up Materials\n      Computing Initial Material Values...                                               [\ufffd[33m 29.19 s\ufffd[39m] [\ufffd[33m 1833 MB\ufffd[39m]\n    Finished Setting Up Materials                                                        [\ufffd[33m 29.19 s\ufffd[39m] [\ufffd[33m 1833 MB\ufffd[39m]\n    Performing Initial Adaptivity\n      Adapting Mesh........                                                              [\ufffd[33m 51.15 s\ufffd[39m] [\ufffd[33m 1898 MB\ufffd[39m]\n      Currently Handling Mesh Changes............................................................................................................ [\ufffd[33m553.74 s\ufffd[39m] [\ufffd[33m 4400 MB\ufffd[39m]\n      Projecting Initial Solutions.............                                          [\ufffd[33m 77.41 s\ufffd[39m] [\ufffd[33m 4452 MB\ufffd[39m]\n    Finished Performing Initial Adaptivity                                               [\ufffd[33m682.30 s\ufffd[39m] [\ufffd[33m 4452 MB\ufffd[39m]\n    Finished Building SemiLocalElemMap                                                   [\ufffd[33m  8.53 s\ufffd[39m] [\ufffd[33m 4465 MB\ufffd[39m]\n    Computing Initial Material Properties.............                                   [\ufffd[33m 77.68 s\ufffd[39m] [\ufffd[33m 4485 MB\ufffd[39m]\n  Finished Performing Initial Setup                                                      [\ufffd[33m827.16 s\ufffd[39m] [\ufffd[33m 4485 MB\ufffd[39m]\n  Outputting\n    Outputting Step...\n      Handling Mesh Changes........................................................................ [\ufffd[33m374.27 s\ufffd[39m] [\ufffd[33m 4835 MB\ufffd[39m]\n    Still Outputting Step.                                                               [\ufffd[33m414.60 s\ufffd[39m] [\ufffd[33m 4835 MB\ufffd[39m]\n\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n| time           | eth_xx         | eth_yy         | fth_xx         | fth_yy         | stress_xx      | temperature    |\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n\n\nConsumed Material Properties:\n      Object: AuxKernel::eth_xx\n  Properties: eigenstrain_deformation_gradient\n\n      Object: AuxKernel::eth_yy\n  Properties: eigenstrain_deformation_gradient\n\n      Object: AuxKernel::fth_xx\n  Properties: phase0_deformation_gradient_1\n\n      Object: AuxKernel::fth_yy\n  Properties: phase0_deformation_gradient_1\n\n      Object: AuxKernel::stress_xx\n  Properties: stress\n\n      Object: AuxKernel::vonmises\n  Properties: stress\n\n      Object: Kernel::TM_TensorMechanics0\n  Properties: Jacobian_mult, stress\n\n      Object: Kernel::TM_TensorMechanics1\n  Properties: Jacobian_mult, stress\n\n      Object: MaterialBase::eigenstrain_0\n  Properties: phase0_crysrot\n\n      Object: MaterialBase::eigenstrain_0_face\n  Properties: phase0_crysrot\n\n      Object: MaterialBase::eigenstrain_0_neighbor\n  Properties: phase0_crysrot\n\n      Object: MaterialBase::global_stress\n  Properties: h0, h1, phase0_Jacobian_mult, phase0_stress, phase1_Jacobian_mult, phase1_stress\n\n      Object: MaterialBase::global_stress_face\n  Properties: h0, h1, phase0_Jacobian_mult, phase0_stress, phase1_Jacobian_mult, phase1_stress\n\n      Object: MaterialBase::global_stress_neighbor\n  Properties: h0, h1, phase0_Jacobian_mult, phase0_stress, phase1_Jacobian_mult, phase1_stress\n\n      Object: MaterialBase::stress_phase0\n  Properties: phase0_crysrot, phase0_deformation_gradient, phase0_elasticity_tensor, phase0_mechanical_strain, phase0_rotation_increment, phase0_strain_increment\n\n      Object: MaterialBase::stress_phase0_face\n  Properties: phase0_crysrot, phase0_deformation_gradient, phase0_elasticity_tensor, phase0_mechanical_strain, phase0_rotation_increment, phase0_strain_increment\n\n      Object: MaterialBase::stress_phase0_neighbor\n  Properties: phase0_crysrot, phase0_deformation_gradient, phase0_elasticity_tensor, phase0_mechanical_strain, phase0_rotation_increment, phase0_strain_increment\n\n      Object: MaterialBase::stress_phase1\n  Properties: phase1_crysrot, phase1_deformation_gradient, phase1_elasticity_tensor, phase1_mechanical_strain, phase1_rotation_increment, phase1_strain_increment\n\n      Object: MaterialBase::stress_phase1_face\n  Properties: phase1_crysrot, phase1_deformation_gradient, phase1_elasticity_tensor, phase1_mechanical_strain, phase1_rotation_increment, phase1_strain_increment\n\n      Object: MaterialBase::stress_phase1_neighbor\n  Properties: phase1_crysrot, phase1_deformation_gradient, phase1_elasticity_tensor, phase1_mechanical_strain, phase1_rotation_increment, phase1_strain_increment\n\n\n  Finished Outputting                                                                    [\ufffd[33m414.61 s\ufffd[39m] [\ufffd[33m 4835 MB\ufffd[39m]\n\nTime Step 1, time = 5e-08, dt = 5e-08\nStill Executing.\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1105.97 s\ufffd[39m] [\ufffd[33m 4840 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian........................................................................................................................................................................................................................................ [\ufffd[33m1165.95 s\ufffd[39m] [\ufffd[33m 5040 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual......................................................................................................................................................................................................................... [\ufffd[33m1091.66 s\ufffd[39m] [\ufffd[33m 8851 MB\ufffd[39m]\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.22 s\ufffd[39m] [\ufffd[33m 8851 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1089.31 s\ufffd[39m] [\ufffd[33m 8852 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1102.34 s\ufffd[39m] [\ufffd[33m 8907 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819610e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................. [\ufffd[33m1111.05 s\ufffd[39m] [\ufffd[33m 8907 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.681539e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1083.33 s\ufffd[39m] [\ufffd[33m 9065 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8856.44 s\ufffd[39m] [\ufffd[33m 6853 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 2.5e-08, dt = 2.5e-08\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.44 s\ufffd[39m] [\ufffd[33m 6853 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1068.85 s\ufffd[39m] [\ufffd[33m 6853 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1003.68 s\ufffd[39m] [\ufffd[33m 8919 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1078.73 s\ufffd[39m] [\ufffd[33m 8962 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1088.06 s\ufffd[39m] [\ufffd[33m 9011 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.53 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819615e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1109.44 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.679795e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1081.10 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8560.64 s\ufffd[39m] [\ufffd[33m 7472 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.25e-08, dt = 1.25e-08\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.42 s\ufffd[39m] [\ufffd[33m 7472 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1069.12 s\ufffd[39m] [\ufffd[33m 7472 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.10 s\ufffd[39m] [\ufffd[33m 9007 MB\ufffd[39m]\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.02 s\ufffd[39m] [\ufffd[33m 9007 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1088.79 s\ufffd[39m] [\ufffd[33m 9007 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.08 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819612e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1109.54 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.681913e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1081.28 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8564.04 s\ufffd[39m] [\ufffd[33m 7490 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 6.25e-09, dt = 6.25e-09\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.96 s\ufffd[39m] [\ufffd[33m 7490 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1070.00 s\ufffd[39m] [\ufffd[33m 7490 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1006.67 s\ufffd[39m] [\ufffd[33m 9012 MB\ufffd[39m]\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1081.64 s\ufffd[39m] [\ufffd[33m 9012 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual......................................................................................................................................................................................................................... [\ufffd[33m1090.25 s\ufffd[39m] [\ufffd[33m 9012 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.58 s\ufffd[39m] [\ufffd[33m 9067 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819610e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1108.96 s\ufffd[39m] [\ufffd[33m 9067 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.680848e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.84 s\ufffd[39m] [\ufffd[33m 9067 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8569.57 s\ufffd[39m] [\ufffd[33m 7690 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.125e-09, dt = 3.125e-09\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.94 s\ufffd[39m] [\ufffd[33m 7690 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1069.75 s\ufffd[39m] [\ufffd[33m 7690 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.10 s\ufffd[39m] [\ufffd[33m 9010 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1079.97 s\ufffd[39m] [\ufffd[33m 9010 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238451e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1088.72 s\ufffd[39m] [\ufffd[33m 9010 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419122e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.85 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819611e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................. [\ufffd[33m1110.46 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.681815e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1082.03 s\ufffd[39m] [\ufffd[33m 9066 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8567.56 s\ufffd[39m] [\ufffd[33m 7587 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.5625e-09, dt = 1.5625e-09\nStill Executing.\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.51 s\ufffd[39m] [\ufffd[33m 7587 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1070.03 s\ufffd[39m] [\ufffd[33m 7587 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.50 s\ufffd[39m] [\ufffd[33m 8996 MB\ufffd[39m]\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.53 s\ufffd[39m] [\ufffd[33m 8996 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1089.61 s\ufffd[39m] [\ufffd[33m 8996 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1102.49 s\ufffd[39m] [\ufffd[33m 9051 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819609e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................. [\ufffd[33m1110.19 s\ufffd[39m] [\ufffd[33m 9051 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.683223e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1081.97 s\ufffd[39m] [\ufffd[33m 9051 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8570.40 s\ufffd[39m] [\ufffd[33m 7279 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 7.8125e-10, dt = 7.8125e-10\nStill Executing.\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.68 s\ufffd[39m] [\ufffd[33m 7279 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1069.90 s\ufffd[39m] [\ufffd[33m 7279 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.56 s\ufffd[39m] [\ufffd[33m 8947 MB\ufffd[39m]\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.51 s\ufffd[39m] [\ufffd[33m 8947 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238450e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1089.74 s\ufffd[39m] [\ufffd[33m 8947 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1102.46 s\ufffd[39m] [\ufffd[33m 9003 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819830e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................. [\ufffd[33m1110.17 s\ufffd[39m] [\ufffd[33m 9003 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.680702e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1081.69 s\ufffd[39m] [\ufffd[33m 9003 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8570.68 s\ufffd[39m] [\ufffd[33m 7440 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.90625e-10, dt = 3.90625e-10\nStill Executing.\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.16 s\ufffd[39m] [\ufffd[33m 7440 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1069.98 s\ufffd[39m] [\ufffd[33m 7440 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.21 s\ufffd[39m] [\ufffd[33m 9012 MB\ufffd[39m]\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.20 s\ufffd[39m] [\ufffd[33m 9012 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238451e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1089.40 s\ufffd[39m] [\ufffd[33m 9012 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419121e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1102.33 s\ufffd[39m] [\ufffd[33m 9067 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.819688e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1110.00 s\ufffd[39m] [\ufffd[33m 9067 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.678496e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1083.92 s\ufffd[39m] [\ufffd[33m 9067 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8571.09 s\ufffd[39m] [\ufffd[33m 7669 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.95312e-10, dt = 1.95312e-10\nStill Executing.\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.52 s\ufffd[39m] [\ufffd[33m 7669 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian..................................................................................................................................................................................................................... [\ufffd[33m1070.21 s\ufffd[39m] [\ufffd[33m 7669 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.48 s\ufffd[39m] [\ufffd[33m 9301 MB\ufffd[39m]\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.65 s\ufffd[39m] [\ufffd[33m 9301 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238610e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1089.48 s\ufffd[39m] [\ufffd[33m 9301 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419205e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1102.45 s\ufffd[39m] [\ufffd[33m 9301 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.837077e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1110.24 s\ufffd[39m] [\ufffd[33m 9301 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.689049e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1082.13 s\ufffd[39m] [\ufffd[33m 9301 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8571.10 s\ufffd[39m] [\ufffd[33m 8004 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 9.76562e-11, dt = 9.76562e-11\nStill Executing.\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.74 s\ufffd[39m] [\ufffd[33m 8006 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1069.99 s\ufffd[39m] [\ufffd[33m 8006 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.86 s\ufffd[39m] [\ufffd[33m 9013 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1079.14 s\ufffd[39m] [\ufffd[33m 9013 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.238599e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1087.79 s\ufffd[39m] [\ufffd[33m 9016 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.419222e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1100.90 s\ufffd[39m] [\ufffd[33m 9072 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.899126e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1108.73 s\ufffd[39m] [\ufffd[33m 9072 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.808930e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.58 s\ufffd[39m] [\ufffd[33m 9072 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8562.54 s\ufffd[39m] [\ufffd[33m 7799 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 4.88281e-11, dt = 4.88281e-11\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.40 s\ufffd[39m] [\ufffd[33m 7799 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1068.78 s\ufffd[39m] [\ufffd[33m 7799 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1003.75 s\ufffd[39m] [\ufffd[33m 9021 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1079.19 s\ufffd[39m] [\ufffd[33m 9021 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.276921e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1088.40 s\ufffd[39m] [\ufffd[33m 9021 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.440850e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1100.79 s\ufffd[39m] [\ufffd[33m 9077 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m3.696084e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1108.24 s\ufffd[39m] [\ufffd[33m 9077 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m8.156675e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.23 s\ufffd[39m] [\ufffd[33m 9077 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8558.71 s\ufffd[39m] [\ufffd[33m 7726 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 2.44141e-11, dt = 2.44141e-11\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1003.56 s\ufffd[39m] [\ufffd[33m 7726 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1068.39 s\ufffd[39m] [\ufffd[33m 7726 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1003.73 s\ufffd[39m] [\ufffd[33m 8954 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1078.95 s\ufffd[39m] [\ufffd[33m 8954 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.233573e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1088.09 s\ufffd[39m] [\ufffd[33m 8948 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.431019e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.16 s\ufffd[39m] [\ufffd[33m 9004 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.977426e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1107.63 s\ufffd[39m] [\ufffd[33m 9021 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m8.028512e-01\ufffd[39m\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1079.74 s\ufffd[39m] [\ufffd[33m 9064 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8556.24 s\ufffd[39m] [\ufffd[33m 8170 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.2207e-11, dt = 1.2207e-11\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1002.85 s\ufffd[39m] [\ufffd[33m 8170 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1068.02 s\ufffd[39m] [\ufffd[33m 8170 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1003.40 s\ufffd[39m] [\ufffd[33m 8963 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1078.62 s\ufffd[39m] [\ufffd[33m 8963 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.231592e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1087.67 s\ufffd[39m] [\ufffd[33m 8963 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.424887e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.18 s\ufffd[39m] [\ufffd[33m 9019 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.866137e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1108.34 s\ufffd[39m] [\ufffd[33m 9019 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m4.616195e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.32 s\ufffd[39m] [\ufffd[33m 9019 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8555.33 s\ufffd[39m] [\ufffd[33m 8126 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 6.10352e-12, dt = 6.10352e-12\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.07 s\ufffd[39m] [\ufffd[33m 8045 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1068.21 s\ufffd[39m] [\ufffd[33m 8046 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1003.70 s\ufffd[39m] [\ufffd[33m 8985 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1079.00 s\ufffd[39m] [\ufffd[33m 8985 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.230248e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1087.99 s\ufffd[39m] [\ufffd[33m 8986 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.421727e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1100.86 s\ufffd[39m] [\ufffd[33m 8986 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.831869e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1108.58 s\ufffd[39m] [\ufffd[33m 8986 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m4.147594e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.30 s\ufffd[39m] [\ufffd[33m 8986 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n  Finished Solving                                                                       [\ufffd[33m8557.79 s\ufffd[39m] [\ufffd[33m 7793 MB\ufffd[39m]\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.05176e-12, dt = 3.05176e-12\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1003.95 s\ufffd[39m] [\ufffd[33m 7793 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1068.32 s\ufffd[39m] [\ufffd[33m 7793 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1003.58 s\ufffd[39m] [\ufffd[33m 9086 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1079.21 s\ufffd[39m] [\ufffd[33m 9086 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.230110e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1089.20 s\ufffd[39m] [\ufffd[33m 9086 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.420734e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.71 s\ufffd[39m] [\ufffd[33m 9086 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.821076e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................. [\ufffd[33m1110.73 s\ufffd[39m] [\ufffd[33m 9089 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m4.169487e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1082.25 s\ufffd[39m] [\ufffd[33m 9089 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8563.84 s\ufffd[39m] [\ufffd[33m 7684 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.52588e-12, dt = 1.52588e-12\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.55 s\ufffd[39m] [\ufffd[33m 7684 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1069.95 s\ufffd[39m] [\ufffd[33m 7684 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual........................................................................................................................................................................................................ [\ufffd[33m1005.73 s\ufffd[39m] [\ufffd[33m 8930 MB\ufffd[39m]\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1081.13 s\ufffd[39m] [\ufffd[33m 8930 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.229930e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1089.38 s\ufffd[39m] [\ufffd[33m 8930 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.420496e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.51 s\ufffd[39m] [\ufffd[33m 8985 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.812215e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1109.73 s\ufffd[39m] [\ufffd[33m 8985 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m4.062255e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.99 s\ufffd[39m] [\ufffd[33m 8985 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8567.73 s\ufffd[39m] [\ufffd[33m 7230 MB\ufffd[39m]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1e-12, dt = 1e-12\nStill Executing.\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.22 s\ufffd[39m] [\ufffd[33m 7230 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n    Computing Jacobian.................................................................................................................................................................................................................... [\ufffd[33m1068.85 s\ufffd[39m] [\ufffd[33m 7230 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m2.387418e+05\ufffd[39m\n\n    Computing Residual....................................................................................................................................................................................................... [\ufffd[33m1004.38 s\ufffd[39m] [\ufffd[33m 8903 MB\ufffd[39m]\n    Computing Residual...................................................................................................................................................................................................................... [\ufffd[33m1079.65 s\ufffd[39m] [\ufffd[33m 8903 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m4.229906e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................ [\ufffd[33m1088.28 s\ufffd[39m] [\ufffd[33m 8927 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m1.420451e+04\ufffd[39m\n    Computing Residual........................................................................................................................................................................................................................... [\ufffd[33m1101.54 s\ufffd[39m] [\ufffd[33m 8982 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m2.811852e+02\ufffd[39m\n    Computing Residual............................................................................................................................................................................................................................ [\ufffd[33m1109.21 s\ufffd[39m] [\ufffd[33m 8982 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m4.028809e-01\ufffd[39m\n    Computing Residual....................................................................................................................................................................................................................... [\ufffd[33m1080.91 s\ufffd[39m] [\ufffd[33m 8982 MB\ufffd[39m]\n    Computing Residual\nComputeMultipleCrystalPlasticityStress_abs: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n\n    Finished Computing Residual                                                          [\ufffd[33m  5.33 s\ufffd[39m] [\ufffd[33m 8982 MB\ufffd[39m]\n 1 Nonlinear |R| = \ufffd[33m2.387418e+05\ufffd[39m\n  Nonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m8567.10 s\ufffd[39m] [\ufffd[33m 7403 MB\ufffd[39m]\nAborting as solve did not converge\n\n\ufffd[31m\n*** ERROR ***\n/home/emmanuel324/projects/belson324/Crystal_Plasticity/1-31-25/Test3/New_work5_a.i:331.3:\nThe following error occurred in the TimeStepper 'IterationAdaptiveDT' of type IterationAdaptiveDT.\n\nSolve failed and timestep already at dtmin, cannot continue!\ufffd[39m\n\nStack frames: 15\n0: libMesh::print_trace(std::ostream&)\n1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\n2: MooseBase::callMooseError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) const\n3: /home/emmanuel324/projects/moose/framework/libmoose-dbg.so.0(+0x19a8edb) [0x15555259aedb]\n4: IterationAdaptiveDT::computeFailedDT()\n5: TimeStepper::computeStep()\n6: TransientBase::computeDT()\n7: TransientBase::execute()\n8: MooseApp::executeExecutioner()\n9: MooseApp::run()\n10: /home/emmanuel324/projects/belson324/belson324-dbg(+0x7d8c) [0x55555555bd8c]\n11: main\n12: /lib64/libc.so.6(+0x295d0) [0x1555386295d0]\n13: __libc_start_main\n14: /home/emmanuel324/projects/belson324/belson324-dbg(+0x6079) [0x55555555a079]\nAbort(1) on node 0 (rank 0 in comm 0): application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n# conda environments:\n#\nbase                     /apps/easybuild/software/tinkercliffs-rome/Miniforge3/24.1.2-0\n                         /home/emmanuel324/belson324\n                         /home/emmanuel324/home/emmanuel324/projects/emmanuel324/belson324\n                         /home/emmanuel324/mambaforge3\n                      *  /home/emmanuel324/mambaforge3/envs/moose\n                         /home/emmanuel324/mambaforge3/envs/python-stack\n                         /home/emmanuel324/mambaforge3/envs/python_env\n                         /home/emmanuel324/path/to/env",
                          "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12046277",
                          "updatedAt": "2025-02-03T18:57:23Z",
                          "publishedAt": "2025-02-03T18:57:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "building a debug executable is a good first step\nnext you want to use a debugger on that executable\nhttps://mooseframework.inl.gov/application_development/debugging.html\nand find when / where the constitutive relations are failing",
                          "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12047350",
                          "updatedAt": "2025-02-03T20:36:47Z",
                          "publishedAt": "2025-02-03T20:36:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I do also see this Nonlinear solve did not converge due to DIVERGED_FNORM_NAN. which according to the moose website:\n99% of the time, this arises because a variable is not initialized and the material properties are evaluated out of bounds. Initializing all the variables in the simulation will fix the problem.\nAs you can see from my input script above, I am restarting from a previous simulation, and most of my variables are loaded from that simulation. Is there a way to initialize variables from a restart simulation?",
                          "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12056505",
                          "updatedAt": "2025-02-04T15:35:56Z",
                          "publishedAt": "2025-02-04T15:35:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "All your auxvariables are not initialized. Are they just fir output?\n\n99% of the time, this arises because a variable is not initialized and the material properties are evaluated out of bounds. Initializing all the variables in the simulation will fix the problem.\n\nIt's not always the case though. I think the message you are getting is clear where you are getting a failure. If it s from an uninitialized value, you will see it while debugging that message",
                          "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12056994",
                          "updatedAt": "2025-02-04T16:19:24Z",
                          "publishedAt": "2025-02-04T16:19:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "When you say debug do you mean running my script with the debug executable?",
                          "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12058385",
                          "updatedAt": "2025-02-04T18:35:29Z",
                          "publishedAt": "2025-02-04T18:35:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no I mean follow these instructions\nhttps://mooseframework.inl.gov/application_development/debugging.html",
                          "url": "https://github.com/idaholab/moose/discussions/29779#discussioncomment-12059006",
                          "updatedAt": "2025-02-04T19:40:58Z",
                          "publishedAt": "2025-02-04T19:40:57Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Plastic internal parameter definition",
          "author": {
            "login": "Jensoulou"
          },
          "bodyText": "Hi,\nI would like to define a multi-model plastic surface (SolidMechanics) by defining these plastic surface in UserObjects and making the synthesis of those with the \u00ab\u00a0ComputeMultiPlasticityStress\u00a0\u00bb material. Some of the parameters of the plastic surfaces would be SolidMechanicsHardeningModel.\nTo my understanding, there is one internal parameter defined per plastic surface. There is therefore a vector of internal parameters defined in ComputeMultiPlasticityStress.\nHow these internal parameters are computed? And how could I modify their definition?\nFrom what I could find, it looks like the internal parameters are always directly linked to J2 but as I want to model a compressive cap behavior I would like to be for example defined on the trace.",
          "url": "https://github.com/idaholab/moose/discussions/29766",
          "updatedAt": "2025-02-04T16:25:10Z",
          "publishedAt": "2025-01-30T16:44:29Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@WilkAndy",
                  "url": "https://github.com/idaholab/moose/discussions/29766#discussioncomment-12009635",
                  "updatedAt": "2025-01-30T17:42:10Z",
                  "publishedAt": "2025-01-30T17:42:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Kavan-Khaledi"
                  },
                  "bodyText": "The existing plasticity models in MOOSE use different internal variables for the shear and volumetric components. If I\u2019m not mistaken, index 0 in plastic_internal_parameter stores the internal variable for shear, index 1 is for tensile, and index 2 is for the compression cap.",
                  "url": "https://github.com/idaholab/moose/discussions/29766#discussioncomment-12024081",
                  "updatedAt": "2025-02-01T05:13:12Z",
                  "publishedAt": "2025-02-01T05:13:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Jensoulou"
                  },
                  "bodyText": "Hi,\nThank you for your response! \ud83d\ude0a\nI looked deeper into the code, and it seems that there should be one plastic_internal_parameter per plastic surface. Based on my investigation, the internal parameter (intnl) appears to be modified by dintnl, which is assigned in MultiPlasticityLinearSystem within the Utils folder\u2014rather than in the material definition, as one might expect.\nHowever, I\u2019m still struggling to fully understand how all the parameters affecting plastic_internal_parameter are updated and where I could modify them \ud83d\ude15",
                  "url": "https://github.com/idaholab/moose/discussions/29766#discussioncomment-12057069",
                  "updatedAt": "2025-02-04T16:25:10Z",
                  "publishedAt": "2025-02-04T16:25:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Material Property Time Derivatives?",
          "author": {
            "login": "atarias1"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello,\nI am a new MOOSE user and I want to try to replicate the results of this paper https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2023JB026985. The paper implements a finite difference model, however I want to solve the same equations using finite element and thought MOOSE might be a good framework to try it in.\nI have converted the final system of equations derived in the paper to their weak forms, and I have split up the terms in order to represent them as individual kernels.\nHere are the equations:\n\nNow because of how the equations are formulated I have found some issues in making them compatible with MOOSE and would like some advice.\nFirstly, the four equations solve for the coupled variables P_f, phi, P_T, and v_s respectively. However, since many of the kernels in each equation are functions of different parameters or coupled variables it seems I cannot use premade kernels in the MOOSE framework, so I have been trying to implement custom ADKernels for each of the terms and just have them contribute to the residual for their respective variable to be solved.\nFurthermore, I wanted to treat rho_T and [rho_s X_s (1 - phi)] as material properties since I would compute rho_f, rho_s, and X_s using some interpolation I have precalculated. But in equation 1 and 2, I require their time derivative and it seems like it isn't possible to recover time derivatives of material properties. I have tried computing rho_T and [rho_s X_s (1-phi)] as AuxVariables so I can retrieve the time derivative, but it seems AuxVariables are not compatible with AutoDiff.\nIs there a good method for addressing this kind of problem?\nAlso, for equation 4, I am wondering if it is advised to solve for velocity using the components as scalars or a single VectorVariable? So far I have tried creating a kernel that solves each component of the residual, but it seems like just treating velocity as a vector would be simpler to implement. Also, I considered using the solid mechanics module, but the solid here is described moreso as a viscous fluid with compressibility defined in eq. 3, so I figured it would just be simplest to create a custom kernel. But the Lagrangian derivatives in eq. 3 suggest to me that it might be simpler to implement using the solid mechanics module.\nI appreciate any advice that can help me out.\nThank you,\nAustin",
          "url": "https://github.com/idaholab/moose/discussions/29797",
          "updatedAt": "2025-02-04T08:58:25Z",
          "publishedAt": "2025-02-03T12:12:25Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nFor the first item, that's likely the best option. There is a lot of flexibility if you use ADParsedMaterial to write the value of the term then a ADMat... (BodyForce?) kernel to add it to the equation. But coding your own kernel is a good way to do this\nFor the second item, the way to have material property time derivatives is to use a chain rule. You create your own material which defined the time derivative of the material property (declaring it the same way as a material property) by computing it as:\ndmat/dt = sum dmat/dxi dxi/dt\nWith the xi being the nonlinear variables in the problem\nIndeed stay away from auxiliary variables for the equation if you want to rely on automatic differentiation\nFor the last item, you can do either. There are a suite of vector kernels that we use for Navier stokes with finite elements notably. It s a little more efficient to do this as there are 3x less kernels in 3D.\nThe solid mechanics module is not using vector variables though. So if you foresee reusing kernels or materials from that module then I would stick to component-wise.\nFor whether to use the solid mechanics module or not, you ll have to look if you want to use the way they compute stresses, the various strain-stress relations, the explicit time integration schemes for dynamics etc. There are numerous techniques in that module that would be quite some work to reproduce",
                  "url": "https://github.com/idaholab/moose/discussions/29797#discussioncomment-12043186",
                  "updatedAt": "2025-02-03T15:00:53Z",
                  "publishedAt": "2025-02-03T15:00:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "atarias1"
                          },
                          "bodyText": "Thanks a lot for the detailed response and advice. I'll try out the chain rule technique. That should solve the largest of my issues.\nThanks again!\nAustin",
                          "url": "https://github.com/idaholab/moose/discussions/29797#discussioncomment-12052483",
                          "updatedAt": "2025-02-04T08:58:25Z",
                          "publishedAt": "2025-02-04T08:58:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Equation with \"if statements\"",
          "author": {
            "login": "engrmessi"
          },
          "bodyText": "Hi all, I am writing an equation (expression) that comprises \"if statements\" in my model as shown in the attached file. I just want to know if the equation is written correctly. if not I need correction on how best to write it in MOOSE. Thanks!",
          "url": "https://github.com/idaholab/moose/discussions/29168",
          "updatedAt": "2025-02-03T23:44:05Z",
          "publishedAt": "2024-11-29T16:12:26Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nno it's not. I dont know if && works so I d do this:\nexpression = 'if (t > 0, if(t<to, L0 * (1 + accslip / 0.0111), if (t<to + tf, L0 * (1 + accslip / 0.0111) * exp(-k * (t - to)), 0)), 0)'",
                  "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11417849",
                  "updatedAt": "2024-11-29T17:17:40Z",
                  "publishedAt": "2024-11-29T17:17:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "regardless of if && works, you need to keep this if (a, b, c) structure, even when nesting ifs: if (a1, if(a2, b, d), c)",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11417858",
                          "updatedAt": "2024-11-29T17:18:48Z",
                          "publishedAt": "2024-11-29T17:18:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "engrmessi"
                  },
                  "bodyText": "Thank you for your response\nBut the first  part  of second inequality condition \"to < t\" was not accounted for. Is it Ok to ignore it? Also some of the inequality conditions has something like \"less than or equal to\"",
                  "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11417919",
                  "updatedAt": "2024-11-29T17:30:52Z",
                  "publishedAt": "2024-11-29T17:26:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it is\n if(t<to, // this part only if t < to L0 * (1 + accslip / 0.0111), // this part only if t > to if (t<to + tf,",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11417956",
                          "updatedAt": "2024-11-29T17:30:09Z",
                          "publishedAt": "2024-11-29T17:30:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "engrmessi"
                          },
                          "bodyText": "This the first part. there is less than and equality sign, ie t<=to\n\nThere is also less than and equality sign in the second part too ie t<=to + tf\ncould you please take a look",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11417993",
                          "updatedAt": "2024-11-29T17:36:31Z",
                          "publishedAt": "2024-11-29T17:36:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you can change < to <= in what I wrote",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11418025",
                          "updatedAt": "2024-11-29T17:41:54Z",
                          "publishedAt": "2024-11-29T17:41:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "engrmessi"
                          },
                          "bodyText": "Yes, according to you, this is what I will have\nexpression = 'if (t > 0, if(t<=to, L0 * (1 + accslip / 0.001), if (t<=to + tf, L0 * (1 + accslip / 0.001) * exp(-k * (t - to)), 0)), 0)'\nbut my concern is that this part of inequality \"to<t\" in \"to<t<=to + tf\" is missing in the expression",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11418100",
                          "updatedAt": "2024-11-29T17:54:17Z",
                          "publishedAt": "2024-11-29T17:53:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It\u2019s not missing.\nif you don\u2019t trust what I wrote please go to the ParsedFunction documentation then follow the link to the fparser documentation",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11418187",
                          "updatedAt": "2024-11-29T18:07:36Z",
                          "publishedAt": "2024-11-29T18:07:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "engrmessi"
                          },
                          "bodyText": "Alright. Thanks a lot for your feedbacks, really appreciative",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11418673",
                          "updatedAt": "2024-11-29T19:49:46Z",
                          "publishedAt": "2024-11-29T19:49:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "engrmessi"
                          },
                          "bodyText": "Good evening\nSo I got the following syntax error for the expression.\nexpression = 'if (t > 0, if(t <= to, L0 * (1 + accslip / 0.001), if (t<=to + tf, L0 * (1 + accslip / 0.001) * exp(-k * (t - to)), 0)), 0)'. I also remove the equality sign but i got same error. Please could help see if something is missing",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11466889",
                          "updatedAt": "2024-12-04T23:02:07Z",
                          "publishedAt": "2024-12-04T23:02:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you paste the rest of the input? this does not look like an error on this line, but on two lines in the input",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11467011",
                          "updatedAt": "2024-12-04T23:26:59Z",
                          "publishedAt": "2024-12-04T23:26:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "engrmessi"
                          },
                          "bodyText": "Please is there a way I can send the input script to you privately since the project is confidential to my research lab.?",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11467041",
                          "updatedAt": "2024-12-04T23:32:37Z",
                          "publishedAt": "2024-12-04T23:32:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "sure. guillaume.giudicelli@inl.gov",
                          "url": "https://github.com/idaholab/moose/discussions/29168#discussioncomment-11467081",
                          "updatedAt": "2024-12-04T23:39:17Z",
                          "publishedAt": "2024-12-04T23:39:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Moment applied at a node",
          "author": {
            "login": "kiliyan"
          },
          "bodyText": "I am trying to apply Moment at the end of cantilever beam (using timoshenko beam element)\nIs this correct?\n[NodalKernels]\n[./moment_z2]\ntype = ConstantRate\nvariable = rot_z\nboundary = right\nrate = 2.6e3 # magnitude of the applied moment\n[../]\n[]\nI wasn't able to find any input files that applied a moment to check correctness.",
          "url": "https://github.com/idaholab/moose/discussions/29772",
          "updatedAt": "2025-02-03T20:36:15Z",
          "publishedAt": "2025-01-31T00:24:28Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@gambka",
                  "url": "https://github.com/idaholab/moose/discussions/29772#discussioncomment-12012865",
                  "updatedAt": "2025-01-31T00:44:41Z",
                  "publishedAt": "2025-01-31T00:44:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Kavan-Khaledi"
                          },
                          "bodyText": "The magnitude of the moment changes over time, as you need to define the \"rate\" in this NodalKernel. Therefore, the applied moment will only match your desired moment at t=1.\nIf you have a constant moment, you should consider using: https://mooseframework.inl.gov/source/dirackernels/ConstantPointSource.html",
                          "url": "https://github.com/idaholab/moose/discussions/29772#discussioncomment-12024041",
                          "updatedAt": "2025-02-01T04:53:26Z",
                          "publishedAt": "2025-02-01T04:53:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gambka"
                          },
                          "bodyText": "@bwspenc would be more appropriate for this question. I have not used the beam element implementation in MOOSE.",
                          "url": "https://github.com/idaholab/moose/discussions/29772#discussioncomment-12045330",
                          "updatedAt": "2025-02-03T17:33:49Z",
                          "publishedAt": "2025-02-03T17:33:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bwspenc"
                          },
                          "bodyText": "What @Kavan-Khaledi said is correct. You would use the same techniques that you use to apply a translational force to a node to apply a moment, but you would apply them to the rotational DOF rather than the translational DOF.",
                          "url": "https://github.com/idaholab/moose/discussions/29772#discussioncomment-12045668",
                          "updatedAt": "2025-02-03T18:07:04Z",
                          "publishedAt": "2025-02-03T18:07:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kiliyan"
                          },
                          "bodyText": "Thanks @Kavan-Khaledi and @gambka (just saw your message after i posted)\nHowever I had to change the input as I am solving a large strain problem (beam bending to a semicircle by applying moment at tip). I feel in this case I can't use Constant Point Source as I need to load up in steps\nAnd i am not getting the expected strain - below is the main relevant parts of my input file. I am also attaching the entire file timo_large_strain.i.txt\n[NodalKernels]\n[./moment_z2]\ntype = UserForcingFunctionNodalKernel\nvariable = rot_z\nboundary = right\nfunction = moment # magnitude of the applied moment\n[../]\n[]\n[Functions]\n[./moment]\ntype = PiecewiseLinear\nx='0 3 9'\ny='0 2.6e3 2.6e3' # Nm\n#value = 2.6e3 # Nm\n[../]\n[]\n[Executioner]\ntype = Transient\nsolve_type = PJFNK\nline_search = 'none'\npetsc_options = '-snes_ksp_ew'\npetsc_options_iname = '-ksp_gmres_restart -pc_type -pc_hypre_type -pc_hypre_boomeramg_max_iter'\npetsc_options_value = '201                hypre     boomeramg     4'\nnl_max_its = 50\nnl_rel_tol = 1e-10\nnl_abs_tol = 1e-8\nl_max_its = 50\ndt = 0.05\nend_time = 3.1\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/29772#discussioncomment-12045690",
                          "updatedAt": "2025-02-03T18:11:41Z",
                          "publishedAt": "2025-02-03T18:08:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Kavan-Khaledi"
                  },
                  "bodyText": "I suggest using DiracKernels instead of NodalKernals. If the moment is a Function, then you may try FunctionDiracSource (https://mooseframework.inl.gov/source/dirackernels/FunctionDiracSource.html):\nfor your case:\n[DiracKernels]\n[./moment_at_point]\ntype = FunctionDiracSource\nvariable = rot_z\nfunction = moment\npoint = 'x y z' # please insert the x,y,z coordinate of the point where the moment is applied\n[../]\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/29772#discussioncomment-12046102",
                  "updatedAt": "2025-02-03T18:40:29Z",
                  "publishedAt": "2025-02-03T18:40:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "kiliyan"
                          },
                          "bodyText": "@Kavan-Khaledi one last doubt. How would i handle the fact that the point where my moment to be applied (tip of the beam) changes after each step (since there is large deformation)?",
                          "url": "https://github.com/idaholab/moose/discussions/29772#discussioncomment-12047029",
                          "updatedAt": "2025-02-03T20:08:07Z",
                          "publishedAt": "2025-02-03T20:08:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Kavan-Khaledi"
                          },
                          "bodyText": "I guess,  you only need to insert the x,y,z of the point in the undeformed mesh. I am not sure! What do you think @bwspenc ?",
                          "url": "https://github.com/idaholab/moose/discussions/29772#discussioncomment-12047343",
                          "updatedAt": "2025-02-03T20:36:16Z",
                          "publishedAt": "2025-02-03T20:36:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "traction free boundary condition",
          "author": {
            "login": "sskalati"
          },
          "bodyText": "Hello.\nI would like to apply a traction-free boundary condition to the displacement field in the stress equilibrium equation. To achieve this, I\u2019ve used the NeumannBC for both the x and y displacement components, as shown below. Could you please confirm if this approach is correct?\n [x_bc]\n    type = NeumannBC\n    variable = 'disp_x'\n    boundary = 'outer'\n    value = 0\n  []\n  [y_bc]\n      type = NeumannBC\n      variable = 'disp_y'\n      boundary = 'outer'\n      value = 0\n  []",
          "url": "https://github.com/idaholab/moose/discussions/29795",
          "updatedAt": "2025-02-03T06:16:35Z",
          "publishedAt": "2025-02-03T05:58:52Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nyou don't need to define 0-valued Neumann BCs, that's the default for our discretization of the solid mechanics equation\nIt should not change the result from not having any BC defined on the surface",
                  "url": "https://github.com/idaholab/moose/discussions/29795#discussioncomment-12037315",
                  "updatedAt": "2025-02-03T06:09:03Z",
                  "publishedAt": "2025-02-03T06:09:03Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sskalati"
                          },
                          "bodyText": "Thanks. Is the Neumann boundary condition for displacement equivalent to a traction-free boundary condition?",
                          "url": "https://github.com/idaholab/moose/discussions/29795#discussioncomment-12037357",
                          "updatedAt": "2025-02-03T06:14:51Z",
                          "publishedAt": "2025-02-03T06:14:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "NeumannBC is a flux in the force balance equation, so a surface stress. So yes in my opinion, but I am not a solid mechanics developer",
                          "url": "https://github.com/idaholab/moose/discussions/29795#discussioncomment-12037366",
                          "updatedAt": "2025-02-03T06:16:14Z",
                          "publishedAt": "2025-02-03T06:16:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Thread constructor fails",
          "author": {
            "login": "Liserion"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHi!\nI somehow have a new problem. I thought at first my computer just wasn't having enough power, but there must be a bug somewhere, since it also does not work on the hpc. I tried running debuggers but with no success. Are there any other debuggers I could try to see where the mistake is?\nhttps://github.com/Liserion/babbler is my code with various custom kernels.\n\nJob ID: 46340935\nCluster: lcluster\nUser/Group: jk98dago/jk98dago\nState: FAILED (exit code 137)\nNodes: 1\nCores per node: 48\nCPU Utilized: 00:05:19\nCPU Efficiency: 36.92% of 00:14:24 core-walltime\nJob Wall-clock time: 00:00:18\nMemory Utilized: 366.75 MB (estimated maximum)\nMemory Efficiency: 0.37% of 96.00 GB (2.00 GB/core\nThis is what the HPC gave back to me (I tried changing kernels etc.)\n\nOn my debugger i go the following error:\n*** ERROR ***\nthread constructor failed: Resource temporarily unavailable\n\nStack frames: 6\n0: 0   libmesh_opt.0.dylib                 0x0000000106c6eddf libMesh::print_trace(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) + 1151\n1: 1   libmoose-opt.0.dylib                0x0000000105b33f40 moose::internal::mooseErrorRaw(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) + 784\n2: 2   libmoose-opt.0.dylib                0x000000010535ac87 void mooseError<char const*>(char const*&&) + 247\n3: 3   libmoose-opt.0.dylib                0x0000000105b4309a MooseApp::run() + 2138\n4: 4   babbler-opt                         0x0000000100010bcb main + 139\n5: 5   dyld                                0x00007ff80e57441f start + 1903\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\nProcess 10423 exited with status = 1 (0x00000001) \n(lldb) \n\nI hope this is the right place to post, thank you so much for your help!",
          "url": "https://github.com/idaholab/moose/discussions/28596",
          "updatedAt": "2025-02-02T09:40:19Z",
          "publishedAt": "2024-09-10T19:17:19Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI have not seen this one before. How many cores do you have available when you schedule a job? There are 48 cores per nodes, but are you using a full node?",
                  "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-10609178",
                  "updatedAt": "2024-09-11T03:32:13Z",
                  "publishedAt": "2024-09-11T03:32:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Liserion"
                          },
                          "bodyText": "So I have tried it with 96 cores per node as well. I should have sufficient (if not all) cores available. I think it must be an error in my code since when I try running it on my computer I also get an error.",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-10610825",
                          "updatedAt": "2024-09-11T07:37:47Z",
                          "publishedAt": "2024-09-11T07:37:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you could try to use a debugger to get the line where this error appears\nhttps://mooseframework.inl.gov/application_development/debugging.html",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-10614956",
                          "updatedAt": "2024-09-11T13:53:13Z",
                          "publishedAt": "2024-09-11T13:53:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Liserion"
                          },
                          "bodyText": "https://mooseframework.inl.gov/application_development/debugging.html\n\nSorry that I haven't responded in such a long time. I used the debuggers on my old MacBook, I switched to ARM and now the debuggers won't work (error: failed to launch or debug process)\nIs this due to the ARM and x86 differences? When I start the debugger I do get this: Current executable set to '/Users/jean/projects/babbler/babbler-dbg' (x86_64).\nI still haven't found a workaround the initial error.\nThanks!",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-11198361",
                          "updatedAt": "2024-11-09T15:42:50Z",
                          "publishedAt": "2024-11-09T15:42:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Debuggers should work the same on arm with regards to what we are doing\nDid you re install or did you copy the binaries over?",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-11198989",
                          "updatedAt": "2024-11-09T17:29:45Z",
                          "publishedAt": "2024-11-09T17:29:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Liserion"
                          },
                          "bodyText": "I have reinstalled moose again, but copied my App with all the additional kernels",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-11199370",
                          "updatedAt": "2024-11-09T18:49:50Z",
                          "publishedAt": "2024-11-09T18:49:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Copying source should be fine",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-11199383",
                          "updatedAt": "2024-11-09T18:53:19Z",
                          "publishedAt": "2024-11-09T18:53:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Liserion"
                          },
                          "bodyText": "As soon as i get back to my old mac tomorrow ill run the dbg mode again and see what i get there",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-11199433",
                          "updatedAt": "2024-11-09T19:02:38Z",
                          "publishedAt": "2024-11-09T19:02:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Liserion"
                          },
                          "bodyText": "okay, it has worked. it was just a dumb mistake from my side. When running the debugger I got the following error:\n*** Warning, This code is deprecated and will be removed in future versions:\nPlease update your main.C to adapt new main function in MOOSE framework, see'test/src/main.C in MOOSE as an example of moose::main()'.\nStack frames: 6\n0: 0   libmesh_dbg.0.dylib                 0x0000000126774c60 libMesh::print_trace(std::__1::basic_ostream<char, std::__1::char_traits>&) + 536\n1: 1   libmoose-dbg.0.dylib                0x0000000110fc6834 void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::__1::char_traits>, char const (&) [136]>(libMesh::BasicOStreamProxy<char, std::__1::char_traits>&, bool, bool, char const (&) [136]) + 764\n2: 2   libmoose-dbg.0.dylib                0x0000000110fc63e8 void mooseDeprecated<char const (&) [136]>(char const (&) [136]) + 48\n3: 3   libmoose-dbg.0.dylib                0x0000000110fc5e1c AppFactory::createAppShared(std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator> const&, int, char**, int) + 100\n4: 4   babbler-dbg                         0x0000000100013648 main + 112\n5: 5   dyld                                0x0000000185cfc274 start + 2840\nlibMesh terminating:\nthread::join failed: Invalid argument\nAbort(1) on node 0 (rank 0 in comm 0): application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\nProcess 29308 exited with status = 1 (0x00000001)",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-11204434",
                          "updatedAt": "2024-11-10T14:28:40Z",
                          "publishedAt": "2024-11-10T14:28:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The first part is just a deprecation message, you can get rid of it by modifying your App.C file as indicated\nWe would need a backtrace on the second error. Can you please follow the debugging instructions to get us that?",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-11205740",
                          "updatedAt": "2024-11-10T18:14:16Z",
                          "publishedAt": "2024-11-10T18:14:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Liserion"
                          },
                          "bodyText": "* thread #1, queue = 'com.apple.main-thread', stop reason = breakpoint 2.1\n  * frame #0: 0x0000000106b33868 libc++.1.dylib`std::__1::thread::join()\n    frame #1: 0x000000010fdb03bc libmoose-dbg.0.dylib`PerfGraph::disableLivePrint(this=0x00000004b5280000) at PerfGraph.C:86:19\n    frame #2: 0x000000010fdb0244 libmoose-dbg.0.dylib`PerfGraph::~PerfGraph(this=0x00000004b5280000) at PerfGraph.C:54:27\n    frame #3: 0x000000010fdb0418 libmoose-dbg.0.dylib`PerfGraph::~PerfGraph(this=0x00000004b5280000) at PerfGraph.C:54:25\n    frame #4: 0x00000001110c61b4 libmoose-dbg.0.dylib`std::__1::default_delete<PerfGraph>::operator()[abi:ue170006](this=0x000060019bf6d1f0, __ptr=0x00000004b5280000) const at unique_ptr.h:68:5\n    frame #5: 0x00000001110c6128 libmoose-dbg.0.dylib`std::__1::unique_ptr<PerfGraph, std::__1::default_delete<PerfGraph>>::reset[abi:ue170006](this=0x000060019bf6d1f0, __p=0x0000000000000000) at unique_ptr.h:300:7\n    frame #6: 0x00000001110c60b0 libmoose-dbg.0.dylib`std::__1::unique_ptr<PerfGraph, std::__1::default_delete<PerfGraph>>::~unique_ptr[abi:ue170006](this=0x000060019bf6d1f0) at unique_ptr.h:266:75\n    frame #7: 0x00000001110c6080 libmoose-dbg.0.dylib`std::__1::unique_ptr<PerfGraph, std::__1::default_delete<PerfGraph>>::~unique_ptr[abi:ue170006](this=0x000060019bf6d1f0) at unique_ptr.h:266:73\n    frame #8: 0x00000001110c604c libmoose-dbg.0.dylib`RestartableData<PerfGraph>::~RestartableData(this=0x000060019bf6d1c0) at RestartableData.h:215:7\n    frame #9: 0x00000001110c5a74 libmoose-dbg.0.dylib`RestartableData<PerfGraph>::~RestartableData(this=0x000060019bf6d1c0) at RestartableData.h:215:7\n    frame #10: 0x00000001110c5aa0 libmoose-dbg.0.dylib`RestartableData<PerfGraph>::~RestartableData(this=0x000060019bf6d1c0) at RestartableData.h:215:7\n    frame #11: 0x000000010e63e308 libmoose-dbg.0.dylib`std::__1::default_delete<RestartableDataValue>::operator()[abi:ue170006](this=0x00006001de74d510, __ptr=0x000060019bf6d1c0) const at unique_ptr.h:68:5\n    frame #12: 0x000000010e63e274 libmoose-dbg.0.dylib`std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>::reset[abi:ue170006](this=0x00006001de74d510, __p=0x0000000000000000) at unique_ptr.h:300:7\n    frame #13: 0x000000010e63e1fc libmoose-dbg.0.dylib`std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>::~unique_ptr[abi:ue170006](this=0x00006001de74d510) at unique_ptr.h:266:75\n    frame #14: 0x000000010e6290a4 libmoose-dbg.0.dylib`std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>::~unique_ptr[abi:ue170006](this=0x00006001de74d510) at unique_ptr.h:266:73\n    frame #15: 0x000000011039d050 libmoose-dbg.0.dylib`std::__1::allocator<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>>::destroy[abi:ue170006](this=0x000060019bf6d190, __p=0x00006001de74d510) at allocator.h:172:15\n    frame #16: 0x000000011039cf60 libmoose-dbg.0.dylib`void std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>>>::destroy[abi:ue170006]<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>, void>(__a=0x000060019bf6d190, __p=0x00006001de74d510) at allocator_traits.h:315:13\n    frame #17: 0x000000011108aac8 libmoose-dbg.0.dylib`std::__1::vector<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>, std::__1::allocator<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>>>::__base_destruct_at_end[abi:ue170006](this=0x000060019bf6d180 size=2, __new_last=0x00006001de74d510) at vector:944:9\n    frame #18: 0x000000011108aa54 libmoose-dbg.0.dylib`std::__1::vector<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>, std::__1::allocator<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>>>::__clear[abi:ue170006](this=0x000060019bf6d180 size=2) at vector:938:29\n    frame #19: 0x000000011108a9c4 libmoose-dbg.0.dylib`std::__1::vector<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>, std::__1::allocator<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>>>::__destroy_vector::operator()[abi:ue170006](this=0x000000016fdfae70) at vector:489:20\n    frame #20: 0x000000011108a918 libmoose-dbg.0.dylib`std::__1::vector<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>, std::__1::allocator<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>>>::~vector[abi:ue170006](this=0x000060019bf6d180 size=2) at vector:500:67\n    frame #21: 0x000000011108a8cc libmoose-dbg.0.dylib`std::__1::vector<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>, std::__1::allocator<std::__1::unique_ptr<RestartableDataValue, std::__1::default_delete<RestartableDataValue>>>>::~vector[abi:ue170006](this=0x000060019bf6d180 size=2) at vector:500:65\n    frame #22: 0x000000011108a8a0 libmoose-dbg.0.dylib`UniqueStorage<RestartableDataValue>::~UniqueStorage(this=0x000060019bf6d180) at UniqueStorage.h:35:7\n    frame #23: 0x000000011108a874 libmoose-dbg.0.dylib`RestartableDataMap::Data::~Data(this=0x000060019bf6d180) at RestartableDataMap.h:33:9\n    frame #24: 0x000000011108a848 libmoose-dbg.0.dylib`RestartableDataMap::Data::~Data(this=0x000060019bf6d180) at RestartableDataMap.h:33:9\n    frame #25: 0x000000011108a81c libmoose-dbg.0.dylib`RestartableDataMap::~RestartableDataMap(this=0x000060019bf6d180) at RestartableDataMap.h:27:7\n    frame #26: 0x000000011108a7e4 libmoose-dbg.0.dylib`RestartableDataMap::~RestartableDataMap(this=0x000060019bf6d180) at RestartableDataMap.h:27:7\n    frame #27: 0x000000011108a7bc libmoose-dbg.0.dylib`std::__1::allocator<RestartableDataMap>::destroy[abi:ue170006](this=0x0000000537bec600, __p=0x000060019bf6d180) at allocator.h:172:15\n    frame #28: 0x000000011108a794 libmoose-dbg.0.dylib`void std::__1::allocator_traits<std::__1::allocator<RestartableDataMap>>::destroy[abi:ue170006]<RestartableDataMap, void>(__a=0x0000000537bec600, __p=0x000060019bf6d180) at allocator_traits.h:315:13\n    frame #29: 0x000000011108a750 libmoose-dbg.0.dylib`std::__1::vector<RestartableDataMap, std::__1::allocator<RestartableDataMap>>::__base_destruct_at_end[abi:ue170006](this=0x0000000537bec5f0 size=1, __new_last=0x000060019bf6d180) at vector:944:9\n    frame #30: 0x000000011108a5f0 libmoose-dbg.0.dylib`std::__1::vector<RestartableDataMap, std::__1::allocator<RestartableDataMap>>::__clear[abi:ue170006](this=0x0000000537bec5f0 size=1) at vector:938:29\n    frame #31: 0x000000011108a580 libmoose-dbg.0.dylib`std::__1::vector<RestartableDataMap, std::__1::allocator<RestartableDataMap>>::__destroy_vector::operator()[abi:ue170006](this=0x000000016fdfb030) at vector:489:20\n    frame #32: 0x0000000111094a50 libmoose-dbg.0.dylib`std::__1::vector<RestartableDataMap, std::__1::allocator<RestartableDataMap>>::~vector[abi:ue170006](this=0x0000000537bec5f0 size=1) at vector:500:67\n    frame #33: 0x00000001110889ac libmoose-dbg.0.dylib`std::__1::vector<RestartableDataMap, std::__1::allocator<RestartableDataMap>>::~vector[abi:ue170006](this=0x0000000537bec5f0 size=1) at vector:500:65\n    frame #34: 0x000000011108559c libmoose-dbg.0.dylib`MooseApp::MooseApp(this=0x0000000537bebc18, parameters=InputParameters @ 0x000000016fdfbc40) at MooseApp.C:650:1\n    frame #35: 0x000000010066028c libbabbler-dbg.0.dylib`BabblerApp::BabblerApp(this=0x0000000537bebc18, parameters=<unavailable>) at BabblerApp.C:28:54\n    frame #36: 0x0000000100661d40 libbabbler-dbg.0.dylib`BabblerApp::BabblerApp(this=0x0000000537bebc18, parameters=<unavailable>) at BabblerApp.C:29:1\n    frame #37: 0x00000001000f5ffc libbabbler_test-dbg.0.dylib`std::__1::__shared_ptr_emplace<BabblerApp, std::__1::allocator<BabblerApp>>::__shared_ptr_emplace[abi:ue170006]<InputParameters const&>(this=0x0000000537bebc00, __a=allocator<BabblerApp> @ 0x000000016fdfbe0f, __args=0x000000016fdfc990) at shared_ptr.h:302:37\n    frame #38: 0x00000001000f5c88 libbabbler_test-dbg.0.dylib`std::__1::__shared_ptr_emplace<BabblerApp, std::__1::allocator<BabblerApp>>::__shared_ptr_emplace[abi:ue170006]<InputParameters const&>(this=0x0000000537bebc00, __a=allocator<BabblerApp> @ 0x000000016fdfbf8f, __args=0x000000016fdfc990) at shared_ptr.h:291:5\n    frame #39: 0x00000001000f5b6c libbabbler_test-dbg.0.dylib`std::__1::shared_ptr<BabblerApp> std::__1::allocate_shared[abi:ue170006]<BabblerApp, std::__1::allocator<BabblerApp>, InputParameters const&, void>(__a=0x000000016fdfc047, __args=0x000000016fdfc990) at shared_ptr.h:1022:55\n    frame #40: 0x00000001000f5a90 libbabbler_test-dbg.0.dylib`std::__1::shared_ptr<BabblerApp> std::__1::make_shared[abi:ue170006]<BabblerApp, InputParameters const&, void>(__args=0x000000016fdfc990) at shared_ptr.h:1031:12\n    frame #41: 0x00000001000f5964 libbabbler_test-dbg.0.dylib`AppFactoryBuildInfo<BabblerApp>::build(this=0x000060000279d590, params=0x000000016fdfc990) at AppFactory.h:45:12\n    frame #42: 0x0000000110fc41b4 libmoose-dbg.0.dylib`AppFactory::createShared(this=0x00006000025b0960, app_type=\"BabblerApp\", name=\"micro04092\", parameters=InputParameters @ 0x000000016fdfc990, comm_world_in=-2080374782) at AppFactory.C:156:22\n    frame #43: 0x00000001104a031c libmoose-dbg.0.dylib`MultiApp::createApp(this=0x0000000142048c00, i=4092, start_time=0) at MultiApp.C:1175:37\n    frame #44: 0x0000000110475300 libmoose-dbg.0.dylib`MultiApp::createLocalApp(this=0x0000000142048c00, i=4092) at MultiApp.C:422:3\n    frame #45: 0x000000011049ca2c libmoose-dbg.0.dylib`MultiApp::createApps(this=0x0000000142048c00) at MultiApp.C:415:5\n    frame #46: 0x000000011049be10 libmoose-dbg.0.dylib`MultiApp::setupPositions(this=0x0000000142048c00) at MultiApp.C:371:5\n    frame #47: 0x000000010f91bed4 libmoose-dbg.0.dylib`FEProblemBase::addMultiApp(this=0x000000014200ac00, multi_app_name=\"CentroidMultiApp\", name=\"micro\", parameters=0x0000000150f809c0) at FEProblemBase.C:5066:14\n    frame #48: 0x00000001106813b0 libmoose-dbg.0.dylib`AddMultiAppAction::act(this=0x0000000150f80848) at AddMultiAppAction.C:28:13\n    frame #49: 0x00000001106a5558 libmoose-dbg.0.dylib`Action::timedAct(this=0x0000000150f80848) at Action.C:84:3\n    frame #50: 0x00000001106b2b60 libmoose-dbg.0.dylib`ActionWarehouse::executeActionsWithAction(this=0x0000000151853ec0, task=\"add_multi_app\") at ActionWarehouse.C:388:22\n    frame #51: 0x00000001106b26c4 libmoose-dbg.0.dylib`ActionWarehouse::executeAllActions(this=0x0000000151853ec0) at ActionWarehouse.C:346:5\n    frame #52: 0x0000000110faafb8 libmoose-dbg.0.dylib`MooseApp::runInputFile(this=0x0000000151853a18) at MooseApp.C:1122:21\n    frame #53: 0x0000000110fa4970 libmoose-dbg.0.dylib`MooseApp::run(this=0x0000000151853a18) at MooseApp.C:1551:5\n    frame #54: 0x0000000100013668 babbler-dbg`main(argc=3, argv=0x000000016fdff898) at main.C:33:8\n    frame #55: 0x0000000185cfc274 dyld`start + 2840\n(lldb) \n\nSo this is what I got when I did the backtracing. Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/28596#discussioncomment-11212487",
                          "updatedAt": "2024-11-11T13:29:30Z",
                          "publishedAt": "2024-11-11T09:27:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Uniform Mesh for Circular Geometry in MOOSE",
          "author": {
            "login": "sskalati"
          },
          "bodyText": "Hi everyone,\nI'm trying to simulate a circular geometry using the meshing tools built into MOOSE. I\u2019ve written the following code using AnnularMeshGenerator\n[Mesh]\n  [msh]\n    type = AnnularMeshGenerator\n    nt = 1000\n    rmax = 4.1e-3\n    rmin = 0\n    nr = 80\n  []\n[]\n\nHowever, this results in very small elements near the center and progressively larger elements as the radius increases. What I actually need is a uniform mesh throughout the domain, where I can specify the element size directly for instance 0.1mm in my case (as shown in the attached figure).\nIs there a way to achieve this in MOOSE? Any suggestions or alternative mesh generators that would work better?\nThanks in advance!",
          "url": "https://github.com/idaholab/moose/discussions/29791",
          "updatedAt": "2025-02-03T05:33:43Z",
          "publishedAt": "2025-02-01T11:49:47Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThere are a number of mesh generators that can do circular meshes.\nThe easiest for a uniform triangular one might be this one\nhttps://mooseframework.inl.gov/source/meshgenerators/XYDelaunayGenerator.html\nthat would mesh inside a circular curve\nThis one makes a uniform quad mesh\nhttps://mooseframework.inl.gov/source/meshgenerators/ConcentricCircleMeshGenerator.html\nthat you can then convert to triangles if you want using this\nhttps://mooseframework.inl.gov/source/meshgenerators/ElementsToSimplicesConverter.html",
                  "url": "https://github.com/idaholab/moose/discussions/29791#discussioncomment-12026811",
                  "updatedAt": "2025-02-01T15:54:59Z",
                  "publishedAt": "2025-02-01T15:54:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sskalati"
                          },
                          "bodyText": "Thank you so much! Your comment was incredibly helpful. The XYDelaunayGenerator was exactly what I needed.\nI have one more question: If I want to create a cylinder, can I generate a circle using ParsedCurveGenerator, extrude it in the Z direction, and then use XYZDelaunayGenerator?",
                          "url": "https://github.com/idaholab/moose/discussions/29791#discussioncomment-12030000",
                          "updatedAt": "2025-02-02T05:21:28Z",
                          "publishedAt": "2025-02-02T05:21:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "That is one option though you will also need to create the top and bottom surface meshes as well.\nThe extrusion can be done from a line mesh or from a sideset.\nAlternatively, mesh in 2D then use the AdvancedExtruderGenerator to get a prism mesh",
                          "url": "https://github.com/idaholab/moose/discussions/29791#discussioncomment-12030409",
                          "updatedAt": "2025-02-02T07:51:12Z",
                          "publishedAt": "2025-02-02T07:51:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}