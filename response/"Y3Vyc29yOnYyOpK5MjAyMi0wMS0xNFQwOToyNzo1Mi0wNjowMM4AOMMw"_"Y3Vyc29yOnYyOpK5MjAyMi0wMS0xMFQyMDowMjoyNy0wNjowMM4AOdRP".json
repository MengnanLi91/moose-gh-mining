{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wMS0xMFQyMDowMjoyNy0wNjowMM4AOdRP"
    },
    "edges": [
      {
        "node": {
          "title": "Custom Output with execute_on=CUSTOM",
          "author": {
            "login": "ppandit95"
          },
          "bodyText": "Dear MOOSE Community\nI wish to carry out comparisons for mesh convergence at different meshed but at a certain timestep for which I realise that one has to use execute_on = 'CUSTOM' in [Outputs] block but I am not sure how to use this functionality to get the desired output.\nMany Thanks\nPushkar",
          "url": "https://github.com/idaholab/moose/discussions/20037",
          "updatedAt": "2022-06-24T09:50:40Z",
          "publishedAt": "2022-01-13T12:25:18Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nOutput to where?\nCSV & exodus both output every timestep by default, so you wouldnt need to change this to get all the data available.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20037#discussioncomment-1962229",
                  "updatedAt": "2022-06-24T09:50:40Z",
                  "publishedAt": "2022-01-13T12:46:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "Thanks @GiudGiud  for elaborating on that and as of now I am outputting an exodus file but is it possible to get a output at certain timestep in VTK or any other visual format",
                          "url": "https://github.com/idaholab/moose/discussions/20037#discussioncomment-1962342",
                          "updatedAt": "2022-06-24T09:50:49Z",
                          "publishedAt": "2022-01-13T13:12:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Exodus can be visualized in paraview.\nVTK can be output at every timestep as well.\nCreating a CUSTOM execute_on to select a few timesteps is a little complicated, it's really better to just downselect from the every timestep output",
                          "url": "https://github.com/idaholab/moose/discussions/20037#discussioncomment-1966977",
                          "updatedAt": "2022-06-24T09:50:49Z",
                          "publishedAt": "2022-01-14T03:46:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "thanks @GiudGiud for elaborating on that...",
                          "url": "https://github.com/idaholab/moose/discussions/20037#discussioncomment-1969160",
                          "updatedAt": "2022-06-24T09:50:49Z",
                          "publishedAt": "2022-01-14T12:24:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "at the end of this page https://mooseframework.inl.gov/source/interfaces/SetupInterface.html\nare the instructions to create a CUSTOM execute on flag in your application btw",
                          "url": "https://github.com/idaholab/moose/discussions/20037#discussioncomment-1969718",
                          "updatedAt": "2022-06-24T09:51:16Z",
                          "publishedAt": "2022-01-14T14:02:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to add compiler flags for additional includes or libraries?",
          "author": {
            "login": "friedrichgs"
          },
          "bodyText": "Hello,\nhow do I add compiler flags to the Makefile of an application?\nI tried\nADDITIONAL_CPPFLAGS = -I/path/to/include\nat the beginning of the application's Makefile, but it doesn't have an effect.\nBesides additional includes, I'll also need to link additional libraries.\n(A related question: Is it possible to set something like a VERBOSE flag to the make command, so that every executed detailed step during the build process will be shown?)\nThanks\nFriedrich",
          "url": "https://github.com/idaholab/moose/discussions/20048",
          "updatedAt": "2022-06-16T13:53:31Z",
          "publishedAt": "2022-01-14T08:35:22Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nADDITIONAL_CPPFLAGS := -I/path/to/include should be the way to do this.\nUse make -n to get a dry run with all the commands that would be run.\nOr make SHELL='sh -x' to run the commands and get output.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20048#discussioncomment-1969439",
                  "updatedAt": "2022-06-16T13:53:53Z",
                  "publishedAt": "2022-01-14T13:14:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "friedrichgs"
                  },
                  "bodyText": "Thanks, this is very helpful, problem solved.\n#19413 helped, too.\n(I had a number of mistakes. Maybe this helps somebody else, who is not a Makefile expert, either:\n\nI used ':=' instead of '=' (although '=' seems to work)\nI wrote ADDITIONAL_CPPFLAGS = -I$(shell pkg-config --cflags ...) (Didn't show this in such detail above.) This was one '-I' too much, because the pkg-config output contains the -I already.\n\nI also tried ADDITIONAL_INCLUDES instead of ADDITIONAL_CPPFLAGS. This seems to require '+=' instead of ':=', and it needs to appear before include $(FRAMEWORK_DIR)/app.mk, whereas ADDITIONAL_CPPFLAGS :=... can go anywhere.\nSo this one worked for me as well:\n...\nADDITIONAL_INCLUDES += $(shell pkg-config --cflags ...)\ninclude $(FRAMEWORK_DIR)/app.mk\n...\n\n)",
                  "url": "https://github.com/idaholab/moose/discussions/20048#discussioncomment-1969613",
                  "updatedAt": "2022-06-16T13:53:50Z",
                  "publishedAt": "2022-01-14T13:45:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Node set id and Suface (Side set) id overlap in BCs on an Abaqus .inp mesh",
          "author": {
            "login": "bylore"
          },
          "bodyText": "hi everyone\nI am new to moose. Recently, i tried to solve very simple linear elastic problems using moose tensor mechanics modules.\nMy mesh is built from an abaqus inp file. The boundary part commands are\n\nCase 1\nmesh contains:\n\nthe results are\n\n\nCase2\nmesh contains:\n\nthe results are\n\n\nCase3\nmesh contains\n\nthe results are\n\n\nI guess Moose gives ids to Sets and Surface respectively according to their names, but the BCs are applied without distinguishing Sets boundaries (node sets) or Surface boundaries (side sets).\nin Case1, it is,\nSets:  bottom = 0; left = 1; right = 2; top = 3\nSurfaces: s_bottom = 0; s_left = 1; s_right = 2; s_top = 3\nin Case2, it is:\nSets: all = 0; bottom = 1; left = 2; right = 3; top = 4\nSurfaces: s_bottom = 0; s_left = 1; s_right = 2; s_top = 3\nin Case3, it is:\nSets: all = 0; bottom = 1; left = 2; right = 3; top = 4\nSurfaces: s_a0 = 0; s_a1 = 1; s_a2 = 2; s_a3 = 3; s_a4 = 4;  (they are all bottom side of the squre)\ns_bottom = 5; s_left = 6; s_right = 7; s_top = 8\nSo everything goes well in Case1 because Sets and Surfaces have coincident ids\uff0cbut in Case2, The boundary on \"bottom\" will be applied to both \"bottom\" and \"s_left\"  because they have same id  and the boundary on \"s_top\" is applied to both \"right\" and 's_top'.\nCase3 works well again as expected.\nThe software information is\nMOOSE Version:           git commit dbb9945 on 2021-12-20\nLibMesh Version:         5f606f4dbd542262512cf701456d1ab7cbd65111\nPETSc Version:           3.15.1\nSLEPc Version:           3.15.1\nThis issue can be avoid by adjusting the mesh file. I just report this here. or you can ignore this if it's because I'm using moose in some inappropriate way.",
          "url": "https://github.com/idaholab/moose/discussions/20036",
          "updatedAt": "2022-06-14T08:10:22Z",
          "publishedAt": "2022-01-13T08:36:06Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes, MOOSE does this by default, for simplicity. All nodes from a given sideset are given the nodeset ID that is the same as the sideset ID (or equivalently, a nodeset with the same ID is created for every sideset), as explained here https://mooseframework.inl.gov/source/mesh/MooseMesh.html\nThis is done at the end of the mesh generation. It's unfortunate that this ends up changing the result for your case since it makes the BC apply on more nodes than wanted. To avoid this, you can rename sidesets using a RenameBoundaryGenerator, in the [Mesh] block\nhttps://mooseframework.inl.gov/source/meshgenerators/RenameBoundaryGenerator.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20036#discussioncomment-1966998",
                  "updatedAt": "2022-06-14T08:13:14Z",
                  "publishedAt": "2022-01-14T03:52:28Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Estimate memory usage in advance",
          "author": {
            "login": "hsheldon"
          },
          "bodyText": "Is there a rule-of-thumb for estimating the likely memory usage of a MOOSE problem, based on the DOF? I understand there are post processors that can report on memory usage, but it would be helpful to have an idea in advance in order to choose an appropriate number of nodes/cores to run a problem.",
          "url": "https://github.com/idaholab/moose/discussions/20022",
          "updatedAt": "2022-07-06T14:23:03Z",
          "publishedAt": "2022-01-12T01:30:19Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI would say at the very least > 3*(n_dofs_primary + n_dofs_aux) *sizeof(double)\nBut it'll depend on which numerical methods you are using to solve the system. A LU preconditioner would mean a full matrix to store, some preconditioners will include subsolves which will also require memory, a Krylov method would mean storing several basis vectors to represent the solution.\nIt'll depend if you use stateful properties or not, and for sure other things.\nIt should be fairly easy to determine this experimentally for your case by using uniform refinement and some of the memory postprocessors\nhttps://mooseframework.inl.gov/source/postprocessors/MemoryUsage.html\n@YaqiWang may have developed a measure for his application\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20022#discussioncomment-1954706",
                  "updatedAt": "2022-07-06T14:23:02Z",
                  "publishedAt": "2022-01-12T13:03:40Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hsheldon"
                          },
                          "bodyText": "Thanks, that's helpful. It hadn't occurred to me that the aux vars were taking up so much memory.",
                          "url": "https://github.com/idaholab/moose/discussions/20022#discussioncomment-1965684",
                          "updatedAt": "2022-07-06T14:23:03Z",
                          "publishedAt": "2022-01-13T21:40:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "libMesh Update (2021.12.15) and December 2021 News",
          "author": {
            "login": "cticenhour"
          },
          "bodyText": "A new libMesh made its way to the MOOSE master branch in December. For those using the conda packages, please perform\nconda update --all\n\nin your MOOSE conda environment. The appropriate moose-libmesh package version should be 2021.12.15. For those using the the libMesh submodule, please run in the moose/scripts directory\n./update_and_rebuild_libmesh.sh\n\nafter updating your copy of MOOSE.\nMore details on the content of this update can be found in the December 2021 Newsletter. If issues are experienced in updating from earlier versions of the moose-libmesh package, please see the comment in #19532 for information on how to fix your environment.",
          "url": "https://github.com/idaholab/moose/discussions/20040",
          "updatedAt": "2022-01-13T15:16:50Z",
          "publishedAt": "2022-01-13T15:16:39Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "What is the formal order of accuracy of FV Navier Stokes kernels?",
          "author": {
            "login": "aiskhak"
          },
          "bodyText": "Hello all,\nI need to perform Richardson extrapolation, which requires knowledge of formal order of accuracy (in space and in time). However, I did not find it in the documentation.\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/20031",
          "updatedAt": "2022-11-17T15:36:54Z",
          "publishedAt": "2022-01-12T19:19:48Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIn space:\nIf you use Rhie-Chow interpolation for velocity and 'average' for the advected quantity you can get second order accuracy.\nBut our most stable configuration right now is with first order upwing for the advected quantity, which will only give you first order accuracy. We are planning to add more second order schemes with limiters to avoid oscillations soon.\nIn time:\nit ll depend on your time integration scheme. If you have not specified anything, you are using first order implicit Euler. There are second order schemes available as well, see: https://mooseframework.inl.gov/syntax/Executioner/TimeIntegrator/index.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20031#discussioncomment-1959382",
                  "updatedAt": "2022-11-17T15:36:54Z",
                  "publishedAt": "2022-01-13T01:37:37Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MPICH and Slurm job allocation",
          "author": {
            "login": "rayaprolu143"
          },
          "bodyText": "Hi,\nI want to first thank the MOOSE team for making the installation so easy to perform through mamba. However, I am facing the issue of not being able to run the jobs with the Slurm workload manager. I receive an error that is as follows: \"Error: node list format not recognized. Try using '-hosts=' \". The culprit is the 3.3.2 version of MPICH used in the environment packaged in moose-tools. To better understand the issue at hand, I ask the reader to follow this link  https://lists.mpich.org/pipermail/discuss/2019-December/005835.html . I request the MOOSE community to provide answers to the following questions:\n\nIs there a way to circumvent the issue with the existing MPICH 3.3.2 version?\nIs it possible to upgrade MPICH in the package to a later version?\n\nThanks,\nSreekar",
          "url": "https://github.com/idaholab/moose/discussions/19988",
          "updatedAt": "2022-10-04T12:46:19Z",
          "publishedAt": "2022-01-09T21:02:12Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe workflow for installing moose on computing clusters does not use mamba, it's detailed here: https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html\nThe idea is that a custom install will make use of optimized compilers on your cluster, which the mamba install cannot do.\n\nDid you try the solution listed in that thread you posted? https://lists.mpich.org/pipermail/discuss/2019-December/005839.html\n@milljm will know\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19988#discussioncomment-1937430",
                  "updatedAt": "2022-10-04T12:46:19Z",
                  "publishedAt": "2022-01-10T02:26:40Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "rayaprolu143"
                          },
                          "bodyText": "Hi,\nI installed the MOOSE following the HPC cluster instructions.\nThank you",
                          "url": "https://github.com/idaholab/moose/discussions/19988#discussioncomment-1950753",
                          "updatedAt": "2022-10-04T12:46:19Z",
                          "publishedAt": "2022-01-11T21:38:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Glad you got it sorted, and sorry for the delayed response. I only just saw an email come in.\nWe are in the process of updating MPICH to 3.4.2 in fact: #19456. But as GuidGuid stated, we try and refrain from asking users to install our Conda packages on High Performance Computing clusters. The compilers which come with the Conda (Mamba) install are not optimized. Meaning they are designed to run on just about any modern CPU architecture. e.g:\n# equal to or greater than micro-architecture\n-mtune=haswell\n# Intel/AMD CPUs dating back to 2013",
                          "url": "https://github.com/idaholab/moose/discussions/19988#discussioncomment-1950802",
                          "updatedAt": "2022-10-04T12:46:19Z",
                          "publishedAt": "2022-01-11T21:49:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error with build",
          "author": {
            "login": "aiskhak"
          },
          "bodyText": "I installed moose using mamba and followed all the instructions, however, when I am trying to compile the tests I am getting:\n/bin//sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/libtool: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/libtool: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\nUsing HIT from /home/aiskhak/projects/moose/framework/contrib/hit\n/home/aiskhak/projects/moose/framework/scripts/get_repo_revision.py:50: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.\n  if LooseVersion(gitVersion) >= LooseVersion(\"2.9\"):\nChecking if header needs updating: /home/aiskhak/projects/moose/framework/include/base/MooseRevision.h...\nRebuilding symlinks in /home/aiskhak/projects/moose/test/build/header_symlinks\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/src_Unity.C\nSymlinking MOOSE configure /home/aiskhak/projects/moose/framework/build/header_symlinks/MooseConfig.h\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/actions_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/auxkernels_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/bcs_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/constraints_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/controls_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/dampers_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/dgkernels_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/dirackernels_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/distributions_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/executioners_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/executors_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/functions_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/fvbcs_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/fviks_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/fvkernels_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/geomsearch_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/ics_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/indicators_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/interfacekernels_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/interfaces_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/kernels_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/limiters_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/linesearches_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/loops_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/markers_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/materials_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/mesh_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/meshgenerators_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/multiapps_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/nodalkernels_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/outputs_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/outputs_formatters_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/outputs_png_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/parser_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/partitioner_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/postprocessors_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/preconditioners_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/predictors_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/problems_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/relationshipmanagers_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/reporters_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/restart_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/samplers_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/splits_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/systems_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/timeintegrators_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/timesteppers_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/transfers_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/userobject_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/variables_Unity.C\nCreating Unity /home/aiskhak/projects/moose/framework/build/unity_src/vectorpostprocessors_Unity.C\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\nCompiling C++ (in opt mode) /home/aiskhak/projects/moose/framework/src/base/Adaptivity.C...\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/libtool: No such file or directory\nCompiling C++ (in opt mode) /home/aiskhak/projects/moose/framework/src/base/AppFactory.C...\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\nmake: *** [/home/aiskhak/projects/moose/framework/src/base/Adaptivity..opt.lo] Error 127\nmake: *** Waiting for unfinished jobs....\n/bin/sh: /home/aiskhak/projects/moose/libmesh/installed/libtool: No such file or directory\nmake: *** [/home/aiskhak/projects/moose/framework/src/base/AppFactory..opt.lo] Error 127\nmake: *** wait: No child processes.  Stop.\n\nHow to fix it?",
          "url": "https://github.com/idaholab/moose/discussions/20011",
          "updatedAt": "2022-06-01T08:04:20Z",
          "publishedAt": "2022-01-11T15:51:18Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "avtarsinghh1991"
                  },
                  "bodyText": "Hello @aiskhak\nYou also need to compile PETSc and LIBMESH before compiling the moose.\nSee the below link\nhttps://mooseframework.inl.gov/getting_started/installation/install_moose.html\nMake sure you do these steps in conda activate moose mode\nBest\nAvtar",
                  "url": "https://github.com/idaholab/moose/discussions/20011#discussioncomment-1948679",
                  "updatedAt": "2022-06-01T08:04:22Z",
                  "publishedAt": "2022-01-11T15:54:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "I am getting\nError running make on MUMPS\n\nwhile compileing petsc",
                          "url": "https://github.com/idaholab/moose/discussions/20011#discussioncomment-1949681",
                          "updatedAt": "2022-06-01T08:04:25Z",
                          "publishedAt": "2022-01-11T18:23:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Can you please paste the error message in here ?",
                          "url": "https://github.com/idaholab/moose/discussions/20011#discussioncomment-1949697",
                          "updatedAt": "2022-06-01T08:04:25Z",
                          "publishedAt": "2022-01-11T18:25:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "if you are installing moose-libmesh (and therefore installing moose-petsc) conda packages, there is no need to build PETSc or libMesh using the moose/scripts/update_and_rebuild_$$$$.sh scripts.\nThe second part of @aiskhak is probably what you needed (deactivate and reactivate the moose environment)\n# because you are using mamba (and possibly performed `mamba init`\nmamba deactivate\nmamba activate moose\n\n# if the above fails with errors suggesting to use conda instead, do so:\nconda deactivate\nconda activate moose\n\nI can be entirely wrong... looking forward to the error message, as requested!",
                          "url": "https://github.com/idaholab/moose/discussions/20011#discussioncomment-1949732",
                          "updatedAt": "2022-06-01T08:04:27Z",
                          "publishedAt": "2022-01-11T18:31:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "*******************************************************************************\n         UNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\n-------------------------------------------------------------------------------\nError running make on MUMPS\n*******************************************************************************\n  File \"/home/aiskhak/projects/moose/petsc/config/configure.py\", line 458, in petsc_configure\n    framework.configure(out = sys.stdout)\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/framework.py\", line 1312, in configure\n    self.processChildren()\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/framework.py\", line 1300, in processChildren\n    self.serialEvaluation(self.childGraph)\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/framework.py\", line 1275, in serialEvaluation\n    child.configure()\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/package.py\", line 1146, in configure\n    self.executeTest(self.configureLibrary)\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/base.py\", line 138, in executeTest\n    ret = test(*args,**kargs)\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/packages/MUMPS.py\", line 56, in configureLibrary\n    config.package.Package.configureLibrary(self)\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/package.py\", line 904, in configureLibrary\n    for location, directory, lib, incl in self.generateGuesses():\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/package.py\", line 478, in generateGuesses\n    d = self.checkDownload()\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/package.py\", line 612, in checkDownload\n    return self.getInstallDir()\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/package.py\", line 367, in getInstallDir\n    installDir = self.Install()\n  File \"/home/aiskhak/projects/moose/petsc/config/BuildSystem/config/packages/MUMPS.py\", line 180, in Install\n    raise RuntimeError('Error running make on MUMPS')\n================================================================================\nFinishing configure run at Tue, 11 Jan 2022 11:17:28 -0500\n===============================================================================\n\nEdited message for easier reading",
                          "url": "https://github.com/idaholab/moose/discussions/20011#discussioncomment-1949802",
                          "updatedAt": "2022-08-22T02:02:21Z",
                          "publishedAt": "2022-01-11T18:40:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "if we really want to dive into this, we will need that configure.log file. It should be located at:\n/home/aiskhak/projects/moose/petsc/configure.log",
                          "url": "https://github.com/idaholab/moose/discussions/20011#discussioncomment-1949811",
                          "updatedAt": "2022-08-22T02:02:24Z",
                          "publishedAt": "2022-01-11T18:42:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "activating deactivating moose worked",
                          "url": "https://github.com/idaholab/moose/discussions/20011#discussioncomment-1949902",
                          "updatedAt": "2022-08-22T02:02:24Z",
                          "publishedAt": "2022-01-11T19:02:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Solve one field for single time step in multi-field problem",
          "author": {
            "login": "avtarsinghh1991"
          },
          "bodyText": "Hello MOOSE Experts\nI am solving the coupled multi-field problem. I want to solve any one or two fields only for the first time step and the rest of the variables for all the given time steps. Can you please let me know what is the procedure to do it with a suitable example, if possible?\nI shall be very thankful.\nFor example:\nLet's say I have four fields\nc (diffusion, time-dependent), u (displacement), eta_1 and eta_2\nI am solving Helmholtz equation to find eta_1 and eta_2.\nI want to solve eta_1 and eta_2 for the first step only and use the obtained values for the rest of the simulation.\nIf it's possible, eta_1 and eta_2 can also be solved even prior to the beginning of the simulation.\nThen use those values for the rest of the simulation.\nPlease help.\nBest\nAvtar",
          "url": "https://github.com/idaholab/moose/discussions/19994",
          "updatedAt": "2022-07-08T07:31:54Z",
          "publishedAt": "2022-01-10T16:53:09Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello,\nYou will want to use a Multiapp setup for this, then transfer the two fields that were solved for in the beginning to the other solve.\nOne subapp will solve for eta_1/2 and only run in the beginning (execute_on = INITIAL) and the other, the main app, will solve for the other variables, after having retrieved eta_1/2 from the subapp using a transfer.\nMore info on Multiapps:\nhttps://mooseframework.inl.gov/getting_started/examples_and_tutorials/tutorial02_multiapps/index.html\nSInce you are solving for eta_1/2 only once you will want to use a FullSolveMultiApp\nhttps://mooseframework.inl.gov/source/multiapps/FullSolveMultiApp.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19994#discussioncomment-1948133",
                  "updatedAt": "2022-07-08T07:31:56Z",
                  "publishedAt": "2022-01-11T14:29:17Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "if MOOSE can be used with CFD",
          "author": {
            "login": "DYLDYLDYL"
          },
          "bodyText": "hello\nI wonder if MOOSE can be used with CFD like openform\uff1fBecause I need consider complex flow problems, two-equation turbulence model is required.\nThanks\uff01",
          "url": "https://github.com/idaholab/moose/discussions/19989",
          "updatedAt": "2022-06-18T05:42:16Z",
          "publishedAt": "2022-01-10T03:38:08Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Does the documentation at https://mooseframework.inl.gov/modules/navier_stokes/index.html answer your question?",
                  "url": "https://github.com/idaholab/moose/discussions/19989#discussioncomment-1937725",
                  "updatedAt": "2022-06-18T05:42:16Z",
                  "publishedAt": "2022-01-10T04:19:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "DYLDYLDYL"
                          },
                          "bodyText": "Thanks\uff01 There are many models used in CFD codes to compute the eddy viscosity. Some of the most popular are the isotropic 2-equation models, k-epsilon and k-omega. However, the MOOSE Navier-Stokes module only supports simple algebraic mixing-length models at present.\nI need 2-equation. So I wonder if moose can couple with other CFD.",
                          "url": "https://github.com/idaholab/moose/discussions/19989#discussioncomment-1938143",
                          "updatedAt": "2022-06-18T05:42:16Z",
                          "publishedAt": "2022-01-10T07:11:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nMOOSE can be used with NekRS, an open source high performance CFD code, which can do LES and k-tau RANS (and others, but I m not an expert). All the transfers between Nek and MOOSE have already been written in Cardinal.\nCardinal is hosted here: https://github.com/neams-th-coe/cardinal\nWe currently do not have native 2-equation turbulence models in MOOSE and we only have plans to improve our coarse mesh 0-equation models currently.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19989#discussioncomment-1939795",
                  "updatedAt": "2022-06-18T05:42:23Z",
                  "publishedAt": "2022-01-10T12:17:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "DYLDYLDYL"
                          },
                          "bodyText": "Thanks so much\uff01",
                          "url": "https://github.com/idaholab/moose/discussions/19989#discussioncomment-1944552",
                          "updatedAt": "2022-06-18T05:42:41Z",
                          "publishedAt": "2022-01-11T02:02:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}