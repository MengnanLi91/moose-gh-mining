{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wMS0xMVQxNToyNzo0NC0wNjowMM4AXINN"
    },
    "edges": [
      {
        "node": {
          "title": "Crystal plasticity domain mostly moving as rigid body",
          "author": {
            "login": "HiltyF"
          },
          "bodyText": "Hello all,\nI am working to validate the crystal plasticity module against a shear strain problem a colleague calculated with another code. The BCs are a high strain rate on the top, 20 MPa pressure on top, no x displacement in the lower left ,and no y displacement on lower right, as shown in the first image below. What ends up happening is the lower left pin pulls away from the rest of the domain, as shown in the second image. The material properties and BCs nearly match the problem I am validating against, the only exception is that the problem I am validating against uses Periodic BCs. When I apply periodic BCs to the displacement variables then all stress/strain is resolved and there is no evolution.\nI have not seen any example problems using Crystal Plasticity in MOOSE that uses periodic BCs, are they simply inappropriate when solving for displacement? Does anyone have any insight or suggestions about what could be causing the overall behavior I am seeing?\nThanks,\nFloyd",
          "url": "https://github.com/idaholab/moose/discussions/26558",
          "updatedAt": "2024-01-15T19:00:46Z",
          "publishedAt": "2024-01-15T19:00:43Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "How to include Python.h in MOOSE code?",
          "author": {
            "login": "Wang-Yihu"
          },
          "bodyText": "I can easily include Python.h in gcc environment like this:\nFile runpy.cpp\n#include \"/usr/include/python3.10/Python.h\"\nint main()\n{\n  Py_Initialize();\n  PyRun_SimpleString(\"print('Hello world!')\");\n  PyFinalize();\n  return 0;\n}\nInput in shell:\ngcc runpy.cpp -o runpy -I/usr/include/python3.10 -lpython3.10\n./runpy\n\nIt will certainly return:\nHello world!\n\nHowever, how to compile Python.h in MOOSE codes?\nWhen I try to input include \"/usr/include/python3.10/Python.h\" in my source code. As I build\nconda activate moose\nmake\n\nThe shell will return errors like:\nChecking if header needs updating: /home/sjtu/projects/moose/framework/include/base/MooseRevision.h...\nCreating Unity Directory /home/sjtu/projects/lianxi_couplewithpy/build/unity_src\nCreating Unity /home/sjtu/projects/lianxi_couplewithpy/build/unity_src/problem_Unity.C\nRebuilding symlinks in /home/sjtu/projects/lianxi_couplewithpy/build/header_symlinks\nCompiling C++ (in opt mode) /home/sjtu/projects/lianxi_couplewithpy/build/unity_src/problem_Unity.C...\nIn file included from /usr/include/python3.10/Python.h:8,\n                 from /home/sjtu/projects/lianxi_couplewithpy/src/problem/ExternalZidingyiQiujieqiChuanshuShujuProblem.C:10,\n                 from /home/sjtu/projects/lianxi_couplewithpy/build/unity_src/problem_Unity.C:2:\n/usr/include/python3.10/pyconfig.h:3:12: fatal error: x86_64-linux-gnu/python3.10/pyconfig.h: No such file or directory\n    3 | #  include <x86_64-linux-gnu/python3.10/pyconfig.h>\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ncompilation terminated.\nmake: *** [/home/sjtu/projects/moose/framework/build.mk:151: /home/sjtu/projects/lianxi_couplewithpy/build/unity_src/problem_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\nI try to input ADDITIONAL_LIBS =\"-I/usr/include/python3.10/ -lpython3.10\", but it seems useless... It will return the same error...",
          "url": "https://github.com/idaholab/moose/discussions/26507",
          "updatedAt": "2024-01-15T13:37:32Z",
          "publishedAt": "2024-01-08T17:01:01Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "What does the following return:\npython3-config\nFor me, python3-config resides in my moose Conda environment. And so when I ask it what my include flags should be, I am provided with:\n\u276f python3-config --includes\n-I/Users/milljm/conda3/envs/moose/include/python3.10 -I/Users/milljm/conda3/envs/moose/include/python3.10\nI suppose that means the python interpreter I am using, should have its matching includes in the above location:\n\u276f file /Users/milljm/conda3/envs/moose/include/python3.10/python.h\n/Users/milljm/conda3/envs/moose/include/python3.10/python.h: c program text, ASCII text\nSo perhaps the error you are receiving is mixing and matching different python includes (by hard coding a path to system python). Unless of course, you are actually wanting to use system python over the one supplied by the Conda moose environment?",
                  "url": "https://github.com/idaholab/moose/discussions/26507#discussioncomment-8056881",
                  "updatedAt": "2024-01-08T22:44:21Z",
                  "publishedAt": "2024-01-08T22:44:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Wang-Yihu"
                          },
                          "bodyText": "You are right. It seems that there are two pythons for base and conda moose system, respectively...\nI input\npython3-config\n\nIt will return:\nUsage: /home/sjtu/mambaforge3/bin/python3-config \u2013prefix|--exec-prefix|--includes|--libs|--cflags|--ldflags|--extension-suffix|--help|--abiflags|--configdir|--embed\nIn the base environment, I input\npython3-config --includes\nIt will return\n-I/home/sjtu/mambaforge3/include/python3.10 -I/home/sjtu/mambaforge3/include/python3.10\n\nHowever in conda MOOSE environment, the return is different. I input\nconda activate moose\npython3-config --includes\n\nIt will return a different directory\n-I/home/sjtu/mambaforge3/envs/moose/include/python3.10 -I/home/sjtu/mambaforge3/envs/moose/include/python3.10\n\nIt seems that I should use system python rather than Conda moose environment... So what should I do? em...",
                          "url": "https://github.com/idaholab/moose/discussions/26507#discussioncomment-8059736",
                          "updatedAt": "2024-01-09T02:37:07Z",
                          "publishedAt": "2024-01-09T02:37:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "There a several Makefile's in MOOSE which call for a Python interpreter. I think if you took a look at how we are determining where/what python includes there are available in the following Makefile, it might make more sense:\nhttps://github.com/idaholab/moose/blob/3a1efc798c7227ea5057590ab37e266f1201845b/framework/contrib/hit/Makefile\nEdit:\nBasically, instead of hard-coding a path to some version of Python, the logic in the above Makefile allows for code to use whatever python is currently being made available.",
                          "url": "https://github.com/idaholab/moose/discussions/26507#discussioncomment-8066698",
                          "updatedAt": "2024-01-09T13:40:06Z",
                          "publishedAt": "2024-01-09T13:39:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Wang-Yihu"
                          },
                          "bodyText": "Milljm:\nCould you tell me how to use this Makefile for including Python.h please?\nIn fact, I have never thought about the compiling process for MOOSE before. For solving this problem, recently, I have read the Makefile in user's app directory. In this Makefile, three mk files- build.mk, moose.mk and app.mk(not considering modules.mk) have been included. I insert echo command in these three files to trace what will happen after I make. And I found the shell will do (the name of user's MOOSE App is lianxi_mf in this example)\n/home/sjtu/projects/moose/framework/scripts/get_repo_revision.py /home/sjtu/projects/moose/framework /home/sjtu/projects/moose/framework/include/base/MooseRevision.h MOOSE\n$$(shell mkdir -p /home/sjtu/projects/lianxi_mf/build/header_symlinks)\nln -sf /home/sjtu/projects/lianxi_mf/include/base/lianxi_mfApp.h /home/sjtu/projects/lianxi_mf/build/header_symlinks/lianxi_mfApp.h\nln -sf /home/sjtu/projects/lianxi_mf/test/include/base/lianxi_mfTestApp.h /home/sjtu/projects/lianxi_mf/build/header_symlinks/lianxi_mfTestApp.h\n/home/sjtu/mambaforge3/envs/moose/libmesh/contrib/bin/libtool  ...(LOTS OF OPTIONS!)\n/home/sjtu/mambaforge3/envs/moose/libmesh/contrib/bin/libtool  ...(LOTS OF OPTIONS!)\n/home/sjtu/mambaforge3/envs/moose/libmesh/contrib/bin/libtool  ...(LOTS OF OPTIONS!)\n/home/sjtu/mambaforge3/envs/moose/libmesh/contrib/bin/libtool  ...(LOTS OF OPTIONS!)\n/home/sjtu/mambaforge3/envs/moose/libmesh/contrib/bin/libtool  ...(LOTS OF OPTIONS!)\n/home/sjtu/mambaforge3/envs/moose/libmesh/contrib/bin/libtool  ...(LOTS OF OPTIONS!)\n/home/sjtu/mambaforge3/envs/moose/libmesh/contrib/bin/libtool . ..(LOTS OF OPTIONS!)\nsome thing about  /scripts/write_appresource_file.py\n/home/sjtu/mambaforge3/envs/moose/libmesh/contrib/bin/libtool . ..(LOTS OF OPTIONS!)\n\nIt seems that this Makefile(in the directory moose/framework/contrib/hit\n) for Python interpreter you mentioned\nhttps://github.com/idaholab/moose/blob/3a1efc798c7227ea5057590ab37e266f1201845b/framework/contrib/hit/Makefile\nhave not work in the default MOOSE compiling process.\nSo how to use this Makefile for Python.h? Is there any tutorials?\nI hope to receive your reply soon!\nSincerely yours\nWANG Yihu",
                          "url": "https://github.com/idaholab/moose/discussions/26507#discussioncomment-8117728",
                          "updatedAt": "2024-01-13T12:37:59Z",
                          "publishedAt": "2024-01-13T12:37:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Wang-Yihu"
                          },
                          "bodyText": "Jason Miller\uff1a\nIn fact, I do not understand the logic in the above Makefile. I try to change this Makefile\nhttps://github.com/idaholab/moose/blob/3a1efc798c7227ea5057590ab37e266f1201845b/framework/contrib/hit/Makefile\nlike this:\n\nChange the pyconfig into the result of python3-config in the base environment instead of conda moose environment.\nAdd -I/home/sjtu/mambaforge3/include/python3.10 and -I/home/sjtu/mambaforge3/include/python3.10 at the end of the shell command.\nNow the Makefile in https://github.com/idaholab/moose/blob/3a1efc798c7227ea5057590ab37e266f1201845b/framework/contrib/hit/Makefile\nis changed into:\n\nCXX ?= g++\nUNAME := $(shell uname)\n\n#pyconfig := python3-config\npyconfig :=\"Usage: /home/sjtu/mambaforge3/bin/python3-config --prefix|--exec-prefix|--includes|--libs|--cflags|--ldflags|--extension-suffix|--help|--abiflags|--configdir|--embed\"\nifeq (, $(shell which $(pyconfig) 2>/dev/null))\n\tpyconfig := python-config\nendif\ncython := cython3\nifeq (, $(shell which $(cython) 2>/dev/null))\n\tcython := 'cython -3'\nendif\n\nifeq ($(UNAME), Darwin)\n\tDYNAMIC_LOOKUP := -undefined dynamic_lookup\nelse\n\tDYNAMIC_LOOKUP :=\nendif\n\n$(info Building hit for python with $(pyconfig))\n\nPYTHONPREFIX ?= `$(pyconfig) --prefix`\nPYTHONCFLAGS ?= `$(pyconfig) --cflags`\nHITCPP := hit.cpp\n\nWASP_DIR           ?= $(abspath ../wasp/install)\n\n# find the wasp libraries\nlib_suffix := so\nifeq ($(shell uname -s),Darwin)\n\tlib_suffix := dylib\n\twasp_LIBS         := $(shell find -E $(WASP_DIR)/lib -regex \".*/lib[a-z]+.$(lib_suffix)\")\nelse\n\twasp_LIBS         := $(wildcard $(WASP_DIR)/lib/libwasp*$(lib_suffix))\nendif\nwasp_LIBS         := $(notdir $(wasp_LIBS))\nwasp_LIBS         := $(patsubst %.$(lib_suffix),%,$(wasp_LIBS))\nwasp_LIBS         := $(patsubst lib%,-l%,$(wasp_LIBS))\nifeq ($(wasp_LIBS),)\n  $(error WASP does not seem to be available. Make sure to either run scripts/update_and_rebuild_wasp.sh in your MOOSE directory, or set WASP_DIR to a valid WASP install)\nendif\n\nwasp_CXXFLAGS  += -I$(WASP_DIR)/include\nwasp_LDFLAGS   += -Wl,-rpath,$(WASP_DIR)/lib -L$(WASP_DIR)/lib $(wasp_LIBS)\n\nhit: main.cc parse.cc lex.cc braceexpr.cc braceexpr.h lex.h parse.h\n\t$(CXX) -std=c++17 $(wasp_CXXFLAGS) -g $(CXXFLAGS) $< parse.cc lex.cc braceexpr.cc -o $@ $(wasp_LDFLAGS) -I/usr/include/python3.10/ -lpython3.10\n\nbindings: hit.so\n\nhit.so: parse.cc lex.cc braceexpr.cc\n\t$(CXX) -std=c++17 $(wasp_CXXFLAGS) -w -fPIC -lstdc++ -shared -L$(PYTHONPREFIX)/lib $(PYTHONCFLAGS) $(DYNAMIC_LOOKUP) $^ $(HITCPP) -o $@ $(wasp_LDFLAGS) -I/usr/include/python3.10/ -lpython3.10\n\n$(HITCPP): hit.pyx chit.pxd\n\t$(cython) -o $@ --cplus $< -I/usr/include/python3.10/ -lpython3.10\n\n.PRECIOUS: $(HITCPP)\n\n.PHONY: clean bindings\n\nclean:\n\trm -f hit hit.so\nNow I input these\ncd /home/sjtu/projects/moose/framework/contrib/hit/\nrm -r hit\ntouch *./\nconda activate moose\nmake\n\nNow a new hit is generated!\nI also add -I/home/sjtu/mambaforge3/include/python3.10 and -I/home/sjtu/mambaforge3/include/python3.10 in $(FRAMEWORK_DIR)/app.mk and $(FRAMEWORK_DIR)/build.mk like this discussion.\nHowever, when I try to build in my MOOSE app. Input\ncd home/sjtu/projects/lianxi_mf\nconda activate moose\nmake\n\nIt failed again!\nIn file included from /usr/include/python3.10/Python.h:8,\n                 from /home/sjtu/projects/lianxi_mf/src/main.C:16:\n/usr/include/python3.10/pyconfig.h:3:12: fatal error: x86_64-linux-gnu/python3.10/pyconfig.h: No such file or directory\n    3 | #  include <x86_64-linux-gnu/python3.10/pyconfig.h>\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ncompilation terminated.\nmake: *** [/home/sjtu/projects/moose/framework/build.mk:166: /home/sjtu/projects/lianxi_mf/src/main.x86_64-conda-linux-gnu.opt.lo] Error 1\n\nIt seems that I do not understand how MOOSE import python...",
                          "url": "https://github.com/idaholab/moose/discussions/26507#discussioncomment-8124606",
                          "updatedAt": "2024-01-14T15:55:31Z",
                          "publishedAt": "2024-01-14T15:55:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Wang-Yihu"
                  },
                  "bodyText": "Dear friends:\nI have import Python.h in MOOSE code recently. Steps are shown below: (my username is sjtu)\n\nFind head file Python.h and library file libpython3.10.so in the MOOSE environment(not base environment). These files' directories in my computer are /home/sjtu/mambaforge3/envs/moose/include/python3.10/Python.h and /home/sjtu/mambaforge3/envs/moose/lib/libpython3.10.so\nModify makefiles to add -I, -L, -l options. I add -I/home/sjtu/mambaforge3/envs/moose/include/python3.10/ -L/home/sjtu/mambaforge3/envs/moose/lib/ -lpython3.10 to app.mk and build.mk directly as shown in #26504\nInput #include \"/home/sjtu/mambaforge3/envs/moose/include/python3.10/Python.h\" to your MOOSE C++ code.\nInput these test code to your MOOSE C++ code.\n\nPy_Initialize();\nPyRun_SimpleString(\"print('Hello world!')\");\nPyFinalize();\n\nThis can be made in MOOSE environment in my computer successfully.\nCertainly, this method is not perfect. It is not recommended to modify files in MOOSE framework  app.mk and build.mk. There might be environment variable for linking Python.h and  libpython3.10.so in the MOOSE environment instead of hard-coding a path.",
                  "url": "https://github.com/idaholab/moose/discussions/26507#discussioncomment-8132061",
                  "updatedAt": "2024-01-15T11:27:02Z",
                  "publishedAt": "2024-01-15T11:27:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "You would want to modify your applications app.mk Makefile (and not the one in MOOSE) to link to what-ever-is you need from python3-config --cflags. I was only demonstrating how MOOSE makes use of some of Python's libraries by showing you the hit parser Makefile as an example, which makes use of python3-config.",
                          "url": "https://github.com/idaholab/moose/discussions/26507#discussioncomment-8133206",
                          "updatedAt": "2024-01-15T13:37:33Z",
                          "publishedAt": "2024-01-15T13:37:32Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "FluidProperties module: locate out-of-range node during linear iterations",
          "author": {
            "login": "garciapintado"
          },
          "bodyText": "Hello,\nI have a simulation (based on PorousFlow) which uses the FluidProperties module and tabulated properties for pure water. At a point, it does not converge:\n*** ERROR ***\nThe following error occurred in the object \"tabulated_water95\", of type \"TabulatedBicubicFluidProperties\".\nTemperature 1643.76 is outside the range of tabulated temperature (273.17, 1400).\n\n\nThis value (1643.76) is way beyond the common values I have after convergence. I am wondering how to locate the node having this issue. Please, any suggestion?\nJavier",
          "url": "https://github.com/idaholab/moose/discussions/26551",
          "updatedAt": "2024-01-15T07:20:50Z",
          "publishedAt": "2024-01-14T09:02:57Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe best way is probably to output the fluid properties on FAILED and locate the area using the exodus output.\nYou can use the FluidPropertiesMaterialPT for example to compute fluid properties as material properties. Then in that object you can set the output parameters to output to exodus\nNote that returning an error for out of range is not what we should be doing here. We created the solution Invalid interface to avoid crashing simulations on out of range errors.",
                  "url": "https://github.com/idaholab/moose/discussions/26551#discussioncomment-8123641",
                  "updatedAt": "2024-01-14T13:08:28Z",
                  "publishedAt": "2024-01-14T13:08:27Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "garciapintado"
                          },
                          "bodyText": "Hello Guillaume,\nMany thanks! I had missed FluidPropertiesMaterialPT.\nAlso, I see that SolutionInvalidInterface is not in the version in our cluster. Will update it to see if/how that helps now",
                          "url": "https://github.com/idaholab/moose/discussions/26551#discussioncomment-8124082",
                          "updatedAt": "2024-01-14T14:40:50Z",
                          "publishedAt": "2024-01-14T14:40:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I don't know if the interface is used in the fluid properties.\nBut it should be used so we can change that if you see it s not",
                          "url": "https://github.com/idaholab/moose/discussions/26551#discussioncomment-8125629",
                          "updatedAt": "2024-01-14T18:59:56Z",
                          "publishedAt": "2024-01-14T18:59:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok I checked, even in the latest moose it's still using a custom error behavior instead of the solutionInvalidityInterface.\nHowever, you can pass the error_on_out_of_bounds parameter as false to let it continue with the solve and a bad temperature. Then you can use the material property output to see where it happened",
                          "url": "https://github.com/idaholab/moose/discussions/26551#discussioncomment-8127806",
                          "updatedAt": "2024-01-15T02:11:24Z",
                          "publishedAt": "2024-01-15T02:11:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "garciapintado"
                  },
                  "bodyText": "Ah! Many thanks for checking!\nOK. I'll try this...\n\u00a0\nOn Monday, January 15, 2024 03:11 CET, Guillaume Giudicelli ***@***.***> wrote:\n\u00a0\n\u00a0\nOk I checked, even in the latest moose it's still using a custom error behavior instead of the solutionInvalidityInterface.\nHowever, you can pass the error_on_out_of_bounds parameter as false to let it continue with the solve and a bad temperature. Then you can use the material property output to see where it happened\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>[ { ***@***.***\": \"http://schema.org\", ***@***.***\": \"EmailMessage\", \"potentialAction\": { ***@***.***\": \"ViewAction\", \"target\": \"#26551 (reply in thread)\", \"url\": \"#26551 (reply in thread)\", \"name\": \"View Discussion\" }, \"description\": \"View this Discussion on GitHub\", \"publisher\": { ***@***.***\": \"Organization\", \"name\": \"GitHub\", \"url\": \"https://github.com\" } } ]***>\n\n\u00a0",
                  "url": "https://github.com/idaholab/moose/discussions/26551#discussioncomment-8129702",
                  "updatedAt": "2024-01-15T07:20:50Z",
                  "publishedAt": "2024-01-15T07:20:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Broken peacock",
          "author": {
            "login": "felixcrazzolara"
          },
          "bodyText": "Hello everyone,\nDid anyone else ever suffer from a broken peakcock visualizer? Since day one of me using Moose, when switching between the tabs of peacock, the application occasionally break. You can see an example below:\n\nAfter starting the application it looks like this (as it should):\n\nIn the terminal, I get the following errors:\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'",
          "url": "https://github.com/idaholab/moose/discussions/26550",
          "updatedAt": "2024-01-14T13:11:08Z",
          "publishedAt": "2024-01-14T07:45:10Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI have seen these rgb messages before I think they are just warnings.\nWhat platform are you using? Can you paste the output of the diagnostics script in moose/scripts ?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26550#discussioncomment-8123653",
                  "updatedAt": "2024-01-14T13:11:09Z",
                  "publishedAt": "2024-01-14T13:11:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "I'd like to generate a csv file with time dependent data of a certain variable in my input file but I don't know how.",
          "author": {
            "login": "GraphicsMonster"
          },
          "bodyText": "I would like to generate a csv file that contains the 'vonmises_stress' parameter's value with respect to the timestep it was calculated on but I don't know how. This is my input file as of now:\n[Mesh]\n\n        [annular]\n\n                type = AnnularMeshGenerator\n\n                nr = 10\n\n                rmin = 7.5\n\n                rmax = 10.0\n\n                nt = 40\n\n        []\n\n        [make3D]\n\n                type = MeshExtruderGenerator\n\n                extrusion_vector = '0 0 40'\n\n                num_layers = 10\n\n                bottom_sideset = 'bottom'\n\n                top_sideset = 'top'\n\n                input = annular\n\n        []\n\n[]\n\n\n\n[GlobalParams]\n\n        displacements = 'disp_x disp_y disp_z'\n\n[]\n\n\n\n[Variables]\n\n        [./T]\n\n                order = FIRST\n\n                family = LAGRANGE\n\n        [../]\n\n[]\n\n\n\n[AuxVariables]\n\n        [temp]\n\n        []\n\n[]\n\n\n\n[AuxKernels]\n\n        [temperature_ramp]\n\n                type = FunctionAux\n\n                execute_on = TIMESTEP_BEGIN\n\n                variable = temp\n\n                function = 300+5*t\n\n        []\n\n[]\n\n\n\n[Modules/TensorMechanics/Master]\n\n      [all]\n\n        add_variables = true\n\n        automatic_eigenstrain_names = true\n\n        generate_output = 'vonmises_stress'\n\n      []\n\n[]\n\n\n\n[Kernels]\n\n        [./diffused]\n\n                type = Diffusion\n\n                variable = T\n\n        [../]\n\n        [./euler]\n\n                type = ExampleTimeDerivative\n\n                variable = T\n\n                time_coefficient = 20.0\n\n        [../]\n\n[]\n\n\n\n[BCs]\n\n        [./inner]\n\n                type = DirichletBC\n\n                variable = T\n\n                boundary = 'rmin'\n\n                value = 573.15\n\n        [../]\n\n        [./outer]\n\n                type = NeumannBC\n\n                variable = T\n\n                boundary = 'rmax'\n\n                value = 0\n\n        [../]\n\n        [./x]\n\n                type = DirichletBC\n\n                variable = disp_x\n\n                boundary = 'rmin'\n\n                value = 0.0\n\n        [../]\n\n        [./y]\n\n                type = DirichletBC\n\n                variable = disp_y\n\n                boundary = 'rmin'\n\n                value = 0.0\n\n        [../]\n\n        [./z]\n\n                type = DirichletBC\n\n                variable = disp_z\n\n                boundary = 'rmin'\n\n                value = 0.0\n\n        [../]\n\n[]\n\n\n\n[Materials]\n\n        [elasticity]\n\n                type = ComputeIsotropicElasticityTensor\n\n                youngs_modulus = 1e9\n\n                poissons_ratio = 0.3\n\n        []\n\n        [stress]\n\n                type = ComputeLinearElasticStress\n\n        []\n\n        [expansion]\n\n                type = ComputeThermalExpansionEigenstrain\n\n                temperature = temp\n\n                thermal_expansion_coeff = 0.001\n\n                stress_free_temperature = 300\n\n                eigenstrain_name = thermal_expansion\n\n        []\n\n[]\n\n\n\n[Executioner]\n\n        type = Transient\n\n        solve_type = NEWTON\n\n        num_steps = 200\n\n        dt = 1\n\n[]\n\n\n\n[Outputs]\n\n                execute_on = 'timestep_end'\n\n                exodus = true\n\n                \n\n                [./vonmises_stress_output]\n\n                \ttype = CSV\n\n    \t\t\texecute_on = 'timestep_end'\n\n    \t\t\tfile_base = 'vonmises_stress_output.csv'\n\n                [../]\n\n[]\n\nMy other problem is this: What I really want from this simulation is the volumetric stress data with respect to the timestep, so basically how the vol. stress varied with respect to passing time in the simulation but I can't find any relevant modules/kernels that would calculate that for me. If you could please suggest something that would be super helpful.\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/26548",
          "updatedAt": "2024-01-14T13:06:17Z",
          "publishedAt": "2024-01-13T21:14:06Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIf you want the maximum or the integrated stress, look at postprocessors. In particular the ones performing reductions on material properties\nBy default, once you have set Outputs/csv=true, they will be output to CSV at each time step.\nIf you want the spatial distribution of the stress, then look at vector postprocessors. There is one that compute the local value of material properties and outputs it to CSV\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26548#discussioncomment-8123633",
                  "updatedAt": "2024-01-14T13:06:18Z",
                  "publishedAt": "2024-01-14T13:06:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Convergence Issue",
          "author": {
            "login": "manikumd22"
          },
          "bodyText": "Hi,\nI am facing a convergence issue while solving the problem. I'm not able to understand\nI am using this\n[Executioner]\n  type = Steady\n\n  solve_type = 'PJFNK'\n\n  line_search = 'none'\n\n  petsc_options = '-pc_svd_monitor'\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'svd'\n\n  nl_max_its = 500\n  nl_abs_tol = 1e-3\n  nl_rel_tol = 1e-3\n  l_tol = 1e-3\n\n**[]**\n\n\n175 Nonlinear |R| = \ufffd[31m2.470117e+00\ufffd[39m\n      SVD: condition number 1.927554157465e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740871e-01 6.165801564543e-01 6.500862399707e-01 7.889143652400e-01 8.554140553092e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\n176 Nonlinear |R| = \ufffd[31m3.275137e+00\ufffd[39m\n      SVD: condition number 1.927554157466e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740870e-01 6.165801564539e-01 6.500862399706e-01 7.889143652421e-01 8.554140553135e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\n177 Nonlinear |R| = \ufffd[32m1.092772e+00\ufffd[39m\n      SVD: condition number 1.927554157465e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740871e-01 6.165801564543e-01 6.500862399707e-01 7.889143652400e-01 8.554140553092e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n178 Nonlinear |R| = \ufffd[32m9.829421e-01\ufffd[39m\n      SVD: condition number 1.927554157446e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740898e-01 6.165801564547e-01 6.500862399704e-01 7.889143652411e-01 8.554140553115e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\n179 Nonlinear |R| = \ufffd[31m2.217569e+00\ufffd[39m\n      SVD: condition number 1.927554157466e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740870e-01 6.165801564539e-01 6.500862399706e-01 7.889143652421e-01 8.554140553135e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 270\n180 Nonlinear |R| = \ufffd[31m4.788777e+00\ufffd[39m\n      SVD: condition number 1.927554157466e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740870e-01 6.165801564539e-01 6.500862399706e-01 7.889143652421e-01 8.554140553135e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n181 Nonlinear |R| = \ufffd[31m2.800371e+01\ufffd[39m\n      SVD: condition number 1.927554157465e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740871e-01 6.165801564543e-01 6.500862399707e-01 7.889143652400e-01 8.554140553092e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 150\n182 Nonlinear |R| = \ufffd[32m1.244732e+01\ufffd[39m\n      SVD: condition number 1.927554157466e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740870e-01 6.165801564539e-01 6.500862399706e-01 7.889143652421e-01 8.554140553135e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n183 Nonlinear |R| = \ufffd[32m7.153971e+00\ufffd[39m\n      SVD: condition number 1.927554157456e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740884e-01 6.165801564550e-01 6.500862399707e-01 7.889143652417e-01 8.554140553112e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\n184 Nonlinear |R| = \ufffd[32m1.130401e+00\ufffd[39m\n      SVD: condition number 1.927554157466e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740870e-01 6.165801564539e-01 6.500862399706e-01 7.889143652421e-01 8.554140553135e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\n185 Nonlinear |R| = \ufffd[31m3.821674e+00\ufffd[39m\n      SVD: condition number 1.927554157466e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740870e-01 6.165801564539e-01 6.500862399706e-01 7.889143652421e-01 8.554140553135e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n186 Nonlinear |R| = \ufffd[32m1.131193e+00\ufffd[39m\n      SVD: condition number 1.927554157466e+05, 0 of 50 singular values are (nearly) zero\n      SVD: smallest singular values: 2.671924740870e-01 6.165801564539e-01 6.500862399706e-01 7.889143652421e-01 8.554140553135e-01\n      SVD: largest singular values : 3.836380418951e+04 4.018086662836e+04 4.171929215064e+04 5.022839962720e+04 5.150279642701e+04\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 240\n187 Nonlinear |R| = \ufffd[31m4.906026e+01\ufffd[39m",
          "url": "https://github.com/idaholab/moose/discussions/26547",
          "updatedAt": "2024-01-13T18:03:32Z",
          "publishedAt": "2024-01-13T01:53:03Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe linear solves are not converging, so the nonlinear solves are also not converging.\nSVD is not really meant for solving systems, we just use it to look at the singular values. Did you try a more classic preconditioner like LU?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26547#discussioncomment-8119413",
                  "updatedAt": "2024-01-13T17:45:08Z",
                  "publishedAt": "2024-01-13T17:45:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "_use_snes_vi_solver and _barrier",
          "author": {
            "login": "selarem"
          },
          "bodyText": "Hello,\nWhen considering  use_snes_vi_solver in  ComputeLinearElasticPFFractureStress.C, I think that it does not work properly when we do have _barrier : the damage is negatif at the biginning of the simulation until barrier reached.  The block that assigns history variable is :\n// // Assign history variable\n  Real hist_variable = _H_old[_qp];\n  if (_use_snes_vi_solver)\n  {\n    _H[_qp] = F_pos;\n\n    if (_use_current_hist)\n      hist_variable = _H[_qp];\n  }\n  else\n  {\n    if (F_pos > _H_old[_qp])\n      _H[_qp] = F_pos;\n    else\n      _H[_qp] = _H_old[_qp];\n\n    if (_use_current_hist)\n      hist_variable = _H[_qp];\n \n    if (hist_variable < _barrier[_qp])\n     hist_variable = _barrier[_qp];\n  }  \n\nI think that the two last instructions should be put outside like this:\n// // Assign history variable\n  Real hist_variable = _H_old[_qp];\n  if (_use_snes_vi_solver)\n  {\n    _H[_qp] = F_pos;\n\n    if (_use_current_hist)\n      hist_variable = _H[_qp];\n  }\n  else\n  {\n    if (F_pos > _H_old[_qp])\n      _H[_qp] = F_pos;\n    else\n      _H[_qp] = _H_old[_qp];\n\n    if (_use_current_hist)\n      hist_variable = _H[_qp];\n// Original\n//    if (hist_variable < _barrier[_qp])\n //     hist_variable = _barrier[_qp];\n  }  \n  //  Correction 11/01/2024\n  if (hist_variable < _barrier[_qp])\n                hist_variable = _barrier[_qp];\n\nregards,\nsaber",
          "url": "https://github.com/idaholab/moose/discussions/26534",
          "updatedAt": "2024-01-12T15:50:51Z",
          "publishedAt": "2024-01-11T11:48:20Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "My guess is that the SNES VI solver should be imposing that constraining so we should not need to do it ourselves?\nbut @jiangwen84  will know for sure",
                  "url": "https://github.com/idaholab/moose/discussions/26534#discussioncomment-8093919",
                  "updatedAt": "2024-01-11T11:53:16Z",
                  "publishedAt": "2024-01-11T11:53:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "@selarem your changes seem to be reasonable to me. When we initially implemented it, we only considered either using VI without barrier or using barrier without VI, did not think about combing these two.\nAre you willing to make a PR to correct it? Please do not forget to add a regression test.",
                  "url": "https://github.com/idaholab/moose/discussions/26534#discussioncomment-8095232",
                  "updatedAt": "2024-01-11T13:21:03Z",
                  "publishedAt": "2024-01-11T13:21:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "There's another problem that we have observed concerning the bandwidth of the damaged zone: when a barrier is considered in the case of linear fracture energy (3/8 *  gc /Lc  * d) the band width is theoretically 4 * Lc (Lc being the internal  length scale). This will never be obtained in the actual implementation in moose!  The instruction : hist_variable = _barrier[_qp]; should never be executed means invoked. This used to happen (before our correction suggestion) when _use_snes_vi_solver = true (and the correct bounds for the Executioner block).\nSo in summary, the older version was fine in the unique case of    considering a barrier and using snes solver.  When  _use_snes_vi_solver = false;  the bandwidth could be 20*Lc.\nwith the correction we have suggested, whenever we have a barrier (with or without use of the snes solver) , the bandwidth is too large.\nSo in case of linear fracture energy, the snes solver has to be mandatory.  So the code should be something like this:\n if (_barrier)\n_use_snes_vi_solver = true; \n\nif (_use_snes_vi_solver)\n  {\n    _H[_qp] = F_pos;\n\n    if (_use_current_hist)\n      hist_variable = _H[_qp];\n  }",
                          "url": "https://github.com/idaholab/moose/discussions/26534#discussioncomment-8111657",
                          "updatedAt": "2024-01-12T15:50:51Z",
                          "publishedAt": "2024-01-12T15:50:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to get crack location",
          "author": {
            "login": "xingwang01"
          },
          "bodyText": "I use BreakMeshByBlockGenerator and CohesiveZoneMaster for simulating crack propagation, and I want to get the location of the crack in the process of crack propagation and crack width information, such as used within the fracture fluid is calculated. How can I get this information.",
          "url": "https://github.com/idaholab/moose/discussions/26379",
          "updatedAt": "2024-01-12T07:41:40Z",
          "publishedAt": "2023-12-20T08:17:11Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@recuero",
                  "url": "https://github.com/idaholab/moose/discussions/26379#discussioncomment-7907215",
                  "updatedAt": "2023-12-20T11:23:07Z",
                  "publishedAt": "2023-12-20T11:23:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@hugary1995",
                          "url": "https://github.com/idaholab/moose/discussions/26379#discussioncomment-8096046",
                          "updatedAt": "2024-01-11T14:24:28Z",
                          "publishedAt": "2024-01-11T14:24:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "Are you planning to get those information in the code or just visualize them in the paraview?\nThe crack opening displacement and damage parameter (indicate the crack locations) are are stored as material properties, so you should be able to get those through getMaterialProperties API or look at the output Aux Variable in Paraview.",
                          "url": "https://github.com/idaholab/moose/discussions/26379#discussioncomment-8096687",
                          "updatedAt": "2024-01-11T14:41:20Z",
                          "publishedAt": "2024-01-11T14:41:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xingwang01"
                          },
                          "bodyText": "I want to use the cohesive force model to simulate the fracture propagation under fluid-structure coupling, but the model either does not propagate or does not converge.  I would like to know if the fluid field was taken into account when balancing forces within the crack. If fluid mechanics is considered, how to solve convergence, if not how to deal with the fluid mechanics balance in the fracture.",
                          "url": "https://github.com/idaholab/moose/discussions/26379#discussioncomment-8106229",
                          "updatedAt": "2024-01-12T07:41:41Z",
                          "publishedAt": "2024-01-12T07:41:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Multi-app System Run Sub App Every Other Time Step",
          "author": {
            "login": "naabwxt"
          },
          "bodyText": "What would be the best way to be able to run sub-apps every nth timestep?",
          "url": "https://github.com/idaholab/moose/discussions/26529",
          "updatedAt": "2024-01-11T22:01:19Z",
          "publishedAt": "2024-01-10T15:27:21Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I would use Controls, the conditional enable ones\nhttps://mooseframework.inl.gov/syntax/Controls/index.html\nI d probably bake the nth timestep logic into a ParsedFunction or a ParsedPostprocessor (which can be used in a ParsedFunction)",
                  "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8081878",
                  "updatedAt": "2024-01-10T15:29:27Z",
                  "publishedAt": "2024-01-10T15:29:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "So would I set the enabled flag on the TransientMultiApp to be equal to the value of a ParsedFunctionControl block?",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8082470",
                          "updatedAt": "2024-01-10T16:00:08Z",
                          "publishedAt": "2024-01-10T16:00:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "unfortunately that wont work, the ParsedFunctionControl is for THM simulations and we dont use it for enabling objects.\nI would use a ParsedFunction inside a https://mooseframework.inl.gov/source/controls/ConditionalFunctionEnableControl.html",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8082620",
                          "updatedAt": "2024-01-10T16:12:12Z",
                          "publishedAt": "2024-01-10T16:12:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "Thanks. This seems to mostly work. It does the enable and disable, but it does not seem to work on the correct initial time step. Below is what I added...\n[AuxVariables]\n  [timesteps]\n    family = SCALAR\n    initial_condition = 0  \n  []\n[]\n\n[AuxScalarKernels]\n  [count_steps]\n    type = FunctionScalarAux\n    variable = timesteps\n    execute_on = TIMESTEP_BEGIN\n    function = fcount_steps\n  []\n[]\n\n[Functions]\n  [fcount_steps]\n    type = ParsedFunction\n    value = 'a+1'\n    vars = 'a'\n    vals = 'timesteps'\n  []\n  [subapp_ctrl]\n    type = ParsedFunction\n    value = 'a%5=0'\n    vars = 'a'\n    vals = 'timesteps'\n  []\n[]\n\n[Controls]\n  [disable]\n      type = ConditionalFunctionEnableControl\n      conditional_function = subapp_ctrl\n      enable_objects = 'MultiApps::sub'\n      execute_on = TIMESTEP_END \n  []\n[]\n\nWhat I was trying to have it do was have the subapp run every 5th timestep and it does on every one but the first run. Right now the subapp will run on the 8th, 13th and 18th timesteps. I can see the scalar outputs of the timestep variable increments correctly with time, but it appears that the ConditionalFunctionEnableControl is out of sync with the aux system updating the timesteps variable.\nThe 5th timestep isn't a critical number, it was just a value that would run often enough in the test while also clearly showing a break between runs in the log output.\nThanks!",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8100611",
                          "updatedAt": "2024-01-11T20:38:50Z",
                          "publishedAt": "2024-01-11T20:38:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nI could see that. There's sort of an sequence of execution of objects before the updated value gets seen, 3 steps is a little excessive here. I would have expected maybe 1 or 2.\nI would say we need a NumTimeSteps postprocessor. We dont have that. So let's use these two:\nhttps://mooseframework.inl.gov/source/materials/TimeStepMaterial.html that provides a timestep material property\nhttps://mooseframework.inl.gov/source/postprocessors/ElementExtremeMaterialProperty.html\nthen feed the PP in the ParsedFunction.\nIf you execute the postprocessor often enough, it will be up to date for the evaluation of the function done on step 5.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8100760",
                          "updatedAt": "2024-01-11T21:06:02Z",
                          "publishedAt": "2024-01-11T20:56:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "That method seems a bit cleaner to get the timesteps, but I can't seem to get the PP to execute often enough. If I set execute_on = 'INITIAL TIMESTEP_BEGIN TIMESTEP_END' it now starts on step 7 and goes every 5 after that. But if I do execute_on = 'ALWAYS' the PP doesn't seem to update at all.\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+\n| time           | gap_distance   | gap_mm         | timestep_pp    |\n+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   1.000000e+00 |   3.000000e-04 |   3.000000e-01 |   0.000000e+00 |\n|   2.000000e+00 |   3.000000e-04 |   3.000000e-01 |   0.000000e+00 |\n|   3.000000e+00 |   9.718305e-05 |   9.718305e-02 |   0.000000e+00 |\n|   4.000000e+00 |   1.025832e-04 |   1.025832e-01 |   0.000000e+00 |\n|   5.000000e+00 |   1.025832e-04 |   1.025832e-01 |   0.000000e+00 |\n+----------------+----------------+----------------+----------------+\n\nThis is how I setup the material and PP\n[timestep_pp]\n      type = ElementExtremeMaterialProperty\n      mat_prop = time_step\n      value_type = max\n      # execute_on = 'INITIAL TIMESTEP_BEGIN TIMESTEP_END'\n      execute_on = 'ALWAYS'\n[]\n[time]\n    type = TimeStepMaterial\n[]\n\nI think a NumTimeSteps PostProcessor would be good to have, but I am thinking it will not solve the issue. I would still need to adjust the ParsedFunction to trigger earlier to account for the delay.",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8101177",
                          "updatedAt": "2024-01-11T21:50:26Z",
                          "publishedAt": "2024-01-11T21:50:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ALWAYS should no longer exist for postprocessors. Please do not use that, it was removed for a reason (not as often as always would suggest)\nStep 7 is better I guess. I think I would understand 6. Since you start at 1 at the end of timestep 1, then I could see 5 at the end of timestep 5 being too late for the Control (which does not execute at the very end)\nWould you be open to just doing this?\n  [subapp_ctrl]\n    type = ParsedFunction\n    value = '(a-2)%5=0'\n    vars = 'a'\n    vals = 'timesteps'\n  []\n[]\n\nI know it s not super clean, but it should trigger on 5\nAnother thing would be to execute the control on timestep begin.",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8101201",
                          "updatedAt": "2024-01-11T21:54:48Z",
                          "publishedAt": "2024-01-11T21:53:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "Ah ok.\nYeah, making the change like that shouldn't be an issue. Do you think it would be consistent with the offset? Or if I changed the number of steps to skip would I also need to change the a-2 to a different offset?",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8101231",
                          "updatedAt": "2024-01-11T21:58:07Z",
                          "publishedAt": "2024-01-11T21:58:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I would expect the offset and the frequency (currently 5) to be independent.",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8101249",
                          "updatedAt": "2024-01-11T21:59:45Z",
                          "publishedAt": "2024-01-11T21:59:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "Ok thanks!\nI will move forward with the PP approach since it requires less additions to the input file and update the offset.\nAppreciate the help.",
                          "url": "https://github.com/idaholab/moose/discussions/26529#discussioncomment-8101263",
                          "updatedAt": "2024-01-11T22:01:20Z",
                          "publishedAt": "2024-01-11T22:01:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "1 test failing while running an example",
          "author": {
            "login": "hardud"
          },
          "bodyText": "While running an example with Pre-built moose, most tests are getting passed, a few are being skipped and \"1 test is always failing\" with whatever example I run.\nAlso, under the \"ls $CONDA_PREFIX/moose/share/moose\", I am unable to find 'heat_conduction'\nI therefore tried running 'heat_transfer' and 'porous_flow' but even for them, 1 test is failing every time.\nDoes anyone have any idea what's happening?",
          "url": "https://github.com/idaholab/moose/discussions/26539",
          "updatedAt": "2024-01-11T21:27:44Z",
          "publishedAt": "2024-01-11T21:20:18Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nFor heat_conduction, that's the former name of the heat_transfer module. No need to try to run the heat_conduction tests.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26539#discussioncomment-8101000",
                  "updatedAt": "2024-01-11T21:27:45Z",
                  "publishedAt": "2024-01-11T21:27:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}