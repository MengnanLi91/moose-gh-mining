{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wMy0yOVQwNzoxNTo0NS0wNTowMM4AYi2U"
    },
    "edges": [
      {
        "node": {
          "title": "Questions about the output files in Cardinal turorials",
          "author": {
            "login": "Ethan-xj"
          },
          "bodyText": "@GiudGiud @milljm Hello everyone! When running the standalone example, I noticed that in addition to turbPipe.f, Cardinal also outputs avgturbPipe.f, rm2turbPipe.f, and rmsturbPipe.f. I would like to know what these additional output files represent and how they are generated through which settings.",
          "url": "https://github.com/idaholab/moose/discussions/27254",
          "updatedAt": "2024-04-01T13:56:38Z",
          "publishedAt": "2024-04-01T13:30:12Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nthis is best asked in the Cardinal user forum\nguillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27254#discussioncomment-8973017",
                  "updatedAt": "2024-04-01T13:42:51Z",
                  "publishedAt": "2024-04-01T13:42:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "OK. Thank you Giud",
                          "url": "https://github.com/idaholab/moose/discussions/27254#discussioncomment-8973149",
                          "updatedAt": "2024-04-01T13:56:39Z",
                          "publishedAt": "2024-04-01T13:56:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Errors with JFNK Solver in Parallel Execution",
          "author": {
            "login": "hityyds"
          },
          "bodyText": "Recently, while testing my own program, I've encountered an issue: when using JFNK for solving, the program throws errors, but similar problems do not arise when using PJFNK for solving.\nSpecifically, when employing the Steady executioner with JFNK solver for parallel execution, the program prompts the following error:\nWe caught a libMesh error in ThreadedElementLoopBase: No index 90600 in ghosted vector.\nVector contains [0,30720)\nAnd empty ghost array.\n\nwhere 30720 is the number of local dofs. However, when utilizing PJFNK, this issue does not occur.\nAdditionally, when using the Eigenvalue executioner, even in serial mode with the JFNK solver, the following error arises:\n -------------------------------\n Free power iteration starts ...\n -------------------------------\n\n[0]PETSC ERROR: --------------------- Error Message --------------------------------------------------------------\n[0]PETSC ERROR: Unknown type. Check for miss-spelling or missing package: https://petsc.org/release/install/install/#external-packages\n[0]PETSC ERROR: Unable to find requested PC type moosepc\n[0]PETSC ERROR: WARNING! There are unused option(s) set! Could be the program crashed before usage or a spelling mistake, etc!\n[0]PETSC ERROR:   Option left: name:-i value: model1_case1.i source: command line\n[0]PETSC ERROR:   Option left: name:-ksp_atol value: 1e-50 source: code\n[0]PETSC ERROR:   Option left: name:-ksp_converged_reason value: ::failed source: code\n[0]PETSC ERROR:   Option left: name:-ksp_max_it value: 500 source: code\n......\n\nHowever, isn't preprocessing unnecessary when using the JFNK method?\nThe input cards used for testing previously yielded accurate results when utilizing the PJFNK method. The meshes used in testing were generated using MOOSE commands, but custom materials, kernels, and boundary conditions were applied during testing. However, these custom classes only involve simple overloading of functions related to Qp calculations. I haven't made any modifications regarding parallelism or preconditioners, so I'm at a loss regarding the occurrence of these two issues. Does anyone know how to address these problems? I've attempted to pinpoint which part of the code is causing the errors but have been unsuccessful. Can anyone provide guidance on how to locate the erroneous code?\nThank you for your assistance.\nSincerely,\nhityyds",
          "url": "https://github.com/idaholab/moose/discussions/27247",
          "updatedAt": "2024-06-17T12:35:14Z",
          "publishedAt": "2024-03-31T14:38:23Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAre you creating a preconditioner for JFNK?\nIn a Preconditioning or the Executioner block. You probably should not.\nIt would be good to have a minimal example that shows this error if we want to look into it\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27247#discussioncomment-8972735",
                  "updatedAt": "2024-04-01T13:10:56Z",
                  "publishedAt": "2024-04-01T13:10:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Convergence error in Cohesive zone model",
          "author": {
            "login": "sidharthsarmah"
          },
          "bodyText": "Hi @arovinelli , I am trying to implement a simple cohesive zone model, but I encountered convergence issue on unloading. As suggested in paper (https://www.sciencedirect.com/science/article/pii/S0013794416303198), I can implement a viscous parameter to converge it, but I am still encountering convergence issue, could you suggest on how to overcome it.\nIs it related to the value of the viscous parameter or something related to refinement of mesh, please suggest.",
          "url": "https://github.com/idaholab/moose/discussions/27189",
          "updatedAt": "2024-04-01T04:02:11Z",
          "publishedAt": "2024-03-25T22:10:17Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "sidharthsarmah"
                  },
                  "bodyText": "",
                  "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8920565",
                  "updatedAt": "2024-03-27T15:06:19Z",
                  "publishedAt": "2024-03-26T21:13:57Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nno idea on this particular topic. I would go through the steps here\nhttps://mooseframework.inl.gov/moose/application_usage/failed_solves.html",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8929242",
                          "updatedAt": "2024-03-27T14:26:46Z",
                          "publishedAt": "2024-03-27T14:26:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Thanks @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8929863",
                          "updatedAt": "2024-03-27T15:06:13Z",
                          "publishedAt": "2024-03-27T15:06:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , I am getting this error, could you suggest. its working in my system but not in cluster:\n*** ERROR ***\nUnable to open file \"/lustre04/scratch/sidharth/CZM_4340L/100_Notch.inp-mesh.cpr\". Check to make sure that it exists and that you have read permission.",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8932801",
                          "updatedAt": "2024-03-27T19:29:19Z",
                          "publishedAt": "2024-03-27T19:29:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what does ls /lustre04/scratch/sidharth/CZM_4340L/ return?\nMOOSE is expecting to see a mesh file there, looks like it s not there",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8932967",
                          "updatedAt": "2024-03-27T19:51:33Z",
                          "publishedAt": "2024-03-27T19:51:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "Is your new model different than the existing models in MOOSE?\nIn general, convergence issue is complicated. If you are using existing models, I would suggest you look at your problem setup, solver choice, loading conditions, etc. If you are developing your own model, then I would suggest check your Jacobian, residual.",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8951669",
                          "updatedAt": "2024-03-29T13:18:31Z",
                          "publishedAt": "2024-03-29T13:18:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "arovinelli"
                          },
                          "bodyText": "Hi @sidharthsarmah, if you have issues on unloading (i.e. reducing the jump) you are probably not keeping track of a damage parameter properly or you haven't implemented the unload branch of your CZM properly. (Unloading has a different path than loading when damage is present)",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8951932",
                          "updatedAt": "2024-03-29T13:48:53Z",
                          "publishedAt": "2024-03-29T13:48:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @arovinelli , maybe I am using the wrong term 'unloading', I meant to say this part when the traction starts to drop to zero as separation occurs. There is issue related to convergence here. \nWhen I introduce a viscous term (in red), it converges but the values are high, could you please check what is wrong:\n\n#include \"ScheiderViscous.h\"\n\nregisterMooseObject(\"SolidMechanicsApp\", ScheiderViscous);\n\nInputParameters\nScheiderViscous::validParams()\n{\n  InputParameters params = CZMComputeLocalTractionTotalBase::validParams();\n    params.addClassDescription(\"Scheider cohesive law\");\n    params.addRequiredParam<Real>(\"normal_gap_at_maximum_normal_traction\",\"d0_normal\");\n    params.addRequiredParam<Real>(\"tangential_gap_at_maximum_shear_traction\",\"d0_shear\");\n    params.addRequiredParam<Real>(\"maximum_normal_traction\",\"T0_normal\");\n    params.addRequiredParam<Real>(\"maximum_shear_traction\", \"T0_shear\");\n    params.addParam<MaterialPropertyName>(\"c_tot\", \"total concentration\");\n    params.addParam<Real>(\"viscosity\", \"Viscosity\");\n  return params;\n}\n\nScheiderViscous::ScheiderViscous(const InputParameters & parameters)\n  : CZMComputeLocalTractionTotalBase(parameters),\n    _delta_u0({getParam<Real>(\"normal_gap_at_maximum_normal_traction\"),\n               getParam<Real>(\"tangential_gap_at_maximum_shear_traction\"),\n               getParam<Real>(\"tangential_gap_at_maximum_shear_traction\")}),\n    _max_allowable_traction({getParam<Real>(\"maximum_normal_traction\"),\n                             getParam<Real>(\"maximum_shear_traction\"),\n                             getParam<Real>(\"maximum_shear_traction\")}),\n    _interface_displacement_jump_old(\n    getMaterialPropertyOld<RealVectorValue>(_base_name + \"interface_displacement_jump\")),\n    _c_tot(getADMaterialProperty<Real>(\"c_tot\")),\n    _viscosity(getParam<Real>(\"viscosity\"))\n{\n}\n\ntraction_local(i) = _viscosity*(_max_allowable_traction(i)/_delta_u0(i))*((_interface_displacement_jump[_qp](i)- _interface_displacement_jump_old[_qp](i))/_dt) + ...\n\ntraction_jump_derivatives_local(i, j) = _viscosity*(_max_allowable_traction(i)/_delta_u0(i))*(1/_dt) +  ...",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8952688",
                          "updatedAt": "2024-03-29T15:10:03Z",
                          "publishedAt": "2024-03-29T15:09:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "arovinelli"
                          },
                          "bodyText": "@sidharthsarmah your traction is simply a function of the current jump and does not depends of history. There isn't an irreversible damage variable, thus I can see how your model does have trouble converging but gets better when you add viscosity.\nYou should add an irreversible damage parameter and properly account for reloading scenarios. This will fix most if not all of your problems",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8953483",
                          "updatedAt": "2024-03-29T16:06:44Z",
                          "publishedAt": "2024-03-29T16:06:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @arovinelli , I did use the previous jump in the equation:\nIs the damage parameter one way to get rid of convergence, as it was mentioned viscosity is another way to get rid of it, please suggest. Can you refer on where do I need to add the damage variable?\n\n_interface_displacement_jump_old(\n    getMaterialPropertyOld<RealVectorValue>(_base_name + \"interface_displacement_jump\")),\n\ntraction_local(i) = _viscosity*(_max_allowable_traction(i)/_delta_u0(i))*((_interface_displacement_jump[_qp](i)- _interface_displacement_jump_old[_qp](i))/_dt) + ...",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8953631",
                          "updatedAt": "2024-03-29T16:32:07Z",
                          "publishedAt": "2024-03-29T16:24:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "arovinelli"
                          },
                          "bodyText": "but you still recover damage if your displacement jump decreases, i.e. your stiffness does not degrades monotonically. if you unload (change the BC to unload) you should not go back on the same path as when you loaded.",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8953695",
                          "updatedAt": "2024-03-29T16:32:21Z",
                          "publishedAt": "2024-03-29T16:32:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "arovinelli"
                  },
                  "bodyText": "yes, but you need to make sure you have zero traction at 0 jump, also you need to specify what is going to happen if the traction / jump is negative (usually negative jump you want the undamaged stiffness times a penalty factor e.g. 1e3) which for now you can set to one",
                  "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8953867",
                  "updatedAt": "2024-03-29T16:49:24Z",
                  "publishedAt": "2024-03-29T16:49:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Sorry @arovinelli , I am a bit confused about this terms you are mentioning, could you help me what changes I need to make in the code?\nThese are the two conditions which I have added to the TSL, please suggest.\n\nif (_interface_displacement_jump[_qp](i) < 0.0)\n                    traction_local(i) = _max_allowable_traction(i) * 1;\n                \n if (_interface_displacement_jump[_qp](i) == 0.0)\n                    traction_local(i) = _max_allowable_traction(i) * 0;\n\nif (_interface_displacement_jump[_qp](i) < 0.01*_delta_u0(i))\n                    traction_local(i) = _max_allowable_traction(i) * (2*(_interface_displacement_jump[_qp](i)/(0.01*_delta_u0(i))) - std::pow(_interface_displacement_jump[_qp](i)/(0.01*_delta_u0(i)), 2));\n                \n                else if (_interface_displacement_jump[_qp](i) >= 0.01*_delta_u0(i) && _interface_displacement_jump[_qp](i) <= 0.5*_delta_u0(i))\n                    traction_local(i) = _max_allowable_traction(i);\n                \n                else if (_interface_displacement_jump[_qp](i) > 0.5*_delta_u0(i) && _interface_displacement_jump[_qp](i) <= 1*_delta_u0(i))\n                    traction_local(i) = _viscosity*(_max_allowable_traction(i)/_delta_u0(i))*((_interface_displacement_jump[_qp](i)- _interface_displacement_jump_old[_qp](i))/_dt) + _max_allowable_traction(i) * (2*std::pow((_interface_displacement_jump[_qp](i)-0.5*_delta_u0(i))/(_delta_u0(i)-0.5*_delta_u0(i)), 3)  - 3*std::pow((_interface_displacement_jump[_qp](i)-0.5*_delta_u0(i))/(_delta_u0(i)-0.5*_delta_u0(i)), 2) + 1);\n                \n                else if (_interface_displacement_jump[_qp](i) > 1*_delta_u0(i))\n                    traction_local(i) = 0.0000001*_interface_displacement_jump[_qp](i);",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8954227",
                          "updatedAt": "2024-03-29T17:24:00Z",
                          "publishedAt": "2024-03-29T17:21:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "arovinelli"
                          },
                          "bodyText": "if delta <=0 T=T0deltapenalty_factor\nthis is for the negative jump\nthe unloading conditions is a bit different a comes into play only for positive jumps\nloading condition -> delta>0 & delta >= delta_old\nunloading condition ->  delta>0 delta < delta_old\nyou will need to keep track of the maximum positive jump ever obtained, and its associated traction\ndelta_max_ever = max(delta_max_ever_old, current_delta)\nT_delta_max_ever = water value comes from you undameged TSL for delta_max_ever\nnow assume damage kicks in only after delta_max_ever > delta1\nif loading or if delta_max_ever_old <= delta 1\nT = whatever comes from your TSL for delta <1\nelse (unloading with delta_max_ever_old > delta1)\nT= delta/delta_max_ever*T_delta_max_ever",
                          "url": "https://github.com/idaholab/moose/discussions/27189#discussioncomment-8954378",
                          "updatedAt": "2024-03-29T17:41:56Z",
                          "publishedAt": "2024-03-29T17:41:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Set periodic boundary to calculate the rotationally symmetric structure",
          "author": {
            "login": "lucuo"
          },
          "bodyText": "Hello, I want to calculate a quarter ring using a rotationally symmetric periodic boundary, using a [periodic] boundary set on both sides of the figure below, and set a symmetric constraint on one side. But the mechanical calculation was wrong, it seems, because moose's periodic boundary simply equates the values of disp_x and disp_y at the two boundaries, whereas I wanted their displacement vectors to be equal after the Angle transformation.\nIs there any other way to set periodic boundaries of rotational symmetry (besides setting symmetric constraints on both sides)?",
          "url": "https://github.com/idaholab/moose/discussions/27241",
          "updatedAt": "2024-03-30T16:55:21Z",
          "publishedAt": "2024-03-30T04:34:40Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIf you are not going to use MPI / distributed paralellism, this can be coded up fairly easily using functors. Functors can be evaluated arbitrarily anywhere on the domain, so on the left boundary you could evaluate the functors (here variables) on the bottom boundary\nThis post did this for some sort of shifted periodic boundary condition:\n#26854\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27241#discussioncomment-8959605",
                  "updatedAt": "2024-03-30T14:10:12Z",
                  "publishedAt": "2024-03-30T14:10:11Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lucuo"
                          },
                          "bodyText": "Thank you for your answer. But my problems don't seem to be quite the same as his.\nMy two-dimensional model divides the displacement vector into disp_x and disp_y in cartesian coordinates, and  I want to equal the  displacement vector through the angle transformation on both boundaries.\n\nSimilar to the cyclic symmetric periodic boundary in COMSOL.",
                          "url": "https://github.com/idaholab/moose/discussions/27241#discussioncomment-8960063",
                          "updatedAt": "2024-03-30T15:45:02Z",
                          "publishedAt": "2024-03-30T15:45:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It s not the same so you can\u2019t use their code.\nBut it s very similar, you could solve this with a dirichlet BC on one surface that is set to the desired transformation of the displacement on the other.\nIf you are asking if we have a cyclic symmetric periodic BC in moose the answer is not. We don\u2019t have any immediate plans for it either. If you wanted to implement it, that would be a good thing",
                          "url": "https://github.com/idaholab/moose/discussions/27241#discussioncomment-8960115",
                          "updatedAt": "2024-03-30T15:54:02Z",
                          "publishedAt": "2024-03-30T15:54:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lucuo"
                          },
                          "bodyText": "If I want to write cyclic symmetric periodic boundaries. Is it possible to modify the [constraints] module\uff1f",
                          "url": "https://github.com/idaholab/moose/discussions/27241#discussioncomment-8960162",
                          "updatedAt": "2024-03-30T16:01:10Z",
                          "publishedAt": "2024-03-30T16:01:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "That's a good idea as well.",
                          "url": "https://github.com/idaholab/moose/discussions/27241#discussioncomment-8960442",
                          "updatedAt": "2024-03-30T16:55:22Z",
                          "publishedAt": "2024-03-30T16:55:21Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Mesh partitioning optimization problem",
          "author": {
            "login": "nuomi68"
          },
          "bodyText": "Hello everyone\uff01\nI have observed that mesh partitioning in MOOSE is significantly faster compared to using LibMesh directly. I'm curious to understand the optimizations or enhancements made within MOOSE that contribute to this speedup in mesh partitioning. Are these optimizations something that can be leveraged solely within LibMesh?\nMy current problem-solving cycle is quite complex and challenging to implement directly within the MOOSE framework; otherwise, I would be inclined to utilize MOOSE for my simulations. I'm specifically interested in whether there are ways to achieve similar partitioning speed improvements by tweaking settings or using certain features in LibMesh directly. Currently, I'm using the default Metis partitioner provided by LibMesh.\nAny insights or suggestions on how to optimize mesh partitioning speed within LibMesh or details about the enhancements made in MOOSE would be greatly appreciated.",
          "url": "https://github.com/idaholab/moose/discussions/27235",
          "updatedAt": "2024-03-30T14:18:46Z",
          "publishedAt": "2024-03-29T17:32:02Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhich partitioner are you interested about in MOOSE?\nSome are very simple so they run very fast.\nDId you read the partitioning doco?\nhttps://mooseframework.inl.gov/syntax/Mesh/Partitioner/index.html",
                  "url": "https://github.com/idaholab/moose/discussions/27235#discussioncomment-8959661",
                  "updatedAt": "2024-03-30T14:18:47Z",
                  "publishedAt": "2024-03-30T14:18:46Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "About the website XFEM case acquisition",
          "author": {
            "login": "lucuo"
          },
          "bodyText": "I am now learning the XFEM program. I would like to know whether I can obtain the input file for the demonstration calculation case of XFEM\uff08such as the case below\uff09 on MOOSE's official website, or where I can obtain it? Can anyone answer that for me? Thank you",
          "url": "https://github.com/idaholab/moose/discussions/27211",
          "updatedAt": "2024-03-30T04:37:13Z",
          "publishedAt": "2024-03-28T13:33:24Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@hugary1995",
                  "url": "https://github.com/idaholab/moose/discussions/27211#discussioncomment-8940738",
                  "updatedAt": "2024-03-28T13:34:42Z",
                  "publishedAt": "2024-03-28T13:34:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "@lucuo I made this simulation a couple of years ago. Unfortunately, I did not keep the input file. @lynnmunday has been recently working on the XFEM work, and he might be able to provide you an input file of similar or simpler problem.",
                          "url": "https://github.com/idaholab/moose/discussions/27211#discussioncomment-8940831",
                          "updatedAt": "2024-03-28T13:41:47Z",
                          "publishedAt": "2024-03-28T13:41:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lucuo"
                          },
                          "bodyText": "If you can provide a similar case, it will be of greater help to my study\uff0cyour support is greatly appreciated.",
                          "url": "https://github.com/idaholab/moose/discussions/27211#discussioncomment-8941082",
                          "updatedAt": "2024-03-28T14:01:12Z",
                          "publishedAt": "2024-03-28T14:01:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "@lucuo the example you show is a complicated one to learn from.  A test like this one in the xfem module is simpler:\nmoose/modules/xfem/test/tests/solid_mechanics_basic/edge_crack_2d_propagation_mhs.i\nOr the tests in this directory:\nmoose/modules/xfem/test/tests/nucleation_uo\nThe example you want is available in this git repository:  https://github.com/lynnmunday/xfem_pellet/tree/main\nlet me know if you can get it.",
                          "url": "https://github.com/idaholab/moose/discussions/27211#discussioncomment-8945989",
                          "updatedAt": "2024-03-28T21:48:51Z",
                          "publishedAt": "2024-03-28T21:48:50Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lucuo"
                          },
                          "bodyText": "Thank you very much for providing me with this case",
                          "url": "https://github.com/idaholab/moose/discussions/27211#discussioncomment-8957312",
                          "updatedAt": "2024-03-30T04:37:13Z",
                          "publishedAt": "2024-03-30T04:37:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Can't Run Peacock - Segmentation Fault (Core Dumped)",
          "author": {
            "login": "kurtenkera"
          },
          "bodyText": "I'm trying to learn MOOSE and going through the linked tutorial (link: https://mooseframework.inl.gov/getting_started/examples_and_tutorials/tutorial01_app_development/step02_input_file.html).\nI can execute the input file with:\ncd ~/projects/babbler/test/tests/kernels/simple_diffusion\n../../../../babbler-opt -i simple_diffusion.i\n\nBut when I try to execute the results in Peacock with the following commands:\ncd ~/projects/babbler/test/tests/kernels/simple_diffusion\n~/projects/moose/python/peacock/peacock -i simple_diffusion.i\n\nI get the output Segmentation fault (core dumped).\nWhat causes this error and how can I resolve it?\nFYI, I am just trying to use the moose conda environment to run peacock. Also, when I attempt to run peacock by just executing peacock I get the following error: peacock: command not found.\nAdditionally, when I attempt to run peacock from the relevant directory (i.e., ~/projects/moose/python/peacock) I also get the error ``peacock: command not found```.\nI've looked up similar posts but have not seen exactly how people have resolved this issue? I've tried executing conda update --all but this has not solved the problem. Below is the output of conda list in my moose environment:\n# packages in environment at /home/enk001/anaconda3/envs/moose:\n#\n# Name                    Version                   Build  Channel\n_libgcc_mutex             0.1                 conda_forge    conda-forge\n_openmp_mutex             4.5                       2_gnu    conda-forge\n_sysroot_linux-64_curr_repodata_hack 3                   h69a702a_13    conda-forge\nalsa-lib                  1.2.8                h166bdaf_0    conda-forge\naom                       3.5.0                h27087fc_0    conda-forge\nastroid                   3.0.3           py310hff52083_0    conda-forge\natk-1.0                   2.38.0               hd4edc92_1    conda-forge\nattr                      2.5.1                h166bdaf_1    conda-forge\nautoconf                  2.71            pl5321h2b4cb7a_1    conda-forge\nautomake                  1.16.5          pl5321ha770c72_0    conda-forge\nbeautifulsoup4            4.12.3             pyha770c72_0    conda-forge\nbinutils_impl_linux-64    2.39                 he00db2b_1    conda-forge\nbinutils_linux-64         2.39                h5fc0e48_13    conda-forge\nbison                     3.4                  h58526e2_1    conda-forge\nblosc                     1.21.5               h0f2a231_0    conda-forge\nbrotli                    1.0.9                h166bdaf_9    conda-forge\nbrotli-bin                1.0.9                h166bdaf_9    conda-forge\nbrunsli                   0.1                  h9c3ff4c_0    conda-forge\nbzip2                     1.0.8                hd590300_5    conda-forge\nc-ares                    1.23.0               hd590300_0    conda-forge\nc-blosc2                  2.13.2               hb4ffafa_0    conda-forge\nca-certificates           2023.11.17           hbcca054_0    conda-forge\ncairo                     1.16.0            ha61ee94_1014    conda-forge\ncertifi                   2024.2.2           pyhd8ed1ab_0    conda-forge\ncfitsio                   4.1.0                hd9d235c_0    conda-forge\ncharls                    2.3.4                h9c3ff4c_0    conda-forge\nclang                     12.0.1               ha770c72_0    conda-forge\nclang-12                  12.0.1          default_ha53f305_0    conda-forge\nclang-format              14.0.6          default_h7634d5b_1    conda-forge\nclang-format-14           14.0.6          default_h7634d5b_1    conda-forge\nclang-tools               12.0.1          default_ha53f305_0    conda-forge\nclangxx                   12.0.1          default_ha53f305_0    conda-forge\nclick                     8.1.7           unix_pyh707e725_0    conda-forge\ncloudpickle               3.0.0              pyhd8ed1ab_0    conda-forge\ncmake                     3.25.1               h816a3e0_0    conda-forge\ncolorama                  0.4.6              pyhd8ed1ab_0    conda-forge\ncontourpy                 1.2.0           py310hd41b1e2_0    conda-forge\ncurl                      7.86.0               h7bff187_1    conda-forge\ncycler                    0.12.1             pyhd8ed1ab_0    conda-forge\ncytoolz                   0.12.3          py310h2372a71_0    conda-forge\ndask-core                 2024.2.0           pyhd8ed1ab_0    conda-forge\ndav1d                     1.0.0                h166bdaf_1    conda-forge\ndbus                      1.13.6               h5008d03_3    conda-forge\ndeepdiff                  6.7.1              pyhd8ed1ab_0    conda-forge\ndill                      0.3.8              pyhd8ed1ab_0    conda-forge\ndouble-conversion         3.2.0                h27087fc_1    conda-forge\neigen                     3.4.0                h00ab1b0_0    conda-forge\nelfutils                  0.188                hde5d1a3_1    conda-forge\nexpat                     2.5.0                hcb278e6_1    conda-forge\nffmpeg                    4.4.2           gpl_h8dda1f0_112    conda-forge\nfftw                      3.3.10          nompi_hc118613_108    conda-forge\nflex                      2.6.4             h58526e2_1004    conda-forge\nfont-ttf-dejavu-sans-mono 2.37                 hab24e00_0    conda-forge\nfont-ttf-inconsolata      3.000                h77eed37_0    conda-forge\nfont-ttf-source-code-pro  2.038                h77eed37_0    conda-forge\nfont-ttf-ubuntu           0.83                 h77eed37_1    conda-forge\nfontconfig                2.14.2               h14ed4e7_0    conda-forge\nfonts-conda-ecosystem     1                             0    conda-forge\nfonts-conda-forge         1                             0    conda-forge\nfonttools                 4.49.0          py310h2372a71_0    conda-forge\nfreetype                  2.12.1               h267a509_2    conda-forge\nfribidi                   1.0.10               h36c2ea0_0    conda-forge\nfsspec                    2024.2.0           pyhca7485f_0    conda-forge\ngcc_impl_linux-64         10.4.0              h5231bdf_19    conda-forge\ngcc_linux-64              10.4.0              h9215b83_13    conda-forge\ngdk-pixbuf                2.42.10              h5eee18b_0  \ngettext                   0.21.1               h27087fc_0    conda-forge\ngfortran_impl_linux-64    10.4.0              h7d168d2_19    conda-forge\ngfortran_linux-64         10.4.0              h69d5af5_13    conda-forge\ngiflib                    5.2.1                h0b41bf4_3    conda-forge\ngit-lfs                   3.4.1                ha770c72_0    conda-forge\ngitdb                     4.0.7              pyhd3eb1b0_0  \ngitpython                 3.1.42             pyhd8ed1ab_0    conda-forge\ngl2ps                     1.4.2                h0708190_0    conda-forge\nglew                      2.1.0                h9c3ff4c_2    conda-forge\nglib                      2.78.4               hfc55251_0    conda-forge\nglib-tools                2.78.4               hfc55251_0    conda-forge\ngmp                       6.3.0                h59595ed_0    conda-forge\ngmpy2                     2.1.2           py310h3ec546c_1    conda-forge\ngnutls                    3.7.9                hb077bed_0    conda-forge\ngraphite2                 1.3.13            h58526e2_1001    conda-forge\ngraphviz                  8.0.3                h2e5815a_0    conda-forge\ngst-plugins-base          1.21.3               h4243ec0_1    conda-forge\ngstreamer                 1.21.3               h25f0c4b_1    conda-forge\ngstreamer-orc             0.4.37               hd590300_0    conda-forge\ngtk2                      2.24.33              h90689f9_2    conda-forge\ngts                       0.7.6                h977cf35_4    conda-forge\ngxx_impl_linux-64         10.4.0              h5231bdf_19    conda-forge\ngxx_linux-64              10.4.0              h6e491c6_13    conda-forge\nharfbuzz                  6.0.0                h8e241bc_0    conda-forge\nhdf4                      4.2.15               h9772cbc_5    conda-forge\nhdf5                      1.12.1          mpi_mpich_h08b82f9_4    conda-forge\nicu                       70.1                 h27087fc_0    conda-forge\nimagecodecs               2022.7.31       py310hfa28e48_1    conda-forge\nimagecodecs-lite          2019.12.3       py310h1f7b6fc_7    conda-forge\nimageio                   2.34.0             pyh4b66e23_0    conda-forge\nimportlib-metadata        7.0.1              pyha770c72_0    conda-forge\nimportlib_metadata        7.0.1                hd8ed1ab_0    conda-forge\nisort                     5.13.2             pyhd8ed1ab_0    conda-forge\njack                      1.9.22               h11f4161_0    conda-forge\njinja2                    3.1.3              pyhd8ed1ab_0    conda-forge\njpeg                      9e                   h0b41bf4_3    conda-forge\njsoncpp                   1.9.5                h4bd325d_1    conda-forge\njxrlib                    1.1                  hd590300_3    conda-forge\nkernel-headers_linux-64   3.10.0              h4a8ded7_13    conda-forge\nkeyutils                  1.6.1                h166bdaf_0    conda-forge\nkiwisolver                1.4.5           py310hd41b1e2_1    conda-forge\nkrb5                      1.19.3               h3790be6_0    conda-forge\nlame                      3.100             h166bdaf_1003    conda-forge\nlatexcodec                2.0.1              pyh9f0ad1d_0    conda-forge\nlazy_loader               0.3                pyhd8ed1ab_0    conda-forge\nlcms2                     2.14                 h6ed2654_0    conda-forge\nld_impl_linux-64          2.39                 hcc3a1bd_1    conda-forge\nlerc                      4.0.0                h27087fc_0    conda-forge\nlibaec                    1.1.2                h59595ed_1    conda-forge\nlibarchive                3.6.2                hc8874e4_0    conda-forge\nlibavif                   0.10.1               h5cdd6b5_2    conda-forge\nlibblas                   3.9.0           21_linux64_openblas    conda-forge\nlibbrotlicommon           1.0.9                h166bdaf_9    conda-forge\nlibbrotlidec              1.0.9                h166bdaf_9    conda-forge\nlibbrotlienc              1.0.9                h166bdaf_9    conda-forge\nlibcap                    2.66                 ha37c62d_0    conda-forge\nlibcblas                  3.9.0           21_linux64_openblas    conda-forge\nlibclang                  15.0.7          default_hb11cfb5_4    conda-forge\nlibclang-cpp12            12.0.1          default_ha53f305_4    conda-forge\nlibclang-cpp14            14.0.6          default_h7634d5b_1    conda-forge\nlibclang13                15.0.7          default_ha2b6cf4_4    conda-forge\nlibcups                   2.3.3                h3e49a29_2    conda-forge\nlibcurl                   7.86.0               h7bff187_1    conda-forge\nlibdb                     6.2.32               h9c3ff4c_0    conda-forge\nlibdeflate                1.13                 h166bdaf_0    conda-forge\nlibdrm                    2.4.114              h166bdaf_0    conda-forge\nlibdrm-cos7-x86_64        2.4.97            h9b0a68f_1105    conda-forge\nlibedit                   3.1.20191231         he28a2e2_2    conda-forge\nlibev                     4.33                 h516909a_1    conda-forge\nlibevent                  2.1.10               h9b69904_4    conda-forge\nlibexpat                  2.5.0                hcb278e6_1    conda-forge\nlibffi                    3.4.2                h7f98852_5    conda-forge\nlibflac                   1.4.3                h59595ed_0    conda-forge\nlibgcc-devel_linux-64     10.4.0              hd38fd1e_19    conda-forge\nlibgcc-ng                 13.2.0               h807b86a_3    conda-forge\nlibgcrypt                 1.10.3               hd590300_0    conda-forge\nlibgd                     2.3.3                h18fbbfe_3    conda-forge\nlibgfortran-ng            13.1.0               h69a702a_0    conda-forge\nlibgfortran5              13.1.0               h15d22d2_0    conda-forge\nlibglib                   2.78.4               h783c2da_0    conda-forge\nlibglu                    9.0.0             he1b5a44_1001    conda-forge\nlibglvnd-cos7-x86_64      1.0.1             h9b0a68f_1105    conda-forge\nlibglvnd-glx-cos7-x86_64  1.0.1             h9b0a68f_1105    conda-forge\nlibgomp                   13.2.0               h807b86a_3    conda-forge\nlibgpg-error              1.48                 h71f35ed_0    conda-forge\nlibhwloc                  2.9.1                hd6dc26d_0    conda-forge\nlibice-cos7-x86_64        1.0.9             h9b0a68f_1105    conda-forge\nlibice-devel-cos7-x86_64  1.0.9             h9b0a68f_1105    conda-forge\nlibiconv                  1.17                 h166bdaf_0    conda-forge\nlibidn2                   2.3.4                h166bdaf_0    conda-forge\nliblapack                 3.9.0           21_linux64_openblas    conda-forge\nlibllvm12                 12.0.1               hf817b99_2    conda-forge\nlibllvm14                 14.0.6               hcd5def8_4    conda-forge\nlibllvm15                 15.0.7               hadd5161_1    conda-forge\nlibmicrohttpd             0.9.77               h97afed2_0    conda-forge\nlibnetcdf                 4.8.1           mpi_mpich_hcdf9059_2    conda-forge\nlibnghttp2                1.51.0               hdcd2b5c_0    conda-forge\nlibnsl                    2.0.1                hd590300_0    conda-forge\nlibogg                    1.3.4                h7f98852_1    conda-forge\nlibopenblas               0.3.26          pthreads_h413a1c8_0    conda-forge\nlibopus                   1.3.1                h7f98852_1    conda-forge\nlibpciaccess              0.17                 h166bdaf_0    conda-forge\nlibpng                    1.6.43               h2797004_0    conda-forge\nlibpq                     15.1                 hf695f80_1    conda-forge\nlibrsvg                   2.54.4               h7abd40a_0    conda-forge\nlibsanitizer              10.4.0              h5246dfb_19    conda-forge\nlibsm-cos7-x86_64         1.2.2             h9b0a68f_1105    conda-forge\nlibsm-devel-cos7-x86_64   1.2.2             h9b0a68f_1105    conda-forge\nlibsndfile                1.2.2                hc60ed4a_1    conda-forge\nlibsqlite                 3.44.2               h2797004_0    conda-forge\nlibssh2                   1.10.0               haa6b8db_3    conda-forge\nlibstdcxx-devel_linux-64  10.4.0              hd38fd1e_19    conda-forge\nlibstdcxx-ng              13.2.0               h7e041cc_3    conda-forge\nlibsystemd0               252                  h2a991cd_0    conda-forge\nlibtasn1                  4.19.0               h166bdaf_0    conda-forge\nlibtheora                 1.1.1             h7f98852_1005    conda-forge\nlibtiff                   4.4.0                h0e0dad5_3    conda-forge\nlibtool                   2.4.7                h27087fc_0    conda-forge\nlibudev1                  253                  h0b41bf4_0    conda-forge\nlibunistring              0.9.10               h7f98852_0    conda-forge\nlibuuid                   2.38.1               h0b41bf4_0    conda-forge\nlibuv                     1.46.0               hd590300_0    conda-forge\nlibva                     2.18.0               h0b41bf4_0    conda-forge\nlibvorbis                 1.3.7                h9c3ff4c_0    conda-forge\nlibvpx                    1.11.0               h9c3ff4c_3    conda-forge\nlibwebp                   1.3.2                h11a3e52_0  \nlibwebp-base              1.3.2                hd590300_0    conda-forge\nlibx11-common-cos7-x86_64 1.6.7             h9b0a68f_1105    conda-forge\nlibx11-cos7-x86_64        1.6.7             h9b0a68f_1105    conda-forge\nlibx11-devel-cos7-x86_64  1.6.7             h9b0a68f_1105    conda-forge\nlibxcb                    1.13              h7f98852_1004    conda-forge\nlibxext-cos7-x86_64       1.3.3             h9b0a68f_1105    conda-forge\nlibxext-devel-cos7-x86_64 1.3.3             h9b0a68f_1105    conda-forge\nlibxkbcommon              1.5.0                h79f4944_1    conda-forge\nlibxml2                   2.10.3               hca2bb57_4    conda-forge\nlibxslt                   1.1.37               h873f0b0_0    conda-forge\nlibxt-cos7-x86_64         1.1.5             h9b0a68f_1105    conda-forge\nlibxt-devel-cos7-x86_64   1.1.5             h9b0a68f_1105    conda-forge\nlibzip                    1.9.2                hc869a4a_1    conda-forge\nlibzlib                   1.2.13               hd590300_5    conda-forge\nlibzopfli                 1.0.3                h9c3ff4c_0    conda-forge\nlivereload                2.6.3              pyh9f0ad1d_0    conda-forge\nlocket                    1.0.0              pyhd8ed1ab_0    conda-forge\nloguru                    0.7.2           py310hff52083_1    conda-forge\nlxml                      4.9.2           py310hbdc0903_0    conda-forge\nlz4-c                     1.9.4                hcb278e6_0    conda-forge\nlzo                       2.10              h516909a_1000    conda-forge\nm4                        1.4.18            h516909a_1001    conda-forge\nmake                      4.3                  hd18ef5c_1    conda-forge\nmako                      1.3.2              pyhd8ed1ab_0    conda-forge\nmarkupsafe                2.1.5           py310h2372a71_0    conda-forge\nmatplotlib                3.8.3           py310hff52083_0    conda-forge\nmatplotlib-base           3.8.3           py310h62c0568_0    conda-forge\nmccabe                    0.7.0              pyhd8ed1ab_0    conda-forge\nmesa-khr-devel-cos7-x86_64 18.3.4            h9b0a68f_1105    conda-forge\nmesa-libgl-cos7-x86_64    18.3.4            h9b0a68f_1105    conda-forge\nmesa-libgl-devel-cos7-x86_64 18.3.4            h9b0a68f_1105    conda-forge\nmesa-libglapi-cos7-x86_64 18.3.4            h9b0a68f_1105    conda-forge\nmesalib                   23.0.0               h0fe20ba_0    conda-forge\nmock                      5.1.0              pyhd8ed1ab_0    conda-forge\nmoose-dev                 2024.02.19              build_0    https://conda.software.inl.gov/public\nmoose-libmesh             2024.01.23              build_0    https://conda.software.inl.gov/public\nmoose-libmesh-vtk         9.2.6                   build_8    https://conda.software.inl.gov/public\nmoose-mpich               4.0.2                  build_15    https://conda.software.inl.gov/public\nmoose-peacock             2023.11.29           h1bca318_0    https://conda.software.inl.gov/public\nmoose-petsc               3.20.3                  build_0    https://conda.software.inl.gov/public\nmoose-tools               2023.12.20           h55675f2_0    https://conda.software.inl.gov/public\nmoose-wasp                2024.02.19              build_0    https://conda.software.inl.gov/public\nmpc                       1.3.1                hfe3b2da_0    conda-forge\nmpfr                      4.2.1                h9458935_0    conda-forge\nmpg123                    1.32.4               h59595ed_0    conda-forge\nmpi                       1.0                       mpich    conda-forge\nmpich                     4.0.2              h846660c_100    conda-forge\nmpich-mpicc               4.0.2              hb600da9_100    conda-forge\nmpich-mpicxx              4.0.2              h166bdaf_100    conda-forge\nmpich-mpifort             4.0.2              h924138e_100    conda-forge\nmpmath                    1.3.0              pyhd8ed1ab_0    conda-forge\nmunkres                   1.1.4              pyh9f0ad1d_0    conda-forge\nmysql-common              8.0.32               h14678bc_0    conda-forge\nmysql-libs                8.0.32               h54cf53e_0    conda-forge\nncurses                   6.4                  h59595ed_2    conda-forge\nnettle                    3.9.1                h7ab15ed_0    conda-forge\nnetworkx                  3.2.1              pyhd8ed1ab_0    conda-forge\nnspr                      4.35                 h27087fc_0    conda-forge\nnss                       3.97                 h1d7d5a4_0    conda-forge\nnumpy                     1.26.4          py310hb13e2d6_0    conda-forge\nopenh264                  2.3.1                hcb278e6_2    conda-forge\nopenjpeg                  2.5.0                h7d73246_1    conda-forge\nopenssl                   1.1.1w               hd590300_0    conda-forge\nordered-set               4.1.0              pyhd8ed1ab_0    conda-forge\norjson                    3.9.15          py310hcb5633a_0    conda-forge\np11-kit                   0.24.1               hc5aa10d_0    conda-forge\npackaging                 23.2               pyhd8ed1ab_0    conda-forge\npandas                    2.2.1           py310hcc13569_0    conda-forge\npango                     1.50.14              hd33c08f_0    conda-forge\npartd                     1.4.1              pyhd8ed1ab_0    conda-forge\npcre2                     10.42                hcad00b1_0    conda-forge\nperl                      5.32.1          4_hd590300_perl5    conda-forge\npillow                    9.2.0           py310h454ad03_3    conda-forge\npip                       24.0               pyhd8ed1ab_0    conda-forge\npixman                    0.43.2               h59595ed_0    conda-forge\npkg-config                0.29.2            h36c2ea0_1008    conda-forge\nplatformdirs              4.2.0              pyhd8ed1ab_0    conda-forge\nply                       3.11                       py_1    conda-forge\nproj                      9.0.1                h93bde94_1    conda-forge\npsycopg2                  2.9.3           py310h416cc33_2    conda-forge\npthread-stubs             0.4               h36c2ea0_1001    conda-forge\npugixml                   1.11.4               h59595ed_1    conda-forge\npulseaudio                16.1                 h4ab2085_1    conda-forge\npyaml                     23.12.0            pyhd8ed1ab_0    conda-forge\npybtex                    0.24.0             pyhd8ed1ab_2    conda-forge\npycobertura               3.3.1              pyhd8ed1ab_0    conda-forge\npyflakes                  3.2.0              pyhd8ed1ab_0    conda-forge\npylatexenc                2.10               pyhd8ed1ab_0    conda-forge\npylint                    3.0.4              pyhd8ed1ab_0    conda-forge\npyparsing                 3.1.1              pyhd8ed1ab_0    conda-forge\npyqt                      5.15.7          py310hab646b1_3    conda-forge\npyqt5-sip                 12.11.0         py310heca2aa9_3    conda-forge\npython                    3.10.8          h257c98d_0_cpython    conda-forge\npython-dateutil           2.8.2              pyhd8ed1ab_0    conda-forge\npython-tzdata             2024.1             pyhd8ed1ab_0    conda-forge\npython_abi                3.10                    4_cp310    conda-forge\npytz                      2024.1             pyhd8ed1ab_0    conda-forge\npywavelets                1.4.1           py310h1f7b6fc_1    conda-forge\npyyaml                    6.0.1           py310h2372a71_1    conda-forge\nqt-main                   5.15.6               h25460bb_4    conda-forge\nreadline                  8.2                  h8228510_1    conda-forge\nrhash                     1.4.3                hd590300_2    conda-forge\nruamel.yaml               0.18.6          py310h2372a71_0    conda-forge\nruamel.yaml.clib          0.2.8           py310h2372a71_0    conda-forge\nscikit-image              0.22.0          py310hcc13569_2    conda-forge\nscipy                     1.12.0          py310hb13e2d6_2    conda-forge\nsetuptools                59.8.0          py310hff52083_1    conda-forge\nsip                       6.7.12          py310hc6cd4ac_0    conda-forge\nsix                       1.16.0             pyh6c4a22f_0    conda-forge\nsmmap                     6.0.0              pyhd8ed1ab_1    conda-forge\nsnappy                    1.1.10               h9fff704_0    conda-forge\nsoupsieve                 2.5                pyhd8ed1ab_1    conda-forge\nsqlite                    3.44.2               h2c6b66d_0    conda-forge\nsvt-av1                   1.4.1                hcb278e6_0    conda-forge\nsympy                     1.12            pypyh9d50eac_103    conda-forge\nsysroot_linux-64          2.17                h4a8ded7_13    conda-forge\ntabulate                  0.9.0              pyhd8ed1ab_1    conda-forge\ntbb                       2021.9.0             hf52228f_0    conda-forge\ntbb-devel                 2021.9.0             hf52228f_0    conda-forge\ntifffile                  2022.10.10         pyhd8ed1ab_0    conda-forge\ntk                        8.6.13          noxft_h4845f30_101    conda-forge\ntoml                      0.10.2             pyhd8ed1ab_0    conda-forge\ntomli                     2.0.1              pyhd8ed1ab_0    conda-forge\ntomlkit                   0.12.3             pyha770c72_0    conda-forge\ntoolz                     0.12.1             pyhd8ed1ab_0    conda-forge\ntornado                   6.4             py310h2372a71_0    conda-forge\ntyping-extensions         4.9.0                hd8ed1ab_0    conda-forge\ntyping_extensions         4.9.0              pyha770c72_0    conda-forge\ntzdata                    2024a                h0c530f3_0    conda-forge\nunicodedata2              15.1.0          py310h2372a71_0    conda-forge\nutfcpp                    4.0.5                ha770c72_0    conda-forge\nvtk                       9.1.0           qt_py310hb71b3df_211    conda-forge\nwheel                     0.42.0             pyhd8ed1ab_0    conda-forge\nx264                      1!164.3095           h166bdaf_2    conda-forge\nx265                      3.5                  h924138e_3    conda-forge\nxcb-util                  0.4.0                h516909a_0    conda-forge\nxcb-util-image            0.4.0                h166bdaf_0    conda-forge\nxcb-util-keysyms          0.4.0                h516909a_0    conda-forge\nxcb-util-renderutil       0.3.9                h166bdaf_0    conda-forge\nxcb-util-wm               0.4.1                h516909a_0    conda-forge\nxkeyboard-config          2.38                 h0b41bf4_0    conda-forge\nxmltodict                 0.13.0             pyhd8ed1ab_0    conda-forge\nxorg-damageproto          1.2.1             h7f98852_1002    conda-forge\nxorg-fixesproto           5.0               h7f98852_1002    conda-forge\nxorg-glproto              1.4.17            h7f98852_1002    conda-forge\nxorg-kbproto              1.0.7             h7f98852_1002    conda-forge\nxorg-libice               1.0.10               h7f98852_0    conda-forge\nxorg-libsm                1.2.3             hd9c2040_1000    conda-forge\nxorg-libx11               1.8.4                h0b41bf4_0    conda-forge\nxorg-libxau               1.0.11               hd590300_0    conda-forge\nxorg-libxdamage           1.1.5                h7f98852_1    conda-forge\nxorg-libxdmcp             1.1.3                h7f98852_0    conda-forge\nxorg-libxext              1.3.4                h0b41bf4_2    conda-forge\nxorg-libxfixes            5.0.3             h7f98852_1004    conda-forge\nxorg-libxrandr            1.5.2                h7f98852_1    conda-forge\nxorg-libxrender           0.9.10            h7f98852_1003    conda-forge\nxorg-libxt                1.3.0                hd590300_0    conda-forge\nxorg-randrproto           1.5.0             h7f98852_1001    conda-forge\nxorg-renderproto          0.11.1            h7f98852_1002    conda-forge\nxorg-util-macros          1.19.3               h7f98852_0    conda-forge\nxorg-x11-proto-devel-cos7-x86_64 2018.4            h9b0a68f_1105    conda-forge\nxorg-xextproto            7.3.0             h0b41bf4_1003    conda-forge\nxorg-xf86vidmodeproto     2.3.1             h7f98852_1002    conda-forge\nxorg-xproto               7.0.31            h7f98852_1007    conda-forge\nxz                        5.2.6                h166bdaf_0    conda-forge\nyaml                      0.2.5                h7f98852_2    conda-forge\nzfp                       0.5.5                h9c3ff4c_8    conda-forge\nzipp                      3.17.0             pyhd8ed1ab_0    conda-forge\nzlib                      1.2.13               hd590300_5    conda-forge\nzlib-ng                   2.0.7                h0b41bf4_0    conda-forge\nzstd                      1.5.5                hfc55251_0    conda-forge\n\nThanks in advance!",
          "url": "https://github.com/idaholab/moose/discussions/26884",
          "updatedAt": "2024-03-30T14:00:21Z",
          "publishedAt": "2024-02-25T02:28:00Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Additionally, when I attempt to run peacock from the relevant directory (i.e., ~/projects/moose/python/peacock) I also get the error ``peacock: command not found```.\n\ndid you try:\n ~/projects/moose/python/peacock/peacock\n\nthis is a linux machine right? Is it Windows subsystem for linux or native linux?",
                  "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8580369",
                  "updatedAt": "2024-02-25T02:43:09Z",
                  "publishedAt": "2024-02-25T02:43:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "kurtenkera"
                          },
                          "bodyText": "I have a native LInux machine with Ubuntu 22.04. In my first install before my laptop was re-imaged, I encountered no such issues with Peacock but only now am I having issues with Peacock.\nWhen I try:\ncd ~/projects/moose/python/peacock/peacock\n\nI simply get the output:\nbash: cd: /home/enk001/projects/moose/python/peacock/peacock: Not a directory\n\nBut if I print out the contents of the directory /home/enk001/projects/moose/python/peacock, I clearly see peacock listed (see the output of ls below):\nbase                      ExodusViewer  LogWidget.py         PeacockMainWindow.py    tests\nBasePeacockMainWindow.py  icons         peacock              PostprocessorViewer     utils\nCheckRequirements.py      __init__.py   PeacockApp.py        __pycache__\nExecute                   Input         PeacockException.py  PythonConsoleWidget.py",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8580395",
                          "updatedAt": "2024-02-25T02:52:37Z",
                          "publishedAt": "2024-02-25T02:52:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "cd ~/projects/moose/python/peacock/peacock\n\nnot cd. Just ~/projects/moose/python/peacock/peacock to run the peacock executable",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8580457",
                          "updatedAt": "2024-02-25T03:09:15Z",
                          "publishedAt": "2024-02-25T03:09:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kurtenkera"
                          },
                          "bodyText": "I get the following output when I do ~/projects/moose/python/peacock/peacock to run the Peacock executable:\nSegmentation fault (core dumped)",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8580481",
                          "updatedAt": "2024-02-25T03:14:18Z",
                          "publishedAt": "2024-02-25T03:14:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kurtenkera"
                          },
                          "bodyText": "I should mention that this issue occurred earlier today, so I tried updating my local MOOSE repository and updating Conda following the steps listed here: https://mooseframework.inl.gov/getting_started/new_users.html#update.\nThe errors that I've described in this discussion have all appeared since updating my local MOOSE repo and updating Conda. In other words, updating my local MOOSE repo and updating Conda didn't seem to fix the issue?",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8580520",
                          "updatedAt": "2024-02-25T03:24:54Z",
                          "publishedAt": "2024-02-25T03:24:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did anything change before the issue happened? Did you install a new conda package for example?",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8580622",
                          "updatedAt": "2024-02-25T04:02:57Z",
                          "publishedAt": "2024-02-25T04:02:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kurtenkera"
                          },
                          "bodyText": "So basically, last week I had MOOSE working on my Linux laptop fine, and I could run Peacock with no issues. I had to re-image/wipe my computer 4 days ago. Last week, I didn't have CUDA 12.1 installed, but 3 days ago I installed CUDA 12.1 so I could use PyTorch in a separate conda environment to train neural networks with my NVIDIA RTX A1000 GPU.\nSo that is one change (I currently have CUDA 12.1 installed on my laptop, whereas I didn't have it installed before when MOOSE/Peacock worked fine).\nBut aside from that, after my computer got re-imaged, I re-installed Anaconda using the same steps that I did before the re-imaging (following this link here: https://docs.anaconda.com/free/anaconda/install/linux/).\nI then re-installed MOOSE following the steps here (link: https://mooseframework.inl.gov/getting_started/installation/conda.html). I should mention that when I updated Conda and MOOSE earlier today, I had the same 'Build and Test Errors' described here (link: #26876), and I could only solve them using conda update --all after updating MOOSE which I thought was odd?\nShould I remove my local moose and projects repositories and follow the installation steps from scratch again?",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8580654",
                          "updatedAt": "2024-02-25T04:15:51Z",
                          "publishedAt": "2024-02-25T04:15:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Peacock is a python package and does not depend much on moose much. So re-installing the moose executable probably wont do anything.\nPlaying with the python dependencies versions can give results. However we dont have much info to start with. Maybe let's wait if @milljm has seen this before.\nPeacock is really necessary to run moose, I've pretty much never used it. Paraview works great for postprocessing.",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8580826",
                          "updatedAt": "2024-02-25T05:28:49Z",
                          "publishedAt": "2024-02-25T05:28:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Peacock and Paraview share many libraries. I like to try and get Paraview to work as a troubleshooting step... That said, can you install and launch paraview using absolutely the following instructions:\nconda deavtivate\nconda activate base\nconda create -n paraview paraview\nconda activate paraview\nparaview",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8596209",
                          "updatedAt": "2024-02-26T18:23:15Z",
                          "publishedAt": "2024-02-26T18:23:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kurtenkera"
                          },
                          "bodyText": "Thanks @milljm and @GiudGiud, I executed the above code and Paraview 5.11.2 launches successfully. How can I use Paraview in place of Peacock for postprocessing (particularly when following the examples and tutorials listed on the MOOSE website)? I'm particularly confused because now Paraview exists in its own separate conda environment rather than existing within the moose environment as Peacock did?\nFor example, how would I process the results of Example 1: As Simple as it Gets (link: https://mooseframework.inl.gov/getting_started/examples_and_tutorials/examples/ex01_inputfile.html).\nPreviously, with Peacock we would do the following commands (while in the moose environment):\ncd ~/projects/moose/examples/ex01_inputfile\n~/projects/moose/python/peacock/peacock -i ex01.i\n\nWould we do something like the following in the paraview environment:\ncd ~/projects/moose/examples/ex01_inputfile\n~/miniconda3/envs/paraview/bin/paraview -i ex01.i\n\nI tried this and the Paraview GUI launched but I also got the following output in my terminal:\n(paraview) enk001@drift-ph:~/projects_MOOSE/moose/examples/ex01_inputfile$ ~/miniconda3/envs/paraview/bin/paraview -i ex01.i\n(   0.667s) [paraview        ]             openpmd.py:13     ERR| Missing required Python modules/packages. Algorithms in this module may not work as expected! \n No module named 'openpmd_api'\n(   0.682s) [paraview        ]vtkSIPythonSourceProxy.:401    ERR| vtkSIPythonSourceProxy (0x56426075b450): Failed to import module 'paraview.algorithms.savgreader'.\nTraceback (most recent call last):\n  File \"/home/enk001/miniconda3/envs/paraview/lib/python3.12/site-packages/paraview/algorithms/savgreader.py\", line 9, in <module>\n    from paraview.util.vtkAlgorithm import VTKPythonAlgorithmBase\n  File \"/home/enk001/miniconda3/envs/paraview/lib/python3.12/site-packages/paraview/util/vtkAlgorithm.py\", line 293, in <module>\n    from ..detail.pythonalgorithm import \\\n  File \"/home/enk001/miniconda3/envs/paraview/lib/python3.12/site-packages/paraview/detail/pythonalgorithm.py\", line 6, in <module>\n    from inspect import getargspec\nImportError: cannot import name 'getargspec' from 'inspect' (/home/enk001/miniconda3/envs/paraview/lib/python3.12/inspect.py). Did you mean: 'getargs'?\n\nI plan to eventually build a big multiphysics MOOSE application later - will it be fine to move forward doing all postprocessing in Paraview rather than Peacock? Thanks in advance!",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8598862",
                          "updatedAt": "2024-02-27T00:06:31Z",
                          "publishedAt": "2024-02-27T00:04:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "cd ~/projects/moose/examples/ex01_inputfile\n~/miniconda3/envs/paraview/bin/paraview -i ex01.i\n\nno this wont work. Paraview is a GUI it does not run MOOSE input files",
                          "url": "https://github.com/idaholab/moose/discussions/26884#discussioncomment-8598873",
                          "updatedAt": "2024-02-27T00:06:09Z",
                          "publishedAt": "2024-02-27T00:06:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "SideDiffusiveFluxIntegral",
          "author": {
            "login": "styyokuda"
          },
          "bodyText": "All,\nI am trying to calculate a value of mole [mol] on a boundary from a flux [mol/m^2/sec] using SideDiffusiveFluxIntegral.\nIt seems that SideDiffusiveFluxIntegral calculates a concentration rate [mol/sec] by integrating a flux [mol/m^2/sec] with respect to an area [m^2].\nIf so, the time step size needs to be multiplied to the value [mol/sec] calculated from SideDiffusiveFluxIntegral to obtain a value of mole [mol]?\nIs there a MOOSE app which integrates a flux with respect with time [sec] and area [m^2]?\nPlease help.  S. Thomas",
          "url": "https://github.com/idaholab/moose/discussions/27222",
          "updatedAt": "2024-03-29T15:01:11Z",
          "publishedAt": "2024-03-28T23:27:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can feed this postprocessor into this one to perform the time integration\nhttps://mooseframework.inl.gov/source/postprocessors/TimeIntegratedPostprocessor.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27222#discussioncomment-8946570",
                  "updatedAt": "2024-03-28T23:33:52Z",
                  "publishedAt": "2024-03-28T23:33:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "styyokuda"
                          },
                          "bodyText": "Thank you, Guillaume!",
                          "url": "https://github.com/idaholab/moose/discussions/27222#discussioncomment-8952604",
                          "updatedAt": "2024-03-29T15:01:02Z",
                          "publishedAt": "2024-03-29T15:01:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Understanding how to implement plasticity with IsotropicPlasticityStressUpdate",
          "author": {
            "login": "richmondodufisan"
          },
          "bodyText": "Hi, I would like to understand how to use this object to fully describe plastic deformation. As I understand plasticity theory, three things are needed to fully describe the system:\n-Yield Function, i.e the function (typically stress-based i.e a function of the stress components) that calculates the yield surface, that is, where the material should begins to yield\n-Flow Rule, i.e the function that explains how the material evolves beyond the yield surface\n-Hardening Law: does the material harden isotropically (does the yield surface expand while staying centered about the origin?) or kinematically (does it remain constant in size but move with the changing yield stress?).\nAccording to IsotropicPlasticityStressUpdate, it implements the radial return algorithm for a Von Mises yield function, but can be used in conjunction with more complex ones (and hopefully, custom yield functions). Looking at one of the example files, we have:\n[Materials]\n  [./elasticity_tensor]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 2.1e5\n    poissons_ratio = 0.3\n  [../]\n  [./isotropic_plasticity]\n    type = IsotropicPlasticityStressUpdate\n    yield_stress = 50.0\n    hardening_function = hf\n  [../]\n  [./radial_return_stress]\n    type = ComputeMultipleInelasticStress\n    tangent_operator = elastic\n    inelastic_models = 'isotropic_plasticity'\n  [../]\n[]\n\nI see that the elasticity tensor is defined, a single value for the yield stress is defined, and a hardening function \"hf\" is also defined.\nQ1: Where would I define my custom yield function to be compared with the yield stress? As mentioned before, the default is the Von Mises stress. If I create a material file to calculate the custom yield surface based on the components of the elastic stress (which is initially calculated before doing a radial return), how do I let the model know to use that instead of the default Von Mises Stress?\nQ1b: What if the yield function cannot be easily expressed in the form sigma_yield - f(sigma_ii) = 0? And instead is \"implicit\" i.e defined as f(sigma_yield, sigma_ii) = 0? For example, the Hoek-Brown Yield Criterion. Would that mean I can't use this object?\nQ2: how do I \"extract\" which stress I want to use? If the model only used ComputeLinearElasticStress, then in a custom material file, I would \"get\" this stress with\n_stress(getADMaterialPropertyByName<RankTwoTensor>(\"stress\")),\nIn this case where I have multiple stresses being calculated, what are the names of the stresses? For example, if I have both plasticity and viscoelasticity, what is the name of the \"overall\" stress (i.e the true stress experienced by the material) that I need to \"get\"? What about the name of the elastic stress? (So I can use it to check if the material is yielding).\nQ3: How does the model know which elastic stress to use (finite or small strain)? In the ComputeMultipleInelasticStress, I see tangent_operator = elastic. Is the computation based on the strain defined? If I used, say, ADComputeGreenLagrangeStrain, would it automatically compute the PK2 stress?\nQ4: Where do I define the flow rule? My guess is that the line hardening_function = hf is supposed to, but how? For an associative flow rule, it would be the derivative of the yield function with respect to stress. Where is that computed? What if I wanted to implement a custom, non-associative flow rule?\nQ5: Where do I define the hardening law? That is, whether or not the yield function moves or expands in both compressive & tensile directions simultaneously?",
          "url": "https://github.com/idaholab/moose/discussions/26727",
          "updatedAt": "2024-03-29T13:30:42Z",
          "publishedAt": "2024-02-03T07:50:07Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis material you are examining is a simple one with constants for the coefficients.\nYou need to look at the other materials in the module to fit your needs for more complex dependencies\nI think the hardening laws are specified separately\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26727#discussioncomment-8355792",
                  "updatedAt": "2024-02-03T16:23:49Z",
                  "publishedAt": "2024-02-03T16:23:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "richmondodufisan"
                          },
                          "bodyText": "Even for this simple one, where is the Von Mises criterion defined? What if I wanted to use an even simpler one (i.e Tresca criterion)? And all the other questions still apply, i.e How is the stress \"gotten\" in the material file and how do I differentiate between each type of stress (elastic/trial or actual)? What does hf mean here?\n  [./hf]\n    type = PiecewiseLinear\n    x = '0  0.001 0.003 0.023'\n    y = '50 52    54    56'\n  [../]\n\nThe flow rule is supposed to describe the evolution of plastic strains as a function of stress. What is this piecewise linear function describing? In the above we only have tangent_operator = elastic but there are different elastic stress/strain measures (finite, small strain, etc). Where/how are the hardening laws specified?",
                          "url": "https://github.com/idaholab/moose/discussions/26727#discussioncomment-8357334",
                          "updatedAt": "2024-02-03T21:29:51Z",
                          "publishedAt": "2024-02-03T21:29:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "where is the Von Mises criterion defined?\n\nYou can compute it with this for example\n[AuxVariables]\n  [./von_mises]\n    #Dependent variable used to visualize the Von Mises stress\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n\n[AuxKernels]\n  [./von_mises_kernel]\n    #Calculates the von mises stress and assigns it to von_mises\n    type = RankTwoScalarAux\n    variable = von_mises\n    rank_two_tensor = stress\n    execute_on = timestep_end\n    scalar_type = VonMisesStress\n  [../]\n[]\n\nFeel free to look through the tensor mechanics module for examples.\n\nWhat if I wanted to use an even simpler one (i.e Tresca criterion)\n\nYou ll need to implement it\n\nHow is the stress \"gotten\" in the material file\n\nFor output or for use in the material properties?\n\nand how do I differentiate between each type of stress (elastic/trial or actual)?\n\nThey are stored in different material properties.\n\nWhat does hf mean here?\n\nIt's just a name. You use that name to refer to the function in other places\n\nWhere/how are the hardening laws specified?\n\nIn the Materials block. You should look through the examples in the tensor mechanics module",
                          "url": "https://github.com/idaholab/moose/discussions/26727#discussioncomment-8358140",
                          "updatedAt": "2024-02-04T02:24:12Z",
                          "publishedAt": "2024-02-04T02:24:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "richmondodufisan"
                          },
                          "bodyText": "Thanks, I looked at a couple of examples and this makes sense. I have a couple more questions though:\n-For the trial stress, in the documentation it is assumed linear elastic. From that elastic stress, the Von Mises stress is calculated, and then that is compared with the yield stress. What I wanted to know is how/where this trial stress is calculated? I am asking because I could potentially want to implement my own stress model (say a hyperelastic model) to combine with plasticity. So I wanted to understand how to integrate it with the IsotropicPlasticityStressUpdate.\n-When in the plastic regime, the strains can now be divided into elastic and plastic strain. Is the strain object, say ComputeFiniteStrain \"aware\" of this? I just posted another question (#27196), but I was asking where the elastic_strain is declared. How/where does it calculate and declare this, and does the plasticity object \"override\" the total_strain output? I guess my overall question is how this works, to make sure that when I \"get\" the elastic_strain, I am not getting any plastic part at all.\n-Lastly, if I wanted to work without using this object (maybe if the model gets too complicated to integrate with this object) e.g if I used if/else statements to calculate the stress when in the plastic regime, how would I work with ComputeFiniteStrain to separate the plastic and elastic strains? I think all my questions really boil down to understanding how ComputeFiniteStrain works.",
                          "url": "https://github.com/idaholab/moose/discussions/26727#discussioncomment-8918818",
                          "updatedAt": "2024-03-26T18:02:13Z",
                          "publishedAt": "2024-03-26T18:02:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "Thanks, I looked at a couple of examples and this makes sense. I have a couple more questions though:\n-For the trial stress, in the documentation it is assumed linear elastic. From that elastic stress, the Von Mises stress is calculated, and then that is compared with the yield stress. What I wanted to know is how/where this trial stress is calculated? I am asking because I could potentially want to implement my own stress model (say a hyperelastic model) to combine with plasticity. So I wanted to understand how to integrate it with the IsotropicPlasticityStressUpdate.\n\nSee ComputeMultipleInelasticStress.C line 77\n\n-When in the plastic regime, the strains can now be divided into elastic and plastic strain. Is the strain object, say ComputeFiniteStrain \"aware\" of this? I just posted another question (#27196), but I was asking where the elastic_strain is declared. How/where does it calculate and declare this, and does the plasticity object \"override\" the total_strain output? I guess my overall question is how this works, to make sure that when I \"get\" the elastic_strain, I am not getting any plastic part at all.\n\nComputeFiniteStrain just computes the total strain/strain incremental from displacements. The separation of strain into elastic and plastic will be performed for the plasticity models called by ComputeMultipleInelasticStress.\n\n-Lastly, if I wanted to work without using this object (maybe if the model gets too complicated to integrate with this object) e.g if I used if/else statements to calculate the stress when in the plastic regime, how would I work with ComputeFiniteStrain to separate the plastic and elastic strains? I think all my questions really boil down to understanding how ComputeFiniteStrain works.\n\nAs I explained, the ComputeFiniteStrain does not handle the plastic and elastic strains. You need to use ReturnMapping or other methods to get the plastic strain from the total strain. Usually this is a nonlinear equation, so we need newton iterations within return mapping.",
                  "url": "https://github.com/idaholab/moose/discussions/26727#discussioncomment-8951778",
                  "updatedAt": "2024-03-29T13:30:42Z",
                  "publishedAt": "2024-03-29T13:30:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "tests fail with libtorch configured on M1 MAC",
          "author": {
            "login": "rfryeSigma"
          },
          "bodyText": "I have been running tutorials and examples with libtorch on the moose-dev=2024.01.23 release, but all tests fail on the moose-dev=2024.03.15 when configured with libtorch.\nI am running on an M1 laptop.\nThis is how I updateed moose and tested without libtorch\n(base) rogerfrye@Rogers-Laptop Git % conda env remove -n moose\nconda update --all --yes\nconda create -n moose moose-dev=2024.03.15\nconda activate moose\nconda update --all --yes\ngit clone https://github.com/idaholab/moose.git\ncd moose\ngit checkout master\ncd test\nmake -j8\n./run_tests -j8\n4248 passed, 97 skipped, 0 pending, 0 failed\nThen I try with libtorch\n(moose) moose % ./scripts/setup_libtorch.sh\n./configure --with-libtorch\ncd test\nMake runs successfule when run with 8 cores or with 1 core. In either case\n./run_tests -j8\n0 passed, 75 skipped, 0 pending, 51 FAILED\nEven the always_ok version fails\n(moose) rogerfrye@Rogers-Laptop test % ./run_tests -i always_ok -p 2\ntests/test_harness.always_ok: Working Directory: /Users/rogerfrye/Documents/Git/moose/test/tests/test_harness\ntests/test_harness.always_ok: Running command: mpiexec -n 2 /Users/rogerfrye/Documents/Git/moose/test/moose_test-opt -i good.i --error --error-override --no-gdb-backtrace\ntests/test_harness.always_ok: \ntests/test_harness.always_ok: ===================================================================================\ntests/test_harness.always_ok: =   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\ntests/test_harness.always_ok: =   PID 86523 RUNNING AT Rogers-Laptop.lan\ntests/test_harness.always_ok: =   EXIT CODE: 6\ntests/test_harness.always_ok: =   CLEANING UP REMAINING PROCESSES\ntests/test_harness.always_ok: =   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES\ntests/test_harness.always_ok: ===================================================================================\ntests/test_harness.always_ok: YOUR APPLICATION TERMINATED WITH THE EXIT STRING: Abort trap: 6 (signal 6)\ntests/test_harness.always_ok: This typically refers to a problem with your application.\ntests/test_harness.always_ok: Please see the FAQ page for debugging suggestions\ntests/test_harness.always_ok: dyld[86524]: symbol not found in flat namespace '__ZN3c1019UndefinedTensorImpl10_singletonE'\ntests/test_harness.always_ok: dyld[86523]: symbol not found in flat namespace '__ZN3c1019UndefinedTensorImpl10_singletonE'\ntests/test_harness.always_ok: \ntests/test_harness.always_ok: \ntests/test_harness.always_ok: Exit Code: 6\ntests/test_harness.always_ok: ################################################################################\ntests/test_harness.always_ok: Tester failed, reason: CRASH\ntests/test_harness.always_ok: \ntests/test_harness.always_ok ...................................................... [OVERSIZED] FAILED (CRASH)\n\n\nFinal Test Results:\n--------------------------------------------------------------------------------------------------------------\ntests/test_harness.always_ok ...................................................... [OVERSIZED] FAILED (CRASH)\n--------------------------------------------------------------------------------------------------------------\nRan 1 tests in 0.6 seconds. Average test time 0.0 seconds, maximum test time 0.0 seconds.\n0 passed, 0 skipped, 0 pending, 1 FAILED\n\nI tried fixing build issues\ngit clean -xfd\ngit fetch upstream\nfatal: 'upstream' does not appear to be a git repository\n\ngit pull\ngit submodule update --init\nBut that took too long to load, so I gave up\nI ran make again with 1 core, and run_tests completed, but it skipped the libtorch tests.\nSo I setup libtorch again and configured --with-libtorch\nNow all tests fail again.\nI also tried building jsut the stochastic tools module and running\n./run_tests -j 8 --re libtorch_nn\ntest:surrogates/libtorch_nn.retrain ................................................ [skipped dependency] SKIP\ntest:surrogates/libtorch_nn.evaluate ............................................... [skipped dependency] SKIP\ntest:surrogates/libtorch_nn.train-with-rel-tol ..................................... [skipped dependency] SKIP\ntest:surrogates/libtorch_nn.evaluate-standardized .................................. [skipped dependency] SKIP\ntest:transfers/libtorch_nn_transfer.torch-parameters .......................................... FAILED (CRASH)\ntest:surrogates/libtorch_nn.train_and_evaluate ................................................ FAILED (CRASH)\ntest:surrogates/libtorch_nn.train ............................................................. FAILED (CRASH)\ntest:surrogates/libtorch_nn.train-standardized ................................................ FAILED (CRASH)\n--------------------------------------------------------------------------------------------------------------\nRan 4 tests in 1.3 seconds. Average test time 0.4 seconds, maximum test time 0.7 seconds.\n0 passed, 4 skipped, 0 pending, 4 FAILED\n\nHas anyone been able to run with libtorch on an M1 MAC since the 3/15/2024 release?",
          "url": "https://github.com/idaholab/moose/discussions/27230",
          "updatedAt": "2024-03-29T12:15:45Z",
          "publishedAt": "2024-03-29T03:05:26Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "rfryeSigma"
                  },
                  "bodyText": "I remembered the answer.  I forgot to replace the Intel libtorch-macos with the ARM version:\nGo to https://github.com/mlverse/libtorch-mac-m1/releases\nand download libtorch-v2.1.0.zip into moose/framework/contrib/\n% rm -fr libtorch\n% unzip libtorch-v2.1.0.zip\nNow run_tests -j8 succeeds.\n4268 passed, 77 skipped, 0 pending, 0 failed",
                  "url": "https://github.com/idaholab/moose/discussions/27230#discussioncomment-8947937",
                  "updatedAt": "2024-03-29T04:05:02Z",
                  "publishedAt": "2024-03-29T04:05:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}