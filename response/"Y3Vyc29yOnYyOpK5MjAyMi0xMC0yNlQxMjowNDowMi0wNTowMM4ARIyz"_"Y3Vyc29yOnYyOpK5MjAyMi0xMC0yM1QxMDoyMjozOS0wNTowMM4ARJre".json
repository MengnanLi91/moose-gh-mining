{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0xMC0yM1QxMDoyMjozOS0wNTowMM4ARJre"
    },
    "edges": [
      {
        "node": {
          "title": "Periodic Boundary Conditions in TensorMechanics",
          "author": {
            "login": "Aayush-T"
          },
          "bodyText": "Hi everyone,\ngreetings!\nI am trying to use periodic boundary conditions for my Tensor Mechanics model. I use mesh file of either .inp or .msh type. I am attaching a few sample mesh files and input files with a sample example. I have developed my model based on FiniteStrainUObasedCP on very similar lines as described in the example.\nOn using automatic PBCs, moose throws error: *** ERROR ***\nCouldn't auto-detect a paired boundary for use with periodic boundary conditions\nwhereas when I try using translation PBC method, it doesn't produce any error but still won't utilize the periodic boundary conditions and model will work as if PBCs are not applied. Even writing wrong/non-existant primary/secondary boundary names doesn't throw any other and the model works as if no PBCs are applied.\nI verified that the model is not using PBCs by looking at disp_x from the generated .e file using paraview.\nI am uploading files for both inp and msh mesh type as well as input files for both. Had to add.txt in the end as github doesn't allow a few file formats to be uploaded. Apologies for that.\neuler_ang_file.txt\nfilename_updated_new.inp.txt\nfinal.msh.txt\ninput_slip_sys.txt\nsave_euler_pbc_gmsh.i.txt\nsave_euler_pbc_inp.i.txt",
          "url": "https://github.com/idaholab/moose/discussions/22441",
          "updatedAt": "2022-10-25T16:59:31Z",
          "publishedAt": "2022-10-19T12:16:17Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI just run your simulation for 3 time steps\nI added\nconstruct_side_list_from_node_list = true to help visualize x0 x1 y0 y1\nthe three points I checked had the expected periodicity.\nCould you please double check?\npoints on x0 and matching points and x1 should have the same disp_y right?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22441#discussioncomment-3933964",
                  "updatedAt": "2022-10-21T13:54:51Z",
                  "publishedAt": "2022-10-21T13:54:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Aayush-T"
                          },
                          "bodyText": "Yes, on adding \"construct_side_list_from_node_list = true\", we get expected periodicity in both the cases, but without it, we do not get periodicity.\nThanks a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/22441#discussioncomment-3962298",
                          "updatedAt": "2022-10-25T16:38:16Z",
                          "publishedAt": "2022-10-25T16:38:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok thanks for reporting it. I created #22496 to keep track of this",
                          "url": "https://github.com/idaholab/moose/discussions/22441#discussioncomment-3962449",
                          "updatedAt": "2022-10-25T16:53:26Z",
                          "publishedAt": "2022-10-25T16:53:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Aayush-T"
                          },
                          "bodyText": "Thank you again! Also, I wanted to know if there is some specific reason for this to happen? Or is it perfectly normal thing.",
                          "url": "https://github.com/idaholab/moose/discussions/22441#discussioncomment-3962513",
                          "updatedAt": "2022-10-25T16:57:47Z",
                          "publishedAt": "2022-10-25T16:57:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I m not an expert on this subsystem so I dont know.\nIt could be a bug or it could have been intentional",
                          "url": "https://github.com/idaholab/moose/discussions/22441#discussioncomment-3962539",
                          "updatedAt": "2022-10-25T16:59:32Z",
                          "publishedAt": "2022-10-25T16:59:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to set fine grid number only at the interface not the whole model?",
          "author": {
            "login": "abc-hy"
          },
          "bodyText": "Hi everyone,\nDoes anyone know how to set a fine grid number only at the interface not the whole model?\nThe following is the figure I got, I currently set the fine grid number for the whole model, how to only set a fine grid number at the interface? In this case I can save the computational cost.\n\nThank you very much,\nBest,",
          "url": "https://github.com/idaholab/moose/discussions/22495",
          "updatedAt": "2022-11-15T18:11:16Z",
          "publishedAt": "2022-10-25T15:58:48Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes you may add this mesh generator to refine only the boundary\nhttps://mooseframework.inl.gov/source/meshgenerators/RefineSidesetGenerator.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22495#discussioncomment-3961951",
                  "updatedAt": "2022-10-25T16:00:11Z",
                  "publishedAt": "2022-10-25T16:00:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "abc-hy"
                          },
                          "bodyText": "It seems that I need to label the interface coordinates? But, what if my interface is moving in the simulation? If it is moving, then how to determine the location?",
                          "url": "https://github.com/idaholab/moose/discussions/22495#discussioncomment-3962171",
                          "updatedAt": "2022-10-25T16:24:04Z",
                          "publishedAt": "2022-10-25T16:24:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if it's moving then you should look at adaptivity instead. This will be run during the simulation",
                          "url": "https://github.com/idaholab/moose/discussions/22495#discussioncomment-3962216",
                          "updatedAt": "2022-10-25T16:28:51Z",
                          "publishedAt": "2022-10-25T16:28:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abc-hy"
                          },
                          "bodyText": "I am currently using this adaptivity block, which parameter should I change?",
                          "url": "https://github.com/idaholab/moose/discussions/22495#discussioncomment-3962353",
                          "updatedAt": "2022-10-25T16:43:54Z",
                          "publishedAt": "2022-10-25T16:43:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You need to add an indicator and make sure it indicates the area you want to refine",
                          "url": "https://github.com/idaholab/moose/discussions/22495#discussioncomment-3962460",
                          "updatedAt": "2022-10-25T16:54:34Z",
                          "publishedAt": "2022-10-25T16:54:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abc-hy"
                          },
                          "bodyText": "how to add indicator?",
                          "url": "https://github.com/idaholab/moose/discussions/22495#discussioncomment-3962470",
                          "updatedAt": "2022-10-25T16:55:12Z",
                          "publishedAt": "2022-10-25T16:55:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "https://mooseframework.inl.gov/syntax/Adaptivity/index.html\nhttps://mooseframework.inl.gov/syntax/Adaptivity/Indicators/index.html\nhttps://mooseframework.inl.gov/syntax/Adaptivity/Markers/index.html\nmaybe this marker is exactly what you want\nhttps://mooseframework.inl.gov/source/markers/BoundaryMarker.html",
                          "url": "https://github.com/idaholab/moose/discussions/22495#discussioncomment-3962531",
                          "updatedAt": "2022-10-25T16:58:46Z",
                          "publishedAt": "2022-10-25T16:58:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Definition of density for large strain problems (UpdatedLagrangian formulation)",
          "author": {
            "login": "saturn00000"
          },
          "bodyText": "Dear MOOSE Team,\nas you can see in the attached picture. if we try to solve heat transfer problems at large deformations (_\"strain = FINITE\", UpdatedLagrangian formulation), do we need to modify the density \\rho in the codes?\ne.g.\n_rho[_qp] ->  _rho[_qp]*det(F)\nor\n_rho[_qp] ->  _rho[_qp]*J \n[Modules/TensorMechanics/Master]\n[all]\n# This block adds all of the proper Kernels, strain calculators, and Variables\n# for TensorMechanics in the correct coordinate system (autodetected)\nadd_variables = true\nstrain = FINITE\neigenstrain_names = eigenstrain\nuse_automatic_differentiation = true\ngenerate_output = 'vonmises_stress elastic_strain_xx elastic_strain_yy strain_xx strain_yy'\n[]\n[]\n(ref: moose\\tutorials\\darcy_thermo_mech\\step09_mechanics\\problems)",
          "url": "https://github.com/idaholab/moose/discussions/22467",
          "updatedAt": "2022-11-15T18:11:04Z",
          "publishedAt": "2022-10-22T00:20:35Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "You have three choices:\n\nIn the reference configuration, implement _test[_i][_qp] * _rho[_qp] * _e_dot[_qp]  * _F[_qp].det().\nIn the reference configuration, implement _test[_i][_qp] * _rho_0[_qp] * _e_dot[_qp]. This is the right half of your picture.\nIn the current (deformed) configuration, implement _test[_i][_qp] * _rho[_qp] * _e_dot[_qp]. This is the left half of your picture.\n\nTo integrate on the undisplaced mesh, you set use_displaced_mesh = false. To integrate on the displaced mesh, you set use_displaced_mesh = true. In cases 1 and 3, you will specify the density of the material in the deformed configuration, e.g. \\rho. In case 2, you will specify the density of the material in the reference configuration, e.g. \\rho_0.\nAs you can see, cases 2 and 3 have the same functional form. So that's what most moose objects offer, as you can easily switch between them using use_displaced_mesh. Case 1 is still useful if you don't want to keep track of the displaced mesh when you only have the measurement of the density in the deformed configuration.",
                  "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3937986",
                  "updatedAt": "2022-10-22T01:03:20Z",
                  "publishedAt": "2022-10-22T00:49:14Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "By \"Lagrangian formulation\", are you referring to the new system in tensor mechanics, e.g. new_system = true in the action? We always do solid mechanics using a Lagrangian description, at least in the tensor_mechanics module. Though sometimes we distinguish between total Lagrangian and updated Lagrangian.",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3937993",
                          "updatedAt": "2022-10-22T00:53:33Z",
                          "publishedAt": "2022-10-22T00:53:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "saturn00000"
                          },
                          "bodyText": "Dear @hugary1995\nfor UpdatedLagrangian formulation in Moose, you may see moose\\tutorials\\darcy_thermo_mech\\step09_mechanics\\problems\\step9.i\nIn step9.i,  the density parameters are defined in the reference configuration (i.e.  \\rho_{0}). These density paramters in step9.i are \\rho_{0}, not \\rho_{t}.\nAs you know, if we use UpdatedLagrangian formulation in MOOSE, we need to use \\rho_{t}, not \\rho_{0}...",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3938063",
                          "updatedAt": "2022-10-22T01:21:37Z",
                          "publishedAt": "2022-10-22T01:21:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "That probably is an oversight. Is this from a tutorial you were trying to follow? If so, can you give me the link to that tutorial? I'll create an issue if I can confirm this.",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3938091",
                          "updatedAt": "2022-10-22T01:33:03Z",
                          "publishedAt": "2022-10-22T01:33:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "saturn00000"
                          },
                          "bodyText": "@hugary1995 the link to the tutorial: [https://github.com/idaholab/moose/blob/next/tutorials/darcy_thermo_mech/step09_mechanics/problems/step9.i]\nWe may note that:\n1.)  in your \"raccoon\" modules,  total Lagrangian is used, therefore, \\rho_{0} is okay, as we do everything in the reference configuration\n2.) But for  [Modules/TensorMechanics/Master]\n[all]\nstrain = FINITE\n...\n[]\nUpdatedLagrangian formulation is used, thus everything in the deformed configuration.  \\rho_{0} is NOT okay, OR?",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3939642",
                          "updatedAt": "2022-10-22T11:57:31Z",
                          "publishedAt": "2022-10-22T11:57:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "UpdatedLagrangian formulation is used, thus everything in the deformed configuration.\n\nThis statement is not entirely correct. We still have the freedom to perform the integration on whichever configuration we like.\n\nIn step9.i, the density parameters are defined in the reference configuration (i.e. \\rho_{0}).\n\nI'm not sure I follow. Why do you think the density values in that input file are \\rho_0?",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3940961",
                          "updatedAt": "2022-10-22T18:01:38Z",
                          "publishedAt": "2022-10-22T18:01:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "saturn00000"
                          },
                          "bodyText": "UpdatedLagrangian formulation is used, thus everything in the deformed configuration.\n\nThis statement is not entirely correct. We still have the freedom to perform the integration on whichever configuration we like.\n\nis  the updatedLagrangian formulation  used in step9.i?  or NOT ?\n[Modules/TensorMechanics/Master]\n[all]\nstrain = FINITE\n...\n[]\nIf yes,  this statement is entirely correct in this case.\n\n\nIn step9.i, the density parameters are defined in the reference configuration (i.e. \\rho_{0}).\n\nI'm not sure I follow. Why do you think the density values in that input file are \\rho_0?\n\ncan you find line 126 in step9.i:   density_file = data/water_density.csv\nhere we define the density ... ...\nhow to define the density value in the input file for solving the updatedLagrangian formulation problems in MOOSE?\nPlease note that the density \\rho for large deformation problems is NOT constant in case of  the updatedLagrangian formulation...",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3941213",
                          "updatedAt": "2022-10-22T19:35:25Z",
                          "publishedAt": "2022-10-22T19:21:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "The tutorial is doing the right thing (case 2 in my original answer).",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3950367",
                          "updatedAt": "2022-10-24T12:53:48Z",
                          "publishedAt": "2022-10-24T12:53:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "saturn00000"
                          },
                          "bodyText": "The updatedLagrangian formulation is used in step9.i (the tutorial you mean)...\nIf the updatedLagrangian formulation is used in this case, why is the density \\rho constant?\nPlease see",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3954428",
                          "updatedAt": "2022-10-24T19:54:43Z",
                          "publishedAt": "2022-10-24T19:47:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "saturn00000"
                          },
                          "bodyText": "Hello @hugary1995\nstep9.i may need some modifications for , e.g.\n...\n    density /= detF;\n  }\n\n  _density[_qp] = density;\n\ndensity /= detF;\nRef : Density.C and  power_law_creep_restart1.i in MOOSE",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3956328",
                          "updatedAt": "2022-10-25T02:12:14Z",
                          "publishedAt": "2022-10-25T02:12:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "The implementation in Density.C is also correct. It defines \\rho in the deformed configuration.\nAgain, in which configuration you choose to integrate the kernel is irrelevant to the objective frame.",
                          "url": "https://github.com/idaholab/moose/discussions/22467#discussioncomment-3956658",
                          "updatedAt": "2022-10-25T03:27:11Z",
                          "publishedAt": "2022-10-25T03:27:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "why there is no coupledVectorNeighborValue?",
          "author": {
            "login": "dingqiushi"
          },
          "bodyText": "I can find coupledNeighborValue() function in moose. But I need to couple vector value in my kernel. Is there any way to achieve this? I have not find fuction coupledVectorNeighborValue.",
          "url": "https://github.com/idaholab/moose/discussions/22473",
          "updatedAt": "2022-10-24T12:47:31Z",
          "publishedAt": "2022-10-23T10:48:00Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSo you are using a vector variable?\nI'm not sure why we dont have that one but we have:\nadCoupledVectorNeighborValue\n\nand you can always retrieve the value from an AD number\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22473#discussioncomment-3944140",
                  "updatedAt": "2022-10-23T14:53:55Z",
                  "publishedAt": "2022-10-23T14:53:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dingqiushi"
                          },
                          "bodyText": "Thank you.\nI am using vector variable. But not AD number. I find  CZMMaterialBase retrieve neighbor displacements vector value like:\nInputParameters\nCZMMaterialBase::validParams()\n{\n  InputParameters params = InterfaceMaterial::validParams();\n\n  params.addClassDescription(\"Base class for cohesive zone mateirla models\");\n  params.addRequiredCoupledVar(\"displacements\",\n                               \"The string of displacements suitable for the problem statement\");\n  return params;\n}\n\nCZMMaterialBase::CZMMaterialBase(const InputParameters & parameters)\n  : InterfaceMaterial(parameters),\n    _normals(_assembly.normals()),\n    _ndisp(coupledComponents(\"displacements\")),\n    _disp(_ndisp),\n    _disp_neighbor(_ndisp),\n    _displacement_jump_global(declareProperty<RealVectorValue>(\"displacement_jump_global\")),\n    _displacement_jump(declareProperty<RealVectorValue>(\"displacement_jump\")),\n    _traction_global(declareProperty<RealVectorValue>(\"traction_global\")),\n    _traction(declareProperty<RealVectorValue>(\"traction\")),\n    _traction_derivatives_global(declareProperty<RankTwoTensor>(\"traction_derivatives_global\")),\n    _traction_derivatives(declareProperty<RankTwoTensor>(\"traction_derivatives\"))\n{\n  if (_ndisp > 3 || _ndisp < 1)\n    mooseError(\"the CZM material requires 1, 2 or 3 displacement variables\");\n\n  if (getParam<bool>(\"use_displaced_mesh\") == true)\n    mooseError(\"This material cannot be used with use_displaced_mesh = true\");\n\n  // initializing the displacement vectors\n  for (unsigned int i = 0; i < _ndisp; ++i)\n  {\n    _disp[i] = &coupledValue(\"displacements\", i);\n    _disp_neighbor[i] = &coupledNeighborValue(\"displacements\", i);\n  }\n}\n\nCan I use the same method to couple neighbor vector value in my kernel?",
                          "url": "https://github.com/idaholab/moose/discussions/22473#discussioncomment-3946421",
                          "updatedAt": "2022-10-24T01:19:57Z",
                          "publishedAt": "2022-10-24T01:19:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes, it s ok to retrieve the AD coupled value. When you use it you can do var.value() to retrieve the number\nEither that or you add this coupledVectorNeighborValue routine to MOOSE. It wont be too hard since the AD version exists already",
                          "url": "https://github.com/idaholab/moose/discussions/22473#discussioncomment-3946494",
                          "updatedAt": "2022-10-24T01:35:06Z",
                          "publishedAt": "2022-10-24T01:35:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "There might be a misunderstanding in terminology. Displacement is a vector, yes -- that's how I would say that in maths... But in MOOSE, a \"vector variable\" has a very specific meaning. A vector variable in MOOSE is a variable that has exactly three components, for example of family LAGRANGE_VEC. There are then apparently two ways of defining the displacement variables in MOOSE:\n\nAs a vector variable:\n\n[disp]\n  order = FIRST\n  family = LAGRANGE_VEC\n[]\n\nAs three variables:\n\n[disp_x]\n  order = FIRST\n  family = LAGRANGE\n[]\n[disp_y]\n  order = FIRST\n  family = LAGRANGE\n[]\n[disp_z]\n  order = FIRST\n  family = LAGRANGE\n[]\nIn the tensor_mechanics module, we always do option 2, in which case we need to loop over the components like in the code you pasted above:\nfor (unsigned int i = 0; i < _ndisp; ++i)\n    _disp[i] = &coupledValue(\"displacements\", i);\nor use an equivalent shortcut:\n_disp = coupledValues(\"displacements\");\nSo you'll want to do something similar if you choose option 2.\nYou need coupledVectorValue and/or coupledVectorNeighborValue only if you are doing option 1.",
                          "url": "https://github.com/idaholab/moose/discussions/22473#discussioncomment-3950313",
                          "updatedAt": "2022-10-24T12:47:31Z",
                          "publishedAt": "2022-10-24T12:47:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "'block_pair'  error in 'BreakMeshByBlockGenerator'",
          "author": {
            "login": "RECHOA"
          },
          "bodyText": "Hi all,\nI used --mesh-only to run the following inputfile:\n[Mesh]\n  [gen]\n    type = GeneratedMeshGenerator\n    nx = 20\n    ny = 20\n    nz = 2\n    zmax = 0.2\n    dim = 3\n  []\n  [block1]\n    type = SubdomainBoundingBoxGenerator\n    block_id = 1\n    bottom_left = '0 0 0'\n    top_right = '0.5 1 0.2'\n    input = gen\n  []\n  [block2]\n    type = SubdomainBoundingBoxGenerator\n    block_id = 2\n    bottom_left = '0.5 0 0'\n    top_right = '0.75 1 0.2'\n    input = block1\n  []\n  [block3]\n    type = SubdomainBoundingBoxGenerator\n    block_id = 3\n    bottom_left = '0.75 0 0'\n    top_right = '1 1 0.2'\n    input = block2\n  []\n  [breakmesh]\n    input = block3\n    type = BreakMeshByBlockGenerator\n    #block_pairs = '2 1'\n    #block_pairs = '2 3'\n    block_pairs = '2 1 2 3'\n  []\n[]\n\nIn the object [breakmesh] with type = BreakMeshByBlockGenerator, if i used block_pairs = '2 1' or block_pairs = '2 3', it could create mesh correctly. However, if i used  block_pairs = '2 1 2 3' or\n    block_pairs = '2 1 \n                   2 3'\n\nit would fail with a message:\n\n*** ERROR ***\nparam 'block_pair' not present in InputParams\n\nCould you help me with this problem? Thanks in  advance.",
          "url": "https://github.com/idaholab/moose/discussions/22476",
          "updatedAt": "2022-10-24T15:03:10Z",
          "publishedAt": "2022-10-24T11:24:23Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "RECHOA"
                  },
                  "bodyText": "I got it. the block_pairs vector should be divided by a semicolon(;), for example:\n    block_pairs = '2 1;\n                   2 3'\n\nSorry i misunderstood the figure in https://mooseframework.inl.gov/source/meshgenerators/BreakMeshByBlockGenerator.html",
                  "url": "https://github.com/idaholab/moose/discussions/22476#discussioncomment-3950019",
                  "updatedAt": "2022-10-24T12:09:54Z",
                  "publishedAt": "2022-10-24T12:08:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "The failure of fluid calculation",
          "author": {
            "login": "Submarinewake"
          },
          "bodyText": "Hello experts,\nI recently tried to calculate a complex channel with MOOSE\uff0ccalculate its temperature conduction and flow field velocity and pressure. But the results obtained are not ideal. I found that the temperature can be calculated smoothly, but the fluid seems not to be calculated. In the results of the flow field, both pressure and velocity are approximately to 0, not even the inlet velocity. After calculation, the model has a low Reynolds number, and theoretically it can be calculated with a laminar model. Do you have any good suggestions\uff1fSincerely look forward to your reply.\n`\n\nMy input file as follow\nfluid_mu = 0.001   # Pa*s\nfluid_rho = 998.2    #kg/m3\nfluid_cp = 4128      #j/kg-k\nfluid_k = 0.6     #w/m-k\nplate_k = 30\nsource_k = 401\n\n\n[Mesh]\n  type = FileMesh #Read in mesh from file\n  file = htcc1_2.e\n[]\n\n\n[Variables]\n  [Tf]\n    order = FIRST\n    family = LAGRANGE\n    block = 'fluid'\n    initial_condition = 293\n  []\n  [Ts]\n    order = FIRST\n    family = LAGRANGE\n    block = 'plate source'\n    initial_condition = 293\n  []\n  [./velocity]\n    family = LAGRANGE_VEC\n    block='fluid'\n  [../]\n  [./p]\n    order = FIRST\n    family = LAGRANGE\n    block='fluid'\n  [../]\n[]\n\n[ICs]\n  [velocity]\n    type = VectorConstantIC\n    x_value = 1e-15\n    y_value = 2.87\n    z_value = 1e-15\n    variable = velocity\n  []\n[]\n\n\n[Kernels]\n [./mass]\n    type = INSADMass\n    variable = p\n  [../]\n  [./mass_pspg]\n    type = INSADMassPSPG\n    variable = p\n  [../]\n  [./momentum_convection]\n    type = INSADMomentumAdvection\n    variable = velocity\n  [../]\n  [./momentum_viscous]\n    type = INSADMomentumViscous\n    variable = velocity\n  [../]\n  [./momentum_pressure]\n    type = INSADMomentumPressure\n    variable = velocity\n    pressure = p\n    integrate_p_by_parts = true\n  [../]\n  [./momentum_supg]\n    type = INSADMomentumSUPG\n    variable = velocity\n    velocity = velocity\n  [../]\n  [./temperature_advection]\n    type = INSADEnergyAdvection\n    variable = Tf\n    block = 'fluid'\n  [../]\n  [fluid_temperature_conduction]\n    type = ADHeatConduction\n    variable = Tf\n    block = 'fluid'\n    thermal_conductivity = 'k'\n  []\n  [temperature_supg]\n    type = INSADEnergySUPG\n    variable = Tf\n    velocity = velocity\n    block = 'fluid'\n  []\n\n  [solid_temperature_conduction]\n    type = ADHeatConduction\n    variable = Ts\n    block ='plate source'\n    thermal_conductivity = 'k'\n  []\n[]\n\n[InterfaceKernels]\n  [./convection_heat_transfer]\n    type = ConjugateHeatTransfer\n    variable = Tf\n    T_fluid = Tf\n    neighbor_var = 'Ts'\n    boundary = 'interface'\n    htc = 50000\n  [../]\n[]\n\n[BCs]\n  [./plane_wall]#PCB\n    type = ADConvectiveHeatFluxBC\n    variable = Ts\n    boundary = 'wall'\n    T_infinity = 293\n    heat_transfer_coefficient = 25\n  [../]\n  [./no_slip]\n    type = VectorFunctionDirichletBC\n    variable = velocity\n    boundary = 'interface'\n  [../]\n  [./vec_inlet]\n    type = VectorFunctionDirichletBC\n    variable = velocity\n    boundary = 'inlet'\n    function_y = 2.87 #m/s\n  [../]\n  [./inlet_temp]\n    type = DirichletBC\n    variable =Tf\n    boundary = 'inlet'\n    value = 303\n  [../]\n  [./outlet_p]\n    type = DirichletBC\n    variable = p\n    boundary = 'outlet'\n    value = 0\n  [../]\n  [./source]\n    type = NeumannBC\n    variable = Ts\n    boundary = 'flux'\n    value = 2.432e5\n  [../]\n[]\n\n[Materials]\n  [./plate_mat]\n    type = ADGenericConstantMaterial\n    prop_names = 'k'\n    prop_values = '${plate_k}'\n    block = 'plate'\n  [../]\n  [./source_mat]\n    type = ADGenericConstantMaterial\n    prop_names = 'k'\n    prop_values = '${source_k}'\n    block = 'source'\n  [../]\n  [./fluid_mat]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho mu cp k'\n    prop_values = '${fluid_rho} ${fluid_mu}  ${fluid_cp}  ${fluid_k}'\n    block = 'fluid'\n  [../]\n  [ins_mat]\n    type = INSADStabilized3Eqn\n    velocity = velocity\n    pressure = p\n    temperature = Tf\n    block='fluid'\n  []\n[]\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = false\n    petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n    petsc_options_value = ' lu       mumps'\n    solve_type = PJFNK\n  [../]\n[]\n\n[Executioner]\n  type = Steady\n  l_max_its = 20\n  nl_max_its =1000\n \n  l_tol = 1e-5\n  nl_rel_tol = 1e-3\n\n  solve_type = PJFNK\n  ##petsc_options_iname = '-pc_type -pc_hypre_type'\n  ##petsc_options_value = 'hypre boomeramg'\n   petsc_options_iname = '-pc_type -pc_factor_mat_solver_package -ksp_gmres_restart'\n  petsc_options_value = 'lu       superlu_dist                  200'\n\n[]\n[Debug]\n  show_var_residual_norms = true\n[]\n\n[Outputs]\n  exodus = true\n  file_base = htccflux_out1\n  perf_graph = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/22336",
          "updatedAt": "2022-11-15T18:10:54Z",
          "publishedAt": "2022-10-09T02:22:11Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "maxnezdyur"
                  },
                  "bodyText": "IIRC when using integrate_by_parts = true you shouldn't apply a DirchetBC on pressure (or if you do it requires the tangential velocity to be 0). Run the input file without the pressure outlet bc and if your computational domain is large enough, then the pressure near the outlet will still be close to 0, which may or may not be good enough for your simulation.",
                  "url": "https://github.com/idaholab/moose/discussions/22336#discussioncomment-3834583",
                  "updatedAt": "2022-10-09T19:18:01Z",
                  "publishedAt": "2022-10-09T19:18:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Submarinewake"
                          },
                          "bodyText": "Thanks for your answer, I will try your suggestion!",
                          "url": "https://github.com/idaholab/moose/discussions/22336#discussioncomment-3835519",
                          "updatedAt": "2022-10-10T01:27:17Z",
                          "publishedAt": "2022-10-10T01:27:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSince the flow is mainly driven by the inlet condition, I would check the mesh and in particular the inlet boundary to see that it's as expected.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22336#discussioncomment-3836253",
                  "updatedAt": "2022-10-10T05:23:40Z",
                  "publishedAt": "2022-10-10T05:23:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Submarinewake"
                          },
                          "bodyText": "Hello Guillaume\nActually I think it is correlated with the grid, when I modified the input file and made a mesh refinement, my results will not converge, according to the convergence residuals, mainly the residuals of the fluid Large. From the experience in simulation, Fluid simulations have high mesh requirements.\nBut in the process of working with my model, I found this to be difficult. Because of the complexity of the model, it is very difficult to use the built-in modeling software, but at the same time, when I import the STP file into Trelis/gmsh, I will encounter some compatibility problems, such as loss of block information. Do you have any good suggestions for this problem? I look forward to your reply.\nFendy",
                          "url": "https://github.com/idaholab/moose/discussions/22336#discussioncomment-3844321",
                          "updatedAt": "2022-10-11T02:37:45Z",
                          "publishedAt": "2022-10-11T02:37:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what do you currently do with the STP file? Does moose read those?\nHow did you generate your mesh?\nWhich simulation did converge? The one with the coarse mesh? how coarse was it?\nAre you watching the CFL criterion?\nCan you try to add a -pc_factor_shift NONZERO to your petsc options?",
                          "url": "https://github.com/idaholab/moose/discussions/22336#discussioncomment-3844693",
                          "updatedAt": "2022-10-11T03:52:48Z",
                          "publishedAt": "2022-10-11T03:52:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Any update on this?",
                  "url": "https://github.com/idaholab/moose/discussions/22336#discussioncomment-3937892",
                  "updatedAt": "2022-10-22T00:01:29Z",
                  "publishedAt": "2022-10-22T00:01:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Submarinewake"
                          },
                          "bodyText": "Sorry, thank you for your attention. In response to this problem, after I further tried the above solutions, the problem turned into a difficulty in convergence. Since I was trying other work recently, I did not continue to discuss it in depth. I hope that I can find the problem and solve it later.",
                          "url": "https://github.com/idaholab/moose/discussions/22336#discussioncomment-3948771",
                          "updatedAt": "2022-10-24T08:58:49Z",
                          "publishedAt": "2022-10-24T08:58:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Sub-sub-app not executed in the multilevel Picard approach",
          "author": {
            "login": "xuxiaobei1995"
          },
          "bodyText": "Hi all,\nRecently I want to use the multilevel Picard function in MOOSE. I run the test case in test/tests/multiapps/picard_multilevel/ but to find a problem that the sub-sub-app (picard_sub2.i) is only be executed in the outer picard iteration 0. That is to say, it will be skipped (only \"successfully solved\" reported) when the outer picard iteration >= 1, just as shown in the figures below:\nthe execution of the sub-sub-app in the outer picard iteration 0:\n\nthe skipping of the sub-sub-app when the outer picard iteration >= 1:\n\nHere are the input files I use:\npicard_master.i:\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 10\n  ny = 10\n  parallel_type = replicated\n[]\n\n[Variables]\n  [./u]\n  [../]\n[]\n\n[AuxVariables]\n  [./v]\n  [../]\n[]\n\n[Kernels]\n  [./diff]\n    type = CoefDiffusion\n    variable = u\n    coef = 0.1\n  [../]\n  [./coupled_force]\n    type = CoupledForce\n    variable = u\n    v = v\n  [../]\n  [./time]\n    type = TimeDerivative\n    variable = u\n  [../]\n[]\n\n[BCs]\n  [./left]\n    type = DirichletBC\n    variable = u\n    boundary = left\n    value = 0\n  [../]\n  [./right]\n    type = DirichletBC\n    variable = u\n    boundary = right\n    value = 1\n  [../]\n[]\n\n[Postprocessors]\n  [picard_its]\n    type = NumFixedPointIterations\n    execute_on = 'initial timestep_end'\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  num_steps = 5\n  dt = 1\n  solve_type = PJFNK\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n  picard_max_its = 30\n  nl_rel_tol = 1e-8\n  nl_abs_tol = 1e-9\n  picard_rel_tol = 1e-8\n  picard_abs_tol = 1e-9\n[]\n\n[Outputs]\n  exodus = true\n[]\n\n[MultiApps]\n  [./sub1]\n    type = TransientMultiApp\n    app_type = MooseTestApp\n    positions = '0 0 0'\n    input_files = picard_sub.i\n    execute_on = 'timestep_end'\n  [../]\n[]\n\n[Transfers]\n  [./v]\n    type = MultiAppNearestNodeTransfer\n    from_multi_app = sub1\n    source_variable = v\n    variable = v\n  [../]\n[]\n\npicard_sub.i:\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 10\n  ny = 10\n[]\n\n[Variables]\n  [./v]\n  [../]\n[]\n\n[AuxVariables]\n  [./v2]\n  [../]\n[]\n\n[Kernels]\n  [./diff_v]\n    type = Diffusion\n    variable = v\n  [../]\n  [./coupled_force]\n    type = CoupledForce\n    variable = v\n    v = v2\n  [../]\n  [./td_v]\n    type = TimeDerivative\n    variable = v\n  [../]\n[]\n\n[BCs]\n  [./left_v]\n    type = DirichletBC\n    variable = v\n    boundary = left\n    value = 1\n  [../]\n  [./right_v]\n    type = DirichletBC\n    variable = v\n    boundary = right\n    value = 0\n  [../]\n[]\n\n[Postprocessors]\n  # Accumulate the number of times 'timestep_end' is reached\n  # (which is an indicator of the number of Picard iterations)\n  [./cumulative_picard_its_pp]\n    type = TestPostprocessor\n    test_type = custom_execute_on\n    execute_on = 'timestep_end'\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  num_steps = 5\n  dt = 1\n  solve_type = PJFNK\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n  picard_max_its = 5\n  nl_rel_tol = 1e-8\n  nl_abs_tol = 1e-9\n  picard_rel_tol = 1e-99\n  picard_abs_tol = 1e-99\n[]\n\n[Outputs]\n  exodus = true\n[]\n\n[MultiApps]\n  [./sub2]\n    type = TransientMultiApp\n    app_type = MooseTestApp\n    positions = '0 0 0'\n    input_files = picard_sub2.i\n    sub_cycling = true\n    execute_on = timestep_end\n  [../]\n[]\n\n[Transfers]\n  [./v2]\n    type = MultiAppNearestNodeTransfer\n    from_multi_app = sub2\n    source_variable = v\n    variable = v2\n  [../]\n[]\n\npicard_sub2.i:\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 10\n  ny = 10\n[]\n\n[Variables]\n  [./v]\n  [../]\n[]\n\n[Kernels]\n  [./diff_v]\n    type = Diffusion\n    variable = v\n  [../]\n  [./td_v]\n    type = TimeDerivative\n    variable = v\n  [../]\n[]\n\n[BCs]\n  [./left_v]\n    type = DirichletBC\n    variable = v\n    boundary = left\n    value = 1\n  [../]\n  [./right_v]\n    type = DirichletBC\n    variable = v\n    boundary = right\n    value = 0\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  num_steps = 5\n  dt = 0.5\n  solve_type = PJFNK\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n  nl_abs_tol = 1e-10\n[]\n\n[Outputs]\n  exodus = true\n[]\n\nDoes any one know how to solve this problem? Thanks.\nBest Regards,\nXiaobei",
          "url": "https://github.com/idaholab/moose/discussions/22305",
          "updatedAt": "2022-11-15T18:09:59Z",
          "publishedAt": "2022-10-05T09:11:36Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\npicard_... fixed point parameters are deprecated, you should update to the new ones.\nCan you try increasing fixed_point_min_its to see if you can force more iterations?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22305#discussioncomment-3805307",
                  "updatedAt": "2022-10-05T13:35:56Z",
                  "publishedAt": "2022-10-05T13:35:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xuxiaobei1995"
                          },
                          "bodyText": "Hi Guillaume,\nSorry that the version of my MOOSE is old (in 2018 year) and the updating is difficult for me because I found it hard to modify the code of my App to be compatible with the latest MOOSE. Could you help me run this case (picard_parent.i in test/tests/multiapps/picard_multilevel/) using the latest MOOSE and see whether this issue occurs? Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/22305#discussioncomment-3824325",
                          "updatedAt": "2022-10-07T16:32:07Z",
                          "publishedAt": "2022-10-07T16:32:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This is much too old.\nI cant support you on old versions of MOOSE, I wasnt even working with MOOSE at the time and I dont know what bug fixes got in.\nUpdating is not hard. The only tricky one is likely this change on validParams:\nhttps://mooseframework.inl.gov/newsletter/2020_04.html#!",
                          "url": "https://github.com/idaholab/moose/discussions/22305#discussioncomment-3826213",
                          "updatedAt": "2022-10-07T22:15:51Z",
                          "publishedAt": "2022-10-07T22:15:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xuxiaobei1995"
                          },
                          "bodyText": "OK. I will try installing the latest MOOSE and see whether the problem exists. It may take a little long time.",
                          "url": "https://github.com/idaholab/moose/discussions/22305#discussioncomment-3826939",
                          "updatedAt": "2022-10-08T02:30:31Z",
                          "publishedAt": "2022-10-08T02:30:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Any update on this?",
                  "url": "https://github.com/idaholab/moose/discussions/22305#discussioncomment-3937888",
                  "updatedAt": "2022-10-22T00:00:12Z",
                  "publishedAt": "2022-10-22T00:00:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xuxiaobei1995"
                          },
                          "bodyText": "Sorry Guillaume, recently I'm busy with other work. After I finish the work (maybe a week) I will turn back to this issue.",
                          "url": "https://github.com/idaholab/moose/discussions/22305#discussioncomment-3946767",
                          "updatedAt": "2022-10-24T02:24:32Z",
                          "publishedAt": "2022-10-24T02:24:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to impose NeumannBC on a boundary line of a 2D plane in a 3D mesh?",
          "author": {
            "login": "Joseph-0123"
          },
          "bodyText": "Hi everyone,\nI use Gmsh (attached .geo and .msh files ) to build a 3D model (named 'Matrix') embedded by a 2D plane (named 'Fault'). I want to impose NeumannBC on the left boundary line (named 'Leftline')of the 2D plane.\nI have done the following works:\n\n\nDefined the Fault as a block by using 'LowerDBlockFromSidesetGenerator' in the input file of MOOSE or by inserting 'lower_dimensional_block' after the \"Fault\" name in the .msh file.\n\n\nImposed NeumannBC on the  'Leftline' in the input file of MOOSE.\n\n\nStarted my simulation, then I got the error information:\nThe object ''Leftline_h' contains the following side set ids that do not exist on the mesh: 1. MOOSE distinguishes between \"node sets\" and \"side sets\" depending on whether you are using \"Nodal\" or \"Integrated\" BCs respectively. Node sets corresponding to your side sets are constructed for you by default. Try setting \"Mesh/construct_side_set_from_node_set=true\" if you see this error.\n\n\nI setted construct_side_set_from_node_set=true  but I got the same error information again.  But if I set DirichletBC on the 'Leftline', this was no error.\nCould you please give me suggestions on this? Thanks a lot.\nYan\n\nmesh files.zip",
          "url": "https://github.com/idaholab/moose/discussions/16850",
          "updatedAt": "2022-10-23T23:24:55Z",
          "publishedAt": "2021-02-02T14:19:02Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Could you also attach your input file (at least the [Mesh] block) after adding \"construct_side_set_from_node_set=true\"?",
                  "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-331110",
                  "updatedAt": "2022-07-09T09:29:35Z",
                  "publishedAt": "2021-02-02T14:51:13Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "Yes, here it is.\n[Mesh]\n[file]\ntype = FileMeshGenerator\nfile = case.msh\n[]\n[./Faultld]\ninput = file\ntype = LowerDBlockFromSidesetGenerator\nnew_block_id = '10'\nnew_block_name = 'Faultld'\nsidesets = '2'\n[../]\nconstruct_side_list_from_node_list=true\n[]\n[BCs]\n[./Leftline_h]\ntype = NeumannBC\nvariable = pressure\nboundary = 'Leftline'\nvalue = -1e-5\n[../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-331158",
                          "updatedAt": "2022-07-09T09:29:35Z",
                          "publishedAt": "2021-02-02T15:11:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Should it be \"construct_side_list_from_node_list\" or \"construct_side_set_from_node_set\"?",
                          "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-331888",
                          "updatedAt": "2022-07-09T09:29:35Z",
                          "publishedAt": "2021-02-02T18:47:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "Actually, I tried both two options (using together or using just one) and all failed.",
                          "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-332066",
                          "updatedAt": "2022-07-09T09:29:35Z",
                          "publishedAt": "2021-02-02T19:38:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "When I run it with \"--mesh-only\", and it doesn't show any side set or node set in it. Indeed, there are some empty nodes in \"case.msh\". If I were you I would double check my gmsh journal.",
                          "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-332314",
                          "updatedAt": "2022-07-11T03:31:06Z",
                          "publishedAt": "2021-02-02T20:57:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "Gary, thanks for your remind.  The Gmsh journal is attached here.\nIn my case,  defining the 2D Fault as a block From Sidesets to Nodesets is valid. But defining 1D 'Leftline'  as a boundary using the  \"From Nodesets to Sidesets\" has an error and maybe conflict with \"From Sidesets to Nodesets\". Because in one MOOSE simulation, only one way (\u201cFrom Sidesets to Nodesets\u201d or\"From Nodesets to Sidesets\") can be used and can not be used together(see https://mooseframework.inl.gov/source/mesh/MooseMesh.html).\nI don't know whether my former understanding is right or wrong. Please correct me, thanks.\njournal.txt",
                          "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-332586",
                          "updatedAt": "2022-07-11T03:31:06Z",
                          "publishedAt": "2021-02-02T22:13:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Has this been resolved?",
                          "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-1228657",
                          "updatedAt": "2022-07-11T03:31:06Z",
                          "publishedAt": "2021-08-24T17:15:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "saturn00000"
                          },
                          "bodyText": "Has this been resolved?\n\nHi @GiudGiud,\ncan we apply NeumannBC on a single node in 2D?\nI tried to test NeumannBC on a single node (named 'ptt') of the 2D plane (the mesh is generated by Gmsh).\nIn order to use this gmsh file, construct_side_list_from_node_list = true is active in MOOSE(see #16850 (reply in thread) ).\nBut construct_side_list_from_node_list = true cannot be used due to the error:\n(BCs/right/boundary):\n    the following side sets (ids) do not exist on the mesh: ptt (10)\n\n    MOOSE distinguishes between \"node sets\" and \"side sets\" depending on whether\n    you are using \"Nodal\" or \"Integrated\" BCs respectively. Node sets corresponding\n    to your side sets are constructed for you by default.\n\n    Try setting \"Mesh/construct_side_list_from_node_list=true\" if you see this error.\n    Note: If you are running with adaptivity you should prefer using side sets.\n\nHere is the input file\n[Mesh]\n  [file]\n  type = FileMeshGenerator\n  file = gmsh/model04.msh\n  []\n\nconstruct_node_list_from_side_list = false # true\nconstruct_side_list_from_node_list = true\n[]\n\n\n[Variables]\n  [./u]\n  [../]\n[]\n\n[Kernels]\n  [./diff]\n    type = Diffusion\n    variable = u\n  [../]\n[]\n\n[BCs]\n  [./right]\n    type = NeumannBC\n    variable = u\n    boundary = ptt\n    value = 2\n  [../]\n[]\n\n[Executioner]\n  type = Steady\n\n  solve_type = 'PJFNK'\n\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n[]\n\n[Outputs]\n  exodus = true\n[]\n\n.msh file:\n$MeshFormat\n4.1 0 8\n$EndMeshFormat\n$PhysicalNames\n1\n0 10 \"ptt\"\n$EndPhysicalNames\n$Entities\n4 4 1 0\n1 0 0 0 0 \n2 10 0 0 0 \n3 10 10 0 1 10 \n4 0 10 0 0 \n1 -1.000000002804313e-07 -1e-07 -1e-07 10.0000001 1e-07 1e-07 0 2 1 -2 \n2 9.999999900000001 -1.000000002804313e-07 -1e-07 10.0000001 10.0000001 1e-07 0 2 2 -3 \n3 -1.000000002804313e-07 9.999999900000001 -1e-07 10.0000001 10.0000001 1e-07 0 2 3 -4 \n4 -1e-07 -1.000000002804313e-07 -1e-07 1e-07 10.0000001 1e-07 0 2 4 -1 \n1 -1.000000002804313e-07 -1.000000002804313e-07 -1e-07 10.0000001 10.0000001 1e-07 0 4 4 1 2 3 \n$EndEntities\n$Nodes\n9 9 1 9\n0 1 0 1\n2\n0 0 0\n0 2 0 1\n3\n10 0 0\n0 3 0 1\n1\n10 10 0\n0 4 0 1\n4\n0 10 0\n1 1 0 1\n5\n5 0 0\n1 2 0 1\n6\n10 5 0\n1 3 0 1\n7\n5 10 0\n1 4 0 1\n8\n0 5 0\n2 1 0 1\n9\n5.01650975510978 5.01650975510978 0\n$EndNodes\n$Elements\n9 16 1 16\n0 1 15 1\n2 2 \n0 2 15 1\n3 3 \n0 3 15 1\n1 1 \n0 4 15 1\n4 4 \n1 1 1 2\n5 2 5 \n6 5 3 \n1 2 1 2\n7 3 6 \n8 6 1 \n1 3 1 2\n9 1 7 \n10 7 4 \n1 4 1 2\n11 4 8 \n12 8 2 \n2 1 3 4\n13 9 8 2 5 \n14 9 5 3 6 \n15 9 7 4 8 \n16 6 1 7 9 \n$EndElements",
                          "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-3944352",
                          "updatedAt": "2022-10-23T15:31:12Z",
                          "publishedAt": "2022-10-23T15:31:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nWith a nodal variable yes you should be able to.\nHowever, you cannot create a side from a single node. So anything that expects a side to build a boundary condition (like in finite volume for example) will not be able to.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/16850#discussioncomment-3944430",
                          "updatedAt": "2022-10-23T15:48:15Z",
                          "publishedAt": "2022-10-23T15:48:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "BCs around subdomains and visualization of result",
          "author": {
            "login": "salaudeen-ya"
          },
          "bodyText": "Hello,\nI am trying out MultiApp to solve two domains. In my simple case, the domains are solving the same equation since I am just literally splitting one domain into two.\nThe question is: I want to transfer between the two subdomains and I am not sure of the right boundary conditions to use. At the interface, I want right BC of the first one and the left BCs of the second domain to be Robin BCs (or a better way to specifiy the interfaceBC). Is there a way I can do that? The whole domain has DirichletBC on the left and Neumann on the right.\nIn addition, how can I visualize the result from the subdomains? By now, I am using Paraview option and I can only see the results of the subdomains separately. Is it possible to have a single plots from the subdomains plotted together? I mean, say the whole domain is 10 unit long and the interface is at point 5, how to plot from 0 - 10?\n--------Parent---\n`[Mesh]\n  type = GeneratedMesh\n  dim = 1\n[]\n\n[Variables]\n  [u]\n    order = FIRST\n    family = LAGRANGE\n  []\n[]\n\n[AuxVariables]\n  [flux_u]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n[]\n\n[Kernels]\n  [diffusion]\n    type = MatDiffusion\n    variable = u\n    diffusivity = 2\n  []\n[]\n\n[AuxKernels]\n  [fluxKernel]\n    type = DiffusionFluxAux\n    diffusivity = 2\n    variable = flux_u\n    diffusion_variable = u\n    component = x\n  []\n[]\n\n[BCs]\n  [leftBC] \n    type = DirichletBC\n    variable = u\n    boundary = 'left'\n    value = 0\n  []\n\n  [rightBC] \n    type = NeumannBC\n    variable = u\n    boundary = 'right' \n    value = 1\n  []\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'PJFNK'\n\n  fixed_point_max_its = 20\n  nl_abs_tol = 1e-10\n  fixed_point_rel_tol = 1e-16\n  fixed_point_abs_tol = 1e-10\n\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n[]\n\n[Outputs]\n  exodus = true\n  #csv = true\n  console = true\n[]\n\n\n[MultiApps]\n  [sub]\n    type = FullSolveMultiApp\n    execute_on = timestep_end\n    positions = '0.5 0 0'\n    input_files = sub.i\n  []\n[]\n\n[Transfers]\n  [pull_u]\n    type = MultiAppNearestNodeTransfer\n    to_multi_app = sub\n    source_variable = u\n    source_boundary = right\n    variable = u_transfer\n  []\n[]`\n\n------Subdomain------\n`[Mesh]\n  type = GeneratedMesh\n  dim = 1\n[]\n\n[Variables]\n  [u]\n    order = FIRST\n    family = LAGRANGE\n  []\n[]\n\n[AuxVariables]\n  [u_transfer]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n[]\n\n[Kernels]\n  [diffusion]\n    type = MatDiffusion\n    variable = u\n    diffusivity = 2\n  []\n[]\n\n[AuxKernels]\n  [fluxKernel]\n    type = DiffusionFluxAux\n    diffusivity = 2\n    variable = u_transfer\n    diffusion_variable = u\n    component = x\n  []\n[]\n\n[BCs]\n  [leftBC] \n    type = DirichletBC\n    variable = u\n    boundary = 'left'\n    value = 0\n  []\n\n  [rightBC] \n    type = DirichletBC\n    variable = u\n    boundary = 'right' \n    value = 1\n  []\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'PJFNK'\n\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n[]\n\n[Outputs]\n  exodus = true\n  #csv = true\n  console = true\n[]\n\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/22470",
          "updatedAt": "2022-11-15T18:09:37Z",
          "publishedAt": "2022-10-23T00:05:53Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nfor the plotting question, the easiest is to load multiple output files and display them together in Paraview.\nNote that you may translate simulations in MOOSE using the multi app positions parameter and/or modifying the origin of the app\u2019s mesh (using a TransformGenerator for example)\nyou can transfer to an auxiliary variable using a nearest node strategy if the two domains don\u2019t overlap. Then this variable will only contain the boundary value from the other application, and may be specified in a coupled boundary condition\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22470#discussioncomment-3942420",
                  "updatedAt": "2022-10-23T16:06:23Z",
                  "publishedAt": "2022-10-23T05:14:14Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "A question about the class ElementIntegralVariablePostprocessor",
          "author": {
            "login": "TJT-post95"
          },
          "bodyText": "Dear MOOSE:\nIn the 'Example 20 - UserObjects', the BlockAverageValue  which derived from class ElementIntegralVariablePostprocessor has been applied. It could be found that one of the parent classes of ElementIntegralVariablePostprocessor is MooseVariableInterface<Real>. However, the member attributes _u and _grad_u are initialized by coupledValue() and coupledGradient() respectively. And addMooseVariableDependency(&mooseVariableField()) could be replaced by addMooseVariableDependency(getCoupledMooseVars()) to make the same effect. So it seems that do not inherit class MooseVariableInterface<Real> the ElementIntegralVariablePostprocessor also could work. Does ElementIntegralVariablePostprocessor inherit class MooseVariableInterface<Real> have other considerations, is it necessary?\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/22472",
          "updatedAt": "2022-11-15T18:09:25Z",
          "publishedAt": "2022-10-23T03:53:31Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyou have to consider the needs of all the subclasses and potential subclasses of this class.\nAs you can see in the base classes like UserObject or ElementUserObject, we inherit a lot of interfaces to be ready for whatever a derived class needs.\nI can check tomorrow this particular situation\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22472#discussioncomment-3942423",
                  "updatedAt": "2022-10-23T05:16:59Z",
                  "publishedAt": "2022-10-23T05:16:58Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I agree we dont need it in this class.",
                          "url": "https://github.com/idaholab/moose/discussions/22472#discussioncomment-3944270",
                          "updatedAt": "2022-10-23T15:18:04Z",
                          "publishedAt": "2022-10-23T15:18:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TJT-post95"
                          },
                          "bodyText": "Got. Thank you\uff5e",
                          "url": "https://github.com/idaholab/moose/discussions/22472#discussioncomment-3944295",
                          "updatedAt": "2022-10-23T15:22:40Z",
                          "publishedAt": "2022-10-23T15:22:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}