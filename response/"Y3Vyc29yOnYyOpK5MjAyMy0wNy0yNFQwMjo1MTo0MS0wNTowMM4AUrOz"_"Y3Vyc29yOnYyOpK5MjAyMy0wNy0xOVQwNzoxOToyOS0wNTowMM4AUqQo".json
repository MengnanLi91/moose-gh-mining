{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wNy0xOVQwNzoxOToyOS0wNTowMM4AUqQo"
    },
    "edges": [
      {
        "node": {
          "title": "Does periodic mesh necessary for periodic boundary conditions?",
          "author": {
            "login": "abarun22"
          },
          "bodyText": "Dear all,\nI am interested in running an RVE micro-structure model applying periodic boundary conditions and material laws defined by crystal plasticity considerations. I was thinking to create neper tessellations with different grain morphological properties and estimate the resulting behavior  based on the mesh sensitivities. I chose to go ahead with 'Tets' as this tends to capture the underlying micro-structure to a reasonable accuracy. A mesh with 'Tets' will in practice never be able to maintain periodicity along the edges/surfaces of the model, which makes it hard to apply periodic BC's. Surprisingly moose does seem to have no issues running this model (attached) and produced results, although i am not sure about its accuracy. My question being that, whether the periodic boundary conditions implemented in moose requires a strict construction of a periodic mesh or not.\n\nAny comments on the accuracy of the results with a non-periodic mesh is most welcome.\nKind regards,\nArun",
          "url": "https://github.com/idaholab/moose/discussions/25019",
          "updatedAt": "2023-07-24T07:50:50Z",
          "publishedAt": "2023-07-23T22:31:49Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNo the periodic boundaries wont complain if the mesh is not periodic, and it wont be able to enforce peridocity if it's not\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25019#discussioncomment-6526232",
                  "updatedAt": "2023-07-24T07:50:51Z",
                  "publishedAt": "2023-07-24T07:50:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "ERROR: no FunctionName parameter named \"node_n\" found",
          "author": {
            "login": "aaaaaaqing"
          },
          "bodyText": "When I was using my own function 'node_n' in the kernel, I ran into a problem and couldn't solve it, I was hoping for your help\u3002The question is as follows\uff1a\n*** ERROR ***\nERROR: no FunctionName parameter named \"node_n\" found.\nfirst I created a user object to read the csv file\uff1a\n[UserObjects]\n[reader_node_n]\ntype = PropertyReadFile\nprop_file_name = 'rec_n2.csv'\nread_type = 'node'\nnprop = 1 # number of columns in CSVs\n[]\n[]\nsecond I created a function to read the csv file in 'userobjects'\uff1a\n[Functions]\n[node_n]\ntype = PiecewiseConstantFromCSV\nread_prop_user_object = 'reader_node_n'\nread_type = 'node'\ncolumn_number = '1'\n[]\n[]\nThird, I chose to use this csv file in the kernel:\n[Kernels]\n[poisson2]\ntype = poisson2\nvariable = convected\nfunction = 'node_n'\n[]\n[]\nHere are all the h and C files of my kernel\npoisson2.h\"\n#pragma once\n#include \"Kernel.h\"\n#include \"Function.h\"\nclass poisson2 : public Kernel\n{\npublic:\npoisson2(const InputParameters & parameters);\nstatic InputParameters validParams();\nprotected:\nvirtual Real computeQpResidual() override;\nprivate:\nconst MaterialProperty & _AOC;\n// const VariableValue & _n;\nconst Function & _node_n;\n};\npoisson2.C\n#include \"poisson2.h\"\nregisterMooseObject(\"poissonApp\", poisson2);\nInputParameters\npoisson2::validParams()\n{\nInputParameters params = Kernel::validParams();\nreturn params;\n}\npoisson2::poisson2(const InputParameters & parameters)\n: // You must call the constructor of the base class first\nKernel(parameters),\n_AOC(getMaterialProperty(\"AOC\")),\n// _n(getVar(\"node_n\"))\n_node_n(getFunction(\"node_n\"))\n// _node_n(get(\"node_n\"))\n{\n}\nReal\npoisson2::computeQpResidual()\n{\nconst std::vector interpolation_values;\nconst unsigned int nqp = 462;\nfor (unsigned int qp = 0; qp < nqp; ++qp)\n{\nReal interpolation_values = _node_n.value(qp);\n}\nreturn _test[_i][_qp] * ( _AOC[_qp] * interpolation_values[_qp]);\n}\nThe csv file that my code reads is the dopant value for each point in the triangular grid. containing only a single list of dopant values arranged in the same order as the points in the grid file (I don't know if this file format can be read by moose)\nI tried many ways to solve this problem, but I failed. How should this problem be solved",
          "url": "https://github.com/idaholab/moose/discussions/24969",
          "updatedAt": "2023-07-24T06:40:13Z",
          "publishedAt": "2023-07-15T04:44:20Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "The kernel must define a function parameter in the validParams. You can\u2019t just hardcode the function in the constructor, you have to have it as a parameter to use getFunction",
                  "url": "https://github.com/idaholab/moose/discussions/24969#discussioncomment-6461916",
                  "updatedAt": "2023-07-16T19:12:38Z",
                  "publishedAt": "2023-07-16T19:12:37Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aaaaaaqing"
                          },
                          "bodyText": "yes\uff0cthank u",
                          "url": "https://github.com/idaholab/moose/discussions/24969#discussioncomment-6525371",
                          "updatedAt": "2023-07-24T06:40:13Z",
                          "publishedAt": "2023-07-24T06:40:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Incorporating a Pressure Drop Calculation",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I am using a pre-made pressure drop calculator, but I am getting the following error: \"A 'PressureDrop' is not a registered object.\" . Will I have to update my version of MOOSE to use this object?",
          "url": "https://github.com/idaholab/moose/discussions/25010",
          "updatedAt": "2023-07-22T21:01:56Z",
          "publishedAt": "2023-07-21T18:09:31Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nMaybe if your version of moose is really old. I added this object like 6 months ago or so\nit s in the navier stokes module so you need to either use that module s executable or enable it in your application makefile\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25010#discussioncomment-6518352",
                  "updatedAt": "2023-07-22T21:01:57Z",
                  "publishedAt": "2023-07-22T21:01:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Surface Integral Setup",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I would like to determine the drag and lift force on an object in fluid flow using the surface integral involving the viscosity multiplied by the normal derivative of the fluid velocity summed with the surface integral of the normal pressure. Is there an example of setting up a post processor to accomplish this?",
          "url": "https://github.com/idaholab/moose/discussions/25014",
          "updatedAt": "2023-07-22T20:38:00Z",
          "publishedAt": "2023-07-21T21:16:05Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@grmnptr just made a pull request to add this for finite volume. It should be in the framework soon.\nDo you need this for FE or FV fluid flow?",
                  "url": "https://github.com/idaholab/moose/discussions/25014#discussioncomment-6516635",
                  "updatedAt": "2023-07-22T14:07:55Z",
                  "publishedAt": "2023-07-22T14:07:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "#25013",
                          "url": "https://github.com/idaholab/moose/discussions/25014#discussioncomment-6516637",
                          "updatedAt": "2023-07-22T14:08:56Z",
                          "publishedAt": "2023-07-22T14:08:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Thanks for the response. I would like to implement this in FE for fluid flow.",
                          "url": "https://github.com/idaholab/moose/discussions/25014#discussioncomment-6516711",
                          "updatedAt": "2023-07-22T14:29:44Z",
                          "publishedAt": "2023-07-22T14:29:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It should be very similar for FE we just need to add the computeQpIntegral implementation on those postprocessors",
                          "url": "https://github.com/idaholab/moose/discussions/25014#discussioncomment-6518286",
                          "updatedAt": "2023-07-22T20:38:01Z",
                          "publishedAt": "2023-07-22T20:38:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Moose Representation for Normal Derivatives and Directional Derivatives",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "Some codes allow for access to the values for the normal derivative in the following way, nx, ny, etc., and directional derivatives as ux, px, uy, etc.. How can these values be applied for use in MOOSE, and what is their syntax?",
          "url": "https://github.com/idaholab/moose/discussions/25015",
          "updatedAt": "2023-07-22T14:32:22Z",
          "publishedAt": "2023-07-21T21:21:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nso normal near a boundary?\nfor directional derivative you can retrieve a gradient using coupledGradient(\u201cname of variable parameter\u201d)\nfor normal derivatives, use the gradient and the _normals attribute defined near boundaries only\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25015#discussioncomment-6516228",
                  "updatedAt": "2023-07-22T12:17:51Z",
                  "publishedAt": "2023-07-22T12:17:51Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Thank you for the guidance.",
                          "url": "https://github.com/idaholab/moose/discussions/25015#discussioncomment-6516726",
                          "updatedAt": "2023-07-22T14:32:23Z",
                          "publishedAt": "2023-07-22T14:32:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Compile Error in libmesh on cluster",
          "author": {
            "login": "chunhuizhao478"
          },
          "bodyText": "Hi all, I tried to build MOOSE on the cluster following the page https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html, I encounter the following error when compile libmesh:\n../src/mesh/xdr_io.C: In member function 'void libMesh::XdrIO::read_serialized_connectivity(libMesh::Xdr&, libMesh::dof_id_type, const std::vector<long unsigned int>&, T)':\n../src/mesh/xdr_io.C:1844:17: error: invalid initializer for structured binding declaration\n       for (auto [e, it] = std::tuple{first_elem, conn.begin()}; e<last_elem; e++)\n                 ^~~~~~~\n  CXX      src/numerics/libmesh_opt_la-dense_submatrix.lo\n  CXX      src/numerics/libmesh_opt_la-dense_subvector.lo\nmake[1]: *** [src/mesh/libmesh_opt_la-xdr_io.lo] Error 1\nmake[1]: *** Waiting for unfinished jobs....\nmake[1]: Leaving directory `/scratch/users/chunhui3/projects/moose/libmesh/build'\nmake: *** [all-recursive] Error 1\n\nI'm using the following modules:\n 1) gcc/7.2.0                  2) cmake/3.18.4               3) mvapich2/2.3.6-gcc-7.2.0\n\nIt appears to me that gcc may be at a lower version that minimum requirement (GCC @ 7.5.0), I use 7.2.0 because it seems to be compatible with cmake version, any suggestions on what should I do? Thanks a lot",
          "url": "https://github.com/idaholab/moose/discussions/24970",
          "updatedAt": "2023-07-21T15:34:15Z",
          "publishedAt": "2023-07-15T11:11:34Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Use a newer GCC. The minimum requirements are a hard limit.\nSince this is INL HPC there s plenty of newer ones and there s lots that work with local cmake modules too",
                  "url": "https://github.com/idaholab/moose/discussions/24970#discussioncomment-6461928",
                  "updatedAt": "2023-07-16T19:14:23Z",
                  "publishedAt": "2023-07-16T19:14:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "chunhuizhao478"
                          },
                          "bodyText": "Thanks Guid. I'm trying to build this on our university cluster as well. I would discuss with the experts there to help me set up the newer version of cmake.",
                          "url": "https://github.com/idaholab/moose/discussions/24970#discussioncomment-6464356",
                          "updatedAt": "2023-07-17T06:39:48Z",
                          "publishedAt": "2023-07-17T06:39:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "chunhuizhao478"
                          },
                          "bodyText": "After using a higher version of gcc, the libmesh is successfully built. However, when I run the make -j4 inside test folder, it gives the following error:\n[chunhui3@golubh1 test]$ make -j6\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.2/sysconfig.py\", line 343, in _init_posix\n    with open(config_h) as f:\nIOError: [Errno 2] No such file or directory: '/usr/local/include/python3.2m/pyconfig.h'\n \nDuring handling of the above exception, another exception occurred:\n \nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.2/site.py\", line 529, in <module>\n    main()\n  File \"/usr/local/lib/python3.2/site.py\", line 517, in main\n    known_paths = addusersitepackages(known_paths)\n  File \"/usr/local/lib/python3.2/site.py\", line 263, in addusersitepackages\n    user_site = getusersitepackages()\n  File \"/usr/local/lib/python3.2/site.py\", line 238, in getusersitepackages\n    user_base = getuserbase() # this will also set USER_BASE\n  File \"/usr/local/lib/python3.2/site.py\", line 228, in getuserbase\n    USER_BASE = get_config_var('userbase')\n  File \"/usr/local/lib/python3.2/sysconfig.py\", line 577, in get_config_var\n    return get_config_vars().get(name)\n  File \"/usr/local/lib/python3.2/sysconfig.py\", line 474, in get_config_vars\n    _init_posix(_CONFIG_VARS)\n  File \"/usr/local/lib/python3.2/sysconfig.py\", line 349, in _init_posix\n    raise IOError(msg)\nIOError: invalid Python installation: unable to open /usr/local/include/python3.2m/pyconfig.h (No such file or directory)\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.2/sysconfig.py\", line 343, in _init_posix\n    with open(config_h) as f:\nIOError: [Errno 2] No such file or directory: '/usr/local/include/python3.2m/pyconfig.h'\n \nDuring handling of the above exception, another exception occurred:\n \nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.2/site.py\", line 529, in <module>\n    main()\n  File \"/usr/local/lib/python3.2/site.py\", line 517, in main\n    known_paths = addusersitepackages(known_paths)\n  File \"/usr/local/lib/python3.2/site.py\", line 263, in addusersitepackages\n    user_site = getusersitepackages()\n  File \"/usr/local/lib/python3.2/site.py\", line 238, in getusersitepackages\n    user_base = getuserbase() # this will also set USER_BASE\n  File \"/usr/local/lib/python3.2/site.py\", line 228, in getuserbase\n    USER_BASE = get_config_var('userbase')\n  File \"/usr/local/lib/python3.2/sysconfig.py\", line 577, in get_config_var\n    return get_config_vars().get(name)\n  File \"/usr/local/lib/python3.2/sysconfig.py\", line 474, in get_config_vars\n    _init_posix(_CONFIG_VARS)\n  File \"/usr/local/lib/python3.2/sysconfig.py\", line 349, in _init_posix\n    raise IOError(msg)\nIOError: invalid Python installation: unable to open /usr/local/include/python3.2m/pyconfig.h (No such file or directory)\nRebuilding symlinks in /home/chunhui3/scratch/projects/moose/framework/build/header_symlinks\nCreating Unity Directory /home/chunhui3/scratch/projects/moose/framework/build/unity_src\nCopying default MOOSE configuration to: /home/chunhui3/scratch/projects/moose/framework/include/base/MooseConfig.h...\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/outputs_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/outputs_png_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/outputs_formatters_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/controls_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/reporters_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/timeintegrators_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/fvbcs_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/meshgenerators_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/relationshipmanagers_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/vectorpostprocessors_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/problems_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/partitioner_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/timesteppers_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/auxkernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/fviks_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/predictors_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/constraints_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/transfers_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/bcs_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/interfacekernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/interfaces_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/dgkernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/markers_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/dampers_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/linesearches_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/preconditioners_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/executioners_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/executors_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/scalarkernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/materials_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/geomsearch_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/systems_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/multiapps_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/postprocessors_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/actions_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/positions_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/functions_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/indicators_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/loops_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/nodalkernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/functormaterials_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/variables_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/limiters_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/fvkernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/dirackernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/distributions_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/ics_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/mesh_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/times_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/libtorch_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/libtorch_controls_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/libtorch_reporters_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/libtorch_postprocessors_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/kernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/parser_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/restart_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/samplers_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/userobjects_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/framework/build/unity_src/splits_Unity.C\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcrecpp.cc...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_stringpiece.cc...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_version.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_config.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_tables.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_newline.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_fullinfo.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_valid_utf8.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_string_utils.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_globals.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_study.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_ord2utf8.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_maketables.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_jit_compile.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_dfa_exec.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_exec.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_chartables.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_compile.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_ucd.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_byte_order.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_xclass.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_get.c...\nCompiling C (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/pcre/src/pcre_refcount.c...\nCompiling C++ /home/chunhui3/scratch/projects/moose/framework/contrib/gtest/gtest-all.cc...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/hit/parse.cc...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/hit/lex.cc...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/hit/braceexpr.cc...\nBuilding and linking /home/chunhui3/scratch/projects/moose/framework/contrib/hit/hit.so...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/exodiff.C...\n/home/chunhui3/scratch/projects/moose/framework/contrib/hit/hit.cpp:4:10: fatal error: Python.h: No such file or directory\n #include \"Python.h\"\n          ^~~~~~~~~~\ncompilation terminated.\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/exo_entity.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/side_set.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/STRINGLIB_tokenize.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/iqsort.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/map.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/add_to_log.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/exo_block.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/ED_SystemInterface.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/FileInfo.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/SL_tokenize.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/check.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/Tolerance.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/create_file.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/stringx.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/GetLongOpt.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/node_set.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/util.C...\nCompiling C++ (in opt mode) /home/chunhui3/scratch/projects/moose/framework/contrib/exodiff/exoII_read.C...\nCreating Unity Directory /home/chunhui3/scratch/projects/moose/test/build/unity_src\nRebuilding symlinks in /home/chunhui3/scratch/projects/moose/test/build/header_symlinks\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/controls_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/reporters_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/fvbcs_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/meshgenerators_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/vectorpostprocessors_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/problems_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/partitioner_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/timesteppers_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/auxkernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/fviks_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/constraints_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/bcs_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/interfacekernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/dgkernels_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/markers_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/meshes_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/executioners_Unity.C\nCreating Unity /home/chunhui3/scratch/projects/moose/test/build/unity_src/executors_Unity.C\nmake: *** [/home/chunhui3/scratch/projects/moose/framework/contrib/hit/hit.so] Error 1\nmake: *** Waiting for unfinished jobs....\n\nIt seems like the \"Python\" package is the problem, any suggestion? I load the following modules:\n[chunhui3@golubh3 moose]$ module list\nCurrently Loaded Modulefiles:\n  1) cmake/3.18.4              2) gcc/8.2.0                 3) openmpi/4.1.4-gcc-8.2.0",
                          "url": "https://github.com/idaholab/moose/discussions/24970#discussioncomment-6509309",
                          "updatedAt": "2023-07-21T12:30:04Z",
                          "publishedAt": "2023-07-21T12:30:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Now you need to load an appropriate Python package. We recommend something between Python >=3.8 and <=3.10.\nPython 3.7 is end of life as of last month. So that version you seem to have there (3.2) is super old... Here is a version support matrix for convenience: https://devguide.python.org/versions/",
                          "url": "https://github.com/idaholab/moose/discussions/24970#discussioncomment-6509985",
                          "updatedAt": "2023-07-21T13:54:10Z",
                          "publishedAt": "2023-07-21T13:53:53Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "chunhuizhao478"
                          },
                          "bodyText": "Thanks! I have successfully build and pass the test after loading python 3.9.16",
                          "url": "https://github.com/idaholab/moose/discussions/24970#discussioncomment-6510989",
                          "updatedAt": "2023-07-21T15:34:16Z",
                          "publishedAt": "2023-07-21T15:34:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "*** ERROR *** Cyclic dependency detected in object ordering: burgers <- ini_stress <- burgers",
          "author": {
            "login": "deyantian18"
          },
          "bodyText": "Dear MOOSE experts,\nI created a 2D simple tunnel (small circle + square outside) to model the creep behavior using Burgers model (kelvin_voigt representation), and try to set in-situ stress in the model using ComputeEigenstrainFromInitialStress (without this, the model seems works well),\nbut if add ComputeEigenstrainFromInitialStress it always shows this error:\n*** ERROR *** Cyclic dependency detected in object ordering: burgers <- ini_stress <- burgers\nAny suggestion to resolve this issue?\nHere is the core block from input file:\n[Kernels]\n  [./TensorMechanics]\n    add_variables = true\n    strain = SMALL\n    planar_formulation = PLANE_STRAIN\n    displacements = 'disp_x disp_y'\n   # use_displaced_mesh = true\n    incremental = true\n    volumetric_locking_correction=false\n    eigenstrain_names = ini_stress\n  [../]\n[]\n\n[Materials]\n  [./burgers] #kelvin_voigt\n    # type = GeneralizedMaxwellModel\n    type = GeneralizedKelvinVoigtModel\n    creep_modulus = '12000'\n    creep_viscosity = '100 18000'\n    poisson_ratio = 0.2\n    young_modulus = 12000\n    driving_eigenstrain=ini_stress\n  [../]\n  [./stress]\n    type = ComputeMultipleInelasticStress\n    inelastic_models = 'creep'\n    tangent_operator='nonlinear'\n   # damage_model= damage\n    perform_finite_strain_rotations = false\n  [../]\n  [./creep]\n    type = LinearViscoelasticStressUpdate\n  [../]\n  [./strain]\n    type = ComputeIncrementalSmallStrain\n    volumetric_locking_correction=false\n    displacements = 'disp_x disp_y'\n    eigenstrain_names = ini_stress\n  [../]\n  [./ini_stress]\n    type = ComputeEigenstrainFromInitialStress\n    initial_stress = '-5 0 0 0 -5 0 0 0 0'\n    eigenstrain_name = ini_stress\n  [../]\n#  [./ini_stress]\n#    type = ComputeEigenstrain\n#    eigenstrain_name = ini_stress\n#    eigen_base = '-0.00026 0 0  0 -0.00026 0  0 0 0'\n # [../]\n[]\n\n\n[UserObjects]\n  [./update]\n    type = LinearViscoelasticityManager\n    viscoelastic_model = burgers\n  [../]\n[]\n\nThank you very much for your help.\nBest regards,\n:D",
          "url": "https://github.com/idaholab/moose/discussions/24999",
          "updatedAt": "2023-07-21T09:28:41Z",
          "publishedAt": "2023-07-20T13:36:59Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nConverted to discussions until we know for sure it's a bug.\nYou could duplicate the stress model to remove the cyclic dependency I think\notherwise @WilkAndy made this object\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24999#discussioncomment-6502175",
                  "updatedAt": "2023-07-20T17:42:53Z",
                  "publishedAt": "2023-07-20T17:42:52Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "deyantian18"
                          },
                          "bodyText": "Thanks @GiudGiud, could you please elaborate on that? how to duplicate the stress model? thanks, Deyan",
                          "url": "https://github.com/idaholab/moose/discussions/24999#discussioncomment-6507419",
                          "updatedAt": "2023-07-21T08:46:50Z",
                          "publishedAt": "2023-07-21T08:46:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I m guessing if you set up prefixes for the material properties you can have the same stress model in two blocks. One of them for initialization\nit s a tad hacky but worth a try",
                          "url": "https://github.com/idaholab/moose/discussions/24999#discussioncomment-6507824",
                          "updatedAt": "2023-07-21T09:28:42Z",
                          "publishedAt": "2023-07-21T09:28:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Calculation of strain energy density with the eigen strains",
          "author": {
            "login": "avtarsinghh1991"
          },
          "bodyText": "Hello MOOSE experts,\nI am trying to add 2 way coupling from the paper as shown in attached figure.\nI found one material kernel which can be used to evaluate the strain energy density but this is without eigen strains. I wonder if there is any material kernel to calculate the strain energy density with the eigen strains. Also, I want to calculate it for finite deformation problem.\nhttps://mooseframework.inl.gov/source/materials/StrainEnergyDensity.html\n\nLink to the article is https://www.sciencedirect.com/science/article/pii/S0378775316304074.\nThanks,\nAvtar",
          "url": "https://github.com/idaholab/moose/discussions/24853",
          "updatedAt": "2023-07-20T17:35:16Z",
          "publishedAt": "2023-06-28T19:54:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@recuero @vanwdani",
                  "url": "https://github.com/idaholab/moose/discussions/24853#discussioncomment-6311029",
                  "updatedAt": "2023-06-29T03:53:23Z",
                  "publishedAt": "2023-06-29T03:53:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "Strain energy density calculations should not include eigenstrains as these do not generate stresses. In this sense, the existing MOOSE object should do the job (it even seems that the equation you posted uses a single type of strain, with the subscript \"e\"; maybe for elastic).",
                          "url": "https://github.com/idaholab/moose/discussions/24853#discussioncomment-6315801",
                          "updatedAt": "2023-06-29T14:04:50Z",
                          "publishedAt": "2023-06-29T14:04:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Thanks @recuero. Does this strain energy density calculation involves only elastic strain or the total strain? I want to calculate the strain energy density only from the elastic part. Also, is it compatible with large deformation settings?",
                          "url": "https://github.com/idaholab/moose/discussions/24853#discussioncomment-6500428",
                          "updatedAt": "2023-07-20T14:47:43Z",
                          "publishedAt": "2023-07-20T14:47:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "MOOSE computes the strain energy density using the elastic strain (if you look in the code it may not be called exactly that, e.g. _strain_increment, but it's the elastic strain). Yes, it is compatible with large deformation kinematics.",
                          "url": "https://github.com/idaholab/moose/discussions/24853#discussioncomment-6501843",
                          "updatedAt": "2023-07-20T17:02:07Z",
                          "publishedAt": "2023-07-20T17:02:06Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "define a global variable that needs to be updated after every substep",
          "author": {
            "login": "eric199405"
          },
          "bodyText": "Hello everyone. I am using MOOSE to run the CPFE simulation. I have a global variable which needs to loop every _qp to obtain. Besides, this variable needs to be updated every substep. I try to implement it under Materials, but fail.\nHow can I realize this function? I think I should add an Userobjects in my APP. Would you please simply write down the loop for each _qp and fine the maximum _pk2?",
          "url": "https://github.com/idaholab/moose/discussions/24995",
          "updatedAt": "2023-07-20T15:51:09Z",
          "publishedAt": "2023-07-20T12:35:33Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nthis seems like the behavior for a postprocessor\nIf you write down the behavior that should happen at every quadrature point you can use the postprocessor loop to get it to do what you want\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24995#discussioncomment-6501154",
                  "updatedAt": "2023-07-20T15:51:48Z",
                  "publishedAt": "2023-07-20T15:51:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "has signature for Assembly.cacheResidual/Jacobian() changed recently?",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "I recently updated my local copy of the framework and broke my app. I have a NodalKernel that has calls to _assembly.cacheResidual/Jacobian() to add some values to specific rows in the matrix. There were previously _vector_tags and _matrix_tags member variables that I blindly passed to the functions as the last argument.\nAfter updating my framework and re-compiling my app, I get errors like: error: 'std::set<unsigned int> TaggingInterface::_vector_tags' is private within this context. How can I fix?",
          "url": "https://github.com/idaholab/moose/discussions/24987",
          "updatedAt": "2023-07-19T12:19:47Z",
          "publishedAt": "2023-07-18T19:51:18Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "It has changed recently. I would need to see your code snippets to know the exact right sub, but here is what things look like now in NodalKernel\nvoid\nNodalKernel::computeResidual()\n{\n  if (_var.isNodalDefined())\n  {\n    const dof_id_type & dof_idx = _var.nodalDofIndex();\n    _qp = 0;\n    const Real res = computeQpResidual();\n    addResiduals(_assembly,\n                 std::array<Real, 1>{{res}},\n                 std::array<dof_id_type, 1>{{dof_idx}},\n                 _var.scalingFactor());\n\n    if (_has_save_in)\n      for (const auto & var : _save_in)\n        var->sys().solution().add(var->nodalDofIndex(), res);\n  }\n}\n\nvoid\nNodalKernel::computeJacobian()\n{\n  if (_var.isNodalDefined())\n  {\n    _qp = 0;\n    const Real cached_val = computeQpJacobian();\n    const dof_id_type cached_row = _var.nodalDofIndex();\n\n    addJacobianElement(_assembly, cached_val, cached_row, cached_row, _var.scalingFactor());\n\n    if (_has_diag_save_in)\n    {\n      Threads::spin_mutex::scoped_lock lock(Threads::spin_mtx);\n      for (const auto & var : _diag_save_in)\n        var->sys().solution().add(var->nodalDofIndex(), cached_val);\n    }\n  }\n}\n\nvoid\nNodalKernel::computeOffDiagJacobian(const unsigned int jvar_num)\n{\n  const auto & jvar = getVariable(jvar_num);\n\n  if (_var.isNodalDefined())\n  {\n    if (jvar.number() == _var.number())\n      computeJacobian();\n    else\n    {\n      _qp = 0;\n      const Real cached_val = computeQpOffDiagJacobian(jvar.number());\n      const dof_id_type cached_row = _var.nodalDofIndex();\n\n      // Note: this only works for equal order Lagrange variables...\n      const dof_id_type cached_col = _current_node->dof_number(_sys.number(), jvar.number(), 0);\n\n      addJacobianElement(_assembly, cached_val, cached_row, cached_col, _var.scalingFactor());\n    }\n  }\n}",
                  "url": "https://github.com/idaholab/moose/discussions/24987#discussioncomment-6482115",
                  "updatedAt": "2023-07-18T20:01:33Z",
                  "publishedAt": "2023-07-18T20:01:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "@lindsayad ok i lied, I'm using a NodalScalarKernel. Not sure if that matters.\nWhere are addResiduals and addJacobianElement defined? I assume these have the same effect as what cacheResidual/Jacobian did previously?\nThe Jacobian calls look similar in that you still pass the row, column, and value. The scaling factor is not applied here but is instead passed as well as the assembly reference. Seens straightforward.\nHow about the Residual calls? Previously I had _assembly.cacheResidual(_var.dofIndices()[0], computeQpResidual()*_var.scalingFactor(), _vector_tags). What's this std::array business?",
                          "url": "https://github.com/idaholab/moose/discussions/24987#discussioncomment-6482290",
                          "updatedAt": "2023-07-18T20:30:38Z",
                          "publishedAt": "2023-07-18T20:30:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "It allows us to use the same API for both a single residual and a dynamically sized vector of residuals",
                          "url": "https://github.com/idaholab/moose/discussions/24987#discussioncomment-6482377",
                          "updatedAt": "2023-07-18T20:43:52Z",
                          "publishedAt": "2023-07-18T20:43:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Where are addResiduals and addJacobianElement defined?\n\nYou can see all the available APIs in TaggingInterface",
                          "url": "https://github.com/idaholab/moose/discussions/24987#discussioncomment-6482385",
                          "updatedAt": "2023-07-18T20:44:36Z",
                          "publishedAt": "2023-07-18T20:44:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "What's the _qp = 0 doing in there? Doesn't seem to be used.",
                          "url": "https://github.com/idaholab/moose/discussions/24987#discussioncomment-6482590",
                          "updatedAt": "2023-07-18T21:13:43Z",
                          "publishedAt": "2023-07-18T21:13:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "It's assumed that's is used in the derived class",
                          "url": "https://github.com/idaholab/moose/discussions/24987#discussioncomment-6482758",
                          "updatedAt": "2023-07-18T21:50:07Z",
                          "publishedAt": "2023-07-18T21:50:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "OK, I think I got this figured out. Thanks for your help @lindsayad . I think the change is for the better since I don't have to bother with tags in my kernel and don't need to remember to apply the scaling factor.",
                          "url": "https://github.com/idaholab/moose/discussions/24987#discussioncomment-6488237",
                          "updatedAt": "2023-07-19T12:19:30Z",
                          "publishedAt": "2023-07-19T12:19:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}