{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMC0xMS0yNFQxNTo1NDo1MC0wNjowMM2SJg=="
    },
    "edges": [
      {
        "node": {
          "title": "side post processor",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello guys,\nI want to have the data of some variable on the line y=y0 or x=x0.\nCOuld anyone tell me how to set?",
          "url": "https://github.com/idaholab/moose/discussions/16328",
          "updatedAt": "2020-11-30T15:45:55Z",
          "publishedAt": "2020-11-30T07:36:54Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "LiuPengPeter"
                  },
                  "bodyText": "That's linevaluesampler. I found it.",
                  "url": "https://github.com/idaholab/moose/discussions/16328#discussioncomment-142598",
                  "updatedAt": "2020-11-30T14:13:16Z",
                  "publishedAt": "2020-11-30T14:13:16Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "args",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello guys,\nThe args is related with computeQpJacobian and  computeQpOffDiagJacobian. Sometimes I could make sure which variable is needed. Could I write all of variables except the \"variable\" ?",
          "url": "https://github.com/idaholab/moose/discussions/16321",
          "updatedAt": "2022-07-30T23:08:12Z",
          "publishedAt": "2020-11-29T11:05:38Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "I don't understand your question. Can you add some more context/information please?",
                  "url": "https://github.com/idaholab/moose/discussions/16321#discussioncomment-141988",
                  "updatedAt": "2022-07-30T23:08:12Z",
                  "publishedAt": "2020-11-29T19:57:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "For example, my kernel is F*c.\nIf F is the function of eta1, c1, eta2 and c2, then the args= 'eta1 c1 eta2 c2'.\nIf F is the function of c1 and c2, then the args= 'c1 c2'.\nSometimes I forget to change, so I wonder if I could write all of them at first even if some won't be used.",
                          "url": "https://github.com/idaholab/moose/discussions/16321#discussioncomment-142073",
                          "updatedAt": "2022-07-30T23:08:12Z",
                          "publishedAt": "2020-11-29T23:11:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "That's not recommended as it will result in a combinatorial explosion of material property derivatives being requested. Properly written objects that require an args parameter should warn you if you are missing important variables in that list.",
                  "url": "https://github.com/idaholab/moose/discussions/16321#discussioncomment-142009",
                  "updatedAt": "2022-07-30T23:08:31Z",
                  "publishedAt": "2020-11-29T20:21:49Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thank you.\nI understand now. With all of variables added, it won't lead wrong result but the workload of simulation will be very large.",
                          "url": "https://github.com/idaholab/moose/discussions/16321#discussioncomment-142075",
                          "updatedAt": "2022-07-30T23:08:32Z",
                          "publishedAt": "2020-11-29T23:17:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Boundary term in ADDiffusion tutorial",
          "author": {
            "login": "vishankkumar"
          },
          "bodyText": "I was going through again the tutorial of ADDiffusion with steady state solution and I had a question regarding the boundary term. It was also discussed in the MOOSE workshop2020. When you write down the weak form of laplacian, you get a symmetric matrix term of _grad_u[_qp] * _grad_test[_qp] and a Newmann boundary term of _grad_u[_qp] * test[qp] * n. However, in the input file you take the Dirichlet BC term, so where is this term get adjusted or am I missing something?\nThanks for your response.",
          "url": "https://github.com/idaholab/moose/discussions/16322",
          "updatedAt": "2022-09-05T09:18:31Z",
          "publishedAt": "2020-11-29T12:05:10Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Are you referring to Eq. 5 from this page? The bold statement below \"This is the weak form of the Laplace equation\" is wrong.\nEq. 5 is what you get after applying divergence theorem on Eq. 2, but it is not the weak form of the strong form.\nI happen to have a simple write-up at hand:\n\nAs you can see, Dirichlet BCs are involved in the construction of proper test and trial function spaces. They are constraints on certain DoFs a priori, and they are not weakly satisfied. Therefore, you don't see Dirichlet BCs in the weak form.",
                  "url": "https://github.com/idaholab/moose/discussions/16322#discussioncomment-141833",
                  "updatedAt": "2022-09-05T09:18:39Z",
                  "publishedAt": "2020-11-29T13:49:16Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "The bold statement probably need some rephrasing.\nThat being said, I still think the tutorial on the website is phenomenal -- it has done a remarkable job at explaining the workflow of MOOSE development. It is always difficult to find a balance between \"writing a short and concise tutorial\" and \"explaining the nitty-gritty details of everything\".",
                          "url": "https://github.com/idaholab/moose/discussions/16322#discussioncomment-141840",
                          "updatedAt": "2022-09-05T09:18:42Z",
                          "publishedAt": "2020-11-29T13:57:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vishankkumar"
                          },
                          "bodyText": "Thank you @hugary1995 for the quick explanation. So Dirichlet BC has been used for constructing the test and the trial functions, which we define in the input file. However, my concern was more on the boundary term, $\\int_{\\Gamma_n}whdA$. This $h$ is the Newmann boundary condition, if I am not wrong so does it has to be defined in the BC or as an additional term in the kernel or it is within preComputeQPResidual?\nAnd I understand, its always difficult to put things crisp and crystal clear for everyone but the documentation of moose has done a good job.",
                          "url": "https://github.com/idaholab/moose/discussions/16322#discussioncomment-141907",
                          "updatedAt": "2022-09-05T09:18:45Z",
                          "publishedAt": "2020-11-29T16:06:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "If h is nonzero, then yes, it has to be defined using a BC object, e.g. ADNeumannBC, ADFunctionNeumannBC, etc..\nIf h is zero then you don't need to do anything. It is clear from the weak form that if you drop the boundary term the Neumann BC will be weakly zero.",
                          "url": "https://github.com/idaholab/moose/discussions/16322#discussioncomment-141982",
                          "updatedAt": "2022-09-05T09:18:45Z",
                          "publishedAt": "2020-11-29T19:55:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Material properties FEM",
          "author": {
            "login": "JeffPeter"
          },
          "bodyText": "Hi,\nI'm a new user of MOOSE and using FEM in general. Can you explain me the difference between nodes and elements? If I understood the documentation correctly, the equations are solved at the nodes and interpolated in the elements?\nAre the material properties also assigned at the nodes?\nThanks so much for the nice documentation and help\nJeff",
          "url": "https://github.com/idaholab/moose/discussions/16262",
          "updatedAt": "2022-06-23T11:56:18Z",
          "publishedAt": "2020-11-20T10:38:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "crswong888"
                  },
                  "bodyText": "Correct, equations are solved at the nodes and numerically integrated/polynomial interpolated through the elements (between nodes). Material properties are assigned to the elements and are coefficients in the element integrals. It is possible to also define material properties that vary throughout an element space, but still material properties are defined on elements, not nodes.\nConsider checking out this page: https://mooseframework.inl.gov/help/faq/what_is_fem.html",
                  "url": "https://github.com/idaholab/moose/discussions/16262#discussioncomment-135052",
                  "updatedAt": "2022-06-23T11:56:18Z",
                  "publishedAt": "2020-11-20T20:17:51Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "I think it is misleading to say that \"equations are solved at the nodes\". We happen to use nodal basis functions, which have their DOFs at the nodes. But we are solving for a projection of the true solution onto a lower dimensional function space with piecewise continuous functions. There also isn't really any \"interpolation\", instead the solution in this lower dimensional function space is defined at every point. We're just evaluating it.",
                          "url": "https://github.com/idaholab/moose/discussions/16262#discussioncomment-135108",
                          "updatedAt": "2022-07-11T19:29:10Z",
                          "publishedAt": "2020-11-20T21:12:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "JeffPeter"
                          },
                          "bodyText": "Hi,\nThanks for your messages and for the answers! I see that the MOOSE community is really active.\nJeff",
                          "url": "https://github.com/idaholab/moose/discussions/16262#discussioncomment-135356",
                          "updatedAt": "2022-07-11T19:29:10Z",
                          "publishedAt": "2020-11-21T12:44:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "crswong888"
                          },
                          "bodyText": "@dschwen The final system of equations solves nodal values of whatever the primary dependent variable is, no? I don't see how it is misleading to say we solve equations at the nodes. And it surely is an interpolation, because cannot know for sure what the values at every point is until we enforce the boundary-value problem and solve the system of equations - at the nodes...",
                          "url": "https://github.com/idaholab/moose/discussions/16262#discussioncomment-138841",
                          "updatedAt": "2022-07-11T21:07:47Z",
                          "publishedAt": "2020-11-25T18:15:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Hey Chris, you are correct saying \"we solve equations at nodes and then interpolate\" for Lagrange basis, because Lagrange polynomials satisfy kronecker delta nodewise, so dofs are defined on nodes and the solution happens to have the \"interpolation\" property.\nBut as Daniel pointed out, the world isn't just about Lagrange polynomials (even though it is the most commonly used one in FEM). There are other polynomials that do not satisfy those properties. Monomials and Splines are two common examples.",
                          "url": "https://github.com/idaholab/moose/discussions/16262#discussioncomment-139511",
                          "updatedAt": "2022-08-05T13:54:55Z",
                          "publishedAt": "2020-11-26T13:23:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "crswong888"
                          },
                          "bodyText": "Okay, that's fair. You are right, my perspective of the FEM is quite limited to polynomials that satisfy nodal DOFs - different variations of Hermites at worst.",
                          "url": "https://github.com/idaholab/moose/discussions/16262#discussioncomment-140258",
                          "updatedAt": "2022-08-05T13:54:55Z",
                          "publishedAt": "2020-11-27T21:41:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Controls with the Contact Action",
          "author": {
            "login": "ABallisat"
          },
          "bodyText": "Hello all,\nI am using the Contact Action to define a mechanical contact and after a period of time I want to turn this off. I am trying this with the Controls system but it appears that the Action cannot be enabled/disabled, giving the following error:\n*** ERROR ***\nThe desired parameter 'Contact::leftright/enable' was not located for the 'u_threshold' object, it either does not exist or has not been declared as controllable.\n\nI understand that the action sets up various other objects so is there a way to either turn all these off in one command (based on this is seems unlikely https://groups.google.com/g/moose-users/c/jbW2TlY96pE/m/GC2K-GwnCwAJ) or get a list of everything it sets up so I can go through and turn them off? Or any other way of doing it?\nIf it helps this is my contact block definition:\n[Contact]\n  [./leftright]\n    secondary = 'main_right'\n    primary = 'right_left'\n    model = frictionless\n    penalty = 1e+6\n    normal_smoothing_distance = 0.1\n    order = SECOND\n  [../]\n[]\n\nThanks,\nAlex",
          "url": "https://github.com/idaholab/moose/discussions/16293",
          "updatedAt": "2022-08-16T22:42:32Z",
          "publishedAt": "2020-11-24T18:52:01Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Controls only work with parameters of MooseObjects. So, you are correct that you will not be able control a parameter of an Action. A possible solution would be to add to the \"control_tags\" parameter of every object that the Contact action creates. This would require modifications to the contact module, but shouldn't be very difficult.\nhttps://github.com/idaholab/moose/blob/next/test/tests/controls/tag_based_naming_access/object_param.i",
                  "url": "https://github.com/idaholab/moose/discussions/16293#discussioncomment-137887",
                  "updatedAt": "2022-08-16T22:42:35Z",
                  "publishedAt": "2020-11-24T19:14:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ABallisat"
                          },
                          "bodyText": "Thanks for this. In the end as I only need to switch it off after a certain time and not turn it back on decided to use the restart system to just spin up a second model with it contact off but using the output of the first sim (with contact), for me it was a simpler solution given my time constraints.",
                          "url": "https://github.com/idaholab/moose/discussions/16293#discussioncomment-140168",
                          "updatedAt": "2022-08-16T22:42:35Z",
                          "publishedAt": "2020-11-27T17:09:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "KKS mass condition for multi phase",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello everyone,\nI want to define the KKS mass condition for multi phase, like this:\nc = h1x1 + h2x2 + ...\nwhere c is the global concentration and x is the phase composition.\nIs there kernel for this?",
          "url": "https://github.com/idaholab/moose/discussions/16311",
          "updatedAt": "2022-06-17T08:03:57Z",
          "publishedAt": "2020-11-26T03:27:45Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "LiuPengPeter"
                  },
                  "bodyText": "That's KKSMultiPhaseConcentration.\nI forgot it!",
                  "url": "https://github.com/idaholab/moose/discussions/16311#discussioncomment-139191",
                  "updatedAt": "2022-06-17T08:03:56Z",
                  "publishedAt": "2020-11-26T06:32:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PETSC_OPTIONS",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello everyone,\nI meet the problem of converging.\nIn the Executioner, there maybe need PETSC options but I have no knowledge about this before.\nFor examlpe:\npetsc_options_iname = '-pc_type -sub_pc_type   -sub_pc_factor_shift_type'\npetsc_options_value = 'asm       ilu            nonzero'\nIs there related material provided for beginners?\nThank you a lot!",
          "url": "https://github.com/idaholab/moose/discussions/16308",
          "updatedAt": "2022-11-16T04:26:56Z",
          "publishedAt": "2020-11-26T02:09:56Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "fdkong"
                  },
                  "bodyText": "PETSc manual is a great doc you could look at https://www.mcs.anl.gov/petsc/petsc-current/docs/manual.pdf\nFor these options, you could find them on petsc website.  For example,\n-pc_type https://www.mcs.anl.gov/petsc/petsc-current/docs/manualpages/PC/PCSetType.html#PCSetType\nasm https://www.mcs.anl.gov/petsc/petsc-current/docs/manualpages/PC/PCASM.html#PCASM\nilu https://www.mcs.anl.gov/petsc/petsc-current/docs/manualpages/PC/PCILU.html#PCILU",
                  "url": "https://github.com/idaholab/moose/discussions/16308#discussioncomment-139133",
                  "updatedAt": "2022-11-16T04:26:58Z",
                  "publishedAt": "2020-11-26T02:22:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "YaqiWang"
                  },
                  "bodyText": "Some basic explanations on MOOSE executioners can be found here: https://mooseframework.inl.gov/source/executioners/Steady.html. It should give enough information to users on how MOOSE interact with PETSc.",
                  "url": "https://github.com/idaholab/moose/discussions/16308#discussioncomment-139134",
                  "updatedAt": "2022-11-16T04:27:37Z",
                  "publishedAt": "2020-11-26T02:25:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thank you guys. It seems so difficult and needs much time to understand the setting of executioners.\nIs it possible I copy from other guys, like this:\n[Executioner]\n  type = Transient\n  scheme = bdf2\n  solve_type = 'PJFNK'\n  #########PETSC_OPTIONS###################very_important###################\n  petsc_options_iname = '-pc_type -sub_pc_type   -sub_pc_factor_shift_type'\n  petsc_options_value = 'asm       ilu            nonzero'\n  #solve_type =Newton\n  l_max_its = 50\n  l_tol = 1e-4\n  nl_max_its = 20\n  nl_rel_tol = 1e-10\n  nl_abs_tol = 1e-10\n  end_time = 2.00E+11\n[./TimeStepper]\n    ## Turn on time stepping\n    type = IterationAdaptiveDT\n    dt = 1.00E+04 #06\n    cutback_factor = 0.8\n    growth_factor = 2.0 #1.5\n    optimal_iterations = 7\n [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/16308#discussioncomment-139138",
                          "updatedAt": "2022-12-08T22:54:52Z",
                          "publishedAt": "2020-11-26T02:37:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "It is especially when you are solving a similar problem as the one you copied from but I still suggest you to understand what each parameter is doing. The settings for one problem may not be the best for another. Some of these parameters are pretty strait-forward to users like type, end_time, dt.  Some are intermediate like l_max_its, l_tol, nl_max_its, nl_rel_tol, nl_abs_tol, optimal_iterations, cutback_factor, growth_factor. Some are difficult like scheme, solve_type, petsc_options_iname, petsc_options_value. It is worthwhile to spend some time on the parameter documentations.",
                          "url": "https://github.com/idaholab/moose/discussions/16308#discussioncomment-139140",
                          "updatedAt": "2022-12-08T22:54:52Z",
                          "publishedAt": "2020-11-26T02:55:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thank  you a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/16308#discussioncomment-139142",
                          "updatedAt": "2023-03-07T09:22:04Z",
                          "publishedAt": "2020-11-26T02:58:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "moosedocs.py build error: \"TOKENIZE ERROR: dictionary keys changed during iteration\"",
          "author": {
            "login": "gridley"
          },
          "bodyText": "Hi all,\nI've not tried rendering MOOSE docs on my machine before, and was hoping to do so this morning. Unfortunately, when I run the moosedocs build, I get hit with an error like this on every .md file it touches:\nMooseDocs.base.readers (Process-6):\nTOKENIZE ERROR: dictionary keys changed during iteration\n/home/gavin/Code/moose/framework/doc/content/source/actions/SetupPredictorAction.md:26\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n26\u2502                                                                                                \u2502\n27\u2502                                                                                                \u2502\n28\u2502!syntax parameters /Executioner/Predictor/SetupPredictorAction                                  \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nTraceback (most recent call last):\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/base/lexers.py\", line 227, in tokenize\n    obj = self.buildToken(parent, pattern, info, page)\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/base/lexers.py\", line 304, in buildToken\n    obj = super(RecursiveLexer, self).buildToken(parent, pattern, info, page)\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/base/lexers.py\", line 254, in buildToken\n    return pattern.function(parent, info, page)\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/base/components.py\", line 126, in __call__\n    token = self.createToken(parent, info, page)\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/extensions/command.py\", line 118, in createToken\n    token = obj.createToken(parent, info, page)\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/extensions/appsyntax.py\", line 288, in createToken\n    return self.createTokenFromSyntax(parent, info, page, obj)\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/extensions/appsyntax.py\", line 353, in createTokenFromSyntax\n    self.createHeading(parent, page)\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/extensions/appsyntax.py\", line 307, in createHeading\n    h = core.Heading(parent, level=int(settings['heading-level']), id_=settings['id'])\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/tree/tokens.py\", line 37, in tokenGenerator\n    return Token(name, parent, **inputs)\n  File \"/home/gavin/Code/moose/modules/navier_stokes/doc/../../../python/MooseDocs/tree/tokens.py\", line 51, in __init__\n    for key in kwargs:\nRuntimeError: dictionary keys changed during iteration\n\n\nI've attached the list of python modules I've got installed and their versions, and am running python 3.8.6.\npymodules.txt",
          "url": "https://github.com/idaholab/moose/discussions/16301",
          "updatedAt": "2022-09-01T18:44:38Z",
          "publishedAt": "2020-11-25T15:18:00Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "This is a real bug, python 3.8 must of added better checking for this.\nkwargs[key[:-1]] = kwargs.pop(key)",
                  "url": "https://github.com/idaholab/moose/discussions/16301#discussioncomment-138705",
                  "updatedAt": "2022-09-01T18:44:47Z",
                  "publishedAt": "2020-11-25T15:41:57Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "See #16306",
                          "url": "https://github.com/idaholab/moose/discussions/16301#discussioncomment-138742",
                          "updatedAt": "2022-09-01T18:44:53Z",
                          "publishedAt": "2020-11-25T16:21:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gridley"
                          },
                          "bodyText": "Nice, thanks for fixing this @aeslaughter!",
                          "url": "https://github.com/idaholab/moose/discussions/16301#discussioncomment-138851",
                          "updatedAt": "2022-09-01T18:44:53Z",
                          "publishedAt": "2020-11-25T18:33:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error with latest moose",
          "author": {
            "login": "srinath-chakravarthy"
          },
          "bodyText": "All,\nI just updated moose to the latest master branch. I also updated libmesh, but i get the following error. I also tried with the next branch, but i still get the same error:\nIn file included from /home/srinath/github/moose_latest/framework/build/header_symlinks/AugmentSparsityOnInterface.h:14,\n                 from /home/srinath/github/moose_latest/framework/src/relationshipmanagers/AugmentSparsityOnInterface.C:11,\n                 from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:2:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/RelationshipManager.h: In member function \u2018void RelationshipManager::init(const libMesh::MeshBase&)\u2019:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/RelationshipManager.h:48:7: error: \u2018set_mesh\u2019 was not declared in this scope\n   48 |       set_mesh(&mesh);\n      |       ^~~~~~~~\nIn file included from /home/srinath/github/moose_latest/framework/src/relationshipmanagers/AugmentSparsityOnInterface.C:11,\n                 from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:2:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/AugmentSparsityOnInterface.h: At global scope:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/AugmentSparsityOnInterface.h:53:44: error: \u2018virtual std::unique_ptr<libMesh::GhostingFunctor> AugmentSparsityOnInterface::clone() const\u2019 marked \u2018override\u2019, but does not override\n   53 |   virtual std::unique_ptr<GhostingFunctor> clone() const override\n      |                                            ^~~~~\nIn file included from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:2:\n/home/srinath/github/moose_latest/framework/src/relationshipmanagers/AugmentSparsityOnInterface.C: In member function \u2018virtual void AugmentSparsityOnInterface::operator()(const libMesh::MeshBase::const_element_iterator&, const libMesh::MeshBase::const_element_iterator&, libMesh::processor_id_type, libMesh::GhostingFunctor::map_type&)\u2019:\n/home/srinath/github/moose_latest/framework/src/relationshipmanagers/AugmentSparsityOnInterface.C:134:36: error: \u2018_mesh\u2019 was not declared in this scope\n  134 |     for (const Elem * const elem : _mesh->active_element_ptr_range())\n      |                                    ^~~~~\n/home/srinath/github/moose_latest/framework/src/relationshipmanagers/AugmentSparsityOnInterface.C:211:37: error: \u2018_mesh\u2019 was not declared in this scope\n  211 |         const Elem * coupled_elem = _mesh->elem_ptr(coupled_elem_id);\n      |                                     ^~~~~\nIn file included from /home/srinath/github/moose_latest/framework/build/header_symlinks/ElementPointNeighborLayers.h:12,\n                 from /home/srinath/github/moose_latest/framework/src/relationshipmanagers/ElementPointNeighborLayers.C:10,\n                 from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:3:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/FunctorRelationshipManager.h: At global scope:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/FunctorRelationshipManager.h:54:16: error: \u2018virtual void FunctorRelationshipManager::set_mesh(const libMesh::MeshBase*)\u2019 marked \u2018override\u2019, but does not override\n   54 |   virtual void set_mesh(const MeshBase * mesh) override\n      |                ^~~~~~~~\n/home/srinath/github/moose_latest/framework/build/header_symlinks/FunctorRelationshipManager.h: In member function \u2018virtual void FunctorRelationshipManager::set_mesh(const libMesh::MeshBase*)\u2019:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/FunctorRelationshipManager.h:58:17: error: \u2018class libMesh::GhostingFunctor\u2019 has no member named \u2018set_mesh\u2019\n   58 |       _functor->set_mesh(mesh);\n      |                 ^~~~~~~~\n/home/srinath/github/moose_latest/framework/build/header_symlinks/FunctorRelationshipManager.h:59:7: error: \u2018_mesh\u2019 was not declared in this scope; did you mean \u2018mesh\u2019?\n   59 |       _mesh = mesh;\n      |       ^~~~~\n      |       mesh\nIn file included from /home/srinath/github/moose_latest/framework/src/relationshipmanagers/ElementPointNeighborLayers.C:10,\n                 from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:3:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/ElementPointNeighborLayers.h: At global scope:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/ElementPointNeighborLayers.h:43:44: error: \u2018virtual std::unique_ptr<libMesh::GhostingFunctor> ElementPointNeighborLayers::clone() const\u2019 marked \u2018override\u2019, but does not override\n   43 |   virtual std::unique_ptr<GhostingFunctor> clone() const override;\n      |                                            ^~~~~\nIn file included from /home/srinath/github/moose_latest/framework/src/relationshipmanagers/ElementSideNeighborLayers.C:10,\n                 from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:4:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/ElementSideNeighborLayers.h:42:44: error: \u2018virtual std::unique_ptr<libMesh::GhostingFunctor> ElementSideNeighborLayers::clone() const\u2019 marked \u2018override\u2019, but does not override\n   42 |   virtual std::unique_ptr<GhostingFunctor> clone() const override;\n      |                                            ^~~~~\nIn file included from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:5:\n/home/srinath/github/moose_latest/framework/src/relationshipmanagers/FunctorRelationshipManager.C: In copy constructor \u2018FunctorRelationshipManager::FunctorRelationshipManager(const FunctorRelationshipManager&)\u2019:\n/home/srinath/github/moose_latest/framework/src/relationshipmanagers/FunctorRelationshipManager.C:28:75: error: \u2018class libMesh::GhostingFunctor\u2019 has no member named \u2018clone\u2019\n   28 |   : RelationshipManager(other), _functor(other._functor ? other._functor->clone() : nullptr)\n      |                                                                           ^~~~~\nIn file included from /home/srinath/github/moose_latest/framework/src/relationshipmanagers/MooseGhostPointNeighbors.C:10,\n                 from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:6:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/MooseGhostPointNeighbors.h: At global scope:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/MooseGhostPointNeighbors.h:41:44: error: \u2018virtual std::unique_ptr<libMesh::GhostingFunctor> MooseGhostPointNeighbors::clone() const\u2019 marked \u2018override\u2019, but does not override\n   41 |   virtual std::unique_ptr<GhostingFunctor> clone() const override;\n      |                                            ^~~~~\nIn file included from /home/srinath/github/moose_latest/framework/src/relationshipmanagers/ProxyRelationshipManager.C:10,\n                 from /home/srinath/github/moose_latest/framework/build/unity_src/relationshipmanagers_Unity.C:7:\n/home/srinath/github/moose_latest/framework/build/header_symlinks/ProxyRelationshipManager.h:53:44: error: \u2018virtual std::unique_ptr<libMesh::GhostingFunctor> ProxyRelationshipManager::clone() const\u2019 marked \u2018override\u2019, but does not override\n   53 |   virtual std::unique_ptr<GhostingFunctor> clone() const override\n      |                                            ^~~~~\n\nAny help is appreciated.\nCheers\nSrinath",
          "url": "https://github.com/idaholab/moose/discussions/16273",
          "updatedAt": "2022-06-24T00:09:35Z",
          "publishedAt": "2020-11-21T15:11:20Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "srinath-chakravarthy"
                  },
                  "bodyText": "The above problem was solved by using the \"next\" branch. The master branch still fails, even after git clean -xfd",
                  "url": "https://github.com/idaholab/moose/discussions/16273#discussioncomment-135776",
                  "updatedAt": "2022-06-24T00:09:29Z",
                  "publishedAt": "2020-11-22T16:10:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "What libMesh version are you using?",
                          "url": "https://github.com/idaholab/moose/discussions/16273#discussioncomment-135778",
                          "updatedAt": "2022-06-24T00:09:29Z",
                          "publishedAt": "2020-11-22T16:12:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "srinath-chakravarthy"
                          },
                          "bodyText": "Not sure what libmesh version it is. I do not use conda, so all of this is manually installed. In either (master/next) branch i did git submodule update --init --recursive, followed by ./scripts/update_and_rebuild_libmesh. In my app directory, i did make clobberall followed by make -j 24.\nCheers\nSrinath",
                          "url": "https://github.com/idaholab/moose/discussions/16273#discussioncomment-135820",
                          "updatedAt": "2022-06-24T00:09:29Z",
                          "publishedAt": "2020-11-22T17:29:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You can get the latest libmesh commit with git log -n 1 [branch_name] ran in the libmesh directory",
                          "url": "https://github.com/idaholab/moose/discussions/16273#discussioncomment-135825",
                          "updatedAt": "2022-06-24T00:09:29Z",
                          "publishedAt": "2020-11-22T18:06:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "srinath-chakravarthy"
                          },
                          "bodyText": "Sorry for the delayed response. These are the libmesh versions on each branch\nMaster branch : 9006cd06b6a4d\nNext branch : 4f3fa5a6a",
                          "url": "https://github.com/idaholab/moose/discussions/16273#discussioncomment-138706",
                          "updatedAt": "2022-08-29T09:42:13Z",
                          "publishedAt": "2020-11-25T15:42:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error for FACTOR_OUTMEMORY by recovery",
          "author": {
            "login": "caoductoan379"
          },
          "bodyText": "Dear All\nWhen i did a syntax as   mpiexec -n 8 ./combined-opt -i toan1PFF/Cyclic_2D_S1.i --recover to rerun my program. The error i received as below. Do you have any idea for help to fix it ?\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC_FAILED due to FACTOR_OUTMEMORY \n\n\n*** ERROR ***\nIn computing the eigenvalues and eigenvectors for the symmetric rank-2 tensor (-nan,-nan,-nan,nan,nan,nan,-nan,-nan,-nan), the PETSC LAPACK syev routine returned error code 2\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 2\n\n\n*** ERROR ***\nIn computing the eigenvalues and eigenvectors for the symmetric rank-2 tensor (-nan,-nan,-nan,nan,nan,nan,-nan,-nan,-nan), the PETSC LAPACK syev routine returned error code 2\n\n\n\n*** ERROR ***\nIn computing the eigenvalues and eigenvectors for the symmetric rank-2 tensor (-nan,-nan,-nan,nan,nan,nan,-nan,-nan,-nan), the PETSC LAPACK syev routine returned error code 2\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n\n\n*** ERROR ***\nIn computing the eigenvalues and eigenvectors for the symmetric rank-2 tensor (-nan,-nan,-nan,nan,nan,nan,-nan,-nan,-nan), the PETSC LAPACK syev routine returned error code 2\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 4\n\n\n*** ERROR ***\nIn computing the eigenvalues and eigenvectors for the symmetric rank-2 tensor (-nan,-nan,-nan,nan,nan,nan,-nan,-nan,-nan), the PETSC LAPACK syev routine returned error code 2\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 3\n\n\n*** ERROR ***\nIn computing the eigenvalues and eigenvectors for the symmetric rank-2 tensor (-nan,-nan,-nan,nan,nan,nan,-nan,-nan,-nan), the PETSC LAPACK syev routine returned error code 2\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 5\n\n\n*** ERROR ***\nIn computing the eigenvalues and eigenvectors for the symmetric rank-2 tensor (-nan,-nan,-nan,nan,nan,nan,-nan,-nan,-nan), the PETSC LAPACK syev routine returned error code 2\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 7\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 6",
          "url": "https://github.com/idaholab/moose/discussions/16288",
          "updatedAt": "2022-07-20T21:22:38Z",
          "publishedAt": "2020-11-24T15:08:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "The first error suggests you are running out of memory.  This suggests you should run on a bigger machine, or choose another linear solver.  Check your petsc_options - are you using an \"LU\" preconditioner?  If so, quickly try something like \"ILU\".",
                  "url": "https://github.com/idaholab/moose/discussions/16288#discussioncomment-138027",
                  "updatedAt": "2022-07-20T21:23:13Z",
                  "publishedAt": "2020-11-24T21:37:25Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "caoductoan379"
                          },
                          "bodyText": "Thank you very much for your feedback.\nKind regards,\nToan",
                          "url": "https://github.com/idaholab/moose/discussions/16288#discussioncomment-138036",
                          "updatedAt": "2022-07-20T21:23:14Z",
                          "publishedAt": "2020-11-24T21:54:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}