{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wMy0yMlQxNzowNDoyMi0wNTowMM4AP-Hv"
    },
    "edges": [
      {
        "node": {
          "title": "coupled_variables problem disappeared and then reurned...",
          "author": {
            "login": "MScKarl"
          },
          "bodyText": "I started writing a Multiphase system using both \u201cargs\u201d and \u201ccouple_ variables\u201d for my system. On the first try I used \u201cargs\u201d and received the following error:\n*** ERROR ***\nf_eta: Coupled variable 'fa' was not found.\nBelieving I should use \u201ccouple_ variables\u201d instead I switched, resulting in the following error:\n*** ERROR ***\nInvalid function\n(eta1^2-1)^2\nin ParsedMaterialHelper.\nSyntax error: Unknown identifier\nYesterday I was in communication with this forum and got some great advice, and after rebooting the system it worked, but now the problem is back, and restarting again doesn\u2019t help. Could use some advice/tips on how to proceed.\nThe code for my materials section follows below:\n[Materials]\n\n  [./kappa]\n    type = GenericConstantMaterial\n    prop_names  = 'kappa11 kappa12 kappa21 kappa22'\n    prop_values = '0.01    0.01    0.01    0.01   '\n  [../]\n\n  [./L]\n    type = GenericConstantMaterial\n    prop_names = 'L'\n    prop_values = '1.0'\n  [../]\n\n  [./P0]\n    type = GenericConstantMaterial\n    prop_names = 'P0'\n    prop_values = '144000000'\n  [../]\n\n  [./s]\n    type = GenericConstantMaterial\n    prop_names = 's'\n    prop_values = '0.6' # variera\n  [../]\n\n\n  [./fa]\n    type = DerivativeParsedMaterial\n    property_name = fa\n    coupled_variables = 'eta1'\n    function = '(eta1^2-1)^2'\n    enable_jit = true\n  [../]\n\n  [./fb]\n    type = DerivativeParsedMaterial\n    f_name = fb\n    coupled_variables = 'eta2'\n    function = '(eta2^2-1)^2'\n  [../]\n\n  [./fc]\n    type = DerivativeParsedMaterial\n    f_name = fc\n    coupled_variables = 'eta1'\n    constant_names = 's'\n    constant_expressions = '0.6'\n    function = 's/4*(eta1*(eta1+2)*(eta1^2+2*eta1-6)-7)'\n  [../]\n\n   [./switching1]\n    type = SwitchingFunctionMaterial\n    function_name = h1\n    eta = eta1\n    h_order = HIGH\n  [../]\n\n  [./switching2]\n    type = SwitchingFunctionMaterial\n    function_name = h2\n    eta = eta2\n    h_order = HIGH\n  [../]\n\n\n  [./barrier]\n    type = MultiBarrierFunctionMaterial\n    etas = 'eta1 eta2'\n  [../]\n\n  [./f_eta]\n    type = DerivativeParsedMaterial\n    f_name = f_eta # Name of the function\n    coupled_variables = 'fa fb fc' \n    constant_names = 'P0'\n    constant_expressions = '144*10^6'\n    function = 'P0*(fa+fb*fc)'\n  [../]\n\n[]",
          "url": "https://github.com/idaholab/moose/discussions/23817",
          "updatedAt": "2023-03-23T16:01:31Z",
          "publishedAt": "2023-03-22T17:01:50Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "You can ONLY use coupled_variables if your MOOSE is up to date.\nIf not, you MUST use args.\nBut here, fa fb and fc are not variables. They are material properties. So this is not the right parameter to use.\nWith an UP-TO-DATE MOOSE, you have to use material_property_names for fa fb fc\nhttps://mooseframework.inl.gov/source/materials/ParsedMaterial.html\nThe fact that this is unclear is exactly why we renamed these parameters (in an up to date MOOSE)",
                  "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5395823",
                  "updatedAt": "2023-03-22T17:07:12Z",
                  "publishedAt": "2023-03-22T17:07:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MScKarl"
                          },
                          "bodyText": "I re-installed MOOSE 4 Jan 2023. But when was the up-to-date moose published and can I get access to it without re-installing MOOSE again?\ngit log:\ncommit 66833b334e04e1e41d99663ecf3331f2530be536 (HEAD -> master)\nAuthor: Your Name <you@example.com>\nDate:   Wed Jan 4 23:12:07 2023 +0100\n    initial commit",
                          "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5395939",
                          "updatedAt": "2023-03-22T17:16:05Z",
                          "publishedAt": "2023-03-22T17:16:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the renaming was merged end of January. But today's is always the best version",
                          "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5396021",
                          "updatedAt": "2023-03-22T17:26:45Z",
                          "publishedAt": "2023-03-22T17:26:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this page has how to udpate.\nYou ll likely need to update libmesh too\nhttps://mooseframework.inl.gov/getting_started/installation/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5396027",
                          "updatedAt": "2023-03-22T17:27:22Z",
                          "publishedAt": "2023-03-22T17:27:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MScKarl"
                          },
                          "bodyText": "I will update and see if I can get it to work. There is a chance I may have a follow up question later.",
                          "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5396627",
                          "updatedAt": "2023-03-22T18:24:44Z",
                          "publishedAt": "2023-03-22T18:24:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Sounds good.\nbtw what you posted and deleted is the same problem\n  [./fa]\n    type = DerivativeParsedMaterial\n    property_name = fa\n    coupled_variables = 'eta1'\n    function = '(eta1^2-1)^2'\n    enable_jit = true\n  [../]\n\nis not valid with an old moose. You need to say f_name = fa with an OLD moose. Current one, property_name is good",
                          "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5396639",
                          "updatedAt": "2023-03-22T18:29:11Z",
                          "publishedAt": "2023-03-22T18:25:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "MScKarl"
                  },
                  "bodyText": "Hi again!\nNow I've updated MOOSE and corrected the syntax, but I still get an error.\n*** ERROR ***\nThe following error occurred in the object \"MOOSE Problem\", of type \"FEProblem\".\nMaterial property 'eta1', requested by 'fa' is not defined on block 0\nMaterial property 'eta1', requested by 'fa_face' is not defined on block 0\nMaterial property 'eta1', requested by 'fa_neighbor' is not defined on block 0\nMaterial property 'eta2', requested by 'fb' is not defined on block 0\nMaterial property 'eta2', requested by 'fb_face' is not defined on block 0\nMaterial property 'eta2', requested by 'fb_neighbor' is not defined on block 0\nMaterial property 'eta1', requested by 'fc' is not defined on block 0\nMaterial property 'eta1', requested by 'fc_face' is not defined on block 0\nMaterial property 'eta1', requested by 'fc_neighbor' is not defined on block 0\n[Materials]\n\n  [./kappa]\n    type = GenericConstantMaterial\n    prop_names  = 'kappa11 kappa12 kappa21 kappa22'\n    prop_values = '0.01    0.01    0.01    0.01   '\n  [../]\n\n  [./L]\n    type = GenericConstantMaterial\n    prop_names = 'L'\n    prop_values = '1.0'\n  [../]\n\n  [./P0]\n    type = GenericConstantMaterial\n    prop_names = 'P0'\n    prop_values = '144000000'\n  [../]\n\n  [./s]\n    type = GenericConstantMaterial\n    prop_names = 's'\n    prop_values = '0.6' # variera\n  [../]\n\n\n  [./fa]\n    type = DerivativeParsedMaterial\n    property_name = fa\n    material_property_names = 'eta1'\n    expression= '(eta1^2-1)^2'\n    enable_jit = true\n  [../]\n\n  [./fb]\n    type = DerivativeParsedMaterial\n    property_name = fb\n    material_property_names = 'eta2'\n    expression= '(eta2^2-1)^2'\n  [../]\n\n  [./fc]\n    type = DerivativeParsedMaterial\n    property_name = fc\n    material_property_names = 'eta1'\n    constant_names = 's'\n    constant_expressions = '0.6'\n    expression= 's/4*(eta1*(eta1+2)*(eta1^2+2*eta1-6)-7)'\n  [../]\n\n   [./switching1]\n    type = SwitchingFunctionMaterial\n    function_name = h1\n    eta = eta1\n    h_order = HIGH\n  [../]\n\n  [./switching2]\n    type = SwitchingFunctionMaterial\n    function_name = h2\n    eta = eta2\n    h_order = HIGH\n  [../]\n\n\n  [./barrier]\n    type = MultiBarrierFunctionMaterial\n    etas = 'eta1 eta2'\n  [../]\n\n  [./f_eta]\n    type = DerivativeParsedMaterial\n    property_name = f_eta # Name of the function\n    material_property_names = 'fa fb fc' \n    constant_names = 'P0'\n    constant_expressions = '144*10^6'\n    expression= 'P0*(fa+fb*fc)'\n  [../]\n\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5407917",
                  "updatedAt": "2023-03-23T15:40:17Z",
                  "publishedAt": "2023-03-23T15:40:16Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So eta1 2 and 3 are variables right?\nso they should be coupled_variables not material_property_names in fa fb fc",
                          "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5407953",
                          "updatedAt": "2023-03-23T15:43:01Z",
                          "publishedAt": "2023-03-23T15:43:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MScKarl"
                          },
                          "bodyText": "Thank you very much!\n(Removed the other comment because it became moot.)",
                          "url": "https://github.com/idaholab/moose/discussions/23817#discussioncomment-5408181",
                          "updatedAt": "2023-03-23T16:00:40Z",
                          "publishedAt": "2023-03-23T16:00:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Why mesh is moving?",
          "author": {
            "login": "galibubc"
          },
          "bodyText": "I use the phase field and tensor mechanics module to solve a dendrite formation problem. I have a fundamental question regarding the mesh grids. As we know phase field is an implicit interface-capturing approach; hence we do not need to move the mesh while solving a phase field problem. But when I use the above two modules together with eigen strain, it appears that the mesh is moving during the dendrite formation. The evolution of the order parameter alone should be sufficient to track the growth of the dendrites and the interface. I am confused regarding the necessity of moving the mesh simultaneously. Using a fixed grid in the spatial configuration should be sufficient to capture the involved dynamics of the problem.\nI used  [./TensorMechanics] use_displaced_mesh = true [../] to calculate the strains and stresses in the deformed configuration.\nPlease comment on the appropriate usage of the above function for such applications. When I do not use eigen strain, The mesh is not moving.",
          "url": "https://github.com/idaholab/moose/discussions/23728",
          "updatedAt": "2023-04-29T03:07:50Z",
          "publishedAt": "2023-03-15T04:02:13Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSo you want to track the stresses and strains in the deformed configuration, but without displacing the mesh?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23728#discussioncomment-5317211",
                  "updatedAt": "2023-03-15T05:06:29Z",
                  "publishedAt": "2023-03-15T05:06:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "galibubc"
                  },
                  "bodyText": "Hello,\nPlease take a look at the attached image here. The difference with the previous image is that there is no eigen strain in this case.\nI want to measure cauchy stress in a deformed configuration (Eulerian mesh/ fixed grid mesh), not a lagrangian configuration (PK stress). If we calculate cauchy stress with phase-field, we evolve (another equation in space and time) strain tensor (for example: left cauchy green tensor B = FF^T. Using phase field, we avoid the computationally expensive task of moving mesh.\nI am adding my input file here. Please guide me to get the appropriate setting.\nundeformed_mesh.txt\ndeformed_mesh.txt",
                  "url": "https://github.com/idaholab/moose/discussions/23728#discussioncomment-5349177",
                  "updatedAt": "2023-03-17T19:11:55Z",
                  "publishedAt": "2023-03-17T19:11:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@dschwen @laagesen on phase field",
                  "url": "https://github.com/idaholab/moose/discussions/23728#discussioncomment-5350118",
                  "updatedAt": "2023-03-17T21:32:53Z",
                  "publishedAt": "2023-03-17T21:32:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "When you solve the mechanical equilibrium equation, you solve for local displacement at each position (and local strains are derivatives of the displacement fields) When you visualize the mesh, depending on the tool you use, the software may display the elements as moved according to the local displacement field. This is usually a user-adjustable parameter, so you can switch it off or you can displace the mesh by some scalar multiple of the displacement field. When you don't include solving the mechanical equilibrium simultaneously, there are no displacement fields.",
                          "url": "https://github.com/idaholab/moose/discussions/23728#discussioncomment-5350239",
                          "updatedAt": "2023-03-17T21:53:41Z",
                          "publishedAt": "2023-03-17T21:53:40Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "galibubc"
                          },
                          "bodyText": "Does that mean [./TensorMechanics] use_displaced_mesh = false[../] will give the same results for the primitive variables (disp_x, disp_y, eta) without a deformed mesh in the visualization tool.\n\n\nMOOSE uses the tensor mechanics module to solve for the mechanical equilibrium. Is the module solving for displacement or velocity as the primitive variable?\n\n\nFor clarification, when we do not move the mesh, does the solver still compute the cauchy stresses in a deformed configuration? For this to happen, do you evolve any of the deformation tensors with space and time in the eulerian configuration?\n\n\nAlso, why it was not deforming the mesh when I used [./TensorMechanics] use_displaced_mesh = true[../], in the previous figure. The only difference between the two figures is that one has eigen strain (-0.32, deformed mesh) other does not (0.0, undeformed mesh).",
                          "url": "https://github.com/idaholab/moose/discussions/23728#discussioncomment-5373456",
                          "updatedAt": "2023-03-20T19:15:26Z",
                          "publishedAt": "2023-03-20T19:15:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "For 2) displacement variables are used as nonlinear variables, not velocities\nFor 1 & 3 i would encourage you to check the documentation for the tensor mechanics module more closely.\n@maxnezdyur will know for sure otherwise",
                          "url": "https://github.com/idaholab/moose/discussions/23728#discussioncomment-5375633",
                          "updatedAt": "2023-03-20T23:26:05Z",
                          "publishedAt": "2023-03-20T23:26:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "galibubc"
                          },
                          "bodyText": "Thanks for the response. I checked the documents, but it is not clear to me. My apologies\nI am revising the questions again.\n\n\nWhy it was not deforming the mesh when I used [./TensorMechanics] use_displaced_mesh = true[../] in the previous figure. The only difference between the two figures is that one has eigen strain (-0.32, deformed mesh) other does not (0.0, undeformed mesh).\n\n\nDoes that mean [./TensorMechanics] use_displaced_mesh = false[../] will give the same results for the primitive variables (disp_x, disp_y, eta) without a deformed mesh in the visualization tool\n\n\nFor clarification, when we do not move the mesh, does the solver still compute the cauchy stresses in a deformed configuration?",
                          "url": "https://github.com/idaholab/moose/discussions/23728#discussioncomment-5396323",
                          "updatedAt": "2023-03-22T18:01:06Z",
                          "publishedAt": "2023-03-22T17:55:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@recuero",
                          "url": "https://github.com/idaholab/moose/discussions/23728#discussioncomment-5407611",
                          "updatedAt": "2023-03-23T15:18:24Z",
                          "publishedAt": "2023-03-23T15:18:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Solve Did NOT Converge when the BC for simple diffusion problem is large",
          "author": {
            "login": "lipxisi"
          },
          "bodyText": "Hello\nI create a simple diffusion problem like example02 where the diffusion coefficient and absorption coefficient are 0.008 and 0.085. At runtime, it is found that when the bottom boundary is very large for example, the bottom is 1e10 and no top BC, the calculation does not converge but it converges when it's less than a certain value like 1e6. Supposedly, the value at the bottom only magnifies or diminishes the calculated result, and will not affect the convergence. So  why it doesn't converge when the boundary conditions are large, and how to solve these problems. In addition, I want to ask what the terminal output 17 Linear |R| = 6.686767e+03 and 200 Nonlinear |R| = 4.442370e+08 represent.\nThanks very much",
          "url": "https://github.com/idaholab/moose/discussions/23828",
          "updatedAt": "2023-04-29T03:07:57Z",
          "publishedAt": "2023-03-23T09:08:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCould you please use automatic_scaling in your executioner block? This will normalize the residual output\nAre the linear solves converging?\nIs this a purely linear problem?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23828#discussioncomment-5407579",
                  "updatedAt": "2023-03-23T15:16:06Z",
                  "publishedAt": "2023-03-23T15:16:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Continuity of the solution across material blocks",
          "author": {
            "login": "gabburgio"
          },
          "bodyText": "Greetings\nI am trying to solve a reaction-diffusion equation on a rectangular domain, which is itself made up of two rectangles (see attached image).\nI have set the value of the solution on the boundary (Dirichlet BC) to be 5.\nIn the rectangle above the reaction coefficient is 100, in the one below it is 1:\n  [Materials]\n    [./example]\n      type = ADPiecewiseConstantByBlockMaterial\n      prop_name = 'reaction'\n      subdomain_to_prop_value = 'zone1 1\n                                 zone2 100'\n    [../]\n  []\n\nThe diffusion coefficient is 1 for both.\nMy question might be naive, but given that I selected the default linear Lagrange FE functions:\n  [Variables]\n    [./concentration]\n    [../]\n  []\n\nshouldn't the solution itself be a continuous function, unlike my result?\n\nI left the (very coarse) mesh from peacock in to show that, to my understanding, it is not a question of the function quickly going to zero, but rather a genuine discontinuity. (The result is essentially independent of refinement anyway)\nI assumed that the different reaction coefficients would simply be reflected in the entries of the mass matrix associated with the reaction kernel (so larger entries on the side with the larger coefficient, and something in between for the FE functions associated with nodes on the boundary between the two rectangles), but I would say this is not the case, and the solution seems to be carried out independently on the two subdomains.\nIs there a different way one should go about defining material zones? (I defined the two rectangles as physical groups in gmsh)\nWhen dealing with discontinuous properties across material boundaries, should one always make use of Interface Kernels? (here I haven't)\nThank you for your time\nGabriele",
          "url": "https://github.com/idaholab/moose/discussions/23511",
          "updatedAt": "2023-03-23T15:12:47Z",
          "publishedAt": "2023-02-22T15:45:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI would visualize it in paraview and check whether the results are really discontinuous. Peacock is less fully-featured than paraview, I dont think you can draw lines through the geometry to check that.\nYou also seem to be plotting the flux, not the concentration. The flux being related to the first derivative, it s not necessarily continuous, and not with this variable type.\nAs long as the mesh is conformal at the interface, you do not need to use interface kernels. Physics (kernels) that extends across both domains will naturally be solved at the interface.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5081760",
                  "updatedAt": "2023-02-22T20:53:16Z",
                  "publishedAt": "2023-02-22T20:53:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "gabburgio"
                  },
                  "bodyText": "Sorry for the delay, about the two points:\nThe flux is actually the concentration variable.\nI am solving a very simplified neutron diffusion equation, which is a type of diffusion reaction equation, and I thought it would be easier to understand what I was talking about if I said diffusion reaction, but I did not change the name in the plot.\nThe same problem is present in Paraview\n(the solution jumps from almost five to almost zero across the central boundary)\n\nIs it then reasonable to assume that the solution is carried out independently in the two subdomains?\nIf so, why is this happening?\nThanks again",
                  "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5218407",
                  "updatedAt": "2023-03-06T17:10:24Z",
                  "publishedAt": "2023-03-06T17:10:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I would first draw line plots through the geometry to check for a discontinuity.\nThen could you please attach the convergence log? To make sure it s converged.\nIf the mesh is contiguous and you are not block restricting physics inappropriately, the solution should be computed with both domains coupled. You can check for this easily by making the two domains more similar then progressively modifying one and see the solution in the other one change",
                          "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5220025",
                          "updatedAt": "2023-03-06T20:01:33Z",
                          "publishedAt": "2023-03-06T20:01:32Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "gabburgio"
                  },
                  "bodyText": "these are some line plots:\n(vertical line)\n\n(diagonal line)\n\nfull domain plot:\n\nhere is the convergence log:\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   111\n  Elems:                   170\n  Num Subdomains:          2\n\nNonlinear System:\n  Num DOFs:                111\n  Num Local DOFs:          111\n  Variables:               \"flux\" \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nExecution Information:\n  Executioner:             Steady\n  Solver Mode:             Preconditioned JFNK\n  PETSc Preconditioner:    hypre boomeramg \n\nLEGACY MODES ENABLED:\n This application uses the legacy material output option: material properties are output only on TIMESTEP_END, not INITIAL. To remove this message, set 'use_legacy_material_output' to false in this application. If there are gold output files that contain material property output for which output occurs on INITIAL, then these will generate diffs due to zero values being stored, and these tests should be re-golded.\n\n 0 Nonlinear |R| = 3.311429e+01\n      0 Linear |R| = 3.311429e+01\n      1 Linear |R| = 4.168228e-01\n      2 Linear |R| = 1.346020e-02\n      3 Linear |R| = 5.631338e-04\n      4 Linear |R| = 7.175489e-06\n 1 Nonlinear |R| = 7.412694e-06\n      0 Linear |R| = 7.412694e-06\n      1 Linear |R| = 2.761694e-07\n      2 Linear |R| = 3.649083e-09\n      3 Linear |R| = 1.598945e-10\n      4 Linear |R| = 3.063759e-12\n 2 Nonlinear |R| = 3.264146e-12\n Solve Converged!\n\n\nI also tried varying the reaction coefficient in one of the two domains and I could not discern a difference in the other one.\nAt the moment I believe that this discontinuity is due the gmsh mesh, since I produced it simply by creating two adjacent rectangular surfaces and assigning to each a physical group (zone1 and zone2).\nThis also results in the elements of the mesh all having either a vertex or a side on the boundary between the two domains, and none of them \"crossing over\".\nI am investigating how to remedy this in gmsh, but if you have any advice (or any other meshing program to recommend) I would be very grateful\nThanks\nGabriele",
                  "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5231104",
                  "updatedAt": "2023-03-07T16:47:31Z",
                  "publishedAt": "2023-03-07T16:47:30Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "For such a simple mesh, you can use MOOSE meshgenerators\nhttps://mooseframework.inl.gov/source/meshgenerators/CartesianMeshGenerator.html\nI believe you are right about this now. Appending without merging two meshes will do this",
                          "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5231200",
                          "updatedAt": "2023-03-07T16:56:52Z",
                          "publishedAt": "2023-03-07T16:56:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "gabburgio"
                  },
                  "bodyText": "As expected it works with the meshgenerator:\n\nHowever, I am going to need more general geometric capabilities in the future.\nI did manage to produce a single mesh on the two material zones in gmsh using compund surfaces, but then I found myself in the same situation as #16247, since I get the error:\nI don't believe that we can specify multiple subdomain or boundary ids for a given geometric entity\nIs using an \"EqualValueBoundaryConstraint\" on all internal boundaries, as suggested there, really the best approach to define several materials within a geometry?\nIs there some other meshing software you would recommend for the purpose?",
                  "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5242250",
                  "updatedAt": "2023-03-08T14:17:50Z",
                  "publishedAt": "2023-03-08T14:17:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There s still some issue with the mesh. It seems there's overlapping subdomain ids on a given element. This is fine in your mesher but not supported by MOOSE",
                          "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5244000",
                          "updatedAt": "2023-03-08T16:42:51Z",
                          "publishedAt": "2023-03-08T16:42:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "gabburgio"
                  },
                  "bodyText": "As it turns out, the way to achieve this in gmsh is to use boolean fragments on the surfaces/volumes one wants to join, e.g. BooleanFragments{ Volume{1,2}; Delete; }{}",
                  "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5402278",
                  "updatedAt": "2023-03-23T08:34:13Z",
                  "publishedAt": "2023-03-23T08:34:12Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Thanks for reporting the solution!",
                          "url": "https://github.com/idaholab/moose/discussions/23511#discussioncomment-5407543",
                          "updatedAt": "2023-03-23T15:12:48Z",
                          "publishedAt": "2023-03-23T15:12:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Contact convergence problem",
          "author": {
            "login": "selarem"
          },
          "bodyText": "Hi all,\nI am making an indentation test. The first time increments move the indentor vertically to touch the solid below.\nI am getting \ud83d\udc4d\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to FACTOR_NUMERIC_ZEROPIVOT\nNonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 0\nSolve Did NOT Converge!\nFinished Solving                                                                       [  5.73 s] [   39 MB]\nAborting as solve did not converge\nwhile there's no contact, nothing to compute: no stress and no deformation yet !\nthanks for any help,\nregards,",
          "url": "https://github.com/idaholab/moose/discussions/23655",
          "updatedAt": "2023-06-24T22:26:54Z",
          "publishedAt": "2023-03-08T13:05:37Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nTypically this means some variables/physics are not well block restricted and you have 0s in the matrix in the linear problem (within each nonlinear iteration)\nYou can check for conditioning/singular values issues using the SVD preconditioner\nSee this page\nhttps://mooseframework.inl.gov/releases/moose/v1.0.0/application_usage/failed_solves.html#dc5ac4cb-6b57-432f-a734-51430308cea2\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23655#discussioncomment-5244025",
                  "updatedAt": "2023-03-08T16:45:18Z",
                  "publishedAt": "2023-03-08T16:45:17Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "I have checked this before asking.\nIt is not easy to do something a little different from the tests, neither on contact nor in fracture.",
                          "url": "https://github.com/idaholab/moose/discussions/23655#discussioncomment-5251886",
                          "updatedAt": "2023-03-09T09:00:46Z",
                          "publishedAt": "2023-03-09T09:00:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "What were the results?\nAnother option to go around FACTOR_NUMERIC_ZEROPIVOT\nis to add a nonzero quantitiy to the diagonal, using the -pc_factor_shift NONZERO petsc options/values",
                          "url": "https://github.com/idaholab/moose/discussions/23655#discussioncomment-5255732",
                          "updatedAt": "2023-03-09T15:18:51Z",
                          "publishedAt": "2023-03-09T15:18:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "Could not make it run. attached my files if anyone could help.\nThanks\nhttps://drive.google.com/drive/folders/1RY-UxOyC2BmHYEfsTrJk8nRkQuXgUQjM?usp=sharing",
                          "url": "https://github.com/idaholab/moose/discussions/23655#discussioncomment-5344709",
                          "updatedAt": "2023-03-17T11:42:19Z",
                          "publishedAt": "2023-03-17T11:42:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@jiangwen84 related to the other thread",
                          "url": "https://github.com/idaholab/moose/discussions/23655#discussioncomment-5347715",
                          "updatedAt": "2023-03-17T16:23:13Z",
                          "publishedAt": "2023-03-17T16:23:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "what other thread ? this one contains contact and I think it is because of that that we do have this problem",
                          "url": "https://github.com/idaholab/moose/discussions/23655#discussioncomment-5402094",
                          "updatedAt": "2023-03-23T08:15:25Z",
                          "publishedAt": "2023-03-23T08:15:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "error:0A000152:SSL routines::unsafe legacy renegotiation disabled",
          "author": {
            "login": "Wolke24"
          },
          "bodyText": "Bug Description\n(base) \u279c  ~ mamba create -n moose moose-tools moose-libmesh\n              __    __    __    __\n             /  \\  /  \\  /  \\  /  \\\n            /    \\/    \\/    \\/    \\\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n/  / \\   / \\   / \\   / \\  ____\n/  /   _/   _/   _/   \\    o _,\n/ /                       ___/  `\n|/\n\u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557\n\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\n\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\n    mamba (1.0.0) supported by @QuantStack\n\n    GitHub:  https://github.com/mamba-org/mamba\n    Twitter: https://twitter.com/QuantStack\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nWARNING: A conda environment already exists at '/Users/chuxiaoyun/mambaforge3/envs/moose'\nRemove existing environment (y/[n])? y\nLooking for: ['moose-tools', 'moose-libmesh']\nconda-forge/osx-arm64                               2.2s\nconda-forge/noarch                                  3.0s\nDownload error (35) SSL connect error [https://conda.software.inl.gov/public/noarch/repodata.json]\nerror:0A000152:SSL routines::unsafe legacy renegotiation disabled\n>>>>>>>>>>>>>>>>>>>>>> ERROR REPORT <<<<<<<<<<<<<<<<<<<<<<\nTraceback (most recent call last):\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/conda/exceptions.py\", line 1129, in __call__\n    return func(*args, **kwargs)\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 935, in exception_converter\n    raise e\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 928, in exception_converter\n    exit_code = _wrapped_main(*args, **kwargs)\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 886, in _wrapped_main\n    result = do_call(parsed_args, p)\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 754, in do_call\n    exit_code = create(args, parser)\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 630, in create\n    return install(args, parser, \"create\")\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 497, in install\n    index = load_channels(pool, channels, repos)\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/mamba/utils.py\", line 129, in load_channels\n    index = get_index(\n  File \"/Users/chuxiaoyun/mambaforge3/lib/python3.10/site-packages/mamba/utils.py\", line 110, in get_index\n    is_downloaded = dlist.download(api.MAMBA_DOWNLOAD_FAILFAST)\nRuntimeError: Download error (35) SSL connect error [https://conda.software.inl.gov/public/noarch/repodata.json]\nerror:0A000152:SSL routines::unsafe legacy renegotiation disabled\n\n$ /Users/chuxiaoyun/mambaforge3/bin/mamba create -n moose moose-tools moose-libmesh\nenvironment variables:\nCIO_TEST=\nCONDA_DEFAULT_ENV=base\nCONDA_EXE=/Users/chuxiaoyun/mambaforge3/bin/conda\nCONDA_PREFIX=/Users/chuxiaoyun/mambaforge3\nCONDA_PROMPT_MODIFIER=(base)\nCONDA_PYTHON_EXE=/Users/chuxiaoyun/mambaforge3/bin/python\nCONDA_ROOT=/Users/chuxiaoyun/mambaforge3\nCONDA_SHLVL=1\nCURL_CA_BUNDLE=\nINFOPATH=/opt/homebrew/share/info:\nMANPATH=/opt/local/share/man:/opt/homebrew/share/man::\nPATH=/Users/chuxiaoyun/mambaforge3/bin:/Users/chuxiaoyun/mambaforge3/condab\nin:/opt/local/bin:/opt/local/sbin:/opt/homebrew/bin:/opt/homebrew/sbin\n:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin:/\nLibrary/Frameworks/Mono.framework/Versions/Current/Commands\nREQUESTS_CA_BUNDLE=\nSSL_CERT_FILE=\n active environment : base\nactive env location : /Users/chuxiaoyun/mambaforge3\n        shell level : 1\n   user config file : /Users/chuxiaoyun/.condarc\n\npopulated config files : /Users/chuxiaoyun/mambaforge3/.condarc\n/Users/chuxiaoyun/.condarc\nconda version : 22.9.0\nconda-build version : not installed\npython version : 3.10.6.final.0\nvirtual packages : __osx=11.6.5=0\n__unix=0=0\n__archspec=1=arm64\nbase environment : /Users/chuxiaoyun/mambaforge3  (writable)\nconda av data dir : /Users/chuxiaoyun/mambaforge3/etc/conda\nconda av metadata url : None\nchannel URLs : https://conda.software.inl.gov/public/osx-arm64\nhttps://conda.software.inl.gov/public/noarch\nhttps://conda.anaconda.org/conda-forge/osx-arm64\nhttps://conda.anaconda.org/conda-forge/noarch\npackage cache : /Users/chuxiaoyun/mambaforge3/pkgs\n/Users/chuxiaoyun/.conda/pkgs\nenvs directories : /Users/chuxiaoyun/mambaforge3/envs\n/Users/chuxiaoyun/.conda/envs\nplatform : osx-arm64\nuser-agent : conda/22.9.0 requests/2.28.1 CPython/3.10.6 Darwin/20.6.0 OSX/11.6.5\nUID:GID : 501:20\nnetrc file : None\noffline mode : False\nAn unexpected error has occurred. Conda has prepared the above report.",
          "url": "https://github.com/idaholab/moose/discussions/23826",
          "updatedAt": "2023-04-29T03:08:16Z",
          "publishedAt": "2022-11-14T17:21:41Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "geoyanzhan3"
                  },
                  "bodyText": "I got the same error, when I install MOOSE on a new machine.",
                  "url": "https://github.com/idaholab/moose/discussions/23826#discussioncomment-5400573",
                  "updatedAt": "2023-03-23T05:09:13Z",
                  "publishedAt": "2022-11-23T08:21:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aiskhak"
                  },
                  "bodyText": "Same issue",
                  "url": "https://github.com/idaholab/moose/discussions/23826#discussioncomment-5400574",
                  "updatedAt": "2023-03-23T05:09:13Z",
                  "publishedAt": "2022-11-28T23:34:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSorry we dont handle user support under Issues but under Discussions.\nI think the issue has been resolved with time. Please let us know if you still hit it.\nThis is likely a conda error anyway, and you can do\nSSL_NO_VERIFY=1 mamba update\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23826#discussioncomment-5400579",
                  "updatedAt": "2023-03-23T05:11:08Z",
                  "publishedAt": "2023-03-23T05:11:08Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Cannot make a moosebased App on a linux cluster",
          "author": {
            "login": "morsi95"
          },
          "bodyText": "I have got the following error when I try to make a moose App on a linux cluster:\nLinking Library /dss/dsshome1/lxc0F/ge45dal2/golem/lib/libgolem-opt.la...\nLinking Executable /dss/dsshome1/lxc0F/ge45dal2/golem/golem-opt...\n/usr/bin/ld: /dss/dsshome1/lxc0F/ge45dal2/golem/test/lib/libgolem_test-opt.so: undefined reference to `InputParameters validParams<GolemApp>()'\ncollect2: error: ld returned 1 exit status\n/dss/dsshome1/lxc0F/ge45dal2/offline/moose/framework/app.mk:415: recipe for target '/dss/dsshome1/lxc0F/ge45dal2/golem/golem-opt' failed\nmake: *** [/dss/dsshome1/lxc0F/ge45dal2/golem/golem-opt] Error 1\n\nI have created a moose profile where i can source moose each time I start a shell and I ran it before trying to make the App. This is the moose_profile file:\nmodule unload devEnv/Intel/2019\nmodule load gcc/9 mpi.intel/2019_gcc mkl/2019_gcc python/3.6_intel\nexport PATH=/lrz/sys/intel/impi2019u6/impi/2019.6.154/intel64/bin/:/lrz/sys/compilers/gcc/9.2/bin:$PATH\nexport CC=mpicc CXX=mpicxx FC=mpif90 F90=mpif90 F77=mpif77\nexport PETSC_DIR=$HOME/libs/petsc\nexport LIBMESH_DIR=$HOME/libs/libmesh\nexport MOOSE_DIR=$HOME/offline/moose",
          "url": "https://github.com/idaholab/moose/discussions/23825",
          "updatedAt": "2023-04-29T03:00:27Z",
          "publishedAt": "2023-03-06T14:34:02Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSorry we missed this we do not handle user support in Issues, we handle it in github Discussions.\nThis particular error was caused by the deprecation of the old form of validParams in MOOSE about a year ago.\nPlease follow the instructions here to fix your application. Every object's validParam will have to be updated\nhttps://mooseframework.inl.gov/newsletter/2020/2020_04.html#c1ba1ef6-13a6-4210-bedb-0b691fec2ce7\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23825#discussioncomment-5400484",
                  "updatedAt": "2023-03-23T04:50:47Z",
                  "publishedAt": "2023-03-23T04:50:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "A problem with \u201cstochastic\u201d",
          "author": {
            "login": "bendibendi"
          },
          "bodyText": "hello, I'm a beginner in MOOSE and I think I'm having a problem with the official routines. Recently I was trying to run the official multi-physics field coupling routine stochastic and this is its URL\uff1ahttps://mooseframework.inl.gov/modules/combined/examples/stm_thermomechanics.html.\nI ran the input file \"graphite_ring_thermomechanics.i\" in the \"stochastic\" directory using the file \"combined-opt\" in the \"combined\" directory:\n\nThis is my compile command line\uff1a\n\nI ended up with an output file, and I used paraview to look at this mesh file and found that the results were not the same as the official routines.\nHere are the official results.\n\n\nHere are my results.\n\n\nThe results of physical quantities such as T and dispxd are different from the official routines.I wonder  what is wrong with this?",
          "url": "https://github.com/idaholab/moose/discussions/23812",
          "updatedAt": "2023-04-29T03:41:24Z",
          "publishedAt": "2023-03-22T11:45:37Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nparaview opens the first time step, initialization, by default. Did you navigate to the final time step?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23812#discussioncomment-5393385",
                  "updatedAt": "2023-03-22T13:54:17Z",
                  "publishedAt": "2023-03-22T13:54:16Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "bendibendi"
                          },
                          "bodyText": "Thank you a lot. I am not proficient enough with paraview. I just navigated through the last time step and observed the correct results.",
                          "url": "https://github.com/idaholab/moose/discussions/23812#discussioncomment-5399829",
                          "updatedAt": "2023-03-23T02:30:22Z",
                          "publishedAt": "2023-03-23T02:30:21Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "multiapp transfer vpp of type ElementValueSampler",
          "author": {
            "login": "aaelmeli"
          },
          "bodyText": "Hi\nI need to transfer vpp of type  ElementValueSampler from the sub-app to the main-app reporter.\nThe block that describes the transfer in the main app is as follows:\n  [fromadjoint]\n    type = MultiAppReporterTransfer\n    from_multi_app = adjoint\n    from_reporters = 'gradvec/gradvec'\n    to_reporters = 'OptimizationReporter/adjoint'\n  []\n\nand the vpp in the sub-app is as follows:\n[VectorPostprocessors]\n  [gradvec]\n    type = ElementValueSampler\n    variable = 'integral_gradient'\n    sort_by = id\n    execute_on = 'final'\n  []\n[]\n\nThis results in the following error\n\"*** ERROR ***\nThe following error occurred in the object \"fromadjoint\", of type \"MultiAppReporterTransfer\".\nReporter with the name \"gradvec/gradvec\" within app \"adjoint0\" was not found.\"\n\n@lynnmunday any thoughts from your side?",
          "url": "https://github.com/idaholab/moose/discussions/22482",
          "updatedAt": "2023-03-23T00:45:51Z",
          "publishedAt": "2022-10-24T19:31:45Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "The name must not be gradvec.\nLook for the declareVec name in the source code to get the right name used in the vector",
                  "url": "https://github.com/idaholab/moose/discussions/22482#discussioncomment-3954966",
                  "updatedAt": "2022-10-24T21:23:23Z",
                  "publishedAt": "2022-10-24T21:23:22Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aaelmeli"
                          },
                          "bodyText": "The name must not be gradvec. Look for the declareVec name in the source code to get the right name used in the vector\n\nIt seems that ElementValueSampler  does not have a variable that holds a name for the vector.",
                          "url": "https://github.com/idaholab/moose/discussions/22482#discussioncomment-3955158",
                          "updatedAt": "2022-10-24T22:05:10Z",
                          "publishedAt": "2022-10-24T22:05:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ElementValueSampler just uses the names of the variables for the vector",
                          "url": "https://github.com/idaholab/moose/discussions/22482#discussioncomment-3955169",
                          "updatedAt": "2022-10-24T22:07:45Z",
                          "publishedAt": "2022-10-24T22:07:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aaelmeli"
                          },
                          "bodyText": "ElementValueSampler just uses the names of the variables for the vector\n\nThank you, that helps. it should be modified to  from_reporters = 'gradvec/integral_gradient'. Thanks again.",
                          "url": "https://github.com/idaholab/moose/discussions/22482#discussioncomment-3955219",
                          "updatedAt": "2022-10-24T22:19:42Z",
                          "publishedAt": "2022-10-24T22:19:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "@aaelmeli I just saw this, I hope you figured it out.  I ran into this same problem.  We automatically create a reporter that appends \"grad_\" to the parameter_names that are given in the OptimizationReporter block.\nSee this example in moose/modules/optimization/test/tests/optimizationreporter/bc_load_linearFunction/main.i\nNote teh parameter_names 'left right', these will be used to create two reporters that we need to transfer the gradient data into called grad_left and grad_left.\n  type = OptimizationReporter\n  parameter_names = 'left right'\n  num_values = '2 1'\n  measurement_file = 'measurementData.csv'\n  file_xcoord = 'coordx'\n  file_ycoord ='y'\n  file_zcoord = 'z'\n  file_value = 'measured_value'\n  # contents of measurementData.csv\n  # measurement_points = '0.2 0.2 0\n  #                       0.8 0.6 0\n  #                       0.2 1.4 0\n  #                       0.8 1.8 0'\n  # measurement_values = '207 204 185 125'\n  outputs=none\n[]\n\nand then to get this transfer to work, we append grad_ to the two parameter names for the to_reporters shown below by grad_left and grad_right\n  [fromadjoint]\n    type = MultiAppReporterTransfer\n    from_multi_app = adjoint\n    from_reporters = 'grad_bc_left/inner_product\n                      grad_bc_right/inner_product'\n    to_reporters = 'OptimizationReporter/grad_left\n                    OptimizationReporter/grad_right'\n  []",
                          "url": "https://github.com/idaholab/moose/discussions/22482#discussioncomment-5398548",
                          "updatedAt": "2023-03-22T21:57:57Z",
                          "publishedAt": "2023-03-22T21:57:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "A good way to check what reporters are getting created in your problem is to use this debug block:\n[Debug]\n  show_reporters = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/22482#discussioncomment-5398556",
                          "updatedAt": "2023-03-22T21:59:31Z",
                          "publishedAt": "2023-03-22T21:59:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aaelmeli"
                          },
                          "bodyText": "@aaelmeli I just saw this, I hope you figured it out. I ran into this same problem. We automatically create a reporter that appends \"grad_\" to the parameter_names that are given in the OptimizationReporter block. See this example in moose/modules/optimization/test/tests/optimizationreporter/bc_load_linearFunction/main.i\nNote teh parameter_names 'left right', these will be used to create two reporters that we need to transfer the gradient data into called grad_left and grad_left.\n  type = OptimizationReporter\n  parameter_names = 'left right'\n  num_values = '2 1'\n  measurement_file = 'measurementData.csv'\n  file_xcoord = 'coordx'\n  file_ycoord ='y'\n  file_zcoord = 'z'\n  file_value = 'measured_value'\n  # contents of measurementData.csv\n  # measurement_points = '0.2 0.2 0\n  #                       0.8 0.6 0\n  #                       0.2 1.4 0\n  #                       0.8 1.8 0'\n  # measurement_values = '207 204 185 125'\n  outputs=none\n[]\n\nand then to get this transfer to work, we append grad_ to the two parameter names for the to_reporters shown below by grad_left and grad_right\n  [fromadjoint]\n    type = MultiAppReporterTransfer\n    from_multi_app = adjoint\n    from_reporters = 'grad_bc_left/inner_product\n                      grad_bc_right/inner_product'\n    to_reporters = 'OptimizationReporter/grad_left\n                    OptimizationReporter/grad_right'\n  []\n\n\nThanks, @lynnmunday, I could fix this problem at that time. I think, by that time, that appended (grad_) was not there OR my repository was not updated.",
                          "url": "https://github.com/idaholab/moose/discussions/22482#discussioncomment-5399337",
                          "updatedAt": "2023-03-23T00:45:51Z",
                          "publishedAt": "2023-03-23T00:45:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "The following material properties are declared on block 2 by multiple materials",
          "author": {
            "login": "Rahim-Habibi"
          },
          "bodyText": "Hi,\nI have ran a Thermo-Hydro-Mechanical response of a reservoir against fluid injection successfully. Now, in the next step, I trying to add failure criterion like Mohr-Coulomb to my model. I have got knoweldge how to apply Mohr-Coulomb from some examples such as:\nhttps://github.com/idaholab/moose/blob/next/modules/tensor_mechanics/test/tests/multi/paper3.i\nI just ran this example succesfully, but when I run the model the following errors pops up:\nThe following material properties are declared on block 2 by multiple materials\n\nBy the way, I used Thermal, Hydraulic and Mechanical material objects in the model, a part of it as follows:\n[Materials]\n  [./mc]\n    type = ComputeMultiPlasticityStress\n    ep_plastic_tolerance = 1e-3\n    plastic_models = 'tensile mc'\n    max_NR_iterations = 5\n    specialIC = 'rock'\n    debug_fspb = crash\n    block = '2 3 4 11 12 13 14 15 16 17 18 19 20 21'\n  [../]\n  [./strain]\n    type = ComputeFiniteStrain\n    displacements = 'disp_x disp_y disp_z'\n    block = '2 3 4 11 12 13 14 15 16 17 18 19 20 21'\n  [../]\n  [./Elasticity_tensor]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 15e9\n    poissons_ratio = 0.2\n    block = '2 3 4 11 12 13 14 15 16 17 18 19 20 21'\n  [../]\n  [./thermal_expansion]\n    type = ComputeThermalExpansionEigenstrain\n    thermal_expansion_coeff = 1e-5\n    temperature = temperature\n    stress_free_temperature = temperature\n    eigenstrain_name = 'thermal_eigenstrain'\n    block = '2 3 4 11 12 13 14 15 16 17 18 19 20 21'\n  [../]\n\nIt seems that there is kind of confliction between the objects declaring the material.\nDoes anyone know how can I handle this issue?\nThanks in advance\nRahim",
          "url": "https://github.com/idaholab/moose/discussions/21477",
          "updatedAt": "2023-03-22T22:04:22Z",
          "publishedAt": "2022-07-01T08:27:57Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Rahim\nDo you have an object namedall_strain ?\nAre you using the tensor mechanics action (Modules/TensorMechanics syntax) as well ?\nCould you please attach your input file?\nFormat-wise:\n\nplease do not post screenshots of text, they are not searchable\nplease format code and input file snippets using triple quotes\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21477#discussioncomment-3064421",
                  "updatedAt": "2022-07-01T13:51:39Z",
                  "publishedAt": "2022-07-01T13:51:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "RWTHLHK"
                  },
                  "bodyText": "Hello, do you fix your problem? I met a similar one.",
                  "url": "https://github.com/idaholab/moose/discussions/21477#discussioncomment-5398402",
                  "updatedAt": "2023-03-22T21:36:55Z",
                  "publishedAt": "2023-03-22T21:36:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Rahim-Habibi"
                          },
                          "bodyText": "Hi,\nYes, I fixed it. it means that you declared the same property in two blocks in the input file. In my case, strain was declared in two blocks.\nIf you attach your input file, I can help you more.\nRahim",
                          "url": "https://github.com/idaholab/moose/discussions/21477#discussioncomment-5398533",
                          "updatedAt": "2023-03-22T21:55:43Z",
                          "publishedAt": "2023-03-22T21:55:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "Ah, thanks for reminding me. I just fixed the problem, too.",
                          "url": "https://github.com/idaholab/moose/discussions/21477#discussioncomment-5398578",
                          "updatedAt": "2023-03-22T22:04:23Z",
                          "publishedAt": "2023-03-22T22:04:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}