{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wMy0wMVQxMjoyMDoxNy0wNjowMM4ASrv8"
    },
    "edges": [
      {
        "node": {
          "title": "Disable boundary condition after time step",
          "author": {
            "login": "mfitzka"
          },
          "bodyText": "Hello,\nIs there a way to disable a boundary condition after a certain time frame?\nI would like to have the temperature to be (for example) 100 \u00b0C at the beginning at one boundary and after a certain time period it changes back to room temperature. and you can see the temperature changing over time in the material. Similar to bringing the material in the mesh in contact with a hot external source but not in for the whole time as can be done with the standard BCs.\nOr are there other ways to implement this, if this is not possible?",
          "url": "https://github.com/idaholab/moose/discussions/23579",
          "updatedAt": "2023-03-03T13:30:47Z",
          "publishedAt": "2023-03-02T13:06:02Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can use the Control interface to turn on or off objects\nhttps://mooseframework.inl.gov/syntax/Controls/index.html\nYou can then switch from a heat flux (NeumannBC) to a fixed temperature (DIrichlet) at a certain time.\nIf the BCs are off the same type through time, with simply different values, then you just need to define the value as a Function, like FunctionDirichletBC. Functions can have time dependence\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23579#discussioncomment-5181821",
                  "updatedAt": "2023-03-02T18:20:46Z",
                  "publishedAt": "2023-03-02T17:52:47Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mfitzka"
                          },
                          "bodyText": "That should work perfectly for my problem. Thank you Guillaume!",
                          "url": "https://github.com/idaholab/moose/discussions/23579#discussioncomment-5190861",
                          "updatedAt": "2023-03-03T13:30:47Z",
                          "publishedAt": "2023-03-03T13:30:46Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "What is SMP",
          "author": {
            "login": "nanguaxiaofendui"
          },
          "bodyText": "Hello All,\nI have some questions. The official documentation states that single matrix preprocessing (SMP) builds a preprocessing using the non-diagonal portion of a user-defined Jacobian matrix. Why is it constructed like this? What's the use of that? When is it appropriate to use SMPS?\nThanks",
          "url": "https://github.com/idaholab/moose/discussions/23575",
          "updatedAt": "2023-06-24T22:24:01Z",
          "publishedAt": "2023-03-02T01:45:30Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe effects are going to depend on the solve type, PJFNK or NEWTON, but essentially if you ignore the non diagonal part of the Jacobian (also used for preconditioning), you are ignoring the effects of the coupling between variables in some capacity.\n\nFor Newton this likely means non linear iterations wont converge as the Jacobian generally needs to be exact\nFor PJFNK, this is only going to affect the preconditioning, and the effect will depend on which type of preconditioning you are using\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23575#discussioncomment-5174775",
                  "updatedAt": "2023-03-02T05:21:12Z",
                  "publishedAt": "2023-03-02T05:21:12Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "nanguaxiaofendui"
                          },
                          "bodyText": "hello\nThank you very much for your answer. I have one more question.\nWhy is the lower left element of the M matrix like this?",
                          "url": "https://github.com/idaholab/moose/discussions/23575#discussioncomment-5175165",
                          "updatedAt": "2023-03-02T06:35:02Z",
                          "publishedAt": "2023-03-02T06:35:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This is specific to this coupled diffusion problem in the example it s used for",
                          "url": "https://github.com/idaholab/moose/discussions/23575#discussioncomment-5180310",
                          "updatedAt": "2023-03-02T15:55:47Z",
                          "publishedAt": "2023-03-02T15:55:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nanguaxiaofendui"
                          },
                          "bodyText": "Thank you very much!",
                          "url": "https://github.com/idaholab/moose/discussions/23575#discussioncomment-5186820",
                          "updatedAt": "2023-03-03T07:35:18Z",
                          "publishedAt": "2023-03-03T07:35:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How can I get the shear stress term of x?",
          "author": {
            "login": "seongwonHam"
          },
          "bodyText": "Hello, MOOSE developers.\nNow I'm trying to make the basic code to certain the compressive and shear stress in the 3D cubic mesh.\nMy code is like below;\n[Mesh]\n  type = FileMesh\n  file = 3D.e\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n[]\n\n[Modules/TensorMechanics/Master]\n  [./block1]\n    strain = FINITE\n    add_variables = true\n    generate_output = 'stress_xx stress_yy stress_zz stress_xy stress_yz stress_xz'\n  [../]\n[]\n\n[Materials]\n  [./elasticity_tensor]\n    type = ComputeElasticityTensor\n    C_ijkl = '59.99e9 34.30e9 26.70e9 30.62e9 4.09e9'\n    fill_method = axisymmetric_rz\n    block = 1\n  [../]\n  [./stress]\n    type = ComputeFiniteStrainElasticStress\n  [../]\n[]\n\n[BCs]\n  [./fixed_top]\n    type = DirichletBC\n    variable = disp_z\n    boundary = z_plus\n    value = 0\n  [../]\n  [./fixed_left]\n    type = DirichletBC\n    variable = disp_x\n    boundary = 'x_minus x_plus'\n    value = 0\n  [../]\n  [./fixed_right]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'y_minus y_plus'\n    value = 0\n  [../]\n  [./Pressure]\n    [./comp]\n      boundary = z_minus\n      function = 1e8*t\n    [../]\n  [../]\n[]\n\n[Preconditioning]\n  [SMP]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n  start_time = 0\n  n_startup_steps = 1\n  end_time = 1\n  dt = 0.01\n[]\n\n[Outputs]\n  exodus = true\n[]\n\nand my mesh file is attached.\n\nplease change the name of this file to 3D.e (exodus file).\nWhen I use the above input file and exodus file to run the MOOSE calculation, I can get the result file.\nBut it doesn't contain \"stress_xx stress_xy stress_xz\" even though I write those outputs in my input file.\n\nI have checked it using Paraview, but output variables seem like this picture.\nPlease let me know how can I fix this code.",
          "url": "https://github.com/idaholab/moose/discussions/23577",
          "updatedAt": "2023-03-03T01:15:42Z",
          "publishedAt": "2023-03-02T06:04:40Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "seongwonHam"
                  },
                  "bodyText": "https://drive.google.com/file/d/1wBiWDIwZL7YFP3eaEk6UZjNFnums9KS-/view?usp=sharing\nI share my exodus mesh file using google drive.",
                  "url": "https://github.com/idaholab/moose/discussions/23577#discussioncomment-5175005",
                  "updatedAt": "2023-03-02T06:07:28Z",
                  "publishedAt": "2023-03-02T06:07:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Rahim-Habibi"
                  },
                  "bodyText": "Hi,\nYou are right, you mentioned \"stress_xx stress_xy stress_xz\" in input file and they were calculated in your results. The point is all of \"stress_xx stress_xy stress_xz\" components are being saved as a single vector, you can check them in Paraview while other components like \"stress_yz are being saved as scalar.",
                  "url": "https://github.com/idaholab/moose/discussions/23577#discussioncomment-5177513",
                  "updatedAt": "2023-03-02T10:51:43Z",
                  "publishedAt": "2023-03-02T10:51:42Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yeah basically Paraview is grouping stress_xy, stress_xx and stress_xz under stress_x",
                          "url": "https://github.com/idaholab/moose/discussions/23577#discussioncomment-5183132",
                          "updatedAt": "2023-03-02T20:46:13Z",
                          "publishedAt": "2023-03-02T20:46:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "seongwonHam"
                          },
                          "bodyText": "I appreciate your kind reply!\nThen, How can I see the \"stress_x\" vector as separated scalar terms \"stress_xx stress_xy stress_xz\" in Paraview?",
                          "url": "https://github.com/idaholab/moose/discussions/23577#discussioncomment-5184724",
                          "updatedAt": "2023-03-03T00:59:11Z",
                          "publishedAt": "2023-03-03T00:59:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You could add a suffix in the material property output\nclick on it and select each component",
                          "url": "https://github.com/idaholab/moose/discussions/23577#discussioncomment-5184785",
                          "updatedAt": "2023-03-03T01:09:17Z",
                          "publishedAt": "2023-03-03T01:09:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "seongwonHam"
                          },
                          "bodyText": "Thanks a lot! I will try it.",
                          "url": "https://github.com/idaholab/moose/discussions/23577#discussioncomment-5184814",
                          "updatedAt": "2023-03-03T01:15:43Z",
                          "publishedAt": "2023-03-03T01:15:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Summer Internship in Industry",
          "author": {
            "login": "adityakavalur"
          },
          "bodyText": "Hi\nCorning's Scientific Computing group is looking to explore the MOOSE framework. If you are interested in solving industry problems and working with our solid mechanics modelers across the globe, check out the job listing\nThe start and end dates as well as the duration is pretty flexible! Reach out to me at kavalurav@corning.com if you have any questions",
          "url": "https://github.com/idaholab/moose/discussions/23589",
          "updatedAt": "2023-03-03T00:11:41Z",
          "publishedAt": "2023-03-03T00:11:40Z",
          "category": {
            "name": "Opportunities"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Question about setting specific initial condition in MOOSE simulation",
          "author": {
            "login": "abc-hy"
          },
          "bodyText": "Hi everyone,\nI still have not figured out how to set a specific states as the initial condition in MOOSE simulation.\nI want to set the initial condition as the following shape, which is inside the red dotted line. How can I get the concentration and other variables I need from this file and put it in the new simulation? Can anyone give me some advice?\n\nI have tried SolutionUserObject. But it seems it does not work. Does anyone familiar with SolutionUserObject? Or have other methods?\nThank you very much,",
          "url": "https://github.com/idaholab/moose/discussions/23454",
          "updatedAt": "2023-06-24T22:23:51Z",
          "publishedAt": "2023-02-17T00:33:20Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Rahim-Habibi"
                  },
                  "bodyText": "Hi,\nIf you have the initial state data as .csv, I can recommend to use \"PropertyReadFile\" then define it as a function. Last step, you can use the function as ICs.",
                  "url": "https://github.com/idaholab/moose/discussions/23454#discussioncomment-5177572",
                  "updatedAt": "2023-03-02T10:57:51Z",
                  "publishedAt": "2023-03-02T10:57:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "February 2023 News",
          "author": {
            "login": "cticenhour"
          },
          "bodyText": "The February 2023 MOOSE Newsletter has been released! A summary of the content is below:\n\nMOOSE Improvements\n\nNew MultiApp general field transfers\nNew parameter: transform a MultiApp frame of reference\nAbility to rename parameters in derived objects and new deprecation APIs\nPost-processor added to query solid properties\nImproved the ability to mark the converged solution invalid\nPerformance improvements for Navier-Stokes finite volume simulations\n\n\nVarious bug fixes and enhancements",
          "url": "https://github.com/idaholab/moose/discussions/23576",
          "updatedAt": "2023-03-02T03:58:42Z",
          "publishedAt": "2023-03-02T03:58:41Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "MooseMatView",
          "author": {
            "login": "nanguaxiaofendui"
          },
          "bodyText": "Hello All\nDo you know if moose can output a matrix or a vector? If so, how to output?\nThanks",
          "url": "https://github.com/idaholab/moose/discussions/23568",
          "updatedAt": "2023-06-24T22:23:40Z",
          "publishedAt": "2023-03-01T14:08:11Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Are you asking about material property output? You need to do that componentwise. adding outputs = exodus  in the material block might already do the trick.",
                  "url": "https://github.com/idaholab/moose/discussions/23568#discussioncomment-5168150",
                  "updatedAt": "2023-03-01T15:45:21Z",
                  "publishedAt": "2023-03-01T15:45:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "nanguaxiaofendui"
                          },
                          "bodyText": "Thank you very much",
                          "url": "https://github.com/idaholab/moose/discussions/23568#discussioncomment-5173018",
                          "updatedAt": "2023-03-02T01:28:48Z",
                          "publishedAt": "2023-03-02T01:28:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "If you are asking for outputting the system matrix, you ll want to pass to petsc:  -ksp_view_pmat\nSee #17089",
                  "url": "https://github.com/idaholab/moose/discussions/23568#discussioncomment-5168649",
                  "updatedAt": "2023-03-01T16:28:33Z",
                  "publishedAt": "2023-03-01T16:28:32Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "nanguaxiaofendui"
                          },
                          "bodyText": "Thank you very much. I'll try.",
                          "url": "https://github.com/idaholab/moose/discussions/23568#discussioncomment-5173022",
                          "updatedAt": "2023-03-02T01:29:15Z",
                          "publishedAt": "2023-03-02T01:29:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Question about PorousFlowSink",
          "author": {
            "login": "Joseph-0123"
          },
          "bodyText": "Dear all,\nI have questions regarding PorousFlowSink.\n\nI can see from the Porous Flow Tutorial Page 06. Adding a trace it is mentioned that it works by setting s=f(t,x) and f as the mass rate with unit kg/m2/s.\nNow my question is what is the density referring to? component or fluid or a fluid-component mixture? If it is a mixture, can we inject only components with component density or only fluid with fluid density?  For example, in the Porous Flow Tutorial Page 07. A chemically-reactive tracer, and porosity and permeability changes, only tracer_concentration is set by PorousFlowSink without porepressure.\n\n  [BCs]\n   [constant_injection_of_tracer]\n     type = PorousFlowSink\n     variable = tracer_concentration\n     flux_function = -5E-3\n     boundary = injection_area\n   []\n    [constant_outer_porepressure]\n     type = DirichletBC\n     variable = porepressure\n     value = 0\n     boundary = rmax\n   []\n []\n\n\nCompared to this PorousFlowSink, I remember when I use a point source with Dirackernel, it always creates some jumps with time at the source position, but this PorousFlowSink seems to give a very nice behavior without any jumps. What is the main reason resulting in that? Does PorousFLowSink only work at boundary terms?",
          "url": "https://github.com/idaholab/moose/discussions/23566",
          "updatedAt": "2023-03-01T22:59:03Z",
          "publishedAt": "2023-02-28T23:18:38Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Joseph-0123"
                  },
                  "bodyText": "Dear @GiudGiud , could you please help me have a look at this? Thank you.",
                  "url": "https://github.com/idaholab/moose/discussions/23566#discussioncomment-5171493",
                  "updatedAt": "2023-03-01T21:56:38Z",
                  "publishedAt": "2023-03-01T21:56:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I m not really a Porous Flow expert. It would be better for @WilkAndy to weigh in.\nThough I m thinking the answer to 1 will be in the tutorial or the docs of the module",
                          "url": "https://github.com/idaholab/moose/discussions/23566#discussioncomment-5171522",
                          "updatedAt": "2023-03-01T22:00:49Z",
                          "publishedAt": "2023-03-01T22:00:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "The density will be the fluid density at those conditions. If adding a component doesn't alter the density (like in the example you mentioned) then density of just that calculated for the fluid at those pressure and temperature conditions.\nThe sink bc is applied over the length of the boundary specified, instead of a single point like a Dirac kernel, S which probably explains the smoother change.",
                  "url": "https://github.com/idaholab/moose/discussions/23566#discussioncomment-5171540",
                  "updatedAt": "2023-03-01T22:03:11Z",
                  "publishedAt": "2023-03-01T22:03:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "What kernel(s) allow coupling to a first order derivative?  Or square of first order derivative?",
          "author": {
            "login": "EdSheltonUKAEA"
          },
          "bodyText": "I'm looking for an AD kernel which does the equivalent of coupling a time derivative to diffusion, but for the first derivative wrt x rather than the second derivative.\ndy/dt = A dy/dx\nrather than\ndy/dt = D d^2y/dx^2\nIt looks like PrimaryConvetion and Convected Mesh have the right sort of idea, but are too specific to particular applications.\nhttps://mooseframework.inl.gov/source/kernels/PrimaryConvection.html\nhttps://mooseframework.inl.gov/source/kernels/ConvectedMesh.html\nI'm looking for a nice simple generic kernel which but can't see anything obvious in the names.  Also I need to be able to specify the coefficient A as a material property, and for the kernel to work with AD.\nDoes a kernel to meet my needs exist?\n\nP.S.  What would be even better is a kernel for:\ndy/dt = A [dy/dx]^2\nMatGradSquareCoupled looks like it could do this, but again maybe specific to a particular application and doesn't seem to have an AD version.\nhttps://mooseframework.inl.gov/source/kernels/MatGradSquareCoupled.html",
          "url": "https://github.com/idaholab/moose/discussions/23554",
          "updatedAt": "2023-03-09T14:37:43Z",
          "publishedAt": "2023-02-28T15:43:04Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nMatGradSquareCoupled seems to do exactly what you want except it s not AD.\nYou can mix AD and non-AD kernels, the only issue is the AD-status of the material property. This kernel will only accept a non-AD one, and will retrieve the derivatives of the material properties to help form the Jacobian.\nSo you can either:\n\nrewrite that kernel with AD. This should be fairly simple.\nuse that kernel, duplicate your AD material property with a non-AD version and create the derivatives manually\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23554#discussioncomment-5154257",
                  "updatedAt": "2023-02-28T16:49:23Z",
                  "publishedAt": "2023-02-28T16:49:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "EdSheltonUKAEA"
                          },
                          "bodyText": "Thank you!  This is really helpful!\nWhen you say \"create the derivatives manually\" is this something that I have to do myself by doing hand calculations outside MOOSE and/or adding further lines of code for each derivative.  Or does MOOSE do these calculations itself just \"manually\" rather than using the automatic differentiation option.\nI'm assuming the second one, but just want to be sure.",
                          "url": "https://github.com/idaholab/moose/discussions/23554#discussioncomment-5163765",
                          "updatedAt": "2023-03-01T07:45:09Z",
                          "publishedAt": "2023-03-01T07:45:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nSo yes when people are making regular material properties and need the derivatives, they usually need to do the hand calculation outside of MOOSE, then create a new material property with a name like \"dD_dT\" and use that as the property.\nUNLESS it s a simple parsed expression and in this case the DerivativeParsedMaterial can do that for you.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/23554#discussioncomment-5170504",
                          "updatedAt": "2023-03-01T19:46:29Z",
                          "publishedAt": "2023-03-01T19:46:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "but tbh the easy option here is to copy paste the kernel and make it AD. Just need to some these two letters in a bunch of places",
                          "url": "https://github.com/idaholab/moose/discussions/23554#discussioncomment-5170611",
                          "updatedAt": "2023-03-01T20:03:18Z",
                          "publishedAt": "2023-03-01T20:03:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Peacock fails to start",
          "author": {
            "login": "MohamedAbdulHameed"
          },
          "bodyText": "Hi.\nI was using Peacock just fine when I accidentally pressed the 'clone' button in the ExodusView tab. It immediately closed and is now giving me a 'Failed to start' error (image attached). I reinstalled moose and peacock and deleted all .pyc files. Still, the error persisted.\nI suspect this is an error related to git, but I am new to git.\nAny help is much appreciated. Thanks.",
          "url": "https://github.com/idaholab/moose/discussions/23535",
          "updatedAt": "2023-06-24T22:23:33Z",
          "publishedAt": "2023-02-25T23:26:28Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDo you get some logs in the console window you used to start peacock?\nIt's not clear from this screen what is the problem\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5114962",
                  "updatedAt": "2023-02-26T16:02:05Z",
                  "publishedAt": "2023-02-26T16:02:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MohamedAbdulHameed"
                          },
                          "bodyText": "This is what I get in the console:",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5117015",
                          "updatedAt": "2023-02-27T00:17:55Z",
                          "publishedAt": "2023-02-27T00:17:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "What happens when you run heat_conduction-opt manually?\nmamba activate moose\n/path/to/heat_conduction-opt -h\nI would tell you exactly where it is, but you posted a picture of text, and I can't copy text from a picture. This is part of the reason why we ask folks not to post pictures of text.",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5123029",
                          "updatedAt": "2023-02-27T13:52:52Z",
                          "publishedAt": "2023-02-27T13:52:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MohamedAbdulHameed"
                          },
                          "bodyText": "Sorry about that! Here is the text in the picture:\n(peacock) mohamed@pop-os:~/projects/moose/modules/heat_conduction$ ~/projects/moose/python/peacock/peacock -i therm_step03a.i\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 255, 255, 255, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 255, 255, 255, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 255, 255, 255, 255'\nFound executable: /home/mohamed/projects/moose/modules/heat_conduction/heat_conduction-opt\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 255, 255, 255, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 255, 255, 255, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 255, 255, 255, 255'\nExodus filenames: ['peacock_run_exe_tmp_therm_step03a_out.e']\nPostprocessor filenames: ['peacock_run_exe_tmp_therm_step03a_out.csv']\nVectorPostprocessor filenames: ['peacock_run_exe_tmp_therm_step03a_out_t_sampler_*.csv']\nRunning command: mpiexec -n 2 /home/mohamed/projects/moose/modules/heat_conduction/heat_conduction-opt Outputs/csv=true --n-threads=2 --allow-test-objects -i peacock_run_exe_tmp_therm_step03a.i\nWorking directory: /home/mohamed/projects/moose/modules/heat_conduction\nFailed to start\n\nWhen I just run heat_conduction-opt, it runs normally and outputs an exodus file.\nSorry agian.",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5137433",
                          "updatedAt": "2023-02-28T03:44:25Z",
                          "publishedAt": "2023-02-28T03:43:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "even when you use mpiexec?",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5137471",
                          "updatedAt": "2023-02-28T03:50:19Z",
                          "publishedAt": "2023-02-28T03:50:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MohamedAbdulHameed"
                          },
                          "bodyText": "Yes:\n(moose) mohamed@pop-os:~/projects/moose/modules/heat_conduction$ mpiexec ./heat_conduction-opt -i therm_step03a.i\nFramework Information:\nMOOSE Version:           git commit b64f40a3b0 on 2023-02-23\nLibMesh Version:         \nPETSc Version:           3.16.6\nSLEPc Version:           3.16.2\nCurrent Time:            Tue Feb 28 04:07:31 2023\nExecutable Timestamp:    Fri Feb 24 01:57:14 2023\n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   121\n  Elems:                   100\n  Num Subdomains:          1\n\nNonlinear System:\n  Num DOFs:                121\n  Num Local DOFs:          121\n  Variables:               \"T\" \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             ConstantDT\n  Solver Mode:             Preconditioned JFNK\n\n\nTime Step 0, time = 0\n\nTime Step 1, time = 1, dt = 1\n 0 Nonlinear |R| = 1.901085e+03\n      0 Linear |R| = 1.901085e+03\n      1 Linear |R| = 4.496559e+01\n      2 Linear |R| = 8.158761e-01\n      3 Linear |R| = 1.191520e-02\n 1 Nonlinear |R| = 1.201871e-02\n      0 Linear |R| = 1.201871e-02\n      1 Linear |R| = 2.811674e-04\n      2 Linear |R| = 5.588451e-06\n      3 Linear |R| = 9.885447e-08\n 2 Nonlinear |R| = 1.000931e-07\n Solve Converged!\n.\n.\n.\nTime Step 5, time = 5, dt = 1\n 0 Nonlinear |R| = 1.982633e+03\n      0 Linear |R| = 1.982633e+03\n      1 Linear |R| = 4.591619e+01\n      2 Linear |R| = 7.270160e-01\n      3 Linear |R| = 1.220578e-02\n 1 Nonlinear |R| = 1.234641e-02\n      0 Linear |R| = 1.234641e-02\n      1 Linear |R| = 3.148570e-04\n      2 Linear |R| = 5.781389e-06\n      3 Linear |R| = 9.320412e-08\n 2 Nonlinear |R| = 9.384514e-08\n Solve Converged!",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5141698",
                          "updatedAt": "2023-02-28T09:09:33Z",
                          "publishedAt": "2023-02-28T09:09:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "What operating system are you running on? I'd like to try and reproduce if possible.",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5149285",
                          "updatedAt": "2023-02-28T14:04:59Z",
                          "publishedAt": "2023-02-28T14:04:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "with two processes too?\nThis is how you are running it with peacock.\nANyhow it doesnt look like it s the problem",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5150138",
                          "updatedAt": "2023-02-28T14:57:56Z",
                          "publishedAt": "2023-02-28T14:57:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MohamedAbdulHameed"
                          },
                          "bodyText": "I am running it on the Pop!_OS distribution of Linux.\nI'd like to add I have installed UCX on another environment in conda.\nAnd yes, running mpirun -np 2 ./heat_conduction-opt -i input.i still produces an exodus file.\nYou can just tell me how to reset everything and delete any history of things I could have unknowingly messed up.",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5158539",
                          "updatedAt": "2023-02-28T20:22:15Z",
                          "publishedAt": "2023-02-28T20:22:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I can reproduce the issue when I hit the \"Clone\" button... I do not know what this is supposed to do. But after you do it, and attempt to re-open Peacock (it loads up correctly), but when I attempt to \"execute\" again, Peacock dies almost immediately. git state detects no changes to any Peacock code. However, the terminal output suggests I need to clean out the location where the input file sits:\nThe csv file peacock_run_exe_tmp_additional_volume_out.csv exists but is old (1677694386.6725085) compared to the run start time (1677694539.0).\nRunning command: /Users/me/projects/moose/modules/combined/combined-opt Outputs/csv=true -i peacock_run_exe_tmp_additional_volume.i\nWorking directory: /Users/me/projects/moose/modules/combined/test/tests/ad_cavity_pressure\nzsh: segmentation fault  peacock -i additional_volume.i\n\nThese files must be deleted:\npeacock_run_exe_tmp_additional_volume.i\npeacock_run_exe_tmp_additional_volume_out.csv\npeacock_run_exe_tmp_additional_volume_out.e\n\nAfter I delete these, I can run \"execute\" again, without a crash.",
                          "url": "https://github.com/idaholab/moose/discussions/23535#discussioncomment-5169791",
                          "updatedAt": "2023-03-01T18:20:17Z",
                          "publishedAt": "2023-03-01T18:20:17Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}