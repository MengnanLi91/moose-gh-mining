{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wNi0xMlQxMTo1MTo0NS0wNTowMM4AZ_Xo"
    },
    "edges": [
      {
        "node": {
          "title": "Segmentation fault",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "After running my input script below is the error I get.\nmpirun noticed that process rank 0 with PID 28365 on node tc007 exited on signal 11 (Segmentation fault).\n\nAny help?",
          "url": "https://github.com/idaholab/moose/discussions/27790",
          "updatedAt": "2024-06-13T04:47:56Z",
          "publishedAt": "2024-06-04T20:46:40Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you reproduce the error in serial? It would be easier to debug",
                  "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9670780",
                  "updatedAt": "2024-06-04T23:46:22Z",
                  "publishedAt": "2024-06-04T23:46:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Can you elaborate on that?",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9670926",
                          "updatedAt": "2024-06-05T00:21:32Z",
                          "publishedAt": "2024-06-05T00:21:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If you run with mpirun -n 1 can you get the same error?",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9671125",
                          "updatedAt": "2024-06-05T00:57:09Z",
                          "publishedAt": "2024-06-05T00:57:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I am new to this and I do not really get your question but below is how I submit my job for it to run\n#!/bin/bash                                                                     \n#SBATCH --job-name fileread_add3                                               \n#SBATCH --out  fileread_add3.out        \n#SBATCH --nodes 1                                                               \n#SBATCH --ntasks 2\n#SBATCH --cpus-per-task 8\n#SBATCH --account amcorrosion                                                  \n##SBATCH --partition normal_q                                                   \n#SBATCH --time=100:00:00    \n##SBATCH --mem=gpu:pascal:4                                                     \n#SBATCH --export=NONE # this makes sure the compute environment is clean        \n#SBATCH --mail-user emmanuel324@vt.edu\n#SBATCH --mail-type=begin\n#SBATCH --mail-type=end\n\n\nmodule reset\nmodule load apps site/tinkercliffs/easybuild/setup\nmodule load apps site/tinkercliffs-rome/easybuild/setup\nmodule load OpenMPI CMake\nexport CC=mpicc CXX=mpicxx FC=mpif90 F90=mpif90 F77=mpif77\nmamba activate python-stack\n\n\ncd \"${submitdir}\"\n#rm kks_multiphase_largescale_large_csv*\n#rm kks_multiphase_largescale_large_out.e*\nmpirun --mca orte_base_help_aggregate 0 -np 2 /home/emmanuel324/projects/belson/belson-opt  -i  fileread_add3.i",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9671148",
                          "updatedAt": "2024-06-05T01:00:39Z",
                          "publishedAt": "2024-06-05T01:00:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "In the final line use -np 1 to use a single process\nYou could also adapt the resource request in the first few lines (sbatch) but it's not necessary",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9671389",
                          "updatedAt": "2024-06-05T01:42:03Z",
                          "publishedAt": "2024-06-05T01:36:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Below is the .out file after using a single process\n*** Warning, This code is deprecated and will be removed in future versions:\n/home/emmanuel324/projects/belson/restartkks/restartkks.i:210.3: The 'Kernels/TensorMechanics' syntax is deprecated. Please use 'Physics/SolidMechanics/QuasiStatic' instead.\ufffd[39m\nStack frames: 14\n0: libMesh::print_trace(std::ostream&)\n1: void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(libMesh::BasicOStreamProxy<char, std::char_traits<char> >&, bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n2: Moose::Builder::walkRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, hit::Node*)\n3: Moose::Builder::walk(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, hit::Node*)\n4: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n5: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n6: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n7: Moose::Builder::build()\n8: MooseApp::setupOptions()\n9: MooseApp::run()\n10: /home/emmanuel324/projects/belson/belson-opt() [0x404253]\n11: main\n12: __libc_start_main\n13: /home/emmanuel324/projects/belson/belson-opt() [0x4044c1]\n\n\n\ufffd[36m\n*** Info ***\nSolidMechanics Action: selecting 'total small strain' formulation. Use `incremental = true` to select 'incremental small strain' instead.\ufffd[39m\n--------------------------------------------------------------------------\nPrimary job  terminated normally, but 1 process returned\na non-zero exit code. Per user-direction, the job has been aborted.\n--------------------------------------------------------------------------\n--------------------------------------------------------------------------\nmpirun noticed that process rank 0 with PID 134860 on node tc037 exited on signal 11 (Segmentation fault)",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9681684",
                          "updatedAt": "2024-06-05T19:14:52Z",
                          "publishedAt": "2024-06-05T19:14:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThis is not the same as a backtrace. You ll have to follow the debugging instructions on the website to get a backtrace",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9683188",
                          "updatedAt": "2024-06-05T23:07:36Z",
                          "publishedAt": "2024-06-05T23:07:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I was trying to get the backtrace following the debugging steps. Did I do something wrong:\n(python-stack) [emmanuel324@tinkercliffs1 belson]$ gdb --args ./belson-dbg -i bicrystal_test6.i\nGNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-120.el7\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-redhat-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from /home/emmanuel324/projects/belson/belson-dbg...Dwarf Error: wrong version in compilation unit header (is 5, should be 2, 3, or 4) [in module /home/emmanuel324/projects/b\nelson/belson-dbg]\n(no debugging symbols found)...done.\n(gdb) b MPI_Abort\nFunction \"MPI_Abort\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\nBreakpoint 1 (MPI_Abort) pending.\n(gdb) r\nStarting program: /home/emmanuel324/projects/belson/./belson-dbg -i bicrystal_test6.i\nDwarf Error: wrong version in compilation unit header (is 5, should be 2, 3, or 4) [in module /home/emmanuel324/projects/belson/test/lib/libbelson_test-dbg.so.0]\nKilled",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9756595",
                          "updatedAt": "2024-06-12T21:31:24Z",
                          "publishedAt": "2024-06-12T21:31:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "does this\n /home/emmanuel324/projects/belson/./belson-dbg -i bicrystal_test6.i\n\nrun outside the debugger?",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9757607",
                          "updatedAt": "2024-06-13T00:47:46Z",
                          "publishedAt": "2024-06-13T00:47:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Below is the outcome\n(base) [emmanuel324@tinkercliffs1 belson]$  /home/emmanuel324/projects/belson/./belson-dbg -i bicrystal_test6.i\nSetting UpIn UnstructuredMesh::stitch_meshes:\nThis mesh has 228 nodes on boundary `right' (1).\nOther mesh has 174 nodes on boundary `' (7).\nMinimum edge length on both surfaces is 1.\nIn UnstructuredMesh::stitch_meshes:\nFound 0 matching nodes.\n.\n  Initializing\n    Initializing Equation Systems...........                                             [ 64.13 s] [  850 MB]\n    Initializing Displaced Equation System....                                           [ 31.04 s] [  850 MB]\n  Finished Initializing                                                                  [ 98.68 s] [  850 MB]\nFinished Setting Up                                                                      [120.91 s] [  850 MB]\nSegmentation fault (core dumped)",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9757668",
                          "updatedAt": "2024-06-13T01:02:27Z",
                          "publishedAt": "2024-06-13T01:02:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok good. Now we just need to figure out the debugger\nnote that this:\nFound 0 matching nodes.\n\nmeans your stitiching is completely failing. Fixing this could remove the problem maybe.. It would be worth for you to take a look into it now",
                          "url": "https://github.com/idaholab/moose/discussions/27790#discussioncomment-9757716",
                          "updatedAt": "2024-06-13T01:11:47Z",
                          "publishedAt": "2024-06-13T01:11:46Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Subdomain do not exist",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "Below is a snippet of my mesh block\n[Mesh]\n   [file]\n      type = FileMeshGenerator\n      file = my_kks_noload_twophase_out.e-s180\n      use_for_exodus_restart = true\n      add_subdomain_ids = '1'\n      add_subdomain_names = file\n   []\n[]\n\nBelow is the error I get I have tried adding the block id but it does not work\nThe following error occurred in the MooseMesh 'mesh' of type MeshGeneratorMesh.check_inp(moose_srv)\nRequested subdomain 1 does not exist.",
          "url": "https://github.com/idaholab/moose/discussions/27803",
          "updatedAt": "2024-06-13T04:48:13Z",
          "publishedAt": "2024-06-05T22:25:49Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe parameter is not at the right place.\nAdd_subdomain_ should be under the Mesh block directly",
                  "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9683152",
                  "updatedAt": "2024-06-05T23:00:32Z",
                  "publishedAt": "2024-06-05T23:00:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "After putting it in the right I still get the error below\n                                                                               [\ufffd[33m  1.36 s\ufffd[39m] [\ufffd[33m  423 MB\ufffd[39m]\nFramework Information:\nMOOSE Version:           git commit 23349b8 on 2024-05-14\nLibMesh Version:         7dbd90ade88cb16a5e855a4c345454c9c146ebec\nPETSc Version:           3.20.3\nSLEPc Version:           3.20.1\nCurrent Time:            Wed Jun  5 19:30:24 2024\nExecutable Timestamp:    Tue Jun  4 18:20:46 2024\n\nParallelism:\n  Num Processors:          2\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   \n    Total:                 37988\n    Local:                 19712\n    Min/Max/Avg:           18276/19712/18994\n  Elems:                   \n    Total:                 35931\n    Local:                 17966\n    Min/Max/Avg:           17965/17966/17965\n  Num Subdomains:          1\n  Num Partitions:          2\n  Partitioner:             metis\n\nNonlinear System:\n  Num DOFs:                151952\n  Num Local DOFs:          78848\n  Variables:               { \"eta0\" \"eta1\" \"disp_x\" \"disp_y\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                251517\n  Num Local DOFs:          125762\n  Variables:               { \"pk2\" \"fp_xx\" \"e_xx\" } { \"eta0_gss\" \"eta0_slip_increment\" } { \"eta1_gss\" \n                             \"eta1_slip_increment\" } { \"eta0_stress_xx\" \"eta1_stress_xx\" } \n  Finite Element Types:    \"MONOMIAL\" \"MONOMIAL\" \"MONOMIAL\" \"MONOMIAL\" \n  Approximation Orders:    \"CONSTANT\" \"CONSTANT\" \"CONSTANT\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             IterationAdaptiveDT\n  TimeIntegrator:          ImplicitEuler\n  Solver Mode:             Preconditioned JFNK\n  PETSc Preconditioner:    asm \n  MOOSE Preconditioner:    SMP\n\nCurrently Executing\n  Performing Initial Setup\n    Setting Up Materials\n      Finished Computing Initial Material Values                                         [\ufffd[33m  0.35 s\ufffd[39m] [\ufffd[33m  643 MB\ufffd[39m]\n    Finished Setting Up Materials                                                        [\ufffd[33m  0.35 s\ufffd[39m] [\ufffd[33m  643 MB\ufffd[39m]\n  Finished Performing Initial Setup                                                      [\ufffd[33m  1.05 s\ufffd[39m] [\ufffd[33m  652 MB\ufffd[39m]\n\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n| time           | e_xx           | eta0_gss       | eta0_slip_increment | eta0_stress_xx | eta1_gss       |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n+----------------+---------------------+----------------+----------------+----------------+\n| time           | eta1_slip_increment | eta1_stress_xx | fp_xx          | pk2            |\n+----------------+---------------------+----------------+----------------+----------------+\n|   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+---------------------+----------------+----------------+----------------+\n\nWarning:  This MeshOutput subclass only supports meshes which are contiguously renumbered!\nlibMesh terminating:\nExodusII_IO_Helper: block id 1 not found in block_ids.\n[0] ../src/mesh/exodusII_io_helper.C, line 3251, compiled May 15 2024 at 20:45:54",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9683307",
                          "updatedAt": "2024-06-05T23:32:21Z",
                          "publishedAt": "2024-06-05T23:32:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "That's a different error\nAdd an exodus block to your outputs block, then specify execute_on to be after block 1 has been created on the mesh",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9683320",
                          "updatedAt": "2024-06-05T23:39:23Z",
                          "publishedAt": "2024-06-05T23:39:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "There is already 'exodus = true' in my output block as shown below\n[Outputs]\n  exodus = true\n  csv = true\n  perf_graph = true\n[]\n\nHow do I implement the second part of your submission?",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9683522",
                          "updatedAt": "2024-06-06T00:19:21Z",
                          "publishedAt": "2024-06-06T00:19:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "See this page\nhttps://mooseframework.inl.gov/moose/source/outputs/Exodus.html",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9683550",
                          "updatedAt": "2024-06-06T00:22:36Z",
                          "publishedAt": "2024-06-06T00:22:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I am kinda confused on what to do. There is little info actually\nI tried the block below but it did not work\n[Outputs]\n  exodus = true\n  csv = true\n  perf_graph = true\n  execute_on = 'INITIAL TIMESTEP_END' \n[]\n\nI also tried using \"output_extra_element_ids\". I could not implement in the blocks.",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9683692",
                          "updatedAt": "2024-06-06T00:48:41Z",
                          "publishedAt": "2024-06-06T00:48:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There are example inputs on that page. You can look at how they defined an Exodus outputs block",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9683786",
                          "updatedAt": "2024-06-06T01:05:10Z",
                          "publishedAt": "2024-06-06T01:05:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I did this\n[Outputs]\n  csv = true\n  perf_graph = true\n  [out]\n    type = Exodus\n    execute_on = 'TIMESTEP_END'\n  []\n[]\n\nAnd it's running now but I do not know if that was the right thing",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9684131",
                          "updatedAt": "2024-06-06T01:55:31Z",
                          "publishedAt": "2024-06-06T01:55:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This looks right",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9684612",
                          "updatedAt": "2024-06-06T03:13:50Z",
                          "publishedAt": "2024-06-06T03:13:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "The simulation is  not done but I see some steps being skipped in the .out file. Is this major issue.\nBelow is the the .out file\nUsing EXPERIMENTAL Stateful Material Property projection with Adaptivity!\nFinished Setting Up                                                                      [\ufffd[33m  1.36 s\ufffd[39m] [\ufffd[33m  423 MB\ufffd[39m]\nFramework Information:\nMOOSE Version:           git commit 23349b8 on 2024-05-14\nLibMesh Version:         7dbd90ade88cb16a5e855a4c345454c9c146ebec\nPETSc Version:           3.20.3\nSLEPc Version:           3.20.1\nCurrent Time:            Wed Jun  5 23:30:22 2024\nExecutable Timestamp:    Tue Jun  4 18:20:46 2024\n\nParallelism:\n  Num Processors:          2\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   \n    Total:                 37988\n    Local:                 19712\n    Min/Max/Avg:           18276/19712/18994\n  Elems:                   \n    Total:                 35931\n    Local:                 17966\n    Min/Max/Avg:           17965/17966/17965\n  Num Subdomains:          1\n  Num Partitions:          2\n  Partitioner:             metis\n\nNonlinear System:\n  Num DOFs:                151952\n  Num Local DOFs:          78848\n  Variables:               { \"eta0\" \"eta1\" \"disp_x\" \"disp_y\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                251517\n  Num Local DOFs:          125762\n  Variables:               { \"pk2\" \"fp_xx\" \"e_xx\" } { \"eta0_gss\" \"eta0_slip_increment\" } { \"eta1_gss\" \n                             \"eta1_slip_increment\" } { \"eta0_stress_xx\" \"eta1_stress_xx\" } \n  Finite Element Types:    \"MONOMIAL\" \"MONOMIAL\" \"MONOMIAL\" \"MONOMIAL\" \n  Approximation Orders:    \"CONSTANT\" \"CONSTANT\" \"CONSTANT\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             IterationAdaptiveDT\n  TimeIntegrator:          ImplicitEuler\n  Solver Mode:             Preconditioned JFNK\n  PETSc Preconditioner:    lu \n  MOOSE Preconditioner:    SMP\n\nCurrently Executing\n  Performing Initial Setup\n    Setting Up Materials\n      Finished Computing Initial Material Values                                         [\ufffd[33m  0.34 s\ufffd[39m] [\ufffd[33m  644 MB\ufffd[39m]\n    Finished Setting Up Materials                                                        [\ufffd[33m  0.34 s\ufffd[39m] [\ufffd[33m  644 MB\ufffd[39m]\n  Finished Performing Initial Setup                                                      [\ufffd[33m  1.03 s\ufffd[39m] [\ufffd[33m  652 MB\ufffd[39m]\n\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n| time           | e_xx           | eta0_gss       | eta0_slip_increment | eta0_stress_xx | eta1_gss       |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n+----------------+---------------------+----------------+----------------+----------------+\n| time           | eta1_slip_increment | eta1_stress_xx | fp_xx          | pk2            |\n+----------------+---------------------+----------------+----------------+----------------+\n|   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+---------------------+----------------+----------------+----------------+\n\n\nTime Step 1, time = 0.0005, dt = 0.0005\n 0 Nonlinear |R| = \ufffd[32m1.238731e+01\ufffd[39m\n      0 Linear |R| = \ufffd[32m1.238731e+01\ufffd[39m\n      1 Linear |R| = \ufffd[32m1.075551e-02\ufffd[39m\n 1 Nonlinear |R| = \ufffd[32m2.385894e-02\ufffd[39m\n      0 Linear |R| = \ufffd[32m2.385894e-02\ufffd[39m\n      1 Linear |R| = \ufffd[32m3.169581e-08\ufffd[39m\n 2 Nonlinear |R| = \ufffd[32m4.903236e-09\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m 18.27 s\ufffd[39m] [\ufffd[33m  755 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n\nOutlier Variable Residual Norms:\n  disp_x: \ufffd[31m3.895046e-09\ufffd[39m\n  disp_y: \ufffd[31m2.978311e-09\ufffd[39m\n\nPostprocessor Values:\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n| time           | e_xx           | eta0_gss       | eta0_slip_increment | eta0_stress_xx | eta1_gss       |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-04 |   0.000000e+00 |   6.080000e+01 |       -1.304814e-55 |   1.316273e-03 |           -nan |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n+----------------+---------------------+----------------+----------------+----------------+\n| time           | eta1_slip_increment | eta1_stress_xx | fp_xx          | pk2            |\n+----------------+---------------------+----------------+----------------+----------------+\n|   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-04 |                -nan |           -nan |   1.000000e+00 |   5.513992e-04 |\n+----------------+---------------------+----------------+----------------+----------------+\n\n  Finished Adapting Mesh                                                                 [\ufffd[33m  9.49 s\ufffd[39m] [\ufffd[33m 1110 MB\ufffd[39m]\n\nTime Step 2, time = 0.0011, dt = 0.0006\n 0 Nonlinear |R| = \ufffd[32m1.663910e+01\ufffd[39m\n\n    Computing Jacobian                                                                   [\ufffd[33m  5.10 s\ufffd[39m] [\ufffd[33m 1157 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m1.663910e+01\ufffd[39m\n      1 Linear |R| = \ufffd[32m1.161480e-01\ufffd[39m\n      2 Linear |R| = \ufffd[32m3.460144e-04\ufffd[39m\n 1 Nonlinear |R| = \ufffd[32m1.169844e-01\ufffd[39m\n    Computing Jacobian                                                                   [\ufffd[33m  5.16 s\ufffd[39m] [\ufffd[33m 1707 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m1.169844e-01\ufffd[39m\n      1 Linear |R| = \ufffd[32m2.061683e-07\ufffd[39m\n 2 Nonlinear |R| = \ufffd[32m7.027928e-09\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m 46.94 s\ufffd[39m] [\ufffd[33m 1188 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n\nOutlier Variable Residual Norms:\n  disp_x: \ufffd[31m5.378809e-09\ufffd[39m\n  disp_y: \ufffd[31m4.523293e-09\ufffd[39m\n\nPostprocessor Values:\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n| time           | e_xx           | eta0_gss       | eta0_slip_increment | eta0_stress_xx | eta1_gss       |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-04 |   0.000000e+00 |   6.080000e+01 |       -1.304814e-55 |   1.316273e-03 |           -nan |\n|   1.100000e-03 |   0.000000e+00 |   6.080000e+01 |       -7.176719e-51 |   2.879104e-03 |           -nan |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n+----------------+---------------------+----------------+----------------+----------------+\n| time           | eta1_slip_increment | eta1_stress_xx | fp_xx          | pk2            |\n+----------------+---------------------+----------------+----------------+----------------+\n|   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-04 |                -nan |           -nan |   1.000000e+00 |   5.513992e-04 |\n|   1.100000e-03 |                -nan |           -nan |   1.000000e+00 |   1.206084e-03 |\n+----------------+---------------------+----------------+----------------+----------------+\n\n  Adapting Mesh\n    Finished Adapting Mesh                                                               [\ufffd[33m  3.55 s\ufffd[39m] [\ufffd[33m 1364 MB\ufffd[39m]\n  Finished Adapting Mesh                                                                 [\ufffd[33m 11.61 s\ufffd[39m] [\ufffd[33m 1325 MB\ufffd[39m]\n\nTime Step 3, time = 0.00182, dt = 0.00072\n 0 Nonlinear |R| = \ufffd[32m2.122967e+01\ufffd[39m\n      0 Linear |R| = \ufffd[32m2.122967e+01\ufffd[39m\n      1 Linear |R| = \ufffd[32m1.114468e-01\ufffd[39m\n      2 Linear |R| = \ufffd[32m7.728442e-04\ufffd[39m\n 1 Nonlinear |R| = \ufffd[32m1.137920e-01\ufffd[39m\n\n    Computing Jacobian                                                                   [\ufffd[33m  5.54 s\ufffd[39m] [\ufffd[33m 1915 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m1.137920e-01\ufffd[39m\n      1 Linear |R| = \ufffd[32m1.859807e-07\ufffd[39m\n 2 Nonlinear |R| = \ufffd[32m8.854351e-09\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m 48.06 s\ufffd[39m] [\ufffd[33m 1410 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n\nOutlier Variable Residual Norms:\n  disp_x: \ufffd[31m6.904315e-09\ufffd[39m\n  disp_y: \ufffd[31m5.543462e-09\ufffd[39m\n\nPostprocessor Values:\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n| time           | e_xx           | eta0_gss       | eta0_slip_increment | eta0_stress_xx | eta1_gss       |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-04 |   0.000000e+00 |   6.080000e+01 |       -1.304814e-55 |   1.316273e-03 |           -nan |\n|   1.100000e-03 |   0.000000e+00 |   6.080000e+01 |       -7.176719e-51 |   2.879104e-03 |           -nan |\n|   1.820000e-03 |   0.000000e+00 |   6.080000e+01 |       -1.588706e-48 |   4.749282e-03 |           -nan |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n+----------------+---------------------+----------------+----------------+----------------+\n| time           | eta1_slip_increment | eta1_stress_xx | fp_xx          | pk2            |\n+----------------+---------------------+----------------+----------------+----------------+\n|   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-04 |                -nan |           -nan |   1.000000e+00 |   5.513992e-04 |\n|   1.100000e-03 |                -nan |           -nan |   1.000000e+00 |   1.206084e-03 |\n|   1.820000e-03 |                -nan |           -nan |   1.000000e+00 |   1.989520e-03 |\n+----------------+---------------------+----------------+----------------+----------------+\n\nMesh unchanged, skipping remaining steps...\n\nTime Step 4, time = 0.002684, dt = 0.000864\n 0 Nonlinear |R| = \ufffd[32m2.547520e+01\ufffd[39m\n      0 Linear |R| = \ufffd[32m2.547520e+01\ufffd[39m\n      1 Linear |R| = \ufffd[32m9.931555e-02\ufffd[39m\n      2 Linear |R| = \ufffd[32m1.956635e-03\ufffd[39m\n 1 Nonlinear |R| = \ufffd[32m1.042815e-01\ufffd[39m\n\n    Computing Jacobian                                                                   [\ufffd[33m  5.52 s\ufffd[39m] [\ufffd[33m 1914 MB\ufffd[39m]\n      0 Linear |R| = \ufffd[32m1.042815e-01\ufffd[39m\n      1 Linear |R| = \ufffd[32m2.162908e-07\ufffd[39m\n 2 Nonlinear |R| = \ufffd[32m1.016610e-08\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m 47.15 s\ufffd[39m] [\ufffd[33m 1372 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n\nOutlier Variable Residual Norms:\n  disp_x: \ufffd[31m8.131545e-09\ufffd[39m\n  disp_y: \ufffd[31m6.101432e-09\ufffd[39m\n\nPostprocessor Values:\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n| time           | e_xx           | eta0_gss       | eta0_slip_increment | eta0_stress_xx | eta1_gss       |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-04 |   0.000000e+00 |   6.080000e+01 |       -1.304814e-55 |   1.316273e-03 |           -nan |\n|   1.100000e-03 |   0.000000e+00 |   6.080000e+01 |       -7.176719e-51 |   2.879104e-03 |           -nan |\n|   1.820000e-03 |   0.000000e+00 |   6.080000e+01 |       -1.588706e-48 |   4.749282e-03 |           -nan |\n|   2.684000e-03 |   0.000000e+00 |   6.080000e+01 |       -7.729560e-47 |   7.003887e-03 |           -nan |\n+----------------+----------------+----------------+---------------------+----------------+----------------+\n+----------------+---------------------+----------------+----------------+----------------+\n| time           | eta1_slip_increment | eta1_stress_xx | fp_xx          | pk2            |\n+----------------+---------------------+----------------+----------------+----------------+\n|   0.000000e+00 |        0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-04 |                -nan |           -nan |   1.000000e+00 |   5.513992e-04 |\n|   1.100000e-03 |                -nan |           -nan |   1.000000e+00 |   1.206084e-03 |\n|   1.820000e-03 |                -nan |           -nan |   1.000000e+00 |   1.989520e-03 |\n|   2.684000e-03 |                -nan |           -nan |   1.000000e+00 |   2.933995e-03 |\n+----------------+---------------------+----------------+----------------+----------------+\n\nMesh unchanged, skipping remaining steps...\n\nTime Step 5, time = 0.0037208, dt = 0.0010368\n 0 Nonlinear |R| = \ufffd[32m3.057036e+01\ufffd[39m\n      0 Linear |R| = \ufffd[32m3.057036e+01\ufffd[39m",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9684782",
                          "updatedAt": "2024-06-06T03:37:09Z",
                          "publishedAt": "2024-06-06T03:37:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The exodus file has a different name now. It matches the name in the exodus output block",
                          "url": "https://github.com/idaholab/moose/discussions/27803#discussioncomment-9684799",
                          "updatedAt": "2024-06-06T03:38:42Z",
                          "publishedAt": "2024-06-06T03:38:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Template T (Real or RealValueTensor",
          "author": {
            "login": "ashishdhole"
          },
          "bodyText": "Hello,\nI want to make anisotropic interface mobility 'L' anisotropic using a tensor material. In ACBulk.h there is a comment\n/**\n * This is the Allen-Cahn equation base class that implements the bulk or\n * local energy term of the equation. It is templated on the type of the mobility,\n * which can be either a number (Real) or a tensor (RealValueTensor).\n * Note that the function computeDFDOP MUST be overridden in any kernel that inherits from\n * ACBulk.\n */\ntemplate <typename T>\n\nHow to make my input file know that I want to using 'L' as tensor?\nBecause when I am using 'L' as tensor material, I am getting following error\n*** ERROR ***\nThe following error occurred in the object \"AC_bulk_F\", of type \"KKSACBulkF\".\n\nThe requested non-AD material property 'L' of type 'double'\nis already retrieved or declared as a non-AD property of type 'libMesh::TensorValue<double>'.\n\nHere, AC_bulk_F block has type = KKSACBulkF.\nThank you\nAshish",
          "url": "https://github.com/idaholab/moose/discussions/27814",
          "updatedAt": "2024-06-13T03:29:09Z",
          "publishedAt": "2024-06-07T00:19:18Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe template should be instantiated in the source code.\nThe object with the tensor instantiating (T is RealTensorValue) will have a different name (usually just Tensor added somewhere in the name)\nThat object is then created in the input file (with its different name)",
                  "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9696433",
                  "updatedAt": "2024-06-07T03:52:27Z",
                  "publishedAt": "2024-06-07T03:52:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "I am really sorry but I don't quite understand what exactly need to be done here. Is there any example I can look at for such changes?\nThank you\nAshish",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9705647",
                          "updatedAt": "2024-06-07T17:46:18Z",
                          "publishedAt": "2024-06-07T17:46:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "Do I have to save the source file in my application folder and make changes to it?",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9708410",
                          "updatedAt": "2024-06-07T23:20:56Z",
                          "publishedAt": "2024-06-07T23:20:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "#pragma once\n\n#include \"KernelValue.h\"\n#include \"JvarMapInterface.h\"\n#include \"DerivativeMaterialInterface.h\"\n\n/**\n * This is the Allen-Cahn equation base class that implements the bulk or\n * local energy term of the equation. It is templated on the type of the mobility,\n * which can be either a number (Real) or a tensor (RealValueTensor).\n * Note that the function computeDFDOP MUST be overridden in any kernel that inherits from\n * ACBulk.\n */\ntemplate <typename T>\nclass ACBulk : public DerivativeMaterialInterface<JvarMapKernelInterface<KernelValue>>\n{\npublic:\n  ACBulk(const InputParameters & parameters);\n\n  static InputParameters validParams();\n  virtual void initialSetup();\n\nprotected:\n  virtual Real precomputeQpResidual();\n  virtual Real precomputeQpJacobian();\n  virtual Real computeQpOffDiagJacobian(unsigned int jvar);\n\n  enum PFFunctionType\n  {\n    Jacobian,\n    Residual\n  };\n\n  virtual Real computeDFDOP(PFFunctionType type) = 0;\n\n  /// Mobility\n  const MaterialProperty<T> & _L;\n\n  /// Mobility derivative w.r.t. order parameter\n  const MaterialProperty<T> & _dLdop;\n\n  /// Mobility derivative w.r.t coupled variables\n  std::vector<const MaterialProperty<T> *> _dLdarg;\n};\n\ntemplate <typename T>\nACBulk<T>::ACBulk(const InputParameters & parameters)\n  : DerivativeMaterialInterface<JvarMapKernelInterface<KernelValue>>(parameters),\n    _L(getMaterialProperty<T>(\"mob_name\")),\n    _dLdop(getMaterialPropertyDerivative<T>(\"mob_name\", _var.name())),\n    _dLdarg(_n_args)\n{\n  // Iterate over all coupled variables\n  for (unsigned int i = 0; i < _n_args; ++i)\n    _dLdarg[i] = &getMaterialPropertyDerivative<T>(\"mob_name\", i);\n}\n\ntemplate <typename T>\nInputParameters\nACBulk<T>::validParams()\n{\n  InputParameters params = JvarMapKernelInterface<KernelValue>::validParams();\n  params.addClassDescription(\"Allen-Cahn base Kernel\");\n  params.addParam<MaterialPropertyName>(\"mob_name\", \"L\", \"The mobility used with the kernel\");\n  return params;\n}\n\ntemplate <typename T>\nvoid\nACBulk<T>::initialSetup()\n{\n  validateNonlinearCoupling<Real>(\"mob_name\");\n}\n\ntemplate <typename T>\nReal\nACBulk<T>::precomputeQpResidual()\n{\n  // Get free energy derivative from function\n  Real dFdop = computeDFDOP(Residual);\n\n  // Set residual\n  return _L[_qp] * dFdop;\n}\n\ntemplate <typename T>\nReal\nACBulk<T>::precomputeQpJacobian()\n{\n  // Get free energy derivative and Jacobian\n  Real dFdop = computeDFDOP(Residual);\n\n  Real JdFdop = computeDFDOP(Jacobian);\n\n  // Set Jacobian value using product rule\n  return _L[_qp] * JdFdop + _dLdop[_qp] * _phi[_j][_qp] * dFdop;\n}\n\ntemplate <typename T>\nReal\nACBulk<T>::computeQpOffDiagJacobian(unsigned int jvar)\n{\n  // Get the coupled variable jvar is referring to\n  const unsigned int cvar = mapJvarToCvar(jvar);\n\n  // Set off-diagonal Jacobian term from mobility derivatives\n  return (*_dLdarg[cvar])[_qp] * _phi[_j][_qp] * computeDFDOP(Residual) * _test[_i][_qp];\n}\n\nusing RealACBulk = ACBulk<Real>;\nusing TensorACBulk = ACBulk<RealTensorValue>;\n\nIs this a correct way to Instantiate template?\nAshish",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9709191",
                          "updatedAt": "2024-06-08T01:53:32Z",
                          "publishedAt": "2024-06-08T01:53:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nFirst you should look in the phase field module if there is a tensor version of KKSACBulkF\nif not then you are right you will need to instantiate ACBuild with a RealTensorValue if it has not been done already\nLike this:\n typedef ACBulk<RealTensorValue> TensorACBulk;\n\nif you want to call ACBulk<RealTensorValue> by the name TensorACBulk. However you don't really need to do that, when you define the derived class you could just write ACBulk<RealTensorValue> and the template will be instantiated then",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9711008",
                          "updatedAt": "2024-06-08T06:32:37Z",
                          "publishedAt": "2024-06-08T06:32:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "Hello thanks for the help. One more C++ related question. DO I have to use template class  ACBulk<RealTensorValue>; in my KKSACBulkBase.C to use tensor type material property _L mentioned in ACBulk.h?\nAshish",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9715622",
                          "updatedAt": "2024-06-08T18:12:31Z",
                          "publishedAt": "2024-06-08T18:12:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "I am getting following error\nerror: cannot convert 'libMesh::boostcopy::enable_if_c<true, libMesh::TypeTensor<double> >::type' {aka 'libMesh::TypeTensor<double>'} to 'libMesh::Real' {aka 'double'} in return\n   82 |   return _L[_qp] * dFdop;\n\nwhen I am instantiating the template as RealTensorValue. The error is from ACBulk.h file\nThank you\nAshish",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9715636",
                          "updatedAt": "2024-06-08T18:14:52Z",
                          "publishedAt": "2024-06-08T18:14:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "is it because the Real and RealTensorValue mulitplication in\ntemplate <typename T>\nReal\nACBulk<T>::precomputeQpResidual()\n{\n  // Get free energy derivative from function\n  Real dFdop = computeDFDOP(Residual);\n\n  // Set residual\n  return _L[_qp] * dFdop;\n}\n\nin ACBulk.h is not valid?\nAshish",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9715719",
                          "updatedAt": "2024-06-08T18:32:20Z",
                          "publishedAt": "2024-06-08T18:32:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This operation should amount to a Real, the residual\nIf _L is a tensor this does not work.\nMaybe it should be a different expression than this when _L is a tensor? Like something that contracts the dimension, or maybe accesses a certain component of the tensor",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9717081",
                          "updatedAt": "2024-06-09T02:32:45Z",
                          "publishedAt": "2024-06-09T02:31:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "if L is given as a tensor in the input, how to choose individual component? I am trying to create anisotropic mobility.",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9758288",
                          "updatedAt": "2024-06-13T03:04:23Z",
                          "publishedAt": "2024-06-13T03:04:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Usually it's the parenthesis operator for components.\nSee the doxygen or AuxKernels that output tensor compoonents for this",
                          "url": "https://github.com/idaholab/moose/discussions/27814#discussioncomment-9758410",
                          "updatedAt": "2024-06-13T03:29:09Z",
                          "publishedAt": "2024-06-13T03:29:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How can I solve the error about \"Not a registered object.\"",
          "author": {
            "login": "Y-Y-JIn"
          },
          "bodyText": "Hello, I got this error message after running the input file. How can I do now?? please help me to fix it.\nA 'CoupledSplitCHInterface' is not a registered object.\nIf you are trying to find this object in a dynamically linked library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.",
          "url": "https://github.com/idaholab/moose/discussions/27771",
          "updatedAt": "2024-06-13T01:59:18Z",
          "publishedAt": "2024-06-03T14:10:05Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Rahim-Habibi"
                  },
                  "bodyText": "See this issue #27623\nhope it will help you.\nRahim",
                  "url": "https://github.com/idaholab/moose/discussions/27771#discussioncomment-9650442",
                  "updatedAt": "2024-06-03T15:24:38Z",
                  "publishedAt": "2024-06-03T15:23:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes make sure to include the right module inn your makefile then recompile",
                          "url": "https://github.com/idaholab/moose/discussions/27771#discussioncomment-9657003",
                          "updatedAt": "2024-06-04T02:46:45Z",
                          "publishedAt": "2024-06-04T02:46:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "HakunanMatatat"
                  },
                  "bodyText": "idaholab/mastodon#448\nI have the same problem, all the modules in the makefile are loaded.",
                  "url": "https://github.com/idaholab/moose/discussions/27771#discussioncomment-9757981",
                  "updatedAt": "2024-06-13T01:59:18Z",
                  "publishedAt": "2024-06-13T01:59:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "deformation induced grain nucleation for dynamic recrystallization",
          "author": {
            "login": "jbair34"
          },
          "bodyText": "Hi All,\nI am having trouble figuring out how to make new grains nucleate in a dynamic recrystallization model with deformation induced nucleation. I am trying to follow the https://mooseframework.inl.gov/modules/phase_field/Nucleation/DiscreteNucleation.html instructions below:\n\"Direct order parameter modification\n...\nNucleation of new grains in a polycrystalline model with GrainTracker requires the use of reserved (or staging) order parameters (order parameters which the grain tracker detects new grains in, but never uses as a target for remapping) in which new grain nuclei can be inserted and successively get picked up and remapped onto the evolving order parameters.\nApply both a DiscreteNucleationForce and a Reaction kernel to a reserved order parameter and set the hold_time in the inserter to 0. This will cause the modification of the reserved OP during only a single timestep, which will be enough for the GrainTracker to pick up and remap the new nucleus.\"\nFrom that I have made a discrete nucleation inserter which has a rate dependent on the stress as a function of dislocation density and it does make the nuclei as the domain deforms. However, the nuclei just disappear without forming new grains. Is there something missing in this description where I can set a new random euler angle in the nucleus or make sure the relevant non conserved OP goes to 0 or something so a new grain will form?\nI have combined moose/modules/combined/examples/phase_field-mechanics/hex_grain_growth_2D_eldrforce.i with the nucleation inputs in moose/modules/phase_field/examples/nucleation/refine.i which I modified as a test to have a probability linked to the vonmises stress. The probability seems to work fine putting nuclei in reasonable locations they just don't seem to stick...\nThanks,\nJake",
          "url": "https://github.com/idaholab/moose/discussions/20093",
          "updatedAt": "2024-06-13T01:55:19Z",
          "publishedAt": "2022-01-20T20:27:51Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "Hi Jake- when you say the particles are appearing and disappearing, are you saying that based on what's happening in the reserved order parameter? Or are you looking an AuxVariable generated by DiscreteNucleationAux? I'm trying to figure out if the problem is with the reserved OP not getting modified, or with the GrainTracker not picking it up and remapping it.",
                  "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2019485",
                  "updatedAt": "2022-06-04T14:43:28Z",
                  "publishedAt": "2022-01-21T22:51:18Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jbair34"
                          },
                          "bodyText": "I am looking at the reserved order parameter, I can see where the nuclei are supposed to be, but the maximum value of my reserved order parameter (gr7 in my case) in the center of the nuclei is around 0.06 which doesn't seem like enough to cause remapping to me. I set the nuc_value to 1 in the discreteNucleationForce kernel but that doesn't seem to be happening. I wasn't paying attention to how low they were before my last post so sorry for missing that information the first time around.",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2019843",
                          "updatedAt": "2022-06-04T14:43:29Z",
                          "publishedAt": "2022-01-22T00:13:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Are you sure you have the reaction kernel in place and also assigned to the reserved OP? There should only be 2 kernels associated with the reserved OP, DiscreteNucleationForce and Reaction. I thought the Reaction kernel should make the reserved OP value to match the DiscreteNucleationForce value exactly.",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2019872",
                          "updatedAt": "2022-06-04T14:43:31Z",
                          "publishedAt": "2022-01-22T00:26:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jbair34"
                          },
                          "bodyText": "Here is my input for the kernels (reserved OP 3rd and 4th entries):\n[Kernels]\n  [./PolycrystalKernel]\n  [../]\n  [./PolycrystalElasticDrivingForce]\n  [../]\n  [./nuc_force]\n    type = DiscreteNucleationForce\n    variable = gr7\n    map = map\n    no_nucleus_value = 0\n    nucleus_value = 2\n  [../]\n  [./nuc_react]\n    type = Reaction\n    variable = gr7\n  [../]\n  [./TensorMechanics]\n    displacements = 'disp_x disp_y'\n  [../]\n[]\n\nMy grain tracker set up for 8 OPs is as follows:\n[./grain_tracker]\n    type = GrainTrackerElasticity\n    threshold = 0.2\n    compute_var_to_feature_map = true\n    execute_on = 'initial timestep_begin'\n    flood_entity_type = ELEMENTAL\n\n    fill_method = symmetric9\n    C_ijkl = '1.27e5 0.708e5 0.708e5 1.27e5 0.708e5 1.27e5 0.7355e5 0.7355e5 0.7355e5'\n    euler_angle_provider = euler_angle_file\n    reserve_op = 1\n    reserve_op_threshold = 0.95\n  [../]\n\nI double checked and it does appear the gr7 is the one that is reserved. I don't see an option to set a value in the Reaction Kernel options...",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2035680",
                          "updatedAt": "2022-06-04T14:43:31Z",
                          "publishedAt": "2022-01-24T16:42:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Are you sure that the PolycrystalKernel action isn't populating kernels for gr7? If you are setting a global num_ops parameter to 8 it is probably adding the kernels for gr7. It might be worth using the DumpObjectsProblem syntax to see exactly what kernels are getting added to your input file. To me it seems like something is keeping gr7 from getting set to exactly the value specified by DiscreteNucleationForce.\nhttps://mooseframework.inl.gov/source/problems/DumpObjectsProblem.html",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2038258",
                          "updatedAt": "2022-09-01T04:53:18Z",
                          "publishedAt": "2022-01-24T22:02:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jbair34"
                          },
                          "bodyText": "I am having trouble getting the DumpObjectsProblem to actually output anything besides Solve Converged on my input file. I can get it to reproduce the example but when I try to run it with:\n./combined-opt -i examples/phase_field-mechanics/hex_grain_growth_2D_eldrforce.i  Problem/type=DumpObjectsProblem Problem/dump_path=Modules/Combined/Master/grain_tracker\nIt is just saying Solve Converged and I don't see an output anywhere to look at. I think from the example that the dump path is asking for the name of the action that I want to look at right?\nI do know that gr7 is not mapped to any grains in the domain initially, and that it only changes once a certain stress threshold is passed when I can see nuclei form but they don't affect the simulation it seems. See the attached images for initial and after significant stress. I have gr7 set to display the max and min value so you can see the nucleation is only getting it to about 0.048.",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2044874",
                          "updatedAt": "2022-09-01T04:53:18Z",
                          "publishedAt": "2022-01-25T17:34:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "I'm not sure that DiscreteNucleation is what's actually causing these nuclei to form. These nuclei don't look spherical and I think the DiscreteNucleationInserter can only insert spherical shapes. So here are a couple of suggestions:\n-Try outputting the nucleation map to an AuxVariable using the DiscreteNucleationAux AuxKernel to see if the positions of these nuclei are in the same position as where the map is putting them\n-Try running without applied stress. Unless the mesh displacement is significantly magnified it looks like there is a very high strain and probably very high elastic energy. It could be that the free energy elastic contribution is so large that it's becoming energetically favorable to form new nuclei in non-zero order parameters.\nAs far as the dump objects problem, I think if you leave the dump path blank it will just show the entire contents of the input file with actions substituted.",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2045556",
                          "updatedAt": "2022-09-01T04:53:20Z",
                          "publishedAt": "2022-01-25T19:20:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jbair34"
                          },
                          "bodyText": "I've output the nucleation map and it is in line with gr7. I think the reason they aren't circles is that the mesh doesn't adapt to gr7 right when the nuclei form so unless the spot is right on a grain boundary the mesh is pretty coarse. I am going to try increasing my nucleus size to see if maybe it is a mesh thing and the nuclei just aren't large enough to increase gr7 higher. I'll post how it goes later today.",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2052670",
                          "updatedAt": "2022-09-01T04:53:20Z",
                          "publishedAt": "2022-01-26T17:24:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jbair34"
                          },
                          "bodyText": "I ran it without stress. I also tried to have the nucleated spots have more refined meshes with a small amount of sucess. The max gr7 is still only getting to about 0.14. The nuc_map values corresponding with those locations is getting up to 1 but it isn't changing gr7 that much and it is also not changing the euler angles. Do you think I should try with a hold time more than the 0 recommended on mooseframework?",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2060596",
                          "updatedAt": "2022-09-01T04:53:22Z",
                          "publishedAt": "2022-01-27T17:05:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "I will ask @SudiptaBiswas to chime in here- she has done this successfully in UO2 with nucleation driven by dislocation density.",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2061256",
                          "updatedAt": "2022-09-01T04:53:23Z",
                          "publishedAt": "2022-01-27T18:41:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SudiptaBiswas"
                          },
                          "bodyText": "Hi Jake, Just from looking at the nucleation events, it appears to me that either the nuclei are too small or the mesh is too coarse. For the mesh, you can try the DiscreteNucleationMarker to refine the mesh around the nucleation location. https://mooseframework.inl.gov/modules/phase_field/Nucleation/DiscreteNucleation.html\nIn some cases, I have seen nuclei disappear when the driving force is not enough for them to grow. It might be good to check if there is a critical nuclei size that you need for your physics.",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-2061478",
                          "updatedAt": "2022-09-01T04:53:23Z",
                          "publishedAt": "2022-01-27T19:12:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "YXY101676"
                  },
                  "bodyText": "Hi, I want to know how you implemented nucleation in polycrystalline structure. I tried to combine the two files you mentioned, but there was an error that the variable could not be found.Can you teach me how to solve this problem?Thanks",
                  "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-8923844",
                  "updatedAt": "2024-03-27T06:11:42Z",
                  "publishedAt": "2024-03-27T06:11:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nplease create your own post and include the input files and the error\nyou can reference this post for context of course\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/20093#discussioncomment-8929278",
                          "updatedAt": "2024-03-27T14:29:30Z",
                          "publishedAt": "2024-03-27T14:29:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to make external code by libtool",
          "author": {
            "login": "lvkas521424"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello, everone :\nCurrently, as far as I can tell from my limited knowledge of moose, the code guidelines are given to the build.mk file, and you can use libtool directly to compile this code and generate external dynamic link libraries for mutiapp to call. I have successfully compiled Cpp and Gfortran code with it and completed its function calls. But now there is a problem that bothers me, currently I have a Fortran based program, but it can only be compiled by ifort, but when I switch the server to ifort environment, compiling it by using moose's libtool tool will show me an error, whereas when I compile it directly with ifort externally, I won't have any problem. I would like to ask you guys why this is the case.\nMy app is named program. The display of the error report looks like this :\n\nyours,\nJiahuiLv",
          "url": "https://github.com/idaholab/moose/discussions/27877",
          "updatedAt": "2024-06-13T01:31:20Z",
          "publishedAt": "2024-06-12T01:19:16Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWe don't support the intel compilers. Pleasery to make your external program be compilable with gfortran and the rest of our compilers, so you can use a consistent set of compilers across the entire program.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27877#discussioncomment-9751346",
                  "updatedAt": "2024-06-12T12:44:58Z",
                  "publishedAt": "2024-06-12T12:44:58Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lvkas521424"
                  },
                  "bodyText": "Thanks for your reply, I'm sorry, I just assumed before that moose's petsc module doesn't support ifort, I will modify my program to accommodate moose doing external coupling.\nyours\nJiahui Lv",
                  "url": "https://github.com/idaholab/moose/discussions/27877#discussioncomment-9757827",
                  "updatedAt": "2024-06-13T01:31:20Z",
                  "publishedAt": "2024-06-13T01:31:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Explicit Dynamics: Initial Velocity Condition",
          "author": {
            "login": "ddm42"
          },
          "bodyText": "Hello! I am trying to run a problem using the \"CentralDifference\" TimeIntegrator derived from the ActuallyExplicitTimeIntergrator class, and there doesn't seem to be a way to set an initial velocity condition on the body. Is there a way to do this? I tried to implement a quick fix in CentralDifference::computeTimeDerivativeHelper() where I could make temporary u_old and u_older variables on the first time step, but I am unable to add or subtract a number from those classes. Is there a better way to implement this?",
          "url": "https://github.com/idaholab/moose/discussions/27880",
          "updatedAt": "2024-06-12T22:15:14Z",
          "publishedAt": "2024-06-12T14:15:34Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIs velocity a variable?\nOr is it computed from the derivative of the displacement?",
                  "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9752961",
                  "updatedAt": "2024-06-12T14:48:47Z",
                  "publishedAt": "2024-06-12T14:48:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ddm42"
                  },
                  "bodyText": "It is computed from the derivative of displacement. I used to extract it as an AuxVariable through the implicit dynamics system. And we were also able to set the initial condition through the auxvariable.",
                  "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9752990",
                  "updatedAt": "2024-06-12T14:51:19Z",
                  "publishedAt": "2024-06-12T14:51:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Setting the intiial value of the auxvariable should be fine.",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9753039",
                          "updatedAt": "2024-06-12T14:55:01Z",
                          "publishedAt": "2024-06-12T14:55:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ddm42"
                          },
                          "bodyText": "It doesn't work with the central difference time integrator. I have tried.",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9753060",
                          "updatedAt": "2024-06-12T14:56:16Z",
                          "publishedAt": "2024-06-12T14:56:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@bwspenc who is a good person to tag for dynamics? I'm guessing @cbolisetti",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9753779",
                          "updatedAt": "2024-06-12T15:52:08Z",
                          "publishedAt": "2024-06-12T15:52:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cbolisetti"
                          },
                          "bodyText": "@dschwen too",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9753817",
                          "updatedAt": "2024-06-12T15:54:40Z",
                          "publishedAt": "2024-06-12T15:54:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cbolisetti"
                          },
                          "bodyText": "@ddm42 can you try using the testnewmarkTI auxkernel as described in this example? Another thing to make sure is that your displacement history (if that's what your input is), is consistent with the velocity and acceleration initial conditions. If no initial conditions are set, moose will assume they are all zero, which is not always the case when you input displacements.\nAlso, I think @dschwen is working on improving all of this, so he might have more updated information.",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9753894",
                          "updatedAt": "2024-06-12T15:59:57Z",
                          "publishedAt": "2024-06-12T15:59:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ddm42"
                          },
                          "bodyText": "Yes I have also been using the testnewmarkTI auxkernel to extract the velocity and accelertion. This is my input file. The example also did not use ICs. Also, I am in Daniel Schwen's group and he was unable to find a solution.\n[Mesh]\n  coord_type = RZ\n\n  [rock]\n    type = GeneratedMeshGenerator\n    dim = 2\n    nx = 10\n    ny = 80\n    # nx = 20\n    # ny = 10\n    xmin = 0\n    xmax = ${units 0.1 in -> m}\n    ymin = ${units -10 in -> m}\n    ymax = 0\n  []\n  [rock_block]\n    type = SubdomainIDGenerator\n    input = rock\n    subdomain_id = 1\n  []\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n  large_kinematics = true\n[]\n\n[Problem]\n  kernel_coverage_check = false\n[]\n\n[Variables]\n  [disp_x]\n  []\n  [disp_y]\n  []\n[]\n\n[AuxVariables]\n  [vel_x]\n    block = 1\n  []\n  [vel_y]\n    block = 1\n  []\n  [accel_x]\n    block = 1\n  []\n  [accel_y]\n    block = 1\n  []\n  [T]\n    initial_condition = ${units x degC}\n  []\n  [wall]\n  []\n[]\n\n[Kernels]\n  [sdx]\n    type = TotalLagrangianStressDivergenceAxisymmetricCylindrical\n    # type = TotalLagrangianStressDivergence\n    variable = disp_x\n    component = 0\n    block = 1\n  []\n  [sdy]\n    type = TotalLagrangianStressDivergenceAxisymmetricCylindrical\n    # type = TotalLagrangianStressDivergence\n    variable = disp_y\n    component = 1\n    block = 1\n  []\n\n  [ifx]\n    type = InertialForce\n    variable = disp_x\n    # velocity = vel_x\n    # acceleration = accel_x\n    # alpha = 0 # not implemented in TotalLagrangianStressDivergence\n    block = 1\n  []\n  [ify]\n    type = InertialForce\n    variable = disp_y\n    # velocity = vel_y\n    # acceleration = accel_y\n    # alpha = 0 # not implemented in TotalLagrangianStressDivergence\n    block = 1\n  []\n[]\n\n[AuxKernels]\n  [vel_x]\n    type = TestNewmarkTI\n    variable = vel_x\n    displacement = disp_x\n    first = true\n    execute_on = 'LINEAR TIMESTEP_BEGIN TIMESTEP_END'\n  []\n  [vel_y]\n    type = TestNewmarkTI\n    variable = vel_y\n    displacement = disp_y\n    first = true\n    execute_on = 'LINEAR TIMESTEP_BEGIN TIMESTEP_END'\n  []\n\n  [accel_x]\n    type = TestNewmarkTI\n    variable = accel_x\n    displacement = disp_x\n    first = false\n    execute_on = 'LINEAR TIMESTEP_BEGIN TIMESTEP_END'\n  []\n  [accel_y]\n    type = TestNewmarkTI\n    variable = accel_y\n    displacement = disp_y\n    first = false\n    execute_on = 'LINEAR TIMESTEP_BEGIN TIMESTEP_END'\n  []\n\n  [wall]\n    type = ParsedAux\n    variable = wall\n    coupled_variables = 'vel_y'\n    expression = 'if(y>0, -y*1e15-vel_y*1e8, 0)'\n    use_xyzt = true\n    use_displaced_mesh = true\n  []\n[]\n\n[Materials]\n  [rock_strain]\n    type = ComputeLagrangianStrainAxisymmetricCylindrical\n    # type = ComputeLagrangianStrain\n    block = 1\n  []\n  [rock_stress]\n    type = ComputeLagrangianLinearElasticStress\n    block = 1\n  []\n  [elasticity_rock]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = ${units 20 GPa -> Pa}\n    poissons_ratio = 0.3\n    block = 1\n  []\n  [rock_density]\n    type = Density\n    density = ${units x kg/m^3}\n  []\n[]\n\n[ICs]\n  [vel_y]\n    type = ConstantIC\n    variable = vel_y\n    value = ${units x m/s}\n    block = 1\n  []\n[]\n\n[BCs]\n  [wall]\n    type = CoupledVarNeumannBC\n    variable = disp_y\n    boundary = top\n    v = wall\n    use_displaced_mesh = true\n  []\n  [symmetry]\n    type = DirichletBC\n    variable = disp_x\n    value = 0\n    boundary = left\n  []\n[]\n\n[Postprocessors]\n  [vel_y]\n    type = ElementAverageValue\n    variable = vel_y\n    block = 1\n  []\n  [gap_y]\n    type = SideAverageValue\n    variable = disp_y\n    boundary = top\n  []\n[]\n\n[Executioner]\n  type = Transient\n  [TimeIntegrator]\n    type = CentralDifference\n    solve_type = lumped\n  []\n  solve_type = LINEAR\n  dt = ${units 1e-8 s}\n  num_steps = 2000\n[]\n\n[Outputs]\n  exodus = true\n  csv = true\n  print_linear_residuals = false\n  perf_graph = true\n  time_step_interval = 1\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9753966",
                          "updatedAt": "2024-06-12T16:13:39Z",
                          "publishedAt": "2024-06-12T16:07:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ddm42"
                          },
                          "bodyText": "I am currently trying to make a fix in the initialConditionTempl.C file, where I am trying to set the variable being affected by the IC to an older solution state if specified. Then all the IC objects could work on old solution states, similarly to the current state.\nSpecifically I have added this line of code in the constructor of \"InitialConditionTempl\" with the appropriate corresponding changes in the header file and validParams().\n_var( getParam(\"_set_old_soln_state\") ? _sys.solutionState(getParam(\"_old_soln_state_number\")) : _sys.getActualFieldVariable(parameters.get<THREAD_ID>(\"_tid\"),parameters.get(\"variable\")) ),\nThe full constructor is below.\ntemplate \nInitialConditionTempl::InitialConditionTempl(const InputParameters & parameters)\n: InitialConditionBase(parameters),\n_fe_problem(*getCheckedPointerParam<FEProblemBase *>(\"_fe_problem_base\")),\n_tid(getParam<THREAD_ID>(\"_tid\")),\n_t(_fe_problem.time()),\n_var((getParam(\"_set_old_soln_state\")) ? _sys.solutionState(getParam(\"_old_soln_state_number\")) : _sys.getActualFieldVariable(parameters.get<THREAD_ID>(\"_tid\"),parameters.get(\"variable\"))),\n_fe_var(dynamic_cast<MooseVariableFE *>(&_var)),\n_assembly(\n_fe_problem.assembly(_tid, _var.kind() == Moose::VAR_SOLVER ? _var.sys().number() : 0)),\n_coord_sys(_assembly.coordSystem()),\n_current_elem(_var.currentElem()),\n_current_elem_volume(_assembly.elemVolume()),\n_current_node(nullptr),\n_qp(0),\n_fe_type(_var.feType())\n{\n}\nThe problem is that the old states and current field variables are stored as different data types. How do I access the old state in a way that matches the field variable data type? I need this if it is to be compatible with the current IC system.\n@lindsayad",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9756743",
                          "updatedAt": "2024-06-12T21:55:53Z",
                          "publishedAt": "2024-06-12T21:55:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "You don't need to change the initialization of _var. What you would need to do in order to set \"initial conditions\" for the old value of _var is to change what's at the end of InitialConditionTempl<T>::compute(). Instead of a call to _var.setDofValue, you would need a call to something like _var.setDofValueOld. That API doesn't currently exist though. If you add it, then I would make it private and make InitialConditionTempl a friend template. We do not want other code to have the ability to modify old values",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9756846",
                          "updatedAt": "2024-06-12T22:13:43Z",
                          "publishedAt": "2024-06-12T22:13:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ddm42"
                          },
                          "bodyText": "Great thank you for the help",
                          "url": "https://github.com/idaholab/moose/discussions/27880#discussioncomment-9756853",
                          "updatedAt": "2024-06-12T22:15:15Z",
                          "publishedAt": "2024-06-12T22:15:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Missing registered objects",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I just reinstalled my MOOSE it passed the test just as my application.\nI went to the KKS modules to try out some of the input scripts but I got these errors in the respective input scripts:\nkks_example.i:\nA 'SmoothCircleIC' is not a registered object.check_inp(moose_srv)\nIf you are trying to find this object in a dynamically loaded library, make sure thatcheck_inp(moose_srv)\nthe library can be found either in your \"Problem/library_path\" parameter or in thecheck_inp(moose_srv)\nMOOSE_LIBRARY_PATH environment variable.\n\nnonlinear.i:\nA 'SwitchingFunctionMaterial' is not a registered object.check_inp(moose_srv)\nIf you are trying to find this object in a dynamically loaded library, make sure thatcheck_inp(moose_srv)\nthe library can be found either in your \"Problem/library_path\" parameter or in thecheck_inp(moose_srv)\nMOOSE_LIBRARY_PATH environment variable.",
          "url": "https://github.com/idaholab/moose/discussions/27876",
          "updatedAt": "2024-06-13T04:48:35Z",
          "publishedAt": "2024-06-12T00:40:03Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Emmanuel-324"
                  },
                  "bodyText": "I have fixed it. Thanks",
                  "url": "https://github.com/idaholab/moose/discussions/27876#discussioncomment-9744965",
                  "updatedAt": "2024-06-12T00:54:48Z",
                  "publishedAt": "2024-06-12T00:54:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I thought recompiling my application after setting all the modules to yes would work, but it did not.",
                          "url": "https://github.com/idaholab/moose/discussions/27876#discussioncomment-9745067",
                          "updatedAt": "2024-06-12T01:14:32Z",
                          "publishedAt": "2024-06-12T01:14:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no you definitely have to \"git clean\" before recompiling. Sorry for the trouble",
                          "url": "https://github.com/idaholab/moose/discussions/27876#discussioncomment-9751270",
                          "updatedAt": "2024-06-12T12:38:06Z",
                          "publishedAt": "2024-06-12T12:38:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "git clean -Xfd",
                          "url": "https://github.com/idaholab/moose/discussions/27876#discussioncomment-9755743",
                          "updatedAt": "2024-06-12T19:24:16Z",
                          "publishedAt": "2024-06-12T19:24:15Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Yeah thanks I figured it.",
                          "url": "https://github.com/idaholab/moose/discussions/27876#discussioncomment-9755753",
                          "updatedAt": "2024-06-12T19:25:36Z",
                          "publishedAt": "2024-06-12T19:25:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Rotating objects with adhesive or lubricating contact in between",
          "author": {
            "login": "malih1186"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello,\nI have a fluid mechanics background and I am new to MOOSE, I have seen the tutorials and searched the application website but I am still unsure if the problem I have can be simulated with MOOSE.\nI have a stationary and a rotating object (rotating at high RPM) with a very small gap in between. I have searched for FE analysis in Moose but I am unsure about the contact and how to set it up when one object is rotating (to prevent clash) and the mesh is deforming.\nI appreciate if you can let me know in case this type of simulation is possible in MOOSE and give me some directions.\n/Mali",
          "url": "https://github.com/idaholab/moose/discussions/27717",
          "updatedAt": "2024-06-12T16:54:49Z",
          "publishedAt": "2024-05-28T09:19:21Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "I am not aware of any work in this area. @bwspenc @dschwen @jiangwen84 @recuero are you guys?",
                  "url": "https://github.com/idaholab/moose/discussions/27717#discussioncomment-9754463",
                  "updatedAt": "2024-06-12T16:54:49Z",
                  "publishedAt": "2024-06-12T16:54:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "FEM analysis of rotating objects in MOOSE",
          "author": {
            "login": "malih1186"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello,\nI have a fluid mechanics background and I am new to MOOSE, I have seen the tutorials and searched the application website but I am still unsure if the problem I have can be simulated with MOOSE.\nI have a stationary and a rotating object (rotating at high RPM) with a very small gap in between. I have searched for FE analysis in Moose but I am unsure about the contact and how to set it up when one object is rotating (to prevent clash) and the mesh is deforming.\nI appreciate if you can let me know in case this type of simulation is possible in MOOSE and give me some directions.\n/Mali\nOriginally posted by @malih1186 in #27717",
          "url": "https://github.com/idaholab/moose/discussions/27881",
          "updatedAt": "2024-06-12T16:51:55Z",
          "publishedAt": "2024-06-12T09:21:59Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Hmm, I transferred this over from issue, but I see there is already #27717 which appears to be identical",
                  "url": "https://github.com/idaholab/moose/discussions/27881#discussioncomment-9754430",
                  "updatedAt": "2024-06-12T16:51:46Z",
                  "publishedAt": "2024-06-12T16:51:45Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}