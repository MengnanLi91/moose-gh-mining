{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wOC0zMFQwODoxNDoxNC0wNTowMM4AVRJB"
    },
    "edges": [
      {
        "node": {
          "title": "Material chaining timeout error when running moose tests",
          "author": {
            "login": "djacobson1"
          },
          "bodyText": "material chaining error building moose\nHello, I'm a relatively new MOOSE user who is installing the CONDA version of MOOSE on an HPC environment (full hpc install will hopefully come later). I can compile MOOSE without issue but run into the single error below when testing moose. I reran the tests with max_time = 3000 for material_chaining but I still got the time out error. Material_chaining_out.csv matches the corresponding file in the gold directory (see below). Any ideas on what's causing the issue and how to fix it?\nERROR:\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining .................... RUNNING\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Working Directory: /beegfs/users/djacobson/programs/SBIR_phenolic/moose/moose_hpc_v1/moose/test/tests/materials/derivative_material_interface\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Running command: /beegfs/users/djacobson/programs/SBIR_phenolic/moose/moose_hpc_v1/moose/test/moose_test-opt -i ad_material_chaining.i --error --error-override --no-gdb-backtrace\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Setting Up..........................................................Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining: Warning: unable to write derivative cache file.\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining:\nmaterials/derivative_material_interface.ad_analytic_derivatives/material_chaining  [FINISHED] FAILED (TIMEOUT)\n\n#-------System / build details\nos: Scientific Linux 7.9\nbuild method: standard conda build\necho $CXX: mpicxx\nwhich mpicc: ~/.conda/envs/moose/bin/mpicc\n#-------\nmaterial_chaining_out.csv:\ntime,D0,D1,D2,E0\n1,0,0,0,0\n\nThanks,\nDavid Jacobson",
          "url": "https://github.com/idaholab/moose/discussions/25373",
          "updatedAt": "2023-08-31T19:15:55Z",
          "publishedAt": "2023-08-31T16:52:02Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nit's a really slow test to start with. However 3000s should have done it.\nwhere did you put the max_time?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25373#discussioncomment-6878612",
                  "updatedAt": "2023-08-31T18:01:39Z",
                  "publishedAt": "2023-08-31T18:01:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "djacobson1"
                          },
                          "bodyText": "I see where my problem is. There are two material chaining blocks in the tests file (moose/test/tests/materials/derivative_material_interface/tests). I increased the max time limit for one block but not the other.\nThanks for the help.\nDavid Jacobson",
                          "url": "https://github.com/idaholab/moose/discussions/25373#discussioncomment-6879166",
                          "updatedAt": "2023-08-31T19:15:22Z",
                          "publishedAt": "2023-08-31T19:15:22Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Particle Tracking with ray tracing",
          "author": {
            "login": "gsgall"
          },
          "bodyText": "I am starting to work on an Application that plans to use the Raytracing module to track time dependant particle motion. I have seen a few discussions about this on the forum but I am still not sure how to do this. Are there any good examples available that show how to track the motion of say a single particle as a function of time using the Ray Tracing module?",
          "url": "https://github.com/idaholab/moose/discussions/25376",
          "updatedAt": "2023-08-31T19:03:38Z",
          "publishedAt": "2023-08-31T18:55:33Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThere's this branch that was started to do this for the material point method:\nhttps://github.com/loganharbour/moose/tree/rt_mpm\nThen there is MaCaw a ray-tracing openmc-based monte carlo code we're trying to open source. I ll post a link when it's released\nWe will have work starting in October on particle-in-cell methods that will also do something similar\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25376#discussioncomment-6879067",
                  "updatedAt": "2023-08-31T19:01:18Z",
                  "publishedAt": "2023-08-31T19:01:17Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Custom VOF kernel Addition",
          "author": {
            "login": "MashrurShejan"
          },
          "bodyText": "Hello, I am trying to incorporate a custom VOF kernel with a fluid flow to simulate a multiphase flow phenomena-\nCurrently my simulation code looks as follows-\nvelocity_x = ....\n[Mesh]\n  file = abc\n  construct_side_list_from_node_list=true\n[]\n\n[Problem]\n[]\n\n[AuxVariables]\n  [vel_x]\n  []\n  [vel_y]\n  []\n  [vel_z]\n  []\n[]\n\n[AuxKernels]\n  [vel_x]\n    type = VectorVariableComponentAux\n    variable = vel_x\n    vector_variable = velocity\n    component = 'x'\n  []\n  [vel_y]\n    type = VectorVariableComponentAux\n    variable = vel_y\n    vector_variable = velocity\n    component = 'y'\n  []\n  [vel_z]\n    type = VectorVariableComponentAux\n    variable = vel_z\n    vector_variable = velocity\n    component = 'z'\n  []\n[]\n\n[Variables]\n  [alpha]\n    family = LAGRANGE\n    order = FIRST\n  []\n  [velocity]\n    family = LAGRANGE_VEC\n  []\n  [p]\n  []\n[]\n\n[ICs]\n  [velocity]\n    type = VectorConstantIC\n    x_value = 0\n    y_value = 0\n    z_value = 0\n    variable = velocity\n  []\n\n  [alpha]\n    type = FunctionIC\n    function = 'if(x<0, 1, 0)' \n    variable = alpha\n  []\n[]\n\n[Materials]\n  [fluid_properties]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho_fluid mu_fluid'\n    prop_values = '1000 0.001'\n    block = 3\n  []\n\n  [air_properties]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho_air mu_air'\n    prop_values = '1.225 1.81e-5'\n    block = 3\n  []\n\n  [mixture_properties]\n    type = ParsedMaterial\n    expression = '1000*alpha + 1.225*(1.0 - alpha)'\n    prop_names = 'rho'\n    coupled_variables = 'alpha'\n    block = 3\n  []\n\n  [mixture_viscosity]\n    type = ParsedMaterial\n    expression = '0.001*alpha + 1.81e-5*(1 - alpha)'\n    prop_names = 'mu'\n    coupled_variables = 'alpha'\n    block = 3\n  []\n\n  [ins_mat]\n    type = INSADTauMaterial\n    velocity = velocity\n    pressure = p\n    rho = rho\n    mu = mu\n  []\n[]  \n\n[Kernels]\nactive = 'mass_conservation momentum_advection momentum_pressure momentum_viscous momentum_supg mass_pspg momentum_time_derivative alpha_advection'\n  [mass_conservation]\n    type = INSADMass\n    variable = p\n  []\n\n  [momentum_advection]\n    type = INSADMomentumAdvection\n    variable = velocity\n  []\n  [momentum_pressure]\n    type = INSADMomentumPressure\n    variable = velocity\n    pressure = p\n  []\n  [momentum_viscous]\n    type = INSADMomentumViscous\n    variable = velocity\n  []\n\n  [momentum_supg]\n    type = INSADMomentumSUPG\n      variable = velocity\n  velocity = velocity\n[]\n  \n  [mass_pspg]\n    type = INSADMassPSPG\n    variable = p\n  []\n\n  [momentum_time_derivative]\n    type = INSADMomentumTimeDerivative\n    variable = velocity\n  []\n  \n  [alpha_advection]\n    type = VOFAdvection\n    variable = alpha\n    rho = rho\n    velocity = velocity\n  []\n[]\n\n[BCs]\nactive = 'inlet outlet air_inlet alpha_inlet alpha_outlet'\n\n  [inlet]\n    type = VectorDirichletBC\n    values = '${velocity_x} 0 0'\n    variable = velocity\n    boundary = 'water_inlet'\n  []\n  [outlet]\n    type = NeumannBC\n    value = 0\n    variable = p\n    boundary = 'outlet bottom_wall top_wall front_wall back_wall'\n  []\n  [air_inlet]\n    type = VectorDirichletBC\n    values = '0 0 0'\n    variable = velocity\n    boundary = 'air_inlet1 air_inlet2'\n  []\n  \n  [alpha_inlet]\n    type = DirichletBC\n    value = 1\n    variable = alpha\n    boundary = 'water_inlet'\n  []\n  [alpha_outlet]\n    type = NeumannBC\n    value = 0\n    variable = alpha\n    boundary = 'outlet bottom_wall top_wall front_wall back_wall'\n  []\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  dt = 0.05\n  num_steps = 20\n  solve_type = NEWTON\n  nl_rel_tol = 1e-6\n  nl_max_its = 200\n  l_tol = 1e-6\n  l_max_its = 150\n  automatic_scaling = true\n  line_search = default\n  petsc_options_iname = '-pc_type -pc_factor_shift_type'\n  petsc_options_value = 'lu NONZERO'\n[]\n\n[VectorPostprocessors]\n  [line_sample]\n    type = LineValueSampler\n    execute_on = 'final timestep_end'\n    variable = 'alpha vel_x vel_y vel_z'\n    start_point = '0 0 0'\n    end_point = '1 0 0'\n    num_points = 50\n    sort_by = id\n  []\n[]\n\n[Outputs]\n  exodus = true\n  [csv]\n    type = CSV\n    file_base = 'sample_line'\n    execute_on = 'final'\n    show = 'line_sample'\n  []\n  [VTK]\n    type = VTK\n    file_base = xyz\n   execute_on = 'timestep_end'\n  []\n[]\n\nThe custom VOF kernel code is as follows-\nHeader file;\n#ifndef VOFADVECTION_H\n#define VOFADVECTION_H\n\n#include \"ADKernel.h\"\n\nclass VOFAdvection : public ADKernel\n{\npublic:\n  static InputParameters validParams();\n  VOFAdvection(const InputParameters & parameters);\n\nprotected:\n  virtual ADReal computeQpResidual() override;\n  virtual Real computeQpJacobian() override;\n\nprivate:\n  const ADMaterialProperty<Real> & _rho;\n  const ADVectorVariableValue & _velocity;\n};\n\n#endif // VOFADVECTION_H\n\nSource code;\n#include \"VOFAdvection.h\"\n\nregisterMooseObject(\"NavierStokesApp\", VOFAdvection);\n\nInputParameters\nVOFAdvection::validParams()\n{\n  InputParameters params = ADKernel::validParams();\n  params.addClassDescription(\"Advection kernel for the Volume of Fluid (VOF) method.\");\n  params.addRequiredParam<MaterialPropertyName>(\"rho\", \"The name of the density material property.\");\n  params.addRequiredCoupledVar(\"velocity\", \"The name of the velocity variable.\");\n  return params;\n}\n\nVOFAdvection::VOFAdvection(const InputParameters & parameters)\n  : ADKernel(parameters),\n    _rho(getADMaterialProperty<Real>(\"rho\")),\n    _velocity(adCoupledVectorValue(\"velocity\"))\n{\n}\n\nADReal\nVOFAdvection::computeQpResidual()\n{\n  return _rho[_qp] * _velocity[_qp] * _grad_test[_i][_qp] * _u[_qp];\n}\n\nReal\nVOFAdvection::computeQpJacobian()\n{\n  return (_rho[_qp] * _velocity[_qp] * _grad_test[_i][_qp] * _phi[_j][_qp]).value();\n}\n\nError message:\n*** ERROR ***\nThe following error occurred in the object \"MOOSE Problem\", of type \"FEProblem\".\n\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\n\nCan anyone suggest what i am doing wrong and what could be the possible solution to this issue?",
          "url": "https://github.com/idaholab/moose/discussions/24229",
          "updatedAt": "2023-08-31T18:51:24Z",
          "publishedAt": "2023-04-29T18:12:17Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Your parsedMaterial have the wrong syntax\nshould be property_name not prop_names\nhttps://mooseframework.inl.gov/source/materials/ParsedMaterial.html",
                  "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5763037",
                  "updatedAt": "2023-04-29T18:16:49Z",
                  "publishedAt": "2023-04-29T18:16:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "Made the changes. Still getting same error messages.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5763134",
                          "updatedAt": "2023-04-29T18:45:45Z",
                          "publishedAt": "2023-04-29T18:45:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "how old is your MOOSE? The syntax changed for this material in January",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5763150",
                          "updatedAt": "2023-04-29T18:51:12Z",
                          "publishedAt": "2023-04-29T18:51:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "I installed it at the end of January and also updated it about 2 weeks ago.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5763161",
                          "updatedAt": "2023-04-29T18:55:15Z",
                          "publishedAt": "2023-04-29T18:55:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so the executable is from 2 weeks ago? what does ls -l report in that folder?\nOtherwise, there's probably at least one error from this\n_rho(getADMaterialProperty(\"rho\")), -> uses an AD Material property\n...\ntype = ParsedMaterial. -> not an AD material, needs to be ADParsedMaterial\nexpression = '1000alpha + 1.225(1.0 - alpha)'\nprop_names = 'rho'",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5763185",
                          "updatedAt": "2023-04-29T19:01:03Z",
                          "publishedAt": "2023-04-29T19:01:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "so the complete error message that i am getting is as follows-\n*** ERROR ***\nThe following error occurred in the object \"MOOSE Problem\", of type \"FEProblem\".\n\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'rho', requested by 'alpha_advection' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_face' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'mu', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'ins_mat_neighbor' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'rho', requested by 'mass_pspg' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\nMaterial property 'mu', requested by 'momentum_viscous' is not defined on block 3\n\nbasically the same message being repeated.\nI am not sure what you meant ( would appreciate if you can break it down for me) but i updated the moose app about 2 weeks ago and the code has been recently developed with additional custom VOF kernel.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5763316",
                          "updatedAt": "2023-04-30T16:06:56Z",
                          "publishedAt": "2023-04-29T19:42:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Go in the folder where the executable is and type ls -l. Please paste the output here\n\n\n\nRegular Material properties and AD Material properties cannot be used in lieu of each other.\nParsedMaterial defines a regular material property for density\nIn your material, you have getADMaterialProperty for density.\nThis does not work, switch from ParsedMaterial to ADParsedMaterial, and adapt as needed everywhere else\nor switch to regulat matprops but then you need to be careful with derivatives to build the correct Jacobian",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5764538",
                          "updatedAt": "2023-04-30T04:11:09Z",
                          "publishedAt": "2023-04-30T04:11:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "Hello, Sorry for the delay. So, I have updated the code as follows. With the DirichletBC set at the 'alpha outlet'  the code runs fine. But, for my project the boundary condition is supposed to be Neumann and the simulation doesn't show convergence with this boundary condition at the 'alpha outlet'. can you please suggest any possible solution to this problem?\nvelocity_x = 100 \n\n[Mesh]\n  file = multiphase_flow.e\n  construct_side_list_from_node_list=true\n[]\n\n[AuxVariables]\n  [vel_x]\n  []\n  [vel_y]\n  []\n  [vel_z]\n  []\n[]\n\n[AuxKernels]\n  [vel_x]\n    type = VectorVariableComponentAux\n    variable = vel_x\n    vector_variable = velocity\n    component = 'x'\n  []\n  [vel_y]\n    type = VectorVariableComponentAux\n    variable = vel_y\n    vector_variable = velocity\n    component = 'y'\n  []\n  [vel_z]\n    type = VectorVariableComponentAux\n    variable = vel_z\n    vector_variable = velocity\n    component = 'z'\n  []\n[]\n\n[Variables]\n  [alpha]\n    family = LAGRANGE\n    order = FIRST\n  []\n  [velocity]\n    family = LAGRANGE_VEC\n  []\n  [p]\n  []\n[]\n\n[ICs]\n  [velocity]\n    type = VectorConstantIC\n    x_value = 0.00001\n    y_value = 0\n    z_value = 0\n    variable = velocity\n  []\n\n  [alpha]\n    type = ConstantIC\n    value = 0  # Domain initially filled with air\n    variable = alpha\n  []\n[]\n\n[Materials]\nactive = 'fluid_properties air_properties ins_mat mixture_properties mixture_viscosity surface_tension'\n  [fluid_properties]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho_fluid mu_fluid'\n    prop_values = '1000 0.001'\n  []\n\n  [air_properties]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho_air mu_air'\n    prop_values = '1.225 1.81e-5'\n  []\n  \n  [surface_tension]\n    type = ADGenericConstantMaterial\n    prop_names = 'sigma'\n    prop_values = '0.01'\n  []\n\n  [mixture_properties]\n    type = ADParsedMaterial\n    expression = '1000*alpha + 1.225*(1.0 - alpha)'\n    property_name = 'rho'\n    coupled_variables = 'alpha'\n  []\n\n  [mixture_viscosity]\n    type = ADParsedMaterial\n    expression = '0.001*alpha + 1.81e-5*(1 - alpha)'\n    property_name = 'mu'\n    coupled_variables = 'alpha'\n  []\n  \n  [ins_mat]\n    type = INSADTauMaterial\n    velocity = velocity\n    pressure = p\n    rho_name = rho\n    mu_name = mu\n  []\n[]\n\n[Kernels]\nactive = 'mass_conservation momentum_advection momentum_pressure momentum_viscous momentum_supg mass_pspg momentum_time_derivative alpha_advection surface_tension'\n\n  [mass_conservation]\n    type = INSADMass\n    variable = p\n  []\n\n  [momentum_advection]\n    type = INSADMomentumAdvection\n    variable = velocity\n  []\n\n  [momentum_pressure]\n    type = INSADMomentumPressure\n    variable = velocity\n    pressure = p\n  []\n\n  [momentum_viscous]\n    type = INSADMomentumViscous\n    variable = velocity\n  []\n\n  [momentum_supg]\n    type = INSADMomentumSUPG\n    variable = velocity\n    velocity = velocity\n   []\n\n  [mass_pspg]\n    type = INSADMassPSPG\n    variable = p\n  []\n\n  [momentum_time_derivative]\n    type = INSADMomentumTimeDerivative\n    variable = velocity\n  []\n\n  [alpha_advection]\n    type = VOFAdvection\n    variable = alpha\n    rho = rho\n    velocity = velocity\n  []\n  \n  [surface_tension]\n    type = SurfaceTensionForce\n    variable = alpha\n    alpha = alpha\n    sigma = sigma\n  []\n[]\n\n[BCs]\nactive = 'inlet outlet alpha_inlet alpha_outlet no_slip_wall'\n\n  [inlet]\n    type = VectorDirichletBC\n    values = '${velocity_x} 0 0'\n    variable = velocity\n    boundary = 'water_inlet'\n  []\n  \n  [outlet]\n    type = NeumannBC\n    value = 0\n    variable = p\n    boundary = 'outlet bottom_wall top_wall front_wall back_wall'\n  []\n  \n  [alpha_inlet]\n    type = DirichletBC\n    value = 1\n    variable = alpha\n    boundary = 'water_inlet'\n  []\n  \n  [alpha_outlet]\n    type = NeumannBC\n    value = 0\n    variable = alpha\n    boundary = 'outlet bottom_wall top_wall front_wall back_wall'\n  []\n  \n  [no_slip_wall]\n    type = VectorDirichletBC\n    values = '0 0 0'\n    variable = velocity\n    boundary = 'air_inlet1 air_inlet2'\n  []\n  \n[]\n\n[Preconditioning]\n   [smp]\n    type = SMP\n    full = true\n   []\n[]\n\n[Executioner]\n  type = Transient\n  dt = 0.0001  \n  num_steps = 100\n  solve_type = NEWTON\n  nl_rel_tol = 1e-6  \n  nl_max_its = 200 \n  l_tol = 1e-6 \n  l_max_its = 200\n  automatic_scaling = true\n  line_search = default\n  petsc_options_iname = '-pc_type -pc_factor_shift_type'\n  petsc_options_value = 'lu NONZERO'\n[]\n\n[Outputs]\nconsole = true\ncheckpoint = true\n [outputfile]\n  type = VTK\n  file_base = multiphase_flow\n  execute_on = 'timestep_end'\n []\n[]\n\nI am also attaching the custom VOF and Surface tension kernel below for reference-\n***VOF Kernel src code-\n#include \"VOFAdvection.h\"\n\nregisterMooseObject(\"NavierStokesApp\", VOFAdvection);\n\nInputParameters\nVOFAdvection::validParams()\n{\n  InputParameters params = ADKernel::validParams();\n  params.addClassDescription(\"Advection kernel for the Volume of Fluid (VOF) method.\");\n  params.addRequiredParam<MaterialPropertyName>(\"rho\", \"The name of the density material property.\");\n  params.addRequiredCoupledVar(\"velocity\", \"The name of the velocity variable.\");\n  return params;\n}\n\nVOFAdvection::VOFAdvection(const InputParameters & parameters)\n  : ADKernel(parameters),\n    _rho(getADMaterialProperty<Real>(\"rho\")),\n    _velocity(adCoupledVectorValue(\"velocity\"))\n{\n}\n\nADReal\nVOFAdvection::computeQpResidual()\n{\n  return _rho[_qp] * (_u[_qp] * _grad_test[_i][_qp]) * _velocity[_qp];\n}\n\nReal\nVOFAdvection::computeQpJacobian()\n{\n  return (_rho[_qp] * (_u[_qp] * _grad_test[_i][_qp]) * _phi[_j][_qp] * _velocity[_qp]).value();\n}\n\n*** Surface tension kernel src code-\n\n#include \"SurfaceTensionForce.h\"\n\nregisterMooseObject(\"NavierStokesApp\", SurfaceTensionForce);\n\nInputParameters\nSurfaceTensionForce::validParams()\n{\n  InputParameters params = ADKernel::validParams();\n  params.addClassDescription(\"Surface tension force for the VOF method based on the CSF model.\");\n  params.addRequiredParam<MaterialPropertyName>(\"sigma\", \"The name of the surface tension coefficient material property.\");\n  params.addRequiredCoupledVar(\"alpha\", \"The name of the volume fraction variable.\");\n  return params;\n}\n\nSurfaceTensionForce::SurfaceTensionForce(const InputParameters & parameters)\n  : ADKernel(parameters),\n    _sigma(getADMaterialProperty<Real>(\"sigma\")),\n    _grad_alpha(adCoupledGradient(\"alpha\"))\n{\n}\n\nADReal\nSurfaceTensionForce::computeQpResidual()\n{\n  return _sigma[_qp] * _grad_alpha[_qp] * _grad_test[_i][_qp];\n}\n\nReal\nSurfaceTensionForce::computeQpJacobian()\n{\n  return (_sigma[_qp] * _grad_alpha[_qp] * _grad_test[_i][_qp] * _phi[_j][_qp]).value();\n}",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5982976",
                          "updatedAt": "2023-05-24T02:43:27Z",
                          "publishedAt": "2023-05-23T21:58:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Alpha is advected right?\nSo if you specify the inlet, you dont really get to specify the outlet? The outlet is whatever gets advected outside of the system",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5984348",
                          "updatedAt": "2023-05-24T02:46:11Z",
                          "publishedAt": "2023-05-24T02:46:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "Hi, Thanks for the correction but it still isn't showing any convergence.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5984543",
                          "updatedAt": "2023-05-24T03:26:09Z",
                          "publishedAt": "2023-05-24T03:26:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if SurfaceTensionForce is an ADKernel, you shouldnt need a computeJacobian routine? Same for VOFAdvection\nIn which configuration does it converge?",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5984609",
                          "updatedAt": "2023-05-24T03:37:31Z",
                          "publishedAt": "2023-05-24T03:37:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "MashrurShejan"
                  },
                  "bodyText": "So, as shown in the code I have set a DirichletBC for velocity inlet and NeumannBC for Pressure outlet boundaries which works fine. Since I am trying to simulate the water jet in air domain, at alpha inlet which is basically the waterjet inlet, I have set DirichletBC which identifies a constant alpha value at the inlet and should change with time as it gets through the air domain interacting with air. That's why i was trying to simulate it with a NeumannBC at the alpha outlet boundaries. currrently the code isn't showing any specific error codes. the residual values are just not seeming to reduce and therefore not converging. But if I specify DIrichletBc at alpha outlet the simulation does converge.",
                  "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5984717",
                  "updatedAt": "2023-05-24T03:57:52Z",
                  "publishedAt": "2023-05-24T03:57:52Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont think you should specify alpha at the outlet. Inlet ought to be enough.\nThe value at the outlet is the product of solving the conservation through the entire domain, starting at the inlet and propagating at the outlet.\nImagine if you impose an inlet flux of 1, through neumann BC on alpha or dirichlet on alpha + velocity\nand an outlet flux of 2. Then the interior would loose \"alpha\" every time step, until the only solution is for alpha to become negative inside the domain.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5984777",
                          "updatedAt": "2023-05-24T04:13:26Z",
                          "publishedAt": "2023-05-24T04:13:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "MashrurShejan"
                  },
                  "bodyText": "Thanks. I have deducted the alpha outlet boundary from the code and it is still the same. Not converging. what could be the possible solution? does it need any stabilization?",
                  "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5984831",
                  "updatedAt": "2023-05-24T04:24:12Z",
                  "publishedAt": "2023-05-24T04:24:11Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "We expect it to need stabilization if the flow rates are high.\nWhat's the Reynolds number?\nHow many DOFs in your mesh? To know what kind of diagnostic we could run\nI'm not sure yet what's the issue.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5984868",
                          "updatedAt": "2023-05-24T04:32:25Z",
                          "publishedAt": "2023-05-24T04:32:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "Raynolds Number is 333000. and number of DOF's is 46560.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5986833",
                          "updatedAt": "2023-05-24T08:46:16Z",
                          "publishedAt": "2023-05-24T08:46:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "We do expect to need stabilization or a turbulence model at 333k Reynolds number",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5988431",
                          "updatedAt": "2023-05-24T11:19:29Z",
                          "publishedAt": "2023-05-24T11:19:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "I have even tried with small velocities hence lesser Reynolds number it still didn't work. Talking about that how do I create stabilization and Does moose have any turbulence model?",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-5994941",
                          "updatedAt": "2023-05-24T22:18:17Z",
                          "publishedAt": "2023-05-24T22:18:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "For stabilization, we have SUPG in FE. You  already have it in your model.\nFor turbulence, in FE, with AD, there's a Smagorinsky model. It s not the best\nhttps://mooseframework.inl.gov/source/kernels/INSADSmagorinskyEddyViscosity.html\nBut if it doesnt work already at low Reynolds that's not the problem\nCan you try\n  [velocity]\n    type = VectorConstantIC\n    x_value = 1e-8\n    y_value = 1e-8\n    z_value = 1e-8\n    variable = velocity\n  []\n\nan initialization at 0 velocity is pretty tough, places the solver at a saddle point iirc",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-6000577",
                          "updatedAt": "2023-05-25T12:42:07Z",
                          "publishedAt": "2023-05-25T12:42:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Why is there pressure BC all around?\n  [outlet]\n    type = NeumannBC\n    value = 0\n    variable = p\n    boundary = 'outlet bottom_wall top_wall front_wall back_wall'\n  []\n\nare you trying to pin the pressure?\nWe usually just pin the pressure at one position\n  [./p_zero]\n    type = DirichletBC\n    boundary = corner\n    variable = p\n    value = 0\n  [../]\n\nin the boussinesq example in the finite_element tests",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-6000622",
                          "updatedAt": "2023-05-25T12:46:10Z",
                          "publishedAt": "2023-05-25T12:46:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "Hi, I set the pressure all around as I am trying to simulate the water flow into atmospheric pressure.  I have tried the modifications as suggested but it still doesn't seem to work at the moment.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-6058710",
                          "updatedAt": "2023-06-01T09:18:20Z",
                          "publishedAt": "2023-06-01T09:18:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nUmm I m not sure where to go next.\nMaybe start from a classic single inlet-outlet problem, and once that converges, as that one should work, progressively change the boundaries to look more like your system\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-6060362",
                          "updatedAt": "2023-06-01T11:47:40Z",
                          "publishedAt": "2023-06-01T11:47:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MashrurShejan"
                          },
                          "bodyText": "Hi, as an update to the project, the simulation converges with a very low velocity (around 0.02 m/s). I am attaching the simulation result here. I am expecting to see the liquid sheet breakup. How can I improve my code at this point? Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-6142218",
                          "updatedAt": "2023-06-11T00:05:29Z",
                          "publishedAt": "2023-06-11T00:05:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is the solution incorrect then?\nI think the next step is to reproduce a 1D or 2D known simple solution\nThen after that you ll want to check that the solver converges at the expected spatial order as the mesh is refined",
                          "url": "https://github.com/idaholab/moose/discussions/24229#discussioncomment-6142243",
                          "updatedAt": "2023-06-11T00:17:54Z",
                          "publishedAt": "2023-06-11T00:17:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Trouble with reading FunctionArrayAux variables into ConservativeAdvection kernel.",
          "author": {
            "login": "danielwardstfc"
          },
          "bodyText": "Hi,\nI have read some velocity data from OpenFOAM into MOOSE using FunctionArrayAux and the answer to my previous question.\nI am now trying to read this into the ConservativeAdvection kernel so that I can advect the temperature using my velocity field, but I think I have run into issues with variable types.  The error message I'm receiving is as below:\n *** ERROR ***\nThe named variable is an array variable, try a 'coupledArray[Value/Gradient/Dot/etc]...' function instead\n\nAs far as I can tell, the variables of ArrayAux kernel are of type RealEigenVector, whereas the variables required by ConservativeAdvection are RealVectorValue.  Do you know if I can easily convert from one to the other?  Or is this a case of rewriting the ConservativeAdvection kernel?\nBest,\nDaniel\nP.S. My input file is as follows:\n[Mesh]\n  file = in/cylinder.msh\n[]\n\n[AuxVariables]\n  [velocity]\n    family = LAGRANGE\n    order = FIRST\n    components = 3\n  []\n[]\n\n[AuxKernels]\n  [velocity-ker]\n    type = FunctionArrayAux\n    variable = velocity\n    functions = 'uvelocity vvelocity wvelocity'\n  []\n[]\n\n[Variables]\n  [T]\n    order = FIRST\n    family = LAGRANGE\n  []\n[]\n\n[Kernels]\n  [conservative-advection]\n    type = ConservativeAdvection\n    variable = T\n#    velocity = '0 0 1'\n    velocity = 'velocity'\n    upwinding_type = full\n  []\n[]\n\n\n[BCs]\n  [./bottom]\n    type = DirichletBC\n    variable = T\n    boundary = 'inlet'\n    value = 1\n  [../]\n  [./top]\n    type = DirichletBC\n    variable = T\n    boundary = 'outlet'\n    value = 0\n  [../]\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'PJFNK'\n[]\n\n[Outputs]\n  execute_on = 'timestep_end'\n  exodus = true\n[]\n\n[UserObjects]\n  [reader_nearest]\n    type = PropertyReadFile\n    prop_file_name = 'in/velocity_field_edit.csv'\n    read_type = 'voronoi'\n    nprop = 6\n    nvoronoi = 40291\n  []\n[]\n\n[Functions]\n  [uvelocity]\n    type = PiecewiseConstantFromCSV\n    read_prop_user_object = 'reader_nearest'\n    read_type = 'voronoi'\n    column_number = '3'\n  []\n  [vvelocity]\n    type = PiecewiseConstantFromCSV\n    read_prop_user_object = 'reader_nearest'\n    read_type = 'voronoi'\n    column_number = '4'\n  []\n  [wvelocity]\n    type = PiecewiseConstantFromCSV\n    read_prop_user_object = 'reader_nearest'\n    read_type = 'voronoi'\n    column_number = '5'\n  []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/25366",
          "updatedAt": "2023-09-04T14:50:36Z",
          "publishedAt": "2023-08-31T11:53:46Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "If you wanted to work within the framework of existing objects I'd suggest using ArrayVariableComponent to get scalar field aux variables and then ParsedVectorAux to convert the scalar field components into a vector variable.\nAlternatively you could write your own kernel or make a modification to ConservativeAdvection",
                  "url": "https://github.com/idaholab/moose/discussions/25366#discussioncomment-6878939",
                  "updatedAt": "2023-08-31T18:42:39Z",
                  "publishedAt": "2023-08-31T18:42:39Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PorousFlow - Geothermal wells",
          "author": {
            "login": "josebastiase"
          },
          "bodyText": "Hello everyone,\nI'm not sure if this has been discussed before...\nI'm working with a groundwater model to simulate a geothermal system involving the extraction and injection of cold and warm water.\nI've been utilizing the PorousFlowPeacemanBorehole, which has been working nicely. However, I've recently acquired some field data, and I've noticed that all the extraction rates are given in terms of flux (kg/s), as opposed to maintaining a fixed pressure at the bottom of the aquifer. My question is whether there's a method to extract heat while keeping the flux fixed, rather than controlling it through pressure?\n@WilkAndy\n@cpgr\nThanks!\nJose",
          "url": "https://github.com/idaholab/moose/discussions/25367",
          "updatedAt": "2023-08-31T12:49:31Z",
          "publishedAt": "2023-08-31T12:32:43Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Reading a velocity field from alternate software (OpenFOAM) as a variable",
          "author": {
            "login": "danielwardstfc"
          },
          "bodyText": "Hi there,\nI'm trying to simulate stresses and model heat transfer in MOOSE using a velocity field I have generated in OpenFOAM.  To start with, I have a velocity field in a straight pipe, and am looking to read this in to MOOSE as a variable in order to advect heat along the pipe using MOOSE.  Does anything in MOOSE already exist that would help me to do this?\nThanks,\nDaniel",
          "url": "https://github.com/idaholab/moose/discussions/24784",
          "updatedAt": "2023-08-31T11:44:29Z",
          "publishedAt": "2023-06-22T13:01:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n@freiler has done this recently using this Function and UO:\nhttps://mooseframework.inl.gov/source/functions/PiecewiseConstantFromCSV.html\nhttps://mooseframework.inl.gov/source/userobjects/PropertyReadFile.html\nYou will need to use the voronoi mode and have as many voronoi regions as coordinates/points in your CSV\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24784#discussioncomment-6252580",
                  "updatedAt": "2023-06-22T14:02:25Z",
                  "publishedAt": "2023-06-22T14:02:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "As an alternative to what @GiudGiud suggested, ANL has this wrapper app called Cardinal that couples NekRS (a CFD code) to MOOSE. @aprilnovak is the primary developer of Cardinal.",
                  "url": "https://github.com/idaholab/moose/discussions/24784#discussioncomment-6266185",
                  "updatedAt": "2023-06-23T21:24:25Z",
                  "publishedAt": "2023-06-23T21:24:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aprilnovak"
                          },
                          "bodyText": "Hi @danielwardstfc, we have done this a lot with Cardinal (https://cardinal.cels.anl.gov/), a wrapper of NekRS inside of MOOSE. If you are committed to using OpenFOAM, you can check out Cardinal's source code to see how we have wrapped NekRS inside MOOSE, and adapt to use with OpenFOAM.\nDepending on your application, you could also consider using Cardinal directly. NekRS contains capabilities for RANS, LES, and DNS using the spectral element method.\nLet me know if you have any questions, happy to help!",
                          "url": "https://github.com/idaholab/moose/discussions/24784#discussioncomment-6266364",
                          "updatedAt": "2023-06-23T21:56:14Z",
                          "publishedAt": "2023-06-23T21:56:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "danielwardstfc"
                          },
                          "bodyText": "Hi April, thanks for your reply.  I'm not ready to move to a full coupling yet, but I'll keep this in mind if I get there.  Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/24784#discussioncomment-6874784",
                          "updatedAt": "2023-08-31T11:44:29Z",
                          "publishedAt": "2023-08-31T11:44:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "A theoretical question in RadialReturnStressUpdate",
          "author": {
            "login": "xuxiaobei1995"
          },
          "bodyText": "Hi all,\nRecently I read the code in RadialReturnStressUpdate and got confused about a theoretical question. In RadialReturnStressUpdate the final stress is computed as:\n  if (_apply_strain)\n  {\n    strain_increment -= inelastic_strain_increment;\n    updateEffectiveInelasticStrain(_effective_inelastic_strain_increment);\n\n    // Use the old elastic strain here because we require tensors used by this class\n    // to be isotropic and this method natively allows for changing in time\n    // elasticity tensors\n    stress_new = elasticity_tensor * (strain_increment + elastic_strain_old);\n  }\n\nAccording to my understanding about the code, It seems to show when the material is in a inleastic-deformed status, the stress is only generated by the elastic strain. Or in formula it writes:\n\u03c3 = C * (\u03b5_total - \u03b5_ine - \u03b5_eigen) = C * \u03b5_e\nDoes anyone know whether my understanding right or not? Thanks!\nXiaobei",
          "url": "https://github.com/idaholab/moose/discussions/25353",
          "updatedAt": "2023-08-31T02:46:22Z",
          "publishedAt": "2023-08-30T15:49:51Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@dewenyushu @dschwen",
                  "url": "https://github.com/idaholab/moose/discussions/25353#discussioncomment-6868348",
                  "updatedAt": "2023-08-30T19:49:39Z",
                  "publishedAt": "2023-08-30T19:49:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Your understanding is correct.",
                          "url": "https://github.com/idaholab/moose/discussions/25353#discussioncomment-6869065",
                          "updatedAt": "2023-08-30T21:39:37Z",
                          "publishedAt": "2023-08-30T21:39:36Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xuxiaobei1995"
                          },
                          "bodyText": "Thank you hugary!",
                          "url": "https://github.com/idaholab/moose/discussions/25353#discussioncomment-6870812",
                          "updatedAt": "2023-08-31T02:46:22Z",
                          "publishedAt": "2023-08-31T02:46:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Reg: Generating 3D columnar hexagonal grain",
          "author": {
            "login": "sbmse007"
          },
          "bodyText": "Hello,\nI have been trying to generate 3D columnar hexagonal grains. I followed the \"hex_grain_growth_2D_eldrforce.i\" input file. However, when I am converting the file into 3D, I am always getting the following error:\n\"*** ERROR ***\nThe following error occurred in the object \"hex_ic\", of type \"PolycrystalHex\".\nPolycrystalHex requires a square or cubic number depending on the mesh dimension\".\n\nIn the 2D version, putting op_num = 3 as well as \u00a0grain_num = 36 in the '\"PolycrystalHex\" user object works fine.\nMoreover, I can eliminate the above mentioned error if I use op_num = 8 and grain_num = 8. But the grain structure is not a perfect hexagon as in 2D. It will be very helpful if anyone can provide me with some suggestions.",
          "url": "https://github.com/idaholab/moose/discussions/25155",
          "updatedAt": "2023-08-31T00:38:19Z",
          "publishedAt": "2023-08-09T14:10:59Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "What does the 3D result look like? Your op_num should be big enough to allow for grain coloring (which is np hard)... 8 is typically good for 3D columnar grains.",
                  "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6681204",
                  "updatedAt": "2023-08-09T16:35:56Z",
                  "publishedAt": "2023-08-09T14:41:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "These ics are relying on the underlying mesh to represent the shapes right? So to have perfect hexagons you would need a very regular TRI mesh and the IC to perfectly align?",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6681421",
                          "updatedAt": "2023-08-09T14:59:39Z",
                          "publishedAt": "2023-08-09T14:59:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sbmse007"
                          },
                          "bodyText": "Hi,\nI am attaching the input file as well as the generated output in the attachment. I know I am missing something, but not able to figure out.\n\nhex_3D.txt",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6681974",
                          "updatedAt": "2023-08-09T15:42:07Z",
                          "publishedAt": "2023-08-09T15:42:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Can you try without using uniform refinement?\nI think Ive seen this problem on another IC",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6682108",
                          "updatedAt": "2023-08-09T15:53:27Z",
                          "publishedAt": "2023-08-09T15:53:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sbmse007"
                          },
                          "bodyText": "Hi,\nI am attaching the output without refinement. But I am not getting the result as seen in the 2D case.",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6682278",
                          "updatedAt": "2023-08-09T16:07:29Z",
                          "publishedAt": "2023-08-09T16:07:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "It seems to me that PolycrystalHex isn't compatible with columnar_3D = true. We should check that and error. Please open an issue (or a feature request if you want columnar hexes in 3D).",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6682541",
                          "updatedAt": "2023-08-09T16:35:27Z",
                          "publishedAt": "2023-08-09T16:35:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sourabhkadambi"
                          },
                          "bodyText": "Hello! This discussion and issue is similar to the problem I was working on recently. I needed the 3D columnar hexagonal grains, and was able to get it to work (see attached rendering) with minor code changes to PolycrystalHex. I can plan to contribute the changes.",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6684260",
                          "updatedAt": "2023-08-09T20:05:26Z",
                          "publishedAt": "2023-08-09T20:05:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "awesome!\nplease do and tag Gary or myself",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6684353",
                          "updatedAt": "2023-08-09T20:19:07Z",
                          "publishedAt": "2023-08-09T20:19:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "permcody"
                          },
                          "bodyText": "As a possible author of this code, I'm not sure it ever worked in 3D... You likely aren't doing anything wrong other than hitting half-baked code. @sourabhkadambi - I would welcome your changes to the repository!",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6684825",
                          "updatedAt": "2023-08-09T21:24:10Z",
                          "publishedAt": "2023-08-09T21:24:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "@permcody is right. For now if you make a PR, just error out if mesh is 3D but columnar_3D is false.",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6690658",
                          "updatedAt": "2023-08-10T12:04:02Z",
                          "publishedAt": "2023-08-10T12:04:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "(unless you implemented the functionality, that s better than an error)",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6692975",
                          "updatedAt": "2023-08-10T15:27:46Z",
                          "publishedAt": "2023-08-10T15:27:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sbmse007"
                  },
                  "bodyText": "@sourabhkadambi- This is great. Can you also please provide me with some hints to generate something like yours? I am also presently working on modifying the code to make it work.\nThanks.",
                  "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6688676",
                  "updatedAt": "2023-08-10T08:37:27Z",
                  "publishedAt": "2023-08-10T08:37:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sourabhkadambi"
                          },
                          "bodyText": "Hello, the PR with _columnar_3D option has been merged. You should be able to initialized the required microstructure now.",
                          "url": "https://github.com/idaholab/moose/discussions/25155#discussioncomment-6870125",
                          "updatedAt": "2023-08-31T00:38:20Z",
                          "publishedAt": "2023-08-31T00:38:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "EBSD reconstruction from dream3D INL file",
          "author": {
            "login": "fuyao0610"
          },
          "bodyText": "Hello all,\nI encountered some difficulty in using the EBSDReader. The EBSD file was prepared using dream3D. Before it is read by moose, I also generated a IPF color map in dream3D to check if the grains are correctly shown in paraview (figure named IPF color), to make sure the data processing is correct.\nUsing the input script given in the moose named EulerAngleVariables2RGBAux.i and changing the EBSD file name, I try to read it in MOOSE, but I got the following results (shown in figure 'rgb') after opening the output from paraview.  The grain structures are generally correct but there are a few streaks.\nI also attached the EBSD file generated from dream3D (316INL.txt).  Is there some setting in Moose input script that I didn't set up correctly?\n\n\n316INL.txt",
          "url": "https://github.com/idaholab/moose/discussions/25180",
          "updatedAt": "2023-08-30T20:35:35Z",
          "publishedAt": "2023-08-10T21:23:24Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "@dschwen I think maybe you have the most experience with this reader?",
                  "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6696154",
                  "updatedAt": "2023-08-10T21:30:44Z",
                  "publishedAt": "2023-08-10T21:30:43Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fuyao0610"
                  },
                  "bodyText": "I am wondering if if you have time to take a look at this and provide some guidance?\n\n\nBest,\nYao\n\u2026\n On Aug 10, 2023, at 5:30 PM, Alex Lindsay ***@***.***> wrote:\n\n\n @dschwen <https://github.com/dschwen> I think maybe you have the most experience with this reader?\n\n \u2014\n Reply to this email directly, view it on GitHub <#25180 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AF3KIRRJHL5AOHAESWH2CALXUVHI5ANCNFSM6AAAAAA3MCKPFE>.\n You are receiving this because you authored the thread.",
                  "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6804786",
                  "updatedAt": "2023-08-23T20:16:43Z",
                  "publishedAt": "2023-08-23T16:19:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Could you please share the MOOSE input as well?",
                  "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805158",
                  "updatedAt": "2023-08-23T17:12:23Z",
                  "publishedAt": "2023-08-23T16:59:33Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "It looks like the grain structure itself i read correctly:",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805262",
                          "updatedAt": "2023-08-23T17:14:36Z",
                          "publishedAt": "2023-08-23T17:14:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "The averaged Euler angles for each grain also look fine. (this is Phi)",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805314",
                          "updatedAt": "2023-08-23T17:20:22Z",
                          "publishedAt": "2023-08-23T17:20:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Getting the non averaged (point) data looks fine to me as well:\n\nHere I'm showing phi1, which is returned in degrees. an angle of 360deg is equivalent to an angle of 0deg, and orientations close to the poles can be close together an still show large precessions,  hence the apparent noise.",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805359",
                          "updatedAt": "2023-08-23T17:25:59Z",
                          "publishedAt": "2023-08-23T17:24:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "My suspicion here is that everything is fine. The problem here is that you are looking at RGB wrong. That AuxKernel will actually output a 24bit number that corresponds to a value from 0x000000 to 0xffffff whci encodes a full RGB color value with 8bits per component.\n\nOk, I think I know what's going on. It looks like tehre is an overflow in that calculation.\nBy the way the above viz can be made with paraview using a Calculator filter:\n(rgb%256)*kHat + ((rgb/256)%256)*jHat + ((rgb/256/256)%256)*iHat\n\nand by unticking Map scalars",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805587",
                          "updatedAt": "2023-08-23T17:54:49Z",
                          "publishedAt": "2023-08-23T17:54:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Let me try and fix this...",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805591",
                          "updatedAt": "2023-08-23T17:55:10Z",
                          "publishedAt": "2023-08-23T17:55:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "No that's not it. Then the error must be in Euler2RGB.C. That code is nasty. At least this is only a visualization issue, not a reader issue. All the data looks like it's read correctly.",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805659",
                          "updatedAt": "2023-08-23T18:02:45Z",
                          "publishedAt": "2023-08-23T18:02:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fuyao0610"
                          },
                          "bodyText": "Thanks for taking the time to look at it. If I understand correctly, the euler angles are correct but not the rgb color?  Also can I ask for the input script template because the one I used didn't get the ebsd_grains, phi_prime and phi_average at the output",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6806910",
                          "updatedAt": "2023-08-23T21:13:55Z",
                          "publishedAt": "2023-08-23T21:13:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Yeah, here you go\nyao.i.txt",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6868654",
                          "updatedAt": "2023-08-30T20:35:36Z",
                          "publishedAt": "2023-08-30T20:35:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fuyao0610"
                  },
                  "bodyText": "Sure, here it is.\n\n[Mesh]\n  [ebsd_mesh]\n    type = EBSDMeshGenerator\n    filename = 316INL.txt\n  []\n[]\n\n[UserObjects]\n  [ebsd]\n    type = EBSDReader\n  []\n[]\n\n[AuxVariables]\n  [phi1]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [phi]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [phi2]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n\n  [phase]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [symmetry]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n\n  [rgb]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n[]\n\n[AuxKernels]\n  [phi1_aux]\n    type = EBSDReaderPointDataAux\n    variable = phi1\n    ebsd_reader = ebsd\n    data_name = phi1\n    execute_on = initial\n  []\n  [phi_aux]\n    type = EBSDReaderPointDataAux\n    variable = phi\n    ebsd_reader = ebsd\n    data_name = phi\n    execute_on = initial\n  []\n  [phi2_aux]\n    type = EBSDReaderPointDataAux\n    variable = phi2\n    ebsd_reader = ebsd\n    data_name = phi2\n    execute_on = initial\n  []\n\n  [phase_aux]\n    type = EBSDReaderPointDataAux\n    variable = phase\n    ebsd_reader = ebsd\n    data_name = phase\n    execute_on = initial\n  []\n\n  [symmetry_aux]\n    type = EBSDReaderPointDataAux\n    variable = symmetry\n    ebsd_reader = ebsd\n    data_name = symmetry\n    execute_on = initial\n  []\n\n  [rgb]\n    type = EulerAngleVariables2RGBAux\n    variable = rgb\n    phi1 = phi1\n    phi = phi\n    phi2 = phi2\n    phase = phase\n    symmetry = symmetry\n    execute_on = initial\n  []\n[]\n\n[Executioner]\n  type = Steady\n[]\n\n[Problem]\n  solve = false\n  kernel_coverage_check = false\n[]\n\n[Outputs]\n  exodus = true\n#  show = 'rgb'\n[]\n\nBest,\nYao\n\u2026\n On Aug 23, 2023, at 12:59 PM, Daniel Schwen ***@***.***> wrote:\n\n\n Could you please share the MOOSE input as well?\n\n \u2014\n Reply to this email directly, view it on GitHub <#25180 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AF3KIRXY45ZO7YB5FIZPBX3XWYZIBANCNFSM6AAAAAA3MCKPFE>.\n You are receiving this because you authored the thread.",
                  "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805232",
                  "updatedAt": "2023-08-23T20:16:28Z",
                  "publishedAt": "2023-08-23T17:10:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fuyao0610"
                  },
                  "bodyText": "I couldn\u2019t get this from the moose output, are you suggesting some changes of the input script?\n\n\nBest,\nYao\n\u2026\n On Aug 23, 2023, at 1:14 PM, Daniel Schwen ***@***.***> wrote:\n\n\n It looks like the grain structure itself i read correctly:\n  <https://user-images.githubusercontent.com/202302/262747698-3740fe0b-2957-455b-ac01-8d1a0ead9f79.png>\n \u2014\n Reply to this email directly, view it on GitHub <#25180 (reply in thread)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AF3KIRUT27WOKN5WPQEVN3DXWY3APANCNFSM6AAAAAA3MCKPFE>.\n You are receiving this because you authored the thread.",
                  "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805319",
                  "updatedAt": "2023-08-23T18:03:16Z",
                  "publishedAt": "2023-08-23T17:21:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "It's easier if you reply in thread rather than creating a new answer each time...",
                          "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6805538",
                          "updatedAt": "2023-08-23T17:47:38Z",
                          "publishedAt": "2023-08-23T17:47:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fuyao0610"
                  },
                  "bodyText": "Sure, I will reply in the thread in future",
                  "url": "https://github.com/idaholab/moose/discussions/25180#discussioncomment-6806914",
                  "updatedAt": "2023-08-23T21:14:26Z",
                  "publishedAt": "2023-08-23T21:14:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Multiple exodus",
          "author": null,
          "bodyText": "Hello,\nHow can I get only one exodus file while using adaptivity?",
          "url": "https://github.com/idaholab/moose/discussions/25348",
          "updatedAt": "2023-08-30T13:14:14Z",
          "publishedAt": "2023-08-30T13:08:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can't. A single exodus file does not support multiple meshes afaik and adaptivity modifies the mesh (adds or removes elements)\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25348#discussioncomment-6864067",
                  "updatedAt": "2023-08-30T13:10:00Z",
                  "publishedAt": "2023-08-30T13:09:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": null,
                          "bodyText": "ok thank you",
                          "url": "https://github.com/idaholab/moose/discussions/25348#discussioncomment-6864109",
                          "updatedAt": "2023-08-30T13:14:15Z",
                          "publishedAt": "2023-08-30T13:14:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}