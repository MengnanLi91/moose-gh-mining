{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0xMi0wNVQxNTowNTo1Ny0wNjowMM4AWinc"
    },
    "edges": [
      {
        "node": {
          "title": "How to plot engineering stress-strain curve?",
          "author": {
            "login": "pshen20127"
          },
          "bodyText": "Hi All\nDo you know how to plot engineering stress-strain curve of the entire model?\nThanks\nPengfei",
          "url": "https://github.com/idaholab/moose/discussions/26291",
          "updatedAt": "2023-12-11T05:01:59Z",
          "publishedAt": "2023-12-10T23:49:55Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I think @hugary1995 answered this last time but I cannot find the post unfortunately",
                  "url": "https://github.com/idaholab/moose/discussions/26291#discussioncomment-7815119",
                  "updatedAt": "2023-12-11T03:04:30Z",
                  "publishedAt": "2023-12-11T03:04:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "@pshen20127,  \"entire model\" is a little vague. Are you looking at a macroscale structure or a representative volume element?",
                          "url": "https://github.com/idaholab/moose/discussions/26291#discussioncomment-7815167",
                          "updatedAt": "2023-12-11T03:14:21Z",
                          "publishedAt": "2023-12-11T03:14:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "I am looking at macroscale structure",
                          "url": "https://github.com/idaholab/moose/discussions/26291#discussioncomment-7815227",
                          "updatedAt": "2023-12-11T03:30:56Z",
                          "publishedAt": "2023-12-11T03:30:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "The stresses and strains are different at each point in the structure, so you need to properly define what you meant by \"stress strain curve for the entire model\".",
                          "url": "https://github.com/idaholab/moose/discussions/26291#discussioncomment-7815279",
                          "updatedAt": "2023-12-11T03:44:16Z",
                          "publishedAt": "2023-12-11T03:44:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "I am trying to plot global stress-strain curve. As the figure shown below, the stress is the average of reaction forces at the nodes on the right or left edge divided by the length of that edge. And the strain is the displacement of the right edge divided by the original length of the model.",
                          "url": "https://github.com/idaholab/moose/discussions/26291#discussioncomment-7815433",
                          "updatedAt": "2023-12-11T04:18:09Z",
                          "publishedAt": "2023-12-11T04:18:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Use a NodalSum PP to get the total reaction force on the left boundary. Use a ParsedPlstprocessor to divide the reaction force by the left side length. Use a AverageNodalVariableValue PP to get the average displacement on the right side. Use a ParsedPlstprocessor to divide the average displacement by the axial length.",
                          "url": "https://github.com/idaholab/moose/discussions/26291#discussioncomment-7815447",
                          "updatedAt": "2023-12-11T04:24:18Z",
                          "publishedAt": "2023-12-11T04:22:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "Got it. Do you know how to extract reaction force at a certain node?",
                          "url": "https://github.com/idaholab/moose/discussions/26291#discussioncomment-7815658",
                          "updatedAt": "2023-12-11T05:02:00Z",
                          "publishedAt": "2023-12-11T05:01:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "What are the variables for in the csv file generated in a simulation?",
          "author": {
            "login": "pshen20127"
          },
          "bodyText": "Hi All\nAfter I finished a simulation, I got 2 files as below.\n\nWhen I open the .csv file, there are several variables as shown in the red block. Which node or point are these values for?\n\nThanks\nPengfei",
          "url": "https://github.com/idaholab/moose/discussions/26287",
          "updatedAt": "2023-12-10T15:54:35Z",
          "publishedAt": "2023-12-09T04:26:53Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe content of the CSV file depends on the input file.\nThe typical case is that it contains the output of postprocessors and scalar variables on every time step.\nPlease check the [Postprocessors] block in your input file.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26287#discussioncomment-7806803",
                  "updatedAt": "2023-12-09T12:29:07Z",
                  "publishedAt": "2023-12-09T12:29:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "Hello\nI know they are output of postprocessors and scalar variables on every time step. I am just wondering are these values for a node or element? if so, which node or element are these values for? Because it outputs euler angles, which must be a certain element's euler angle, I want to know which element it refers to. I attached my input file and output .csv file in the link below.\nhttps://github.com/pshen20127/Test.git\nPengfei",
                          "url": "https://github.com/idaholab/moose/discussions/26287#discussioncomment-7809275",
                          "updatedAt": "2023-12-09T23:10:31Z",
                          "publishedAt": "2023-12-09T23:10:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Looking at the Postprocessor block on the input on the repo, these are averages of the element values.\nOr more accurately averages over the entire mesh using an integration loop overs element (integrates over quadrature points on each element)",
                          "url": "https://github.com/idaholab/moose/discussions/26287#discussioncomment-7809779",
                          "updatedAt": "2023-12-10T02:54:14Z",
                          "publishedAt": "2023-12-10T02:54:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "Then are the euler angles the averages of all elements? Another question is how I get engineering stress and strain and plot them?\nPengfei",
                          "url": "https://github.com/idaholab/moose/discussions/26287#discussioncomment-7809915",
                          "updatedAt": "2023-12-10T04:01:34Z",
                          "publishedAt": "2023-12-10T04:01:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "These ones?\n  [euler_angle_1]\n    type = ElementAverageValue\n    variable = euler_angle_1\n  []\n  [euler_angle_2]\n    type = ElementAverageValue\n    variable = euler_angle_2\n  []\n  [euler_angle_3]\n    type = ElementAverageValue\n    variable = euler_angle_3\n  []\n\nyes they are averages over all elements.\nI think you can get stresses & strains out from material property output.\nThere's been questions about getting the engineering stress on the forum already i think as well",
                          "url": "https://github.com/idaholab/moose/discussions/26287#discussioncomment-7812263",
                          "updatedAt": "2023-12-10T15:54:36Z",
                          "publishedAt": "2023-12-10T15:54:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Problems in calculating thermal strain",
          "author": {
            "login": "Krystalbbling"
          },
          "bodyText": "Dear expert,\nI am dealing with a thermomechanical flow coupling problem. After debugging, it can be carried out smoothly, but I can only obtain the strain. I hope to calculate and obtain the variables of the strain (thermal strain), but some problems have arisen.\nInput file:\n[Variables]\n   [./T]\n    block = '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n    initial_condition = 290\n  [../]\n  [./disp_x]\n    block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 '\n    initial_condition = 0\n  [../]\n  [./disp_y]\n    block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n    initial_condition = 0\n  [../]\n  [./disp_z]\n    block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n    initial_condition = 0\n  [../]\n   [./velocity]\n    family = LAGRANGE_VEC\n    block='2'\n  [../]\n  [./p]\n    order = FIRST\n    family = LAGRANGE\n    block='2'\n  [../]\n[]\n\n[AuxVariables]\n  [./von_mises]\n    #Dependent variable used to visualize the Von Mises stress\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n   [./total_strain]\n    family = MONOMIAL\n    order = CONSTANT\n  [../]\n[]\n\n[Kernels]\n  # Diffusion kernel for each block's variable\n   [TensorMechanics]\n    displacements = 'disp_x disp_y disp_z'\n   block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n  []\n  [source_0]\n    type = HeatSource\n    variable = T\n    value = 8e7\n    block ='11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n  []\n\n  [diff_0]\n    type = ADHeatConduction\n    variable = T\n    block ='1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n  []\n  [fluid_conduction]\n    type = ADHeatConduction\n    variable = T\n    block = '2'\n    thermal_conductivity = 'k'\n  []\n [./mass]\n    type = INSADMass\n    variable = p\n  [../]\n  [./mass_pspg]\n    type = INSADMassPSPG\n    variable = p\n  [../]\n  [./momentum_convection]\n    type = INSADMomentumAdvection\n    variable = velocity\n  [../]\n  [./momentum_viscous]\n    type = INSADMomentumViscous\n    variable = velocity\n  [../]\n  [./momentum_pressure]\n    type = INSADMomentumPressure\n    variable = velocity\n    pressure = p\n    integrate_p_by_parts = true\n  [../]\n  [./momentum_supg]\n    type = INSADMomentumSUPG\n    variable = velocity\n    velocity = velocity\n  [../]\n [./temperature_advection]\n   type = INSADEnergyAdvection\n   variable = T\n    block = '2'\n [../]\n  [temperature_supg]\n    type = INSADEnergySUPG\n    variable = T\n    velocity = velocity\n    block = '2'\n  []\n[]\n\n[AuxKernels]\n   [./von_mises_kernel]\n    #Calculates the von mises stress and assigns it to von_mises\n    type = RankTwoScalarAux\n    variable = von_mises\n    rank_two_tensor = stress\n    execute_on = timestep_end\n    scalar_type = VonMisesStress\n    block ='1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n      [../]\n       [./total_strain_kernel]\n  type = RankTwoScalarAux\n  variable = total_strain  \n  rank_two_tensor = thermal_strain_1\n  execute_on = timestep_end\n  scalar_type = EffectiveStrain\n  block ='1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n[../]\n[]\n\n\n[BCs]\n [./plane_wall]#PCB\n  type = ADConvectiveHeatFluxBC\n  variable = T\n  boundary = '1'\n  T_infinity = 290\n  heat_transfer_coefficient = 10\n  [../]\n  [./no_slip]\n    type = VectorFunctionDirichletBC\n    variable = velocity\n    boundary = '12'\n  [../]\n  [./vec_inlet]\n    type = VectorFunctionDirichletBC\n    variable = velocity\n    boundary = '10'\n    function_x = 0.4 #m/s\n  [../]\n  [./inlet_temp]\n    type = DirichletBC\n    variable =T\n    boundary = '10'\n    value = 290\n  [../]\n  [./outlet_p]\n    type = DirichletBC\n    variable = p\n    boundary = '11'\n    value = 0\n  [../]\n  [./outer_x] #Displacements in the y-direction are fixed in the center\n    type = DirichletBC\n    variable = disp_x\n    boundary = '2 3'\n    value = 0\n  [../]\n  [./outer_y] #Displacements in the y-direction are fixed in the center\n    type = DirichletBC\n    variable = disp_y\n    boundary = '2 3'\n    value = 0\n  [../]\n  [./outer_z] #Displacements in the z-direction are fixed in the center\n    type = DirichletBC\n    variable = disp_z\n    boundary = '2 3'\n    value = 0\n  [../]\n[]\n\n[Materials]\n  [./const_fluid]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho mu cp k'\n    prop_values = '${rho} ${mu}  ${cp}  ${k}'\n    block = '2'\n  [../]\n  [ins_mat]\n    type = INSADStabilized3Eqn\n    velocity = velocity\n    pressure = p\n    temperature = T\n    block='2'\n  []\n\n  [./plate]\n    type = ADHeatConductionMaterial\n    thermal_conductivity = 202.4    # W/m k\n    specific_heat = 871  # J/kg k\n    block = '1 3 4 5 6 7 8 9 10'\n  [../]\n\n  [./fluid]\n    type = ADHeatConductionMaterial\n    thermal_conductivity = .6  # W/m k\n    specific_heat = 4128    # J/kg K\n    block = '2'\n  [../]\n\n  [./source]\n    type = ADHeatConductionMaterial\n    thermal_conductivity = 202.4   # W/m k\n    specific_heat = 871    # J/kg k\n    block = '11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n  [../]\n\n\n  [eigenstrain_1]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 105e9\n    poissons_ratio = 0.33\n    block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n  []\n\n[thermal_strain_1]\n  type = ComputeThermalExpansionEigenstrain\n  thermal_expansion_coeff = 7.06e-6 \n  temperature = T\n  stress_free_temperature = 290\n  eigenstrain_name = eigenstrain_1\n  block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n[]\n\n  [stress] #We use linear elasticity\n    type = ComputeLinearElasticStress\n    block ='1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n  []\n[]\n\n\nThe error message\uff08part\uff09 is as follows\uff1a\n*** ERROR ***\nThe following error occurred in the object \"MOOSE Problem\", of type \"FEProblem\".\n\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block plate\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block plate\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block plate\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block plate\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block connect1\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block connect1\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block connect1\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block connect1\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block connect2\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block connect2\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block connect2\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block connect2\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block connect3\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block connect3\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block connect3\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block connect3\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block connect4\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block connect4\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block connect4\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block connect4\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block resist1\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block resist1\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block resist1\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block resist1\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block resist2\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block resist2\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block resist2\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block resist2\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block resist3\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block resist3\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block resist3\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block resist3\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block resist4\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block resist4\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block resist4\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block resist4\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 11\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 11\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 11\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 11\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 12\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 13\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 14\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 15\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 16\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 17\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 18\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 19\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 20\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 21\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 22\nMaterial property 'thermal_strain_12', requty 'mechanical_strain', requested by 'stress' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 12\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 13\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 14\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 15\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 16\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 17\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 18\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 19\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 20\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 21\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 22\nMaterial property 'thermal_strain_12', requty 'mechanical_strain', requested by 'stress' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 12\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 13\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 14\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 15\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 16\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 17\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 18\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 19\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 20\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 21\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 22\nMaterial property 'thermal_strain_12', requty 'mechanical_strain', requested by 'stress' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 12\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 13\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 14\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 15\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 16\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 17\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 18\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 19\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 20\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 21\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 22\nMaterial property 'thermal_strain_12', requty 'mechanical_strain', requested by 'stress' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 12\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 13\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 14\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 15\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 16\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 17\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 18\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 19\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 20\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 21\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 22\nMaterial property 'thermal_strain_12', requty 'mechanical_strain', requested by 'stress' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 12\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 13\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 14\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 15\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 16\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 17\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 18\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 19\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 20\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 21\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 22\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 23\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 23\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 23\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 23\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 24\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 24\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 24\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 24\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 25\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 25\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 25\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 25\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 26\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 26\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 26\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 26\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 27\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 27\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 27\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 27\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 28\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 28\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 28\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 28\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 29\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 29\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 29\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 29\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 30\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 30\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 30\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 30\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 31\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 31\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 31\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 31\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 32\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 32\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 32\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 32\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 33\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 33\nMaterial property 'mechanical_strain', requested by 'stress_neighboty 'mechanical_strain', requested by 'stress' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 12\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 12\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 13\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 13\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 14\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 14\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 15\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 15\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 16\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 16\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 17\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 17\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 18\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 18\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 19\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 19\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 20\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 20\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 21\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 21\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 22\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 22\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 23\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 23\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 23\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 23\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 24\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 24\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 24\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 24\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 25\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 25\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 25\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 25\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 26\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 26\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 26\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 26\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 27\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 27\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 27\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 27\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 28\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 28\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 28\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 28\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 29\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 29\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 29\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 29\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 30\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 30\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 30\nMaterial property 'thermal_strain_12', requested by 'total_strain_kernel' is not defined on block 30\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 31\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 31\n\nIt looks like it's calling Calculate Mechanical Stress, but I don't have the relevant settings.Please help me find out where the problem is. I look forward to your reply.\nKrystal",
          "url": "https://github.com/idaholab/moose/discussions/26288",
          "updatedAt": "2023-12-10T14:11:08Z",
          "publishedAt": "2023-12-09T14:03:32Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I think you are missing one Material that defines both strains.\nThis is why the material property is missing on 30-something blocks.\nWhich input file did you start from?",
                  "url": "https://github.com/idaholab/moose/discussions/26288#discussioncomment-7807655",
                  "updatedAt": "2023-12-09T15:53:21Z",
                  "publishedAt": "2023-12-09T15:53:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "@Krystalbbling you have to pass the thermal eigenstrain to TensorMechanics, see this example:\nhttps://github.com/idaholab/moose/blob/next/modules/tensor_mechanics/test/tests/thermal_expansion/constant_expansion_coeff.i",
                  "url": "https://github.com/idaholab/moose/discussions/26288#discussioncomment-7809526",
                  "updatedAt": "2023-12-10T00:46:58Z",
                  "publishedAt": "2023-12-10T00:46:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Krystalbbling"
                  },
                  "bodyText": "I think so.But I don't know which step turn it to TensorMechanics.How can I change it.\n\u2026\n---- Replied Message ----\n| From | Nicol\u00f2 ***@***.***> |\n| Date | 12/10/2023 08:46 |\n| To | ***@***.***> |\n| Cc | ***@***.***>***@***.***> |\n| Subject | Re: [idaholab/moose] Problems in calculating thermal strain (Discussion #26288) |\n\n@Krystalbbling you have to pass the thermal eigenstrain to TensorMechanics\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you were mentioned.Message ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26288#discussioncomment-7809838",
                  "updatedAt": "2023-12-10T03:24:34Z",
                  "publishedAt": "2023-12-10T03:24:33Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think it's this one\n  # Diffusion kernel for each block's variable\n   [TensorMechanics]\n    displacements = 'disp_x disp_y disp_z'\n    eigenstrain_name = eigenstrain_1\n   block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74'\n  []",
                          "url": "https://github.com/idaholab/moose/discussions/26288#discussioncomment-7811843",
                          "updatedAt": "2023-12-10T14:11:09Z",
                          "publishedAt": "2023-12-10T14:11:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "SolutionUserObject and dynamics",
          "author": {
            "login": "TheGreatCid"
          },
          "bodyText": "Hi all,\nDoes MOOSE currently have the capability to use SolutionUserObject to start a dynamic simulation where u_old is not zero.\nI am doing this in the context of remeshing and restarting, so I cannot use the restart/checkpoint system.\nEssentially, If I output the u_old values in the file I am reading with SolutionUserObject, can I populate the u_old values as in initial condition in the new simulation?\nIs there a better way to go about this?",
          "url": "https://github.com/idaholab/moose/discussions/26275",
          "updatedAt": "2023-12-08T16:39:42Z",
          "publishedAt": "2023-12-07T18:50:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Yea you could write out foo_old and read in foo_old",
                  "url": "https://github.com/idaholab/moose/discussions/26275#discussioncomment-7801654",
                  "updatedAt": "2023-12-08T16:39:42Z",
                  "publishedAt": "2023-12-08T16:39:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Some questions about Moltres app",
          "author": {
            "login": "SomnusYu"
          },
          "bodyText": "Hi all,\nI would like to know if there are some theory manuals about the Moltres app. I found some introduction (https://arfc.github.io/software/moltres/wiki/kernels/) but I can not read it, which is shown:\n\nBy the way, I have another question. If it is possible to solve some neutronic problems in 3D geometry using the Moltres app?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/26271",
          "updatedAt": "2023-12-08T00:36:34Z",
          "publishedAt": "2023-12-07T13:25:33Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou are on the right website\nFrom this link http://arfc.github.io/software/moltres/\nyou can go on their wifi and the equations are formatted better there.\nI would think you can do 3D yes. it will be more expensive computationally.\nYou could also ask for access to the NEAMS neutronics code: Griffin, here: https://ncrcaims.inl.gov/Identity/Account/Login\nDo you have collaborations with INL or ANL / any US institutions? You'll need a sponsor to request access\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26271#discussioncomment-7788987",
                  "updatedAt": "2023-12-07T13:35:31Z",
                  "publishedAt": "2023-12-07T13:35:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Thank you very much! I do not have any collaborations with US institutions. In this case, is the Moltres my best choice to solve 3D neutronic problems?",
                          "url": "https://github.com/idaholab/moose/discussions/26271#discussioncomment-7789012",
                          "updatedAt": "2023-12-07T13:39:21Z",
                          "publishedAt": "2023-12-07T13:39:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Depends on the scale of your project tbh. I think it's good to get started, and when you hit its limitations you can decide if you want to add the features you need to Moltres or using Cardinal (https://github.com/neams-th-coe/cardinal) or work on coupling in a non-MOOSE neutronics codes",
                          "url": "https://github.com/idaholab/moose/discussions/26271#discussioncomment-7789337",
                          "updatedAt": "2023-12-07T14:07:35Z",
                          "publishedAt": "2023-12-07T14:07:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "And because it's open source you can always contribute any updates you make back to it so that it continues to grow",
                          "url": "https://github.com/idaholab/moose/discussions/26271#discussioncomment-7791249",
                          "updatedAt": "2023-12-07T16:59:39Z",
                          "publishedAt": "2023-12-07T16:59:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Thanks! Of course, I'm glad to make Moltres better.",
                          "url": "https://github.com/idaholab/moose/discussions/26271#discussioncomment-7794965",
                          "updatedAt": "2023-12-08T00:36:34Z",
                          "publishedAt": "2023-12-08T00:36:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Writing a mesh reader for an OpenFOAM mesh.",
          "author": {
            "login": "danielwardstfc"
          },
          "bodyText": "Hi, I'm looking to write a mesh reader to take a mesh in an OpenFOAM directory and load it into MOOSE.  I've tried to dig into the source a bit and have got to moose/framework/include/parser/Parser.h and found a message asking me to contact the developers.\nI'm trying to find out how mesh files are currently parsed and read in and I was wondering whether you could point me in the right direction.\nThanks,\nDaniel",
          "url": "https://github.com/idaholab/moose/discussions/26274",
          "updatedAt": "2023-12-07T18:04:41Z",
          "publishedAt": "2023-12-07T17:38:38Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAll the mesh readers in MOOSE are coming from libmesh. There's even a few in libmesh we have not created interfaces for in MOOSE.\nOnce you have the mesh reader merged on the libmesh side, we ll want to simply make the FileMeshGenerator in MOOSE use it.\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26274#discussioncomment-7792066",
                  "updatedAt": "2023-12-07T18:04:42Z",
                  "publishedAt": "2023-12-07T18:04:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to output beam forces / moments from ComputeBeamResultants",
          "author": {
            "login": "andrey1887"
          },
          "bodyText": "Hello. Tell me please how i can output Forces and Moments in beam element from ComputeBeamResultants for the following visualization in paraview.",
          "url": "https://github.com/idaholab/moose/discussions/26138",
          "updatedAt": "2023-12-06T20:28:01Z",
          "publishedAt": "2023-11-23T18:24:56Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@cbolisetti @bwspenc",
                  "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7660802",
                  "updatedAt": "2023-11-24T13:47:24Z",
                  "publishedAt": "2023-11-24T13:47:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you @GiudGiud.\n@cbolisetti, @bwspenc. Maybe this is possible by specifying some option in the input file?",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7662701",
                          "updatedAt": "2023-11-24T17:40:39Z",
                          "publishedAt": "2023-11-24T17:40:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cbolisetti"
                  },
                  "bodyText": "Beam forces and moments are stored as materialproperties and you can output them using Auxkernels. There should be examples if you go through the test files and documentation.",
                  "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7662711",
                  "updatedAt": "2023-11-24T17:43:09Z",
                  "publishedAt": "2023-11-24T17:43:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you @cbolisetti.",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7662931",
                          "updatedAt": "2023-11-24T19:57:28Z",
                          "publishedAt": "2023-11-24T18:21:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "@cbolisetti, can you give a link for some suitable example. Do i need to create auxkernel in my app to do it? What type in auxkernel i must specify?\nThis is constructor of ComputeBeamResultants:\nComputeBeamResultants::ComputeBeamResultants(const InputParameters & parameters)\n  : Material(parameters),\n    _disp_strain_increment(\n        getMaterialPropertyByName<RealVectorValue>(\"mech_disp_strain_increment\")),\n    _rot_strain_increment(getMaterialPropertyByName<RealVectorValue>(\"mech_rot_strain_increment\")),\n    _material_stiffness(getMaterialPropertyByName<RealVectorValue>(\"material_stiffness\")),\n    _material_flexure(getMaterialPropertyByName<RealVectorValue>(\"material_flexure\")),\n    _total_rotation(getMaterialPropertyByName<RankTwoTensor>(\"total_rotation\")),\n    _force(declareProperty<RealVectorValue>(\"forces\")),\n    _moment(declareProperty<RealVectorValue>(\"moments\")),\n    _force_old(getMaterialPropertyOld<RealVectorValue>(\"forces\")),\n    _moment_old(getMaterialPropertyOld<RealVectorValue>(\"moments\"))\n{\n}",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7707083",
                          "updatedAt": "2023-11-29T16:42:02Z",
                          "publishedAt": "2023-11-29T16:35:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Now i added the next blocks in input file:\n[AuxVariables]\n  [forces]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n\n[AuxKernels]\n  [forces]\n    type = MaterialStdVectorAux\n    property = forces\n    component = 0\n    variable = forces\n  []\n\nAnd the error occured:\n*** ERROR ***                                                                                                                         \nThe following error occurred in the object \"forces\", of type \"MaterialStdVectorAux\".                                                  \n                                                                                                                                      \nThe requested non-AD material property 'forces' of type 'std::vector<double>'                                                         \nis already retrieved or declared as a non-AD property of type 'libMesh::VectorValue<double>'.",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7707655",
                          "updatedAt": "2023-11-29T17:19:16Z",
                          "publishedAt": "2023-11-29T17:19:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is there ADMaterialStdVectorAux you can use?\nThe problem here is that the material property is AD but the auxkernel is retrieving a non-AD",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7708024",
                          "updatedAt": "2023-11-29T17:54:29Z",
                          "publishedAt": "2023-11-29T17:54:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you, @GiudGiud for your answer, but with AD almost the same thing:\n*** ERROR ***                                                                                                                         \nThe following error occurred in the object \"forces\", of type \"ADMaterialStdVectorAux\".                                                \n                                                                                                                                      \nThe requested AD material property 'forces' of type 'std::vector<double>'                                                             \nis already retrieved or declared as a non-AD property of type 'libMesh::VectorValue<double>'.",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7708075",
                          "updatedAt": "2023-11-29T17:58:16Z",
                          "publishedAt": "2023-11-29T17:58:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Oh this is an array vs vector thing\nArray is stdVector in the title. Remove std from the name of the auxkernel",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7708167",
                          "updatedAt": "2023-11-29T18:06:33Z",
                          "publishedAt": "2023-11-29T18:06:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "[AuxKernels]\n  [forces]\n    type = MaterialRealVectorValueAux\n    property = forces\n    component = 0\n    variable = forces\n  []\n\nWorking variant",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7708224",
                          "updatedAt": "2023-11-29T18:15:57Z",
                          "publishedAt": "2023-11-29T18:11:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this one\nhttps://mooseframework.inl.gov/source/auxkernels/MaterialRealVectorValueAux.html",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7708287",
                          "updatedAt": "2023-11-29T18:15:22Z",
                          "publishedAt": "2023-11-29T18:15:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "or maybe the AD version.\nNot sure how we can fix this. Maybe a table of the matprop type vs name of the object ?",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7708293",
                          "updatedAt": "2023-11-29T18:16:01Z",
                          "publishedAt": "2023-11-29T18:16:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "It looks normal. But here nodal moments obtained from nearby elements and at the end elements\nmidpoint values are simply translated to edge nodes. It would be better if the nodal values of moments or forces will be passed into exodus.",
                          "url": "https://github.com/idaholab/moose/discussions/26138#discussioncomment-7720981",
                          "updatedAt": "2023-11-30T18:15:39Z",
                          "publishedAt": "2023-11-30T18:09:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Confusion over global residual vector scaling",
          "author": {
            "login": "kteferra2"
          },
          "bodyText": "Hi,\nI am trying to extract the global residual vectors per kernel so that I can manipulate them independently outside of the code. In order to test this out, I have been working with the example code \"dyn_euler_small.i, which can be found in the test folder: .../tensor_mechanics/test/tests/beam/dynamic/.\nI have been able to extract the global vectors for each time step for the kernels (i.e., StressDivergenceBeam, InertialforceBeam, UserForcingFunctionNodalKernel, etc) using the \"extra_vector_tags\" option. However, I cannot figure out how these values are scaled. As this is a simple problem, I created the global residual vectors on my own and found that the residual vectors have identical shape but are scaled by a constant factor. However, I am not able to figure out how this factor is a function of the problem parameters. Further, when I move on to other problems, I won't want to create the global vectors on my own to try to find out the scale factor. Can someone please help me find in the code where the global vectors are scaled (I assume prior to the solving of the system of equations)? Is this listed in the documentation somewhere that I haven't been able to find?\nThanks you very much for your help.",
          "url": "https://github.com/idaholab/moose/discussions/26191",
          "updatedAt": "2023-12-06T17:53:12Z",
          "publishedAt": "2023-11-29T16:40:54Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "I created the global residual vectors on my own\n\nHow did you do this?",
                  "url": "https://github.com/idaholab/moose/discussions/26191#discussioncomment-7708381",
                  "updatedAt": "2023-11-29T18:24:08Z",
                  "publishedAt": "2023-11-29T18:24:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "kteferra2"
                          },
                          "bodyText": "oh I just meant I coded up an FE solution in python to the problem. (actually not the full solution but enough to evaluate the global force vectors and compare with what I outputted from MOOSE)",
                          "url": "https://github.com/idaholab/moose/discussions/26191#discussioncomment-7708631",
                          "updatedAt": "2023-11-29T18:49:38Z",
                          "publishedAt": "2023-11-29T18:49:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kteferra2"
                          },
                          "bodyText": "to be clear, i constructed stiffness and mass matrices (linear elastic problem) and then evaluated their matrix vector product with the solution (displacements and rotations) obtained from MOOSE. This should give the force vectors associated with the internal force and inertial force. Both of these scaled by a factor (the same factor for each) to the respective global residual vectors outputted from MOOSE.",
                          "url": "https://github.com/idaholab/moose/discussions/26191#discussioncomment-7708674",
                          "updatedAt": "2023-11-29T18:54:55Z",
                          "publishedAt": "2023-11-29T18:54:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I assume when constructing the matrices you multiplied by the element Jacobians? (Basically the volume of the elements)",
                          "url": "https://github.com/idaholab/moose/discussions/26191#discussioncomment-7730818",
                          "updatedAt": "2023-12-01T15:33:25Z",
                          "publishedAt": "2023-12-01T15:33:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kteferra2"
                          },
                          "bodyText": "Hi,\nYes. I just coded up the problem in python and can reproduce the results of the solution field. The force vector components that are output from MOOSE are on the order of 1e-9 whereas the force vector I'm computing are on order of 1e-2. It seems I cannot share with you the MOOSE input file through this format. So below I will copy and paste the entire thing (sorry if this is not the protocol for sharing). Thanks\n===============================================================\n[Mesh]\n  type = GeneratedMesh\n  xmin = 0.0\n  xmax = 4.0\n  dim = 1\n  nx = 200\n  displacements = 'disp_x disp_y disp_z'\n[]\n\n[Variables]\n  [./disp_x]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./disp_y]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./disp_z]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./rot_x]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./rot_y]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./rot_z]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n[]\n[AuxVariables]\n  [./fyS]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./fyI]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./fyL]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./MzS]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./MzI]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./MzL]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./vel_x]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./vel_y]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./vel_z]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./accel_x]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./accel_y]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./accel_z]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./rot_vel_x]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./rot_vel_y]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./rot_vel_z]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./rot_accel_x]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./rot_accel_y]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n  [./rot_accel_z]\n  order = FIRST\n  family = LAGRANGE\n  [../]\n[]\n\n[AuxKernels]\n  [f_yS]\n    type = TagVectorAux\n    variable = fyS\n    v = disp_y\n    vector_tag = forceSy\n    execute_on = timestep_end\n  []\n  [f_yI]\n    type = TagVectorAux\n    variable = fyI\n    v = disp_y\n    vector_tag = forceIy\n    execute_on = timestep_end\n  []\n  [f_yL]\n    type = TagVectorAux\n    variable = fyL\n    v = disp_y\n    vector_tag = forceLy\n    execute_on = timestep_end\n  []\n  [M_zS]\n    type = TagVectorAux\n    variable = MzS\n    v = rot_z\n    vector_tag = momSz\n    execute_on = timestep_end\n  []\n  [M_zI]\n    type = TagVectorAux\n    variable = MzI\n    v = rot_z\n    vector_tag = momIz\n    execute_on = timestep_end\n  []\n  [M_zL]\n    type = TagVectorAux\n    variable = MzL\n    v = rot_z\n    vector_tag = momLz\n    execute_on = timestep_end\n  []\n  [./accel_x]\n    type = NewmarkAccelAux\n    variable = accel_x\n    displacement = disp_x\n    velocity = vel_x\n    beta = 0.25\n    execute_on = timestep_end\n  [../]\n  [./vel_x]\n    type = NewmarkVelAux\n    variable = vel_x\n    acceleration = accel_x\n    gamma = 0.5\n    execute_on = timestep_end\n  [../]\n  [./accel_y]\n    type = NewmarkAccelAux\n    variable = accel_y\n    displacement = disp_y\n    velocity = vel_y\n    beta = 0.25\n    execute_on = timestep_end\n  [../]\n  [./vel_y]\n    type = NewmarkVelAux\n    variable = vel_y\n    acceleration = accel_y\n    gamma = 0.5\n    execute_on = timestep_end\n  [../]\n  [./accel_z]\n    type = NewmarkAccelAux\n    variable = accel_z\n    displacement = disp_z\n    velocity = vel_z\n    beta = 0.25\n    execute_on = timestep_end\n  [../]\n  [./vel_z]\n    type = NewmarkVelAux\n    variable = vel_z\n    acceleration = accel_z\n    gamma = 0.5\n    execute_on = timestep_end\n  [../]\n  [./rot_accel_x]\n    type = NewmarkAccelAux\n    variable = rot_accel_x\n    displacement = rot_x\n    velocity = rot_vel_x\n    beta = 0.25\n    execute_on = timestep_end\n  [../]\n  [./rot_vel_x]\n    type = NewmarkVelAux\n    variable = rot_vel_x\n    acceleration = rot_accel_x\n    gamma = 0.5\n    execute_on = timestep_end\n  [../]\n  [./rot_accel_y]\n    type = NewmarkAccelAux\n    variable = rot_accel_y\n    displacement = rot_y\n    velocity = rot_vel_y\n    beta = 0.25\n    execute_on = timestep_end\n  [../]\n  [./rot_vel_y]\n    type = NewmarkVelAux\n    variable = rot_vel_y\n    acceleration = rot_accel_y\n    gamma = 0.5\n    execute_on = timestep_end\n  [../]\n  [./rot_accel_z]\n    type = NewmarkAccelAux\n    variable = rot_accel_z\n    displacement = rot_z\n    velocity = rot_vel_z\n    beta = 0.25\n    execute_on = timestep_end\n  [../]\n  [./rot_vel_z]\n    type = NewmarkVelAux\n    variable = rot_vel_z\n    acceleration = rot_accel_z\n    gamma = 0.5\n    execute_on = timestep_end\n  [../]\n[]\n\n[BCs]\n  [./fixx1]\n    type = DirichletBC\n    variable = disp_x\n    boundary = left\n    value = 0.0\n  [../]\n  [./fixy1]\n    type = DirichletBC\n    variable = disp_y\n    boundary = left\n    value = 0.0\n  [../]\n  [./fixz1]\n    type = DirichletBC\n    variable = disp_z\n    boundary = left\n    value = 0.0\n  [../]\n  [./fixr1]\n    type = DirichletBC\n    variable = rot_x\n    boundary = left\n    value = 0.0\n  [../]\n  [./fixr2]\n    type = DirichletBC\n    variable = rot_y\n    boundary = left\n    value = 0.0\n  [../]\n  [./fixr3]\n    type = DirichletBC\n    variable = rot_z\n    boundary = left\n    value = 0.0\n  [../]\n[]\n\n[NodalKernels]\n  [./force_y2]\n    type = UserForcingFunctionNodalKernel\n    variable = disp_y\n    boundary = right\n    function = force1\n    extra_vector_tags = forceLy\n  [../]\n[]\n\n[Functions]\n  [./force1]\n    type = PiecewiseLinear\n    #data_file = load1.csv\n    x = '0.0 0.05 0.1 10.0'\n    y = '0.0 0.01  0.0  0.0'\n    format = columns\n  [../]\n[]\n\n[Preconditioning]\n  [./smp]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = NEWTON\n  line_search = 'default'\n  automatic_scaling = true\n  l_max_its = 300\n  #nl_max_its = 14\n  #nl_rel_tol = 1e-3\n  nl_abs_tol = 1e-12\n  l_tol = 1e-5\n  dt = 0.05\n  end_time = 10.50\n  timestep_tolerance = 1e-6\n[]\n\n[Problem]\n  type = FEProblem\n  extra_tag_vectors = 'forceSy forceIy forceLy momSz momIz momLz'\n[]\n\n[Kernels]\n  [./solid_disp_x]\n    type = StressDivergenceBeam\n    block = '0'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 0\n    variable = disp_x\n  [../]\n  [./solid_disp_y]\n    type = StressDivergenceBeam\n    block = '0'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 1\n    variable = disp_y\n    extra_vector_tags = forceSy\n  [../]\n  [./solid_disp_z]\n    type = StressDivergenceBeam\n    block = '0'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 2\n    variable = disp_z\n  [../]\n  [./solid_rot_x]\n    type = StressDivergenceBeam\n    block = '0'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 3\n    variable = rot_x\n  [../]\n  [./solid_rot_y]\n    type = StressDivergenceBeam\n    block = '0'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 4\n    variable = rot_y\n  [../]\n  [./solid_rot_z]\n    type = StressDivergenceBeam\n    block = '0'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    component = 5\n    variable = rot_z\n    extra_vector_tags = momSz\n  [../]\n  [./inertial_force_x]\n    type = InertialForceBeam\n    block = 0\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    velocities = 'vel_x vel_y vel_z'\n    accelerations = 'accel_x accel_y accel_z'\n    rotational_velocities = 'rot_vel_x rot_vel_y rot_vel_z'\n    rotational_accelerations = 'rot_accel_x rot_accel_y rot_accel_z'\n    beta = 0.25\n    gamma = 0.5\n    area = 0.01\n    Iy = 1e-4\n    Iz = 1e-4\n    Ay = 0.0\n    Az = 0.0\n    component = 0\n    variable = disp_x\n  [../]\n  [./inertial_force_y]\n    type = InertialForceBeam\n    block = 0\n    displacements = 'disp_x disp_y disp_z'\n   rotations = 'rot_x rot_y rot_z'\n   velocities = 'vel_x vel_y vel_z'\n   accelerations = 'accel_x accel_y accel_z'\n   rotational_velocities = 'rot_vel_x rot_vel_y rot_vel_z'\n   rotational_accelerations = 'rot_accel_x rot_accel_y rot_accel_z'\n   beta = 0.25\n   gamma = 0.5\n   area = 0.01\n   Iy = 1e-4\n   Iz = 1e-4\n   Ay = 0.0\n   Az = 0.0\n   component = 1\n   variable = disp_y\n   extra_vector_tags = forceIy\n  [../]\n  [./inertial_force_z]\n    type = InertialForceBeam\n    block = 0\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    velocities = 'vel_x vel_y vel_z'\n    accelerations = 'accel_x accel_y accel_z'\n    rotational_velocities = 'rot_vel_x rot_vel_y rot_vel_z'\n    rotational_accelerations = 'rot_accel_x rot_accel_y rot_accel_z'\n    beta = 0.25\n    gamma = 0.5\n    area = 0.01\n    Iy = 1e-4\n    Iz = 1e-4\n    Ay = 0.0\n    Az = 0.0\n    component = 2\n    variable = disp_z\n  [../]\n  [./inertial_force_rot_x]\n    type = InertialForceBeam\n    block = 0\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    velocities = 'vel_x vel_y vel_z'\n    accelerations = 'accel_x accel_y accel_z'\n    rotational_velocities = 'rot_vel_x rot_vel_y rot_vel_z'\n    rotational_accelerations = 'rot_accel_x rot_accel_y rot_accel_z'\n    beta = 0.25\n    gamma = 0.5\n    area = 0.01\n    Iy = 1e-4\n    Iz = 1e-4\n    Ay = 0.0\n    Az = 0.0\n    component = 3\n    variable = rot_x\n  [../]\n  [./inertial_force_rot_y]\n    type = InertialForceBeam\n    block = 0\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    velocities = 'vel_x vel_y vel_z'\n    accelerations = 'accel_x accel_y accel_z'\n    rotational_velocities = 'rot_vel_x rot_vel_y rot_vel_z'\n    rotational_accelerations = 'rot_accel_x rot_accel_y rot_accel_z'\n    beta = 0.25\n    gamma = 0.5\n    area = 0.01\n    Iy = 1e-4\n    Iz = 1e-4\n    Ay = 0.0\n    Az = 0.0\n    component = 4\n    variable = rot_y\n  [../]\n  [./inertial_force_rot_z]\n    type = InertialForceBeam\n    block = 0\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    velocities = 'vel_x vel_y vel_z'\n    accelerations = 'accel_x accel_y accel_z'\n    rotational_velocities = 'rot_vel_x rot_vel_y rot_vel_z'\n    rotational_accelerations = 'rot_accel_x rot_accel_y rot_accel_z'\n    beta = 0.25\n    gamma = 0.5\n    area = 0.01\n    Iy = 1e-4\n    Iz = 1e-4\n    Ay = 0.0\n    Az = 0.0\n    component = 5\n    variable = rot_z\n   extra_vector_tags = momIz\n  [../]\n[]\n[Materials]\n  [./elasticity]\n    type = ComputeElasticityBeam\n    youngs_modulus = 1.0e4\n    poissons_ratio = -0.98999875\n    shear_coefficient = 1.0\n    block = 0\n  [../]\n  [./strain]\n    type = ComputeIncrementalBeamStrain\n    block = '0'\n    displacements = 'disp_x disp_y disp_z'\n    rotations = 'rot_x rot_y rot_z'\n    area = 0.01\n    Ay = 0.0\n    Az = 0.0\n    Iy = 1e-4\n    Iz = 1e-4\n    y_orientation = '0.0 1.0 0.0'\n  [../]\n  [./stress]\n    type = ComputeBeamResultants\n    block = 0\n  [../]\n  [./density]\n    type = GenericConstantMaterial\n    block = 0\n    prop_names = 'density'\n    prop_values = '2.0'\n  [../]\n[]\n\n[Postprocessors]\n  [./disp_x]\n    type = PointValue\n    point = '4.0 0.0 0.0'\n    variable = disp_x\n  [../]\n  [./disp_y]\n    type = PointValue\n    point = '4.0 0.0 0.0'\n    variable = disp_y\n  [../]\n  [./vel_y]\n    type = PointValue\n    point = '4.0 0.0 0.0'\n    variable = vel_y\n  [../]\n  [./accel_y]\n    type = PointValue\n    point = '4.0 0.0 0.0'\n    variable = accel_y\n  [../]\n[]\n\n[Outputs]\n  exodus = true\n  csv = true\n  perf_graph = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/26191#discussioncomment-7777556",
                          "updatedAt": "2023-12-06T15:22:49Z",
                          "publishedAt": "2023-12-06T15:14:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "When you said you were working with dyn_euler_small.i I went and looked at that input. It's Executioner block is different from the one you just posted. The key is the line\n  automatic_scaling = true\n\nThis scales the residual and jacobian. You can add verbose = true in your Executioner block to print what the scaling factors are",
                          "url": "https://github.com/idaholab/moose/discussions/26191#discussioncomment-7779074",
                          "updatedAt": "2023-12-06T17:30:56Z",
                          "publishedAt": "2023-12-06T17:30:55Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "kteferra2"
                          },
                          "bodyText": "Ah. thank you so much!! I'll research what this does.",
                          "url": "https://github.com/idaholab/moose/discussions/26191#discussioncomment-7779294",
                          "updatedAt": "2023-12-06T17:53:13Z",
                          "publishedAt": "2023-12-06T17:53:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Define intial grain structure for grain growth model",
          "author": {
            "login": "jackson911007"
          },
          "bodyText": "Hi,\nI am new to phase-field modeling and find Moose extremely helpful and easy to implement. I tried the grain growth model and successfully ran it at different times and temperatures. Now I am moving on to defining my own initial grain structure using a txt file that describes a distribution of grain size. Could you kindly point me to where I can do this in the .i file or an example?\nThanks for your help,\n(Here is the code I use)\n# This simulation predicts GB migration of a 2D copper polycrystal with 100 grains represented with 8 order parameters\n# Mesh adaptivity and time step adaptivity are used\n# An AuxVariable is used to calculate the grain boundary locations\n# Postprocessors are used to record time step and the number of grains\n\n[Mesh]\n  # Mesh block.  Meshes can be read in or automatically generated\n  type = GeneratedMesh\n  dim = 2 # Problem dimension\n  nx = 44 # Number of elements in the x-direction\n  ny = 44 # Number of elements in the y-direction\n  xmax = 1000 # maximum x-coordinate of the mesh\n  ymax = 1000 # maximum y-coordinate of the mesh\n  elem_type = QUAD4 # Type of elements used in the mesh\n  uniform_refine = 2 # Initial uniform refinement of the mesh\n[]\n\n[GlobalParams]\n  # Parameters used by several kernels that are defined globally to simplify input file\n  op_num = 8 # Number of order parameters used\n  var_name_base = gr # Base name of grains\n[]\n\n[Modules]\n  [PhaseField]\n    [GrainGrowth]\n    []\n  []\n[]\n\n[UserObjects]\n  [voronoi]\n    type = PolycrystalVoronoi\n    grain_num = 100 # Number of grains\n    rand_seed = 10\n    int_width = 7\n  []\n  [grain_tracker]\n    type = GrainTracker\n  []\n[]\n\n[ICs]\n  [PolycrystalICs]\n    [PolycrystalColoringIC]\n      polycrystal_ic_uo = voronoi\n    []\n  []\n[]\n\n[AuxVariables]\n  # Dependent variables\n  [unique_grains]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [var_indices]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n[]\n\n[AuxKernels]\n  # AuxKernel block, defining the equations used to calculate the auxvars\n  [bnds_aux]\n    # AuxKernel that calculates the GB term\n    type = BndsCalcAux\n    variable = bnds\n    execute_on = 'initial timestep_end'\n  []\n  [unique_grains]\n    type = FeatureFloodCountAux\n    variable = unique_grains\n    flood_counter = grain_tracker\n    field_display = UNIQUE_REGION\n    execute_on = 'initial timestep_end'\n  []\n  [var_indices]\n    type = FeatureFloodCountAux\n    variable = var_indices\n    flood_counter = grain_tracker\n    field_display = VARIABLE_COLORING\n    execute_on = 'initial timestep_end'\n  []\n[]\n\n[BCs]\n  # Boundary Condition block\n  [Periodic]\n    [All]\n      auto_direction = 'x y' # Makes problem periodic in the x and y directions\n    []\n  []\n[]\n\n[Materials]\n  [CuGrGr]\n    # Material properties\n    type = GBEvolution\n    T = 450 # Constant temperature of the simulation (for mobility calculation)\n    wGB = 14 # Width of the diffuse GB\n    GBmob0 = 2.5e-6 #m^4(Js) for copper from Schoenfelder1997\n    Q = 0.23 #eV for copper from Schoenfelder1997\n    GBenergy = 0.708 #J/m^2 from Schoenfelder1997\n  []\n[]\n\n[Postprocessors]\n  # Scalar postprocessors\n  [dt]\n    # Outputs the current time step\n    type = TimestepSize\n  []\n[]\n\n[Executioner]\n  type = Transient # Type of executioner, here it is transient with an adaptive time step\n  scheme = bdf2 # Type of time integration (2nd order backward euler), defaults to 1st order backward euler\n\n  #Preconditioned JFNK (default)\n  solve_type = 'PJFNK'\n\n  # Uses newton iteration to solve the problem.\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n\n  l_max_its = 50 # Max number of linear iterations\n  l_tol = 1e-4 # Relative tolerance for linear solves\n  nl_max_its = 10 # Max number of nonlinear iterations\n\n  end_time = 4000\n\n  [TimeStepper]\n    type = IterationAdaptiveDT\n    dt = 20 # Initial time step.  In this simulation it changes.\n    optimal_iterations = 6 # Time step will adapt to maintain this number of nonlinear iterations\n  []\n\n  [Adaptivity]\n    # Block that turns on mesh adaptivity. Note that mesh will never coarsen beyond initial mesh (before uniform refinement)\n    initial_adaptivity = 2 # Number of times mesh is adapted to initial condition\n    refine_fraction = 0.8 # Fraction of high error that will be refined\n    coarsen_fraction = 0.05 # Fraction of low error that will coarsened\n    max_h_level = 2 # Max number of refinements used, starting from initial mesh (before uniform refinement)\n  []\n[]\n\n[Outputs]\n  exodus = true # Exodus file will be outputted\n  csv = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/26003",
          "updatedAt": "2023-12-05T21:16:28Z",
          "publishedAt": "2023-11-08T15:25:43Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "permcody"
                  },
                  "bodyText": "Hi @jackson911007,\nThere are a few different options you can take a look at here to help assist in creating your own custom initial conditions:\n\nEBSD Reader - This is a standardize format for supplying the grain information of each cell in a regularized grid. This gives you a ton of flexibility to shape your initial grain structure however you please. The only downside to this is that you'll likely need to write a little script to compute this information if you are starting from higher level information like grain centers or as you said distributions of sizes. PolycrystalEBSD In particular, take a look at a sample EBSD file: Sample EBSD File\nVoronoi - While this won't exactly meet your needs, I would recommend starting with this object because it's conceptually simple and once you get the hang of what it's doing, you can probably extend it to meet your needs. All it does is generate random points in a given domain and then MOOSE computes the Voronoi tessellation of those points. PolycrystalVoronoi\nRoll your own Initial Condition - After looking at the above two examples, you can build your own IC. We've worked hard to create the simpliest interface possible, you simply need to create C++ code that can return the dominate grain for every position in your mesh. That's it. That method gets called repeatedly to setup the initial condition with MOOSE doing all the heavy lifting of creating the smooth interfaces (once you start the simulation) and applies coloring algorithms so you can use reduced order parameter modeling. PolycrystalICs",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7535050",
                  "updatedAt": "2023-11-10T15:49:51Z",
                  "publishedAt": "2023-11-10T15:49:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jackson911007"
                  },
                  "bodyText": "Thanks a lot for the information. I will try it out.\n\nBest regards,\n\nJackson\n\u2026\nOn Fri, Nov 10, 2023 at 10:50 AM Cody Permann ***@***.***> wrote:\n Hi @jackson911007 <https://github.com/jackson911007>,\n\n There are a few different options you can take a look at here to help\n assist in creating your own custom initial conditions:\n\n    - EBSD Reader - This is a standardize format for supplying the grain\n    information of each cell in a regularized grid. This gives you a ton of\n    flexibility to shape your initial grain structure however you please. The\n    only downside to this is that you'll likely need to write a little script\n    to compute this information if you are starting from higher level\n    information like grain centers or as you said distributions of sizes.\n    PolycrystalEBSD\n    <https://mooseframework.inl.gov/source/userobjects/PolycrystalEBSD.html>\n    In particular, take a look at a sample EBSD file: Sample EBSD File\n    <https://github.com/idaholab/moose/blob/next/modules/phase_field/test/tests/grain_tracker_test/ebsd_9.txt>\n    - Voronoi - While this won't exactly meet your needs, I would\n    recommend starting with this object because it's conceptually simple and\n    once you get the hang of what it's doing, you can probably extend it to\n    meet your needs. All it does is generate random points in a given domain\n    and then MOOSE computes the Voronoi tessellation of those points.\n    PolycrystalVoronoi\n    <https://mooseframework.inl.gov/source/userobjects/PolycrystalVoronoi.html>\n    - Roll your own Initial Condition - After looking at the above two\n    examples, you can build your own IC. We've worked hard to create the\n    simpliest interface possible, you simply need to create C++ code that can\n    return the dominate grain for every position in your mesh. That's it. That\n    method gets called repeatedly to setup the initial condition with MOOSE\n    doing all the heavy lifting of creating the smooth interfaces (once you\n    start the simulation) and applies coloring algorithms so you can use\n    reduced order parameter modeling. PolycrystalICs\n    <https://mooseframework.inl.gov/modules/phase_field/ICs/PolycrystalICs.html>\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#26003 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AOBJR77GWUJWNWJV4JWQQALYDZEKVAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKMZVGA2TA>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7535184",
                  "updatedAt": "2023-11-10T16:04:12Z",
                  "publishedAt": "2023-11-10T16:04:11Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jackson911007"
                  },
                  "bodyText": "Hi @permcody,\nthanks for your recommendation. I decide to go through the second method first. I tried several methods for polycrystal and found  Voronoi might be a better fit. However, I want increase the size distribution of it. Is it possible to do through this script?\nThanks a lot,\nJackson",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7557814",
                  "updatedAt": "2023-11-13T19:21:39Z",
                  "publishedAt": "2023-11-13T19:21:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So you want bigger voronoi grains?\nFor the same mesh, you need to have less grains then\nThis can be set in the parameters of the PolycrystalVoronoi object with grain_num\nor try working on the grain patch size instead",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7590117",
                          "updatedAt": "2023-11-16T16:23:32Z",
                          "publishedAt": "2023-11-16T16:23:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jackson911007"
                  },
                  "bodyText": "Thanks for the tip! Sorry I do not explain my question correctly. The\nquestion I have is that could I adjust the standard deviation of the\ndistribution (make it spread broader)?\n\u2026\nOn Thu, Nov 16, 2023 at 11:23 AM Guillaume Giudicelli < ***@***.***> wrote:\n So you want bigger voronoi grains?\n For the same mesh, you need to have less grains then\n This can be set in the parameters of the PolycrystalVoronoi object with\n grain_num\n or try working on the grain patch size instead\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#26003 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AOBJR727A3BTDDQV42DTPXLYEY4Y7AVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJQGEYTO>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7590151",
                  "updatedAt": "2023-11-16T16:26:06Z",
                  "publishedAt": "2023-11-16T16:26:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ah good question. I dont know if we have this capability, I dont see it in the parameters.\nThis could probably be added in the code for the generation of the points underlying the voronoi partition",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7590238",
                          "updatedAt": "2023-11-16T16:37:29Z",
                          "publishedAt": "2023-11-16T16:37:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jackson911007"
                  },
                  "bodyText": "Thanks, we talking about the partition. Does it mean I  will adjust the\nnumber grain or the nx, ny parameter in the mesh to increase the std?\n\u2026\nOn Thu, Nov 16, 2023 at 11:37 AM Guillaume Giudicelli < ***@***.***> wrote:\n Ah good question. I dont know if we have this capability, I dont see it in\n the parameters.\n This could probably be added in the code for the generation of the points\n underlying the voronoi partition\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#26003 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AOBJR765A52TK3UD4ZSZ37LYEY6NHAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJQGIZTQ>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7590329",
                  "updatedAt": "2023-11-16T16:48:59Z",
                  "publishedAt": "2023-11-16T16:48:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "increasing nx / ny will make the mesh bigger but the distribution of the sizes of the grains will barely change\nthe number of grain will certainly change the average grain size, but the std deviation of the sizes may not change",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7590391",
                          "updatedAt": "2023-11-16T16:54:50Z",
                          "publishedAt": "2023-11-16T16:54:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jackson911007"
                  },
                  "bodyText": "Got it. Thanks, do you suggest changing any other parameter in the .i file\nto increase the std?\n\u2026\nOn Thu, Nov 16, 2023 at 11:55 AM Guillaume Giudicelli < ***@***.***> wrote:\n increasing nx / ny will make the mesh bigger but the distribution of the\n sizes of the grains will barely change\n\n the number of grain will certainly change the average grain size, but the\n std deviation of the sizes may not change\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#26003 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AOBJR72JMUYWD7E5KSEA223YEZAONAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJQGM4TC>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7590438",
                  "updatedAt": "2023-11-16T16:58:56Z",
                  "publishedAt": "2023-11-16T16:58:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont see an option in the parameters. You will have to check the code",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7590493",
                          "updatedAt": "2023-11-16T17:03:57Z",
                          "publishedAt": "2023-11-16T17:03:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jackson911007"
                  },
                  "bodyText": "Ok, I'll check. Thanks for the suggestion\n\u2026\nOn Thu, Nov 16, 2023 at 12:04 PM Guillaume Giudicelli < ***@***.***> wrote:\n I dont see an option in the parameters. You will have to check the code\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#26003 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AOBJR7ZVF5TCAR3CF5UEOQTYEZBQRAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJQGQ4TG>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7590514",
                  "updatedAt": "2023-11-16T17:05:12Z",
                  "publishedAt": "2023-11-16T17:05:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "permcody"
                  },
                  "bodyText": "I believe you can always supply your own voronoi grain centers if you wish.\nThen can exactly control your grain structure. If that option isn\u2019t\ncurrently available, it would be trivial to expose it to the input file.\n\nOn Thu, Nov 16, 2023 at 10:05\u202fAM Dung-Yi, Wu (Jackson) <\n***@***.***> wrote:\n\u2026\n Ok, I'll check. Thanks for the suggestion\n\n On Thu, Nov 16, 2023 at 12:04 PM Guillaume Giudicelli <\n ***@***.***> wrote:\n\n > I dont see an option in the parameters. You will have to check the code\n >\n > \u2014\n > Reply to this email directly, view it on GitHub\n > <\n #26003 (reply in thread)>,\n\n > or unsubscribe\n > <\n https://github.com/notifications/unsubscribe-auth/AOBJR7ZVF5TCAR3CF5UEOQTYEZBQRAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJQGQ4TG>\n\n > .\n > You are receiving this because you were mentioned.Message ID:\n > ***@***.***>\n >\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#26003 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAXFOIBS5VKFCCDVON67OL3YEZBVDAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJQGUYTI>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7595011",
                  "updatedAt": "2023-11-17T03:54:05Z",
                  "publishedAt": "2023-11-17T03:54:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jackson911007"
                          },
                          "bodyText": "Hi Permcody,\nI still have a question so how could I \"supply your own voronoi grain centers\"?",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7768796",
                          "updatedAt": "2023-12-05T20:37:27Z",
                          "publishedAt": "2023-12-05T20:37:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think you can use the file_name parameter and specify a CSV file, in the PolycrystalVoronoi\nhttps://mooseframework.inl.gov/source/userobjects/PolycrystalVoronoi.html",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7768879",
                          "updatedAt": "2023-12-05T20:48:33Z",
                          "publishedAt": "2023-12-05T20:48:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jackson911007"
                          },
                          "bodyText": "@GiudGiud Thanks for your recommendation. Is there any example to define this CSV? Thanks,",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7768920",
                          "updatedAt": "2023-12-05T20:54:43Z",
                          "publishedAt": "2023-12-05T20:54:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you generate it with external software. I would just use python and implement whichever distribution law you wanted",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7768934",
                          "updatedAt": "2023-12-05T20:56:01Z",
                          "publishedAt": "2023-12-05T20:56:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jackson911007"
                          },
                          "bodyText": "This seems very helpful. Sorry I am very new in Phase field. Maybe this is a damp question. What I have now is a list of lognormal distribution sample size s.g. samples = rng.lognormal(mean=np.log(135), sigma=1.14, size=200). Do you have any suggestion how I can generate a csv file like this? Thanks,",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7768964",
                          "updatedAt": "2023-12-05T21:00:01Z",
                          "publishedAt": "2023-12-05T21:00:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Python or matlab will both be able to generate samples from a log normal distribution. Then you can output them to csv using the csv library in python for example.",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7768988",
                          "updatedAt": "2023-12-05T21:02:30Z",
                          "publishedAt": "2023-12-05T21:02:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jackson911007"
                          },
                          "bodyText": "Just to confirm the .csv file  is a list of grain size? Above, the samples I generated is a list of 200 samples in a numpy array: np.array([527.79341127,   62.9196671 ,   34.80595431,  310.05654114, 55.32453322,  121.93137714,  156.98187213,  674.51899689, 86.56465744...]). For the csv file, does it mean I only need to save this array in a .csv file and that's all?",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7769043",
                          "updatedAt": "2023-12-05T21:09:08Z",
                          "publishedAt": "2023-12-05T21:09:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think it s a csv file of centroids of the grains, not sizes",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7769051",
                          "updatedAt": "2023-12-05T21:10:27Z",
                          "publishedAt": "2023-12-05T21:10:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jackson911007"
                          },
                          "bodyText": "Hello Giud, sorry I might not totally get. Could I ask for your further assistance on this? I sent out a PM to you at gmail.",
                          "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7769105",
                          "updatedAt": "2023-12-05T21:16:28Z",
                          "publishedAt": "2023-12-05T21:16:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jackson911007"
                  },
                  "bodyText": "Thank you for your response. I will give it a try.\n\nOn Thu, Nov 16, 2023 at 10:54 PM Cody Permann ***@***.***>\nwrote:\n\u2026\n I believe you can always supply your own voronoi grain centers if you\n wish.\n Then can exactly control your grain structure. If that option isn\u2019t\n currently available, it would be trivial to expose it to the input file.\n\n On Thu, Nov 16, 2023 at 10:05\u202fAM Dung-Yi, Wu (Jackson) <\n ***@***.***> wrote:\n\n > Ok, I'll check. Thanks for the suggestion\n >\n > On Thu, Nov 16, 2023 at 12:04 PM Guillaume Giudicelli <\n > ***@***.***> wrote:\n >\n > > I dont see an option in the parameters. You will have to check the\n code\n > >\n > > \u2014\n > > Reply to this email directly, view it on GitHub\n > > <\n >\n #26003 (reply in thread)>,\n\n >\n > > or unsubscribe\n > > <\n >\n https://github.com/notifications/unsubscribe-auth/AOBJR7ZVF5TCAR3CF5UEOQTYEZBQRAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJQGQ4TG>\n\n >\n > > .\n > > You are receiving this because you were mentioned.Message ID:\n > > ***@***.***>\n > >\n >\n > \u2014\n > Reply to this email directly, view it on GitHub\n > <\n #26003 (comment)>,\n\n > or unsubscribe\n > <\n https://github.com/notifications/unsubscribe-auth/AAXFOIBS5VKFCCDVON67OL3YEZBVDAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJQGUYTI>\n\n > .\n > You are receiving this because you were mentioned.Message ID:\n > ***@***.***>\n >\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#26003 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AOBJR733RM5QIDWNPZZZA33YE3NWPAVCNFSM6AAAAAA7DCG5KCVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM3TKOJVGAYTC>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26003#discussioncomment-7604695",
                  "updatedAt": "2023-11-18T03:12:40Z",
                  "publishedAt": "2023-11-18T03:12:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "switching from Dirichlet to Neumann BC when a certain condition is met",
          "author": {
            "login": "nlosacco"
          },
          "bodyText": "Hi all,\nI'm trying to simulate runoff on a slope in a simplified way as asked here: #25591 , but I want to pose a more general question about switching between D and N BCs.\nThe physical concept is:\n\nan initially partly saturated slope (porewater pressure u < 0 at the top);\nincreasing rainfall, simulated a\u0219 a flow from the top, causes u to increase until u = 0, then the condition u = 0 must be applied to simulate the water film at the top;\nas the imposed flow reduces, simulating periods of less intense rainfall or evapotranspiration (i.e. negative flow), so that u<0 would be predicted, the condition u = 0 at the top must be removed, switching back to a prescribed flow at the top.\n\nBefore simulating this quite complex phenomenon in detail I am trying to understand how to tackle it with MOOSE, by simulating steady-state diffusion flow in a simple, saturated column, in order to validate my approach.\nI have prescribed D-BC u = 0 at the bottom and applied time-varying N-BC at the top (through a ParsedFunction) so that, theoretically according to Darcy's law, u at the top should vary from 0 to 20 and back to 0 during the analysis.\nNow, I want to limit u<=10 at the top so my plan is:\n\nuse a ConditionalFunctionEnable to check wether the u = 10 at the top\nif, during the calculation, u > 10 is predicted due the imposed N-BC at the top, then switch to a PenaltyDirichletBC to impose u=10 at the top;\nat the beginning of the following calculation step, the time-varying N-BC should be applied again at the top and the check described at step 2) should be carried out.\n\nThe question is:\nI understand I have to perform the check at step 2) through a ConditionalFunctionEnableControl , what I am wandering, though, is what is the best point in the calculation scheme to perform this check. The real problem which I will tackle when I solve this, involving partly saturated flow and mechanical coupling, is strongly non linear. I think I should perform the check on the predicted u at each iteration (i.e. before calculating residual), with execute_on = LINEAR. But what happens when the linear predictor at a certain iteration yields u>10? Is the whole time-step aborted and re-started with the new BC? Is that single iteration aborted and then repeated according to the penalty scheme? I think the latter should be the way to go, because theoretically speaking the condition might change during the iterations of a given time-step, but how does MOOSE deal with it?\nFinally, I am willing to use a penalty approach because I'm afraid switching from N-BC to D-BC might impose excessive non-linearity to the problem, making it harder to solve.\nSorry for the TLRD post and thanks for you patience and guidance.",
          "url": "https://github.com/idaholab/moose/discussions/26203",
          "updatedAt": "2023-12-05T21:05:57Z",
          "publishedAt": "2023-11-30T10:11:02Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "josebastiase"
                  },
                  "bodyText": "Hi,\ninteresting problem. Can you provide a minimal example of your soil column so we have starting point?",
                  "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7716567",
                  "updatedAt": "2023-11-30T11:16:28Z",
                  "publishedAt": "2023-11-30T11:16:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nlosacco"
                  },
                  "bodyText": "This is the simplest example I can think of, no PorousFlow, just basic diffusion. @vabufano\n[Mesh]\n     type = GeneratedMesh\n     dim = 2\n     nx = 2\n     ny = 10\n     xmax = 2.\n     ymax = 10.\n[]\n\n[Variables]\n  [u]\n  []\n[]\n\n[Kernels]\n  [diff]\n    type = Diffusion\n    variable = u\n  []\n[]\n\n[Functions]\n  [top_pres]\n     type=ParsedFunction\n     expression = 2.0*t\n  []\n[]\n\n[BCs]\n  [top]\n    type = FunctionNeumannBC\n    variable = u\n    boundary = top\n    function = top_pres\n#   value = 1.\n  []\n  [bottom]\n    type = DirichletBC\n    variable = u\n    boundary = bottom\n    value = 0.\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'hypre'\n  dt = 0.1\n\n[Postprocessors]\n  [top_pp]\n    type = PointValue\n    point = '1. 10. 0.'\n    variable = u\n  []\n[]\n\n[Outputs]\n  [out]\n     type = Exodus\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7716736",
                  "updatedAt": "2023-11-30T11:34:45Z",
                  "publishedAt": "2023-11-30T11:34:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I think I should perform the check on the predicted u at each iteration (i.e. before calculating residual), with execute_on = LINEAR. But what happens when the linear predictor at a certain iteration yields u>10? Is the whole time-step aborted and re-started with the new BC?\n\nThe whole time step is not restarted. The BC is changed for the rest of the linear iterations. On the next nonlinear iteration, you start another set of linear iterations so the criteria is checked again. It could bounce between BCs, which would be the problem with executing it on LINEAR. TIMESTEP_BEGIN would not bounce within a timestep, but it could bounce between time steps.\n\nIs that single iteration aborted and then repeated according to the penalty scheme? I think the latter should be the way to go, but how does MOOSE deal with it?\n\nNope the penalty scheme can be turned on anytime. MOOSE reforms a new residual and a new Jacobian on the respective iterations, and we can change what contributes to these objects at any time.\nBut actually, you're making me think that for a Newton scheme, if you change the BC on linear, the Jacobian would not be updated until the next nonlinear iteration.",
                  "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7717474",
                  "updatedAt": "2023-11-30T12:50:45Z",
                  "publishedAt": "2023-11-30T12:50:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "@GiudGiud thank for your enlightening answer. No problem to me if it bounces between BCs during a single time-step, as far as it eventually converges. According to what you wrote, I'll try executing on both NONLINEAR and LINEAR and check how the results and convergence behaviour change in the complete case (i.e. with unsaturated soil, PorousFlow, etc.)",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7719154",
                          "updatedAt": "2023-11-30T15:23:50Z",
                          "publishedAt": "2023-11-30T15:23:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "Hi, I tried with the following code:\n[Mesh]\n     type = GeneratedMesh\n     dim = 2\n     nx = 2\n     ny = 10\n     xmax = 2.\n     ymax = 10.\n[]\n\n[Variables]\n  [u]\n  []\n[]\n\n[Kernels]\n  [diff]\n    type = Diffusion\n    variable = u\n  []\n[]\n\n[Functions]\n  [top_pres]\n     type=ParsedFunction\n     expression = 2.0*t\n  []\n  [top_pres_condition]\n     type=ParsedFunction\n     expression = 'u_sol >= 15.'\n     symbol_names = 'u_sol'\n     symbol_values = 'top_pp'\n  []\n[]\n\n[BCs]\n  [top]\n    type = FunctionNeumannBC\n    variable = u\n    boundary = top\n    function = top_pres\n#   value = 1.\n  []\n  [top_penalty]\n     type = PenaltyDirichletBC\n     variable = u\n     boundary = top\n     value = 15.\n     penalty = 1e3\n  []\n  [bottom]\n    type = DirichletBC\n    variable = u\n    boundary = bottom\n    value = 0.\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'hypre'\n  dt = 0.01\n  end_time = 1.0\n[]\n\n[Controls]\n  [max_pwp]\n     type = ConditionalFunctionEnableControl\n     conditional_function = 'top_pres_condition'\n     enable_objects = 'BCs::top_penalty'\n     disable_objects = 'BCs::top'\n     execute_on = 'INITIAL TIMESTEP_BEGIN LINEAR NONLINEAR TIMESTEP_END'\n  []\n[]\n\n[Postprocessors]\n  [top_pp]\n    type = PointValue\n    point = '1. 10. 0.'\n    variable = u\n  []\n[]\n\n[Outputs]\n  [out]\n     type = Exodus\n  []\n[]\n\nand here's the results for the last bit of the analysis:\n+----------------+----------------+\n| time           | top_pp         |\n+----------------+----------------+\n:                :                :\n|   3.000000e-01 |   6.000000e+00 |\n|   3.500000e-01 |   7.000000e+00 |\n|   4.000000e-01 |   8.000000e+00 |\n|   4.500000e-01 |   9.000000e+00 |\n|   5.000000e-01 |   1.000000e+01 |\n|   5.500000e-01 |   1.100000e+01 |\n|   6.000000e-01 |   1.200000e+01 |\n|   6.500000e-01 |   1.300000e+01 |\n|   7.000000e-01 |   1.400000e+01 |\n|   7.500000e-01 |   1.500000e+01 |\n|   8.000000e-01 |   1.600000e+01 |\n|   8.500000e-01 |   1.499850e+01 |\n|   9.000000e-01 |   1.800000e+01 |\n|   9.500000e-01 |   1.499850e+01 |\n|   1.000000e+00 |   2.000000e+01 |\n+----------------+----------------+\n\nAs a matter of fact, from t = 0.8 onwards, the solution should yield (approximately) 15. constantly.\nI assume the reason is that I am using the Postprocessor value in the conditional ParsedFunction, which I assume is only available at the end of a time-step. Checks, instead, should be done with respect to a value that is changing during the iterations.\nI am a bit confused, what can I try next?",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7728835",
                          "updatedAt": "2023-12-01T12:14:15Z",
                          "publishedAt": "2023-12-01T12:14:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It looks like it's bouncing right?\nSo top_pp > 15 causes the change, which causes top_pp < 15 so the change is undone.\nIf you set reverse_on_false = false to the control, it will not be undone. The action of the control will only happen once to flip the BCs.\nIs that what you want?",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7730713",
                          "updatedAt": "2023-12-01T15:23:22Z",
                          "publishedAt": "2023-12-01T15:23:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "Er\u2026 what I want to achieve is limiting the value of the solution variable to a maximum. Theoretically, the condition should be checked at all times during the iterations. So, no, reverse_on_false = false would not do.\nMy gut feeling is that Postprocessors are only evaluated at the end of the time step, in fact the penalty BC seems to work well: it prescribes a value slightly smaller than the threshold, this is why at the following timestamp, and every other one after that, based on the previously calculated post processor the penalty is turned off.\nI feel an AuxVariable would do, as I understand they are evaluated during the iterations, just like ordinary variables. But I didn\u2019t try yet. Do you think this might work?",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7731416",
                          "updatedAt": "2023-12-01T16:33:57Z",
                          "publishedAt": "2023-12-01T16:33:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you can change the execution schedule of Postprocessors using the execute_on parameter",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7731458",
                          "updatedAt": "2023-12-01T16:37:53Z",
                          "publishedAt": "2023-12-01T16:37:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nlosacco"
                  },
                  "bodyText": "I did this, but I get the same solution :-(\nHow can I print the postprocessor value for each and every iteration?\n[Controls]\n  [max_pwp]\n     type = ConditionalFunctionEnableControl\n     conditional_function = 'top_pres_condition'\n     enable_objects = 'BCs::top_penalty'\n     disable_objects = 'BCs::top'\n     execute_on = 'INITIAL TIMESTEP_BEGIN LINEAR NONLINEAR TIMESTEP_END'\n  []\n[]\n\n[Postprocessors]\n  [top_pp]\n    type = PointValue\n    point = '1. 10. 0.'\n    variable = u\n    execute_on = 'INITIAL TIMESTEP_BEGIN LINEAR NONLINEAR TIMESTEP_END'\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7732060",
                  "updatedAt": "2023-12-01T17:44:38Z",
                  "publishedAt": "2023-12-01T17:44:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the CSV output can be performed on linear and nonlinear. Add it to your Outputs block",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7732170",
                          "updatedAt": "2023-12-01T17:57:49Z",
                          "publishedAt": "2023-12-01T17:57:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "test_csv.csv\nHi all,\nnot entirely sure how, but playing with penalty factor, absolute tolerance and controls, I kinda made it. Please see the pasted code. Now, if I use Dt = 0.05, u = 15. is achieved exactly at t = 7.5, and everything works hunky dory. If I use Dt = 0.1, then u = 16 at t = 8, and only after that the procedure is working correctly:\nI also attach the the csv I produced in output. At time 0.7002 (I understood it is the beginning of the second non-linear iteration) top_pp = 16, but aux_variable flag (which yields the result of the conditional function) does not become 1 until the second linear iteration. In any case, even if the condition is true, the penalty BC is not activated for that timestep. It is activated correctly from the following onwards. It is like the Control is only performed at the beginning of the timestep, regrdless of the corresponding \"execute_on\" parameter.\nWhat am I missing?\nPostprocessor Values:\n+----------------+----------------+\n| time           | top_pp         |\n+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |\n|   1.000000e-01 |   2.000000e+00 |\n|   2.000000e-01 |   4.000000e+00 |\n|   3.000000e-01 |   6.000000e+00 |\n|   4.000000e-01 |   8.000000e+00 |\n|   5.000000e-01 |   1.000000e+01 |\n|   6.000000e-01 |   1.200000e+01 |\n|   7.000000e-01 |   1.400000e+01 |\n|   8.000000e-01 |   1.600000e+01 |\n|   9.000000e-01 |   1.499985e+01 |\n|   1.000000e+00 |   1.499985e+01 |\n+----------------+----------------+\n\n[Mesh]\n     type = GeneratedMesh\n     dim = 2\n     nx = 2\n     ny = 10\n     xmax = 2.\n     ymax = 10.\n[]\n\n[Variables]\n  [u]\n  []\n[]\n\n[AuxVariables]\n  [flag]\n     family = SCALAR\n  []\n[]\n\n[AuxScalarKernels]\n  [flag_aux]\n     type = FunctionScalarAux\n     variable = flag\n     function = top_pres_condition\n  []\n[]\n\n[Kernels]\n  [diff]\n    type = Diffusion\n    variable = u\n  []\n[]\n\n[Functions]\n  [top_pres]\n     type=ParsedFunction\n     expression = 2.0*t\n  []\n  [top_pres_condition]\n     type=ParsedFunction\n     expression = 'u_sol > 14.999'\n     symbol_names = 'u_sol'\n     symbol_values = 'top_pp'\n  []\n[]\n\n[BCs]\n  [top]\n    type = FunctionNeumannBC\n    variable = u\n    boundary = top\n    function = top_pres \n#   value = 1.\n  []\n\n  [top_penalty]\n     type = PenaltyDirichletBC\n     variable = u\n     boundary = top\n     value = 15.000\n     penalty = 1e4\n  []\n\n  [bottom]\n    type = DirichletBC\n    variable = u\n    boundary = bottom\n    value = 0.\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'hypre'\n  dt = 0.1\n  end_time = 1.0\n  nl_abs_tol = 1.E-8\n#  automatic_scaling = true\n[]\n\n[Controls]\n  [max_pwp]\n     type = ConditionalFunctionEnableControl\n     conditional_function = 'top_pres_condition'\n     enable_objects = 'BCs::top_penalty'\n     disable_objects = 'BCs::top'\n    execute_on = 'TIMESTEP_BEGIN NONLINEAR LINEAR TIMESTEP_END'\n  []\n[]\n\n[Postprocessors]\n  [top_pp]\n    type = PointValue\n    point = '1. 10. 0.'\n    variable = u\n    execute_on = 'TIMESTEP_BEGIN NONLINEAR LINEAR TIMESTEP_END'\n  []\n[]\n\n[Outputs]\n  [cons]\n    type = CSV\n    execute_on = 'TIMESTEP_BEGIN LINEAR NONLINEAR TIMESTEP_END'\n  []\n  [out]\n     type = Exodus\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7744034",
                          "updatedAt": "2023-12-03T20:10:41Z",
                          "publishedAt": "2023-12-03T14:46:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "I ain't sure, but it really seems that some controls are only activated either at TIMESTEP_BEGIN or TIMESTEP_END. I tried to print it to the console:\n  [contolout]\n    type = ControlOutput\n    show_active_objects = False\n    execute_on = 'TIMESTEP_BEGIN LINEAR NONLINEAR TIMESTEP_END'\n  []\n\nI don't  get the Control status printed, but at the beginning and end of the timestep:\nTime Step 8, time = 0.8, dt = 0.1\n\nActive Controls:\n    BCs/top/enable = 1 <bool>\n    BCs/top_penalty/enable = 0 <bool>\n\n 0 Nonlinear |R| = 2.449490e-01\n      0 Linear |R| = 2.449490e-01\n      1 Linear |R| = 1.083005e-02\n      2 Linear |R| = 2.968707e-04\n      3 Linear |R| = 1.844288e-06\n 1 Nonlinear |R| = 1.975459e-06\n      0 Linear |R| = 1.975459e-06\n      1 Linear |R| = 3.575992e-08\n      2 Linear |R| = 8.643607e-10\n      3 Linear |R| = 1.342318e-11\n 2 Nonlinear |R| = 1.350652e-11\n Solve Converged!\n\nActive Controls:\n    BCs/top/enable = 0 <bool>\n    BCs/top_penalty/enable = 1 <bool>\n\nplease check also the csv attached to my. previous message",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7746157",
                          "updatedAt": "2023-12-03T20:16:39Z",
                          "publishedAt": "2023-12-03T20:16:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Well the print of the status may only be on timestep begin and end, it does not mean controls are not executed on linear and nonlinear. You could add a log in the control to check. Otherwise the FEProblemBase & NLSystemBase classes can be inspected for the calls to execute",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7747184",
                          "updatedAt": "2023-12-03T22:45:43Z",
                          "publishedAt": "2023-12-03T22:45:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "thanks @GiudGiud ,I tried and checked FEProblemBase and NonlinearSytemBase but, due to my complete ignorance of C++ I don't have a clue about what to do. I am quite stuck at this point but BC is not switched during the timestep when it should, i.e. when any iteration triggers the condition. Furthermore, the DirichletBC should be re-activated at the beginning of each timestep.",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7750824",
                          "updatedAt": "2023-12-04T12:51:20Z",
                          "publishedAt": "2023-12-04T09:22:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "Can you tell me how to add a log to Control?\nAlso, I thought maybe controls are executed but BCs are not updated during the timestep. Can you point me to the functions in the source code that pick the BCs for Jacobian and residual calculation? I might give a try.",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7761238",
                          "updatedAt": "2023-12-05T07:29:22Z",
                          "publishedAt": "2023-12-05T07:29:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "In the code for Control object, add a print statement. Then you can see when it gets executed.\nThe code that selects object is within the residual loops (in src/loops/ComputeResidualThread and its base class mostly)\nthen in the calls to onSubdomainChanged, we select objects (here kernels) that are active on each block. There's something similar for BCs. This is when objects are checked for their 'active' status.",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7765366",
                          "updatedAt": "2023-12-05T14:32:43Z",
                          "publishedAt": "2023-12-05T14:32:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Do you allow u>10 in any other part of your domain? If not, I think a variational inequality formulation would be better for your setup than this attempt to switch objects in the middle of a Newton iteration. You would implement this with the Bounds system, and then some PETSc options\npetsc_options_iname = '-snes_type'\npetsc_options_value = 'vinewtonrsls'\n\nor instead of vinewtwonrsls you can use vinewtonssls. You could look at this test input as an example",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7766988",
                          "updatedAt": "2023-12-05T17:00:40Z",
                          "publishedAt": "2023-12-05T17:00:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "We only update active objects at the beginning of timesteps. That seems to be the problem you are encountering. The relevant logic is in FixedPointSolve::solveStep",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7767038",
                          "updatedAt": "2023-12-05T17:05:08Z",
                          "publishedAt": "2023-12-05T17:05:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "Hi @lindsayad\nBoundssounds great. Alas, in the real problem I only need to limit u at the top boundary of the mesh and, as far as I understand, the Bounds system applies to the whole domain. Hence, it seems I might only try and tweak the code, although I have no idea... Apart my specific needs, of limiting rainfall infiltration in a slope, I think this functionality would be important for many use cases",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7768076",
                          "updatedAt": "2023-12-05T19:13:54Z",
                          "publishedAt": "2023-12-05T19:13:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "richmondodufisan"
                  },
                  "bodyText": "I thought this was a pretty interesting problem and I wanted to suggest an alternative method. What if you use the terminator:\nhttps://mooseframework.inl.gov/source/userobjects/Terminator.html\nto terminate the solve when the condition is met, and then use the restart and recover feature\nhttps://mooseframework.inl.gov/application_usage/restart_recover.html\nto continue from the last stopping point, this time with Neumann conditions? It might be slightly more work to implement and you'd probably need two input files + a bash/python script to automate switching between the two, but I think it might be conceptually easier to do.",
                  "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7741453",
                  "updatedAt": "2023-12-03T01:47:35Z",
                  "publishedAt": "2023-12-03T01:47:34Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "nlosacco"
                          },
                          "bodyText": "Hi @richmondodufisan ,\nthanks a lot for the suggestion, I'll give a try. But consider that this is something that might occur hundreds of times during a simulation, when, for instance, you are simulating the rainfall history on a hillslope over tens of years. I think the approach you suggested is a bit unpractical in this scenario, but it might be very useful for simpler cases. I'll let you know!",
                          "url": "https://github.com/idaholab/moose/discussions/26203#discussioncomment-7742875",
                          "updatedAt": "2023-12-03T09:54:40Z",
                          "publishedAt": "2023-12-03T09:54:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}