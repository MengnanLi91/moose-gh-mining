{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wNC0xMlQwMDoxMToxNC0wNTowMM4APRTc"
    },
    "edges": [
      {
        "node": {
          "title": "Eigenstrain in Phase Field Models",
          "author": {
            "login": "ppandit95"
          },
          "bodyText": "Dear MOOSE Community\nI am working with the martensite transformation simulation for which my model is 2D and I need to add variable eigenstrain for which I have specified the eigen_base as \"0.1 0 0 0 -0.1 0 0 0 0\" as I wanted to incorporate a vector \"0.1 -0.1 0\" but I am not sure that I have implemented it correctly.So any help in this regard will be beneficial.\nMany Thanks\nPushkar",
          "url": "https://github.com/idaholab/moose/discussions/20726",
          "updatedAt": "2022-10-28T14:40:14Z",
          "publishedAt": "2022-04-06T12:47:51Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAny benchmarks you know of he could check his implementation on?\n@SudiptaBiswas @jiangwen84\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20726#discussioncomment-2568333",
                  "updatedAt": "2022-10-28T14:40:33Z",
                  "publishedAt": "2022-04-14T16:57:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "Thanks @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/20726#discussioncomment-2570694",
                          "updatedAt": "2022-10-28T14:40:47Z",
                          "publishedAt": "2022-04-15T02:40:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "SudiptaBiswas"
                  },
                  "bodyText": "@ppandit95 You can visualize the deformation of your simulation block to make sure you have implemented the eigen-strain correctly. You can find an example in Section 5 of this paper, https://www.sciencedirect.com/science/article/pii/S0168874X20301165.\nAlso, there are multiple examples in,  https://github.com/idaholab/moose/tree/next/modules/combined/examples/phase_field-mechanics.",
                  "url": "https://github.com/idaholab/moose/discussions/20726#discussioncomment-2568473",
                  "updatedAt": "2022-10-28T14:40:47Z",
                  "publishedAt": "2022-04-14T17:21:06Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "Thanks @SudiptaBiswas for directing to relevant sources ...",
                          "url": "https://github.com/idaholab/moose/discussions/20726#discussioncomment-2570688",
                          "updatedAt": "2022-10-28T14:40:47Z",
                          "publishedAt": "2022-04-15T02:38:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Find specified object in a dynamically linked library",
          "author": {
            "login": "hhy2022"
          },
          "bodyText": "Hello, I was trying to develop one simple advection application and I followed the guidance on this page: [https://mooseframework.inl.gov/source/kernels/ConservativeAdvection.html]\nI got this message:\n*** ERROR ***\nA 'InflowBC' is not a registered object.\n\nIf you are trying to find this object in a dynamically linked library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 1\nFinished: Exit code: 1\n\nI understood that I didn't link my appliction to the right library and I tried to do so by enabling some physical module in the \"Makefile\" file and re-compile the application.\nAfter that, I check my library with the comman ls src/* include/* and the messages were:\nsrc/main.C\nsrc/main.x86_64-conda-linux-gnu.opt.lo\nsrc/main.x86_64-conda-linux-gnu.opt.lo.d\ninclude/base:\nCatApp.h\nsrc/base:\nCatApp.C                              CatApp.x86_64-conda-linux-gnu.opt.lo.d\nCatApp.x86_64-conda-linux-gnu.opt.lo\nIt seemed that I didn't change anything. I might use the wrong way to link my application to the library and I am confused on how to do so.\nBesides, If I only know the specified parts (like ConservativeAdvection Kernel) I would like to use, which physical module should I enable to make sure I could use those parts successefully? I checked the link https://mooseframework.inl.gov/modules/ and didn't find the ConservativeAdvection Kernel at any module, so I am wondering if there is  a list on the module detailed information.\nThank you so much for your help.",
          "url": "https://github.com/idaholab/moose/discussions/20787",
          "updatedAt": "2022-06-13T14:42:14Z",
          "publishedAt": "2022-04-14T08:03:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nlinking to an application is not going to modify the source and headers in your application. It will just link to something that was compiled elsewhere.\nWhere is this InflowBC you need? I dont see it in the moose modules.\nConservativeAdvection is a framework object, so it's available by default\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20787#discussioncomment-2568069",
                  "updatedAt": "2022-06-13T14:42:20Z",
                  "publishedAt": "2022-04-14T16:19:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hhy2022"
                          },
                          "bodyText": "InflowBC was used in the boundary conditions. Since it was a advection problem, I would need to defined mass flow inlet and outlet.\nI followed the guidance on this page .\nSo this was a test kernel and if I would like to use it, I had to copied some of the .h and .c files to my own directory and compiled them. Right?",
                          "url": "https://github.com/idaholab/moose/discussions/20787#discussioncomment-2570271",
                          "updatedAt": "2022-06-13T14:42:14Z",
                          "publishedAt": "2022-04-14T23:59:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hhy2022"
                          },
                          "bodyText": "Sorry, I link was: https://mooseframework.inl.gov/source/kernels/ConservativeAdvection.html",
                          "url": "https://github.com/idaholab/moose/discussions/20787#discussioncomment-2570277",
                          "updatedAt": "2022-06-13T14:42:14Z",
                          "publishedAt": "2022-04-14T23:59:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ConservativeAdvection is not a test kernel. You can use it in your app by default because it's part of the framework kernels.\nInflowBC is a test object in MOOSE. So yes you would need to move it to your application",
                          "url": "https://github.com/idaholab/moose/discussions/20787#discussioncomment-2570305",
                          "updatedAt": "2022-06-13T14:42:15Z",
                          "publishedAt": "2022-04-15T00:09:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hhy2022"
                          },
                          "bodyText": "Got you. Thank you so much for your help.",
                          "url": "https://github.com/idaholab/moose/discussions/20787#discussioncomment-2570325",
                          "updatedAt": "2022-06-20T18:20:25Z",
                          "publishedAt": "2022-04-15T00:18:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Microstructural evolution of multi-component and multi-phase steel",
          "author": {
            "login": "aminsakic"
          },
          "bodyText": "Hello everyone,\nI started studying the phase field method and there are some things that I am confused about.\nSo, first i want to reproduce the results from the paper https://www.sciencedirect.com/science/article/pii/S0927025615007053?casa_token=qMFeBGAUOtYAAAAA:1h1ybuqIpB-BVNrFld5PLev3m4h_8ekojyxLKndauo_uqAhKJcVbOGy3i_96LX63QNdhVs3rjwA.\nAnd I'm already having a hard time getting an initial polycrystalline microstructure like in Figures 3a and 3b. Can this be achieved with the PolycrystalVoronoi object?\nThank you for reading my post, I would really appreciate your answers.\nBest regards,\nAmin",
          "url": "https://github.com/idaholab/moose/discussions/20732",
          "updatedAt": "2022-06-09T07:55:50Z",
          "publishedAt": "2022-04-07T07:09:49Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@SudiptaBiswas @laagesen any thoughts on this?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20732#discussioncomment-2568312",
                  "updatedAt": "2022-06-09T07:56:08Z",
                  "publishedAt": "2022-04-14T16:55:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "SudiptaBiswas"
                  },
                  "bodyText": "The 3D microstructure in the linked paper (3b) looks like a typical Voronoi structure. You should be able to generate something similar with PolycrystalVoronoi objects. See initial condition examples in MOOSE.\nThe 2D microstructure seems to have curved grain boundaries, the Voronoi initial condition would not create that (it only creates straight boundaries). You will have to include some sort of anisotropy and then let the structure evolve to such a state.\nNote: In either of these cases, reproducing the exact microstructure might not be feasible without knowing the grain centers.",
                  "url": "https://github.com/idaholab/moose/discussions/20732#discussioncomment-2568428",
                  "updatedAt": "2022-06-09T07:56:10Z",
                  "publishedAt": "2022-04-14T17:13:06Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Time of Preconditioner's tasks",
          "author": {
            "login": "jinca"
          },
          "bodyText": "Hello dear MOOSE group,\nIt is very clear for me to identify the memory spent by a preconditioner in an input file.\nIt is a chart where it is indicated the \"Reports information only for process 0.\"\nMay I ask about the time spent for the preconditioner?\nIn the chart there is a part about Preconditioner Setup + Applying the PC\nIs that the sum of those times, the total time spent for all the operation of the preconditioner?\ne.g.\nPCSetUp                3 1.0 1.2164e+00 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 1.2e+01  0  0  0  0  1   0  0  0  0  1     0\nPCApply              461 1.0 2.0880e+01 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  5  0  0  0  0   5  0  0  0  0     0\nThe time spent here is 1.2164 + 2.0880 seconds?\nIn the report of the ouput is also shown the total time of the execution:\nThe Main Stage: 4.0190e+02 :: 401.9 seconds.\nThanks in advance for the answer,\nJulita",
          "url": "https://github.com/idaholab/moose/discussions/20757",
          "updatedAt": "2023-01-31T13:56:31Z",
          "publishedAt": "2022-04-09T18:10:24Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis is more of petsc profiling than MOOSE.\nPlease see the petsc docs https://petsc.org/release/docs/manualpages/Profiling/index.html\n@fdkong if you have done this before could you please share some thoughts or resources\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20757#discussioncomment-2568258",
                  "updatedAt": "2023-01-31T13:56:33Z",
                  "publishedAt": "2022-04-14T16:48:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fdkong"
                  },
                  "bodyText": "The time spent here is 1.2164 + 2.0880 seconds?\n\nCorrect. This is the total time on the preconditioner.\nHere is more information on how to interpret the result of \"-log_view\" https://petsc.org/release/docs/manual/profiling/\nIf you still have anything unclear after going through the above link, please feel free to ask .",
                  "url": "https://github.com/idaholab/moose/discussions/20757#discussioncomment-2568346",
                  "updatedAt": "2023-01-31T13:56:38Z",
                  "publishedAt": "2022-04-14T16:59:17Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Symmetry about an arbitrary line",
          "author": {
            "login": "ndaman"
          },
          "bodyText": "I'm trying to impose a symmetric boundary about a diagonal line in my model (such that the vector variable,  u, dotted with the normal vector to that line, n = 0). I did find the penalty inclined no displacement (https://mooseframework.inl.gov/source/bcs/PenaltyInclinedNoDisplacementBC.html), is that the best way to reach this boundary condition?",
          "url": "https://github.com/idaholab/moose/discussions/20471",
          "updatedAt": "2022-08-21T11:35:18Z",
          "publishedAt": "2022-03-03T22:33:38Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIs this line inside the mesh? Or on the edge?\nThe regular BC, no flux, is usually pretty good for performing symmetry conditions.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20471#discussioncomment-2568344",
                  "updatedAt": "2022-08-21T11:35:18Z",
                  "publishedAt": "2022-04-14T16:58:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Using ComputeSmallStrain in AbaqusUMATStress",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "Hi all -\nI'm looking through the Tensor Mechanics tests for the UMAT interface and they all appear to use a finite strain assumption. Furthermore, in looking at the AbaqusUMATStress source, it appears to be requesting a strain_increment material, among others, which are not available in the ComputeSmallStrain class.\nSo it appears the AbaqusUMATStress functionality is (currently) not compatible with a small strain approximation. Is this an Abaqus limitation? Or could AbaqusUMATStress be modified to also handle small strains?",
          "url": "https://github.com/idaholab/moose/discussions/20748",
          "updatedAt": "2022-07-27T13:59:03Z",
          "publishedAt": "2022-04-08T14:34:04Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jessecarterMOOSE"
                  },
                  "bodyText": "Tagging @dschwen @recuero since they worked on this.",
                  "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2531584",
                  "updatedAt": "2022-07-27T13:59:03Z",
                  "publishedAt": "2022-04-08T14:40:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ngrilli"
                          },
                          "bodyText": "Dear @jessecarterMOOSE\nYes, I agree there is no way to switch to small strain,\nhowever, I believe there is no need to do so.\nYou can use the small strain input variable DSTRAN and STRAN\nto calculate the Cauchy stress inside the UMAT.\nThe concept of small/large strain in the UMAT depends on the specific choice of how the Cauchy stress is calculated,\nif it is calculated with DSTRAN, STRAN, then you are using a small strain approximation,\nif it is calculated with the the deformation gradients DFGRD0 and DFGRD1, then you are using a large strain formulation,\nMOOSE is agnostic on the strategy you use to calculate the Cauchy stress, that is up to you,\nMOOSE provides you with both small/large quantities and you can choose.\nThe use_displaced_mesh flag will be on by default,\ntherefore stress divergence calculation is made on the deformed mesh.\nBest Regards,\nNicol\u00f2",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2540615",
                          "updatedAt": "2022-07-27T13:59:47Z",
                          "publishedAt": "2022-04-10T19:49:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "That makes sense and seems like a possible path, but from a programming standpoint, I already have a UMAT that works with Abaqus and I'd like to avoid making changes to make it compatible with MOOSE or making a MOOSE-specific version for different strain formulations.",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2546694",
                          "updatedAt": "2022-07-27T13:59:52Z",
                          "publishedAt": "2022-04-11T17:56:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "After a short discussion with @recuero I think we see what the issue is. Currently the AbaqusUMATStress material requires the material properties provided by our finite strain formulation to be present, even if the UMAT implements a small strain formulation. We can certainly fix that by adding a flag that makes the finite strain increments optional.\nEither way, it should not be necessary to have a custom UMAT with \"changes to make it compatible with MOOSE\".",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2547898",
                          "updatedAt": "2022-07-27T13:59:53Z",
                          "publishedAt": "2022-04-11T22:04:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "I'll go ahead and create an issue from this discussion.",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2547905",
                          "updatedAt": "2022-07-27T14:08:52Z",
                          "publishedAt": "2022-04-11T22:07:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "#20765",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2547911",
                          "updatedAt": "2022-07-27T14:08:52Z",
                          "publishedAt": "2022-04-11T22:10:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "@jessecarterMOOSE check out #20775",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2555880",
                          "updatedAt": "2022-07-27T14:08:52Z",
                          "publishedAt": "2022-04-13T00:20:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Wow, I've been out of the loop a while. There are optional material properties now?",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2555918",
                          "updatedAt": "2022-07-27T14:08:52Z",
                          "publishedAt": "2022-04-13T00:33:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Yep. I added then a little while ago. Hit me up if you want to know more about it.\nBut going back to the original question. Why don;t you just use incremental small strain, which should be fully compatible with our UMAT interface as is?",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2561392",
                          "updatedAt": "2022-07-27T14:08:52Z",
                          "publishedAt": "2022-04-13T17:15:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Didn't realize that was an option. I'm curious to see if any of our Abaqus users would use that...",
                          "url": "https://github.com/idaholab/moose/discussions/20748#discussioncomment-2563669",
                          "updatedAt": "2022-07-27T14:08:57Z",
                          "publishedAt": "2022-04-14T01:37:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Heat source of Heat Conduction",
          "author": {
            "login": "Salma-Mao"
          },
          "bodyText": "There are two block with different material properties. The heat source FunctionPathEllipsoidHeatSource is applied on the surface of block 1. A strange phenomenon has occurred. The heat source is applied inside the block 1. However, when there is one block, the heat source is applied on the surface of the block. The centre of heat source of the two case is same. Why does this happen\uff1f\ncase 1 - just one block\n\n[Mesh]\n  type = GeneratedMesh\n  dim = 3\n  xmin = 0\n  xmax = 0.5\n  nx = 50\n\n  ymin = 0\n  ymax = 0.3\n  ny = 30\n\n  zmin = 0.0\n  zmax = 0.3\n  nz = 50\n[]\n[Variables]\n  [./temp]\n    initial_condition = 300\n  [../]\n[]\n\n[Kernels]\n  [./time]\n    type = ADHeatConductionTimeDerivative\n    variable = temp\n  [../]\n  [./heat_conduct]\n    type = ADHeatConduction\n    variable = temp\n    thermal_conductivity = thermal_conductivity\n  [../]\n  [./heat_source]\n    type = ADMatHeatSource\n    material_property = volumetric_heat\n    variable = temp\n  [../]\n[]\n\n[BCs]\n  [./temp_bottom_fix]\n    type = ADDirichletBC\n    variable = temp\n    boundary = 1\n    value = 300\n  [../] \n[]\n\n[Materials]\n  [./heat]\n    type = ADHeatConductionMaterial\n    specific_heat = 305\n    thermal_conductivity = 10e-2\n  [../]\n  [./density]\n    type = ADGenericConstantMaterial\n    prop_names = 'density'\n    prop_values = '6.35e-6'\n  [../]\n  [./volumetric_heat]\n    type = FunctionPathEllipsoidHeatSource\n    rx = 0.05\n    ry = 0.05\n    rz = 0.12\n    power = 200\n    efficiency = 0.36\n    factor = 2\n    function_x= path_x\n    function_y= path_y\n    function_z= path_z\n  [../]\n[]\n\n[Functions]\n  [./path_x]\n    type = ParsedFunction\n    value =  1200*t+0.08\n  [../]\n  [./path_y]\n    type = ParsedFunction\n    value =  0.15\n  [../]\n  [./path_z]\n    type = ParsedFunction\n    value = 0.3\n  [../]\n[]\n\ncase 2 - two blocks\n\n[Mesh]\n\n  [./block_1]\n  type = GeneratedMeshGenerator\n  dim = 3\n  xmin = 0\n  xmax = 0.5\n  nx = 50\n\n  ymin = 0\n  ymax = 0.3\n  ny = 30\n\n  zmin =0\n  zmax = 0.27\n  nz = 27\n\n\n[../]\n\n[./block_1_sidesets]\n    type = RenameBoundaryGenerator\n    input = block_1\n    old_boundary = '0 1 2 3 4 5'\n    new_boundary = '6                  7              8                  9              10               11'\n                  # substrate_back substrate_bottom substrate_right substrate_top substrate_left substrate_front\n\n  [../]\n\n  [./block_1_id]\n    type = SubdomainIDGenerator\n    input = block_1_sidesets\n    subdomain_id = 1\n  [../]\n\n [./block_2]\n type = GeneratedMeshGenerator\n dim = 3\n xmin = 0\n xmax = 0.5\n nx = 100\n\n ymin = 0\n ymax =0.3\n ny = 60\n\n zmin = 0.27\n zmax = 0.3\n nz = 6\n\n\n[../]\n\n[./block_2_sidesets]\n    type = RenameBoundaryGenerator\n    input = block_2\n    old_boundary = '0 1 2 3 4 5'\n    new_boundary = '100       101            102             103        104        105'\n\n              \n\n  [../]\n\n[./block_2_id]\n  type = SubdomainIDGenerator\n  input = block_2_sidesets\n  subdomain_id = 2\n  [../]\n\n[./combined]\n    type = MeshCollectionGenerator\n    inputs = 'block_1_id block_2_id'\n    [../]\n\n\n\n[]\n\n[Variables]\n  [./temp]\n    initial_condition = 400\n    block = '1 2'\n  [../]\n\n[]\n\n\n\n[Kernels]\n  [./time_powder]\n    type = ADHeatConductionTimeDerivative\n    variable = temp\n    specific_heat = specific_heat\n    density_name =density\n    block = '1 2'\n  []\n\n  [./heat_conduct_powder]\n    type = ADHeatConduction\n    thermal_conductivity =  thermal_conductivity\n    variable = temp\n    block = '1 2'\n  [../]\n\n  [./heat_source_powder]\n    type = ADMatHeatSource\n    material_property = volumetric_heat\n    variable = temp\n      block = '1 2'\n  [../]\n\n[]\n\n[BCs]\n  [./temp_bottom_fix]\n    type = ADDirichletBC\n    variable = temp\n    boundary ='104 102 105 100 6 8 10 11'\n\n        \n    value = 400\n  [../]\n\n\n  [./convention_surfcae]\n      type = ADConvectiveHeatFluxBC\n      variable = temp\n      boundary = 103\n      T_infinity = 300.0\n      heat_transfer_coefficient = 110\n    [../]\n\n[]\n\n[Materials]\n[./heat_substrate]\n  type = ADHeatConductionMaterial\n  specific_heat = 470\n  thermal_conductivity = 1.34e-2\n  block = 1\n[../]\n\n[./density_substrate]\n  type = ADGenericConstantMaterial\n  prop_names = 'density'\n  prop_values = '7.59e-6'\n  block = 1\n[../]\n\n[./heat_powder]\n  type = ADHeatConductionMaterial\n  specific_heat = 235\n  thermal_conductivity = 6.7e-3\n  block = 2\n[../]\n\n[./density_powder]\n  type = ADGenericConstantMaterial\n  prop_names = 'density'\n  prop_values = '3.975e-6'\n  block = 2\n[../]\n\n\n  [./volumetric_heat]\n    type = Function_PathEllipsoid_HeatSource\n    rx = 0.05\n    ry = 0.05\n    rz = 0.12\n    efficiency = 0.36\n    power =150\n    factor = 1\n    function_x= path_x\n    function_y= path_y\n    function_z= path_z\n  [../]\n[]\n\n[Functions]\n  [./path_x]\n    type = ParsedFunction\n    value = 900*t+0.08\n  [../]\n  [./path_y]\n    type = ParsedFunction\n    value = 0.15\n  [../]\n  [./path_z]\n    type = ParsedFunction\n    value = 0.3\n  [../]\n\n[]\n\nQuestion 2,\nIn the second case, there is no  heat transfer from block 1 to block 2. However, the Heat Conduction Module is applied on the two block. Is there lack of Thermal Contact Action?\nQuestion 3,\nThe effective depth ellipsoid radius exceeds the thickness of the block. If the heat source is applied on the two blocks,  heat source is reloaded on the two block. Why the  heat source is applied on the two block, there is  no energy on the second block?",
          "url": "https://github.com/idaholab/moose/discussions/20625",
          "updatedAt": "2022-06-05T05:28:35Z",
          "publishedAt": "2022-03-23T09:48:41Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can use the block parameter, block = 1 to restrict the heat source out of block 2.\nThere is no heat transfer between block 1 and 2 because:\n\n\nthe MeshCollectionGenerator does not stitch the two meshes together (as it says in the docs), they are separate. Use this instead:\nhttps://mooseframework.inl.gov/source/meshgenerators/StitchedMeshGenerator.html\n\n\nI dont see any of the sidesets you tried to generate when I ran your input file. You should check what the initial names of the sidesets are before using a RenameBoundaryGenerator\n\n\nFormat wise:\n\nif pasting input files rather than linking to a github repo, please dont forget any blocks. Both these inputs are missing Executioners and Outputs.\ndont change names of objects: Function_PathEllipsoid_HeatSource wont be recognized\nUse triple quotes to format pasted input files\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2423361",
                  "updatedAt": "2022-06-05T05:29:14Z",
                  "publishedAt": "2022-03-23T15:02:12Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "[Mesh]\n    [./ccmh]\n        type = ConcentricCircleMeshGenerator\n        num_sectors = 20\n        radii = '0.23E-2 1.805E-2 1.81E-2 1.86E-2'\n        #        Zr-rod fuel He S.S\n        rings = '1      5     1    5'\n        has_outer_square = off #on\n        # ptich = 1.42063\n#       portion = left_half\n        preserve_volumes = on\n#        inner_mesh_fraction = 0.9#0.5\n        smoothing_max_it = 3\n    []\n    [./HeOuter]\n        type = SideSetsBetweenSubdomainsGenerator\n        input = ccmh\n        primary_block = 4\n        paired_block = 3\n        new_boundary = 'HeOuter'\n    [../]\n    [./HeInner]\n        type = SideSetsAroundSubdomainGenerator\n        input = HeOuter\n        block = 2\n        new_boundary = 'HeInner'\n    [../]\n    [./ed0]\n        type = BlockDeletionGenerator\n        input = HeInner\n        block = 3\n    [../]\n    [./extrude]\n        type = FancyExtruderGenerator\n        input = ed0\n        heights = '130E-3 260E-3'\n        num_layers = '1 2'\n        direction = '0 0 1'\n        top_boundary = 998\n        bottom_boundary = 999\n        subdomain_swaps = '1 1  2 2 4 4;\n                           1 11 2 12 4 14'\n    [../]\n[]\n\n[Problem]\n    coord_type = XYZ\n#    rz_coord_axis = Z\n[]\n\n[GlobalParams]\n    order = FIRST\n[]\n\n[Variables]\n    [temp]\n        order = FIRST\n        family = LAGRANGE\n        initial_condition = 300.0\n    []\n[]\n\n[AuxVariables]\n    [./gap_conductance]\n        order = CONSTANT\n        family = MONOMIAL\n    [../]\n[]\n\n[Kernels]\n    [./heat]\n        type = HeatConduction\n        variable = temp\n        block = '1 11 2 12 4 14'\n    [../]\n    [./heat_source]\n        type = HeatSource\n        value = 6.6E7\n        variable = temp\n        block = '2 12'\n    [../]\n    [./heat_derivative]\n        type = HeatConductionTimeDerivative\n        variable = temp\n    [../]\n[]\n\n[AuxKernels]\n    [./gap_cond]\n        type = MaterialRealAux\n        property = gap_conductance\n        variable = gap_conductance\n        boundary = HeOuter\n    [../]\n[]\n\n[BCs]\n    [temp_clad]\n        type = DirichletBC\n        boundary = outer\n        variable = temp\n        value = 400.0\n    []\n[]\n\n[Materials]\n    [heat]\n        type = HeatConductionMaterial\n        block = '1 11 2 12'\n        specific_heat = 299.96\n        thermal_conductivity = 17\n    []\n    [heat1]\n        type = HeatConductionMaterial\n        block = '4 14'\n        specific_heat = 400.0\n        thermal_conductivity = 10\n    []\n    [density]\n        type = GenericConstantMaterial\n        prop_names = density\n        prop_values = 6.161E3\n    []\n[]\n\n[ThermalContact]\n    [thermal_contact]\n        type = GapHeatTransfer\n        variable = temp\n        primary = HeInner\n        secondary = HeOuter\n        emissivity_primary = 0\n        emissivity_secondary = 0\n        gap_conductivity = 5678\n        quadrature = true\n        gap_geometry_type = CYLINDER\n        cylinder_axis_point_1 = '0 0 0'\n        cylinder_axis_point_2 = '0 0 1'\n    []\n[]\n\n[Executioner]\n    type = Transient\n    solve_type = 'PJFNK'\n    \n    petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n    petsc_options_value = 'lu        superlu_dist'\n\n    start_time = 0.0\n    end_time = 1.0\n    dt = 0.1\n    dtmin = 0.0001\n\n    nl_rel_tol = 1E-12\n    nl_abs_tol = 1E-7\n\n    [./Quadrature]\n        order = fifth\n        side_order = seventh\n    [../]\n[]\n\n[Outputs]\n    exodus = true\n[]\n\nhello, there is some problems in the HeatSource, when i use this code. i find the temp is not right.\n\njust like the block 2 12 is not exist.",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2433992",
                          "updatedAt": "2022-06-05T05:29:16Z",
                          "publishedAt": "2022-03-25T00:28:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@wangzhaohao please create your own post on the forum\nThe temperature is right, it's your setup that looks weird. You set an initial condition of 300 in the volume, then with the dirichlet boundary condition you set 400 on the boundary. So the volume slowly heats up from both the volumetric heat source and from the dirichlet BC.\nIf the equilibrium state doesnt look right please let us know, but 1s of simulation is not enough to reach it.",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2434261",
                          "updatedAt": "2022-06-05T05:29:33Z",
                          "publishedAt": "2022-03-25T01:37:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "i think moose compute one step, and the initial is replacement, so i set that, but when i change it to Steady. the problem is also exist.",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2434501",
                          "updatedAt": "2022-06-05T05:29:33Z",
                          "publishedAt": "2022-03-25T02:11:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "sorry i don't create my own forum",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2434509",
                          "updatedAt": "2022-06-10T07:49:58Z",
                          "publishedAt": "2022-03-25T02:13:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The problem is that HeInner is both around the annular region and inside the annular fuel. You should use this generator to generate that boundary, not the sidesetaroundsubdomaingenerator\n    [./HeInner]\n        type = SideSetsBetweenSubdomainsGenerator\n        input = HeOuter\n        primary_block = 2\n        paired_block = 3\n        new_boundary = 'HeInner'\n    [../]\n\nI encourage you to click the advanced (cog button in your screenshot) button in properties and look at the sideset and nodeset definitions.",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2449115",
                          "updatedAt": "2022-06-10T07:49:59Z",
                          "publishedAt": "2022-03-28T04:01:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "thanks a lot, i use the SideSetBetweenSubdomainsGenerator replace SideSetAroundSubdomainsGenerator.",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2474851",
                          "updatedAt": "2022-06-10T07:49:58Z",
                          "publishedAt": "2022-03-31T03:11:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Hello\nYou can use the block parameter, block = 1 to restrict the heat source out of block 2.\nThere is no heat transfer between block 1 and 2 because:\n\nthe MeshCollectionGenerator does not stitch the two meshes together (as it says in the docs), they are separate. Use this instead:\nhttps://mooseframework.inl.gov/source/meshgenerators/StitchedMeshGenerator.html\nI dont see any of the sidesets you tried to generate when I ran your input file. You should check what the initial names of the sidesets are before using a RenameBoundaryGenerator\n\nFormat wise:\n\nif pasting input files rather than linking to a github repo, please dont forget any blocks. Both these inputs are missing Executioners and Outputs.\ndont change names of objects: Function_PathEllipsoid_HeatSource wont be recognized\nUse triple quotes to format pasted input files\n\nGuillaume\n\nHello, there are two question.\nQ1\nThe StitchedMeshGenerator is used in the case 2. There is heat transfer from block 1 to block 2. However, it is very strange that the most of the heat accumulates in block 1. A small amount of heat is transferred to block 2. In others' research, the highest temperature in the laser heating process was 3000 K in the same condition, while my temperature exceed a lot. The case is shown below.\n\nQ2\nAfter I changed the code of case, its output became wrong. When Docker was restarted, the results were still wrong. However, I create a new case with the modified code, and the output is ideal. I want to why this is happening.The example is that the previous case 2 and the below.\n[Mesh]\n[./substrate]\ntype = GeneratedMeshGenerator\ndim = 3\nxmin = 0\nxmax =0.5\nnx = 50\n\nymin = 0\nymax = 0.3\nny = 30\n\nzmin =0\nzmax = 0.3\nnz = 30\n[../]\n[./renameboundary_substrate]\ntype = RenameBoundaryGenerator\ninput = substrate\nold_boundary = '0 1 2 3 4 5'\nnew_boundary = 'substrate_back substrate_bottom substrate_right substrate_top substrate_left substrate_front'\n[../]\n[./substrate_id]\ntype = SubdomainIDGenerator\ninput = renameboundary_substrate\nsubdomain_id = 1\n[../]\n[./powder]\ntype = GeneratedMeshGenerator\ndim = 3\nxmin = 0\nxmax = 0.5\nnx = 50\n\nymin = 0\nymax = 0.3\nny = 50\n\nzmin =0.3\nzmax = 0.33\nnz = 6\n[../]\n[./renameboundary_powder]\ntype = RenameBoundaryGenerator\ninput = powder\nold_boundary = '0 1 2 3 4 5'\nnew_boundary = '100 101 102 103 104 105'\n[../]\n[./renameboundary_powder_rename]\ntype = RenameBoundaryGenerator\ninput = renameboundary_powder\nold_boundary = '100 101 102 103 104 105'\nnew_boundary = 'powder_back powder_bottom powdere_right powder_top powder_left powder_front'\n[../]\n[./powder_id]\ntype = SubdomainIDGenerator\ninput = renameboundary_powder_rename\nsubdomain_id = 2\n[../]\n[./combined_mesh]\ntype = StitchedMeshGenerator\ninputs = 'substrate_id powder_id'\nstitch_boundaries_pairs = 'substrate_top powder_bottom '\n[../]\n\n[]\n\n[Variables]\n[./temp]\ninitial_condition = 300\n[../]\n[]\n\n[Kernels]\n[./time]\ntype = ADHeatConductionTimeDerivative\nvariable = temp\nblock = '1 2'\n[../]\n[./heat_conduct]\ntype = ADHeatConduction\nvariable = temp\nthermal_conductivity = thermal_conductivity\nblock = '1 2'\n[../]\n[./heat_source]\ntype = ADMatHeatSource\nmaterial_property = volumetric_heat\nvariable = temp\nblock = 2\n[../]\n[]\n\n[ThermalContact]\n[thermal_contact]\ntype = GapHeatTransfer\nvariable = temp\nprimary = powder_bottom\nsecondary = substrate_top\nemissivity_primary = 0\nemissivity_secondary = 0\ngap_conductivity = 1.0e6\n[]\n[]\n\n[BCs]\n[./temp_bottom_fix]\ntype = ADDirichletBC\nvariable = temp\nboundary = 1\nvalue = 300\n[../]\n[]\n\n[Materials]\n[./heat_2]\ntype = ADHeatConductionMaterial\nspecific_heat = 470.0\nthermal_conductivity = 4.0875e-4\nblock = 2\n[../]\n[./density_2]\ntype = ADGenericConstantMaterial\nprop_names = 'density'\nprop_values = '3.796e-6'\nblock = 2\n[../]\n\n[./heat_1]\ntype = ADHeatConductionMaterial\nspecific_heat = 470.0\nthermal_conductivity = 1.34e-2\nblock = 1\n[../]\n[./density_1]\ntype = ADGenericConstantMaterial\nprop_names = 'density'\nprop_values = '7.592e-6'\nblock = 1\n[../]\n\n[./volumetric_heat]\ntype = FunctionPathEllipsoidHeatSource\nrx = 0.05\nry = 0.05\nrz = 0.12\npower = 200\nefficiency = 0.36\nfactor = 1\nfunction_x= path_x\nfunction_y= path_y\nfunction_z= path_z\n[../]\n[]\n\n[Functions]\n[./path_x]\ntype = ParsedFunction\nvalue = 900*t+0.08\n[../]\n[./path_y]\ntype = ParsedFunction\nvalue = 0.15\n[../]\n[./path_z]\ntype = ParsedFunction\nvalue =0.33\n[../]\n[]\n\n[Postprocessors]\n[temp_max]\ntype = ElementExtremeValue\nvariable = temp\n[]\n[temp_min]\ntype = ElementExtremeValue\nvariable = temp\nvalue_type = min\n[]\n[temp_avg]\ntype = ElementAverageValue\nvariable = temp\n[]\n[]\n\n[Preconditioning]\n[./full]\ntype = SMP\nfull = true\n[../]\n[]\n\n[Executioner]\ntype = Transient\nsolve_type = PJFNK\n\nnl_rel_tol = 1e-6\nnl_abs_tol = 1e-6\n\npetsc_options_iname = '-ksp_type -pc_type -pc_factor_mat_solver_package'\npetsc_options_value = 'preonly lu superlu_dist'\n\nl_max_its = 100\n\nend_time =3e-4\ndt = 1.0e-7\ndtmin = 1.0e-9\n[]\n\n[Outputs]\nexodus = true\ncsv = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2484246",
                          "updatedAt": "2022-06-10T07:49:59Z",
                          "publishedAt": "2022-04-01T08:48:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThe input file must have changed, MOOSE behaves deterministically and the objects you are using have not changed in the meantime.\nCan you try to diff input1.i input2.i in the console and see what's different?\nPS: It's triple back-quotes to format code snippets, not single back quotes.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2486811",
                          "updatedAt": "2022-06-10T07:50:43Z",
                          "publishedAt": "2022-04-01T15:36:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Hello\nThe input1.i\n\u3001\u3001\u3001\n[Mesh]\n[./block_1]\ntype = GeneratedMeshGenerator\ndim = 3\nxmin = 0\nxmax = 0.5\nnx = 50\nymin = 0\nymax = 0.3\nny = 30\nzmin =0\nzmax = 0.3\nnz = 30\n[../]\n[./block_1_sidesets]\ntype = RenameBoundaryGenerator\ninput = block_1\nold_boundary = '0 1 2 3 4 5'\nnew_boundary = '6                  7              8                  9              10               11'\n# substrate_back substrate_bottom substrate_right substrate_top substrate_left substrate_front\n[../]\n[./block_1_id]\ntype = SubdomainIDGenerator\ninput = block_1_sidesets\nsubdomain_id = 1\n[../]\n[./block_2]\ntype = GeneratedMeshGenerator\ndim = 3\nxmin = 0\nxmax = 0.5\nnx = 100\nymin = 0\nymax =0.3\nny = 60\nzmin = 0.3\nzmax = 0.33\nnz = 6\n[../]\n[./block_2_sidesets]\ntype = RenameBoundaryGenerator\ninput = block_2\nold_boundary = '0 1 2 3 4 5'\nnew_boundary = '100       101            102             103        104        105'\n[../]\n[./block_2_id]\ntype = SubdomainIDGenerator\ninput = block_2_sidesets\nsubdomain_id = 2\n[../]\n[./combined]\ntype = MeshCollectionGenerator\ninputs = 'block_1_id block_2_id'\n[../]\n[]\n[Variables]\n[./temp]\ninitial_condition = 400\nblock = '1 2'\n[../]\n[]\n[Kernels]\n[./time_powder]\ntype = ADHeatConductionTimeDerivative\nvariable = temp\nspecific_heat = specific_heat\ndensity_name =density\nblock = '1 2'\n[]\n[./heat_conduct_powder]\ntype = ADHeatConduction\nthermal_conductivity =  thermal_conductivity\nvariable = temp\nblock = '1 2'\n[../]\n[./heat_source_powder]\ntype = ADMatHeatSource\nmaterial_property = volumetric_heat\nvariable = temp\nblock = '1 2'\n[../]\n[]\n[BCs]\n[./temp_bottom_fix]\ntype = ADDirichletBC\nvariable = temp\nboundary ='104 102 105 100 6 8 10 11'\nvalue = 400\n\n[../]\n[./convention_surfcae]\ntype = ADConvectiveHeatFluxBC\nvariable = temp\nboundary = 103\nT_infinity = 300.0\nheat_transfer_coefficient = 110\n[../]\n[]\n[Materials]\n[./heat_substrate]\ntype = ADHeatConductionMaterial\nspecific_heat = 470\nthermal_conductivity = 1.34e-2\nblock = 1\n[../]\n[./density_substrate]\ntype = ADGenericConstantMaterial\nprop_names = 'density'\nprop_values = '7.59e-6'\nblock = 1\n[../]\n[./heat_powder]\ntype = ADHeatConductionMaterial\nspecific_heat = 235\nthermal_conductivity = 6.7e-3\nblock = 2\n[../]\n[./density_powder]\ntype = ADGenericConstantMaterial\nprop_names = 'density'\nprop_values = '3.975e-6'\nblock = 2\n[../]\n[./volumetric_heat]\ntype = Function_PathEllipsoid_HeatSource\nrx = 0.05\nry = 0.05\nrz = 0.12\nefficiency = 0.36\npower =150\nfactor = 1\nfunction_x= path_x\nfunction_y= path_y\nfunction_z= path_z\n[../]\n[]\n[Functions]\n[./path_x]\ntype = ParsedFunction\nvalue = 900*t+0.08\n[../]\n[./path_y]\ntype = ParsedFunction\nvalue = 0.15\n[../]\n[./path_z]\ntype = ParsedFunction\nvalue = 0.33\n[../]\n[]\n[Postprocessors]\n[temp_max]\ntype = ElementExtremeValue\nvariable = temp\n[]\n[temp_min]\ntype = ElementExtremeValue\nvariable = temp\nvalue_type = min\n[]\n[temp_avg]\ntype = ElementAverageValue\nvariable = temp\n[]\n[]\n[Preconditioning]\n[./full]\ntype = SMP\nfull = true\n[../]\n[]\n[Executioner]\ntype = Transient\nsolve_type = PJFNK\nnl_rel_tol = 1e-6\nnl_abs_tol = 1e-6\npetsc_options_iname = '-ksp_type -pc_type -pc_factor_mat_solver_package'\npetsc_options_value = 'preonly lu superlu_dist'\nl_max_its = 100\nend_time =3e-4\ndt = 1.0e-7\ndtmin = 1.0e-9\n[]\n[Outputs]\nexodus = true\ncsv = true\n[]\n\u3001\u3001\u3001\nThe input2.i\n\u3001\u3001\u3001\n[Mesh]\n[./substrate]\ntype = GeneratedMeshGenerator\ndim = 3\nxmin = 0\nxmax =0.5\nnx = 50\nymin = 0\nymax = 0.3\nny = 30\nzmin =0\nzmax = 0.3\nnz = 30\n[../]\n[./renameboundary_substrate]\ntype = RenameBoundaryGenerator\ninput = substrate\nold_boundary = '0 1 2 3 4 5'\nnew_boundary = 'substrate_back substrate_bottom substrate_right substrate_top substrate_left substrate_front'\n[../]\n[./substrate_id]\ntype = SubdomainIDGenerator\ninput = renameboundary_substrate\nsubdomain_id = 1\n[../]\n[./powder]\ntype = GeneratedMeshGenerator\ndim = 3\nxmin = 0\nxmax = 0.5\nnx = 50\nymin = 0\nymax = 0.3\nny = 50\nzmin =0.3\nzmax = 0.33\nnz = 6\n[../]\n[./renameboundary_powder]\ntype = RenameBoundaryGenerator\ninput = powder\nold_boundary = '0 1 2 3 4 5'\nnew_boundary = '100 101 102 103 104 105'\n[../]\n[./renameboundary_powder_rename]\ntype = RenameBoundaryGenerator\ninput = renameboundary_powder\nold_boundary = '100 101 102 103 104 105'\nnew_boundary = 'powder_back powder_bottom powdere_right powder_top powder_left powder_front'\n[../]\n[./powder_id]\ntype = SubdomainIDGenerator\ninput = renameboundary_powder_rename\nsubdomain_id = 2\n[../]\n[./combined_mesh]\ntype = StitchedMeshGenerator\ninputs = 'substrate_id powder_id'\nstitch_boundaries_pairs = 'substrate_top powder_bottom '\n[../]\n[]\n[Variables]\n[./temp]\ninitial_condition = 300\n[../]\n[]\n[Kernels]\n[./time]\ntype = ADHeatConductionTimeDerivative\nvariable = temp\nblock = '1 2'\n[../]\n[./heat_conduct]\ntype = ADHeatConduction\nvariable = temp\nthermal_conductivity = thermal_conductivity\nblock = '1 2'\n[../]\n[./heat_source]\ntype = ADMatHeatSource\nmaterial_property = volumetric_heat\nvariable = temp\nblock = 2\n[../]\n[]\n[ThermalContact]\n[thermal_contact]\ntype = GapHeatTransfer\nvariable = temp\nprimary = powder_bottom\nsecondary = substrate_top\nemissivity_primary = 0\nemissivity_secondary = 0\ngap_conductivity = 1.0e6\n[]\n[]\n[BCs]\n[./temp_bottom_fix]\ntype = ADDirichletBC\nvariable = temp\nboundary = 1\nvalue = 300\n[../]\n[]\n[Materials]\n[./heat_2]\ntype = ADHeatConductionMaterial\nspecific_heat = 470.0\nthermal_conductivity = 4.0875e-4\nblock = 2\n[../]\n[./density_2]\ntype = ADGenericConstantMaterial\nprop_names = 'density'\nprop_values = '3.796e-6'\nblock = 2\n[../]\n[./heat_1]\ntype = ADHeatConductionMaterial\nspecific_heat = 470.0\nthermal_conductivity = 1.34e-2\nblock = 1\n[../]\n[./density_1]\ntype = ADGenericConstantMaterial\nprop_names = 'density'\nprop_values = '7.592e-6'\nblock = 1\n[../]\n[./volumetric_heat]\ntype = FunctionPathEllipsoidHeatSource\nrx = 0.05\nry = 0.05\nrz = 0.12\npower = 200\nefficiency = 0.36\nfactor = 1\nfunction_x= path_x\nfunction_y= path_y\nfunction_z= path_z\n[../]\n[]\n[Functions]\n[./path_x]\ntype = ParsedFunction\nvalue = 900*t+0.08\n[../]\n[./path_y]\ntype = ParsedFunction\nvalue = 0.15\n[../]\n[./path_z]\ntype = ParsedFunction\nvalue =0.33\n[../]\n[]\n[Postprocessors]\n[temp_max]\ntype = ElementExtremeValue\nvariable = temp\n[]\n[temp_min]\ntype = ElementExtremeValue\nvariable = temp\nvalue_type = min\n[]\n[temp_avg]\ntype = ElementAverageValue\nvariable = temp\n[]\n[]\n[Preconditioning]\n[./full]\ntype = SMP\nfull = true\n[../]\n[]\n[Executioner]\ntype = Transient\nsolve_type = PJFNK\nnl_rel_tol = 1e-6\nnl_abs_tol = 1e-6\npetsc_options_iname = '-ksp_type -pc_type -pc_factor_mat_solver_package'\npetsc_options_value = 'preonly lu superlu_dist'\nl_max_its = 100\nend_time =3e-4\ndt = 1.0e-7\ndtmin = 1.0e-9\n[]\n[Outputs]\nexodus = true\ncsv = true\n[]\n\u3001\u3001\u3001\nThe two case get the different output.\nThe case 1\n\nThe case 2\n\nYou can find that the centre of heat source defined in the case is same. However, the output shown that the centre of heat source is different.\nQ2\nThere is heat transfer from block 1 to block 2. However, it is very strange that the most of the heat accumulates in block 1. A small amount of heat is transferred to block 2. My classmate simulated the same case with ANSYS and got the following output.  You can see that the heat is very well transferred from block 1 to block 2.\nMy case (the input2.i)\n\nMy classmate's case\n\nThanks\nMS",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2489577",
                          "updatedAt": "2022-06-10T07:50:46Z",
                          "publishedAt": "2022-04-02T03:04:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Thanks for your  help. I still don't  find what makes the different. But  I can create new case to deal with the problems. The reason of  heat   transfer  between two block  is that the grid size is different.\nThanks again\nMS",
                          "url": "https://github.com/idaholab/moose/discussions/20625#discussioncomment-2559617",
                          "updatedAt": "2022-06-10T07:50:59Z",
                          "publishedAt": "2022-04-13T13:26:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to get he historical temperature data",
          "author": {
            "login": "Salma-Mao"
          },
          "bodyText": "Hello everyone,\nI am learning the Heat Conduction. However, I have a difficulty in defining material properties. The initial state of the material is  powder  and it has a thermal physical parameter. When the temperature reaches the melting point, The material state changes to   fluid and then solid. How to identify the state of material? I think the one way is to identify  whether the historical temperature of the current unit exceeds the melting point.Is there a example to get the historical temperature data when  defining material properties?\nThanks,\nMs",
          "url": "https://github.com/idaholab/moose/discussions/20542",
          "updatedAt": "2022-06-18T08:29:22Z",
          "publishedAt": "2022-03-13T07:12:18Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI think I'd track the percent of phase change in a separate aux-variable or material property if I had to do this. 0 -> liquid, 1->solid.\nHistory of the temperature does not give the full story imo, it's more about the amount of energy that has been transferred in the phase change.\n@dschwen any pointers on phase change/melting?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2358624",
                  "updatedAt": "2022-06-18T08:29:36Z",
                  "publishedAt": "2022-03-14T15:32:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Is there a example about tracking the percent of phase change?  I can define a variable to do this  0 -> liquid, 1->solid.  I just know define the variable  in current time step. But, I should also need to know the value in  previous time step.\nThanks\nMS",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2369675",
                          "updatedAt": "2022-06-18T08:29:38Z",
                          "publishedAt": "2022-03-16T03:21:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You can retrieve the previous and two-before values of a finite element variable using the coupledValueOld and coupledValueOlder routines.\nThey are used in the constructor of your object, same as coupledValue for the current value of the variable.",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2372732",
                          "updatedAt": "2022-06-18T08:29:38Z",
                          "publishedAt": "2022-03-16T13:09:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I'd encourage you to look at how others have implemented phase changes, in the phase field and porous flow modules for example:\nhttps://mooseframework.inl.gov/modules/porous_flow/governing_equations.html\nhttps://mooseframework.inl.gov/moose/modules/phase_field/",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2372752",
                          "updatedAt": "2022-06-18T08:29:38Z",
                          "publishedAt": "2022-03-16T13:13:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Thanks for you help.  I want to get the free energy of  previous step ,then get material property based on free energy.\nSo I made the Material_powder. However, I get some  problems.\nThis is the header file (Material_powder.h)\n#pragma once\n\n#include \"Material.h\"\n#include \"LinearInterpolation.h\"\n#include \"DerivativeMaterialInterface.h\"\n\nMaterial_powder: public Material\n{\npublic:\n\n  Material_powder(const InputParameters & parameters);\n\n  static InputParameters validParams();\n\n  virtual void computeQpProperties() override;\n  void initQpStatefulProperties() override;\n  virtual void CheckPhase();\n\n  const VariableValue & _temp;\n  ADMaterialProperty<Real> & _density;\n \n  MaterialProperty<unsigned int> & _FreeEnergy;\n  const MaterialProperty<unsigned int> & _FreeEnergy_old;\n\n  ADMaterialProperty<Real> & _density_powder;\n\n};\n\nThis is the source code (Material_powder.C).\n#include \"Material_powder.h\"\n#include \"Function.h\"\n#include <fstream>\n#include <cmath>\n\n\nregisterMooseObject(\"heatsourceApp\", Material_powder);\n\nInputParameters\nMaterial_powder::validParams()\n{\n  InputParameters params = Material::validParams();\n\n  params.addCoupledVar(\"temp\",  \"The temperature.\");\n  \nreturn params;\n}\n\nMaterial_powder::Material_powder(const InputParameters & parameters)\n : Material(parameters),\n\n_temp (coupledValue(\"temp\")),\n\n_density (declareADProperty<Real>(\"density\")),\n\n_FreeEnergy(declareProperty<unsigned int>(\"FreeEnergy\")),\n\n_FreeEnergy_old(getMaterialPropertyOld<unsigned int> ( \"FreeEnergy\"  )),\n\n\n_density_powder (declareADProperty<Real>(\"density_powder\"))\n\n\n{\n\n}\n\nvoid\ntemperature_ConstantMaterial_powder::initQpStatefulProperties()\n{\n\n\n\n   _density[_qp] = 7590.0;\n   \n\n   _FreeEnergy[_qp] = 0;\n \n\n   _density_powder[_qp] = 3795.0;\n   \n\n\n}\n\n\n  void\n  temperature_ConstantMaterial_powder::computeQpProperties()\n  {\n\n   _density[_qp] = 2.0e-7 * pow(_temp[_qp], 3) - 9.0e-4 * pow(_temp[_qp],2) + 0.5348 * _temp[_qp] + 7830.6;\n\n   \n   CheckPhase ();\n\n    for (_qp = 0; _qp <=  _qrule->n_points(); _qp++)\n\n    {\n\n      switch ( _FreeEnergy[_qp] )\n\n      {\n        case 0:  // powder\n\n      if ( _temp[_qp] < 1700.0)    //unmelt\n\n      {\n\n        _density_powder[_qp] =   (1.0-0.5) * _density[_qp];\n\n       \n\n      }\n\n      else if (_temp[_qp] <  1762.0 & _temp[_qp] > 1700.0)  //liquid and solid\n\n      {\n        _density_powder[_qp] =   (1.0-0.5*( _temp[_qp] - 1700.0)/(1760.0-1700.0)-0.5) * _density[_qp];\n\n    \n\n\n      }\n\n      else  // liquid\n\n      {\n        _density_powder[_qp]  = _density[_qp];\n\n  \n      }\n\n\n      break;\n\n      case 1:   // if FreeEnergy = 1\n\n      _density[_qp]  = _density_316L[_qp];\n      \n      break;\n    }\n\n}\n}\n\nvoid\n Material_powder::CheckPhase()\n{\n  \nif ( _t_step == 1 )  //check firt step\n\n{\n for ( int _qp = 0; _qp <  _qrule->n_points(); _qp++)  // first step\n {\n     _FreeEnergy[_qp] = 0;             // state is powder\n }\n}\n\nelse   // step is not one\n\n{\n      for( int _qp = 0; _qp <  _qrule->n_points(); _qp++)    // check element state of previous step\n      {\n       if ( _FreeEnergy_old[_qp] == 0 )    //    powder of previous step\n\n       {\n            if (_temp[_qp] < 1150 )      //    check element temperature\n            {\n                   _FreeEnergy[_qp] = 0;            // powder\n            }\n\n            else\n            {\n                   _FreeEnergy[_qp] = 1;   // block\n\n            }\n\n       }\n\n       else\n       {\n\n          _FreeEnergy[_qp] = 1 ;    //   block of current step\n       }\n\n      }\n\n}\n\n}\n\n\nWhen I compiled it ,I got\n\n*** ERROR ***\nDependencyResolver: attempt to insert dependency will result in cyclic graph\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n\n\n*** ERROR ***\nDependencyResolver: attempt to insert dependency will result in cyclic graph\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 1\n\n\n*** ERROR ***\nDependencyResolver: attempt to insert dependency will result in cyclic graph\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 3\n\n\n*** ERROR ***\nDependencyResolver: attempt to insert dependency will result in cyclic graph\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 5",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2394114",
                          "updatedAt": "2022-06-26T09:22:36Z",
                          "publishedAt": "2022-03-19T14:37:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It doesnt like that you are both delcaring the material property and the obtaining the material property (through the getMaterialPropertyOld)  in the same object. Can you split these operations?",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2395832",
                          "updatedAt": "2022-06-26T09:22:57Z",
                          "publishedAt": "2022-03-20T02:08:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Hello, when I compiled, I get some problems.\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+\n| time           | temp_avg       | temp_max       | temp_min       |\n+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+----------------+\n\n\nTime Step 1, time = 1e-05, dt = 1e-05\n 0 Nonlinear |R| = 3.558747e-02\n\n===================================================================================\n=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\n=   PID 1715 RUNNING AT e8b13506afb2\n=   EXIT CODE: 7\n=   CLEANING UP REMAINING PROCESSES\n=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES\n===================================================================================\nYOUR APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)\nThis typically refers to a problem with your application.\nPlease see the FAQ page for debugging suggestions\n\nI want to use debugger to find error. However, I get\nroot@e8b13506afb2:/usr/local/workspace/powder_substrate# mpirun  -n 10 gdb --ex run --ex bt --args powder_subsrate-dbg -i powder_substrate.i\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\n[proxy:0:0@e8b13506afb2] HYDU_create_process (../../../../src/pm/hydra/utils/launch/launch.c:74): execvp error on file gdb (No such file or directory)\nroot@e8b13506afb2:/usr/local/workspace/powder_substrate#",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2400925",
                          "updatedAt": "2022-06-26T09:22:57Z",
                          "publishedAt": "2022-03-21T07:34:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Seems you dont have gdb installed. Do you have another one installed?\nYou ll need to install it or work on another system if you want to debug.",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2407360",
                          "updatedAt": "2022-06-26T09:23:04Z",
                          "publishedAt": "2022-03-21T14:29:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Hello\uff0cI have installed the gdb.\nroot@22cfeee4c9d5:/opt/moose# sudo apt install clang-9\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nclang-9 is already the newest version (1:9.0.1-12).\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n\nI want to use debugger to find error.  However, I get\nroot@22cfeee4c9d5:/opt/moose# gdb --args /usr/local/workspace/powder_contact/powder_contact-dbg -i powder_contact.i\nbash: gdb: command not found\n\nWhen I use the lldb, I get same problem.\nroot@22cfeee4c9d5:/opt/moose# sudo apt install lldb-9\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nlldb-9 is already the newest version (1:9.0.1-12).\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n\nroot@22cfeee4c9d5:/opt/moose# lldb -9 /usr/local/workspace/powder_contact/powder_contact-dbg -i powder_contact.i\nbash: lldb: command not found",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2437672",
                          "updatedAt": "2022-06-26T09:23:04Z",
                          "publishedAt": "2022-03-25T13:37:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "clang is not gdb, so this may not be the right package to install.\nIn your command line for lldb you wrote lldb -9 not lldb-9.\nTry to find what name it knows lldb under.",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2449075",
                          "updatedAt": "2022-06-26T09:23:06Z",
                          "publishedAt": "2022-03-28T03:45:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Thanks  your help.\nMS",
                          "url": "https://github.com/idaholab/moose/discussions/20542#discussioncomment-2559630",
                          "updatedAt": "2022-06-26T09:23:08Z",
                          "publishedAt": "2022-04-13T13:28:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Debugging with PorosityMaterial file",
          "author": {
            "login": "Joseph-0123"
          },
          "bodyText": "**Hello, dear moose developers and users,\nAfter I run ./myapp-dbg -i THM.i, the error information are as follows. It means something wrong in my PorosityMaterial. But I cannot recognize the detailed errors. Could you please help me to find it? Thanks a lot.\nSe\nPorosityMaterial.zip\nSetting Up\nSetting Up Options. [ 2.93 s] [ 5 MB]\n\n*** Warning, This code is deprecated and will be removed in future versions:\nThis method will be removed because the meaning is not well defined, please use the 'compareCurrent' method instead.\nStack frames: 27\n0: libMesh::print_trace(std::ostream&)\n1: void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::char_traits >, char const (&) [117]>(libMesh::BasicOStreamProxy<char, std::char_traits >&, bool, char const (&) [117])\n2: void mooseDeprecated<char const (&) [117]>(char const (&) [117])\n3: MooseEnum::operator==(MooseEnum const&) const\n4: PorosityMaterial::PorosityMaterial(InputParameters const&)\n5: void __gnu_cxx::new_allocator::construct<PorosityMaterial, InputParameters const&>(PorosityMaterial*, InputParameters const&)\n6: void std::allocator_traits<std::allocator >::construct<PorosityMaterial, InputParameters const&>(std::allocator&, PorosityMaterial*, InputParameters const&)\n7: std::_Sp_counted_ptr_inplace<PorosityMaterial, std::allocator, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<InputParameters const&>(std::allocator, InputParameters const&)\n8: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<PorosityMaterial, std::allocator, InputParameters const&>(PorosityMaterial*&, std::_Sp_alloc_shared_tag<std::allocator >, InputParameters const&)\n9: std::__shared_ptr<PorosityMaterial, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator, InputParameters const&>(std::_Sp_alloc_shared_tag<std::allocator >, InputParameters const&)\n10: std::shared_ptr::shared_ptr<std::allocator, InputParameters const&>(std::_Sp_alloc_shared_tag<std::allocator >, InputParameters const&)\n11: std::shared_ptr std::allocate_shared<PorosityMaterial, std::allocator, InputParameters const&>(std::allocator const&, InputParameters const&)\n12: std::shared_ptr std::make_shared<PorosityMaterial, InputParameters const&>(InputParameters const&)\n13: std::shared_ptr moose::internal::buildObj(InputParameters const&)\n14: Factory::create(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, InputParameters&, unsigned int, bool)\n15: /opt/projects/moose/framework/libmoose-dbg.so.0(+0x372a8be) [0x7ff2d850f8be]\n16: FEProblemBase::addMaterialHelper(std::__debug::vector<MaterialWarehouse*, std::allocator<MaterialWarehouse*> >, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, InputParameters&)\n17: FEProblemBase::addMaterial(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, InputParameters&)\n18: AddMaterialAction::act()\n19: Action::timedAct()\n20: ActionWarehouse::executeActionsWithAction(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&)\n21: ActionWarehouse::executeAllActions()\n22: MooseApp::runInputFile()\n23: MooseApp::run()\n24: ./myapp-dbg(+0x1434b) [0x55e15344134b]\n25: _libc_start_main\n26: ./myapp-dbg(+0x13189) [0x55e153440189]_",
          "url": "https://github.com/idaholab/moose/discussions/20769",
          "updatedAt": "2022-06-14T13:14:38Z",
          "publishedAt": "2022-04-12T09:04:28Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Joseph-0123"
                  },
                  "bodyText": "Could you please help me? Thanks.",
                  "url": "https://github.com/idaholab/moose/discussions/20769#discussioncomment-2552679",
                  "updatedAt": "2022-06-14T13:14:40Z",
                  "publishedAt": "2022-04-12T14:37:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nThis is a deprecation warning. Do you actually have an error?\nIt's complaining about\n(getParam<MooseEnum>(\"evolotion_type\")==ET)\n\nIt doesnt like to compare two MooseEnum with == because it's ambiguous. A MooseEnum isnt just a value, it's a list of values with a value selected.\nNote that there is also a typo in the parameter name.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20769#discussioncomment-2553074",
                  "updatedAt": "2022-06-14T13:14:45Z",
                  "publishedAt": "2022-04-12T15:30:22Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the solution is to use the compareCurrent method, like in this example::\nnotEqual(const MooseEnum & val1, const MooseEnum & val2)\n{\n  return !val1.compareCurrent(val2);\n}",
                          "url": "https://github.com/idaholab/moose/discussions/20769#discussioncomment-2553080",
                          "updatedAt": "2022-06-14T13:14:45Z",
                          "publishedAt": "2022-04-12T15:30:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Joseph-0123"
                          },
                          "bodyText": "Thanks a lot, Guillaume. Yes. I solve this problem by using the compareCurrent method.",
                          "url": "https://github.com/idaholab/moose/discussions/20769#discussioncomment-2553381",
                          "updatedAt": "2022-06-14T13:14:48Z",
                          "publishedAt": "2022-04-12T16:13:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[Porousflow][mining] modelling water seepage and filling the pit",
          "author": {
            "login": "Traiwit"
          },
          "bodyText": "Hi MOOSE expert,\nI am trying to model modelling water seepage into a pit (empty space) and then slowly filling the pit.\n\njust wondering if anyone has done this before?\nso the initial condition would be right at the end of pit excavation:\n\nthen I remove the drainage surface bc, and just run an equilibrium simulation where BCs are applied to the 4 sides of the domain (right left front back)\nI tried what I mentioned above with very high perm, the pit is filled very quickly in a matter of days, which isn't realistic:\n\n(after 5 days)\nThe question would be what should be the value of the empty pit material properties (perm and porosity)? porosity I guess it should be 1, but what would be the appropriate perm? as this will affect the rate of pit filling\nand just wondering if this is the right approach to modelling this kinda seepage?\nKind regards,\nTraiwit\nI will tag the hydro expert here: @WilkAndy",
          "url": "https://github.com/idaholab/moose/discussions/20768",
          "updatedAt": "2022-06-14T08:57:15Z",
          "publishedAt": "2022-04-12T03:27:55Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "I agree that the porosity should be ~1 and the perm should be \"large\": probably 1000 times larger than your largest perm is a good choice.\nThe pit shouldn't fill that fast.  Are you using unsaturated physics, or fully-saturated physics?",
                  "url": "https://github.com/idaholab/moose/discussions/20768#discussioncomment-2548993",
                  "updatedAt": "2022-06-14T08:57:18Z",
                  "publishedAt": "2022-04-12T03:49:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @WilkAndy,\nI'm using fully-saturated physics for drainage (due to convergence, and Abaqus comparison), hence I used it for seepage too. Should I switch to unsaturated in this case?\n[Modules]\n  [./FluidProperties]\n    [./the_simple_fluid]\n      type = SimpleFluidProperties\n    [../]\n  [../]\n[]\n[PorousFlowFullySaturated]\n  porepressure = porepressure\n  coupling_type = Hydro\n  gravity = '0 0 -9.81'\n  fp = the_simple_fluid\n  time_unit = days\n  add_darcy_aux = false\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/20768#discussioncomment-2549010",
                          "updatedAt": "2022-06-14T08:57:19Z",
                          "publishedAt": "2022-04-12T03:55:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Definitely you need PorousFlowUnsaturated.  At the moment, your pit initially contains water at zero porepressure.  That's why it doesn't take long to \"fill\": your definition of \"fill\" is just moving a bit of water into the pit to increase porepressure to hydrostatic.",
                          "url": "https://github.com/idaholab/moose/discussions/20768#discussioncomment-2549035",
                          "updatedAt": "2022-06-14T08:57:21Z",
                          "publishedAt": "2022-04-12T04:04:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @WilkAndy, this actually solves the problem. Thank you!\n[PorousFlowUnsaturated]\n  porepressure = porepressure\n  coupling_type = Hydro\n  gravity = '0 0 -9.81'\n  fp = the_simple_fluid\n  relative_permeability_exponent = 2\n  relative_permeability_type = Corey\n  residual_saturation = 0.01\n  van_genuchten_alpha = 1E-6\n  van_genuchten_m = 0.6\n  time_unit = years\n[]\n\nthis is the pwp after 2 years",
                          "url": "https://github.com/idaholab/moose/discussions/20768#discussioncomment-2549231",
                          "updatedAt": "2022-06-14T08:57:21Z",
                          "publishedAt": "2022-04-12T05:11:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}