{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0xMS0xNVQxMTo0Mzo0MC0wNjowMM4AckpL"
    },
    "edges": [
      {
        "node": {
          "title": "custom material object can't be registered",
          "author": {
            "login": "RWTHLHK"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nI developed a custom material object that inherits 2 classes in solid mehcanics.  So far I haven't added any new parameters and methods yet. But the i always get the error:\n/home/linghao/projects/moose/framework/build/header_symlinks/Registry.h:275:42: error: could not convert 'std::make_unique(_Args&& ...) [with _Tp = ComputePFCFStress; _Args = {const InputParameters&}; __detail::__unique_ptr_t<_Tp> = __detail::__unique_ptr_t<ComputePFCFStress>]()' from 'unique_ptr<ComputePFCFStress,default_delete<ComputePFCFStress>>' to 'unique_ptr<MooseObject,default_delete<MooseObject>>' 275 |     return std::make_unique<T>(parameters); |                                          ^ |                                          | |                                          unique_ptr<ComputePFCFStress,default_delete<ComputePFCFStress>> make: *** [/home/linghao/projects/moose/framework/build.mk:151: /home/linghao/projects/isotropic_hardening/build/unity_src/material_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\nI have no idea why this occurs. Can somebody please tell me how to fix this?",
          "url": "https://github.com/idaholab/moose/discussions/29101",
          "updatedAt": "2024-11-19T18:08:37Z",
          "publishedAt": "2024-11-19T16:06:53Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\n2 classes in solid mehcanics.\n\nwhich ones?\nWe can't do diamond inheritance in MOOSE (or in C++), unless you start using virtual inheritance which will take a few deeper modifications\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/29101#discussioncomment-11307893",
                  "updatedAt": "2024-11-19T16:10:11Z",
                  "publishedAt": "2024-11-19T16:10:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "I inherit ComputeLinearElasticFractureStress and ComputeMultipleInelasticStress. I guess both class inherit UpStressStateBase and this leads to error right?",
                          "url": "https://github.com/idaholab/moose/discussions/29101#discussioncomment-11308109",
                          "updatedAt": "2024-11-19T16:24:33Z",
                          "publishedAt": "2024-11-19T16:24:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes exactly.\nYou would need to make these two classes virtually inherit from that common class to make it work.\nAlternatively only pick one class to inherit and copy the code you need from the other class",
                          "url": "https://github.com/idaholab/moose/discussions/29101#discussioncomment-11309602",
                          "updatedAt": "2024-11-19T18:08:37Z",
                          "publishedAt": "2024-11-19T18:08:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to implement custom hardening stress update material?",
          "author": {
            "login": "RWTHLHK"
          },
          "bodyText": "I am trying to implement a custom hardening stress update material similar to isotropic power law hardening material. But some parts in isotropic power law hardening are quite confusing.\ntemplate <bool is_ad>\nGenericReal<is_ad>\nIsotropicPowerLawHardeningStressUpdateTempl<is_ad>::computeHardeningDerivative(\n    const GenericReal<is_ad> & scalar)\n{\n  const GenericReal<is_ad> stress_delta = _effective_trial_stress - _three_shear_modulus * scalar;\n  GenericReal<is_ad> slope = std::pow(stress_delta, (1.0 / _strain_hardening_exponent - 1.0)) /\n                             _strain_hardening_exponent * 1.0 /\n                             std::pow(_K, 1.0 / _strain_hardening_exponent);\n  slope -= 1.0 / _youngs_modulus;\n\n  return 1.0 / slope;\n}\n\nHere why is the hardening derivative such a complex form instead of nKp^n-1? And why is there a reciprocal of slope? I also tried derivative as nKp^n-1, but the convergence is bad. Can some expert please explain this?",
          "url": "https://github.com/idaholab/moose/discussions/29096",
          "updatedAt": "2024-11-19T13:38:43Z",
          "publishedAt": "2024-11-19T02:42:49Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI think it is like this?\nstd::pow(stress_delta, (1.0 / _strain_hardening_exponent - 1.0)) = p ^ (n - 1)\nwith n = 1.0 / _strain_hardening_exponent\n1 / _strain_hardening_exponent = n as a factor in the expression\n std::pow(_K, 1.0 / _strain_hardening_exponent);  = K\n\nThen the young modulus is the elastic part of that slope\n\nI also tried derivative as nKp^n-1, but the convergence is bad\n\nThe way you can prove to yourself this is correct is to use the Jacobian analysis.(if this slope term is for the Jacobian, which I imagine it is)\nhttps://mooseframework.inl.gov/help/development/analyze_jacobian.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/29096#discussioncomment-11305626",
                  "updatedAt": "2024-11-19T13:38:44Z",
                  "publishedAt": "2024-11-19T13:38:43Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Heat flux discrepancy for coupled MOOSE-THM simulation",
          "author": {
            "login": "lewisgross1296"
          },
          "bodyText": "I'm running a MOOSE-THM coupled simulation with the following scheme (MOOSE Heat Transfer Module is the main app)\n\nRun a 1-D THM solve on timestep_begin and use a HeatTransferFromExternalAppTemperature1Phase component for the heat transfer (the first T_wall is just the inlet temperature everywhere)\n\nSend fluid T and heat transfer coefficient (HTC) to MOOSE\n\n\nThen, run MOOSE  with a constant volumetric heat source, use a Robin (CoupledConvectiveHeatFluxBC) BC to solve for solid temperature\n\nCompute a NearestPointLayeredSideAverage T_wall and send to each THM sub-application (this case has 31)\n\n\n\nIn the coupling scheme, I use a ProjectionAux to make a nodal T_inf_nodal variable to send back to MOOSE for the robin BC (as I was getting complaints about transferring between nodal and elemental variables). The temperature results converge to steady state (steady_state_tolerance = 5e-5) and seem reasonable.\nAs a verification excercise, I attempted to compute $q'' = HTC (T_{wall} - T_{inf})$ for each THM channel, but the heat flux looks a little wonky. My hypothesis is that mixing elemental and nodal variables is responsible for the produced $q_{THM}''$. I also produced a $q_{solid}''$ from the main app temperature field using a DiffusionFluxAux  + NearestPointLayeredSideAverage. This heat flux looks much better compared to the THM one.\nHere's how I computed $q_{THM}''$ (I've denoted which variables are nodal/elemental)\n  [compute_q_wall] \n   type = ADConvectiveHeatFlux1PhaseAux\n   Hw = Hw # elemental computed from Material objects (`ADWallFrictionChurchillMaterial`, `ADReynoldsNumberMaterial`, `ADPrandtlNumberMaterial`, the Dittus-Boelter correlation for `Nu` and `ADConvectiveHeatTransferCoefficientMaterial`)\n   T = T # elemental solution results (main output of THM)\n   T_wall = T_wall # nodal variable transferred from solid main app\n   variable = q_wall # elemental AuxVariable \n  []\n\nNow, I'll show the two results. From THM\n\nFrom MOOSE\n\nAm I doing something wrong? I've tried all kinds of projections for the inputs above (e.g. making an elemental T_wall for use in the above kernel), and they all end up with strange bumps in the middle.\nI'm not sure the projections were helping or doing exactly the right thing in this case. Would definitely be interested to hear more about projecting between nodal and elemental variables for THM, since it seems to be the key to understanding the behavior here.\nI can upload my input files, if desired.",
          "url": "https://github.com/idaholab/moose/discussions/28926",
          "updatedAt": "2024-11-18T22:28:08Z",
          "publishedAt": "2024-10-24T19:00:08Z",
          "category": {
            "name": "Q&A Modules: Thermal Hydraulics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSorry for the delay.\nThe projection would likely affect the heat flux, but here it seems there is a larger trend at play.\nWhat is at 1.2m in y in the simulation?\nI think I am misunderstanding the setup here.\nThe convective heat flux output by THM is of the form H(T-Twall) and the diffusive heat flux of the form D grad T_wall (right?).\nWhy do you expect both to match? Is diffusion the only mechanism on the solid side?",
                  "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11082155",
                  "updatedAt": "2024-10-29T03:40:10Z",
                  "publishedAt": "2024-10-29T03:40:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lewisgross1296"
                          },
                          "bodyText": "No worries, thanks for the response.\nThe strange thing is there's nothing special happening at 1.2 m in my simulation (at least not intentionally). The assembly is 2.4 m tall. If I understand correctly, since I'm using n_elems = 48 for my FlowChannel1Phase component in THM, there would be a node at 1.2 m, but there's no physics occurring there that should make this point special.\nThere's a constant volumetric heat source on the solid side but only in the fuel. All the coolant channels occur in graphite, so diffusion is the only mechanism in those blocks. Here's my kernels in the solid app\n[Kernels]\n  [diffusion]\n    type = HeatConduction\n    variable = T\n  []\n  [time_T]\n    type = HeatConductionTimeDerivative\n    variable = T\n  []\n  [source]\n    type = CoupledForce\n    variable = T\n    v = power_density\n    block = 'fuel'\n  []\n[]\n\nSince I'm using this BC on the solid side\n[BCs]\n  [robin_bc_on_fsi]\n    type = CoupledConvectiveHeatFluxBC\n    variable = T\n    boundary = 'fluid_solid_interface'\n    htc = 'HTC'\n    T_infinity = 'T_inf'\n  []\n[]\n\nI do expect $q'' = HTC (T - T_{inf})$ on the coolant channel boundary. Let me know if you would like to see the inputs, I can send a zip file since my repo is currently private. I also have a fair amount of other plots along the y axis (T_fluid, T_wall, HTC, etc.) if you are curious about those, I can post as well.",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11091305",
                          "updatedAt": "2024-10-29T18:48:30Z",
                          "publishedAt": "2024-10-29T18:48:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The assembly is 2.4 m tall. If I understand correctly, since I'm using n_elems = 48 for my FlowChannel1Phase component in THM, there would be a node at 1.2 m\n\non the solid mesh side, what kind of discretization do you have? If you have an odd number of elements, you could get something weird with a nearest-location approach, where the \"wrong\" node (both are valid choices, but maybe the decision on which one to map changes as this center node) gets mapped to the central node.\n\nI also have a fair amount of other plots along the y axis (T_fluid, T_wall, HTC, etc.) if you are curious about those, I can post as well.\n\nI think that's a good idea. We know q_wall is weird, but is it because of HTC, T_wall or T_fluid?\nTo find that out, run a loosely coupled simulation (no fixed point) so we do not see something like (wrong T_wall causes wrong T_fluid causes wrong HTC)",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11093943",
                          "updatedAt": "2024-10-30T00:47:09Z",
                          "publishedAt": "2024-10-30T00:46:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lewisgross1296"
                  },
                  "bodyText": "I'm using the same number of axial layers on the solid side as the number of elements in THM (num_layers = 48 in my solid mesh extrusion step). I think the node y-coordinates should match exactly, but I see what you're saying about a potential nearest-location issue.\nI'll give a quick rundown of each variable and its type. On the solid app, I've got\n[Variables]\n  [T] # LINEAR LAGRAGE (default)\n  []\n[]\n\n[AuxVariables]\n  # receive THM computed fluid temp\n  [T_inf]\n  []\n  # receive THM computed heat transfer coefficient\n  [HTC]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  # receive power density from OpenMC\n  [power_density]\n    family = MONOMIAL\n    order = CONSTANT\n    block = 'fuel'\n  []\n  # variable to compute heat flux\n  [heat_flux_normal]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n[]\n\nTHM creates T (elemental) and T_wall (nodal, FIRST LAGRANGE) and I add the AuxVars\n[AuxVariables]\n  [T_inf_nodal] # project elemental T onto this variable before transferring to solid app\n  []\n  [Hw] # materials are defined on elements\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [q_wall]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n[]\n\nAnd here are the VPPs output by THM\n\n\n\n\nNow that I'm looking at these, something is a bit off on the T_inf_nodal near the center (maybe caused by the projections). While it's T that is used in the q_wall computation, T_inf_nodal is used to compute T_wall. Perhaps the issue starts there?\n\nTo find that out, run a loosely coupled simulation (no fixed point) so we do not see something like (wrong T_wall causes wrong T_fluid causes wrong HTC)\n\nDo you mean run THM alone with some T_wall defined in my input?",
                  "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11103493",
                  "updatedAt": "2024-10-30T17:56:41Z",
                  "publishedAt": "2024-10-30T17:56:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Do you mean run THM alone with some T_wall defined in my input?\n\nThis jump could be having the consequences you see. Let's use a smooth shape for T inf nodal and see if it fixes it",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11104254",
                          "updatedAt": "2024-10-30T19:10:13Z",
                          "publishedAt": "2024-10-30T19:10:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "alternatively, could you change on the mesh to have a half-sized element at the start. Then the nodes & centroids would be aligned and you would not need to project?",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11104262",
                          "updatedAt": "2024-10-30T19:11:21Z",
                          "publishedAt": "2024-10-30T19:11:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lewisgross1296"
                          },
                          "bodyText": "Think I'm starting to see this is mostly a post processing / choice of number of layers in my LayeredAverage [UserObjects] issue.\nI ran a simulation where instead of projecting an elemental T onto a nodal T_inf_nodal, I defined an analytical T_inf_nodal via an IC using the function $T_{inf~nodal} = 873.15 + y*(1100 - 873.15)/2.4$. As a sanity check, I loaded one of the solid_out_thm<N>.e into paraview and made a plot there, attached below\n\nThis shows that T_inf_nodal is a line (with no \"bump\" in the center), but T_wall sent from the solid still has something weird going on in the middle. For the same simulation, when I run my post processing scripts, I still see a bump in my T_inf_nodal.\n\nThinking about it more, I believe the issue is with my choice of num_layers for the UO + VPP that outputs the CSV from which the above plot is generated.  My THM mesh has num_layers_for_THM (which is 48) elements. Where I think I was going wrong was thinking that the layer averages for nodal quantities should have num_layers_for_THM +1 layers, since there's one more node than element.\nWhat this ACTUALLY does  is average the LINEAR LAGRANGE variable over $\\frac{N}{N+1}$ of the normal element height, which causes the interior layers to gets split over multiple mesh elements.\nIn my post processing script, I take those N+1 values and plot them at the node locations. This isn't technically correct, since they should probably be plotted at the centroid of each layer / probably is why there's a weird bump. Here's an image that shows this axial division for a simplified for a case with N=4 layers (so 5 nodes). Basically, the purple points are the nodal values (T_inf_nodal) and occur at boundaries between elements and there would be a linear function between. As can be seen, using N=5 layers to do the LayeredAverage isn't conformal with the mesh.\n\nI'm not 100% sure if it averages the node values or the linear temperature function, but the key takeaway is the temp values are not being plotted at the correct locations (in my post processed plots) and the averaging domains are a bit off for nodal variables.\nI think moving forward, I should just use N layers in all my LayeredAverage to be conformal with the mesh. I also think using Projections, despite this warning\n*** Warning ***\n/home/lgross/gcmr_playground/multiphysics/inner/MOOSE_THM_tweak/solid.i:240.3:\nThe following warning occurred in the Transfer 'T_inf_from_THM' of type MultiAppGeneralFieldNearestLocationTransfer.\n\nTransfer is projecting from nearest-centroids to nodes. This is likely causing floating point indetermination in the results because multiple centroids are 'nearest' to a node. Please consider using a ProjectionAux to build a nodal source variable (for example linear Lagrange) before transferring\n\nis probably not necessary / adds more variables (and confusion) / does the same thing the transfer between different variable types does (correct me if I'm wrong).\nI also plan to make my THM T_wall variable elemental so it is more compatible with the UserObject transfer (aka a variable that receives N data points from solid)\n  [ht_exit]\n    type = HeatTransferFromExternalAppTemperature1Phase\n    flow_channel = channel\n    P_hf = '${fparse channel_diameter * pi}'\n    T_ext = T_wall\n    var_type = elemental \n  []\n\nWaiting on a simulation with all these changes to run, but I'll post an update when it finishes.",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11235491",
                          "updatedAt": "2024-11-13T05:39:39Z",
                          "publishedAt": "2024-11-13T05:39:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Do you mean N-1 layers? N-1 layers fit between N nodes (with the nodes at the edges of the layers, the layered average is the average of both nodal values)\nCould you do N layers, but offset them so they are centered on the nodes?",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11241085",
                          "updatedAt": "2024-11-13T14:37:49Z",
                          "publishedAt": "2024-11-13T14:37:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lewisgross1296"
                          },
                          "bodyText": "So using N layers for all my UserObjects and no ProjectionAux (just transfer elemental T to solid app nodal variable T_inf to serve as T_infinity in my CoupledConvectiveHeatFluxBC) seems much better.\nHere are the new plots generated from THM quantities (the T variable is essentially the same).\n\n\n\nThere's still something a little off near the top of the system (can be seen in the HTC too), but overall this is much closer to the q_wall that the solid produces. I would like to test projection vs no projection at some point, but would need to wait for 1D nodal <-> elemental to be allowed again with projections.",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11295382",
                          "updatedAt": "2024-11-18T18:18:30Z",
                          "publishedAt": "2024-11-18T18:18:30Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This looks so much better indeed.\nSo removing the projection is the way to go?\nor is the bulk of the fix really aligning the bins / using the right number?\nThe 1D projection change is in a  large PR of mine already. If you need it ASAP I can separate in another PR",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11295457",
                          "updatedAt": "2024-11-18T18:28:24Z",
                          "publishedAt": "2024-11-18T18:27:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lewisgross1296"
                          },
                          "bodyText": "I think the main improvement comes from using the correct number of layers in my UO. I am curious to see the change due to projection, but I can move forward without it for now. Care to ping me on the PR so I can watch it?",
                          "url": "https://github.com/idaholab/moose/discussions/28926#discussioncomment-11297509",
                          "updatedAt": "2024-11-18T22:27:53Z",
                          "publishedAt": "2024-11-18T22:27:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Crack surface computation in PF fracture analysis.",
          "author": {
            "login": "selarem"
          },
          "bodyText": "Hello,\nI would like to know how to compute the total crack surface in a phase field fracture analysis. This should inform on the total crack surface and its evolution during the computation. This quantity is to output in a csv file.\nRegards,\nSaber",
          "url": "https://github.com/idaholab/moose/discussions/28664",
          "updatedAt": "2024-11-18T21:01:55Z",
          "publishedAt": "2024-09-19T11:57:01Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@dschwen @hugary1995",
                  "url": "https://github.com/idaholab/moose/discussions/28664#discussioncomment-10694242",
                  "updatedAt": "2024-09-19T14:20:28Z",
                  "publishedAt": "2024-09-19T14:20:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "Solved using TotalFreeEnergy with f_name = F for the total free energy; and with f_name = fracture_energy for the total fracture energy.\nJust note that :\n[./elastic_energy_1]\ntype = MaterialRealAux\nproperty = 'elastic_energy'\nvariable = elasticlocal_energy\nexecute_on = timestep_end\n[../]\nand\n[./elastic_energy_2]\ntype = TotalFreeEnergy\nvariable = total_elastic_energy\ninterfacial_vars = 'c'\nkappa_names = 'kappa_op'\nexecute_on = 'TIMESTEP_END'\nf_name = elastic_energy\n[../]\ngive (slight) different outputs.\n41.190242813765,41.195224132079\n41.18302553809,41.188742079556\n41.175391675079,41.181772920692\n41.167576021253,41.174590586641\n41.159834429617,41.167426571582",
                          "url": "https://github.com/idaholab/moose/discussions/28664#discussioncomment-10760897",
                          "updatedAt": "2024-09-26T09:40:05Z",
                          "publishedAt": "2024-09-26T08:56:26Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "selarem"
                  },
                  "bodyText": "The way I am doing it today is to compute  total_free_energy and subscript the total_elastic_energy. However, I want to check !",
                  "url": "https://github.com/idaholab/moose/discussions/28664#discussioncomment-10705509",
                  "updatedAt": "2024-09-20T13:35:33Z",
                  "publishedAt": "2024-09-20T13:35:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "I found out that the energy computation is wrong and that mechanical equilibrium is not satisfied. In fact, the the fracture energy the (non local term or gradient term) is not considered I with fracture_energy computation, I only have the local term integration ! I would like to have help in how computing the total fracture energy. Regards",
                          "url": "https://github.com/idaholab/moose/discussions/28664#discussioncomment-11296907",
                          "updatedAt": "2024-11-18T21:01:56Z",
                          "publishedAt": "2024-11-18T21:01:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Issue with HexagonMeshTrimmer After Using BlockDeletionGenerator",
          "author": {
            "login": "hityyds"
          },
          "bodyText": "Hello,\nI encountered an issue when using HexagonMeshTrimmer in MOOSE after applying BlockDeletionGenerator to delete the dummy blocks. The following error message is displayed:\nThe input mesh is not compatible with HexagonMeshTrimmer because the trimmability mesh meta data are absent.\nHere is the sequence of steps I followed to generate the mesh:\n\nUsed PolygonConcentricCircleMeshGenerator to create pins.\nUsed PatternedHexMeshGenerator to create assemblies.\nApplied PatternedHexPeripheralModifier to adjust assemblies.\nUsed HexagonConcentricCircleAdaptiveBoundaryMeshGenerator to generate dummies.\n\nWhen I use HexagonMeshTrimmer on this mesh without applying BlockDeletionGenerator, everything works as expected. However, when I use BlockDeletionGenerator before HexagonMeshTrimmer (with everything else remaining the same), the error above occurs.\nI\u2019ve reviewed the documentation for HexagonMeshTrimmer and meshing tutorials, and it seems like my usage should be correct. Could you help me understand why this happens and how to resolve it?\nThank you for your assistance!",
          "url": "https://github.com/idaholab/moose/discussions/29089",
          "updatedAt": "2024-11-18T14:46:40Z",
          "publishedAt": "2024-11-18T12:56:15Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe HexagonMeshTrimmer requires a boolean metadata to be sure that the mesh is trimmable.\nUsing a BlockDeletionGenerator removes the metadata because we can no longer guarantee that the mesh is trimmable if you use custom operations on it.\nIf you wish to re-instate this metadata you can use:\nhttps://mooseframework.inl.gov/source/meshgenerators/AddMetaDataGenerator.html\nto set the hexagon_peripheral_trimmability and hexagon_center_trimmability booleans yourself. Center trimmability means you can cut some sectors off without breaking elements in the mesh, and similarly for peripheral trimmability, it means the periphery of the mesh can be removed. If the mesh is not truly trimmable, then your output mesh will have jagged edges.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/29089#discussioncomment-11292178",
                  "updatedAt": "2024-11-18T13:40:28Z",
                  "publishedAt": "2024-11-18T13:40:27Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "using the BlockDeletionGenerator after the HexTrimmer is the better solution here",
                          "url": "https://github.com/idaholab/moose/discussions/29089#discussioncomment-11292182",
                          "updatedAt": "2024-11-18T13:40:44Z",
                          "publishedAt": "2024-11-18T13:40:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hityyds"
                          },
                          "bodyText": "Thank you very much for your help! I\u2019ll try your suggestion to use AddMetaDataGenerator to address the issue.\nIn my case, I need to first delete the dummy assemblies and then use PeripheralRingMeshGenerator to add a cylindrical peripheral to the mesh. Finally, I apply HexagonMeshTrimmer. This sequence is essential because changing the order of HexagonMeshTrimmer and BlockDeletionGenerator would leave a hole in the middle of the mesh, which is not acceptable for my use case.\nThanks again for your guidance!",
                          "url": "https://github.com/idaholab/moose/discussions/29089#discussioncomment-11292509",
                          "updatedAt": "2024-11-18T14:11:55Z",
                          "publishedAt": "2024-11-18T14:11:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "how to set different fixed time steps for different time periods",
          "author": {
            "login": "SunJianhang678"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello, I would like to set different fixed time steps for different time periods in one transient simulation. Can I set it directly in the [Executioner] of the input file?\nIf I use the TimeStepper method, it seems that I need to get the current time to segment the time, is there a way to get the current time in the Timestepper? I tried to use _t and _current_time/getCurrentTime but no help. Thanks for your help!",
          "url": "https://github.com/idaholab/moose/discussions/29087",
          "updatedAt": "2024-11-26T02:50:05Z",
          "publishedAt": "2024-11-18T04:08:14Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDifferent time step cannot be done directly in the Executioner block. You can only do the \"ConstantDT\" behavior there.\nYou can use the TimeStepper or the TimeSteppers block.\n\nI need to get the current time to segment the time, is there a way to get the current time in the Timestepper? I tried to use _t and _current_time/getCurrentTime but no help. Thanks for your help!\n\nThe current time is accessible when coding a time stepper using the _time attribute. The time is retrieved from the problem.\n    _time(_fe_problem.time()),\n\n\ndifferent fixed time steps for different time period\n\nIf you already know the size of the fixed time step and the start and end time of the periods, you could use a FunctionDT with a PiecewiseConstant function",
                  "url": "https://github.com/idaholab/moose/discussions/29087#discussioncomment-11292307",
                  "updatedAt": "2024-11-18T13:54:18Z",
                  "publishedAt": "2024-11-18T13:54:18Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Questions about meshing on a irregular shape(MegaPower, Special Purpose Nuclear, SPR)",
          "author": {
            "login": "Wang-Yihu"
          },
          "bodyText": "Question: How to mesh with MOOSE in this irregular shape?(It can be divided into a regular hexagon in the middle and six trimmed irregular hexagon)\n\nRecent days, I'm trying to mesh on MegaPower(https://www.osti.gov/biblio/1410224). Its shape is\n\nIt can be seen as the duplication for the small units of the first figure in most areas.\nI'm trying to mesh with MOOSE after I see this. It seems that PolygonConcentricCircleMeshGenerator, PatternedHexMeshGenerator, and  HexagonMeshTrimmer can solve my problem plausibly.\nhttps://mooseframework.inl.gov/getting_started/examples_and_tutorials/tutorial04_meshing/step06_common_ops.html\nHowever, there is a big difference between the example of this web page and my object. In the model in the first figure, in the corner region, the hexagon is not a regular hexagon, that is, the sides of the hexagon are not equal, which I've marked in the first figure.\nSo can MOOSE mesh can solve this problem?\nP.S, this can be solved by struct block mesh. I finish this mesh by ANSYS Workbench Mesh and ICEM CFD.",
          "url": "https://github.com/idaholab/moose/discussions/29076",
          "updatedAt": "2024-11-18T02:52:56Z",
          "publishedAt": "2024-11-14T15:38:04Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I'm trying to mesh with MOOSE after I see this. It seems that PolygonConcentricCircleMeshGenerator, PatternedHexMeshGenerator, and HexagonMeshTrimmer can solve my problem plausibly.\n\nYes this is exactly what you need to do for the very first shape. Did you get it working?\nTHe HexagonMeshTrimmer could be replaced by 6 CutMeshByPlane generator if it does not perform as expected.\nAre you trying to mesh the second one too?",
                  "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11256395",
                  "updatedAt": "2024-11-14T15:50:15Z",
                  "publishedAt": "2024-11-14T15:50:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Wang-Yihu"
                          },
                          "bodyText": "Dear Giud, thanks for your reply! However, maybe my words are not clear. Now I draw the geometry again:\n\nAnd I put the figure of the example in url https://mooseframework.inl.gov/getting_started/examples_and_tutorials/tutorial04_meshing/step06_common_ops.html\nwith PolygonConcentricCircleMeshGenerator, PatternedHexMeshGenerator, and HexagonMeshTrimmer.\n\nYou may have noticed that there is a very big difference between these two figures: All the hexagons in the MOOSE example(the second figure) are regular hexagons. However, in my example(the first figure), only the center hexagon is regular hexagon. The other six trimmed hexagon are not regular hexagons - their edges lengths are not equal - I have marked their values in the figure.\nIt seems that the class PolygonConcentricCircleMeshGenerator can only mesh regular hexagon, for its required parameter polygon_size is only one number... It seems that it cannot solve this problem...\nI'm looking forward to your reply...",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11266493",
                          "updatedAt": "2024-11-15T12:32:42Z",
                          "publishedAt": "2024-11-15T12:31:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Oh interesting.\nOk this can be done too but it will take more work.\nFor the center hexagon, no change.\nFor the side hexagons, use another PCCMG with the smaller dimensions.\nThen use a FlexiblePattern generator to place all 7 hexagons, using the custom placement option (not hexagonal, not Cartesian) since your lattice is not regular.\nhttps://mooseframework.inl.gov/source/meshgenerators/FlexiblePatternGenerator.html\nThen use the trimmer the same way since the trim dimensions are the ones for the center hexagon",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11267245",
                          "updatedAt": "2024-11-15T14:07:32Z",
                          "publishedAt": "2024-11-15T13:28:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Wang-Yihu"
                          },
                          "bodyText": "Dear GiudGiud, thanks for your suggestion. Now I input PolygonConcentricCircleMeshGenerator - FlexiblePatternGenerator\n[Mesh]\nfinal_generator = 'fpg'\n  [hex_1]\n    type = PolygonConcentricCircleMeshGenerator\n    # General parameters\n    num_sides = 6\n    num_sectors_per_side = '4 4 4 4 4 4'\n    polygon_size = 0.008375\n    # Ring regions parameters\n    ring_radii = '0.0065 0.0070 0.007875'\n    ring_intervals = '2 2 2'\n    ring_block_ids = '10 15 20 25'\n    ring_block_names = 'vapor_tri vapor wick clad'\n    preserve_volumes = on\n    # Background region parameters\n    background_intervals = 2\n    background_block_ids = 30\n    background_block_names = background\n  []\n  [hex_2]\n    type = PolygonConcentricCircleMeshGenerator\n    num_sides = 6\n    num_sectors_per_side = '4 4 4 4 4 4'\n    polygon_size = 0.007625\n    ring_radii = '0.00706 0.007125'\n    ring_intervals = '2 1'\n    ring_block_ids = '100 150 200'\n    ring_block_names = 'fuel_tri fuel gap'\n    preserve_volumes = on\n    background_intervals = 2\n    background_block_ids = 250\n    background_block_names = background\n  []\n  #The following error occurred in the object \"pattern_assm\", \n  #of type \"PatternedHexMeshGenerator\".\n  #In PatternedHexMeshGenerator pattern_assm: \n  #pitch metadata values of all input mesh generators must be identical.\n#  [pattern_assm_error]\n#    type = PatternedHexMeshGenerator\n#    inputs = 'hex_1 hex_2'\n#    pattern =  '1 1;\n#               1 0 1;\n#                1 1'\n#    hexagon_size = 0.024\n#    background_intervals = 2\n#    background_block_id = 1000\n#    background_block_name = background\n#  []\n  [fpg]\n    type = FlexiblePatternGenerator\n    inputs = 'hex_1 hex_2'\n    boundary_type = HEXAGON\n    boundary_sectors = 10\n    boundary_size = 0.048\n    hex_patterns = '1 1;\n                   1 0 1;\n                    1 1'\n    hex_pitches = 0.016\n  []\n  #The input mesh is not compatible with HexagonMeshTrimmer \n  # because the trimmability mesh meta data are absent.\n#  [hmt_err]\n#    type = HexagonMeshTrimmer\n#    input = fpg\n#    trim_peripheral_region = '1 1 1 1 1 1'\n#  []\n[]\n\nIt will return (I mark trimming line I want with yellow )\n\nHowever, HexagonMeshTrimmer does not work in this problem. It seems that it can only handle mesh from  PatternedHexMeshGenerator, not FlexiblePatternGenerator in my problem...",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11277483",
                          "updatedAt": "2024-11-16T13:53:06Z",
                          "publishedAt": "2024-11-16T13:16:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok so that s ok. The mesh trimmer is just 6 CutMeshByPlaneGenerator",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11277996",
                          "updatedAt": "2024-11-16T14:48:50Z",
                          "publishedAt": "2024-11-16T14:48:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You can replace it by chaining these plane cutting operations. The CutMeshByPlaneGenerator should be preferred over the PlaneDeletion Generator because it will cut the boundary without creating dents in the mesh",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11278001",
                          "updatedAt": "2024-11-16T14:50:10Z",
                          "publishedAt": "2024-11-16T14:50:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Wang-Yihu"
                          },
                          "bodyText": "In fact, CutMeshByPlaneGenerator cannot be applied for my 2D problem, it can only be applied for 3D problem... I use XYMeshLineCutter.\nHere is my *.i file:\n[Mesh]\nfinal_generator =  'rename'\n  [hex_1]\n    type = PolygonConcentricCircleMeshGenerator\n    # General parameters\n    num_sides = 6\n    num_sectors_per_side = '4 4 4 4 4 4'\n    polygon_size = 0.008375\n    # Ring regions parameters\n    ring_radii = '0.0065 0.0070 0.007875'\n    ring_intervals = '2 2 2'\n    ring_block_ids = '10 15 20 25'\n    ring_block_names = 'vapor_tri vapor wick clad'\n    preserve_volumes = on\n    # Background region parameters\n    background_intervals = 2\n    background_block_ids = 30\n    background_block_names = background\n  []\n  [hex_2]\n    type = PolygonConcentricCircleMeshGenerator\n    num_sides = 6\n    num_sectors_per_side = '4 4 4 4 4 4'\n#    polygon_size = 0.007625\n    polygon_size = 0.007250\n    ring_radii = '0.00706 0.007125'\n    ring_intervals = '2 1'\n    ring_block_ids = '100 150 200'\n    ring_block_names = 'fuel_tri fuel gap'\n    preserve_volumes = on\n    background_intervals = 2\n    background_block_ids = 250\n    background_block_names = background\n  []\n  #The following error occurred in the object \"pattern_assm\", \n  #of type \"PatternedHexMeshGenerator\".\n  #In PatternedHexMeshGenerator pattern_assm: \n  #pitch metadata values of all input mesh generators must be identical.\n  [pattern_assm_error]\n    type = PatternedHexMeshGenerator\n    inputs = 'hex_1 hex_2'\n    pattern =  '1 1;\n               1 0 1;\n                1 1'\n    hexagon_size = 0.024\n    background_intervals = 2\n    background_block_id = 1000\n    background_block_name = background\n  []\n  [fpg]\n    type = FlexiblePatternGenerator\n    inputs = 'hex_1 hex_2'\n    boundary_type = HEXAGON\n    boundary_sectors = 10\n    boundary_size = 0.048\n    hex_patterns = '1 1;\n                   1 0 1;\n                    1 1'\n    hex_pitches = 0.016\n    background_subdomain_id = 1\n    background_subdomain_name = monolith_quad\n  []\n  #The input mesh is not compatible with HexagonMeshTrimmer \n  # because the trimmability mesh meta data are absent.\n  [hmt_err]\n    type = HexagonMeshTrimmer\n    input = rename\n    trim_peripheral_region = '1 1 1 1 1 1'\n  []\n  #Only 3D meshes are supported. \n  #Use XYMeshLineCutter for 2D meshes. \n  #Mixed dimensional meshes are not supported at the moment.\n  [cmbpg_err]\n    type = CutMeshByPlaneGenerator\n    input = fpg\n    plane_point = '0.0 0.013856 0.0'\n    plane_normal = '0.0 1.0 0.0'\n  []\n  [xymlc_1]\n    type = XYMeshLineCutter\n    input = fpg\n    cut_line_params = '-1.732 1.0 -0.027712'\n    new_boundary_id = 1111\n    tri_elem_subdomain_name_suffix = 111\n  []\n  [xymlc_2]\n    type = XYMeshLineCutter\n    input = xymlc_1\n    cut_line_params = '0.0 1.0 -0.013856'\n    new_boundary_id = 2222\n    tri_elem_subdomain_name_suffix = 222\n  []\n  [xymlc_3]\n    type = XYMeshLineCutter\n    input = xymlc_2\n    cut_line_params = '1.732 1.0 -0.027712'\n    new_boundary_id = 3333\n    tri_elem_subdomain_name_suffix = 333\n  []\n  [xymlc_4]\n    type = XYMeshLineCutter\n    input = xymlc_3\n    cut_line_params = '1.732 -1.0 -0.027712'\n    new_boundary_id = 4444\n    tri_elem_subdomain_name_suffix = 444\n  []\n  [xymlc_5]\n    type = XYMeshLineCutter\n    input = xymlc_4\n    cut_line_params = '0.0 -1.0 -0.013856'\n    new_boundary_id = 5555\n    tri_elem_subdomain_name_suffix = 555\n  []\n  [xymlc_6]\n    type = XYMeshLineCutter\n    input = xymlc_5\n    cut_line_params = '-1.732 -1.0 -0.027712'\n    new_boundary_id = 6666\n    tri_elem_subdomain_name_suffix = 666\n  []\n  #It seems that all classes above cannot name block easily...\n  [rename]\n    type = RenameBlockGenerator \n    input = xymlc_6\n    old_block = '0            10        15         20   25   30            \n                 100      150       200 250'\n    new_block = 'monolith_tri vapor_tri vapor_quad wick clad monolith_quad \n                 fuel_tri fuel_quad gap monolith_quad'\n  []\n[]\n\nAnd here is my result:\n\nAnd you maybe have noticed that there is a strange block named_with 150_222 with very very small volume. It might be generated by XYMeshLineCutter with creating dents in the mesh as you said...\nSo how to solve this defect? Just use BlockDeletionGenerator to delete it?\nP.S. the class CutMeshByPlaneGenerator is not in my MOOSE version . I have to download CutMeshByPlaneGenerator.C/h and MooseMeshElementConversionUtils.C/h.",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11282292",
                          "updatedAt": "2024-11-17T09:03:19Z",
                          "publishedAt": "2024-11-17T09:03:18Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I would either delete it or try to play with the directions (introducing a slight error in the direction that removes the block) for XY mesh line cutting to remove it.\nIt's due to numerical precision errors in the cutting process. Deleting it should be safe",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11283325",
                          "updatedAt": "2024-11-17T13:31:00Z",
                          "publishedAt": "2024-11-17T13:30:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Wang-Yihu"
                          },
                          "bodyText": "Ok, very glad to see your reply! I might spend weeks or even months to solve it without your precious help!\nBut I still want to generate this mesh by block structured method. This geometry is so regular (even with small defect). Here I show my block structured layout and mesh by ANSYS Workbench mesh\n\nDo you have some ideas about realizing this type mesh by MOOSE?",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11283587",
                          "updatedAt": "2024-11-17T14:28:18Z",
                          "publishedAt": "2024-11-17T14:28:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nWe don't have this block structured algorithm in moose. Do you just mean you want to use quadrilateral elements?\nWhy don't you use your ansys mesh? If you look at the FileMeshGenerator documentation you can see all the formats we support\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11283642",
                          "updatedAt": "2024-11-17T14:36:38Z",
                          "publishedAt": "2024-11-17T14:36:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If you want a quad mesh it s possible but it will take some patience. You ll have to figure out if you can the peripheral pins when they use quadrilateral center elements (a parameter of the PCCMG). If that works we can figure out how to mesh the background region with quads",
                          "url": "https://github.com/idaholab/moose/discussions/29076#discussioncomment-11283650",
                          "updatedAt": "2024-11-17T14:37:59Z",
                          "publishedAt": "2024-11-17T14:37:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "some errors with /run_tests -j 6",
          "author": {
            "login": "JOOsna"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n I have consulted the Posting Guidelines.\n I have searched the Discussions Forum and MOOSE Framework Troubleshooting and have not found what I was looking for\n Q&A Getting Started is the most appropriate category for my question (trouble installing, beginner user, ...)\n\nIssue or question about MOOSE\nhello\nive got some errors with /run_tests -j 6 after build moose(make -j 6)\nThe code below is the corresponding error code\nplz help me :(\n(Optional) code in question / simulation log / errors\ncontrols/web_server_control.control/bool ................................................. FAILED (CRASH)\ncontrols/web_server_control.control/real ................................................. FAILED (CRASH)\ncontrols/web_server_control.control/int .................................................. FAILED (CRASH)\ncontrols/web_server_control.control/string ............................................... FAILED (CRASH)\ncontrols/web_server_control.control/vec_real ............................................. FAILED (CRASH)\ncontrols/web_server_control.control/vec_int .............................................. FAILED (CRASH)\ncontrols/web_server_control.control/vec_string ........................................... FAILED (CRASH)\ncontrols/web_server_control.get_postprocessor ............................................ FAILED (CRASH)\ncontrols/web_server_control.parallel_consistent ............................. [min_cpus=2] FAILED (CRASH)\ncontrols/web_server_control.errors/set_controllable_no_exist ............ FAILED (EXPECTED ERROR MISSING)\ncontrols/web_server_control.errors/postprocessor_no_exist ............... FAILED (EXPECTED ERROR MISSING)\ncontrols/web_server_control.errors/set_controllable_unregistered_type ... FAILED (EXPECTED ERROR MISSING)\ncontrols/web_server_control.errors/set_controllable_bad_convert_json .... FAILED (EXPECTED ERROR MISSING)\ncontrols/web_server_control.errors/set_controllable_vector_non_array .... FAILED (EXPECTED ERROR MISSING)\nEncountering Errors? Please include diagnostic output\nNo response",
          "url": "https://github.com/idaholab/moose/discussions/29086",
          "updatedAt": "2024-11-17T17:01:27Z",
          "publishedAt": "2024-11-17T07:35:40Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can ignore these for now. It just means on object in moose in the Controls system won't work for you.\nIf you paste the log above this summary of the errors we can try to diagnose why they occurred.",
                  "url": "https://github.com/idaholab/moose/discussions/29086#discussioncomment-11283300",
                  "updatedAt": "2024-11-17T13:27:50Z",
                  "publishedAt": "2024-11-17T13:27:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "JOOsna"
                          },
                          "bodyText": "Thank u :)\nYour answer is very helpful",
                          "url": "https://github.com/idaholab/moose/discussions/29086#discussioncomment-11284317",
                          "updatedAt": "2024-11-17T17:01:28Z",
                          "publishedAt": "2024-11-17T17:01:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Make failure",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nI am trying to compile my application and I got this feedback. Is it an error? Was the compilation successful?\n(python-stack) [emmanuel324@tinkercliffs1 belson]$ make -j8\nCreating Unity /home/emmanuel324/projects/moose/modules/solid_mechanics/build/unity_src/materials_Unity.C\nCreating Unity /home/emmanuel324/projects/belson/build/unity_src/materials_Unity.C\nCompiling C++ (in opt mode) /home/emmanuel324/projects/moose/modules/solid_mechanics/build/unity_src/materials_Unity.C...\nCompiling C++ (in opt mode) /home/emmanuel324/projects/belson/build/unity_src/materials_Unity.C...\nLinking Library /home/emmanuel324/projects/moose/modules/solid_mechanics/lib/libsolid_mechanics-opt.la...\nLinking Library /home/emmanuel324/projects/moose/modules/contact/lib/libcontact-opt.la...\nLinking Library /home/emmanuel324/projects/moose/modules/fsi/lib/libfsi-opt.la...\nLinking Library /home/emmanuel324/projects/moose/modules/peridynamics/lib/libperidynamics-opt.la...\nLinking Library /home/emmanuel324/projects/moose/modules/phase_field/lib/libphase_field-opt.la...\nLinking Library /home/emmanuel324/projects/moose/modules/porous_flow/lib/libporous_flow-opt.la...\nLinking Library /home/emmanuel324/projects/moose/modules/xfem/lib/libxfem-opt.la...\nLinking Library /home/emmanuel324/projects/moose/modules/combined/lib/libcombined-opt.la...\nLinking Library /home/emmanuel324/projects/moose/modules/module_loader/lib/libmodule_loader_with_cr_em_eps_fp_fet_gc_ls_ray_rdg_rct_rich_st_ht_sp_sm_ns_con_fsi_misc_opt_pd_pf_pflow_th_st_xfe\nm_comb-opt.la...\nLinking Library /home/emmanuel324/projects/belson/lib/libbelson-opt.la...\nLinking Test Library /home/emmanuel324/projects/belson/test/lib/libbelson_test-opt.la...\nLinking Executable /home/emmanuel324/projects/belson/belson-opt...\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: skipping incompatible /lib/libutil.so when searching for -lutil\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: skipping incompatible /lib/libpthread.so when searching for -lpthread\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: skipping incompatible /lib/librt.so when searching for -lrt\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: skipping incompatible /lib/libdl.so when searching for -ldl\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: skipping incompatible /lib/libm.so when searching for -lm\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: skipping incompatible /lib/libpthread.so when searching for -lpthread\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: skipping incompatible /lib/libc.so when searching for -lc\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: /home/emmanuel324/projects/belson/lib/libbelson-opt.so: undefined reference to `InputParameters validParams<Or\nderParameterFunctionMaterial>()'\n/apps/easybuild/software/tinkercliffs-rome/binutils/2.40-GCCcore-13.2.0/bin/ld: /home/emmanuel324/projects/belson/lib/libbelson-opt.so: undefined reference to `InputParameters validParams<Ke\nrnel>()'\ncollect2: error: ld returned 1 exit status\nmake: *** [/home/emmanuel324/projects/belson/belson-opt] Error 1\n(python-stack) [emmanuel324@tinkercliffs1 belson]$",
          "url": "https://github.com/idaholab/moose/discussions/28724",
          "updatedAt": "2024-11-17T16:26:59Z",
          "publishedAt": "2024-09-27T19:15:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "This syntax for parameters has been deprecated for a while.\nYou need to update those two objects to the new syntax, git clean and recompile",
                  "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10779350",
                  "updatedAt": "2024-09-27T19:32:06Z",
                  "publishedAt": "2024-09-27T19:32:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Can you give a little bit of detail on what I  need to do resolve this. I just added two source codes and header files in my application, that caused this issue.",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10779588",
                          "updatedAt": "2024-09-27T20:13:43Z",
                          "publishedAt": "2024-09-27T20:13:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "see this announcement\nhttps://mooseframework.inl.gov/docs/PRs/28672/site/newsletter/2021/2021_11.html#legacy-input-parameter-deprecation",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10779671",
                          "updatedAt": "2024-09-27T20:27:32Z",
                          "publishedAt": "2024-09-27T20:27:31Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Thanks, issues resolved!",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10780135",
                          "updatedAt": "2024-09-27T21:39:42Z",
                          "publishedAt": "2024-09-27T21:39:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "My app compiled successfully but I still get the error with my script\nA 'BarrierFunctionMaterial_abs' is not a registered object.check_inp(moose_srv)\nIf you are trying to find this object in a dynamically loaded library, make sure thatcheck_inp(moose_srv)\nthe library can be found either in your \"Problem/library_path\" parameter or in thecheck_inp(moose_srv)\nMOOSE_LIBRARY_PATH environment variable\n\nHow do I fix it?",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10780217",
                          "updatedAt": "2024-09-27T21:57:26Z",
                          "publishedAt": "2024-09-27T21:57:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "how did you register your material? can you paste the beginning of the source file for this material?",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10780247",
                          "updatedAt": "2024-09-27T22:04:29Z",
                          "publishedAt": "2024-09-27T22:04:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "//* This file is part of the MOOSE framework\n//* https://www.mooseframework.org\n//*\n//* All rights reserved, see COPYRIGHT for full restrictions\n//* https://github.com/idaholab/moose/blob/master/COPYRIGHT\n//*\n//* Licensed under LGPL 2.1, please see LICENSE for details\n//* https://www.gnu.org/licenses/lgpl-2.1.html\n\n#include \"BarrierFunctionMaterial_abs.h\"\n\nregisterMooseObject(\"belson\", BarrierFunctionMaterial_abs);\n\n\nInputParameters\nBarrierFunctionMaterial_abs::validParams()\n{\n  InputParameters params = OrderParameterFunctionMaterial::validParams();\n  params.addClassDescription(\"Helper material to provide g(eta) and its derivative in a \"\n                             \"polynomial.\\nSIMPLE: eta^2*(1-eta)^2\\nLOW: eta*(1-eta)\"\n                             \"\\nHIGH: eta^2*(1-eta^2)^2\");\n  MooseEnum g_order(\"SIMPLE=0 LOW HIGH\", \"SIMPLE\");\n  params.addParam<MooseEnum>(\"g_order\", g_order, \"Polynomial order of the barrier function g(eta)\");\n  params.addParam<bool>(\"well_only\",\n                        false,\n                        \"Make the g zero in [0:1] so it only contributes to \"\n                        \"enforcing the eta range and not to the phase \"\n                        \"transformation berrier.\");\n  params.set<std::string>(\"function_name\") = std::string(\"g\");\n  return params;\n}",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10780252",
                          "updatedAt": "2024-09-27T22:05:55Z",
                          "publishedAt": "2024-09-27T22:05:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it should probably be\nregisterMooseObject(\"belsonApp\", BarrierFunctionMaterial_abs);\n\nif that does not work, try\nregisterMooseObject(\"MooseApp\", BarrierFunctionMaterial_abs);",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10780297",
                          "updatedAt": "2024-09-27T22:13:32Z",
                          "publishedAt": "2024-09-27T22:13:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Thanks the first suggestion worked",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-10780355",
                          "updatedAt": "2024-09-27T22:30:52Z",
                          "publishedAt": "2024-09-27T22:30:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ColinMG2"
                          },
                          "bodyText": "Hello! I have run into the same error when trying to run make for the solid mechanics module. I tried clicking on the link you posted but I get a 404 not found error. How can I resolve this issue. My output is similar:\n(moose) colinmoose@ColinG14:~/projects/moose/modules/solid_mechanics$ make -j 16\nLinking Executable /home/colinmoose/projects/moose/modules/solid_mechanics/solid_mechanics-opt...\n/home/colinmoose/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/colinmoose/projects/moose/modules/solid_mechanics/lib/libsolid_mechanics-opt.so: undefined reference to `non-virtual thunk to ExplicitTimeIntegrator::meshChanged()'\ncollect2: error: ld returned 1 exit status\nmake: *** [/home/colinmoose/projects/moose/framework/app.mk:466: /home/colinmoose/projects/moose/modules/solid_mechanics/solid_mechanics-opt] Error 1",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-11281686",
                          "updatedAt": "2024-11-17T05:30:32Z",
                          "publishedAt": "2024-11-17T05:30:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Weird error. Is this a fresh build? It could be some leftover compiles objects from before that object was modified (in which case you would to save your work using git commit then use git clean -Xfd in the moose/ folder to delete them, then compile again",
                          "url": "https://github.com/idaholab/moose/discussions/28724#discussioncomment-11281697",
                          "updatedAt": "2024-11-17T05:36:05Z",
                          "publishedAt": "2024-11-17T05:35:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "<Use a descriptive title here> About MOOSE test fail after install",
          "author": {
            "login": "SunghyunO"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n I have consulted the Posting Guidelines.\n I have searched the Discussions Forum and MOOSE Framework Troubleshooting and have not found what I was looking for\n Q&A Getting Started is the most appropriate category for my question (trouble installing, beginner user, ...)\n\nIssue or question about MOOSE\nHello, I installed MOOSE, then I did test as projects/moose/test ./run_tests -j 6.\nBut there is only one fail message so I tried to fix, but I failed. The error message is as below:\nminimal_app.minimal: Working Directory: /home/sunghyunoh/projects/moose/test/tests/minimal_app\nminimal_app.minimal: Running command: /home/sunghyunoh/projects/moose/test/moose_test-opt   --minimal --list-constructed-objects --error --error-override --libtorch-device cpu\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: Begin runner_run output\nminimal_app.minimal: \nminimal_app.minimal: **START OBJECT DATA**\nminimal_app.minimal: Checkpoint\nminimal_app.minimal: ConstantDT\nminimal_app.minimal: DefaultNonlinearConvergence\nminimal_app.minimal: FEProblem\nminimal_app.minimal: GeneratedMesh\nminimal_app.minimal: ImplicitEuler\nminimal_app.minimal: Transient\nminimal_app.minimal: **END OBJECT DATA**\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: End runner_run output\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: Begin tester output\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: \nminimal_app.minimal: Unable to match the following pattern against the program's output:\nminimal_app.minimal: \nminimal_app.minimal: FEProblem\\nDefaultNonlinearConvergence\\nGeneratedMesh\nminimal_app.minimal: \nminimal_app.minimal: Tester failed, reason: EXPECTED OUTPUT MISSING\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: End tester output\nminimal_app.minimal: \nminimal_app.minimal ................. FAILED (EXPECTED OUTPUT MISSING)\n\nminimal_app.minimal ................. FAILED (EXPECTED OUTPUT MISSING)\n----------------------------------------------------------------------\nRan 4528 tests in 294.9 seconds. Average test time 0.5 seconds, maximum test time 213.0 seconds.\n4527 passed, 99 skipped, 1 FAILED\n\n\nI don't know why, how can I fix this error?\n\nThank you\n\n### (Optional) code in question / simulation log / errors\n\n```shell\nminimal_app.minimal: Working Directory: /home/sunghyunoh/projects/moose/test/tests/minimal_app\nminimal_app.minimal: Running command: /home/sunghyunoh/projects/moose/test/moose_test-opt   --minimal --list-constructed-objects --error --error-override --libtorch-device cpu\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: Begin runner_run output\nminimal_app.minimal: \nminimal_app.minimal: **START OBJECT DATA**\nminimal_app.minimal: Checkpoint\nminimal_app.minimal: ConstantDT\nminimal_app.minimal: DefaultNonlinearConvergence\nminimal_app.minimal: FEProblem\nminimal_app.minimal: GeneratedMesh\nminimal_app.minimal: ImplicitEuler\nminimal_app.minimal: Transient\nminimal_app.minimal: **END OBJECT DATA**\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: End runner_run output\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: Begin tester output\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: \nminimal_app.minimal: Unable to match the following pattern against the program's output:\nminimal_app.minimal: \nminimal_app.minimal: FEProblem\\nDefaultNonlinearConvergence\\nGeneratedMesh\nminimal_app.minimal: \nminimal_app.minimal: Tester failed, reason: EXPECTED OUTPUT MISSING\nminimal_app.minimal: \nminimal_app.minimal: ################################################################################\nminimal_app.minimal: End tester output\nminimal_app.minimal: \nminimal_app.minimal ................. FAILED (EXPECTED OUTPUT MISSING)\n\nminimal_app.minimal ................. FAILED (EXPECTED OUTPUT MISSING)\n----------------------------------------------------------------------\nRan 4528 tests in 294.9 seconds. Average test time 0.5 seconds, maximum test time 213.0 seconds.\n4527 passed, 99 skipped, 1 FAILED\n\nEncountering Errors? Please include diagnostic output\nNo response",
          "url": "https://github.com/idaholab/moose/discussions/29084",
          "updatedAt": "2024-11-15T17:43:40Z",
          "publishedAt": "2024-11-15T17:09:37Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou don't need to fix this error. We'll update MOOSE to not encounter it.\nThanks for reporting\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/29084#discussioncomment-11271420",
                  "updatedAt": "2024-11-15T17:43:40Z",
                  "publishedAt": "2024-11-15T17:43:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}