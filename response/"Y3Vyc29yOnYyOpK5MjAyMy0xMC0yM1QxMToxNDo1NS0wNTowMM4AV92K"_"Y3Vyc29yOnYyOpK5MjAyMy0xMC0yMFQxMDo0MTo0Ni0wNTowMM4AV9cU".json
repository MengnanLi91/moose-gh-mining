{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0xMC0yMFQxMDo0MTo0Ni0wNTowMM4AV9cU"
    },
    "edges": [
      {
        "node": {
          "title": "Using a SolutionUserObject with the Thermal Hydraulics Module",
          "author": {
            "login": "TheBEllis"
          },
          "bodyText": "Hi MOOSE team,\nI have encountered a problem that occurs when using a SolutionUserObject in a thermal hydraulics problem.  I am using a SolutionUserObject to read in a volumetric heating variable, aptly named vol_heating, that is calculated in another MOOSE app. I then use this term with a HeatSourceFromPowerDensity object in order to apply the heating term on my heat structure. This works perfectly fine when I do not have any flow channels defined, the heat structure heats up as expected. However, when channels are defined, I get an error of the following sort.\nThe following error occurred in the object \"solution_in\", of type \"SolutionUserObject\".\n\nFailed to access the data for variable 'vol_heating' at point (x,y,z)=(       0,        0,       -5) in the 'solution_in' SolutionUserObject\n\nThe coordinate 0, 0, -5 are the starting coordinates of one of my flow channels. The SolutionUserObject is looking for the variable value on my flow channels. I understand why, but is there any way to prevent this from happening? I have tried using 'execute_on = INITIAL', but to no success. I have included some input files and a mesh which together constitute a minimum working example. The volumetric_heating input file needs to be run first so that the results can be imported in the thermal hydraulics input files with the SolutionUserObject. Running the th input file will result in the same error I mentioned above. The no_channels_th input file is almost identical, but has the flow channel removed, and runs just fine.\nTo summarise, I want to read in a variable that only exists on the heat structure, not the flow channels.\nAny help is greatly appreciated:)\nvolumetric_heating.txt\nno_th_channels.txt\nth.txt\nMesh.zip",
          "url": "https://github.com/idaholab/moose/discussions/25713",
          "updatedAt": "2023-10-23T15:48:53Z",
          "publishedAt": "2023-10-11T13:23:58Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I ll take a look\nEDIT Ignore my previous reply, wrong post\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25713#discussioncomment-7254254",
                  "updatedAt": "2023-10-11T15:46:38Z",
                  "publishedAt": "2023-10-11T15:27:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "actually it wasnt that bad\nyou just need to add a block restriction\n[AuxKernels]\n  [aux-vol_heating]\n    type = SolutionAux\n    solution = solution_in\n    variable = vol_heating\n    from_variable = vol_heating\n    scale_factor = 1e-2\n\n    block = 'hs_geom:theblock'\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/25713#discussioncomment-7254595",
                          "updatedAt": "2023-10-11T16:03:25Z",
                          "publishedAt": "2023-10-11T16:03:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheBEllis"
                          },
                          "bodyText": "Thanks Guillaume:)",
                          "url": "https://github.com/idaholab/moose/discussions/25713#discussioncomment-7360604",
                          "updatedAt": "2023-10-23T15:48:54Z",
                          "publishedAt": "2023-10-23T15:48:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "NearestNodeDistanceAux not updating correctly",
          "author": {
            "login": "naabwxt"
          },
          "bodyText": "I am running into a situation where NearestNodeDistanceAux will calculate the distance from one surface to another correctly on time = 0, but will not update correctly when only one of the bodies has displacements are defined.\nWhen both blocks have displacements defined on them the distance between the blocks updates throughout the simulation correctly, but when only one has the displacements it calculates the initial distance but doesn't change during the simulation.\nAm I missing a setting somewhere to allow it to redo the calc throughout?",
          "url": "https://github.com/idaholab/moose/discussions/25778",
          "updatedAt": "2023-10-23T12:53:12Z",
          "publishedAt": "2023-10-19T13:22:43Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Do you have use_displaced_mesh = true in your aux kernel block?",
                  "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7330400",
                  "updatedAt": "2023-10-19T16:36:00Z",
                  "publishedAt": "2023-10-19T16:35:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Actually I see that shouldn't be necessary...\nInputParameters\nNearestNodeDistanceAux::validParams()\n{\n  InputParameters params = AuxKernel::validParams();\n  params.addClassDescription(\n      \"Stores the distance between a block and boundary or between two boundaries.\");\n  params.addRequiredParam<BoundaryName>(\"paired_boundary\", \"The boundary to find the distance to.\");\n  params.set<bool>(\"use_displaced_mesh\") = true;\n  return params;\n}",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7330410",
                          "updatedAt": "2023-10-19T16:36:56Z",
                          "publishedAt": "2023-10-19T16:36:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I should have read your post more carefully ... there is likely an issue in the code if this is working with displacements on both blocks but not when you only have displacements on one block. Do you have a minimal example that demonstrates the problem? If not, then we can probably make one ourselves",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7330439",
                          "updatedAt": "2023-10-19T16:39:07Z",
                          "publishedAt": "2023-10-19T16:39:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "Here is a min working example...if I comment out the explicit displacement lines in the various blocks and turn on the global params version it updates just fine. But when I restrict it to just the middle block or even just two of the three blocks is where it has the issues.\nthreeblocks.zip",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7330485",
                          "updatedAt": "2023-10-19T16:44:56Z",
                          "publishedAt": "2023-10-19T16:44:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Ok so you have to uncomment the displacements parameter in the Mesh block. The existence of that parameter is what makes us construct the displaced problem. Once you do that and you apply my bug fix in #25805, then you should see the gap results changing over the course of the simulation.",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7345121",
                          "updatedAt": "2023-10-21T06:51:07Z",
                          "publishedAt": "2023-10-21T06:51:06Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "Thanks for looking into this. Once that has been pushed I can pull it in and test it out. In the meantime, since this is part of a larger problem using a specific version of moose (from earlier this year) I was looking into something that can be used in the interim until we can update the full package.\nSince I believe the core of the problem that you are stating is that the kernels are creating a coupled problem by default. I noticed that Heat Conduction kernel takes a displacements and use_displaced_mesh option. If I were to leave the displacments defined in the mesh could I use the use-displaced_mesh = false in the kernels blocks to decouple? Would that achieve the same result until we can update the MOOSE install?",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7357799",
                          "updatedAt": "2023-10-23T11:23:16Z",
                          "publishedAt": "2023-10-23T11:23:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThat should work. You define displacements globally again and separate the kernels for the coupled and decoupled regions. The decoupled region kernels use use_displaced_mesh = false.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7358452",
                          "updatedAt": "2023-10-23T12:38:39Z",
                          "publishedAt": "2023-10-23T12:38:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "Ok that does seem to work now.\nThanks!",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7358578",
                          "updatedAt": "2023-10-23T12:52:54Z",
                          "publishedAt": "2023-10-23T12:52:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI m assuming he does because it s the default\nIf we did get the \"this is a displaced mesh because there's displacement on at least one block\" right here and it s just an update problem, then there is this parameter on the mesh that will let you trigger more updates of the nearest node patches \"patch_update_strategy\". That could be the issue\nif it s not the patches and it s the search, then that section is timed. you can pass perf_graph_live_time_limit = 0 to the console to see how often it appears",
                  "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7330415",
                  "updatedAt": "2023-10-19T16:37:54Z",
                  "publishedAt": "2023-10-19T16:37:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "naabwxt"
                          },
                          "bodyText": "It does look like when I have displacements active on all blocks this appears:\n Updating Displaced Mesh\n          Finished Syncing Displaced Solutions                                           [\ufffd[33m  0.00 s\ufffd[39m] [\ufffd[33m  205 MB\ufffd[39m]\n        Still Updating Displaced Mesh....\n          Currently Finding Nearest Nodes..............................                  [\ufffd[33m  0.00 s\ufffd[39m] [\ufffd[33m  205 MB\ufffd[39m]\n          Currently Finding Nearest Nodes...............................                 [\ufffd[33m  0.00 s\ufffd[39m] [\ufffd[33m  205 MB\ufffd[39m]\n        Finished Updating Displaced Mesh                                                 [\ufffd[33m  0.01 s\ufffd[39m] [\ufffd[33m  205 MB\ufffd[39m]\n\nBut that does not seem to appear when I only have it on some of the blocks except at the beginning before Time 0.",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7330616",
                          "updatedAt": "2023-10-19T16:59:04Z",
                          "publishedAt": "2023-10-19T16:59:03Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "naabwxt"
                  },
                  "bodyText": "So I ran the --show-input command option on the model that does not update the gap distance and it appears that even when passed use_displaced_mesh = true it is set to false.\n [gap_distance_right]\n    type = NearestNodeDistanceAux\n    variable = gap\n    block = 'middle_block right_block'\n    boundary = middle_right\n    paired_boundary = right_inside\n    use_displaced_mesh = true\n[]\n\n  [./gap_distance_right]\n    _unique_action_name          = AddKernelActionadd_aux_kernelAuxKernels/gap_distance_right\n    control_tags                 = INVALID\n    inactive                     = (no_default)\n    isObjectAction               = 1\n    type                         = NearestNodeDistanceAux\n    block                        = 'middle_block right_block'\n    boundary                     = middle_right\n    check_boundary_restricted    = 1\n    enable                       = 1\n    execute_on                   = 'LINEAR TIMESTEP_END'\n    paired_boundary              = right_inside\n    prop_getter_suffix           = (no_default)\n    seed                         = 0\n    use_displaced_mesh           = 0\n    variable                     = gap\n  [../]\n[]\n\nIt also seems to think that the displacements are invalid in the mesh.\n[Mesh]\n  _unique_action_name            = CreateDisplacedProblemActionMesh\n  control_tags                   = (no_default)\n  displacements                  = INVALID\n  inactive                       = (no_default)\n  use_displaced_mesh             = 1\n\nMy guess is that once the Mesh feels there aren't displacements it will ignore the use of a displaced mesh even though displacement variables are defined on some of the blocks. Is there a way in the Mesh block to tell it there are displacements but only for certain blocks? I would prefer to not have to have displacements turned on for every block as in the much larger model this isn't really necessary and just adds DOFs and computation time that isn't needed.",
                  "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7340618",
                  "updatedAt": "2023-10-20T15:38:11Z",
                  "publishedAt": "2023-10-20T15:38:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@lindsayad is investigating this.\nBut yes that seems correct. The displacements are not recognized in one case, causing the use of the undisplaced mesh",
                          "url": "https://github.com/idaholab/moose/discussions/25778#discussioncomment-7340816",
                          "updatedAt": "2023-10-20T15:55:57Z",
                          "publishedAt": "2023-10-20T15:55:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "moose installation (linux-aarch64)",
          "author": {
            "login": "morteza374"
          },
          "bodyText": "Hi\ninstead of suggested instruction for installing moose, i had to use:\ncurl -L -O https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-aarch64.sh\nbash Mambaforge-Linux-aarch64.sh -b -p ~/mambaforge3\n\nafter executing ( mamba create -n moose moose-dev), i get this error:\n# >>>>>>>>>>>>>>>>>>>>>> ERROR REPORT <<<<<<<<<<<<<<<<<<<<<<\n\n    Traceback (most recent call last):\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/conda/exceptions.py\", line 1132, in __call__\n        return func(*args, **kwargs)\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 941, in exception_converter\n        raise e\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 934, in exception_converter\n        exit_code = _wrapped_main(*args, **kwargs)\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 892, in _wrapped_main\n        result = do_call(parsed_args, p)\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 758, in do_call\n        exit_code = create(args, parser)\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 632, in create\n        return install(args, parser, \"create\")\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/mamba/mamba.py\", line 499, in install\n        index = load_channels(pool, channels, repos)\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/mamba/utils.py\", line 129, in load_channels\n        index = get_index(\n      File \"/home/morteza/mambaforge3/lib/python3.10/site-packages/mamba/utils.py\", line 110, in get_index\n        is_downloaded = dlist.download(api.MAMBA_DOWNLOAD_FAILFAST)\n    RuntimeError: Download error (28) Timeout was reached [https://conda.software.inl.gov/public/noarch/repodata.json]\n    Connection time-out\n\n`$ /home/morteza/mambaforge3/bin/mamba create -n moose moose-dev`\n\n  environment variables:\n                 CIO_TEST=<not set>\n        CONDA_DEFAULT_ENV=base\n                CONDA_EXE=/home/morteza/mambaforge3/bin/conda\n             CONDA_PREFIX=/home/morteza/mambaforge3\n    CONDA_PROMPT_MODIFIER=(base)\n         CONDA_PYTHON_EXE=/home/morteza/mambaforge3/bin/python\n               CONDA_ROOT=/home/morteza/mambaforge3\n              CONDA_SHLVL=1\n           CURL_CA_BUNDLE=<not set>\n               LD_PRELOAD=<not set>\n                     PATH=/home/morteza/mambaforge3/bin:/home/morteza/mambaforge3/condabin:/usr/\n                          local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/us\n                          r/local/games:/mnt/c/Program Files/Parallels/Parallels Tools/Applicati\n                          ons:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbe\n                          m:/mnt/c/Windows/System32/WindowsPowerShell/v1.0:/mnt/c/Windows/System\n                          32/OpenSSH:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/Use\n                          rs/morteza/AppData/Local/Microsoft/WindowsApps:/snap/bin\n       REQUESTS_CA_BUNDLE=<not set>\n            SSL_CERT_FILE=<not set>\n\n     active environment : base\n    active env location : /home/morteza/mambaforge3\n            shell level : 1\n       user config file : /home/morteza/.condarc\n populated config files : /home/morteza/mambaforge3/.condarc\n                          /home/morteza/.condarc\n          conda version : 23.3.1\n    conda-build version : not installed\n         python version : 3.10.12.final.0\n       virtual packages : __archspec=1=aarch64\n                          __glibc=2.35=0\n                          __linux=4.4.0=0\n                          __unix=0=0\n       base environment : /home/morteza/mambaforge3  (writable)\n      conda av data dir : /home/morteza/mambaforge3/etc/conda\n  conda av metadata url : None\n           channel URLs : https://conda.software.inl.gov/public/linux-aarch64\n                          https://conda.software.inl.gov/public/noarch\n                          https://repo.anaconda.com/pkgs/main/linux-aarch64\n                          https://repo.anaconda.com/pkgs/main/noarch\n                          https://repo.anaconda.com/pkgs/r/linux-aarch64\n                          https://repo.anaconda.com/pkgs/r/noarch\n                          https://conda.anaconda.org/conda-forge/linux-aarch64\n                          https://conda.anaconda.org/conda-forge/noarch\n          package cache : /home/morteza/mambaforge3/pkgs\n                          /home/morteza/.conda/pkgs\n       envs directories : /home/morteza/mambaforge3/envs\n                          /home/morteza/.conda/envs\n               platform : linux-aarch64\n             user-agent : conda/23.3.1 requests/2.31.0 CPython/3.10.12 Linux/4.4.0-22621-Microsoft ubuntu/22.04.3 glibc/2.35\n                UID:GID : 1000:1000\n             netrc file : None\n           offline mode : False\n\n\nAn unexpected error has occurred. Conda has prepared the above report.\n\nHow can I resolve this issue?\nBest",
          "url": "https://github.com/idaholab/moose/discussions/25794",
          "updatedAt": "2023-10-23T12:49:31Z",
          "publishedAt": "2023-10-20T14:57:36Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you access https://conda.software.inl.gov/public/noarch/repodata.json from your browser?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7340313",
                  "updatedAt": "2023-10-20T15:09:51Z",
                  "publishedAt": "2023-10-20T15:09:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "morteza374"
                          },
                          "bodyText": "yes\n(base) morteza@MORTEZAESMA3445:~$ curl https://conda.software.inl.gov/public/noarch/repodata.json\n{\n  \"info\": {\n    \"subdir\": \"noarch\"\n  },\n  \"packages\": {\n    \"channel-helper-2020.10.08-0.tar.bz2\": {\n      \"build\": \"0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"requests\"\n      ],\n      \"license\": \"LGPL 2.1\",\n      \"md5\": \"a37201607e3d3e0636cbb16cd524245c\",\n      \"name\": \"channel-helper\",\n      \"noarch\": \"generic\",\n      \"sha256\": \"d57f09326eb20ff892829af1c0128e0840cc5fff7b629d16adf40e67949cf6f5\",\n      \"size\": 5572,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1602165659978,\n      \"version\": \"2020.10.08\"\n    },\n    \"legacy-ssl-1.0-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"openssl <3\",\n        \"python\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"a78e91afc86f47ec41f5ed4c0a414554\",\n      \"name\": \"legacy-ssl\",\n      \"noarch\": \"python\",\n      \"sha256\": \"007e8f38dc2b1ca16e06137c70f5e9d7884ded5b58a98030f9fa05c7b27d52e2\",\n      \"size\": 7013,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1667504219377,\n      \"version\": \"1.0\"\n    },\n    \"moose-autojump-22.5.3-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"python\"\n      ],\n      \"license\": \"GNU\",\n      \"md5\": \"b011c92057f24ff01c86600842d7cc34\",\n      \"name\": \"moose-autojump\",\n      \"noarch\": \"python\",\n      \"sha256\": \"1f47e16e8171d54004228404264002716cb59e34f1464d54f7dd7598aabe1a11\",\n      \"size\": 31120,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1654634599119,\n      \"version\": \"22.5.3\"\n    },\n    \"ncrc-1.10-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"f7c70b620c08b8553be560559e50df4a\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"fdab8ac4534605966a1d110c6cf12e8479cea6f3ae14e92637a3d4dff0bb0c10\",\n      \"size\": 16003,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1629397350454,\n      \"version\": \"1.10\"\n    },\n    \"ncrc-1.11-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"398bdae8eb346acb830a0872f6fd3701\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"9a6046da5e6a201fd2f7c45e9a891913415cf0d5ab2d92624682633d7132cef3\",\n      \"size\": 16034,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1629397829567,\n      \"version\": \"1.11\"\n    },\n    \"ncrc-1.12-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"e39fd6f7ec7b334f4f1ea176b2fa8be6\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"c6c4fd6c32ad55d4ce6e0e5c966244be2db482ca2631f388cc4f7dcd71f97a57\",\n      \"size\": 16053,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1629423314366,\n      \"version\": \"1.12\"\n    },\n    \"ncrc-1.13-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"9ec962ba9250de5229b2e16adcaf8b99\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"6c831731b2d70f682598c1dd1ee4aef02beb745f9588a11d2da5f35acdbdb650\",\n      \"size\": 16206,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1629496913836,\n      \"version\": \"1.13\"\n    },\n    \"ncrc-1.14-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"89fb8e36c4da33759e5a8fb72ce87a33\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"f58b9b1c663a4b0668646853d7cb75a53cf5509a40a331bdd053921640d5de5b\",\n      \"size\": 16315,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1629744282179,\n      \"version\": \"1.14\"\n    },\n    \"ncrc-1.15-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"bb96b716c96be752dddad65379be2f92\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"53c219727e19ac67a274c6f27fafebb4bcc919e499f2c33f9a112cfb2627f043\",\n      \"size\": 16356,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1629826983852,\n      \"version\": \"1.15\"\n    },\n    \"ncrc-1.16-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"f75103dc1e0bc06609dba122bd78cce2\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"919b28741a190d324b5904fb24ce429ce44646e21542a4c53c310a4586df24e4\",\n      \"size\": 16512,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1633646184333,\n      \"version\": \"1.16\"\n    },\n    \"ncrc-1.17-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"e2b6f99e693883dadb8cc3000573e797\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"566b0c990464b9c739e4c52a8bd4e41fc19b666a25aaa822a8e3c2861a167b92\",\n      \"size\": 16581,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1633961697016,\n      \"version\": \"1.17\"\n    },\n    \"ncrc-1.18-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"32640993b1485d6fa894c5c505c99bca\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"f4f3eeedbb4841ccf3e529d5ba58ac10625f8034bf007733ff5fa1184780afb3\",\n      \"size\": 13419,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1673545331295,\n      \"version\": \"1.18\"\n    },\n    \"ncrc-1.19-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"147e999fa5faefb3f17ec11b58758b2d\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"78f82ac83fb5e40366b69e30ba5568b9212350e8e2f4572891951d832a646f04\",\n      \"size\": 13471,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1680190563719,\n      \"version\": \"1.19\"\n    },\n    \"ncrc-1.4-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause OR MIT\",\n      \"md5\": \"caa3cd0bf255d60b138d62bf77e3692a\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"3553aae3684c124dd3959a9b086a110df4c8ea83349f99888f93e5cadf902a4d\",\n      \"size\": 11496,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1625593608280,\n      \"version\": \"1.4\"\n    },\n    \"ncrc-1.5-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"f2ee9b93e6022e737f63dde9dede90d7\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"4bdff32ca48a9893a0777fa90ced0b0905ec2a39285e6fccd15f5e2a2665d138\",\n      \"size\": 15435,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1626891519973,\n      \"version\": \"1.5\"\n    },\n    \"ncrc-1.6-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"5097b4849ec30b0f8736af8364e54d46\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"b78724c3e3f7e5ed904f789c90d42894f2fd54e5b5fc04f81d930c199bb32061\",\n      \"size\": 15636,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1627503667626,\n      \"version\": \"1.6\"\n    },\n    \"ncrc-1.7-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"6b924f45b2773a0eb6638cb50b778f40\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"83bb5b8368c2eeb18b10a5fd60a4bbeb473347543c7eaa297319c1fc30eac257\",\n      \"size\": 15852,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1627510983600,\n      \"version\": \"1.7\"\n    },\n    \"ncrc-1.8-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"7afc1fe330e8c790e43bf32a3f06076e\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"349263e91ea761c770b79578800aa72f2446eecbf2cbfe6fcf135bd42a433ea2\",\n      \"size\": 15842,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1627598442191,\n      \"version\": \"1.8\"\n    },\n    \"ncrc-1.9-build_0.tar.bz2\": {\n      \"build\": \"build_0\",\n      \"build_number\": 0,\n      \"depends\": [\n        \"conda\",\n        \"python >=3.6\",\n        \"requests\"\n      ],\n      \"license\": \"BSD-3-Clause\",\n      \"md5\": \"a263b42462ad5b79d4bb0758ae7f4532\",\n      \"name\": \"ncrc\",\n      \"noarch\": \"python\",\n      \"sha256\": \"d42171b361791b090b297d4a72c58eee2e3037d6769ad4425467af55399dfc0b\",\n      \"size\": 15978,\n      \"subdir\": \"noarch\",\n      \"timestamp\": 1629320588625,\n      \"version\": \"1.9\"\n    }\n  },\n  \"packages.conda\": {},\n  \"removed\": [],\n  \"repodata_version\": 1\n}\n\nbut\n(base) morteza@MORTEZAESMA3445:~$ conda search -c https://conda.software.inl.gov/public moose-dev\nLoading channels: done\nNo match found for: moose-dev. Search: *moose-dev*\n\nPackagesNotFoundError: The following packages are not available from current channels:\n\n  - moose-dev\n\nCurrent channels:\n\n  - https://conda.software.inl.gov/public/linux-aarch64\n  - https://conda.software.inl.gov/public/noarch\n  - https://repo.anaconda.com/pkgs/main/linux-aarch64\n  - https://repo.anaconda.com/pkgs/main/noarch\n  - https://repo.anaconda.com/pkgs/r/linux-aarch64\n  - https://repo.anaconda.com/pkgs/r/noarch\n  - https://conda.anaconda.org/conda-forge/linux-aarch64\n  - https://conda.anaconda.org/conda-forge/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\n\n    https://anaconda.org\n\nand use the search bar at the top of the page.",
                          "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7340492",
                          "updatedAt": "2023-10-20T15:27:29Z",
                          "publishedAt": "2023-10-20T15:27:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "do you get a hit on the other mamba packages?\nI have those for example\nmoose-libmesh             2023.09.06              build_3    https://conda.software.inl.gov/public\nmoose-libmesh-vtk         9.2.6                   build_4    https://conda.software.inl.gov/public\nmoose-mpich               4.0.2                  build_11    https://conda.software.inl.gov/public\nmoose-petsc               3.19.3.884.g08c1f94318e         build_1    https://conda.software.inl.gov/public\nmoose-test-tools          2023.08.31      py310h39238f2_0    https://conda.software.inl.gov/public\nmoose-tools               2023.08.31      py310hd8e275d_0    https://conda.software.inl.gov/public\nmoose-wasp                2023.10.06              build_0    https://conda.software.inl.gov/public",
                          "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7340612",
                          "updatedAt": "2023-10-20T15:37:51Z",
                          "publishedAt": "2023-10-20T15:37:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "morteza374"
                  },
                  "bodyText": "i didn't test all of them. but, only moose-tools is there i guess.\n(base) morteza@MORTEZAESMA3445:~$ conda search -c https://conda.software.inl.gov/public moose-tools\nLoading channels: done\n# Name                       Version           Build  Channel\nmoose-tools               2022.12.05 py310hf37e512_0  public\nmoose-tools               2022.12.05  py37h7046b13_0  public\nmoose-tools               2022.12.05  py38h7ef9e6c_0  public\nmoose-tools               2022.12.05  py39h2d98fe0_0  public\nmoose-tools               2023.08.31 py310hbadf9da_0  public\nmoose-tools               2023.08.31  py38hc2d122c_0  public\nmoose-tools               2023.08.31  py39h1a6adb7_0  public\n(base) morteza@MORTEZAESMA3445:~$ conda search -c https://conda.software.inl.gov/public moose-libmesh\nLoading channels: done\nNo match found for: moose-libmesh. Search: *moose-libmesh*\n\nPackagesNotFoundError: The following packages are not available from current channels:\n\n  - moose-libmesh\n\nCurrent channels:\n\n  - https://conda.software.inl.gov/public/linux-aarch64\n  - https://conda.software.inl.gov/public/noarch\n  - https://repo.anaconda.com/pkgs/main/linux-aarch64\n  - https://repo.anaconda.com/pkgs/main/noarch\n  - https://repo.anaconda.com/pkgs/r/linux-aarch64\n  - https://repo.anaconda.com/pkgs/r/noarch\n  - https://conda.anaconda.org/conda-forge/linux-aarch64\n  - https://conda.anaconda.org/conda-forge/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\n\n    https://anaconda.org\n\nand use the search bar at the top of the page.\n\n\n(base) morteza@MORTEZAESMA3445:~$ conda search -c https://conda.software.inl.gov/public moose-libmesh-vtk\nLoading channels: done\nNo match found for: moose-libmesh-vtk. Search: *moose-libmesh-vtk*\n\nPackagesNotFoundError: The following packages are not available from current channels:\n\n  - moose-libmesh-vtk\n\nCurrent channels:\n\n  - https://conda.software.inl.gov/public/linux-aarch64\n  - https://conda.software.inl.gov/public/noarch\n  - https://repo.anaconda.com/pkgs/main/linux-aarch64\n  - https://repo.anaconda.com/pkgs/main/noarch\n  - https://repo.anaconda.com/pkgs/r/linux-aarch64\n  - https://repo.anaconda.com/pkgs/r/noarch\n  - https://conda.anaconda.org/conda-forge/linux-aarch64\n  - https://conda.anaconda.org/conda-forge/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\n\n    https://anaconda.org\n\nand use the search bar at the top of the page.\n\n\n(base) morteza@MORTEZAESMA3445:~$ conda search -c https://conda.software.inl.gov/public moose-petsc\nLoading channels: done\nNo match found for: moose-petsc. Search: *moose-petsc*\n\nPackagesNotFoundError: The following packages are not available from current channels:\n\n  - moose-petsc\n\nCurrent channels:\n\n  - https://conda.software.inl.gov/public/linux-aarch64\n  - https://conda.software.inl.gov/public/noarch\n  - https://repo.anaconda.com/pkgs/main/linux-aarch64\n  - https://repo.anaconda.com/pkgs/main/noarch\n  - https://repo.anaconda.com/pkgs/r/linux-aarch64\n  - https://repo.anaconda.com/pkgs/r/noarch\n  - https://conda.anaconda.org/conda-forge/linux-aarch64\n  - https://conda.anaconda.org/conda-forge/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\n\n    https://anaconda.org\n\nand use the search bar at the top of the page.",
                  "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7340767",
                  "updatedAt": "2023-10-20T15:51:52Z",
                  "publishedAt": "2023-10-20T15:51:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "can you add the channel\nhttps://conda.software.inl.gov/public/linux-64\ninstead of\nhttps://conda.software.inl.gov/public/linux-aarch64\nI see all the packages we need on https://conda.software.inl.gov/public/ under linux-64",
                  "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7340850",
                  "updatedAt": "2023-10-20T15:59:27Z",
                  "publishedAt": "2023-10-20T15:59:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "morteza374"
                  },
                  "bodyText": "unfortunately, it didn't help;\n(base) morteza@MORTEZAESMA3445:~$ conda config --add channels https://conda.software.inl.gov/public\nWarning: 'https://conda.software.inl.gov/public' already in 'channels' list, moving to the top\n(base) morteza@MORTEZAESMA3445:~$\n(base) morteza@MORTEZAESMA3445:~$ conda config --add channels https://conda.software.inl.gov/public/linux-64\n(base) morteza@MORTEZAESMA3445:~$ mamba create -n moose moose-dev\n(base) morteza@MORTEZAESMA3445:~$ mamba create -n moose moose-dev\n                  __    __    __    __\n                 /  \\  /  \\  /  \\  /  \\\n                /    \\/    \\/    \\/    \\\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n              /  / \\   / \\   / \\   / \\  \\____\n             /  /   \\_/   \\_/   \\_/   \\    o \\__,\n            / _/                       \\_____/  `\n            |/\n        \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557\n        \u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n        \u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n        \u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n        \u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\n        \u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\n\n        mamba (1.4.2) supported by @QuantStack\n\n        GitHub:  https://github.com/mamba-org/mamba\n        Twitter: https://twitter.com/QuantStack\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\n\nLooking for: ['moose-dev']\n\npkgs/main/noarch                                    5.4s\npkgs/main/linux-aarch64                            @ 410.9kB/s  5.8s\npkgs/r/noarch                                      @ 221.6kB/s  0.4s\nhttps://conda.software.inl.gov/public/linux-aarc.. @   1.6kB/s  6.9s\nhttps://conda.software.inl.gov/public/noarch       @   1.4kB/s  6.9s\npkgs/r/linux-aarch64                               @  17.0 B/s  0.1s\nhttps://conda.software.inl.gov/public/linux-64     @ 103.7kB/s  7.8s\nconda-forge/linux-aarch64                           10.6MB @ 890.4kB/s  6.6s\nconda-forge/noarch                                  14.3MB @   1.1MB/s  6.4s\nCould not solve for environment specs\nThe following packages are incompatible\n\u2514\u2500 moose-dev   is uninstallable because there are no viable options\n   \u251c\u2500 moose-dev [2023.05.02|2023.06.07|2023.06.22|2023.06.23|2023.07.26] would require\n   \u2502  \u2514\u2500 moose-libmesh [2023.04.19 build_0|2023.04.19 build_1|2023.06.19 build_0|2023.06.23 build_0|2023.07.26 build_0], which requires\n   \u2502     \u2514\u2500 moose-mpich [4.0.2 build_7|4.0.2 build_8], which requires\n   \u2502        \u2514\u2500 _libgcc_mutex 0.1 conda_forge, which does not exist (perhaps a missing channel);\n   \u2514\u2500 moose-dev [2023.08.29|2023.09.06|...|2023.10.06] would require\n      \u2514\u2500 moose-peacock [2023.08.17.* |2023.08.31.* |2023.09.15.* ], which requires\n         \u2514\u2500 paraview  , which does not exist (perhaps a missing channel).\n(base) morteza@MORTEZAESMA3445:~$ conda config --show channels\nchannels:\n  - https://conda.software.inl.gov/public/linux-64\n  - https://conda.software.inl.gov/public\n  - defaults\n  - conda-forge\n(base) morteza@MORTEZAESMA3445:~$\n\nI'm not sure if this information is relevant, but I already have MOOSE on my Mac (M2). Due to specific requirements, I later set up a Windows virtual machine on my Mac using Parallels. I then used Windows Subsystem for Linux (WSL) to install Ubuntu within the Windows VM. The issue I'm encountering arose when I attempted to install MOOSE on this Ubuntu environment.",
                  "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7340968",
                  "updatedAt": "2023-10-20T16:13:33Z",
                  "publishedAt": "2023-10-20T16:13:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so you're running WSL inside a VM?\nhow about you just use moose on the macos, it will work much faster\nYou are not getting errors from the dependency resolution.\nYou ll have to figure out what can provide _libgcc_mutex in mamba to resolve the first one",
                          "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7341383",
                          "updatedAt": "2023-10-20T16:47:21Z",
                          "publishedAt": "2023-10-20T16:47:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "morteza374"
                  },
                  "bodyText": "I understand, but I have to switch to Windows for various reasons. Have you encountered a similar situation where MOOSE is used within the (WSL) on a virtual Windows machine?\ni think this problem arose because i used Linux-aarch64 architecture not [Linux-x86_64 or MacOSX-x86_64 orMacOSX-arm64]. (https://mooseframework.inl.gov/getting_started/installation/conda.html)",
                  "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7341615",
                  "updatedAt": "2023-10-20T17:08:15Z",
                  "publishedAt": "2023-10-20T17:08:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you think we dont support what you are using with conda, then use this alternative install method:\nif you dont have compilers that can install moose yet (Our minimum requirements are: GCC 7.5.0, Clang 10.0.1 today):\nhttps://mooseframework.inl.gov/getting_started/installation/manual_installation_gcc.html\nif you do:\nhttps://mooseframework.inl.gov/getting_started/installation/gcc_install_moose.html",
                          "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7341705",
                          "updatedAt": "2023-10-20T19:39:30Z",
                          "publishedAt": "2023-10-20T17:17:08Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "morteza374"
                          },
                          "bodyText": "Thank you for you time and prompt answers",
                          "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7342573",
                          "updatedAt": "2023-10-20T19:09:14Z",
                          "publishedAt": "2023-10-20T19:09:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Unfortunately we do not have an ARM Linux architecture build farm, to build the necessary packages.\nEdit: It reads as if Windows (but perhaps not WSL?) supplies a virtual way to run x86_64 binaries on ARM: https://learn.microsoft.com/en-us/windows/arm/overview",
                          "url": "https://github.com/idaholab/moose/discussions/25794#discussioncomment-7358554",
                          "updatedAt": "2023-10-23T12:51:54Z",
                          "publishedAt": "2023-10-23T12:49:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Segmentation fault(core dumped)",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I am trying to run step1.i input file. Below is the output I get. Is there a way to solve this?\n[emmanuel324@tinkercliffs1 problems]$ ../darcy_thermo_mech-opt -i step1.i \nSegmentation fault (core dumped)",
          "url": "https://github.com/idaholab/moose/discussions/25797",
          "updatedAt": "2023-10-22T18:10:51Z",
          "publishedAt": "2023-10-20T19:01:19Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDid you create your own object for that input file?\nIf you want to debug it you can follow the instructions:\nhttps://mooseframework.inl.gov/application_development/debugging.html\nIf you built your own objects please paste the source and header here\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7342759",
                  "updatedAt": "2023-10-20T19:41:20Z",
                  "publishedAt": "2023-10-20T19:41:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "No I was just trying to run the step1.i input file from the moose website in my directory.",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7348732",
                          "updatedAt": "2023-10-21T23:44:47Z",
                          "publishedAt": "2023-10-21T23:44:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok then clean the repo with git clean -xfd in the root (moose/), recompile the executable and try again.",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7348890",
                          "updatedAt": "2023-10-22T01:18:02Z",
                          "publishedAt": "2023-10-22T01:18:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Do you mean I should run it in the moose directory?",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7348897",
                          "updatedAt": "2023-10-22T01:22:21Z",
                          "publishedAt": "2023-10-22T01:22:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "yes the clean command only cleans folder below it so it needs to be run in moose/",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7348935",
                          "updatedAt": "2023-10-22T01:47:56Z",
                          "publishedAt": "2023-10-22T01:47:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I did run it in my moose directory. And when you said I should compile an executable do you mean this line:\ncd ~/projects/belson\nmake -j 6\n./run_tests -j 6\nor this\n.../darcy_thermo_mech-opt -i step.i",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7349015",
                          "updatedAt": "2023-10-22T02:29:43Z",
                          "publishedAt": "2023-10-22T02:29:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the first one compiles then runs tests",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7349025",
                          "updatedAt": "2023-10-22T02:33:54Z",
                          "publishedAt": "2023-10-22T02:33:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Is it this\ncd ~emmanuel324/projects/moose/tutorials/darcy_thermo_mech\nmake make -j4",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7349088",
                          "updatedAt": "2023-10-22T03:06:41Z",
                          "publishedAt": "2023-10-22T03:06:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "make -j4\nbut yes",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7350743",
                          "updatedAt": "2023-10-22T12:04:37Z",
                          "publishedAt": "2023-10-22T12:04:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "When I try make an executable in the directory that has the makefile this is the feedback I get.\n[emmanuel324@tinkercliffs1 step01_diffusion]$ make -j4\nmake: mpicxx: Command not found\nmake: mpif90: Command not found\n/bin/sh: mpif90: command not found\nRebuilding symlinks in /home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/step01_diffusion/build/header_symlinks\nLinking Library /home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/step01_diffusion/test/lib/libdarcy_thermo_mech_test-opt.la...\nTraceback (most recent call last):\nFile \"/home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/../..//framework/scripts/write_appresource_file.py\", line 6, in \nimport yaml\nModuleNotFoundError: No module named 'yaml'\nCreating Resource file /home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/step01_diffusion/darcy_thermo_mech.yaml\nCompiling C++ (in opt mode) /home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/step01_diffusion/src/base/DarcyThermoMechApp.C...\nCompiling C++ (in opt mode) /home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/step01_diffusion/src/main.C...\n/home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/../..//libmesh/installed/contrib/bin/libtool: line 1763: mpicxx: command not found\nmake: *** [/home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/step01_diffusion/src/main.x86_64-pc-linux-gnu.opt.lo] Error 1\nmake: *** Waiting for unfinished jobs....\n/home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/../..//libmesh/installed/contrib/bin/libtool: line 1763: mpicxx: command not found\nmake: *** [/home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/step01_diffusion/src/base/DarcyThermoMechApp.x86_64-pc-linux-gnu.opt.lo] Error 1\n/home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/../..//libmesh/installed/contrib/bin/libtool: line 10545: mpicxx: command not found\nmake: *** [/home/emmanuel324/projects/moose/tutorials/darcy_thermo_mech/step01_diffusion/test/lib/libdarcy_thermo_mech_test-opt.la] Error 127",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7352055",
                          "updatedAt": "2023-10-22T16:49:03Z",
                          "publishedAt": "2023-10-22T16:49:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You forgot to activate the moose conda environment",
                          "url": "https://github.com/idaholab/moose/discussions/25797#discussioncomment-7352149",
                          "updatedAt": "2023-10-22T17:08:25Z",
                          "publishedAt": "2023-10-22T17:08:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Reading a Yaml file as a part of a MOOSE input",
          "author": {
            "login": "gsgall"
          },
          "bodyText": "I am interested in using a Yaml file to hold some information about a chemical reaction network. I would like to parse this file and then create kernels and material properties based on the results of this parsing. Is there already a standard or recommended method for reading Yaml files as a part of input files?",
          "url": "https://github.com/idaholab/moose/discussions/25809",
          "updatedAt": "2023-10-22T14:20:03Z",
          "publishedAt": "2023-10-22T03:29:30Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nUnfortunately we do not have a YAML reader user object. We only have CSV and JSON right now.\nThis would have been the best way to do this, with the user object reading the file and any other object being able to query it for information.\nWe have a YAML formatter for output that's it.\nYou ll have to start by writing (or finding an external package) code to read the YAML file. Then you should make a YAMLReader user object that reads and has routines for other objects to query infomration from. Then you can simply retrieve the user object from any object using its name. There is a UserObjectInterface that most objects inherit and that defines:\nconst T & getUserObject(const std::string & param_name, bool is_dependency = true) const;\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25809#discussioncomment-7350839",
                  "updatedAt": "2023-10-22T12:28:53Z",
                  "publishedAt": "2023-10-22T12:28:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "gsgall"
                          },
                          "bodyText": "Thank you so much!",
                          "url": "https://github.com/idaholab/moose/discussions/25809#discussioncomment-7351378",
                          "updatedAt": "2023-10-22T14:20:02Z",
                          "publishedAt": "2023-10-22T14:20:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adding offset vector to mortar secondary/primary",
          "author": {
            "login": "ttruster"
          },
          "bodyText": "Is there an interest to include the provision for an offset vector to translate the primary and secondary sides of a mortar surface?\nCurrently, the search direction is only along the unit normal. For most applications that is fine; but in some cases the two blocks might be translated from each other.\nOne potential use is for tensor mechanics periodic boundary value problems in which the RVE shape is not a rectangle. Then the paired surfaces still match up but are offset by some vector. For a rectangular RVE, the pairs are opposite along the normal direction.\nI already implemented and verified it in 2d and 3d in the lower level functions such that boundary_offset is the only additional user parameter on the MortarConstraint objects, and its default value is a zero vector.",
          "url": "https://github.com/idaholab/moose/discussions/25802",
          "updatedAt": "2023-10-21T17:59:36Z",
          "publishedAt": "2023-10-21T03:33:57Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "There's interest from at least one person ... you! Haha. IMO that's reason enough to consider putting it in the repo. I suppose the only issue would be if it really slowed mortar down ... but I suspect this is relatively inexpensive compared to a lot of the things we do with mortar. I don't personally have a use for this. I don't know if @recuero would. But anyway as I said if you would use it, then that's reason enough to consider it",
                  "url": "https://github.com/idaholab/moose/discussions/25802#discussioncomment-7344793",
                  "updatedAt": "2023-10-21T04:46:27Z",
                  "publishedAt": "2023-10-21T04:45:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "I think that's a good feature to have in the code. I suspect it'd only add some logic if the offset option is selected?",
                          "url": "https://github.com/idaholab/moose/discussions/25802#discussioncomment-7347048",
                          "updatedAt": "2023-10-21T15:18:16Z",
                          "publishedAt": "2023-10-21T15:18:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ttruster"
                          },
                          "bodyText": "Right now I coded it as a RealVectorValue parameter that defaults to (0,0,0) if no value is provided. And that vector is then added to the nodal coordinates of the primary side in about 2 dozen places within about a dozen source files.\nThe changes are shown in the last 3 commits of this branch, https://github.com/Truster-Research-Group/moose/tree/element-neighbor-pairing, which is obviously hugely behind 'next' right now.",
                          "url": "https://github.com/idaholab/moose/discussions/25802#discussioncomment-7347079",
                          "updatedAt": "2023-10-21T15:23:55Z",
                          "publishedAt": "2023-10-21T15:23:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "I think this is a great feature to have! @ttruster have you profiled it? I doubt this will cause noticeable slowdown. But even if it does, we can always add a configure option because:\n\nThe user base for this feature is currently small.\nDevelopers will know whether this feature is needed at the application level.",
                          "url": "https://github.com/idaholab/moose/discussions/25802#discussioncomment-7347415",
                          "updatedAt": "2023-10-21T16:36:56Z",
                          "publishedAt": "2023-10-21T16:36:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ttruster"
                          },
                          "bodyText": "Based on interest, I'll go ahead and open a pull request in the next couple days and continue discussion over there.",
                          "url": "https://github.com/idaholab/moose/discussions/25802#discussioncomment-7347712",
                          "updatedAt": "2023-10-21T17:58:49Z",
                          "publishedAt": "2023-10-21T17:58:49Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Questions Regarding the Development of an Explicit Dynamics Kernel",
          "author": {
            "login": "Yasunaoka"
          },
          "bodyText": "Dear Community\nI am currently utilizing the DynamicMaster, and particularly interested in explicit dynamics which is suitable for the high strain rate problem(about 1e4~1e6 s^-1). However, I have checked the source code of DynamicMaster, and found that this kernel only supports a handcoded implicit hht format.\nI have two questions, and I would greatly appreciate your assistance and guidance:\n\n\nFirstly, I would like to inquire if there are any plans by the official team to introduce an explicit dynamics module to the Tensor Mechanical? If such plans exist, could you provide insights into the expected timeline or milestones for this development?\n\n\nIf I intend to code an explicit dynamics kernel myself, could you offer any advice or guidance on where to begin? Such guidance would be invaluable for my project within Moose.In addition, the explicit dynamics solution format itself isn't complicated. However, I observed that the Jacobi matrix is always computed in the MOOSE solution procedure, but the Jacobi matrix is not required in explicit dynamics and there is no convergence problem. Does this feature conflict with and MOOSE's solution framework?\n\n\nThank you very much for your time and assistance, and I look forward to your response.\nSen",
          "url": "https://github.com/idaholab/moose/discussions/25792",
          "updatedAt": "2023-10-21T14:57:06Z",
          "publishedAt": "2023-10-20T08:41:29Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "maxnezdyur"
                  },
                  "bodyText": "@recuero @dschwen IIRC, there is work that will be starting soon about explicit dynamics, but I can't comment on the timeline.",
                  "url": "https://github.com/idaholab/moose/discussions/25792#discussioncomment-7337880",
                  "updatedAt": "2023-10-20T11:13:21Z",
                  "publishedAt": "2023-10-20T11:13:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "It's not clear to me that an explicit dynamics module will be added. That work can be done within Tensor Mechanics. You can already perform solid mechanics simulations with a central difference scheme (look at MOOSE and MASTODON input files).\nWe plan on doing development in that area within the next couple of years. But I don't know exactly where your interests are, so I can't provide more specifics.\nRegarding your last question. The fact that MOOSE typically builds a Jacobian matrix isn't a big hurdle to do explicit. As I mentioned above, that's already possible with the code in the repository.",
                          "url": "https://github.com/idaholab/moose/discussions/25792#discussioncomment-7339246",
                          "updatedAt": "2023-10-20T13:35:25Z",
                          "publishedAt": "2023-10-20T13:35:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi recuero, firstly thank you for your kind help. The problem I am interested in is the fragmentation of a metallic cylindrical shell under explosive loading, where the material will be subjected to tens of Gpa of loading in a few microseconds - an extreme nonlinear problem involving fracture. If computed using implicit integration, the extreme nonlinearity will lead to difficulties in convergence ( which I have already encountered) as the stiffness matrix needs to be computed and Jacobi matrices introduced at each step. In contrast, in the explicit dynamics computational format, the information on the current time can be obtained directly from the information on the previous step, without the need to introduce Jacobi matrices and iterations, which is very favourable for solving impact fracture problems. This is why I wanted to compute this problem via explicit dynamics.\nHowever, in the MOOSE code, the solution format in DynamicStressDivergenceTensors is a hard-coded form of Hilber-Hughes-Taylor time integration - which is an implicit format. Therefore, I don't think that the central difference scheme in executioner overrides this solution format, and I think it may only be in effect when calculating the displacement variable, refer to this discussion: #24896.\nTherefore, I would still like to ask this question: does this feature of showing that no Jacobi matrix is needed in the dynamics computation conflict with moose's solution framework? Many thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/25792#discussioncomment-7339994",
                          "updatedAt": "2023-10-20T14:43:39Z",
                          "publishedAt": "2023-10-20T14:43:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "does this feature of showing that no Jacobi matrix is needed in the dynamics computation conflict with moose's solution framework?\n\nThere is no conflict with the solution framework. You should be getting an explicit solution scheme when you set up the problem as explicit.\n\nwhich is an implicit format\n\nThere exists the opportunity to mix HHT and central difference given the input parameters of the dynamic tensor mechanics action, but that's not a good idea.",
                          "url": "https://github.com/idaholab/moose/discussions/25792#discussioncomment-7340291",
                          "updatedAt": "2023-10-20T15:31:05Z",
                          "publishedAt": "2023-10-20T15:07:31Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Yasunaoka"
                          },
                          "bodyText": "Hi recuero, thanks for your patience, the explicit solver is now running successfully.",
                          "url": "https://github.com/idaholab/moose/discussions/25792#discussioncomment-7345453",
                          "updatedAt": "2023-10-21T08:49:42Z",
                          "publishedAt": "2023-10-21T08:49:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "Great!",
                          "url": "https://github.com/idaholab/moose/discussions/25792#discussioncomment-7346937",
                          "updatedAt": "2023-10-21T14:57:06Z",
                          "publishedAt": "2023-10-21T14:57:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "operator error",
          "author": {
            "login": "LifengGan"
          },
          "bodyText": "Dear moose developers,\nI just wonder how to fix the message below on operator error\nThanks a lot\n(operand types are 'RankTwoTensor' {aka 'RankTwoTensorTempl<double>'} and 'MooseADWrapper<RankFourTensorTempl<double>, false>' {aka 'const RankFourTensorTempl<double>'})",
          "url": "https://github.com/idaholab/moose/discussions/25795",
          "updatedAt": "2023-10-21T14:30:14Z",
          "publishedAt": "2023-10-20T16:51:14Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou are trying to perform an operation (+, -, /, something like this) between two tensors. One is rank 2, the other one is rank 4.\nIs it a product?\nThat operation is not defined, or not defined with this particular symbol (but there's likely a different routine you could call).\nCan you paste the whole error message?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25795#discussioncomment-7342865",
                  "updatedAt": "2023-10-20T20:01:42Z",
                  "publishedAt": "2023-10-20T20:01:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Yes, I am trying the multiply three tensors, it is rank2 * rank4 * rank2\nelastic_energy  =  elastic_lagrangian_strain * _elasticity_tensor[_qp] * elastic_lagrangian_strain;\nhere is the full error message\nerror: no match for 'operator*' (operand types are 'RankTwoTensor' {aka 'RankTwoTensorTempl<double>'} and 'MooseADWrapper<RankFourTensorTempl<double>, false>' {aka 'const RankFourTensorTempl<double>'})\n  121 |   elastic_energy  =  elastic_lagrangian_strain *\nIn file included from /home/xxxx/projects/moose/framework/build/header_symlinks/DataIO.h:17,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialProperty.h:19,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialData.h:12,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/BlockRestrictable.h:15,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialBase.h:14,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/Material.h:13,\n                 from /home/xxxx/projects/phase_field_fracture/build/header_symlinks/ComputeCrackedStressFiniteStrain.h:12,\n                 from /home/xxxx/projects/phase_field_fracture/src/materials/ComputeCrackedStressFiniteStrain.C:10,\n                 from /home/xxxx/projects/phase_field_fracture/build/unity_src/materials_Unity.C:2:\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankTwoTensor.h:999:63: note: candidate: 'template<class T2, typename std::enable_if<libMesh::ScalarTraits<T>::value, int>::type <anonymous> > RankTwoTensorTempl<typename libMesh::CompareTypes<T, T2>::supertype> RankTwoTensorTempl< <template-parameter-1-1> >::operator*(const T2&) const [with T2 = T2; typename std::enable_if<libMesh::ScalarTraits<T2>::value, int>::type <anonymous> = <anonymous>; T = double]'\n  999 |   RankTwoTensorTempl<typename CompareTypes<T, T2>::supertype> operator*(const T2 & a) const;\n      |                                                               ^~~~~~~~\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankTwoTensor.h:999:63: note:   template argument deduction/substitution failed:\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankTwoTensor.h:998:88: error: no type named 'type' in 'struct std::enable_if<false, int>'\n  998 |   template <typename T2, typename std::enable_if<ScalarTraits<T2>::value, int>::type = 0>\n      |                                                                                        ^\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankTwoTensor.h:1038:3: note: candidate: 'template<class T2> libMesh::TypeVector<typename libMesh::CompareTypes<T, T2>::supertype> RankTwoTensorTempl< <template-parameter-1-1> >::operator*(const libMesh::TypeVector<T2>&) const [with T2 = T2; T = double]'\n 1038 |   operator*(const libMesh::TypeVector<T2> & a) const;\n      |   ^~~~~~~~\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankTwoTensor.h:1038:3: note:   template argument deduction/substitution failed:\nIn file included from /home/xxxx/projects/phase_field_fracture/build/unity_src/materials_Unity.C:2:\n/home/xxxx/projects/phase_field_fracture/src/materials/ComputeCrackedStressFiniteStrain.C:122:54: note:   'MooseADWrapper<RankFourTensorTempl<double>, false>' {aka 'const RankFourTensorTempl<double>'} is not derived from 'const libMesh::TypeVector<T>'\n  122 |                      _uncracked_elasticity_tensor[_qp] * elastic_lagrangian_strain;\n      |                                                      ^\nIn file included from /home/xxxx/projects/moose/framework/build/header_symlinks/DataIO.h:17,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialProperty.h:19,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialData.h:12,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/BlockRestrictable.h:15,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialBase.h:14,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/Material.h:13,\n                 from /home/xxxx/projects/phase_field_fracture/build/header_symlinks/ComputeCrackedStressFiniteStrain.h:12,\n                 from /home/xxxx/projects/phase_field_fracture/src/materials/ComputeCrackedStressFiniteStrain.C:10,\n                 from /home/xxxx/projects/phase_field_fracture/build/unity_src/materials_Unity.C:2:\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankTwoTensor.h:1060:3: note: candidate: 'template<class T2> RankTwoTensorTempl<typename libMesh::CompareTypes<T, T2>::supertype> RankTwoTensorTempl< <template-parameter-1-1> >::operator*(const libMesh::TypeTensor<T2>&) const [with T2 = T2; T = double]'\n 1060 |   operator*(const libMesh::TypeTensor<T2> & a) const;\n      |   ^~~~~~~~\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankTwoTensor.h:1060:3: note:   template argument deduction/substitution failed:\nIn file included from /home/xxxx/projects/phase_field_fracture/build/unity_src/materials_Unity.C:2:\n/home/xxxx/projects/phase_field_fracture/src/materials/ComputeCrackedStressFiniteStrain.C:122:54: note:   'MooseADWrapper<RankFourTensorTempl<double>, false>' {aka 'const RankFourTensorTempl<double>'} is not derived from 'const libMesh::TypeTensor<T>'\n  122 |                      _uncracked_elasticity_tensor[_qp] * elastic_lagrangian_strain;\n      |                                                      ^\nIn file included from /home/xxxx/mambaforge3/envs/moose/include/petscsystypes.h:550,\n                 from /home/xxxx/mambaforge3/envs/moose/include/petscsys.h:44,\n                 from /home/xxxx/mambaforge3/envs/moose/include/petscbag.h:5,\n                 from /home/xxxx/mambaforge3/envs/moose/include/petsc.h:5,\n                 from /home/xxxx/mambaforge3/envs/moose/libmesh/include/libmesh/petsc_macro.h:56,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MooseTypes.h:25,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MooseADWrapper.h:12,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MooseUtils.h:17,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/InputParameters.h:13,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MooseObject.h:13,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialBase.h:13,\n                 from /home/xxxxprojects/moose/framework/build/header_symlinks/Material.h:13,\n                 from /home/xxxx/projects/phase_field_fracture/build/header_symlinks/ComputeCrackedStressFiniteStrain.h:12,\n                 from /home/xxxx/projects/phase_field_fracture/src/materials/ComputeCrackedStressFiniteStrain.C:10,\n                 from /home/xxxx/projects/phase_field_fracture/build/unity_src/materials_Unity.C:2:\n/home/xxxx/mambaforge3/envs/moose/include/petsccxxcomplexfix.h:101:1: note: candidate: 'PetscComplex operator*(const PetscComplex&, const PetscInt&)'\n  101 | PETSC_CXX_COMPLEX_FIX(PetscInt)\n      | ^~~~~~~~~~~~~~~~~~~~~\n/home/xxxx/mambaforge3/envs/moose/include/petsccxxcomplexfix.h:101:1: note:   no known conversion for argument 1 from 'RankTwoTensor' {aka 'RankTwoTensorTempl<double>'} to 'const PetscComplex&' {aka 'const std::complex<double>&'}\n  101 | PETSC_CXX_COMPLEX_FIX(PetscInt)\n      | ^~~~~~~~~~~~~~~~~~~~~\n/home/xxxx/mambaforge3/envs/moose/include/petsccxxcomplexfix.h:101:1: note: candidate: 'PetscComplex operator*(const PetscInt&, const PetscComplex&)'\n  101 | PETSC_CXX_COMPLEX_FIX(PetscInt)\n      | ^~~~~~~~~~~~~~~~~~~~~\n/home/xxxx/mambaforge3/envs/moose/include/petsccxxcomplexfix.h:101:1: note:   no known conversion for argument 1 from 'RankTwoTensor' {aka 'RankTwoTensorTempl<double>'} to 'const PetscInt&' {aka 'const long int&'}\n  101 | PETSC_CXX_COMPLEX_FIX(PetscInt)\n      | ^~~~~~~~~~~~~~~~~~~~~\nIn file included from /home/xxxx/projects/moose/framework/build/header_symlinks/DataIO.h:18,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialProperty.h:19,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialData.h:12,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/BlockRestrictable.h:15,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/MaterialBase.h:14,\n                 from /home/xxxx/projects/moose/framework/build/header_symlinks/Material.h:13,\n                 from /home/xxxx/projects/phase_field_fracture/build/header_symlinks/ComputeCrackedStressFiniteStrain.h:12,\n                 from /home/xxxx/projects/phase_field_fracture/src/materials/ComputeCrackedStressFiniteStrain.C:10,\n                 from /home/xxxx/projects/phase_field_fracture/build/unity_src/materials_Unity.C:2:\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankThreeTensor.h:285:1: note: candidate: 'template<class T> RankThreeTensorTempl<T> operator*(T, const RankThreeTensorTempl<T>&)'\n  285 | operator*(T a, const RankThreeTensorTempl<T> & b)\n      | ^~~~~~~~\n/home/xxxx/projects/moose/framework/build/header_symlinks/RankThreeTensor.h:285:1: note:   template argument deduction/substitution failed:\nIn file included from /home/xxxx/projects/phase_field_fracture/build/unity_src/materials_Unity.C:2:\n/home/xxxx/projects/phase_field_fracture/src/materials/ComputeCrackedStressFiniteStrain.C:122:54: note:   'MooseADWrapper<RankFourTensorTempl<double>, false>' {aka 'const RankFourTensorTempl<double>'} is not derived from 'const RankThreeTensorTempl<T>'\n  122 |                      _uncracked_elasticity_tensor[_qp] * elastic_lagrangian_strain;",
                          "url": "https://github.com/idaholab/moose/discussions/25795#discussioncomment-7345098",
                          "updatedAt": "2023-10-21T06:43:01Z",
                          "publishedAt": "2023-10-21T06:42:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the right multiply is done with *\nthe left multiply is not. Is this innnerProductTranspose ? That s a routine defined on rank4tensors",
                          "url": "https://github.com/idaholab/moose/discussions/25795#discussioncomment-7346319",
                          "updatedAt": "2023-10-21T12:52:48Z",
                          "publishedAt": "2023-10-21T12:52:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "It is doubleContraction()\nI have fixed it.\nThank you very much",
                          "url": "https://github.com/idaholab/moose/discussions/25795#discussioncomment-7346783",
                          "updatedAt": "2023-10-21T14:30:13Z",
                          "publishedAt": "2023-10-21T14:30:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to calculate the material parameter average inside grain i based on GrainTracker?",
          "author": {
            "login": "PengWei97"
          },
          "bodyText": "Dear MOOSE experts,\nBackground:\nI am currently working on developing a coupling model that combines crystal plasticity (CP) and phase field (PF) approaches. In my pursuit, I have encountered a challenge for which I seek your guidance. Unfortunately, the issue raised in request #25687 remains unresolved, and I have not received a response from the author of the respective email. To address this situation, I am considering implementing the code myself, drawing inspiration from two key research papers:\nRef. 1. On the plastic driving force of grain boundary migration: A fully coupled phase field and crystal plasticity model\nRef. 2. An integrated fast Fourier transform-based phase-field and crystal plasticity approach to model recrystallization of three-dimensional polycrystals\nThese papers describe a crucial data transformation process, transitioning from the shape interface (crystal plasticity) to the diffuse interface (phase field). Specifically, at each integration point [_qp]  of each element, there is now a unique material parameter derived from the crystal plasticity FEM, such as the second Piola-Kirchhoff tensor S. Ref. 2 suggests that we should compute the averages S_i = <S>_i of the second Piola-Kirchhoff tensor over all elements belonging to each grain i within the entire CP-FEM computational domain.\nQuestion:\nMy specific inquiry pertains to how to calculate these averages S_i = <S>_i for each grain i from the S tensor data obtained through crystal plasticity calculations. Essentially, I seek guidance on how to extract all S[_qp] values of all elements within the region of grain i and subsequently compute their average.\nSpecifically, I think two std::maps need to be created based on GrainTracker, one is used to store the map from grain id to the vector of element id, and the other is used to store the map of grain id to the average value of the material property.\nI would greatly appreciate any suggestions, recommendations, or insights to address this challenge and successfully develop the coupling model.\nThank you for your time and assistance.\nWarm regards,\nWei Peng",
          "url": "https://github.com/idaholab/moose/discussions/25790",
          "updatedAt": "2023-10-21T09:55:56Z",
          "publishedAt": "2023-10-20T08:08:27Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Confusing about the momentum residual in ADJunctionParallelChannels1PhaseUserObject",
          "author": {
            "login": "SomnusYu"
          },
          "bodyText": "Hi @joshuahansel and @licharlot,\nI noticed that the computeFluxesAndResiduals() function in ADJunctionParallelChannels1PhaseUserObject calculates momentum residual again, which has been already calculated in ADVolumeJunction1PhaseUserObject. Why do we need to calculate this term twice?\nIn ADVolumeJunction1PhaseUserObject:\n\nIn ADJunctionParallelChannels1PhaseUserObject:\n\nThank you very much!",
          "url": "https://github.com/idaholab/moose/discussions/25791",
          "updatedAt": "2023-10-20T15:41:46Z",
          "publishedAt": "2023-10-20T08:38:11Z",
          "category": {
            "name": "Q&A Modules: Thermal Hydraulics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe parallel junction overrides that definition for the first one. So the first one (the base class one) is not called.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25791#discussioncomment-7338864",
                  "updatedAt": "2023-10-20T12:57:30Z",
                  "publishedAt": "2023-10-20T12:57:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Hi,\nThanks for your reply. I think the parallel junction did indeed call the base class one.\n\nI think I understand this problem. The symbol of this term in these two classes is contrary. The parallel junction firstly offsets this term in the base class and then recalculates this term as the wall formulation, which is implemented in ADJunctionParallelChannels1PhaseUserObject::finalize() function.",
                          "url": "https://github.com/idaholab/moose/discussions/25791#discussioncomment-7339017",
                          "updatedAt": "2023-10-20T13:10:35Z",
                          "publishedAt": "2023-10-20T13:10:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ah good eye.\nIt doesn't seem very efficient if it's that but it probably does not matter.",
                          "url": "https://github.com/idaholab/moose/discussions/25791#discussioncomment-7339681",
                          "updatedAt": "2023-10-20T14:14:22Z",
                          "publishedAt": "2023-10-20T14:14:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "licharlot"
                          },
                          "bodyText": "Yes, that's it. It was done to avoid duplicating the other terms. I agree it is probably not the best design, but it works.",
                          "url": "https://github.com/idaholab/moose/discussions/25791#discussioncomment-7340659",
                          "updatedAt": "2023-10-20T15:41:46Z",
                          "publishedAt": "2023-10-20T15:41:46Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}