{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wMy0wOFQwOToyMDoyMi0wNjowMM4AYMCZ"
    },
    "edges": [
      {
        "node": {
          "title": "Moose Update and Test Error",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I performed an update of moose using \"mamba update --all\"\nI the performed the following:\ncd ~/projects/moose/test\nmake -j 6\nI received the following error:\nCompiling C++ (in opt mode) /home/twise/projects/moose/framework/build/unity_src/meshdivisions_Unity.C...\nIn file included from /home/twise/projects/moose/framework/build/unity_src/base_Unity.C:19:\n/home/twise/projects/moose/framework/src/base/MooseServer.C: In member function 'bool MooseServer::addParametersToList(wasp::DataArray&, const InputParameters&, const std::set<std::__cxx11::basic_string<char> >&, int, int, int, int, const string&)':\n/home/twise/projects/moose/framework/src/base/MooseServer.C:529:9: error: 'client_snippet_support' was not declared in this scope\n  529 |     if (client_snippet_support && !default_value.empty())\n      |         ^~~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:531:32: error: 'm_text_format_snippet' is not a member of 'wasp::lsp'\n  531 |       text_format = wasp::lsp::m_text_format_snippet;\n      |                                ^~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:536:32: error: 'm_text_format_plaintext' is not a member of 'wasp::lsp'\n  536 |       text_format = wasp::lsp::m_text_format_plaintext;\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:557:57: error: too many arguments to function 'bool wasp::lsp::buildCompletionObject(wasp::DataObject&, std::ostream&, const string&, int, int, int, int, const string&, int, const string&, const string&, bool, bool)'\n  557 |                                              text_format);\n      |                                                         ^\nIn file included from /home/twise/projects/moose/framework/build/header_symlinks/MooseServer.h:13,\n                 from /home/twise/projects/moose/framework/src/base/MooseApp.C:53,\n                 from /home/twise/projects/moose/framework/build/unity_src/base_Unity.C:12:\n/home/twise/mambaforge3/envs/moose/wasp/include/wasplsp/LSP.h:604:6: note: declared here\n  604 | bool buildCompletionObject( DataObject        & object          ,\n      |      ^~~~~~~~~~~~~~~~~~~~~\nIn file included from /home/twise/projects/moose/framework/build/unity_src/base_Unity.C:19:\n/home/twise/projects/moose/framework/src/base/MooseServer.C: In member function 'bool MooseServer::addSubblocksToList(wasp::DataArray&, const string&, int, int, int, int, const string&, bool)':\n/home/twise/projects/moose/framework/src/base/MooseServer.C:618:25: error: 'client_snippet_support' was not declared in this scope\n  618 |       int text_format = client_snippet_support ? wasp::lsp::m_text_format_snippet\n      |                         ^~~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:618:61: error: 'm_text_format_snippet' is not a member of 'wasp::lsp'\n  618 |       int text_format = client_snippet_support ? wasp::lsp::m_text_format_snippet\n      |                                                             ^~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:619:61: error: 'm_text_format_plaintext' is not a member of 'wasp::lsp'\n  619 |                                                : wasp::lsp::m_text_format_plaintext;\n      |                                                             ^~~~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:654:59: error: too many arguments to function 'bool wasp::lsp::buildCompletionObject(wasp::DataObject&, std::ostream&, const string&, int, int, int, int, const string&, int, const string&, const string&, bool, bool)'\n  654 |                                                text_format);\n      |                                                           ^\nIn file included from /home/twise/projects/moose/framework/build/header_symlinks/MooseServer.h:13,\n                 from /home/twise/projects/moose/framework/src/base/MooseApp.C:53,\n                 from /home/twise/projects/moose/framework/build/unity_src/base_Unity.C:12:\n/home/twise/mambaforge3/envs/moose/wasp/include/wasplsp/LSP.h:604:6: note: declared here\n  604 | bool buildCompletionObject( DataObject        & object          ,\n      |      ^~~~~~~~~~~~~~~~~~~~~\nIn file included from /home/twise/projects/moose/framework/build/unity_src/base_Unity.C:19:\n/home/twise/projects/moose/framework/src/base/MooseServer.C: In member function 'bool MooseServer::addValuesToList(wasp::DataArray&, const InputParameters&, const std::set<std::__cxx11::basic_string<char> >&, const string&, const std::set<std::__cxx11::basic_string<char> >&, int, int, int, int)':\n/home/twise/projects/moose/framework/src/base/MooseServer.C:791:9: error: 'client_snippet_support' was not declared in this scope\n  791 |     if (client_snippet_support)\n      |         ^~~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:793:32: error: 'm_text_format_snippet' is not a member of 'wasp::lsp'\n  793 |       text_format = wasp::lsp::m_text_format_snippet;\n      |                                ^~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:798:32: error: 'm_text_format_plaintext' is not a member of 'wasp::lsp'\n  798 |       text_format = wasp::lsp::m_text_format_plaintext;\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~\n/home/twise/projects/moose/framework/src/base/MooseServer.C:818:57: error: too many arguments to function 'bool wasp::lsp::buildCompletionObject(wasp::DataObject&, std::ostream&, const string&, int, int, int, int, const string&, int, const string&, const string&, bool, bool)'\n  818 |                                              text_format);\n      |                                                         ^\nIn file included from /home/twise/projects/moose/framework/build/header_symlinks/MooseServer.h:13,\n                 from /home/twise/projects/moose/framework/src/base/MooseApp.C:53,\n                 from /home/twise/projects/moose/framework/build/unity_src/base_Unity.C:12:\n/home/twise/mambaforge3/envs/moose/wasp/include/wasplsp/LSP.h:604:6: note: declared here\n  604 | bool buildCompletionObject( DataObject        & object          ,\n      |      ^~~~~~~~~~~~~~~~~~~~~\nCompiling C++ (in opt mode) /home/twise/projects/moose/framework/build/unity_src/restart_Unity.C...\nmake: *** [/home/twise/projects/moose/framework/build.mk:150: /home/twise/projects/moose/framework/build/unity_src/base_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1",
          "url": "https://github.com/idaholab/moose/discussions/27045",
          "updatedAt": "2024-03-11T06:27:06Z",
          "publishedAt": "2024-03-10T22:07:34Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYour version of WASP is too old. Use conda update moose-dev.\nthen check with conda list the versions of the packages.\nIf they are still old, you ll need to remove the moose conda environment and follow our instructions for installation again\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27045#discussioncomment-8738527",
                  "updatedAt": "2024-03-10T22:24:22Z",
                  "publishedAt": "2024-03-10T22:24:22Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "After following all the given expected steps, The following appear to have been the solution\ntroubleshooting guide for Conda.\n\nconda activate base\nconda env remove -n moose\nconda create -n moose moose-dev=2024.03.05\nconda activate moose\nmake -j 6 failed\n\ncd moose\ngit checkout master\ngit clean -xfd\ngit fetch upstream\ngit pull\ngit submodule update --init\nmake -j 6 failed\n\nThe following actions resulted in make and test passing. Not sure if I could have just skipped to these actions\nhave resolved the issues without having done all the above.\ngit clone https://github.com/idaholab/moose.git\ncd moose\ngit checkout master\ncd ~/projects/moose/test\nmake -j 6\ncd ~/projects/moose/test\n./run_tests -j 6",
                          "url": "https://github.com/idaholab/moose/discussions/27045#discussioncomment-8739684",
                          "updatedAt": "2024-03-11T02:18:32Z",
                          "publishedAt": "2024-03-11T02:18:30Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Parallel computing",
          "author": {
            "login": "POLonge"
          },
          "bodyText": "I am having this error in my simulation run:\nTime Step 1, time = 1, dt = 1\nComputing Initial Residual\n  Computing Residual.                                                                [ 14.24 s] [ 2261 MB]\nFinished Computing Initial Residual                                                  [ 14.24 s] [ 2261 MB]\nComputing Residual.                                                                  [ 14.33 s] [ 2261 MB]\n\n0 Nonlinear |R| = 1.028114e+03\nComputing Jacobian....... ..double free or corruption (out)\nAborted (core dumped)\nI have a machine with 24 cores and 96GB RAM however simulation is done with only 1 core. How do I tell MOOSE to run this simulation with more cores at same time.",
          "url": "https://github.com/idaholab/moose/discussions/27025",
          "updatedAt": "2024-03-10T22:44:39Z",
          "publishedAt": "2024-03-08T00:32:25Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can do\nmpirun -n 12 <your executable> -i <name of your input file>",
                  "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8714061",
                  "updatedAt": "2024-03-08T00:42:39Z",
                  "publishedAt": "2024-03-08T00:42:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "POLonge"
                          },
                          "bodyText": "I tried this, it's still displaying same error.",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8723135",
                          "updatedAt": "2024-03-08T18:13:16Z",
                          "publishedAt": "2024-03-08T18:13:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok can you compile in debug mode and run with the debug executable\nAlso can you watch the memory to make sure you're running out of memory? With top on Linux",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8723276",
                          "updatedAt": "2024-03-08T18:25:11Z",
                          "publishedAt": "2024-03-08T18:25:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "POLonge"
                          },
                          "bodyText": "I saw this message:\nTime Step 1, time = 1, dt = 1\nComputing Initial Residual\n  Computing Residual....................                                             [109.69 s] [14171 MB]\nFinished Computing Initial Residual                                                  [109.69 s] [14171 MB]\nComputing Residual.....................                                              [117.11 s] [14171 MB]\n\n0 Nonlinear |R| = 5.157454e+02\nComputing Jacobian........................................................................................free(): invalid next size (fast)\nAborted (core dumped)\n===================================================================================\nBAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\nEXIT CODE: 9\nCLEANING UP REMAINING PROCESSES\nYOU CAN IGNORE THE BELOW CLEANUP MESSAGES\nYOUR APPLICATION TERMINATED WITH THE EXIT STRING: Segmentation fault (signal 11)\nThis typically refers to a problem with your application.\nPlease see the FAQ page for debugging suggestions\nThen I saw this from the documentation: A \"Segmentation fault,\" \"Segfault,\" or \"Signal 11\" error denotes a memory bug (often array access out of bounds). What's this saying?",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8725312",
                          "updatedAt": "2024-03-08T22:16:55Z",
                          "publishedAt": "2024-03-08T22:16:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Looks like a genuine bug at this point.\nCan you share your inputs and your mesh?\nOr else could you please make a small case showing the problem",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8725836",
                          "updatedAt": "2024-03-08T23:50:16Z",
                          "publishedAt": "2024-03-08T23:50:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "POLonge"
                          },
                          "bodyText": "Attached below is the input file.\n3D_cvf.i.zip\nThanks.",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8731110",
                          "updatedAt": "2024-03-09T18:24:05Z",
                          "publishedAt": "2024-03-09T18:24:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you are running out of memory\nCode 9 for the exit code means something killed the process. This is pretty much always OOM.\nCan you try with nx = ny = nz = 10 instead of 25 and see if you can get the calculation to finish",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8732676",
                          "updatedAt": "2024-03-10T00:20:43Z",
                          "publishedAt": "2024-03-10T00:20:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I hit an error in devel mode\n\nAssertion `i < _size' failed\nAccess out of bounds in MooseArray (i: 8 size: 8)\nat /Users/giudgl/projects/moose/framework/build/header_symlinks/MooseArray.h, line 276\nStack frames: 14\n0: 0   libmesh_devel.0.dylib               0x000000010c9ca2d0 libMesh::print_trace(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) + 1044\n1: 1   libporous_flow-devel.0.dylib        0x0000000102fc8570 MooseArray<double>::operator[](unsigned int) const + 688\n2: 2   libporous_flow-devel.0.dylib        0x0000000103072358 PorousFlowTemperatureTempl<false>::computeQpProperties() + 52\n3: 3   libmoose-devel.0.dylib              0x00000001046862b0 MaterialBase::initStatefulProperties(unsigned int) + 80\n4: 4   libmoose-devel.0.dylib              0x00000001046dc948 MaterialPropertyStorage::initStatefulProps(unsigned int, std::__1::vector<std::__1::shared_ptr<MaterialBase>, std::__1::allocator<std::__1::shared_ptr<MaterialBase>>> const&, unsigned int, libMesh::Elem const&, unsigned int) + 168\n5: 5   libmoose-devel.0.dylib              0x0000000104b18af0 ThreadedElementLoopBase<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*>>::operator()(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&, bool) + 324\n6: 6   libmoose-devel.0.dylib              0x0000000104ccc674 void libMesh::Threads::parallel_reduce<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*>, ComputeMaterialsObjectThread>(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&, ComputeMaterialsObjectThread&) + 116\n7: 7   libmoose-devel.0.dylib              0x0000000104ccc55c FEProblemBase::initElementStatefulProps(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&, bool) + 84\n8: 8   libmoose-devel.0.dylib              0x0000000104d032d4 FEProblemBase::initialSetup() + 15164\n9: 9   libmoose-devel.0.dylib              0x000000010461dde0 Transient::init() + 88\n10: 10  libmoose-devel.0.dylib              0x0000000105671f90 MooseApp::executeExecutioner() + 660\n11: 11  libmoose-devel.0.dylib              0x000000010566a58c MooseApp::run() + 4584\n12: 12  relap-7-devel                       0x0000000100ca7b64 main + 156\n13: 13  dyld                                0x000000018a4d50e0 start + 2360\n[0] /Users/giudgl/projects/moose/framework/build/header_symlinks/MooseArray.h, line 276, compiled Mar  8 2024 at 16:16:16\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8732677",
                          "updatedAt": "2024-03-10T00:21:31Z",
                          "publishedAt": "2024-03-10T00:21:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So it might not be oom. I ll take a look probably tomorrow",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8732699",
                          "updatedAt": "2024-03-10T00:31:43Z",
                          "publishedAt": "2024-03-10T00:31:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok I looked into this a little.\nPorous flow materials aren't coded for second order variables.\nYou should make elem_type = HEX8 (or comment it out) then change the displacements to be first order.\nIf you want to use second order variables, you'll need to adapt quite a bit of logic in the porous flow materials, which I think is there for nodal lumping",
                          "url": "https://github.com/idaholab/moose/discussions/27025#discussioncomment-8738613",
                          "updatedAt": "2024-03-10T22:44:40Z",
                          "publishedAt": "2024-03-10T22:44:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Performance issues on HPC",
          "author": {
            "login": "selarem"
          },
          "bodyText": "Dear moose developpers,\nI have installed moose on a National HPC. When Testing, I noticed that On my old Dell station moose run faster than on the HPC Cluster ! The cluster has the most new and performant nodes possible I could have. The engineers told me that moose was not compiled with good optimization options to profit from the cluster capabilities. Here my compilation (offline)  slurm script:\n`module purge\nsource /opt/cray/pe/cpe/23.02/restore_lmod_system_defaults.sh\nmodule load PrgEnv-gnu\nmodule load craype-x86-genoa\nmodule load cray-python\nmodule load craype-network-ofi\nmodule load CPE-23.02-gcc-12.2.0-CPU-softs\nmodule load cray-hdf5/1.12.2.1\nmodule list\n\n make -j 40`\n\n\nto run a job I use this:\n`\n#!/bin/bash\n#SBATCH --account=cin4054\n#SBATCH --job-name=<miehe>\n#SBATCH --constraint=GENOA\n#SBATCH --nodes=1\n#SBATCH --ntasks-per-node=20\n#SBATCH --cpus-per-task=1\n#SBATCH --threads-per-core=1\n#SBATCH --ntasks=20\n#SBATCH --time=23:59:00\nmodule purge\nsource /opt/cray/pe/cpe/23.02/restore_lmod_system_defaults.sh\nmodule load PrgEnv-gnu\nmodule load craype-x86-genoa\nmodule load cray-python\nmodule load craype-network-ofi\nmodule load CPE-23.02-gcc-12.2.0-CPU-softs\nmodule load cray-hdf5/1.12.2.1\nmodule list\nexport MOOSE_MPI_COMMAND=\"srun\"\nsource ~/.bashrc                           \nsrun  -- combined-opt   -i CoupledTri_960.i  > CoupledTri_960\n\n`\nThank you for any suggestion.\nRegards,\nSaber",
          "url": "https://github.com/idaholab/moose/discussions/26585",
          "updatedAt": "2024-03-10T22:31:58Z",
          "publishedAt": "2024-01-18T10:55:00Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhich installation path did you follow?\nWas the MPI distribution used compiled by the cluster administrators?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8169238",
                  "updatedAt": "2024-01-18T13:23:21Z",
                  "publishedAt": "2024-01-18T13:23:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "selarem"
                  },
                  "bodyText": "I have followed this :\nhttps://mooseframework.inl.gov/moose/getting_started/installation/offline_installation.html\nThe cluster is \ud83d\udc4d\nhttps://dci.dci-gitlab.cines.fr/webextranet/user_support/index.html#connecting\nand MPI are \ud83d\udc4d\nmodule available\n---- /opt/cray/pe/lmod/modulefiles/comnet/crayclang/14.0/ofi/1.0 ----\ncray-mpich/8.1.20 (L,D)    cray-mpich/8.1.21\n\nWhere:\n L:  Module is loaded\n D:  Default Module",
                  "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8169474",
                  "updatedAt": "2024-01-18T13:43:05Z",
                  "publishedAt": "2024-01-18T13:43:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok I dont have any big ideas on this. You can pass additional flags to compile with higher optimization levels, for example -o3 (we default to o2) and -march=native if you want to try optimizing more.\n@friedmud or @permcody may want to pitch in",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8169905",
                          "updatedAt": "2024-01-18T14:20:34Z",
                          "publishedAt": "2024-01-18T14:20:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "The performance is so poor that it is far less that what I could obtain in an old Dell station !\nSomething is wrong I guess, since the cluster I want to use is the most \"new\" and \"performant\" of the country !",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8517750",
                          "updatedAt": "2024-02-19T13:42:44Z",
                          "publishedAt": "2024-02-19T13:42:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "ok I dont have any big ideas on this. You can pass additional flags to compile with higher optimization levels, for example -o3 (we default to o2) and -march=native if you want to try optimizing more.\n\n\n\nThe performance is so poor that it is far less that what I could obtain in an old Dell station !\nSomething is wrong I guess, since the cluster I want to use is the most \"new\" and \"performant\" of the country !\n\n\nWere there any differences? Can you provide a profiling report (your_app-opt -t) of both (one built with the optimizations @GiudGiud mentioned, and one without)?",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8518891",
                          "updatedAt": "2024-02-19T15:12:54Z",
                          "publishedAt": "2024-02-19T15:12:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "I have tried the combined module (combined-opt) on my old Dell station and on the super cluster. And found that The old station is many times faster. I have compiled with the (default) options on both. This looks very strange to me.",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8519182",
                          "updatedAt": "2024-02-19T15:41:33Z",
                          "publishedAt": "2024-02-19T15:41:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "I could not find in which script I should change the optimizer options, to specify o3 or -march=native.\nregards,",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8528352",
                          "updatedAt": "2024-02-20T11:00:31Z",
                          "publishedAt": "2024-02-20T11:00:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "The engineers told me that moose was not compiled with good optimization options to profit from the cluster capabilities\n\nDid the engineers tell you what these optimization switches should be? I took some time to read up about the GENCI cluster. It looks like there might be different queues for different sort of work. One for AI specialized work (Instinct Accelerators (which probably wouldn't work well with MOOSE... I think!?), and another for general work (AMD EPYC 7003 series). Just stating this, in case we happen to be using a partition of this cluster where MOOSE is not suited to run on.\nUsually, the following machine optimizations suffice:\n-march=native\nHere is a list I found containing a myriad of machine options for all known CPU types (you don't have to worry about these, but I found it interesting): https://gcc.gnu.org/onlinedocs/gcc/Submodel-Options.html. Most likely this cluster falls in line with the x86 machine archetype. However, native might fail, if the compiler being used is older than the CPU archetype. If that is the case, you then have to choose one from the list I linked. But more importantly, the cluster engineers should have told you what switches to use.\nOnce you know what switches to use:\nThe compiler flags are gathered from environment variables (normally). So when you have all the appropriate modules loaded, you should see CXXFLAGS populated. Like on my Intel Mac workstation using the Conda compilers for example:\n\u276f conda activate moose\n\u276f echo $CXXFLAGS\n-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong \\\n-O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 \\\n-isystem /Users/jason/conda3/envs/moose/include -std=c++17\nAs you can see, Conda sets-march=core2 which is optimized for the very old Intel Core2 archetype :) (off topic: Conda chooses to optimize with core2, so that the binaries they make available, operate on a wide number of CPUs).",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8530739",
                          "updatedAt": "2024-02-20T15:27:25Z",
                          "publishedAt": "2024-02-20T14:22:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "@selarem\nCan you comment on any of the above? It might be that the cluster engineers may know what optimizations MOOSE needs on their cluster. We should ask them: -march=what?? optimizations.",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8561672",
                          "updatedAt": "2024-02-22T21:04:46Z",
                          "publishedAt": "2024-02-22T21:04:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "selarem"
                  },
                  "bodyText": "",
                  "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8517880",
                  "updatedAt": "2024-02-20T11:01:02Z",
                  "publishedAt": "2024-02-19T13:51:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "permcody"
                          },
                          "bodyText": "Can you confirm that MPI is working properly? MOOSE prints out how many processors it's using and prints some stats about the partitioning as well right in the header. Are you seeing sensible numbers in that section?",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8519710",
                          "updatedAt": "2024-02-19T16:19:10Z",
                          "publishedAt": "2024-02-19T16:19:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "I thaink MPI is working properly:\n\"Parallelism:\nNum Processors:          8\nNum Threads:             2\n\"\nregards,",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8528270",
                          "updatedAt": "2024-02-20T10:54:14Z",
                          "publishedAt": "2024-02-20T10:54:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "How many elements? Can you please paste th whole header?\nIf for example the default partitioning is terrible, this will lower performance",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8531470",
                          "updatedAt": "2024-02-20T15:18:00Z",
                          "publishedAt": "2024-02-20T15:17:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "Example of header :\n\"\nFramework Information:\nMOOSE Version:           git commit 04afdb8 on 2023-09-25\nLibMesh Version:         ceff84386bdc83d87e9eb98ac3a9b745711e415a\nPETSc Version:           3.19.3\nSLEPc Version:           3.19.1\nCurrent Time:            Wed Feb 21 10:46:40 2024\nExecutable Timestamp:    Wed Feb 21 10:43:08 2024\nParallelism:\nNum Processors:          20\nNum Threads:             1\nMesh:\nParallel Type:           replicated\nMesh Dimension:          2\nSpatial Dimension:       2\nNodes:\nTotal:                 231601\nLocal:                 11746\nMin/Max/Avg:           11337/11755/11580\nElems:\nTotal:                 460800\nLocal:                 23030\nMin/Max/Avg:           22885/23257/23040\nNum Subdomains:          1\nNum Partitions:          20\nPartitioner:             metis\nNonlinear System:\nNum DOFs:                694803\nNum Local DOFs:          35238\nVariables:               { \"disp_x\" \"disp_y\" \"c\" }\nFinite Element Types:    \"LAGRANGE\"\nApproximation Orders:    \"FIRST\"\nAuxiliary System:\nNum DOFs:                5768407\nNum Local DOFs:          289492\nVariables:               { \"vel_x\" \"accel_x\" \"vel_y\" \"accel_y\" } { \"strain_yy\" \"stress_yy\" \"kinetic_energy\"\n} { \"resid_x\" \"resid_y\" \"bounds_dummy\" } { \"stress_xx\" \"stress_xy\" \"Von_Mises_stress\"\n\"total_strain_yy\" \"total_strain_xx\" \"total_strain_xy\" }\nFinite Element Types:    \"LAGRANGE\" \"MONOMIAL\" \"LAGRANGE\" \"MONOMIAL\"\nApproximation Orders:    \"FIRST\" \"CONSTANT\" \"FIRST\" \"CONSTANT\"\nExecution Information:\nExecutioner:             Transient\nTimeStepper:             ConstantDT\nTimeIntegrator:          ImplicitEuler\nSolver Mode:             NEWTON\nMOOSE Preconditioner:    SMP\nCurrently Executing\nPerforming Initial Setup\nFinished Performing Initial Setup                                                      [^[[33m  8.34 s^[[39m] [^[[33m  757 MB^[[39m]\nTime Step 0, time = 0\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+----------------------+\n| time           | resid_x        | resid_y        | top_x          | top_y          | total_kinetic_energy |\n+----------------+----------------+----------------+----------------+----------------+----------------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |         0.000000e+00 |\n+----------------+----------------+----------------+----------------+----------------+----------------------+\nTime Step 1, time = 3e-08, dt = 3e-08\n\"",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8544276",
                          "updatedAt": "2024-02-21T14:22:26Z",
                          "publishedAt": "2024-02-21T14:22:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "While you're at it, can you also print the profile? Just add a -t to your arguments.",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8544467",
                          "updatedAt": "2024-02-21T14:39:11Z",
                          "publishedAt": "2024-02-21T14:39:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "Performance Graph:\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n|                                Section                               | Calls |   Self(s)  |   Avg(s)   |    %   | Mem(MB) |  Total(s)  |   Avg(s)   |    %   | Mem(MB) |\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| CombinedTestApp (main)                                               |     1 |      0.031 |      0.031 |   0.04 |       3 |     74.307 |     74.307 | 100.00 |     771 |\n|   Action::SetupMeshAction::Mesh::SetupMeshAction::act::setup_mesh    |     1 |      0.002 |      0.002 |   0.00 |       0 |      0.002 |      0.002 |   0.00 |       0 |\n|   Action::SetupMeshAction::Mesh::SetupMeshAction::act::set_mesh_base |     2 |      0.094 |      0.047 |   0.13 |       0 |      0.095 |      0.047 |   0.13 |       0 |\n|   MeshGeneratorSystem::createMeshGeneratorOrder                      |     1 |      0.002 |      0.002 |   0.00 |       0 |      0.002 |      0.002 |   0.00 |       0 |\n|   FEProblem::computeUserObjects                                      |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|   FEProblem::computeUserObjects                                      |     3 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|   FEProblem::outputStep                                              |     3 |      0.004 |      0.001 |   0.01 |       0 |      4.499 |      1.500 |   6.06 |      73 |\n|   Transient::PicardSolve                                             |     2 |      0.031 |      0.015 |   0.04 |       0 |     50.788 |     25.394 |  68.35 |      41 |\n|     FEProblem::computeUserObjects                                    |    16 |      1.155 |      0.072 |   1.55 |       0 |      1.155 |      0.072 |   1.55 |       0 |\n|     FEProblem::outputStep                                            |     6 |      0.009 |      0.002 |   0.01 |       0 |      0.009 |      0.002 |   0.01 |       0 |\n|     FEProblem::solve                                                 |     2 |     21.598 |     10.799 |  29.07 |      37 |     48.223 |     24.111 |  64.90 |      41 |\n|       FEProblem::computeResidualInternal                             |     2 |      0.000 |      0.000 |   0.00 |       0 |      2.684 |      1.342 |   3.61 |       0 |\n|         FEProblem::computeUserObjects                                |     4 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       FEProblem::computeResidualInternal                             |     6 |      0.002 |      0.000 |   0.00 |       0 |     17.688 |      2.948 |  23.80 |       1 |\n|         FEProblem::computeUserObjects                                |    12 |      0.008 |      0.001 |   0.01 |       0 |      0.008 |      0.001 |   0.01 |       0 |\n|       FEProblem::computeJacobianInternal                             |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.757 |      0.757 |   1.02 |       1 |\n|         FEProblem::computeUserObjects                                |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       FEProblem::computeJacobianInternal                             |     4 |      0.000 |      0.000 |   0.00 |       0 |      4.220 |      1.055 |   5.68 |       1 |\n|         FEProblem::computeUserObjects                                |     8 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       FEProblem::computeBounds                                       |     2 |      0.005 |      0.002 |   0.01 |       0 |      1.245 |      0.622 |   1.68 |       0 |\n|   Transient::final                                                   |     1 |      0.011 |      0.011 |   0.02 |       0 |      0.021 |      0.021 |   0.03 |       0 |\n|     FEProblem::computeUserObjects                                    |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|     FEProblem::outputStep                                            |     1 |      0.002 |      0.002 |   0.00 |       0 |      0.009 |      0.009 |   0.01 |       0 |\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nFinished Executing",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8556541",
                          "updatedAt": "2024-02-22T12:58:09Z",
                          "publishedAt": "2024-02-22T12:58:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this all seems reasonable. 35k dofs per core is fine\nwhat preconditioning are you using? If it s one that does not scale I could see the performance loss there",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8557730",
                          "updatedAt": "2024-02-22T14:39:50Z",
                          "publishedAt": "2024-02-22T14:39:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "selarem"
                  },
                  "bodyText": "ok I dont have any big ideas on this. You can pass additional flags to compile with higher optimization levels, for example -o3 (we default to o2) and -march=native if you want to try optimizing more.\n@friedmud or @permcody may want to pitch in\n\nI could not find the script where to specify the optimizer options.",
                  "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8528375",
                  "updatedAt": "2024-02-20T11:02:07Z",
                  "publishedAt": "2024-02-20T11:02:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "selarem"
                  },
                  "bodyText": "SMP\nREGARDS\n\nLe jeu. 22 f\u00e9vr. 2024, 15:39, Guillaume Giudicelli ***@***.***>\na \u00e9crit :\n\u2026\n this all seems reasonable. 10k dofs per core is a little under what we\n prescribe but it s not a hard rule.\n what preconditioning are you using? If it s one that does not scale I\n could see the performance loss there\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#26585 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AFBUGDEMHIZGJOOCL3JJMRLYU5KB7AVCNFSM6AAAAABCAB6JKOVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM4DKNJXG4ZTA>\n .\n You are receiving this because you authored the thread.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8560596",
                  "updatedAt": "2024-02-22T18:56:01Z",
                  "publishedAt": "2024-02-22T18:56:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what petsc options though?",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8560890",
                          "updatedAt": "2024-02-22T19:28:18Z",
                          "publishedAt": "2024-02-22T19:28:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "petsc_options_iname = '-pc_type -pc_factor_mat_solver_package -snes_type'\npetsc_options_value = 'lu       superlu_dist                  vinewtonrsls'\nsolve_type = NEWTON # PJFNK\nI do not think this will change a lot the speed, I have been using all of the possibilities as per petsc documentation. For nonlinear stiff problems, we need to be patient.",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8691015",
                          "updatedAt": "2024-03-06T09:22:00Z",
                          "publishedAt": "2024-03-06T09:21:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so you have constraints on the domain? I see the vinewtonrsls. Are they from Bounds objects?\nLU is not a preconditioning that scales well with larger problems. If you plot the cost of the solve at various number of dofs, you should see a nonlinear increase in the cost. If you are already high up in that nonlinear increase with 700k dofs, that can be the problem",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8695259",
                          "updatedAt": "2024-03-06T15:12:41Z",
                          "publishedAt": "2024-03-06T15:12:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "selarem"
                          },
                          "bodyText": "Yes I am using Bounds.\nIs there any preconditioner that scales better?",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8734124",
                          "updatedAt": "2024-03-10T07:42:04Z",
                          "publishedAt": "2024-03-10T07:42:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The preconditioning is problem dependent. A lot of the preconditioners scale well but they wont work for your problem.\nWhat did you try before resorting to using a direct solve (LU)? Do you know what the other codes are using / what is the state of the art for your physics?",
                          "url": "https://github.com/idaholab/moose/discussions/26585#discussioncomment-8738552",
                          "updatedAt": "2024-03-10T22:31:59Z",
                          "publishedAt": "2024-03-10T22:31:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "CSVReader Error",
          "author": {
            "login": "fervaldies"
          },
          "bodyText": "Hello, I am trying to run my code to read a CSV file to use it within an AuxKernels and also Materials block. I was using this code some time ago with the CSVReader and it was working correctly, but now it is giving the following error:\ninvalid float syntax for parameter: AuxKernels/add_material_in_the_ellipsoid/ry=Input_Params\nMy code is the following. First I am importing the CSV as:\n[VectorPostprocessors]\n[./Input_Params]\ntype = CSVReaderVectorPostprocessor\ncsv_file = Input_Params_mm.csv\n#header = true\n[../]\n[]\nAnd then I am trying to use it in the AuxKernels as:\n[AuxKernels]\n[./add_material_in_the_ellipsoid]\ntype = FunctionPathEllipsoidAux\nvariable = level_set_var\nvector_ry = ry # Column in Excel\nry = Input_Params # Radius of ellipsoid in y (mm)\n[../]\n[]\nIs there now a new way to call the different columns and values?\nThank you in advance!",
          "url": "https://github.com/idaholab/moose/discussions/27037",
          "updatedAt": "2024-03-10T12:01:50Z",
          "publishedAt": "2024-03-08T12:12:47Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDid you check the documentation page on the moose website for the functionEllipsoidAux?\nThat information, the new parameter names, would be there",
                  "url": "https://github.com/idaholab/moose/discussions/27037#discussioncomment-8721211",
                  "updatedAt": "2024-03-08T15:12:36Z",
                  "publishedAt": "2024-03-08T15:12:35Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "fervaldies"
                          },
                          "bodyText": "I think the problem that I am having is that the CSV is not reading the data correctly, or that the method that I am using is not allowed anymore. The parameters names are correct I think, but I do not know how to select the correct column and value from the CSV file as before.",
                          "url": "https://github.com/idaholab/moose/discussions/27037#discussioncomment-8721365",
                          "updatedAt": "2024-03-08T15:25:41Z",
                          "publishedAt": "2024-03-08T15:25:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There's a parameter to select that.\nA common issue with the CSV is if you opened it on a windows machine and the line endings got messed up",
                          "url": "https://github.com/idaholab/moose/discussions/27037#discussioncomment-8722645",
                          "updatedAt": "2024-03-08T17:25:15Z",
                          "publishedAt": "2024-03-08T17:25:14Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fervaldies"
                          },
                          "bodyText": "Oh solved! Thank you very much! :)",
                          "url": "https://github.com/idaholab/moose/discussions/27037#discussioncomment-8735235",
                          "updatedAt": "2024-03-10T12:01:46Z",
                          "publishedAt": "2024-03-10T12:01:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "I attempted to modify a vectorpostprocessor  SideValueSampler",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I attempted to modify a vectorpostprocessor  SideValueSampler and I am getting the following error during make -j6:\nIn file included from /home/twise/projects/crab/src/vectorpostprocessors/SideVectorPostProcessor.C:10,\nfrom /home/twise/projects/crab/build/unity_src/vectorpostprocessors_Unity.C:3:\n/home/twise/projects/moose/framework/build/header_symlinks/SideVectorPostprocessor.h:15:7: error: redefinition of 'class SideVectorPostprocessor'\n15 | class SideVectorPostprocessor : public SideUserObject, public VectorPostprocessor\n|       ^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /home/twise/projects/crab/build/header_symlinks/SideValueSampler_crab.h:12,\nfrom /home/twise/projects/crab/src/vectorpostprocessors/SideValueSampler_crab.C:10,\nfrom /home/twise/projects/crab/build/unity_src/vectorpostprocessors_Unity.C:2:\n/home/twise/projects/crab/build/header_symlinks/SideVectorPostprocessor.h:15:10: note: previous definition of 'class SideVectorPostprocessor'\n15 |    class SideVectorPostprocessor : public SideUserObject, public VectorPostprocessor\n|          ^~~~~~~~~~~~~~~~~~~~~~~\nWhat do I need to do to rename and reuse this VPP?",
          "url": "https://github.com/idaholab/moose/discussions/27029",
          "updatedAt": "2024-03-10T01:33:53Z",
          "publishedAt": "2024-03-08T04:59:03Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou want to inherit from SideVPP, not redefine it.\nSo do something like:\nclass SideDiffusiveFluxIntegralComponentsVPP : public SideVectorPostprocessor\n...",
                  "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8715666",
                  "updatedAt": "2024-03-08T05:23:51Z",
                  "publishedAt": "2024-03-08T05:23:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Thank you sir.",
                          "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8722657",
                          "updatedAt": "2024-03-08T17:27:15Z",
                          "publishedAt": "2024-03-08T17:27:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "My declaration file is structured as follows:\n#pragma once\n\n#include \"SideVectorPostprocessor.h\"\n#include \"SamplerBase.h\"\n\nclass SideValueSampler_crab : public SideVectorPostprocessor, protected SamplerBase\n{\npublic:\n  static InputParameters validParams();\n\n  SideValueSampler_crab(const InputParameters & parameters);\n\n  virtual void initialize() override;\n  virtual void execute() override;\n  virtual void finalize() override;\n\n  // Let the SamplerBase version of threadJoin() take part in the\n  // overload resolution process, otherwise we get warnings about\n  // overloaded virtual functions and \"hiding\" in debug mode.\n  using SamplerBase::threadJoin;\n\n  virtual void threadJoin(const UserObject & y) override;\n\nprotected:\n  /// So we don't have to create and destroy this vector over and over again\n  std::vector<Real> _values;\n\n  unsigned int _qp;\n};",
                          "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8722840",
                          "updatedAt": "2024-03-08T20:52:21Z",
                          "publishedAt": "2024-03-08T17:42:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this looks fine to me.\nHow the source implementation going?",
                          "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8724692",
                          "updatedAt": "2024-03-08T20:53:20Z",
                          "publishedAt": "2024-03-08T20:53:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "There may be something not coded right in my source code, as I am still experiencing the error upon the \u201cmake\u201d. I\u2019ll share that code as well.\n\nGet Outlook for iOS<https://aka.ms/o0ukef>\n\u2026\n________________________________\nFrom: Guillaume Giudicelli ***@***.***>\nSent: Friday, March 8, 2024 12:53:40 PM\nTo: idaholab/moose ***@***.***>\nCc: Wise, Tammy ***@***.***>; Author ***@***.***>\nSubject: Re: [idaholab/moose] I attempted to modify a vectorpostprocessor SideValueSampler (Discussion #27029)\n\n\nthis looks fine to me.\nHow the source implementation going?\n\n\u2014\nReply to this email directly, view it on GitHub<#27029 (reply in thread)>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AJQ6AYWLHBFZR3TUGXCHRZDYXIQNJAVCNFSM6AAAAABEMGPRDGVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM4DOMRUGY4TE>.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8725231",
                  "updatedAt": "2024-03-08T22:02:14Z",
                  "publishedAt": "2024-03-08T22:02:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "@GiudGiud , My source code\n#include \"SideValueSampler_crab.h\"\n\n// MOOSE includes\n#include \"MooseVariableFE.h\"\n\n#include \"libmesh/quadrature.h\"\n\nregisterMooseObject(\"MooseApp\", SideValueSampler_crab);\n\nInputParameters\nSideValueSampler_crab::validParams()\n{\n  InputParameters params = SideVectorPostprocessor::validParams();\n  params += SamplerBase::validParams();\n  params.addClassDescription(\"Sample variable(s) along a sideset, internal or external.\");\n  params.addRequiredCoupledVar(\n      \"variable\", \"The names of the variables that this VectorPostprocessor operates on\");\n\n  return params;\n}\n\nSideValueSampler_crab::SideValueSampler_crab(const InputParameters & parameters)\n  : SideVectorPostprocessor(parameters), SamplerBase(parameters, this, _communicator)\n{\n  std::vector<std::string> var_names(_coupled_moose_vars.size());\n  _values.resize(_coupled_moose_vars.size());\n\n  for (unsigned int i = 0; i < _coupled_moose_vars.size(); i++)\n    var_names[i] = _coupled_moose_vars[i]->name();\n\n  // Initialize the datastructions in SamplerBase\n  SamplerBase::setupVariables(var_names);\n}\n\nvoid\nSideValueSampler_crab::initialize()\n{\n  SamplerBase::initialize();\n}\n\nvoid\nSideValueSampler_crab::execute()\n{\n  for (unsigned int _qp = 0; _qp < _qrule->n_points(); _qp++)\n  {\n    for (unsigned int i = 0; i < _coupled_moose_vars.size(); i++)\n      _values[i] = (dynamic_cast<MooseVariable *>(_coupled_moose_vars[i]))->sln()[_qp];\n\n    SamplerBase::addSample(_q_point[_qp], _current_elem->id(), _values);\n  }\n}\n\nvoid\nSideValueSampler_crab::finalize()\n{\n  SamplerBase::finalize();\n}\n\nvoid\nSideValueSampler_crab::threadJoin(const UserObject & y)\n{\n  const auto & vpp = static_cast<const SideValueSampler_crab &>(y);\n\n  SamplerBase::threadJoin(vpp);\n}",
                          "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8732272",
                          "updatedAt": "2024-03-10T00:01:26Z",
                          "publishedAt": "2024-03-09T22:26:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It compiles fine on my machine. It even runs fine. I don't know\nWhat error do you get?\nMy guess is that you have an error coming from another file actually. It would be good to see the error",
                          "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8732648",
                          "updatedAt": "2024-03-10T00:10:47Z",
                          "publishedAt": "2024-03-10T00:10:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "@GiudGiud, Here is the operation that is giving the error.:\nChecking if header needs updating: /home/twise/projects/moose/framework/include/base/MooseRevision.h...\nCreating Unity /home/twise/projects/crab/build/unity_src/postprocessors_Unity.C\nCompiling C++ (in opt mode) /home/twise/projects/crab/build/unity_src/vectorpostprocessors_Unity.C...\nIn file included from /home/twise/projects/crab/src/vectorpostprocessors/SideVectorPostProcessor.C:10,\n                 from /home/twise/projects/crab/build/unity_src/vectorpostprocessors_Unity.C:3:\n/home/twise/projects/moose/framework/build/header_symlinks/SideVectorPostprocessor.h:15:7: error: redefinition of 'class SideVectorPostprocessor'\n   15 | class SideVectorPostprocessor : public SideUserObject, public VectorPostprocessor\n      |       ^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /home/twise/projects/crab/build/header_symlinks/SideValueSampler_crab.h:12,\n                 from /home/twise/projects/crab/src/vectorpostprocessors/SideValueSampler_crab.C:10,\n                 from /home/twise/projects/crab/build/unity_src/vectorpostprocessors_Unity.C:2:\n/home/twise/projects/crab/build/header_symlinks/SideVectorPostprocessor.h:15:10: note: previous definition of 'class SideVectorPostprocessor'\n   15 |    class SideVectorPostprocessor : public SideUserObject, public VectorPostprocessor\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\nmake: *** [/home/twise/projects/moose/framework/build.mk:151: /home/twise/projects/crab/build/unity_src/vectorpostprocessors_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1",
                          "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8732744",
                          "updatedAt": "2024-03-10T22:06:58Z",
                          "publishedAt": "2024-03-10T00:56:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Save your work with git add for every file you added or modified\nThen clean the repo (with git clean -Xfd only if you have properly saved your work) then recompile",
                          "url": "https://github.com/idaholab/moose/discussions/27029#discussioncomment-8732849",
                          "updatedAt": "2024-03-10T01:35:13Z",
                          "publishedAt": "2024-03-10T01:33:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "The Quadrature of the sampler is a sampling method",
          "author": {
            "login": "Ating24"
          },
          "bodyText": "What is the method for selecting sampling points in Quadrature? Does Quadrature mean orthogonality or integration?",
          "url": "https://github.com/idaholab/moose/discussions/27042",
          "updatedAt": "2024-03-09T17:45:17Z",
          "publishedAt": "2024-03-09T08:46:37Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIt depends on the context.\nThere s sampling in the stochastic tools for various purposes.\nThere s a quadrature for numerical integration in the finite element equations solve.\nIn that context we sample every point in the quadrature chosen at the order defined.\nI imagine you're considering a quadrature in the stochastic tools context?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27042#discussioncomment-8729797",
                  "updatedAt": "2024-03-09T14:44:11Z",
                  "publishedAt": "2024-03-09T14:41:43Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Ating24"
                          },
                          "bodyText": "Yes, when I was using polynomial chaos for uncertainty quantification, the sampler chose Quadrature",
                          "url": "https://github.com/idaholab/moose/discussions/27042#discussioncomment-8729826",
                          "updatedAt": "2024-03-09T14:48:24Z",
                          "publishedAt": "2024-03-09T14:48:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "grmnptr"
                          },
                          "bodyText": "https://mooseframework.inl.gov/source/samplers/QuadratureSampler.html",
                          "url": "https://github.com/idaholab/moose/discussions/27042#discussioncomment-8730892",
                          "updatedAt": "2024-03-09T17:45:18Z",
                          "publishedAt": "2024-03-09T17:45:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[executioners][Transient] - Forcing it to go to the next time step when it fails (Nonlinear solve did not converge due to DIVERGED_LINE_SEARCH)",
          "author": {
            "login": "Traiwit"
          },
          "bodyText": "Hi guys,\nSo I encounter this error a couple time, and then my simulation would cut down time and still stuck, just wondering if we can force produce the results at the end of this timestep and then force it to go to the next time step when it fails.\nI checked https://mooseframework.inl.gov/source/executioners/Transient.html but didnt find it, maybe i miss it?\n    Computing Residual.................                                                  [ 94.63 s] [133236 MB]\n    |residual|_2 of individual variables:\n            porepressure_L1: 1.01635e+07\n14 Nonlinear |R| = 1.016351e+07\n    Computing Jacobian...............                                                    [ 84.31 s] [133236 MB]\n      0 Linear |R| = 1.016351e+07\n      1 Linear |R| = 2.513842e+06\n      2 Linear |R| = 1.217593e+06\n      3 Linear |R| = 4.649042e+05\n      4 Linear |R| = 1.533538e+05\n      5 Linear |R| = 5.012610e+04\n      6 Linear |R| = 2.063846e+04\n      7 Linear |R| = 1.318631e+04\n      8 Linear |R| = 1.096617e+04\n      9 Linear |R| = 9.838786e+03\n\n    Computing Residual.................                                                  [ 94.19 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.45 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.23 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.24 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.03 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.35 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.06 s] [133256 MB]\n    Computing Residual.................                                                  [ 93.72 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.18 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.23 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.07 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.59 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.09 s] [133256 MB]\n    Computing Residual.................                                                  [ 94.33 s] [133256 MB]\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 14\n Solve Did NOT Converge!\n  Finished Solving                                                                       [4776.63 s] [132841 MB]\n\nThank you!\nTraiwit",
          "url": "https://github.com/idaholab/moose/discussions/27041",
          "updatedAt": "2024-03-09T14:31:47Z",
          "publishedAt": "2024-03-08T23:35:54Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Does it run with the line search turned off?\nLine_search=none in the executioner",
                  "url": "https://github.com/idaholab/moose/discussions/27041#discussioncomment-8726994",
                  "updatedAt": "2024-03-09T05:41:07Z",
                  "publishedAt": "2024-03-09T05:41:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @GiudGiud no, I use Line_search=bt (followed an example from porousflow, and been using it for a while), I actually don't know how does it work, do you think Line_search=none is better?",
                          "url": "https://github.com/idaholab/moose/discussions/27041#discussioncomment-8727067",
                          "updatedAt": "2024-03-09T06:10:52Z",
                          "publishedAt": "2024-03-09T06:10:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Line searches guide the update step in the Newton method. When they work they are faster. They don't always work with their default parameters.\nSo you can either turn it off, or pass some petsc parameters to it to try to make it work.",
                          "url": "https://github.com/idaholab/moose/discussions/27041#discussioncomment-8729743",
                          "updatedAt": "2024-03-09T14:31:48Z",
                          "publishedAt": "2024-03-09T14:31:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Help in implementing staggered scheme",
          "author": {
            "login": "ayush4424"
          },
          "bodyText": "Can anyone help how to implement this staggered scheme in moose ?\n\nI tried using multi-app but it gives divergence errors when i try to solve steady-state problems using Transient.\nAny help would be appreciated.\nhttps://doi.org/10.1016/j.tafmec.2022.103348\nThis is the link of the document from which screenshot is taken.\nRegards,\nAyush",
          "url": "https://github.com/idaholab/moose/discussions/27044",
          "updatedAt": "2024-03-09T14:24:20Z",
          "publishedAt": "2024-03-09T10:55:08Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nA multiapp is a good way to do this.\nYou ll want to use a transient multiapp if you want to perform relaxation to steady state transients.\nThe main way to debug this is to freeze one solve with Problem/solve=false and see if the solution for the other one is correct\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27044#discussioncomment-8729689",
                  "updatedAt": "2024-03-09T14:24:20Z",
                  "publishedAt": "2024-03-09T14:24:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Get the material property value at 1D boundary",
          "author": {
            "login": "SomnusYu"
          },
          "bodyText": "Hi all,\nI would like to get the material property value at the 1D boundary and use this value in ADMaterial. What should I do? Must I use a postprocessor? Is there any other direct way (do not need to modify input file)?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/27036",
          "updatedAt": "2024-03-09T05:57:39Z",
          "publishedAt": "2024-03-08T10:54:56Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIf you used a postprocessor you would not be able to keep the derivatives with AD.\nIs this material defined all over the domain or only at the boundary?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27036#discussioncomment-8721334",
                  "updatedAt": "2024-03-08T15:23:20Z",
                  "publishedAt": "2024-03-08T15:23:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "This material defined all over the domain.",
                          "url": "https://github.com/idaholab/moose/discussions/27036#discussioncomment-8721426",
                          "updatedAt": "2024-03-08T15:31:10Z",
                          "publishedAt": "2024-03-08T15:31:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Are you using distrivuted memory parallelism? (MPI)",
                          "url": "https://github.com/idaholab/moose/discussions/27036#discussioncomment-8721726",
                          "updatedAt": "2024-03-08T15:59:18Z",
                          "publishedAt": "2024-03-08T15:58:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Does MOOSE use MPI automatically? I do not use MPI.",
                          "url": "https://github.com/idaholab/moose/discussions/27036#discussioncomment-8721764",
                          "updatedAt": "2024-03-08T16:02:27Z",
                          "publishedAt": "2024-03-08T16:02:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "When you are planning to run the simulation, will you use MPI?\nI m asking because having derivatives with regards to values on the boundary when the boundary is on another MPI processs s domain is going to be complicated",
                          "url": "https://github.com/idaholab/moose/discussions/27036#discussioncomment-8722382",
                          "updatedAt": "2024-03-08T16:58:14Z",
                          "publishedAt": "2024-03-08T16:58:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Yes, I think I will use MPI in the future.",
                          "url": "https://github.com/idaholab/moose/discussions/27036#discussioncomment-8726245",
                          "updatedAt": "2024-03-09T01:44:25Z",
                          "publishedAt": "2024-03-09T01:44:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok the postprocessor route won't do AD but it will work fine with MPI.\nSo maybe you should try that first. Use a postprocessor to compute a single average for boundary material, and use that value everywhere in the domain",
                          "url": "https://github.com/idaholab/moose/discussions/27036#discussioncomment-8726991",
                          "updatedAt": "2024-03-09T05:39:57Z",
                          "publishedAt": "2024-03-09T05:39:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/27036#discussioncomment-8727039",
                          "updatedAt": "2024-03-09T05:57:39Z",
                          "publishedAt": "2024-03-09T05:57:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Consolidation and drainage process",
          "author": {
            "login": "PEI0214"
          },
          "bodyText": "Hi\uff0c\nWhen I simulated the consolidation of soil in porous flow, the loading process was set as an undrained condition, and when the confining pressure was increased to the expected value, the pore pressure remained unchanged when the drainage was opened.  This is different from the expected gradual dissipation of pore pressure.Why?\nHowever, when the surrounding pressure remains unchanged and the axial stress continues to increase, the pore pressure will quickly dissipate.\nThanks for your help.",
          "url": "https://github.com/idaholab/moose/discussions/27035",
          "updatedAt": "2024-03-08T15:20:22Z",
          "publishedAt": "2024-03-08T10:35:34Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@cpgr",
                  "url": "https://github.com/idaholab/moose/discussions/27035#discussioncomment-8721304",
                  "updatedAt": "2024-03-08T15:20:23Z",
                  "publishedAt": "2024-03-08T15:20:22Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}