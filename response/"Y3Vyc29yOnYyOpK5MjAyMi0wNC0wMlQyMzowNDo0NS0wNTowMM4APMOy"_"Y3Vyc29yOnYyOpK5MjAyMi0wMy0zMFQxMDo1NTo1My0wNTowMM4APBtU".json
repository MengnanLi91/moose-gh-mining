{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wMy0zMFQxMDo1NTo1My0wNTowMM4APBtU"
    },
    "edges": [
      {
        "node": {
          "title": "Inquiry about chemical potential value in BC in 2D CH model",
          "author": {
            "login": "abc-hy"
          },
          "bodyText": "Hi everyone,\nI have some questions about how to set the chemical potential in CH model in Boundary condition. For concentration at boundary, it is simple, we only need to set the concentration we want at the boundary. However, for chemical potential, I was wondering what chemical potential expression in CH model is? What value should we set for the chemical potential at each boundary?\nAnyone have any suggestions?\nThank you very much.\nBest regards,",
          "url": "https://github.com/idaholab/moose/discussions/20365",
          "updatedAt": "2022-11-02T16:44:12Z",
          "publishedAt": "2022-02-22T17:59:58Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "Sorry for the slow reply on this. If you use the split Cahn-Hilliard formulation, where we solve for the chemical potential and concentration as two coupled variables, then chemical potential is one of your nonlinear variables and you can use any of the BC classes to set it as you like. We generally recommend the split CH formulation instead of the direct solution method because you get better numerical performance. More info about the differences can be found here:\nhttps://mooseframework.inl.gov/modules/phase_field/Phase_Field_Equations.html",
                  "url": "https://github.com/idaholab/moose/discussions/20365#discussioncomment-2487153",
                  "updatedAt": "2022-11-02T16:44:13Z",
                  "publishedAt": "2022-04-01T16:30:02Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Question about calculating the velocity of the moving interface in 2D CH model",
          "author": {
            "login": "abc-hy"
          },
          "bodyText": "Hi everyone,\nI have some questions about calculating the velocity.\nIs there any postprocessors that can be used to calculate the velocity of the the moving interface in a 2D CH model? Do I need to track the boundary's location at each time step and then calculate the velocity by myself? Or there is one commands that can directly calculate the velocity?\nThank you very much.\nBest regards.",
          "url": "https://github.com/idaholab/moose/discussions/20378",
          "updatedAt": "2022-07-13T16:04:32Z",
          "publishedAt": "2022-02-23T03:26:45Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "Hi there- can you tell a little more about the geometry of your problem? If you know exactly where on the interface you want to calculate velocity, you could use the FindValueOnLine postprocessor to determine the position of the interface at each time step, then take the difference in position between two time steps and divide by dt (which you can get from csv output of all postprocessor data). It will be a little more tricky if you want to know the velocity of the interface at each position, so please let us know what geometry you want to consider.",
                  "url": "https://github.com/idaholab/moose/discussions/20378#discussioncomment-2487129",
                  "updatedAt": "2022-07-13T16:04:33Z",
                  "publishedAt": "2022-04-01T16:25:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Spherical coordinates",
          "author": {
            "login": "raphaelle98"
          },
          "bodyText": "Hi everyone,\nThis is my first message here and I'm new in MOOSE so I'd like to say I'm glad to join this community!\nI have a model where my mesh is in one dimension and I'm using the default cartesian coordinates. This runs well and converges very fast (1 minute).\nMy goal is to run the same thing in one dimension but by using spherical (and also cylindrical) coordinates so I simulate a 3D (or 2D) with it. So I added a block [Problem] in my input file and specifies coord-type=RSPHERICAL (or RZ).\nAnd nothing converges anymore. How does this actually work and would you have any suggestion to make this converge?\nI have mesh adaptivity (uniform-refine=3) and also a time step adaptivity (with the tilmestep that can go until 10^-10, ...)\nThanks a lot for your help :)",
          "url": "https://github.com/idaholab/moose/discussions/20690",
          "updatedAt": "2022-06-14T15:28:15Z",
          "publishedAt": "2022-04-01T14:39:09Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSwitching to RSPHERICAL adapts the size of the elements in the background and also changes the definitions of common vector operators (grad etc) for that coordinate system.\nRSPHERICAL with R=0 can be challenging for some physics. Can you please quickly try to offset it by a little bit, translating the system to start at R=0.01 for example.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20690#discussioncomment-2486548",
                  "updatedAt": "2022-07-15T21:22:06Z",
                  "publishedAt": "2022-04-01T14:53:36Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "warning about missing coupeled variable",
          "author": {
            "login": "wangzhaohao"
          },
          "bodyText": "this is a simple couple, temp and mechanic(thermal expansion). but when i run this, a warning come out, Missing coupled variables {temp}. the temp is not coupled in thermal_expansion? (i guess is there), and is there i miss something?\n[Mesh]\n#    type = GeneratedMesh\n#    dim = 3\n    [./ccmg]\n        type = ConcentricCircleMeshGenerator\n        num_sectors = 6\n        radii = '1'\n        rings = '10'\n        has_outer_square = off\n        portion = full\n        smoothing_max_it = 3\n        preserve_volumes = true\n    []\n    [./fancy]\n        type = FancyExtruderGenerator\n        direction = '0 0 1'\n        heights = '1'\n        input = ccmg\n        num_layers = '10'\n        bottom_boundary = '100'\n        top_boundary = '101'\n    [../]\n[]\n\n[Variables]\n    [./temp]\n        order = FIRST\n        family = LAGRANGE\n        initial_condition = 400.0\n    [../]\n[]\n\n[AuxVariables]\n    [./stress_theta]\n        order = CONSTANT\n        family = MONOMIAL\n    [../]\n    [./strain_theta]\n        order = CONSTANT\n        family = MONOMIAL\n    [../]\n[]\n\n[AuxKernels]\n    [./stress_theta]\n        type = RankTwoAux\n        rank_two_tensor = stress\n        index_i = 2\n        index_j = 2\n        variable = stress_theta\n        execute_on = timestep_end\n    [../]\n    [./strain_theta]\n        type = RankTwoAux\n        rank_two_tensor = total_strain\n        index_i = 2\n        index_j = 2\n        variable = strain_theta\n        execute_on = timestep_end\n    [../]\n[]\n\n[GlobalParams]\n    displacements = 'disp_x disp_y disp_z'\n[]\n\n[Kernels]\n    [heat_cond]\n        type = HeatConduction\n        variable = temp\n    []\n    [heat_source]\n        type = HeatSource\n        variable = temp\n        value = 6.6e7\n    []\n    [heat_derivative]\n        type = HeatConductionTimeDerivative\n        variable = temp\n    []\n[]\n\n[Modules/TensorMechanics/Master]\n    [./all]\n        strain = FINITE\n        add_variables = true\n        eigenstrain_names = eigenstrain\n    [../]\n[]\n\n[BCs]\n    [temp_outer]\n        type = DirichletBC\n        boundary = outer\n        value = 400.0\n        variable = temp\n    []\n    [top_z]\n        type = DirichletBC\n        variable = disp_z\n        boundary = 101\n        value = 0.0\n    []\n    [bottom_z]\n        type = DirichletBC\n        variable = disp_z\n        boundary = 100\n        value = 0.0\n    []\n    [./presure_x]\n        type = Pressure\n        variable = disp_x\n        boundary = outer\n        factor = 1E6\n    [../]\n    [./presure_y]\n        type = Pressure\n        variable = disp_y\n        boundary = outer\n        factor = 1E6\n    [../]\n    [./presure_z]\n        type = Pressure\n        variable = disp_z\n        boundary = outer\n        factor = 1E6\n    [../]\n[]\n\n[Materials]\n    [heat]\n        type = HeatConductionMaterial\n        specific_heat = 299.6\n        thermal_conductivity = 17\n    []\n    [density]\n        type = GenericConstantMaterial\n        prop_names = density\n        prop_values = 6.6E3\n    []\n\n    [elasticity_tensor]\n        type = ComputeIsotropicElasticityTensor\n        youngs_modulus = 1e10\n        poissons_ratio = 0.345\n    []\n    [elastic_strain]\n        type = ComputeFiniteStrainElasticStress\n    []\n    [thermal_expansion_strain]\n        type = ComputeThermalExpansionEigenstrain\n        stress_free_temperature = 298.0\n        thermal_expansion_coeff = 1.3e-5\n        temperature = temp\n        eigenstrain_name = eigenstrain\n    []\n[]\n\n[Functions]\n    [temperature_load]\n        type = ParsedFunction\n        value = t*500+300.0\n    []\n[]\n\n[Postprocessors]\n    [./strainTheta]\n        type = ElementAverageValue\n        variable = strain_theta\n    [../]\n    [./stressTheta]\n        type = ElementAverageValue\n        variable = stress_theta\n    [../]\n[]\n\n[Executioner]\n    type = Transient\n    solve_type = 'PJFNK'\n    start_time = 0.0\n    dt = 0.1\n    end_time = 3.0\n[]\n\n[Outputs]\n    exodus = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/20683",
          "updatedAt": "2022-09-20T13:29:45Z",
          "publishedAt": "2022-03-31T03:22:54Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou forgot\n        temperature = temp\nin the tensor mechanics action parameter.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20683#discussioncomment-2475363",
                  "updatedAt": "2022-09-22T04:43:28Z",
                  "publishedAt": "2022-03-31T05:34:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "i can't understand i have write\n[thermal_expansion_strain]\n        type = ComputeThermalExpansionEigenstrain\n        stress_free_temperature = 298.0\n        thermal_expansion_coeff = 1.3e-5\n        temperature = temp\n        eigenstrain_name = eigenstrain\n    []\n\nis other somewhere?",
                          "url": "https://github.com/idaholab/moose/discussions/20683#discussioncomment-2475708",
                          "updatedAt": "2022-09-22T04:43:28Z",
                          "publishedAt": "2022-03-31T06:40:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KhaledNabilSharafeldin"
                          },
                          "bodyText": "I think that's what @GiudGiud meant\n[Modules/TensorMechanics/Master]\n    [./all]\n        temperature = temp\n        strain = FINITE\n        add_variables = true\n        eigenstrain_names = eigenstrain\n    [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/20683#discussioncomment-2478955",
                          "updatedAt": "2022-09-22T04:43:28Z",
                          "publishedAt": "2022-03-31T14:49:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/20683#discussioncomment-2482418",
                          "updatedAt": "2022-09-22T04:43:31Z",
                          "publishedAt": "2022-04-01T01:09:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Raspberry Pi Cluster Docker Swarm",
          "author": {
            "login": "ats5662"
          },
          "bodyText": "Hey everyone,\nI recently started working on a side project trying to figure out how to run MOOSE simulations on a cluster of Raspberry Pis. I got my inspiration for this from LANL's 750 node Raspberry Pi cluster. Anyway, I am currently trying to use Docker Swarm to handle the load balancing between the nodes, but I am stuck on not being able to deploy the container as a swarm service. Has anyone done this before or have advice on how to proceed? More details below\nStep 1\nBuild docker image of MOOSE specifically for arm v7. Docker hub link below, I have been able to run this on a single raspberry pi without issues. The operating system is Raspberry Pi OS Lite.\nhttps://hub.docker.com/repository/docker/ats5662/moose_armv7_docker_image\nStep 2\nCreate swarm on 4 node Raspberry Pi cluster\nsudo docker swarm init --advertise-addr <node 1 IP address> # run on node 1\nsudo docker swarm join-token manager # add another manager\nsudo docker swarm join <manager token> # add node 2 as manager\nsudo docker swarm join <worker token> # add node 3 as worker\nsudo docker swarm join <worker token> # add node 4 as worker\nsudo docker node ls # check node list\nStep 3\nPull docker image on node 1\nsudo docker pull ats5662/moose_armv7_docker_image\nStep 4\nCreate docker service\nsudo docker service create --name MOOSE  ats5662/moose_armv7_docker_image\nI am getting the following error/output - this will loop until I stop it\noverall progress: 0 out of 1 tasks\n1/1: preparing [=================================>                 ]\nverify: Detected task failure --> Fail\nI am not sure what's wrong because the error message doesn't provide helpful info. If anyone has suggestions on what to do next, it would be greatly appreciated. I am new to docker and docker swarm, so if I am making any rookie mistakes or have a misunderstanding, I apologize. Let me know if additional info is needed. Thanks!",
          "url": "https://github.com/idaholab/moose/discussions/20149",
          "updatedAt": "2022-08-25T12:03:23Z",
          "publishedAt": "2022-01-27T19:14:37Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@dschwen has experience on MOOSE for raspberry Pi\n@milljm for comments on docker & MOOSE\nI'd be concerned with using MPI with docker but have no experience on this",
                  "url": "https://github.com/idaholab/moose/discussions/20149#discussioncomment-2084049",
                  "updatedAt": "2022-08-25T12:03:33Z",
                  "publishedAt": "2022-01-31T19:15:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@loganharbour knows about the docker build a lot too",
                          "url": "https://github.com/idaholab/moose/discussions/20149#discussioncomment-2281699",
                          "updatedAt": "2022-08-25T12:04:11Z",
                          "publishedAt": "2022-03-02T16:23:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "This seems more like a docker-not-giving-you-any-useful-information issue. Take a look at https://stackoverflow.com/questions/53222530/getting-detected-task-failure-for-some-images-while-creating-docker-service; looks like you should be able to get more info from the logs?",
                  "url": "https://github.com/idaholab/moose/discussions/20149#discussioncomment-2282590",
                  "updatedAt": "2022-08-25T12:04:11Z",
                  "publishedAt": "2022-03-02T18:49:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ats5662"
                          },
                          "bodyText": "Thank you for this information. I ended up dropping the docker swarm approach in favor of the Slurm Workload Manager & openMPI. I think many real HPCs use similar programs?\nThese three articles do a pretty good job showing most of the setup process\nPart 1: https://glmdev.medium.com/building-a-raspberry-pi-cluster-784f0df9afbd\nPart 2: https://glmdev.medium.com/building-a-raspberry-pi-cluster-aaa8d1f3d2ca\nPart 3: https://glmdev.medium.com/building-a-raspberry-pi-cluster-f5f2446702e8\nJob submission: https://hprc.tamu.edu/files/training/2021/Fall/Slurm_Job_Scheduling_2021_fall.pdf\nI haven't fully tested it out yet, but hopefully will in the coming weeks after school gets out for the summer.",
                          "url": "https://github.com/idaholab/moose/discussions/20149#discussioncomment-2481845",
                          "updatedAt": "2022-08-25T12:04:11Z",
                          "publishedAt": "2022-03-31T22:38:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "BarrierFunctionMaterial with coefficients",
          "author": {
            "login": "MScKarl"
          },
          "bodyText": "Hi!\nI am in the process of learning MOOSE, but I have a question.\nUsing MOOSE BarrierFunctionMaterial with g_order high, (g(\u03b7) = \u03b7^2(1\u2212\u03b7 ^2) ^2). Is it possible, in a straightforward way, to add coefficients in front of the \u03b7-term, where one of the terms needs to be space-depended?\nAll help and explanation are very much appreciated.\nBest regards\nKarl",
          "url": "https://github.com/idaholab/moose/discussions/20667",
          "updatedAt": "2022-11-02T09:47:36Z",
          "publishedAt": "2022-03-30T09:51:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI looked at the parameters and it doesnt look like it.\nI suggest you use a ParsedMaterial to add this prefactor:\nhttps://mooseframework.inl.gov/source/materials/ParsedMaterial.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20667#discussioncomment-2471200",
                  "updatedAt": "2022-11-02T09:47:36Z",
                  "publishedAt": "2022-03-30T15:50:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MScKarl"
                          },
                          "bodyText": "Thank you for your answer. If I\u2019ve understood correctly, then I can define it as I\u2019ve done it below, I just need to rewrite the math function into a MOOSE function? But how do I define spatial dependence of the order parameter that looks like:  g/2(\u2207\u03b7)^2 as a coefficient?\n[./f_eta]\n  type = ParsedMaterial\n  f_name = f_eta # the name of the function\n  args = 'alpha beta gamma' # here is where a define the coefficients\n  function =  Ft[\u03b7] = \u222b[ g/2(\u2207\u03b7)^2 + (\u03b1/2)\u03b7^2 + (\u03b2/4)\u03b7^4+ (\u03b3/6)\u03b7^6 ]dr\n\n  outputs = exodus\n[../]\n\nI apologize if my questions are somewhat strange or trivial, but I\u2019m very new to MOOSE, but excited to learn.\nThanks again for all the help.",
                          "url": "https://github.com/idaholab/moose/discussions/20667#discussioncomment-2481041",
                          "updatedAt": "2022-11-02T09:47:40Z",
                          "publishedAt": "2022-03-31T19:52:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nPlease see the discussion in this post for how to get gradients of material properties.\n#20628\nBasically you will have to propagate derivatives, starting from the gradients of the primary variables.\nThen once you have defined a gradient of a material property you can use it in a ParsedMaterial as part of the prefactor\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/20667#discussioncomment-2481098",
                          "updatedAt": "2022-11-02T09:47:45Z",
                          "publishedAt": "2022-03-31T19:59:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Deprecation warnings after mamba update",
          "author": {
            "login": "GiudGiud"
          },
          "bodyText": "Bug Description\n/Users/giudgl/projects/moose/framework/build/header_symlinks/InfixIterator.h:20:17: warning: 'iterator<std::output_iterator_tag, void, void, void, void>' is deprecated [-Wdeprecated-declarations]\n  : public std::iterator<std::output_iterator_tag, void, void, void, void>\n                ^\n/Users/giudgl/mambaforge3/envs/moose/bin/../include/c++/v1/__iterator/iterator.h:27:29: note: 'iterator<std::output_iterator_tag, void, void, void, void>' has been explicitly marked deprecated here\nstruct _LIBCPP_TEMPLATE_VIS _LIBCPP_DEPRECATED_IN_CXX17 iterator\n                            ^\n/Users/giudgl/mambaforge3/envs/moose/bin/../include/c++/v1/__config:1016:39: note: expanded from macro '_LIBCPP_DEPRECATED_IN_CXX17'\n#  define _LIBCPP_DEPRECATED_IN_CXX17 _LIBCPP_DEPRECATED\n                                      ^\n/Users/giudgl/mambaforge3/envs/moose/bin/../include/c++/v1/__config:993:48: note: expanded from macro '_LIBCPP_DEPRECATED'\n#    define _LIBCPP_DEPRECATED __attribute__ ((deprecated))\n                                               ^\n\nSteps to Reproduce\nmamba update --all on mac then build moose\nImpact\nNo impact so far I just saw this",
          "url": "https://github.com/idaholab/moose/discussions/20687",
          "updatedAt": "2022-03-31T16:17:37Z",
          "publishedAt": "2022-03-31T05:04:28Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Did you try a clean install?",
                  "url": "https://github.com/idaholab/moose/discussions/20687#discussioncomment-2479493",
                  "updatedAt": "2022-03-31T15:53:46Z",
                  "publishedAt": "2022-03-31T13:51:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "You need to update to current devel. I fixed that iterator during the last large update.",
                  "url": "https://github.com/idaholab/moose/discussions/20687#discussioncomment-2479515",
                  "updatedAt": "2022-03-31T15:56:29Z",
                  "publishedAt": "2022-03-31T15:56:19Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok sounds good. I rebased that branch recently but not recently enough it seems",
                          "url": "https://github.com/idaholab/moose/discussions/20687#discussioncomment-2479531",
                          "updatedAt": "2022-03-31T15:58:43Z",
                          "publishedAt": "2022-03-31T15:58:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "reusing the Jacobian",
          "author": {
            "login": "aaelmeli"
          },
          "bodyText": "Hi\nI have a 3D steady-state elasticity problem that involves several coupled variables (6 variables). I used AD for computing the Jacobian. The solver is defined as follows:\n[Executioner]\n    type = Steady\n    solve_type=LINEAR\n    petsc_options_iname = ' -pc_type'\n    petsc_options_value = 'lu'\n[]\n\nNow, if I have a second problem that has the same Jacobian but a different residual, Can I recover the Jacobian from the exodus file of the first problem and reuse it?",
          "url": "https://github.com/idaholab/moose/discussions/20684",
          "updatedAt": "2022-06-11T11:42:23Z",
          "publishedAt": "2022-03-31T03:52:34Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWe dont save the Jacobian to exodus. I doubt we save it to Checkpoint either. @friedmud might know\nhttps://mooseframework.inl.gov/source/outputs/Checkpoint.html isnt very explicit, I might add to it once we resolve this.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20684#discussioncomment-2475187",
                  "updatedAt": "2022-06-11T11:42:25Z",
                  "publishedAt": "2022-03-31T04:48:40Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adding a variable within an action",
          "author": {
            "login": "KhaledNabilSharafeldin"
          },
          "bodyText": "Hello, I'm trying to add a bunch of variables within an action, this is a code snippet of how i'm doing it within the action under _current_task == \"add_variable\" in act()\nfor some reason, when I assign a kernel for any of these variables i get an error that the variable does not exist\nthis is confirmed by _problem->hasVariable(variable_name) which I run right after adding it to the variable.\nInputParameters params = _factory.getValidParams(\"MooseVariableBase\");\nparams.set<bool>(\"use_dual\") = true;\nparams.set<MooseEnum>(\"family\") = \"SCALAR\";\nparams.set<MooseEnum>(\"order\") = \"FIRST\";\nauto fe_type = AddVariableAction::feType(params);\nauto var_type = AddVariableAction::variableType(fe_type);\n_problem->addVariable(var_type, variable_name, params);\n\nany suggestions of what could be the problem?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/20666",
          "updatedAt": "2022-08-16T22:43:19Z",
          "publishedAt": "2022-03-30T01:10:10Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "KhaledNabilSharafeldin"
                  },
                  "bodyText": "if the \"family\" param is changed to LAGRANGE, it seems to work.\nany idea on how to initialise a SCALAR var?",
                  "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2470296",
                  "updatedAt": "2022-08-16T22:43:22Z",
                  "publishedAt": "2022-03-30T14:00:10Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "vanwdani"
                          },
                          "bodyText": "I follow this procedure that should work for any order or family.\n    {\n      auto params = _factory.getValidParams(\"MooseVariable\");\n      const bool second = _problem->mesh().hasSecondOrderElements();\n      if (!second)\n        _order = \"FIRST\";\n      params.set<MooseEnum>(\"order\") = _order;\n      params.set<MooseEnum>(\"family\") = _family;\n      params.set<std::vector<std::string>>(\"control_tags\") = {\"Variables\"};\n\n      _problem->addVariable(\"MooseVariable\", \"variable_name\", params);\n    }",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2470669",
                          "updatedAt": "2022-08-16T22:43:22Z",
                          "publishedAt": "2022-03-30T14:42:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KhaledNabilSharafeldin"
                          },
                          "bodyText": "I gave this a shot, but didnt work either.\nI tried setting the type manually to \"MooseScalarVariable\" which auto var_type = AddVariableAction::variableType(fe_type); should determine on its own.\ni tried _problem->addScalarVariable(var_name, _order, _scaling_factor, empty_vectorSubdomainID_ptr), adding the last parameter just adds the extra \"block\" parameter.\nlast thing I tried is getting all the SubdomainIDs _problem->mesh().meshSubdomains(); then getting the corresponding names in a vector _problem->mesh().getSubdomainName(subdomainID) and adding the parameter \"block\".... but again! to no avail, still doesn't work!\nit seems to be a problem with scalar family, when i changed it to LAGRANGE , it did set up the variables correctly.\nstill not sure where the problem is.\nappreciate the help though!",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2470988",
                          "updatedAt": "2022-08-16T22:43:22Z",
                          "publishedAt": "2022-03-30T15:24:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vanwdani"
                          },
                          "bodyText": "addScalarVariable is deprecated and the use of addVariable(var_type, var_name, params) is recommended.  The block should be a parameter of the type.  Have you tried without params.set<bool>(\"use_dual\") = true?",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2471183",
                          "updatedAt": "2022-08-16T22:43:23Z",
                          "publishedAt": "2022-03-30T15:48:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this should work. Does it not?\n    auto lm_params = _factory.getValidParams(\"MooseVariableScalar\");\n    lm_params.set<MooseEnum>(\"family\") = \"scalar\";\n    lm_params.set<MooseEnum>(\"order\") = \"first\";\n\n    _problem->addVariable(\"MooseVariableScalar\", \"lambda\", lm_params);",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2471258",
                          "updatedAt": "2022-08-16T22:43:45Z",
                          "publishedAt": "2022-03-30T15:58:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KhaledNabilSharafeldin"
                          },
                          "bodyText": "@GiudGiud no it doesn't but if i change the family it does work just fine\nerror for scalar variable:\n*** ERROR ***\nScalar variable 'RVEBCACTION_LM0_dof0' does not exist in this system",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2471534",
                          "updatedAt": "2022-08-16T22:43:45Z",
                          "publishedAt": "2022-03-30T16:34:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So when you change the family, you change the family of both the variable you are adding and the family that is expected by the kernel?",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2471558",
                          "updatedAt": "2022-08-16T22:43:48Z",
                          "publishedAt": "2022-03-30T16:36:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KhaledNabilSharafeldin"
                          },
                          "bodyText": "addScalarVariable is deprecated and the use of addVariable(var_type, var_name, params) is recommended. The block should be a parameter of the type. Have you tried without params.set<bool>(\"use_dual\") = true?\n\nyes I was just testing various things to see what works, and yes I tried without \"use_dual\", doesnt make any difference.\nand yes i did use the param which is std::vector, i think it'll give a compile error if do otherwise.",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2471567",
                          "updatedAt": "2022-08-16T22:43:48Z",
                          "publishedAt": "2022-03-30T16:37:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KhaledNabilSharafeldin"
                          },
                          "bodyText": "So when you change the family, you change the family of both the variable you are adding and the family that is expected by the kernel?\n\nNo, the kernel is a scalar kernel, but what happens is that all these NonlinearVariables do not have a variable and I am being prompted to add at least one kernel for them. that's how I know that at least they're registered for LAGRANGE family.\nfor scalar, even though i'm not adding it to a kernel yet, it prompts me that the variable does not exist",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2471625",
                          "updatedAt": "2022-08-16T22:43:48Z",
                          "publishedAt": "2022-03-30T16:45:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KhaledNabilSharafeldin"
                          },
                          "bodyText": "ok, adding the scalar variable works fine, but not adding a scalar kernel to a scalar variable give off the error stated before instead of the case with normal variables saying that there should be at least one kernel for that variable.\nThanks again for the help @vanwdani @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2471889",
                          "updatedAt": "2022-08-16T22:43:50Z",
                          "publishedAt": "2022-03-30T17:23:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ah ok. The kernel_coverage_check for scalar variables has only been implemented for finite volume I think.\nThat is a confusing error message that you got. I ll create an issue. Thanks for reporting it",
                          "url": "https://github.com/idaholab/moose/discussions/20666#discussioncomment-2471935",
                          "updatedAt": "2022-08-16T22:43:50Z",
                          "publishedAt": "2022-03-30T17:30:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Barrier Function Material of order 6 with defined parameters",
          "author": {
            "login": "MScKarl"
          },
          "bodyText": "Hi!\nI am completely new to MOOSE as a simulation tool, and I have a question related to a project I am working on.\nUsing the BarrierFunctionMaterial with g_order high, I am only getting a fourth order polynomial, is there a way for me to define this for a sixth order polynomial and also define the different parameters? Otherwise is there some other kind of work around I can use to solve this problem?\nAll help and explanation is appreciated. Thanks beforehand.\nBest regards\nKarl",
          "url": "https://github.com/idaholab/moose/discussions/20557",
          "updatedAt": "2022-06-01T14:03:27Z",
          "publishedAt": "2022-03-15T12:46:06Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "You could just use a DerivativeParsedMaterial to provide the barrier function.",
                  "url": "https://github.com/idaholab/moose/discussions/20557#discussioncomment-2364799",
                  "updatedAt": "2022-06-01T14:03:30Z",
                  "publishedAt": "2022-03-15T12:48:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MScKarl"
                          },
                          "bodyText": "Thank you for your answer. If a could ask a follow-up question, it would be very much appreciated.\nUsing the BarrierFunctionMaterial with g_order high, (g(\u03b7) = \u03b7^2(1\u2212\u03b7 ^2) ^2). Is it possible, in a straightforward way, to add coefficients in front of the \u03b7-term, where one of the terms needs to be space-depended?\nBest regards",
                          "url": "https://github.com/idaholab/moose/discussions/20557#discussioncomment-2471076",
                          "updatedAt": "2022-06-01T14:03:46Z",
                          "publishedAt": "2022-03-30T15:33:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "See my answer in your post. Daniel's answer also applies to this imo",
                          "url": "https://github.com/idaholab/moose/discussions/20557#discussioncomment-2471234",
                          "updatedAt": "2022-06-01T14:03:52Z",
                          "publishedAt": "2022-03-30T15:55:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}