{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yM1QwOTowMzozMy0wNTowMM4Aa5ai"
    },
    "edges": [
      {
        "node": {
          "title": "Mesh refinement",
          "author": {
            "login": "PEI0214"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello\uff0c\nI refined part of the mesh. Apply pressure to the top. The results looked a little strange. The refined mesh seems to be separated from the unrefined mesh. What causes this? Are there any good suggestions for this problem?\nThe initial mesh, the refined mesh and the results are as follows:\n\nmesh and result\ninitial mesh\n\nrefined mesh\n\nresult",
          "url": "https://github.com/idaholab/moose/discussions/28694",
          "updatedAt": "2024-09-26T04:25:43Z",
          "publishedAt": "2024-09-24T12:30:56Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyour initial mesh is not attached (not conformal). It does not improve with refinement.\nYou can see it where you drew your first red circle in the first page",
                  "url": "https://github.com/idaholab/moose/discussions/28694#discussioncomment-10738579",
                  "updatedAt": "2024-09-24T12:35:40Z",
                  "publishedAt": "2024-09-24T12:35:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "PEI0214"
                          },
                          "bodyText": "The initial mesh is the first diagram. This is the mesh refined from the upper part of the initial mesh.",
                          "url": "https://github.com/idaholab/moose/discussions/28694#discussioncomment-10738904",
                          "updatedAt": "2024-09-24T13:01:18Z",
                          "publishedAt": "2024-09-24T13:01:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I know\n\nThe refined mesh seems to be separated from the unrefined mesh\n\nit was already separated in the initial mesh.\nI dont know what you used for mesh generation but it did not attach the top and bottom parts. Otherwise on the left and right of the first pictures we would see nodes being shared by both parrts",
                          "url": "https://github.com/idaholab/moose/discussions/28694#discussioncomment-10738994",
                          "updatedAt": "2024-09-24T13:09:24Z",
                          "publishedAt": "2024-09-24T13:09:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PEI0214"
                          },
                          "bodyText": "The initial mesh is not separated. The first image looks separated because of the Angle of the screenshot. It actually looks like this:",
                          "url": "https://github.com/idaholab/moose/discussions/28694#discussioncomment-10739403",
                          "updatedAt": "2024-09-24T13:40:09Z",
                          "publishedAt": "2024-09-24T13:40:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what do the mesh diagnostics say?\nhttps://mooseframework.inl.gov/source/meshgenerators/MeshDiagnosticsGenerator.html",
                          "url": "https://github.com/idaholab/moose/discussions/28694#discussioncomment-10739430",
                          "updatedAt": "2024-09-24T13:42:48Z",
                          "publishedAt": "2024-09-24T13:42:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PEI0214"
                          },
                          "bodyText": "Thank you for your answer. I figured out what the problem was.",
                          "url": "https://github.com/idaholab/moose/discussions/28694#discussioncomment-10758790",
                          "updatedAt": "2024-09-26T04:25:44Z",
                          "publishedAt": "2024-09-26T04:25:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Installation issus of MOOSE in HPC",
          "author": {
            "login": "eric199405"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nDear MOOSE team,\nI am installing MOOSE in the HPC at Singapore (NSCC). The module list is as follows:\n\ncraype-x86-rome          5) libfabric/1.11.0.4.125   9) cray-pals/1.1.6         13) openmpi/4.1.5-gcc11\nperftools-base/22.04.0   6) craype-network-ofi      10) PrgEnv-gnu/8.3.3        14) git/2.39.2\ncraype/2.7.15            7) cray-mpich/8.1.15       11) python/3.12.1-gcc11     15) gcc/12.3.0-nscc\ncray-dsmml/0.2.2         8) cray-libsci/21.08.1.2   12) cmake/3.23.1            16) cray-python/3.9.7.1\n\nThe installation process is smooth. However, When I run the final step\n./run_tests -j 6\nThe following error messages occurs:\nmisc/check_error.ics_missing_variable: Working Directory: /home/users/nus/guozixu/projects/moose/test/tests/misc/check_error\nmisc/check_error.ics_missing_variable: Running command: /home/users/nus/guozixu/projects/moose/test/moose_test-opt -i ic_variable_not_specified.i --error --error-override --libtorch-device cpu\nmisc/check_error.ics_missing_variable: free(): invalid pointer\nmisc/check_error.ics_missing_variable: ################################################################################\nmisc/check_error.ics_missing_variable:\nmisc/check_error.ics_missing_variable: Unable to match the following pattern against the program's output:\nmisc/check_error.ics_missing_variable:\nmisc/check_error.ics_missing_variable: missing required parameter 'ICs/u_ic/variable'\nmisc/check_error.ics_missing_variable:\nmisc/check_error.ics_missing_variable: ################################################################################\nmisc/check_error.ics_missing_variable: Tester failed, reason: EXPECTED ERROR MISSING\nmisc/check_error.ics_missing_variable:\nmisc/check_error.ics_missing_variable ........................................ FAILED (EXPECTED ERROR MISSING)\nRan 51 tests in 58.6 seconds. Average test time 4.3 seconds, maximum test time 5.7 seconds.\n0 passed, 283 skipped, 0 pending, 51 FAILED\nMAX FAILURES REACHED\nrunWorker Exception: Traceback (most recent call last):\nFile \"/home/users/nus/guozixu/projects/moose/python/TestHarness/schedulers/Scheduler.py\", line 456, in runJob\nself.queueJobs(jobs, j_lock)\nFile \"/home/users/nus/guozixu/projects/moose/python/TestHarness/schedulers/Scheduler.py\", line 257, in queueJobs\nself.status_pool.apply_async(self.jobStatus, (job, jobs, j_lock))\nFile \"/opt/cray/pe/python/3.9.7.1/lib/python3.9/multiprocessing/pool.py\", line 455, in apply_async\nself._check_running()\nFile \"/opt/cray/pe/python/3.9.7.1/lib/python3.9/multiprocessing/pool.py\", line 350, in _check_running\nraise ValueError(\"Pool not running\")\nValueError: Pool not running\nrunWorker Exception: Traceback (most recent call last):\nFile \"/home/users/nus/guozixu/projects/moose/python/TestHarness/schedulers/Scheduler.py\", line 456, in runJob\nself.queueJobs(jobs, j_lock)\nFile \"/home/users/nus/guozixu/projects/moose/python/TestHarness/schedulers/Scheduler.py\", line 257, in queueJobs\nself.status_pool.apply_async(self.jobStatus, (job, jobs, j_lock))\nFile \"/opt/cray/pe/python/3.9.7.1/lib/python3.9/multiprocessing/pool.py\", line 455, in apply_async\nself._check_running()\nFile \"/opt/cray/pe/python/3.9.7.1/lib/python3.9/multiprocessing/pool.py\", line 350, in _check_running\nraise ValueError(\"Pool not running\")\nValueError: Pool not running\nCould you please help me fix this issue?\nThanks",
          "url": "https://github.com/idaholab/moose/discussions/28710",
          "updatedAt": "2024-09-26T06:15:22Z",
          "publishedAt": "2024-09-26T02:51:46Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Segmentation fault (core dumped)",
          "author": {
            "login": "PEI0214"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello\uff0c\nWhen I use Adaptivity and set 'block' in Indicators, I get the following error:\nSegmentation fault (core dumped)\n\nThis error does not occur when 'block' is not used. What causes this? Is there a way to solve this problem? My input file is as follows:\n[Mesh]\n  [box]\n    type = GeneratedMeshGenerator\n    dim = 3\n    nx = 10\n    ny = 10\n    nz = 10\n    xmin = 0\n    xmax = 1\n    ymin = 0\n    ymax = 1\n    zmin = 0\n    zmax = 1\n  []\n  [box1]\n    type = SubdomainBoundingBoxGenerator\n    input = box\n    block_id = 1\n    bottom_left = '0 0.5 0'\n    top_right = '1 1 1'\n  []\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n[]\n\n[Variables]\n  [disp_x]\n  []\n  [disp_y]\n  []\n  [disp_z]\n  []\n[]\n\n[Physics/SolidMechanics/QuasiStatic]\n  [./all]\n    strain = finite\n    add_variables = true\n    generate_output = 'stress_xx stress_zz'\n  [../]\n[]\n\n[Functions]\n  [zhouya]\n    type = PiecewiseLinear\n    x = '0  3600'\n    y = '0  1e6'\n  []\n[]\n\n# ===== Boundary Conditions =====\n[BCs]\n  [archor_x]\n    type = DirichletBC\n    boundary = 'bottom'\n    variable = disp_x\n    value = 0\n  []\n\n  [archor_y]\n    type = DirichletBC\n    boundary = 'bottom'\n    variable = disp_y\n    value = 0\n  []\n\n  [archor_z]\n    type = DirichletBC\n    boundary = 'bottom'\n    variable = disp_z\n    value = 0\n  []\n\n  [Pressure]\n    [load]\n      boundary = 'top'\n      function = 'zhouya'\n    []\n  []\n[]\n\n# ===== Materials (linear-elastic to keep it simple) =====\n[Materials]\n  [elasticity_tensor1]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 50E6 # 50 MPa\n    poissons_ratio = 0.3\n  []\n\n  [stress]\n    type = ComputeFiniteStrainElasticStress\n  []\n\n  [density1]\n    type = GenericConstantMaterial\n    prop_names = density\n    prop_values = 2000\n  []\n[]\n\n[Adaptivity]\n  marker = errorfrac\n  max_h_level = 4\n  [Indicators]\n    [error]\n      type = GradientJumpIndicator\n      variable = disp_y\n      block = '0'\n    []\n  []\n  [Markers]\n    [errorfrac]\n      type = ErrorFractionMarker\n      refine = 0.5\n      indicator = error\n      block = '0'\n    []\n  []\n[]\n\n# ===== Executioner =====\n[Executioner]\n  type = Transient\n  automatic_scaling = true\n\n  end_time = 2500\n  dt = 100\n\n  solve_type = 'PJFNK'\n\n  nl_abs_tol = 1E-5\n  nl_max_its = 400\n\n  l_tol = 1E-8\n  l_max_its = 200\n[]\n\n[Outputs]\n  exodus = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/28678",
          "updatedAt": "2024-09-25T15:35:08Z",
          "publishedAt": "2024-09-21T12:34:40Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIf you use a comboMarker that is not block restricted, and use the block-restricted one inside the combo and a \"do-nothing\" for the other blocks, does it work?\nFor now the solution is to remove block\nEither way i ll investigate this next week to remove the seg fault\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28678#discussioncomment-10714716",
                  "updatedAt": "2024-09-22T13:49:10Z",
                  "publishedAt": "2024-09-21T19:56:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the fix is up in this PR #28681",
                          "url": "https://github.com/idaholab/moose/discussions/28678#discussioncomment-10718382",
                          "updatedAt": "2024-09-22T14:32:57Z",
                          "publishedAt": "2024-09-22T14:32:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PEI0214"
                          },
                          "bodyText": "Hello, is this problem still unresolved? Running the above file now results in the following error:\n===================================================================================\n=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\n=   PID 106588 RUNNING AT linux\n=   EXIT CODE: 9\n=   CLEANING UP REMAINING PROCESSES\n=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES\n===================================================================================\nYOUR APPLICATION TERMINATED WITH THE EXIT STRING: Segmentation fault (signal 11)\nThis typically refers to a problem with your application.\nPlease see the FAQ page for debugging suggestions",
                          "url": "https://github.com/idaholab/moose/discussions/28678#discussioncomment-10752746",
                          "updatedAt": "2024-09-25T15:08:45Z",
                          "publishedAt": "2024-09-25T15:04:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it s resolved in the PR. if you dont use the PR it s not",
                          "url": "https://github.com/idaholab/moose/discussions/28678#discussioncomment-10753132",
                          "updatedAt": "2024-09-25T15:35:08Z",
                          "publishedAt": "2024-09-25T15:35:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Path error after running conda activate moose",
          "author": {
            "login": "linearcoffeecup"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n I have consulted the Posting Guidelines.\n I have searched the Discussions Forum and MOOSE Framework Troubleshooting and have not found what I was looking for\n Q&A Getting Started is the most appropriate category for my question (trouble installing, beginner user, ...)\n\nIssue or question about MOOSE\nError Message after typing conda activate moose\nxcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun\nOther\nThis error message also shows up after running cd ~/projects/moose/test\n./run_tests -j 6.\nThis test also finds: ModuleNotFoundError: No module named 'hit'\nComputer\nMacOS Sonoma silicone\n(Optional) code in question / simulation log / errors\nNo response\nEncountering Errors? Please include diagnostic output\nNo response",
          "url": "https://github.com/idaholab/moose/discussions/28697",
          "updatedAt": "2024-09-24T16:36:55Z",
          "publishedAt": "2024-09-24T15:05:09Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nlooks like you need to install command line tools from xcode\nhttps://www.freecodecamp.org/news/install-xcode-command-line-tools/",
                  "url": "https://github.com/idaholab/moose/discussions/28697#discussioncomment-10740537",
                  "updatedAt": "2024-09-24T15:13:06Z",
                  "publishedAt": "2024-09-24T15:13:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "linearcoffeecup"
                          },
                          "bodyText": "Thank you.  I installed the command line tools and the path error went away.\nI ran the tests again.  There were failures for anything related to web_server_control (everything else passed or skipped).  Is this Ok or do these web_server_control failures need to be fixed?",
                          "url": "https://github.com/idaholab/moose/discussions/28697#discussioncomment-10741574",
                          "updatedAt": "2024-09-24T16:21:19Z",
                          "publishedAt": "2024-09-24T16:21:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no need to fix them for now",
                          "url": "https://github.com/idaholab/moose/discussions/28697#discussioncomment-10741708",
                          "updatedAt": "2024-09-24T16:30:41Z",
                          "publishedAt": "2024-09-24T16:30:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "linearcoffeecup"
                          },
                          "bodyText": "Than you for all your help.",
                          "url": "https://github.com/idaholab/moose/discussions/28697#discussioncomment-10741771",
                          "updatedAt": "2024-09-24T16:36:55Z",
                          "publishedAt": "2024-09-24T16:36:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Cohesive Zone Analysis: FEM Solution is not a smooth curve",
          "author": {
            "login": "AmanKumar0301"
          },
          "bodyText": "Hi all,\nIn cohesive zone method, I am trying to generate traction vs separation plot for mode-II loading. However the plot that I am getting is not a smooth curve. I am comparing it with the analytical plot of the traction separation law.\n\nCan someone help what may be the reason. I have already played with the 'viscosity' parameter under CZM material.\nFollowing is my input file:\n\n\n\n@arovinelli @jiangwen84 @GiudGiud\nIs it something to do with the solver controls in executioner?",
          "url": "https://github.com/idaholab/moose/discussions/28693",
          "updatedAt": "2024-09-24T13:52:55Z",
          "publishedAt": "2024-09-24T09:53:26Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis looks almost correct. Just a little bit of oscillations to remove.\nWhat does the convergence history look like? In the log of one of the noisy points.\nIs there any nested solve in a material property that could be less converged?",
                  "url": "https://github.com/idaholab/moose/discussions/28693#discussioncomment-10738110",
                  "updatedAt": "2024-09-24T11:48:06Z",
                  "publishedAt": "2024-09-24T11:48:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "AmanKumar0301"
                          },
                          "bodyText": "What does the convergence history look like?\n--> I am attaching the solution history somewhere between 1.6 seconds to 4 seconds when the curve has just started to drop in the first softening region.\n\n\n\n\nJust a little bit of oscillations to remove.\n-->Yes I want to remove those oscillations. I want the FEM solution curve to be smooth. Because for other similar problems the oscillation are causing significant result difference. I am attaching a curve for one such comparative analysis. See the following:\n\n\n\nIs there any nested solve in a material property that could be less converged?\nI did not understand this part. However please see the script that I have attached.\n\n\nThanks for your interest.",
                          "url": "https://github.com/idaholab/moose/discussions/28693#discussioncomment-10738290",
                          "updatedAt": "2024-09-24T12:11:30Z",
                          "publishedAt": "2024-09-24T12:09:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Oh I did not realize this was a single transient.\nThen the oscillations could be coming from the time integration scheme. You are using the default 1st order implicit Euler. Let's try BDF2 (scheme = bdf2 in the Executioner)",
                          "url": "https://github.com/idaholab/moose/discussions/28693#discussioncomment-10738341",
                          "updatedAt": "2024-09-24T12:15:21Z",
                          "publishedAt": "2024-09-24T12:15:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "except there is no time derivative term. So it's not that.",
                          "url": "https://github.com/idaholab/moose/discussions/28693#discussioncomment-10738533",
                          "updatedAt": "2024-09-24T12:31:55Z",
                          "publishedAt": "2024-09-24T12:31:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AmanKumar0301"
                          },
                          "bodyText": "I did try using scheme = bdf2 in the executioner.\nBut the results are exactly same. No change.",
                          "url": "https://github.com/idaholab/moose/discussions/28693#discussioncomment-10739562",
                          "updatedAt": "2024-09-24T13:52:55Z",
                          "publishedAt": "2024-09-24T13:52:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[Modules/TensorMechanics/Master] in tests and examples",
          "author": {
            "login": "jmeier"
          },
          "bodyText": "Dear Moose Community,\nAs far as I understand #25584, [Modules/TensorMechanics/...] should/has been renamed to [Modules/SolidMechanics/...]. In some of the examples and tests the old [Modules/TensorMechanics/...] is still showing up. I assume these examples/tests are still to be renamed?\nIf this is the case and you would like me to do so, can I try a PR that renames at least some of these examples/tests?\nDisclaimer: I suspect that this will reduce the test coverage somewhat.",
          "url": "https://github.com/idaholab/moose/discussions/28691",
          "updatedAt": "2024-09-24T13:09:09Z",
          "publishedAt": "2024-09-24T05:52:43Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIt was renamed to Physics/SolidMechanics. The \"Modules/\" is being abandoned in favor of grouping the large actions under Physics.\nA PR is welcome if you have time.\nCoverage should stay the same, the old syntax has been registered to the renamed action. Under the hood, the same code is used in both cases.",
                  "url": "https://github.com/idaholab/moose/discussions/28691#discussioncomment-10737938",
                  "updatedAt": "2024-09-24T11:27:27Z",
                  "publishedAt": "2024-09-24T11:27:27Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Reaction Force",
          "author": {
            "login": "manikumd22"
          },
          "bodyText": "Hi @GiudGiud ,\nI'm trying to evaluate the reaction force on the fixed boundary using the code described below. I'm getting an error\n\ufffd[31m\n*** ERROR ***\nThe following error occurred in the Problem 'MOOSE Problem' of type FEProblem.\n\nMaterial property 'stress', requested by 'TM_mech0' is not defined on block 0\nMaterial property 'Jacobian_mult', requested by 'TM_mech0' is not defined on block 0\nMaterial property 'stress', requested by 'TM_mech1' is not defined on block 0\nMaterial property 'Jacobian_mult', requested by 'TM_mech1' is not defined on block 0\nMaterial property 'stress', requested by 'res_x' is not defined on block 0\nMaterial property 'Jacobian_mult', requested by 'res_x' is not defined on block 0\nMaterial property 'stress', requested by 'res_y' is not defined on block 0\nMaterial property 'Jacobian_mult', requested by 'res_y' is not defined on block 0\n\ufffd[39m\n\n\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n[]\n\n\n[Mesh]\n  [gmg]\n    type = GeneratedMeshGenerator\n    dim = 2\n    nx = 2\n    ny = 2\n  []\n[]\n\n\n[AuxVariables]\n  [./resid_x]\n  [../]\n  [./resid_y]\n  [../]\n[]\n\n[Kernels]\n  [./res_y]\n    type = StressDivergenceTensors\n    component = 1\n    variable = disp_y\n    save_in = 'resid_y'\n  [../]\n  [./res_x]\n    type = StressDivergenceTensors\n    component =0\n    variable = disp_x\n    save_in = 'resid_x'\n  [../]\n[]\n\n\n[Modules]\n  [./TensorMechanics]\n    [./Master]\n      [./mech]\n        add_variables = true\n        strain = SMALL\n      [../]\n    [../]\n  [../]\n[]\n\n[BCs]\n  [leftx]\n    type = DirichletBC\n    boundary = left\n    variable = disp_x\n    value = 0.0\n  []\n  [lefty]\n    type = DirichletBC\n    boundary = left\n    variable = disp_y\n    value = 0.0\n  []\n  [pull_x1]\n    type = FunctionDirichletBC\n    boundary = right\n    variable = disp_x\n    function = '0.001*t'\n  []\n[]\n\n[Materials]\n  [stress]\n    type = ComputeNeoHookeanStress\n    lambda = 40\n    mu = 67\n  []\n  [compute_strain]\n    type = ComputeLagrangianStrain\n  []\n[]\n\n[Postprocessors]\n  [./resid_y]\n    type = NodalSum\n    variable = resid_y\n    boundary = 'left'\n  [../]\n  [./resid_x]\n    type = NodalSum\n    variable = resid_x\n    boundary = 'left'\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  line_search = none\n\n  nl_rel_tol = 1e-12\n  nl_abs_tol = 1e-10\n\n  # time control\n  start_time = 0.0\n  dt = 0.01\n  dtmin = 0.01\n  end_time = 0.2\n[]\n\n[Outputs]\n  csv = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/28689",
          "updatedAt": "2024-09-23T22:56:28Z",
          "publishedAt": "2024-09-23T21:32:59Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nUse Debug/show_material_props to see the material properties that are actually defined and see if the names are being matched appropriately between the consumers and producers of material properties\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28689#discussioncomment-10732068",
                  "updatedAt": "2024-09-23T22:56:28Z",
                  "publishedAt": "2024-09-23T22:56:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "RandomIC",
          "author": {
            "login": "manikumd22"
          },
          "bodyText": "Hi @GiudGiud\nI am working on generating the RandomIC. I want to assign each quad point a different Youngs modulus, by multiplying with RandomIC. I used this way to do that, but I'm getting an error.\n/storage/work/mvk6158/moose_directories/myApp/new_mesh1.i:33.7: invalid float syntax for parameter: Materials/elasticity1/youngs_modulus=10000*c\n#Tensor Mechanics tutorial: the basics\n#Step 1, part 1\n#2D simulation of uniaxial tension with linear elasticity\n[GlobalParams]\n    displacements = 'disp_x disp_y'\n[]\n  \n[Mesh]\n    file = manik_7.msh\n[]\n\n[ICs]\n  [./cIC]\n    type = RandomIC\n    variable = c\n    min = 0.01\n    max = 0.2\n  [../]\n[]\n  \n[Modules/TensorMechanics/Master]\n  [all]\n  add_variables = true\n  strain = small\n  generate_output = 'vonmises_stress stress_xx stress_yy strain_xx strain_yy'\n  []\n[]\n  \n[Materials]\n  [elasticity1]\n      type = ComputeIsotropicElasticityTensor\n      youngs_modulus = '10000*c'\n      poissons_ratio = 0.1\n  []\n  [./stress]\n      type = ComputeLinearElasticStress\n  [../]\n[]\n  \n[BCs]\n[./left]\n    type = DirichletBC\n    variable = disp_x\n    boundary = 'top bottom'\n    value = 0.0\n[../]\n[./bottom]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'top'\n    value = 1\n[../]\n[./top]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'bottom'\n    value = 0\n[../]\n[]\n  \n[Preconditioning]\n  [./SMP]\n      type = SMP\n      full = true\n  [../]\n[]\n\n\n[Executioner]\n  type = Steady\n  solve_type = 'NEWTON'\n  petsc_options = '-snes_ksp_ew'\n  petsc_options_iname = '-pc_type -sub_pc_type -pc_asm_overlap -ksp_gmres_restart'\n  petsc_options_value = 'asm lu 1 101'\n[]\n  \n[Outputs]\n  csv = false\n  exodus = true\n  file_base = ./inputfiles/manikcode_ir_out_new12\n[]",
          "url": "https://github.com/idaholab/moose/discussions/28666",
          "updatedAt": "2024-09-23T21:33:27Z",
          "publishedAt": "2024-09-19T14:33:24Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis error message\n\n/storage/work/mvk6158/moose_directories/myApp/new_mesh1.i:33.7: invalid float syntax for parameter: Materials/elasticity1/youngs_modulus=10000*c\n\ntells you it's expecting a float (a single number) but you are trying to pass some sort of parsed expression involving a variable.\nYou can't do that, but you can use a different material, namely this one\nhttps://mooseframework.inl.gov/source/materials/ADComputeVariableIsotropicElasticityTensor.html\nthis one expects material properties for the young modulus. You could use the ADParsedMaterial to perform this 10000 * c operation and set the material property",
                  "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10694441",
                  "updatedAt": "2024-09-19T14:38:59Z",
                  "publishedAt": "2024-09-19T14:38:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "manikumd22"
                          },
                          "bodyText": "Hi @GiudGiud\nIs this how should I define it?\nI defined this way and getting error?\n\ufffd[31m\n*** ERROR ***\nThe following error occurred in the Problem 'MOOSE Problem' of type FEProblem.\n\nVariable 'c' requested in initial condition 'cIC' does not exist.\ufffd[39m\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n\n[ICs]\n  [./cIC]\n    type = RandomIC\n    variable = c\n    min = 0.01\n    max = 0.2\n  [../]\n[]\n  \n  \n[Materials]\n  [compute_stress]\n    type = ComputeNeoHookeanStress\n    lambda = E_phys\n    mu = 6700\n  []\n  [E_phys]\n    type = ParsedMaterial\n    expression = \"4000*c\"\n    coupled_variables = 'mat_den'\n    property_name = E_phys\n  []\n  [./stress]\n      type = ComputeLinearElasticStress\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10695145",
                          "updatedAt": "2024-09-19T15:44:19Z",
                          "publishedAt": "2024-09-19T15:42:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "[E_phys]\ntype = ParsedMaterial\nexpression = \"4000*c\"\ncoupled_variables = 'c'\nproperty_name = E_phys\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10695159",
                          "updatedAt": "2024-09-19T15:44:09Z",
                          "publishedAt": "2024-09-19T15:44:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "and also add\n[AuxVariables]\n  [c]\n  []\n[]\n\nto create the variable",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10695166",
                          "updatedAt": "2024-09-19T15:44:46Z",
                          "publishedAt": "2024-09-19T15:44:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "manikumd22"
                          },
                          "bodyText": "Hi @GiudGiud\nThis has worked, but I used for this expression\n[Materials]\n[compute_stress]\ntype = Compute_NeoHookean\nlambda = 4000\nmu = 6700\nquad_points = '0.01761040545043226 0.06572292788290107 0.10094373878376559 0.14905626121623441 0.18427707211709893 0.23238959454956776 0.26761040545043224 0.31572292788290107 0.3509437387837656 0.3990562612162345 0.434277072117099 0.4823895945495678 0.5176104054504322  0.5657229278829011 0.6009437387837656 0.6490562612162344 0.6842770721170989 0.7323895945495679 0.7676104054504324 0.8157229278829011 0.8509437387837657 0.8990562612162345 0.934277072117099 0.9823895945495678'\nno_quad_points = 24\nstiff = E_phys\n\n[]\n[E_phys]\ntype = ParsedMaterial\nexpression = \"0c 0.04347826c 0.08695652c 0.13043478c 0.17391304c 0.2173913c 0.26086957c 0.30434783c 0.34782609c 0.39130435c 0.43478261c 0.47826087c 0.52173913c 0.56521739c 0.60869565c 0.65217391c 0.69565217c 0.73913043c 0.7826087c 0.82608696c 0.86956522c 0.91304348c 0.95652174c 1c\"\ncoupled_variables = 'c'\nproperty_name = E_phys\n[]\nIt showed some error\n\ufffd[31m\n*** ERROR ***\n/storage/work/mvk6158/moose_directories/myApp/parsed_mat.i:211.5: cannot convert field 'Materials/compute_stress/stiff' value 'E_phys' to float\n\ufffd[39m\nI wanted to  use this c at every gauss point in this way\nfor (int p = 0; p < 24; ++p) {\nif (MooseUtils::absoluteFuzzyEqual(_q_point_qp,  _quad_points[p]))\n{\nRankTwoTensor Cinv = (2 * _E[_qp] + RankTwoTensor::Identity()).inverse();\n_S[_qp] = (_lambda[_qp] * log(_F[_qp].det()) - _mu[_qp]) * Cinv +\n_mu[_qp] * RankTwoTensor::Identity();\n_C[_qp] =\n-2 * (stiff[qp]_lambda[_qp] * log(_F[_qp].det()) - _stiff[_qp]mu[qp]) * Cinv.times<i, k, l, j>(Cinv) +\nstiff[qp]*lambda[qp] * Cinv.times<i, j, k, l>(Cinv);\n}\n}",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10695621",
                          "updatedAt": "2024-09-19T16:33:34Z",
                          "publishedAt": "2024-09-19T16:31:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the Compute_NeoHookean material also expects a Real for stiff. If you want to use a material property, you ll need to modify that material to use that instead of the parameter",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10695647",
                          "updatedAt": "2024-09-19T16:34:09Z",
                          "publishedAt": "2024-09-19T16:34:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "manikumd22"
                          },
                          "bodyText": "Hi @GiudGiud\nGot it thank!\nOne thing I would like to know about the seed() in this,\nIf I want to define seed(0.2), seed(0.5), seed(0.8).\nWhat does it indicate and how to use in this ICs\n[ICs]\n[./cIC]\ntype = RandomIC\nvariable = c\nmin = 0\nmax = 1\n[../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10695950",
                          "updatedAt": "2024-09-19T17:09:06Z",
                          "publishedAt": "2024-09-19T17:09:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the seed is used to generate a different set of random numbers.",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10696310",
                          "updatedAt": "2024-09-19T17:52:31Z",
                          "publishedAt": "2024-09-19T17:52:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "manikumd22"
                          },
                          "bodyText": "Hi @GiudGiud,\nWith this, if I want an average of 0.5, 0.1, and 0.9. What changes should I make to get that average with this ICx\n[ICs]\n[./cIC]\ntype = RandomIC\nvariable = c\nmin = 0\nmax = 1\n[../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10696865",
                          "updatedAt": "2024-09-19T18:43:10Z",
                          "publishedAt": "2024-09-19T18:43:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you ll need to create a new object. The randomIC is not designed to obey an average value\nThe new object could use an average parameter and a distribution parameter to handle the randomness\nhttps://mooseframework.inl.gov/syntax/Distributions/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10696895",
                          "updatedAt": "2024-09-19T18:47:06Z",
                          "publishedAt": "2024-09-19T18:47:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "manikumd22"
                          },
                          "bodyText": "Hi @GiudGiud ,\nI tried this way but got the error\n*** ERROR ***\nA 'DistributionIC' is not a registered object.\nIf you are trying to find this object in a dynamically loaded library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\ufffd[39m\n[Distributions]\n[./beta_c]  # Change this to 'beta_c' to match the ICs block\ntype = Beta\nalpha = 1.9591684282393695\nbeta = 3.1004701483699475\n[../]\n[]\n[ICs]\n[./cIC]\ntype = DistributionIC\nvariable = c\ndistribution = beta_c  # Now correctly linked to the Beta distribution\n[../]\n[]\nIs this syntax correct for using the beta distribution for my problem?\nDo I need to change the rest of the code?",
                          "url": "https://github.com/idaholab/moose/discussions/28666#discussioncomment-10697050",
                          "updatedAt": "2024-09-19T19:01:42Z",
                          "publishedAt": "2024-09-19T19:01:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Embedding MOOSE into a C++ library",
          "author": {
            "login": "felixcrazzolara"
          },
          "bodyText": "First of all, thank you for providing and maintaining this wonderful piece of software!\nI would like to do reinforcement learning with MOOSE. Ideally, I'd like to have a Jupyter notebook to easily experiment with it. The Jupyter notebook should import some Python modules which in turn uses C++ code, either connecting the dots with Pybind11 or CPython.\nIs it easily feasible to embed MOOSE into a C++ library? I want to run a tensor_mechanics simulation. The RL agent decides in each timestep what forces to apply to the structure. Finally, I'd like to get all data immediately in memory. Nothing should be saved to CSV files or so.\nAlternatively, if MOOSE is really meant to be a standalone application, I could maybe inject some code that communicates with a Python server/client using UNIX/TCP sockets to pass data back and forth.\nWhat are your thoughts on this? What is the most natural approach to go for given the code structure of MOOSE?",
          "url": "https://github.com/idaholab/moose/discussions/27465",
          "updatedAt": "2024-09-23T16:33:53Z",
          "publishedAt": "2024-04-24T21:07:49Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWe have an optimization and a stochastic tools (linked with libtorch) module to perform these studies inside the framework, rather than calling MOOSE from Python. We do that internally because of performance concerns/\n\nI could maybe inject some code that communicates with a Python server/client using UNIX/TCP sockets to pass data back and forth.\n\nyou are welcome to do that. You can also work with the MooseServer class to perform these more dynamic communications\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27465#discussioncomment-9241535",
                  "updatedAt": "2024-04-26T21:03:07Z",
                  "publishedAt": "2024-04-26T21:03:07Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "felixcrazzolara"
                          },
                          "bodyText": "Thank you that sounds great! Also, for people trying to compile Moose with libtorch support, it worked for me by building it from source, but using the same conda environment as the one of Moose. Tried the everything in the official documentation of Moose on libtorch and some other stuff, but nothing of that worked out for me.",
                          "url": "https://github.com/idaholab/moose/discussions/27465#discussioncomment-9253595",
                          "updatedAt": "2024-04-28T17:01:38Z",
                          "publishedAt": "2024-04-28T17:01:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ze897c"
                          },
                          "bodyText": "Hi folks,\nWhat is the actual answer to \u201cIs it easily feasible to embed MOOSE into a C++ library?\u201d I have need to do something similar and for various reasons we are not inclined to develop within the MOOSE framework. If the suggested path is to use the MooseServer class, is there a good example to follow?\nEssentially what I would like to be able to do is to use MOOSE as a solver on a persistent mesh with material properties that are varied by the parent C++ library. I would like to keep MOOSE \u201crunning\u201d and let the parent non-MOOSE app control the flow. I hope this makes some sense. All suggestions are welcome. Thanks!\nMatt",
                          "url": "https://github.com/idaholab/moose/discussions/27465#discussioncomment-10727673",
                          "updatedAt": "2024-09-23T14:57:40Z",
                          "publishedAt": "2024-09-23T14:57:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nIt is feasible. I think the main difficulty will be working out the makefiles (or the dynamic loading). Is your project using make or cmake?\nMooseServer class will only go so far but it can be extended. Feel free to start with this solution for now if you don't want to work on the build system.\n\nI would like to keep MOOSE \u201crunning\u201d and let the parent non-MOOSE app control the flow. I hope this makes some sense.\n\nThis makes sense. This is not typically what we do when the other application is only computing properties. We typically have MOOSE run the show because of the time step decisions, the coupling to other apps, etc.\nBut the webservercontrol is a product of a project choosing to run the simulation from Python.\n\nis there a good example to follow?\n\nThere is a test here\nhttps://github.com/idaholab/moose/tree/next/test/tests/controls/web_server_control\n@loganharbour is there an example with the webserver control from the depletion project? I did not find one in Cardinal",
                          "url": "https://github.com/idaholab/moose/discussions/27465#discussioncomment-10728033",
                          "updatedAt": "2024-09-23T15:24:22Z",
                          "publishedAt": "2024-09-23T15:24:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "These are the best two references:\n\nhttps://mooseframework.inl.gov/source/controls/WebServerControl.html\nhttps://mooseframework.inl.gov/python/MooseControl/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/27465#discussioncomment-10728250",
                          "updatedAt": "2024-09-23T15:42:29Z",
                          "publishedAt": "2024-09-23T15:42:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ze897c"
                          },
                          "bodyText": "Hi folks.\nThank you VERY much for the prompt reply. I will start here.\nCheers!!\nMatt",
                          "url": "https://github.com/idaholab/moose/discussions/27465#discussioncomment-10728854",
                          "updatedAt": "2024-09-23T16:33:54Z",
                          "publishedAt": "2024-09-23T16:33:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Initial Residuals and Convergence in transient",
          "author": {
            "login": "Traiwit"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHi everyone,\nI'm running into a weird issue with my transient analysis in MOOSE. In each analysis, the first frame (like F001) starts off with a massive initial residual around 1e+13 and converges pretty smoothly. But then, the next frame (F002) starts much lower, around 1e+08, and just won't converge.\nEven weirder, if I kick off a brand new simulation using the end results of F001 as the starting point via IC, the first step (now F002) starts high again at 1e+13 and converges no problem. But the next one (F003)? Back to the same old problem. This keeps happening.\nSo, here's what I'm wondering:\n\nWhy does the first frame always start with a high residual when it\u2019s the first in an analysis but not when it's a subsequent frame?\nAny idea why this is happening or how to keep the residuals high like in the first frame for all steps?\n\nWould really appreciate any thoughts or tips on this.\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/28364",
          "updatedAt": "2024-09-23T14:03:33Z",
          "publishedAt": "2024-08-14T02:55:45Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nare you using automatic_scaling by any chance?",
                  "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10332359",
                  "updatedAt": "2024-08-14T02:59:21Z",
                  "publishedAt": "2024-08-14T02:59:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "those scaling factors are determined on the first step, and could be wildly wrong for the second step (with a lot of bad luck, this may be far fetched)",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10332363",
                          "updatedAt": "2024-08-14T03:00:09Z",
                          "publishedAt": "2024-08-14T03:00:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @GiudGiud, no automatic_scaling is applied\nmy simulation always starts very 1e13 at the very first step, which is good for convergence (via nl_rel_tol)",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10332433",
                          "updatedAt": "2024-08-14T03:07:52Z",
                          "publishedAt": "2024-08-14T03:07:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "which is good for convergence (via nl_rel_tol)\n\nwell that's kind of an artefact though? Does it get the residual as low as it gets it to in step2?\nIf you do step 1: 1e13 -> 1e5 (and cant go any lower) ->converged due to rel_tol\nstep 2 1e8 -> 1e5 (and cant go any lower) -> not converged\nthat would mean step 1 has the same problem as step2",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10332476",
                          "updatedAt": "2024-08-14T03:13:52Z",
                          "publishedAt": "2024-08-14T03:13:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "this is a very fair point\nrelaxing abs_nl_tol is probs one of the ways to fix this then",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10332553",
                          "updatedAt": "2024-08-14T03:28:05Z",
                          "publishedAt": "2024-08-14T03:28:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "assuming you still like the solution though.\nI find that scaling helps with these things. Either automatic or manual.\nHow many equations (variables) are you solving?",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10332592",
                          "updatedAt": "2024-08-14T03:33:51Z",
                          "publishedAt": "2024-08-14T03:33:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "just 1 variable (pore water pressure) with 2 kernels (PorousFlowMassTimeDerivative and PorousFlowAdvectiveFlux), dont think scaling would help at all in this case.\nI feel like my only ways out are either: make the system easier to solve like increase excavated permeability, relaxing capillary pressure, etc (which might not be not very physically accurate) OR relaxing abs_nl_tol",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10333003",
                          "updatedAt": "2024-08-14T04:48:42Z",
                          "publishedAt": "2024-08-14T04:48:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @GiudGiud I don't want to create a new thread, but just wondering, is there any userobject or any class that I can modify value of some nodes variable before the system is being solved?\nmy idea is: at timestep_begin, i let pwp (variable) of excavated elements become 0 and start solving from there?",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10335008",
                          "updatedAt": "2024-08-14T09:04:57Z",
                          "publishedAt": "2024-08-14T09:04:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "only before? If so then initial condition objects are meant for that.",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10337082",
                          "updatedAt": "2024-08-14T12:48:30Z",
                          "publishedAt": "2024-08-14T12:48:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "oh on timestep_begin. Well we are introducing the Correctors system to do this this week.\nthere's one example, the PointwiseRenormalizeVector",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10337084",
                          "updatedAt": "2024-08-14T12:49:06Z",
                          "publishedAt": "2024-08-14T12:49:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "oh nice, sounds interesting, does the Correctors system do similar to what i want?",
                          "url": "https://github.com/idaholab/moose/discussions/28364#discussioncomment-10337110",
                          "updatedAt": "2024-08-14T12:51:29Z",
                          "publishedAt": "2024-08-14T12:51:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}