{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wMS0wNlQwODoyNTo0NS0wNjowMM4ASBSb"
    },
    "edges": [
      {
        "node": {
          "title": "How to use the DG kernel to construct the coupled equations?",
          "author": {
            "login": "SomnusYu"
          },
          "bodyText": "Hi all,\nI know the DG kernel can solve such formal equation conveniently:\n\n, where \u03c6 is the variable, v is the velocity.\nBut how to construct the coupled equations? For example:\n\n, where \u03c6, \u03b8 are variables, v is the velocity.\nI don't know how to express this term () using the DGkernel.\nCould anyone kindly teach me?\nThank you very much!!\nBest regards,\nSomnus Yu",
          "url": "https://github.com/idaholab/moose/discussions/23079",
          "updatedAt": "2023-01-12T09:47:49Z",
          "publishedAt": "2023-01-05T10:05:51Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can use a regular kernel to express that term. It's a regular source term.\nIn making your new kernel, you can start from\nhttps://mooseframework.inl.gov/source/kernels/GradientComponent.html\nthen add a factor, phi, using the coupledValue() routine.\nAn example using this routine is the MatReaction kernel.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4611263",
                  "updatedAt": "2023-01-08T10:29:23Z",
                  "publishedAt": "2023-01-06T11:49:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Hi,\nThanks for your reply. I know the regular kernel, but there are convection terms in the coupled equations, which are better to use DGkernel. And I try to use DGkernel for convection terms and regular kernel for  term.\nBut I find that the DGkernel can not work simultaneously with the regular kernel, which means if both the two systems are used simultaneously, the regular kernel will be null. So how to deal with this problem?\nThank you very much!!\nBest regards",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4611632",
                          "updatedAt": "2023-01-06T12:28:11Z",
                          "publishedAt": "2023-01-06T12:28:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nWhich term is null?\nphi or dtheta/dx ?\nWhich type of variables are you using? (what is your [Variables] block)\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4611700",
                          "updatedAt": "2023-01-06T12:35:22Z",
                          "publishedAt": "2023-01-06T12:35:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Hi,\nnull means that even if I write this term in the kernel, it doesn't work. It is inactivated. But the terminal still works(does not report an error).\nThe type of variable is constant MONOMIAL.\nThank you!",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4611791",
                          "updatedAt": "2023-01-06T12:43:25Z",
                          "publishedAt": "2023-01-06T12:43:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont think it s not active, what makes you say that?\nI think the value of the derivative of theta is 0 because the derivative of a constant monomial on an element is 0.\nYou ll need to use a different procedure to compute this derivative.\nIs getVar(\"theta\").gradSln() getting you the correct value for the gradient?\nOtherwise we ll have to look at some sort of Green-Gauss gradient, and I ll ask others to pitch in",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4612823",
                          "updatedAt": "2023-01-06T14:21:16Z",
                          "publishedAt": "2023-01-06T14:21:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Thank you, I will have a try!!",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4613427",
                          "updatedAt": "2023-01-06T15:28:18Z",
                          "publishedAt": "2023-01-06T15:28:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Hi,\nI find that the gradSln() is only used in FVKernel. Is there any other way to calculate the derivation (variable type is constant monomial) in the kernel system?\nThank you very much!!",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4614923",
                          "updatedAt": "2023-01-06T18:42:02Z",
                          "publishedAt": "2023-01-06T18:42:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Kernel.C uses\n_grad_u(_var.gradSln())\n\nto initialize the gradient of the variable.\nThis then gets used for the ADDiffusion kernel.",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4618517",
                          "updatedAt": "2023-01-07T10:08:56Z",
                          "publishedAt": "2023-01-07T10:08:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Hi,\nThanks for your reply. I have used a small case to test if \"gradSln()\" works. But it shows that the gradient is still 0. Here are my case, the source file and the terminal screenshot.\ntest_grad.txt\nGradTest.C.txt\nGradTest.h.txt\n\nThank you!",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4619013",
                          "updatedAt": "2023-01-07T12:30:33Z",
                          "publishedAt": "2023-01-07T12:30:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you make theta a higher order variable? maybe first order",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4619654",
                          "updatedAt": "2023-01-07T14:05:39Z",
                          "publishedAt": "2023-01-07T14:05:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Actually, I use the RDG(reconstructed discontinuous Galerkin) model, which needs the variables to be constant MONOMIAL. If the higher order is used, there may be wrong in the cell center. Is there any other way?",
                          "url": "https://github.com/idaholab/moose/discussions/23079#discussioncomment-4620102",
                          "updatedAt": "2023-01-07T15:12:53Z",
                          "publishedAt": "2023-01-07T15:12:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Finite volume advection of sharp interfaces",
          "author": {
            "login": "ABallisat"
          },
          "bodyText": "Hello,\nI am trying to model the advection of a sharp interface using the Weakly Compressible Finite Volume Navier Stokes kernels to model a two phase immiscible flow. I am having issues with it not converging with sharp interfaces. To simplify the problem, I have a created a minimum worked example for the advection of a circle in 2D using a single fluid with a constant user specified velocity. To test if the issue is a having a sharp step, I am using a smoothed step function, the idea being the smoothness parameter can be dropped to get closer to an ideal step function. The input file is below. The best results I can get are using crank-nicolson with a Van Leer flux limiter and the default petsc options (although ILU performs almost identically) but there is still quite a lot of excessive diffusion, as in the images below. Pushing the smoothing parameter below 0.0005 (so driving it closer to a step) stops it converging. I can't see anything I am obviously doing wrong, but I suspect I am missing something. My only other thoughts are around trying to implement a more complex flux limiter scheme such as CICSAM. Any suggestions greatly appreciated.\nThanks!\nInput file:\n# Simple advection of a scalar quantity\nnElem = 100\nvelocity_interp_method = 'rc'\nadvected_interp_method = 'vanLeer'\nscheme = 'crank-nicolson'\nwidth_parameter = 0.0005\n\n\n[GlobalParams]\n  rhie_chow_user_object = 'rc'\n[]\n\n[UserObjects]\n  [rc]\n    type = INSFVRhieChowInterpolator\n    u = u\n    v = v\n    pressure = pressure\n  []\n[]\n\n[Mesh]\n  [gen]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmin = -0.1\n    xmax = 0.1\n    ymin = -0.1\n    ymax = 0.1\n    nx = ${nElem}\n    ny = ${nElem}\n  []\n[]\n\n[Variables]\n  [u]\n    type = INSFVVelocityVariable\n  []\n  [v]\n    type = INSFVVelocityVariable\n  []\n  [pressure]\n    type = INSFVPressureVariable\n  []\n  [T]\n    type = INSFVEnergyVariable\n  []\n  [phi]\n    type = INSFVScalarFieldVariable\n  []\n[]\n\n[Functions]\n  [phiICFunction]\n    type = ParsedFunction\n    value = '1/(1+ exp(-1*(0.025 - sqrt((x-0.0)^2 + (y-0.05)^2))/${width_parameter}))'\n  []\n[]\n\n[ICs]\n  [T]\n    type = ConstantIC\n    variable = T\n    value = 300\n  []\n  [u]\n    type = ConstantIC\n    variable = u\n    value = 1E-15\n  []\n  [v]\n    type = ConstantIC\n    variable = v\n    value = -0.1\n  []\n  [pressure]\n    type = ConstantIC\n    variable = pressure\n    value = 10000\n  []\n  [phi]\n    type = FunctionIC\n    variable = phi\n    function = phiICFunction\n  []\n[]\n\n[AuxVariables]\n  [velocity_norm]\n    type = MooseVariableFVReal\n  []\n  [densityAux]\n    type = MooseVariableFVReal\n  []\n[]\n\n[AuxKernels]\n  [speed]\n    type = VectorMagnitudeAux\n    variable = velocity_norm\n    x = u\n    y = v\n  []\n  [densityValue]\n    type = ADFunctorElementalAux\n    functor = rho\n    variable = densityAux\n  []\n[]\n\n[FVKernels]\n  ### Advected quantity\n  [./advection]\n    type = INSFVScalarFieldAdvection\n    variable = phi\n    advected_interp_method = ${advected_interp_method}\n    velocity_interp_method = ${velocity_interp_method}\n  [../]\n\n  [./time]\n    type = FVTimeKernel\n    variable = phi\n  [../]\n\n  ### INS\n  [mass_time]\n    type = WCNSFVMassTimeDerivative\n    variable = pressure\n    drho_dt = drho_dt\n  []\n  [mass]\n    type = INSFVMassAdvection\n    variable = pressure\n    advected_interp_method = ${advected_interp_method}\n    velocity_interp_method = ${velocity_interp_method}\n    rho = rho\n  []\n\n  ## x velocity component\n  [u_time]\n    type = WCNSFVMomentumTimeDerivative\n    variable = u\n    drho_dt = drho_dt\n    rho = rho\n    momentum_component = 'x'\n  []\n  [u_advection]\n    type = INSFVMomentumAdvection\n    variable = u\n    velocity_interp_method = ${velocity_interp_method}\n    advected_interp_method = ${advected_interp_method}\n    rho = rho\n    momentum_component = 'x'\n  []\n  [u_viscosity]\n    type = INSFVMomentumDiffusion\n    variable = u\n    mu = mu\n    momentum_component = 'x'\n  []\n  [u_pressure]\n    type = INSFVMomentumPressure\n    variable = u\n    momentum_component = 'x'\n    pressure = pressure\n  []\n\n  ## y velocity compoent\n  [v_time]\n    type = WCNSFVMomentumTimeDerivative\n    variable = v\n    drho_dt = drho_dt\n    rho = rho\n    momentum_component = 'y'\n  []\n  [v_advection]\n    type = INSFVMomentumAdvection\n    variable = v\n    velocity_interp_method = ${velocity_interp_method}\n    advected_interp_method = ${advected_interp_method}\n    rho = rho\n    momentum_component = 'y'\n  []\n  [v_viscosity]\n    type = INSFVMomentumDiffusion\n    variable = v\n    mu = mu\n    momentum_component = 'y'\n  []\n  [v_pressure]\n    type = INSFVMomentumPressure\n    variable = v\n    momentum_component = 'y'\n    pressure = pressure\n  []\n  \n  ### Temperature\n  [nullTemp]\n    type = FVTimeKernel\n    variable = T\n  []\n[]\n\n[FVBCs]\n  [top_p]\n    type = INSFVOutletPressureBC\n    variable = pressure\n    boundary = 'top'\n    function = '10000'\n  []\n\n  [no_slip_x]\n    type = INSFVInletVelocityBC\n    variable = v\n    boundary = 'top bottom'\n    function = -0.1\n  []\n\n  [no_slip_y]\n    type = INSFVInletVelocityBC\n    variable = u\n    boundary = 'top bottom'\n    function = 0.0\n  []\n\n[]\n\n[FluidProperties]\n  [fp]\n    type = Water97FluidProperties\n    allow_imperfect_jacobians = true\n  []\n[]\n\n[Materials]\n  [const_functor]\n    type = ADGenericFunctorMaterial\n    prop_names = 'cp k mu'\n    prop_values = '1000 1 1E2'\n  []\n  [rho]\n    type = RhoFromPTFunctorMaterial\n    fp = fp\n    temperature = T\n    pressure = pressure\n  []\n  [ins_fv]\n    type = INSFVEnthalpyMaterial\n    temperature = 'T'\n    rho = rho\n  []\n[]\n\n[Preconditioning]\n  [SMP]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = NEWTON\n  end_time = 1\n\n  scheme = ${scheme}\n  \n  nl_rel_tol = 1e-9\n  nl_abs_tol = 1e-10\n  \n  nl_max_its = 30\n  l_max_its = 50\n\n  dt = 0.01\n[]\n\n\n[Outputs]\n  [console]\n        type = Console\n        execute_on = 'INITIAL TIMESTEP_BEGIN NONLINEAR FAILED'\n    []\n    [outfile]\n        type = Exodus\n        file_base = '${velocity_interp_method}_${advected_interp_method}_${scheme}'\n    []\n[]\n\nTime = 0\n\nTime = 1 (100 time steps)",
          "url": "https://github.com/idaholab/moose/discussions/22794",
          "updatedAt": "2023-01-10T09:43:17Z",
          "publishedAt": "2022-11-25T16:57:30Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n@lindsayad @grmnptr @tanoret you may want to pitch in\nFirst I would remove the temperature variable for now since it does not play a role. This will make the problem faster to run and wont affect results at this point. You may just comment out the kernel and turn the T variable into an auxiliary variable.\nThis is similar to several text book / code studies of the diffusivity / quality of discretization schemes that you may have already found out there\nhttps://mitgcm.readthedocs.io/en/latest/algorithm/adv-schemes.html\nhttps://folk.ntnu.no/leifh/teaching/tkt4140/._main074.html\nIt'd be nice to look at the FOAM equivalent if it s out there\nVanLeer makes sense as a good candidate\nDo you have the (non)convergence history for a non-converging case?\nCan you print each variable's residuals in [Debug]?\nIs it the linear or non linear iterative convergence that is not reached?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4247232",
                  "updatedAt": "2022-11-27T15:53:18Z",
                  "publishedAt": "2022-11-27T15:51:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The case has really high viscosity (100) btw. This probably does not help transporting a scalar with no diffusion. Could you please reduce it a bit?",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4249038",
                          "updatedAt": "2022-11-27T23:28:12Z",
                          "publishedAt": "2022-11-27T23:28:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "grmnptr"
                  },
                  "bodyText": "I\u2019ll come back to this tomorrow but the limiters we have (vanLeer and Minmod) fall back to almost upwind where they encounter large gradients (not very smooth solutions). That explains the excess diffusivity with vanLeer. I don\u2019t think we have a less diffusive scheme at the moment (besides the regular weighted average which can result in oscillatory behavior), but I\u2019ll take a look at your input tomorrow. Also, I recommend following @GiudGiud \u2018s instructions to see what the issue is with the convergence.",
                  "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4247357",
                  "updatedAt": "2022-11-27T16:18:02Z",
                  "publishedAt": "2022-11-27T16:18:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ABallisat"
                  },
                  "bodyText": "Hello both,\nThanks for the suggestions. Neither moving out the temperature to an auxvariable nor reducing the viscosity (I dropped it to 1E-5, it was unrealistically high) improved convergence. I have turned debug on and get the following print out:\nTime Step 1, time = 0.01, dt = 0.01\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.53633e-13\n                   pressure: 2.0661e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_ITS iterations 100\n 1 Nonlinear |R| = \ufffd[33m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.46986e-13\n                   pressure: 1.94593e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.005, dt = 0.005\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.42636e-13\n                   pressure: 1.52893e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_ITS iterations 100\n 1 Nonlinear |R| = \ufffd[33m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41508e-13\n                   pressure: 1.50202e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.0025, dt = 0.0025\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.40833e-13\n                   pressure: 1.27899e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_ITS iterations 100\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.00125, dt = 0.00125\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.40997e-13\n                   pressure: 1.15454e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.000625, dt = 0.000625\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41144e-13\n                   pressure: 1.09304e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_ITS iterations 100\n 1 Nonlinear |R| = \ufffd[33m2.733671e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        5.29136e-13\n                   v:        5.65381e-13\n                   pressure: 1.18931e-12\n                   phi:      0.00273367\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.0003125, dt = 0.0003125\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41299e-13\n                   pressure: 1.06272e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\n 1 Nonlinear |R| = \ufffd[33m2.737085e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        4.1812e-13\n                   v:        3.76815e-13\n                   pressure: 1.07065e-12\n                   phi:      0.00273709\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.00015625, dt = 0.00015625\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41327e-13\n                   pressure: 1.04814e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n 1 Nonlinear |R| = \ufffd[33m2.731870e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.54157e-10\n                   v:        2.61198e-10\n                   pressure: 8.87655e-11\n                   phi:      0.00273187\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 7.8125e-05, dt = 7.8125e-05\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41408e-13\n                   pressure: 1.0408e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\n 1 Nonlinear |R| = \ufffd[32m5.262641e-04\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.76848e-09\n                   v:        1.75822e-09\n                   pressure: 2.37887e-10\n                   phi:      0.000526264\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 3.90625e-05, dt = 3.90625e-05\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41494e-13\n                   pressure: 1.03629e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n 1 Nonlinear |R| = \ufffd[32m5.842034e-06\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.65629e-06\n                   v:        4.77878e-06\n                   pressure: 1.84491e-07\n                   phi:      2.91809e-06\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 1.95313e-05, dt = 1.95313e-05\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41472e-13\n                   pressure: 1.03496e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n 1 Nonlinear |R| = \ufffd[32m1.383808e-07\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.93516e-08\n                   v:        2.55069e-08\n                   pressure: 1.19464e-09\n                   phi:      1.34621e-07\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 9.76563e-06, dt = 9.76563e-06\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41528e-13\n                   pressure: 1.03382e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n 1 Nonlinear |R| = \ufffd[32m5.871040e-06\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.69136e-06\n                   v:        5.62139e-06\n                   pressure: 6.78969e-08\n                   phi:      6.11024e-08\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 4.88281e-06, dt = 4.88281e-06\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41528e-13\n                   pressure: 1.03311e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n 1 Nonlinear |R| = \ufffd[32m2.152068e-07\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.72732e-07\n                   v:        1.17947e-07\n                   pressure: 1.09226e-09\n                   phi:      5.06438e-08\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 2.44141e-06, dt = 2.44141e-06\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.4149e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_ITS iterations 100\n 1 Nonlinear |R| = \ufffd[32m7.467766e-08\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        4.9338e-08\n                   v:        5.07857e-08\n                   pressure: 4.70922e-10\n                   phi:      2.37299e-08\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 1.2207e-06, dt = 1.2207e-06\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_BREAKDOWN iterations 60\n 1 Nonlinear |R| = \ufffd[32m2.930200e-06\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.96862e-06\n                   v:        2.17016e-06\n                   pressure: 1.29478e-08\n                   phi:      2.93943e-08\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 6.10352e-07, dt = 6.10352e-07\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m2.629480e-08\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.61939e-08\n                   v:        2.02018e-08\n                   pressure: 1.43586e-10\n                   phi:      4.58723e-09\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 3.05176e-07, dt = 3.05176e-07\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m9.043074e-09\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        8.24678e-09\n                   v:        3.19073e-09\n                   pressure: 1.06339e-10\n                   phi:      1.89096e-09\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 1.52588e-07, dt = 1.52588e-07\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.195118e-08\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        8.02626e-09\n                   v:        8.80114e-09\n                   pressure: 1.92507e-10\n                   phi:      9.55377e-10\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 7.62939e-08, dt = 7.62939e-08\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.421448e-09\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        8.28794e-10\n                   v:        8.07407e-10\n                   pressure: 3.45641e-11\n                   phi:      8.24933e-10\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 3.8147e-08, dt = 3.8147e-08\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m2.343075e-10\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        4.27941e-12\n                   v:        1.24873e-11\n                   pressure: 4.82436e-13\n                   phi:      2.33935e-10\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 1.90735e-08, dt = 1.90735e-08\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.171220e-10\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.98202e-12\n                   v:        5.69994e-12\n                   pressure: 1.56832e-14\n                   phi:      1.16966e-10\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 9.53674e-09, dt = 9.53674e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m5.853928e-11\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.00905e-12\n                   v:        2.86283e-12\n                   pressure: 1.7292e-14\n                   phi:      5.84605e-11\n\ufffd[32m Solve Converged!\ufffd[39m\n\nOutlier Variable Residual Norms:\n  phi: \ufffd[31m5.846053e-11\ufffd[39m\n\nTime Step 2, time = 2.86102e-08, dt = 1.90735e-08\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.90735e-08, dt = 9.53674e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.43051e-08, dt = 4.76837e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.19209e-08, dt = 2.38419e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.07288e-08, dt = 1.19209e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.01328e-08, dt = 5.96046e-10\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.83477e-09, dt = 2.98023e-10\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.68575e-09, dt = 1.49012e-10\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.61125e-09, dt = 7.45058e-11\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.574e-09, dt = 3.72529e-11\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.55537e-09, dt = 1.86265e-11\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.54606e-09, dt = 9.31323e-12\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.5414e-09, dt = 4.65661e-12\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53907e-09, dt = 2.32831e-12\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53791e-09, dt = 1.16415e-12\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53733e-09, dt = 5.82077e-13\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53703e-09, dt = 2.91038e-13\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53689e-09, dt = 1.45519e-13\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53684e-09, dt = 1e-13\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32204e-12\n                   v:        5.72292e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n\ufffd[1m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nso it does look like phi is the one struggling to converge. Thanks for the links, I will take a look at them. I know that FOAM, specifically interFOAM, has some nice examples of this, it is on my to do list to try to back out of the code what they implement as I have not yet found a good summary of it.",
                  "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4255072",
                  "updatedAt": "2022-11-28T16:15:02Z",
                  "publishedAt": "2022-11-28T16:15:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "one thing to check is that the case converges with 1e-5 viscosity without the scalar. That can be tough on the solver if there is no initialization.\nok now that we know that it s linear that is not converging, we should try a stronger preconditioner. The strongest rn is LU with a NONZERO pc_factor_shift.\n[Preconditioning]\n  [./full]\n    type = SMP\n    full = true\n    petsc_options_iname = '-pc_type -pc_factor_shift_type'\n    petsc_options_value = 'lu               NONZERO'\n  [../]\n[]\n\nthis is not scalable but it s good to get started",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4255163",
                          "updatedAt": "2022-11-28T16:23:37Z",
                          "publishedAt": "2022-11-28T16:23:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ABallisat"
                          },
                          "bodyText": "It runs through without issue for a viscosity of 1e-5 if I turn off the advection kernel. Using advection, I have just tried with that preconditioner and get a very similar result unfortunately:\nTime Step 1, time = 0.01, dt = 0.01\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.53633e-13\n                   pressure: 2.0661e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m4.748139e-04\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.57758e-11\n                   v:        3.2778e-09\n                   pressure: 4.18295e-09\n                   phi:      0.000474814\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.005, dt = 0.005\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.42636e-13\n                   pressure: 1.52893e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.239824e-04\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.28135e-13\n                   v:        1.2429e-11\n                   pressure: 2.91408e-11\n                   phi:      0.000123982\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.0025, dt = 0.0025\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.40833e-13\n                   pressure: 1.27899e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m3.649226e-05\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.04854e-13\n                   v:        2.51449e-13\n                   pressure: 5.92112e-13\n                   phi:      3.64923e-05\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.00125, dt = 0.00125\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.40997e-13\n                   pressure: 1.15454e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.363119e-05\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.59856e-13\n                   v:        2.30348e-13\n                   pressure: 8.02057e-13\n                   phi:      1.36312e-05\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.000625, dt = 0.000625\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41144e-13\n                   pressure: 1.09304e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m6.220353e-06\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.13391e-13\n                   v:        3.31809e-13\n                   pressure: 2.31885e-12\n                   phi:      6.22035e-06\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.0003125, dt = 0.0003125\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41299e-13\n                   pressure: 1.06272e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m3.062172e-06\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.07916e-13\n                   v:        2.56123e-13\n                   pressure: 9.29923e-13\n                   phi:      3.06217e-06\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 0.00015625, dt = 0.00015625\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41327e-13\n                   pressure: 1.04814e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.532856e-06\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.82303e-13\n                   v:        2.69055e-13\n                   pressure: 8.75833e-13\n                   phi:      1.53286e-06\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 7.8125e-05, dt = 7.8125e-05\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41408e-13\n                   pressure: 1.0408e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m7.686061e-07\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.76285e-13\n                   v:        4.29826e-13\n                   pressure: 3.10431e-12\n                   phi:      7.68606e-07\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 3.90625e-05, dt = 3.90625e-05\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41494e-13\n                   pressure: 1.03629e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m3.850635e-07\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.4883e-13\n                   v:        3.9653e-12\n                   pressure: 3.66122e-11\n                   phi:      3.85063e-07\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 1.95313e-05, dt = 1.95313e-05\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41472e-13\n                   pressure: 1.03496e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.927487e-07\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.84459e-13\n                   v:        1.867e-12\n                   pressure: 1.69698e-11\n                   phi:      1.92749e-07\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 9.76563e-06, dt = 9.76563e-06\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41528e-13\n                   pressure: 1.03382e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m9.643191e-08\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.2733e-13\n                   v:        4.01258e-12\n                   pressure: 3.64604e-11\n                   phi:      9.64319e-08\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 4.88281e-06, dt = 4.88281e-06\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41528e-13\n                   pressure: 1.03311e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m4.823086e-08\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.86711e-13\n                   v:        1.02918e-11\n                   pressure: 9.5275e-11\n                   phi:      4.82308e-08\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 2.44141e-06, dt = 2.44141e-06\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.4149e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m2.412034e-08\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        8.58022e-13\n                   v:        2.54648e-11\n                   pressure: 2.3997e-10\n                   phi:      2.41191e-08\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 1.2207e-06, dt = 1.2207e-06\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.206070e-08\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.83642e-13\n                   v:        7.42137e-12\n                   pressure: 6.72984e-11\n                   phi:      1.20605e-08\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 6.10352e-07, dt = 6.10352e-07\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m6.030507e-09\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.63695e-13\n                   v:        4.37459e-12\n                   pressure: 1.19399e-11\n                   phi:      6.03049e-09\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 3.05176e-07, dt = 3.05176e-07\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m3.015532e-09\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.45257e-13\n                   v:        9.03593e-12\n                   pressure: 3.57274e-11\n                   phi:      3.01531e-09\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 1.52588e-07, dt = 1.52588e-07\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.507806e-09\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.38592e-13\n                   v:        1.9329e-11\n                   pressure: 6.53849e-12\n                   phi:      1.50767e-09\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 7.62939e-08, dt = 7.62939e-08\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m7.541670e-10\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.24335e-13\n                   v:        2.22922e-11\n                   pressure: 6.9969e-13\n                   phi:      7.53837e-10\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 3.8147e-08, dt = 3.8147e-08\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m3.771128e-10\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        2.58911e-13\n                   v:        1.20844e-11\n                   pressure: 6.57282e-13\n                   phi:      3.76918e-10\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 1.90735e-08, dt = 1.90735e-08\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m1.885525e-10\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.97899e-13\n                   v:        5.7007e-12\n                   pressure: 1.05886e-14\n                   phi:      1.88466e-10\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 1, time = 9.53674e-09, dt = 9.53674e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        3.59674e-13\n                   v:        3.41486e-13\n                   pressure: 1.0331e-12\n                   phi:      0.00273719\n 1 Nonlinear |R| = \ufffd[32m9.426619e-11\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        1.96512e-13\n                   v:        2.86314e-12\n                   pressure: 1.72524e-14\n                   phi:      9.42225e-11\n\ufffd[32m Solve Converged!\ufffd[39m\n\nOutlier Variable Residual Norms:\n  phi: \ufffd[31m9.422249e-11\ufffd[39m\n\nTime Step 2, time = 2.86102e-08, dt = 1.90735e-08\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.90735e-08, dt = 9.53674e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.43051e-08, dt = 4.76837e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.19209e-08, dt = 2.38419e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.07288e-08, dt = 1.19209e-09\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 1.01328e-08, dt = 5.96046e-10\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.83477e-09, dt = 2.98023e-10\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.68575e-09, dt = 1.49012e-10\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.61125e-09, dt = 7.45058e-11\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.574e-09, dt = 3.72529e-11\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.55537e-09, dt = 1.86265e-11\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.54606e-09, dt = 9.31323e-12\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.5414e-09, dt = 4.65661e-12\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53907e-09, dt = 2.32831e-12\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53791e-09, dt = 1.16415e-12\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53733e-09, dt = 5.82077e-13\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53703e-09, dt = 2.91038e-13\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53689e-09, dt = 1.45519e-13\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69894e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nTime Step 2, time = 9.53684e-09, dt = 1e-13\n 0 Nonlinear |R| = \ufffd[32m2.737188e-03\ufffd[39m\n    |residual|_2 of individual variables:\n                   u:        6.32311e-12\n                   v:        5.72357e-12\n                   pressure: 5.69893e-14\n                   phi:      0.00273719\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_OUTMEMORY \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nI am going to have a good dig into the methods suggested and see if any look promising. Looking at the implementation of flux limiters in MOOSE, I am guessing that if I can cast them into a similar form then they should not be too difficult to implement.",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4255295",
                          "updatedAt": "2022-11-28T16:38:12Z",
                          "publishedAt": "2022-11-28T16:38:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "You don't need to paste all the diverging timesteps. Probably the first one or two is plenty. Do you need to resolve the velocity and scalar fields at the same time? Can you first compute the velocity field, and then model the transport of phi?",
                  "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4255773",
                  "updatedAt": "2022-11-28T17:36:29Z",
                  "publishedAt": "2022-11-28T17:36:27Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ABallisat"
                          },
                          "bodyText": "Good to know for future thanks, I wasn't sure if in some way the full log would contain some useful insight I had missed hence posting all of it. I don't have a particular need to resolve both simultaneously, I am happy to do a split solve and use multi-apps to do it. My issue with that is that the standard FVAdvection kernel only supports average, upwind and skewness-corrected so I can't see an obvious way to implement something like VanLeer or other flux limiters, am I missing something? The input file above is effectively me trying to advect only the scalar field, hence setting a constant velocity, but using the INSFVScalarFieldAdvection kernel to move the scalar as that can use VanLeer and other flux limiters. All the other kernels are added to get the minimum required to get the Navier Stokes kernels to run. I suspect that even cutting out the resolution of the velocity field will still result in the same issues but I am not certain, I will try to build up and example without any Navier Stokes.",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4262412",
                          "updatedAt": "2022-11-29T10:06:06Z",
                          "publishedAt": "2022-11-29T10:06:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nFor a split multiapp setup you will not want to use FVAdvection but INSFVScalarAdvection.\nHere's an example that does it:\nhttps://github.com/idaholab/moose/tree/next/modules/navier_stokes/test/tests/finite_volume/ins/multiapp-scalar-transport\nYou should consider the action syntax with Navier Stokes btw. It makes input files a little shorter and easier to QA\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4262688",
                          "updatedAt": "2022-11-29T10:35:24Z",
                          "publishedAt": "2022-11-29T10:35:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ABallisat"
                          },
                          "bodyText": "Thanks for the suggestion, I will take a look. One question about FVAdvection: only average, upwind and skewness-corrected advection interpolation are supported (from the source code in next https://github.com/idaholab/moose/blob/next/framework/src/fvkernels/FVAdvection.C), whereas the INSFVScalarAdvection supports the various flux limiters. Can I just edit the FVAdvection to support the other limiters?",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4262801",
                          "updatedAt": "2022-11-29T10:47:56Z",
                          "publishedAt": "2022-11-29T10:47:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You could. I just had a look and I dont see why not",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4262818",
                          "updatedAt": "2022-11-29T10:50:27Z",
                          "publishedAt": "2022-11-29T10:50:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "FVAdvection won't be plugged in with the Rhie-Chow user object so it may not be conservative if a Rhie-Chow interpolation was used for the velocity field",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4267191",
                          "updatedAt": "2022-11-29T18:52:21Z",
                          "publishedAt": "2022-11-29T18:52:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "where do we stand on this? have the results improved or is it still pretty diffusive?",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4586441",
                          "updatedAt": "2023-01-03T23:09:12Z",
                          "publishedAt": "2023-01-03T23:09:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ABallisat"
                          },
                          "bodyText": "We are now at the stage where I have a working compressive scheme implemented in Python for proof of concept of the algorithm, this week I am hoping to get it working in MOOSE. At the moment I am just working out where in MOOSE all the components I need reside, I will report back with an update when I have something working (or if I hit more issues).",
                          "url": "https://github.com/idaholab/moose/discussions/22794#discussioncomment-4643203",
                          "updatedAt": "2023-01-10T09:43:18Z",
                          "publishedAt": "2023-01-10T09:43:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Incorrect data obtained through SolutionUserObject",
          "author": {
            "login": "js-jixu"
          },
          "bodyText": "Hi, experts.\nI recently encountered a strange problem. I want to use SolutionUserObject to obtain data from one solution for another simulation. However, the data pulled by SolutionUserObject is incorrect. That is, the data in the original solution is different from the data pulled by the SolutionUserObject.\nI use the following statement to obtain the power data pulled by the SolutionUserObject from initial_value.e. From the output file, if you draw a line from (0,0,0) to (0,0,90), you will find that the power data of case_out,e and initial_value.e are different.\n\n[Mesh]\n  file = 'initial_value.e'\n[]\n\n[Variables]\n  [u]\n    order = FIRST\n    family = LAGRANGE\n    initial_condition = 0.0\n  []\n[]\n\n[AuxVariables]\n  [power]\n    family = MONOMIAL\n    order = FIRST\n    block = 'fuel'\n  []\n[]\n\n[Kernels]\n  [diff]\n    type = Diffusion\n    variable = u\n  []\n[]\n\n[AuxKernels]\n  [power]\n    type = SolutionAux\n    variable = power\n    solution = initial_value\n  []\n[]\n\n[UserObjects]\n  [initial_value]\n    type = SolutionUserObject\n    mesh = initial_value.e\n    system_variables = power\n    timestep = LATEST\n    execute_on = INITIAL\n  []\n[]\n\n[BCs]\n  [stuff]\n    type = DirichletBC\n    variable = u\n    boundary = '1 2'\n    value = 0.0\n  []\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'NEWTON'\n[]\n\n[Outputs]\n  execute_on = 'timestep_end'\n  exodus = true\n[]\n\n\nI prepared some files, including case.i, case_out.e, initial_value.e.\nfiles.zip",
          "url": "https://github.com/idaholab/moose/discussions/23066",
          "updatedAt": "2023-02-04T15:46:34Z",
          "publishedAt": "2023-01-04T16:33:06Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "You'll have to change power to a nodal variable:\n[AuxVariables]\n  [power]\n    family = LAGRANGE\n    order = FIRST\n    block = 'fuel'\n  []\n[]\n\nMOOSE writes first order Monomials as nodal variables in exodus.",
                  "url": "https://github.com/idaholab/moose/discussions/23066#discussioncomment-4633849",
                  "updatedAt": "2023-01-09T14:06:33Z",
                  "publishedAt": "2023-01-09T14:06:32Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Looking for a module to simulate fracture propagation",
          "author": {
            "login": "miraboreasumr"
          },
          "bodyText": "Hello, sorry for posting a similar question. Here is what I need for the module\n\nI have coordinates for the Naturally Fractures which I need to input\nI inject water into the fractures, then it propagates (so maybe no need for flow in porous media)\nMaybe no need for poroelastic, just elastic.\nThank you",
          "url": "https://github.com/idaholab/moose/discussions/23096",
          "updatedAt": "2023-02-03T05:19:32Z",
          "publishedAt": "2023-01-06T22:56:13Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "There is no single module for hydraulic fracture in porous media. You can develop your own application leveraging one or multiple existing modules: porous flow, tensor mechanics and possibly phase field/XFEM.",
                  "url": "https://github.com/idaholab/moose/discussions/23096#discussioncomment-4633649",
                  "updatedAt": "2023-01-09T13:46:57Z",
                  "publishedAt": "2023-01-09T13:46:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Phase field coupled mechanical stress",
          "author": {
            "login": "biaogxb"
          },
          "bodyText": "I want to use the phase field method and coupling the mechanical stress to simulate the growth of dendrites. When the mechanical stress is not added, everything looks normal, but the following errors occur after coupling the mechanical stress\n*** ERROR ***\nThe following error occurred in the object \"MOOSE Problem\", of type \"FEProblem\".\nMaterial property 'mechanical_strain', requested by 'stress' is not defined on block 0\nMaterial property 'mechanical_strain', requested by 'stress_face' is not defined on block 0\nMaterial property 'mechanical_strain', requested by 'stress_neighbor' is not defined on block 0\nI will calculate the elastic energy as follows.\n\nThe added code is as follows:\nkernel part\n  [./AC_bulk]\ntype = AllenCahn\n   variable = eta\n    f_name = FA\n  [../]\nmaterial part\n   # Energy of the barrier\n[./Free]\n   type = DerivativeParsedMaterial\n  f_name = FF\n material_property_names = 'B'\n args='eta'\n function = 'B*eta*eta*(1-eta)*(1-eta)'\nderivative_order = 1\n [../]\n#Mechanics parameeters\n [./Stiffness_matrix]\n  type = ComputeElasticityTensor\n C_ijkl = '3294.1 1852.9 1852.9 3294.1 1852.9 3294.1 720.6 720.6 720.6'\n fill_method = symmetric9\n [../]\n  [./stress]\n type = ComputeLinearElasticStress\n [../]\n [./eigen_strain]\n type = ComputeVariableEigenstrain\neigen_base = '-0.3464 0 0 -0.3092 0 -0.2116'\n prefactor = h\nargs = eta\n eigenstrain_name = 'eigenstrain'\n[../]\n [./elastic_free_energy_p]\ntype = ElasticEnergyMaterial\nf_name = FE\n args = 'eta'\n derivative_order = 2\n [../]\n#all free_Energy\n [./free_energy]\ntype = DerivativeSumMaterial\n  f_name = FA\n  sum_materials = 'FF FE'\n  args = 'eta'\nderivative_order = 2\n  [../]\nHow can I adjust my code?",
          "url": "https://github.com/idaholab/moose/discussions/21355",
          "updatedAt": "2023-01-08T20:28:49Z",
          "publishedAt": "2022-06-20T04:02:06Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Krystalfang"
                  },
                  "bodyText": "Hello, I have encountered the same problem, did you solve your problem?",
                  "url": "https://github.com/idaholab/moose/discussions/21355#discussioncomment-3044693",
                  "updatedAt": "2022-06-29T02:23:32Z",
                  "publishedAt": "2022-06-29T02:23:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@dschwen @jiangwen84  is there some incompatible strain/stress materials in this list?",
                  "url": "https://github.com/idaholab/moose/discussions/21355#discussioncomment-3088748",
                  "updatedAt": "2022-07-06T01:30:53Z",
                  "publishedAt": "2022-07-06T01:30:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "biaogxb"
                          },
                          "bodyText": "I guess it's because I didn't add displacement\uff08disp_x \\disp_y\uff09,When I add the displacement term, the error report disappears, but there are some problems in the calculation result.\nThe results and input files without coupled mechanical stress are as follows,The result looks good.\n\ninput1.txt\nWhen I coupled the mechanical stress, there were some problems in the result:(I don't know whether it is the problem of mechanical stress related parameters or the problem of mechanical stress coupling process)\n\ninput2.txt\nCould you give me some advice on coupling mechanical stress? I will be very grateful!",
                          "url": "https://github.com/idaholab/moose/discussions/21355#discussioncomment-3088796",
                          "updatedAt": "2022-07-06T01:48:50Z",
                          "publishedAt": "2022-07-06T01:48:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I m not very knowledgable about this.\nThis looks like unconverged results. Make sure nl_abs_tol and nl_rel_tol are both very low. They should both be several orders of magnitude below what seems acceptable in terms of convergence",
                          "url": "https://github.com/idaholab/moose/discussions/21355#discussioncomment-3088827",
                          "updatedAt": "2022-07-06T01:56:35Z",
                          "publishedAt": "2022-07-06T01:56:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "galibubc"
                          },
                          "bodyText": "Hello @biaogxb,\nDid you solve the problem? Can you please share how you solved it?\nMusanna",
                          "url": "https://github.com/idaholab/moose/discussions/21355#discussioncomment-4627453",
                          "updatedAt": "2023-01-08T20:28:49Z",
                          "publishedAt": "2023-01-08T20:28:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "time step",
          "author": {
            "login": "Oops-Qiao"
          },
          "bodyText": "Dear expert,\nIf I want to use time step dt in kernels, how can I call the value of dt?\nThanks a lot.\nBest\nQia",
          "url": "https://github.com/idaholab/moose/discussions/23107",
          "updatedAt": "2023-01-14T22:56:00Z",
          "publishedAt": "2023-01-08T11:46:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "_dt\nLook at the doxygen for kernels you ll see all the class attributes",
                  "url": "https://github.com/idaholab/moose/discussions/23107#discussioncomment-4625437",
                  "updatedAt": "2023-01-08T13:49:54Z",
                  "publishedAt": "2023-01-08T13:49:54Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to get the average value of a variable at a certain boundary?",
          "author": {
            "login": "xiaojbing"
          },
          "bodyText": "hello,\nI need to get average value of a variable at a certain boudary at every time step? Is there any postprocessor or auxkernel could achieve this?",
          "url": "https://github.com/idaholab/moose/discussions/23106",
          "updatedAt": "2023-02-03T05:19:39Z",
          "publishedAt": "2023-01-08T01:39:44Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nthere s a SideAverageValue postprocessor that does this\nhttps://mooseframework.inl.gov/moose/source/postprocessors/SideAverageValue.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23106#discussioncomment-4622910",
                  "updatedAt": "2023-01-08T01:42:32Z",
                  "publishedAt": "2023-01-08T01:42:31Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xiaojbing"
                          },
                          "bodyText": "thank you, I will try",
                          "url": "https://github.com/idaholab/moose/discussions/23106#discussioncomment-4622911",
                          "updatedAt": "2023-01-08T01:43:11Z",
                          "publishedAt": "2023-01-08T01:43:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to set supporting constraint and spring constraint?",
          "author": {
            "login": "DYLDYLDYL"
          },
          "bodyText": "Hi!\nI want to set an axial supporting constraint at the bottom and an axial spring constraints at the top.\nThanks in advance for your help!",
          "url": "https://github.com/idaholab/moose/discussions/22903",
          "updatedAt": "2023-02-04T15:46:29Z",
          "publishedAt": "2022-12-07T13:47:24Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSupporting constraint is likely just a dirichlet BC on the displacement variable\nA spring constraint will be a neumann BC in the momentum equation I think, but there's definitely something in the tensor mechanics module for that\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22903#discussioncomment-4586635",
                  "updatedAt": "2023-01-03T23:50:25Z",
                  "publishedAt": "2023-01-03T23:50:25Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "right, fixture support -> Dirichlet BC, spring support -> Robin BC.",
                          "url": "https://github.com/idaholab/moose/discussions/22903#discussioncomment-4596841",
                          "updatedAt": "2023-01-05T01:00:55Z",
                          "publishedAt": "2023-01-05T01:00:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "DYLDYLDYL"
                          },
                          "bodyText": "Thanks a lot \uff01",
                          "url": "https://github.com/idaholab/moose/discussions/22903#discussioncomment-4618668",
                          "updatedAt": "2023-01-07T10:51:15Z",
                          "publishedAt": "2023-01-07T10:51:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to achieve flow distribution with MOOSE framework.",
          "author": {
            "login": "Raven-pro"
          },
          "bodyText": "Hello, everyone!\nI am using THM module and MultiApp to simulate parallel flow channels.\nIn the parallel flow channels, the pressure drops should be equal in all the channels, which means I need to adjust the mass flow rate of each channel in each time step.\nLike, in each time step, the program calculates the pressure drop of each channel and adjusts the inlet mass flow of each channel, then iterates, until the pressure drop of each channel is equal, then we go to the next time step.\nSo I need to add an iteration at each time step with all the inlet variables and solutions needed, then change the inlets of all the channels to execute the next time step. Are there any possible ways to achieve this?",
          "url": "https://github.com/idaholab/moose/discussions/23084",
          "updatedAt": "2023-02-03T05:22:04Z",
          "publishedAt": "2023-01-05T18:07:26Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Raven-pro"
                  },
                  "bodyText": "I have also noticed that THM module tutorial doesn't mention something like parallel follow.\nBut I think the module is capable of solving such a problem.\nAre there any existing components that can achieve this?",
                  "url": "https://github.com/idaholab/moose/discussions/23084#discussioncomment-4604349",
                  "updatedAt": "2023-01-05T18:09:38Z",
                  "publishedAt": "2023-01-05T18:09:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@joshuahansel @licharlot\nI can see two ways of doing this:\n\nset an inlet and outlet pressure boundary condition. This will make sure the mass flow rate in each channel does lead to the same pressure drop\nuse the optimization module to set up an optimization problem for the mass flow rates to match the pressure drops wanted. This is much more work",
                  "url": "https://github.com/idaholab/moose/discussions/23084#discussioncomment-4611340",
                  "updatedAt": "2023-01-06T14:12:28Z",
                  "publishedAt": "2023-01-06T11:51:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "That's an interesting idea. I'm not sure what would happen, since the characteristics aren't specified completely at the inlet. It's very easy to try though, so @89018580 you can see what happens.\nThis does sound hard.",
                          "url": "https://github.com/idaholab/moose/discussions/23084#discussioncomment-4612930",
                          "updatedAt": "2023-01-06T14:30:37Z",
                          "publishedAt": "2023-01-06T14:30:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "For option 1, can you specify temperature at the inlet for example? Or does it have to be an energy flow.\nI d also be worried about computing density(T) at the inlet without a temperature BC.",
                          "url": "https://github.com/idaholab/moose/discussions/23084#discussioncomment-4613045",
                          "updatedAt": "2023-01-06T14:44:42Z",
                          "publishedAt": "2023-01-06T14:44:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "There's InletStagnationPressureTemperature1Phase that might be worth a try (with Outlet1Phase at the outlet), but I'm not sure how much the static pressure at the inlet will vary from the stagnation pressure.",
                          "url": "https://github.com/idaholab/moose/discussions/23084#discussioncomment-4613167",
                          "updatedAt": "2023-01-06T14:59:16Z",
                          "publishedAt": "2023-01-06T14:59:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "joshuahansel"
                  },
                  "bodyText": "I need to know more about the problem you're solving. Are the parallel channels connected in any way, i.e., do you have THM junctions connecting them? (Or some other method of \"connecting\" them?) Or are they all being treated independently?\nDo the pressure drops need to be exactly the same for some numerical reason? Or do you just know that they should physically be the same given different paths between the same two end points? The latter reasoning has the requirement that these channels actually be connected somehow. If you have some kind of junction connecting these channels, equal pressure drops result automatically. However, note that this is dependent on the junction formulation, and note that the pressures at the inlet and outlet boundaries may not be in agreement with the corresponding cell-center pressures of the boundary cells. This discrepancy is a function of the spatial discretization error - use slope reconstruction to minimize it.\nIf you're not using junctions of any kind, one idea is that you can use PID controllers to control the inlet mass flow rate based on a pressure drop target, but you probably don't know what this target is beforehand.",
                  "url": "https://github.com/idaholab/moose/discussions/23084#discussioncomment-4613046",
                  "updatedAt": "2023-01-06T14:44:51Z",
                  "publishedAt": "2023-01-06T14:44:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "But I want to stress that the best solution, in my opinion, is to have some kind of junction connecting the channels that naturally produces the desired condition. Try JunctionParallelChannels1Phase for example.",
                          "url": "https://github.com/idaholab/moose/discussions/23084#discussioncomment-4613118",
                          "updatedAt": "2023-01-06T14:53:17Z",
                          "publishedAt": "2023-01-06T14:53:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "licharlot"
                          },
                          "bodyText": "I agree we need to know more. This sounds like a plenum to plenum calculation where the total mass flow rate is known and needs to be split between the parallel channels. In that case, the easiest is indeed to use JunctionParallelChannels1Phase but this will require to have all the parallel channels in one input file.",
                          "url": "https://github.com/idaholab/moose/discussions/23084#discussioncomment-4615885",
                          "updatedAt": "2023-01-06T21:16:08Z",
                          "publishedAt": "2023-01-06T21:16:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "I can't find the problem...",
          "author": {
            "login": "MScKarl"
          },
          "bodyText": "Hi!\nI have a small problem with my code. I expect the results seen in the included figure. But the code jumps to the last step.\n\nThe code is as followed:\n[Mesh]\n    type = GeneratedMesh\n    dim = 2\n    nx = 100\n    ny = 100\n    xmin = -3\n    xmax = 3\n    ymin = -3\n    ymax = 3\n    elem_type = QUAD4\n[]\n\n[AuxVariables]\n\n  [./beta]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n\n  [./gamma]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n\n  [./alpha]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n\n  [./L]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n\n[]\n\n[Variables]\n\n  [./eta]\n     order = FIRST\n     family = LAGRANGE\n    [./InitialCondition]\n       type = RandomIC\n       min = -5e-5\n       max = 5e-3\n    [../]\n  [../]\n\n []\n\n[Functions]\n  [./alpha_fun] \n    type = ParsedFunction \n    value = abs(alpha_0)*(sgn_0-sqrt(r_0/(x^2+y^2))*cos(atan2(x,y)/2))\n    vars = 'alpha_0 sgn_0 r_0'\n    vals = '1.0 1.0 1.0'\n  [../]\n[]\n\n[BCs]\n\n  [./left]\n    type = NeumannBC\n    variable = 'eta'\n    boundary = 'left'\n    value = 0.0\n  [../]\n\n  [./right]\n    type = NeumannBC\n    variable = 'eta'\n    boundary = 'right'\n    value = 0.0\n  [../]\n\n  [./top]\n    type = NeumannBC\n    variable = 'eta'\n    boundary = 'top'\n    value = 0.0\n  [../]\n\n  [./bottom]\n    type = NeumannBC\n    variable = 'eta'\n    boundary = 'bottom'\n    value = 0.0\n  [../]\n\n[]\n\n[AuxKernels]\n  [./fill_alpha]\n    type = FunctionAux\n    variable = alpha\n    function = alpha_fun\n  [../]\n[]\n\n[Kernels]\n\n  #Kernels for Allen-Cahn equation\n  #Time Dependencies        \n  [./deta_dt]\n    type = TimeDerivative\n    variable = eta\n  [../]\n\n  #Interface\n  [./ACInterface]\n    type = ACInterface\n    variable = eta\n    kappa_name = g # (prova med [1 5 7 10 50 70]*10^-3)\n    mob_name = L \n  [../]\n\n  [./ACbulk_eta]\n    type = AllenCahn\n    variable = eta\n    f_name = f_eta\n    mob_name = L\n  [../]\n\n[]\n\n[Materials]\n\n  [./constants]\n    type = GenericConstantMaterial\n    prop_names = 'beta gamma L g'\n    prop_values = '-1.0 1.0 1.0 0.01'\n  [../]\n\n  [./f_eta]\n    type = DerivativeParsedMaterial\n    f_name = f_eta # Name of the function\n    args = 'beta gamma eta alpha' #the coefficients\n    function = 'alpha*eta+beta*eta^3+gamma*eta^5'\n  [../]\n\n[]\n\n[Executioner]\n\n    type = Transient\n    solve_type = NEWTON \n \n    num_steps = 200\n    dt = 0.1\n[]\n\n[Outputs]\n    exodus = true\n[]\n\nBest Regards\nKarl",
          "url": "https://github.com/idaholab/moose/discussions/23074",
          "updatedAt": "2023-01-07T17:43:07Z",
          "publishedAt": "2023-01-04T23:33:26Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nUsually if the code jumps to the steady state it means either:\n\na time derivative is missing (seems fine here)\nthe time step is too large compared to the time scale of the physics involved\na coefficient on the time derivative or ruling the physics involved has been written improperly, and the physical phenomena is happening much faster than it should\n\nI would think the last item is happening, all your coefficients are unity instead of having their true dimensionality. The mesh is similarly sized arbitrarily.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23074#discussioncomment-4612869",
                  "updatedAt": "2023-01-06T14:48:57Z",
                  "publishedAt": "2023-01-06T14:25:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}