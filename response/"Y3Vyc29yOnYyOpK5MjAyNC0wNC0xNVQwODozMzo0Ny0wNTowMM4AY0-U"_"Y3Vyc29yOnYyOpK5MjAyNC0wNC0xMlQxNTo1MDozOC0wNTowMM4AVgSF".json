{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wNC0xMlQxNTo1MDozOC0wNTowMM4AVgSF"
    },
    "edges": [
      {
        "node": {
          "title": "make -j4 error",
          "author": {
            "login": "wonkikim0422"
          },
          "bodyText": "I added two kernels that are 'Condcution.C' and 'Conduction.h'\nAfter adding, I run 'make -j4'\nThere was an error that is shown under figure.\nCould you tell me how to fix it?\n\nConduction.C\n#include \"Conduction.h\"\n\ntemplate <>\nInputParameters\nvalidParams<Conduction>()\n{\n  InputParameters params = validParams<Kernel>();\n  params.addClassDescription(\n      \"Add in Conduction\");\n  params.addParam<MaterialPropertyName>(\"Q_name\",\"Effective conductivity\");\n  params.addParam<MaterialPropertyName>(\"QM_name\",\"set as zero in this case\");\n  params.addRequiredCoupledVar(\n      \"cp\", \"chemical potential\");\n  params.addRequiredCoupledVar(\n      \"cv\", \"coupled variable\");\n  return params;\n}\n\nConduction::Conduction(const InputParameters & parameters)\n: DerivativeMaterialInterface<Kernel>(parameters),\n\t_cp_var(coupled(\"cp\")),\n\t_cp(coupledValue(\"cp\")),\n  _cv_var(coupled(\"cv\")),\n  _cv(coupledValue(\"cv\")),\n\t_grad_cp(coupledGradient(\"cp\")),\n\t_Q(getMaterialProperty<Real>(\"Q_name\")),\n\t_QM(getMaterialProperty<Real>(\"QM_name\")),\n\t_dQ(getMaterialPropertyDerivative<Real>(\"Q_name\", getVar(\"cp\", 0)->name())),\n  _dQv(getMaterialPropertyDerivative<Real>(\"Q_name\", getVar(\"cv\", 0)->name())),\n  _dQMv(getMaterialPropertyDerivative<Real>(\"QM_name\", getVar(\"cv\", 0)->name())),\n  _dQM(getMaterialPropertyDerivative<Real>(\"QM_name\", getVar(\"cp\", 0)->name()))\n{\n}\n\nReal\nConduction::computeQpResidual()\n{\n  return _Q[_qp]*_grad_u[_qp]*_grad_test[_i][_qp]+_QM[_qp]*_grad_cp[_qp]*_grad_test[_i][_qp];\n}\n\nReal\nConduction::computeQpJacobian()\n{\n  return _Q[_qp]*_grad_phi[_j][_qp]* _grad_test[_i][_qp];\n}\nReal\nConduction::computeQpOffDiagJacobian(unsigned int jvar)\n{\n   if (jvar == _cp_var)\n\t     return _QM[_qp]*_grad_phi[_j][_qp]*_grad_test[_i][_qp]+_dQ[_qp]*_grad_u[_qp]*_grad_test[_i][_qp]*_phi[_j][_qp]\n     +_dQM[_qp]*_grad_cp[_qp]*_grad_test[_i][_qp]*_phi[_j][_qp];\n    else if (jvar == _cv_var)\n        return  _dQv[_qp]*_grad_u[_qp]*_grad_test[_i][_qp]*_phi[_j][_qp]\n     +_dQMv[_qp]*_grad_cp[_qp]*_grad_test[_i][_qp]*_phi[_j][_qp];\n     else\n        return 0;\n}\n\nConduction.h\n#pragma once\n\n#include \"Kernel.h\"\n#include \"Material.h\"\n#include \"DerivativeKernelInterface.h\"\n\nclass Conduction : public DerivativeMaterialInterface<Kernel>\n{\npublic:\n\tConduction(const InputParameters& parameters);\n\tstatic InputParameters validParams();\n\nprotected:\n\tvirtual Real computeQpResidual();\n\tvirtual Real computeQpJacobian();\n\tvirtual Real computeQpOffDiagJacobian(unsigned int jvar);\n\tunsigned int _cp_var;\n\tconst VariableValue& _cp;\n\tunsigned int _cv_var;\n\tconst VariableValue& _cv;\n\tconst VariableGradient& _grad_cp;\n\t/// Mobility\n\tconst MaterialProperty<Real>& _Q;\n\tconst MaterialProperty<Real>& _QM;\n\tconst MaterialProperty<Real>& _dQ;\n\tconst MaterialProperty<Real>& _dQv;\n\tconst MaterialProperty<Real>& _dQMv;\n\tconst MaterialProperty<Real>& _dQM;\n\t/// Interfacial parameter\n};",
          "url": "https://github.com/idaholab/moose/discussions/27338",
          "updatedAt": "2024-04-15T04:04:31Z",
          "publishedAt": "2024-04-10T07:23:41Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou are using a really old syntax for validParams. We no longer use templates for those\nPlease take a look at simple kernels code for an example\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27338#discussioncomment-9070973",
                  "updatedAt": "2024-04-10T12:44:49Z",
                  "publishedAt": "2024-04-10T12:44:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you look at HeatConduction.C it uses the new syntax. In the .C file it should be\nInputParameters\nConduction::validParams()",
                          "url": "https://github.com/idaholab/moose/discussions/27338#discussioncomment-9100806",
                          "updatedAt": "2024-04-12T23:02:53Z",
                          "publishedAt": "2024-04-12T23:02:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wonkikim0422"
                          },
                          "bodyText": "Thanks! I will try it.",
                          "url": "https://github.com/idaholab/moose/discussions/27338#discussioncomment-9113160",
                          "updatedAt": "2024-04-15T04:04:32Z",
                          "publishedAt": "2024-04-15T04:04:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Install PETSc on HPC",
          "author": {
            "login": "lyyc199586"
          },
          "bodyText": "Hi all, I am trying to install moose on PSC (Pittsburgh Supercomputing Center), and I followed the tutorial on https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html\nBut when I am installing PETSc, I got:\nNow to install the library do:\nmake SLEPC_DIR=/jet/home/yliup/projects/moose/petsc/arch-moose/externalpackages/git.slepc PETSC_DIR=/jet/home/yliup/projects/moose/scripts/../petsc install\n=========================================\n*** Installing SLEPc ***\n*** Installing SLEPc at prefix location: /jet/home/yliup/projects/moose/petsc/arch-moose  ***\n====================================\nInstall complete.\nNow to check if the libraries are working do (in current directory):\nmake SLEPC_DIR=/jet/home/yliup/projects/moose/petsc/arch-moose PETSC_DIR=/jet/home/yliup/projects/moose/scripts/../petsc PETSC_ARCH=arch-moose check\n====================================\n/usr/bin/gmake --no-print-directory -f makefile PETSC_ARCH=arch-moose PETSC_DIR=/jet/home/yliup/projects/moose/scripts/../petsc SLEPC_DIR=/jet/home/yliup/projects/moose/petsc/arch-moose/externalpackages/git.slepc install-builtafterslepc\n/usr/bin/gmake --no-print-directory -f makefile PETSC_ARCH=arch-moose PETSC_DIR=/jet/home/yliup/projects/moose/scripts/../petsc SLEPC_DIR=/jet/home/yliup/projects/moose/petsc/arch-moose/externalpackages/git.slepc slepc4py-install\ngmake[6]: Nothing to be done for 'slepc4py-install'.\n=========================================\nNow to check if the libraries are working do:\nmake PETSC_DIR=/jet/home/yliup/projects/moose/scripts/../petsc PETSC_ARCH=arch-moose check\n=========================================\nmakefile:26: /jet/home/yliup/projects/raccoon/moose/scripts/../petsc/lib/petsc/conf/rules.utils: No such file or directory\ngmake[1]: *** No rule to make target '/jet/home/yliup/projects/raccoon/moose/scripts/../petsc/lib/petsc/conf/rules.utils'.  Stop.\nmakefile:26: /jet/home/yliup/projects/raccoon/moose/scripts/../petsc/lib/petsc/conf/rules.utils: No such file or directory\ngmake[1]: *** No rule to make target '/jet/home/yliup/projects/raccoon/moose/scripts/../petsc/lib/petsc/conf/rules.utils'.  Stop.\ngmakefile.test:13: /jet/home/yliup/projects/raccoon/moose/scripts/../petsc/arch-moose/lib/petsc/conf/petscvariables: No such file or directory\nmake: *** No rule to make target '/jet/home/yliup/projects/raccoon/moose/scripts/../petsc/arch-moose/lib/petsc/conf/petscvariables'.  Stop.\n\nDo you know what's going on and how to fix it?",
          "url": "https://github.com/idaholab/moose/discussions/25592",
          "updatedAt": "2024-04-15T02:59:57Z",
          "publishedAt": "2023-09-26T19:52:38Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@milljm",
                  "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7117109",
                  "updatedAt": "2023-09-26T21:23:27Z",
                  "publishedAt": "2023-09-26T21:23:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Since this step involves compilers for the first time in our instructions, we need to back up and verify how that looks. Can you run the following script and report the results?\ncd /jet/home/yliup/projects/moose/scripts\n./diagnostics.sh\nPlease run this script after you have performed the \"Activate Environment\" step.",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7123550",
                          "updatedAt": "2023-09-27T13:37:25Z",
                          "publishedAt": "2023-09-27T13:37:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lyyc199586"
                          },
                          "bodyText": "do you mean conda? I didn't use conda on HPC",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7123599",
                          "updatedAt": "2023-09-27T13:41:08Z",
                          "publishedAt": "2023-09-27T13:41:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I mean the \"Activate Environment\" step as listed on the instructions you linked, that you followed. I need you to perform that step again, before running the diagnostic script.",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7123636",
                          "updatedAt": "2023-09-27T13:45:43Z",
                          "publishedAt": "2023-09-27T13:45:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lyyc199586"
                          },
                          "bodyText": "ok, diagnostics.sh gives:\nWed Sep 27 09:48:06 EDT 2023\n\nSystem Arch: LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch Distributor ID: CentOS Description: CentOS Linux release 8.2.2004 (Core) Release: 8.2.2004 Codename: Core\n\nMOOSE Package Version: Custom Build\n\nCPU Count: 256\n\nMemory Free: 126131.793 MB\n\nVariable `which $CC` check:\n/opt/packages/mvapich2-2.3.5/gcc-8.3.1/bin/mpicc\n\n$CC --version:\ngcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)\nCopyright (C) 2018 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nMPICC:\nwhich mpicc:\n        /opt/packages/mvapich2-2.3.5/gcc-8.3.1/bin/mpicc\nmpicc -show:\n        gcc -I/opt/packages/mvapich2-2.3.5/gcc-8.3.1/include -L/opt/packages/mvapich2-2.3.5/gcc-8.3.1/lib -Wl,-rpath -Wl,/opt/packages/mvapich2-2.3.5/gcc-8.3.1/lib -Wl,--enable-new-dtags -lmpi\n\nCOMPILER gcc:\ngcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)\nCopyright (C) 2018 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nPython:\n        /jet/home/yliup/mambaforge3/bin/python\n        Python 3.10.12\n\nMODULES:\n\nCurrently Loaded Modules:\n  1) allocations/1.0   2) psc.allocations.user/1.0   3) mvapich2/2.3.5-gcc8.3.1\n\n\n\nPETSC_DIR not set\n\nENVIRONMENT:\n /usr/share/lmod/8.2.7/libexec/log_modules \"$@\";\n ret=$?;\n return $ret\nBASH_ENV=/usr/share/lmod/lmod/init/bash\nBASH_FUNC_ml%%=() {  eval $($LMOD_DIR/ml_cmd \"$@\")\nBASH_FUNC_module%%=() {  eval $($LMOD_CMD bash \"$@\") && eval $(${LMOD_SETTARG_CMD:-:} -s sh);\nCC=mpicc\nCMAKE_PREFIX_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1\nCONDA_DEFAULT_ENV=base\nCONDA_EXE=/jet/home/yliup/mambaforge3/bin/conda\nCONDA_PREFIX=/jet/home/yliup/mambaforge3\nCONDA_PROMPT_MODIFIER=(base)\nCONDA_PYTHON_EXE=/jet/home/yliup/mambaforge3/bin/python\nCONDA_SHLVL=1\nCPLUS_INCLUDE_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/include\nCXX=mpicxx\nC_INCLUDE_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/include\nDBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/83585/bus\nDISPLAY=10.8.11.31:19.0\nF77=mpif77\nF90=mpif90\nFC=mpif90\nHISTCONTROL=ignoredups\nHISTSIZE=1000\nHOME=/jet/home/yliup\nHOSTNAME=br013.ib.bridges2.psc.edu\nINCLUDE=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/include\nLANG=C.UTF-8\nLD_LIBRARY_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/lib\nLESSOPEN=||/usr/bin/lesspipe.sh %s\nLIBRARY_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/lib\nLMOD_CMD=/usr/share/lmod/lmod/libexec/lmod\nLMOD_DIR=/usr/share/lmod/lmod/libexec\nLMOD_FAMILY_MPI=mvapich2\nLMOD_FAMILY_MPI_VERSION=2.3.5-gcc8.3.1\nLMOD_MPI_NAME=mvapich2\nLMOD_MPI_VERSION=2.3.5\nLMOD_PKG=/usr/share/lmod/lmod\nLMOD_ROOT=/usr/share/lmod\nLMOD_SETTARG_FULL_SUPPORT=no\nLMOD_VERSION=8.2.7\nLMOD_sys=Linux\nLOADEDMODULES=allocations/1.0:psc.allocations.user/1.0:mvapich2/2.3.5-gcc8.3.1\nLOGNAME=yliup\nLS_COLORS=rs=0:di=38;5;33:ln=38;5;51:mh=00:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=01;05;37;41:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;40:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.zst=38;5;9:*.tzst=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.wim=38;5;9:*.swm=38;5;9:*.dwm=38;5;9:*.esd=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.mjpg=38;5;13:*.mjpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.m4a=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.oga=38;5;45:*.opus=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:\nMAIL=/var/spool/mail/yliup\nMANPATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/share/man:/usr/share/lmod/lmod/share/man::/opt/puppetlabs/puppet/share/man\nMODULEPATH=/opt/modulefiles/production:/opt/modulefiles/preproduction:/opt/modulefiles/deprecated:/usr/share/modulefiles:/usr/share/modulefiles/Linux:/usr/share/modulefiles/Core:/usr/share/lmod/lmod/modulefiles/Core\nMODULEPATH_ROOT=/usr/share/modulefiles\nMODULESHOME=/usr/share/lmod/lmod\nMOOSE_DIR=/jet/home/yliup/projects/moose\nMPICC=mpicc\nMPICXX=mpicxx\nMPIF77=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/bin/mpif77\nMPIF90=mpif90\nMPIFC=mpifort\nMPI_HOME=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/\nMV2_CPU_BINDING_POLICY=hybrid\nMV2_USE_MCAST=1\nMYPROXY_SERVER=myproxy.xsede.org,myproxy.psc.xsede.org\nOLDPWD=/jet/home/yliup\nPATH=/jet/home/yliup/mambaforge3/bin:/jet/home/yliup/mambaforge3/condabin:/jet/home/yliup/downloads/cmake-3.20.0-linux-x86_64/bin:/opt/packages/mvapich2-2.3.5/gcc-8.3.1/bin:/jet/home/yliup/.local/bin:/jet/home/yliup/bin:/opt/packages/psc.allocations.user/bin:/opt/packages/allocations/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/packages/interact/bin:/opt/puppetlabs/bin\nPKG_CONFIG_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/lib/pkgconfig\nPROJECT=/ocean/projects/mch230012p/yliup\nPWD=/jet/home/yliup/projects/moose/scripts\nSALLOC_ACCOUNT=mch230012p\nSBATCH_EXPORT=NONE\nSHELL=/usr/psc/shells/bash\nSHLVL=2\nSLURM_EXPORT_ENV=ALL\nSSH_CLIENT=152.3.43.55 1696 22\nSSH_CONNECTION=152.3.43.55 1696 128.182.81.31 22\nSSH_TTY=/dev/pts/53\nSUDO_PROMPT=Password for %u@psc.edu:\nS_COLORS=auto\nTERM=xterm-256color\nTMOUT=604800\nUSER=yliup\nXDG_RUNTIME_DIR=/run/user/83585\nXDG_SESSION_ID=679104\nXML_CATALOG_FILES=file:///jet/home/yliup/mambaforge3/etc/xml/catalog file:///etc/xml/catalog\n_=/usr/bin/env\n_CE_CONDA=\n_CE_M=\n_LMFILES_=/opt/modulefiles/production/allocations/1.0.lua:/opt/modulefiles/production/psc.allocations.user/1.0.lua:/opt/modulefiles/production/mvapich2/2.3.5-gcc8.3.1.lua\n_ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAuMCxbImNfc2hvcnRUaW1lIl09MC40NTY4MTg4MTkwNDYwMixkZXB0aFQ9e30sZmFtaWx5PXtbIm1waSJdPSJtdmFwaWNoMiIsfSxtVD17YWxsb2NhdGlvbnM9e1siZm4iXT0iL29wdC9tb2R1bGVmaWxlcy9wcm9kdWN0aW9uL2FsbG9jYXRpb25zLzEuMC5sdWEiLFsiZnVsbE5hbWUiXT0iYWxsb2NhdGlvbnMvMS4wIixbImxvYWRPcmRlciJdPTEscHJvcFQ9e30sWyJzdGFja0RlcHRoIl09MCxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0iYWxsb2NhdGlvbnMiLH0sbXZhcGljaDI9e1siZm4iXT0iL29wdC9tb2R1bGVmaWxlcy9wcm9kdWN0aW9uL212YXBpY2gyLzIuMy41\n_ModuleTable002_=LWdjYzguMy4xLmx1YSIsWyJmdWxsTmFtZSJdPSJtdmFwaWNoMi8yLjMuNS1nY2M4LjMuMSIsWyJsb2FkT3JkZXIiXT0zLHByb3BUPXt9LFsic3RhY2tEZXB0aCJdPTAsWyJzdGF0dXMiXT0iYWN0aXZlIixbInVzZXJOYW1lIl09Im12YXBpY2gyLzIuMy41LWdjYzguMy4xIix9LFsicHNjLmFsbG9jYXRpb25zLnVzZXIiXT17WyJmbiJdPSIvb3B0L21vZHVsZWZpbGVzL3Byb2R1Y3Rpb24vcHNjLmFsbG9jYXRpb25zLnVzZXIvMS4wLmx1YSIsWyJmdWxsTmFtZSJdPSJwc2MuYWxsb2NhdGlvbnMudXNlci8xLjAiLFsibG9hZE9yZGVyIl09Mixwcm9wVD17fSxbInN0YWNrRGVwdGgiXT0wLFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJwc2MuYWxsb2NhdGlvbnMudXNl\n_ModuleTable003_=ciIsfSx9LG1wYXRoQT17Ii9vcHQvbW9kdWxlZmlsZXMvcHJvZHVjdGlvbiIsIi9vcHQvbW9kdWxlZmlsZXMvcHJlcHJvZHVjdGlvbiIsIi9vcHQvbW9kdWxlZmlsZXMvZGVwcmVjYXRlZCIsIi91c3Ivc2hhcmUvbW9kdWxlZmlsZXMiLCIvdXNyL3NoYXJlL21vZHVsZWZpbGVzL0xpbnV4IiwiL3Vzci9zaGFyZS9tb2R1bGVmaWxlcy9Db3JlIiwiL3Vzci9zaGFyZS9sbW9kL2xtb2QvbW9kdWxlZmlsZXMvQ29yZSIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L21vZHVsZWZpbGVzL3Byb2R1Y3Rpb246L29wdC9tb2R1bGVmaWxlcy9wcmVwcm9kdWN0aW9uOi9vcHQvbW9kdWxlZmlsZXMvZGVwcmVjYXRlZDovdXNyL3NoYXJlL21vZHVsZWZpbGVzOi91c3Ivc2hhcmUvbW9kdWxl\n_ModuleTable004_=ZmlsZXMvTGludXg6L3Vzci9zaGFyZS9tb2R1bGVmaWxlcy9Db3JlOi91c3Ivc2hhcmUvbG1vZC9sbW9kL21vZHVsZWZpbGVzL0NvcmUiLH0=\n_ModuleTable_Sz_=4\n__LMOD_REF_COUNT_CMAKE_PREFIX_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1:1\n__LMOD_REF_COUNT_CPLUS_INCLUDE_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/include:1\n__LMOD_REF_COUNT_C_INCLUDE_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/include:1\n__LMOD_REF_COUNT_INCLUDE=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/include:1\n__LMOD_REF_COUNT_LD_LIBRARY_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/lib:1\n__LMOD_REF_COUNT_LIBRARY_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/lib:1\n__LMOD_REF_COUNT_LOADEDMODULES=allocations/1.0:1;psc.allocations.user/1.0:1;mvapich2/2.3.5-gcc8.3.1:1\n__LMOD_REF_COUNT_MANPATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/share/man:1;/usr/share/lmod/lmod/share/man:1;/opt/puppetlabs/puppet/share/man:1\n__LMOD_REF_COUNT_MODULEPATH=/opt/modulefiles/production:1;/opt/modulefiles/preproduction:1;/opt/modulefiles/deprecated:1;/usr/share/modulefiles:1;/usr/share/modulefiles/Linux:1;/usr/share/modulefiles/Core:1;/usr/share/lmod/lmod/modulefiles/Core:1\n__LMOD_REF_COUNT_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/bin:1;/jet/home/yliup/.local/bin:1;/jet/home/yliup/bin:1;/opt/packages/psc.allocations.user/bin:1;/opt/packages/allocations/bin:1;/usr/local/bin:1;/usr/bin:1;/usr/local/sbin:1;/usr/sbin:1;/opt/packages/interact/bin:1;/opt/puppetlabs/bin:1\n__LMOD_REF_COUNT_PKG_CONFIG_PATH=/opt/packages/mvapich2-2.3.5/gcc-8.3.1/lib/pkgconfig:1\n__LMOD_REF_COUNT__LMFILES_=/opt/modulefiles/production/allocations/1.0.lua:1;/opt/modulefiles/production/psc.allocations.user/1.0.lua:1;/opt/modulefiles/production/mvapich2/2.3.5-gcc8.3.1.lua:1\n}\n}",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7123699",
                          "updatedAt": "2023-09-27T13:50:43Z",
                          "publishedAt": "2023-09-27T13:50:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Because you have Conda installed and active (it will take priority according to the PATH variable), can you list the packages being provided in the base environment?\nconda list",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7123958",
                          "updatedAt": "2023-09-27T14:12:29Z",
                          "publishedAt": "2023-09-27T14:12:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lyyc199586"
                          },
                          "bodyText": "# packages in environment at /jet/home/yliup/mambaforge3:\n#\n# Name                    Version                   Build  Channel\n_libgcc_mutex             0.1                 conda_forge    conda-forge\n_openmp_mutex             4.5                       2_gnu    conda-forge\nboltons                   23.0.0             pyhd8ed1ab_0    conda-forge\nbrotli-python             1.1.0           py310hc6cd4ac_0    conda-forge\nbzip2                     1.0.8                h7f98852_4    conda-forge\nc-ares                    1.19.1               hd590300_0    conda-forge\nca-certificates           2023.08.22           h06a4308_0\ncertifi                   2023.7.22          pyhd8ed1ab_0    conda-forge\ncffi                      1.15.1          py310h255011f_3    conda-forge\ncharset-normalizer        3.2.0              pyhd8ed1ab_0    conda-forge\ncolorama                  0.4.6              pyhd8ed1ab_0    conda-forge\nconda                     23.7.4          py310h06a4308_0\nconda-libmamba-solver     23.7.0          py310h06a4308_0\nconda-package-handling    2.2.0              pyh38be061_0    conda-forge\nconda-package-streaming   0.9.0              pyhd8ed1ab_0    conda-forge\ncryptography              41.0.3          py310h75e40e8_0    conda-forge\nfmt                       9.1.0                h924138e_0    conda-forge\nicu                       73.2                 h59595ed_0    conda-forge\nidna                      3.4                pyhd8ed1ab_0    conda-forge\njsonpatch                 1.32               pyhd8ed1ab_0    conda-forge\njsonpointer               2.1                pyhd3eb1b0_0\nkeyutils                  1.6.1                h166bdaf_0    conda-forge\nkrb5                      1.21.2               h659d440_0    conda-forge\nld_impl_linux-64          2.40                 h41732ed_0    conda-forge\nlibarchive                3.6.2                h039dbb9_1    conda-forge\nlibcurl                   8.3.0                hca28451_0    conda-forge\nlibedit                   3.1.20221030         h5eee18b_0\nlibev                     4.33                 h516909a_1    conda-forge\nlibffi                    3.4.4                h6a678d5_0\nlibgcc-ng                 13.2.0               h807b86a_2    conda-forge\nlibgomp                   13.2.0               h807b86a_2    conda-forge\nlibiconv                  1.17                 h166bdaf_0    conda-forge\nlibmamba                  1.5.0                h658169a_0    conda-forge\nlibmambapy                1.5.0           py310h8aae740_0    conda-forge\nlibnghttp2                1.52.0               h2d74bed_1\nlibnsl                    2.0.0                h7f98852_0    conda-forge\nlibsolv                   0.7.24               hfc55251_3    conda-forge\nlibsqlite                 3.43.0               h2797004_0    conda-forge\nlibssh2                   1.11.0               h0841786_0    conda-forge\nlibstdcxx-ng              13.2.0               h7e041cc_2    conda-forge\nlibuuid                   2.38.1               h0b41bf4_0    conda-forge\nlibxml2                   2.11.5               h232c23b_1    conda-forge\nlibzlib                   1.2.13               hd590300_5    conda-forge\nlz4-c                     1.9.4                hcb278e6_0    conda-forge\nlzo                       2.10              h516909a_1000    conda-forge\nmamba                     1.5.0           py310h51d5547_0    conda-forge\nncurses                   6.4                  hcb278e6_0    conda-forge\nopenssl                   3.1.3                hd590300_0    conda-forge\npackaging                 23.1               pyhd8ed1ab_0    conda-forge\npip                       23.2.1             pyhd8ed1ab_0    conda-forge\npluggy                    1.3.0              pyhd8ed1ab_0    conda-forge\npybind11-abi              4                    hd8ed1ab_3    conda-forge\npycosat                   0.6.4           py310h5764c6d_1    conda-forge\npycparser                 2.21               pyhd8ed1ab_0    conda-forge\npyopenssl                 23.2.0             pyhd8ed1ab_1    conda-forge\npysocks                   1.7.1              pyha2e5f31_6    conda-forge\npython                    3.10.12         hd12c33a_0_cpython    conda-forge\npython_abi                3.10                    4_cp310    conda-forge\nreadline                  8.2                  h8228510_1    conda-forge\nreproc                    14.2.4               h295c915_1\nreproc-cpp                14.2.4               h295c915_1\nrequests                  2.31.0             pyhd8ed1ab_0    conda-forge\nruamel.yaml               0.17.32         py310h2372a71_0    conda-forge\nruamel.yaml.clib          0.2.7           py310h1fa729e_1    conda-forge\nsetuptools                68.2.2             pyhd8ed1ab_0    conda-forge\ntk                        8.6.12               h27826a3_0    conda-forge\ntoolz                     0.12.0             pyhd8ed1ab_0    conda-forge\ntqdm                      4.66.1             pyhd8ed1ab_0    conda-forge\ntzdata                    2023c                h71feb2d_0    conda-forge\nurllib3                   2.0.5              pyhd8ed1ab_0    conda-forge\nwheel                     0.41.2             pyhd8ed1ab_0    conda-forge\nxz                        5.4.2                h5eee18b_0\nyaml-cpp                  0.7.0                h27087fc_2    conda-forge\nzlib                      1.2.13               hd590300_5    conda-forge\nzstandard                 0.19.0          py310h5764c6d_0    conda-forge\nzstd                      1.5.5                hfc55251_0    conda-forge",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7123980",
                          "updatedAt": "2023-09-27T14:14:00Z",
                          "publishedAt": "2023-09-27T14:14:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Looks pretty harmless up front. But lets be sure that some these are not getting in the way. Can you perform the following, and then try to build PETSc again:\nmamba create -n testing -qy\nmamba activate testing\n(Creates and activates a blank Conda environment)\nIf an error occurs, can you then post the corresponding configure.log that it mentions? That log should be at:\n/jet/home/yliup/projects/moose/petsc/configure.log",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7124023",
                          "updatedAt": "2023-09-27T14:17:21Z",
                          "publishedAt": "2023-09-27T14:17:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lyyc199586"
                          },
                          "bodyText": "thanks, it seems to be working now:\n$ make PETSC_DIR=/jet/home/yliup/projects/moose/scripts/../petsc PETSC_ARCH=arch-moose check\n---\nRunning PETSc check examples to verify correct installation\nUsing PETSC_DIR=/jet/home/yliup/projects/moose/scripts/../petsc and PETSC_ARCH=arch-moose\nC/C++ example src/snes/tutorials/ex19 run successfully with 1 MPI process\nC/C++ example src/snes/tutorials/ex19 run successfully with 2 MPI processes\nC/C++ example src/snes/tutorials/ex19 run successfully with hypre\nC/C++ example src/snes/tutorials/ex19 run successfully with mumps\nC/C++ example src/snes/tutorials/ex19 run successfully with superlu_dist\nC/C++ example src/vec/vec/tests/ex47 run successfully with hdf5\nRunning SLEPc check examples to verify correct installation\nUsing SLEPC_DIR=/jet/home/yliup/projects/moose/petsc/arch-moose/externalpackages/git.slepc, PETSC_DIR=/jet/home/yliup/projects/moose/scripts/../petsc, and PETSC_ARCH=arch-moose\nC/C++ example src/eps/tests/test10 run successfully with 1 MPI process\nC/C++ example src/eps/tests/test10 run successfully with 2 MPI processes\nCompleted SLEPc check examples\nCompleted PETSc check examples",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7125584",
                          "updatedAt": "2023-09-27T16:39:47Z",
                          "publishedAt": "2023-09-27T16:39:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "If I had to guess, it would be the following Conda packages that might have been getting in the way:\nlibstdcxx-ng              13.2.0               h7e041cc_2    conda-forge\nld_impl_linux-64          2.40                 h41732ed_0    conda-forge\nlibgcc-ng                 13.2.0               h807b86a_2    conda-forge\nlibgomp                   13.2.0               h807b86a_2    conda-forge\n\n...or maybe one of the other lib* packages...",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7125620",
                          "updatedAt": "2023-09-27T16:43:23Z",
                          "publishedAt": "2023-09-27T16:43:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lyyc199586"
                          },
                          "bodyText": "I will do following installation in the testing env",
                          "url": "https://github.com/idaholab/moose/discussions/25592#discussioncomment-7125629",
                          "updatedAt": "2023-09-27T16:44:13Z",
                          "publishedAt": "2023-09-27T16:44:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Multi-Scale Simulation Using Moose HeatTransfer and Phase Field Modules",
          "author": {
            "login": "BingkangLi"
          },
          "bodyText": "Hi,\nI'm exploring the implementation of a multi-scale simulation using Moose's HeatTransfer and Phase Field modules. The workflow entails computing the temperature field within a parent application. Subsequently, the temperature data from each unit will be transmitted to a child application. This child application will then utilize the received temperature data to execute a phase field simulation. Following the phase field simulation, the effective thermal conductivity will be computed based on the results obtained.\nIn this setup, each unit will run a phase field simulation independently. To manage this process, I plan to employ CentroidMultiApp to seamlessly integrate the child and parent applications.\nHowever, the phase field represents a dynamic process where the computation of each phase field iteration relies on the results obtained from the previous step. Therefore, my concern pertains to whether CentroidMultiApp can ensure that the subsequent invocation of the phase field can accurately access the results from the previous iteration.\nI welcome any insights or recommendations on how to ensure the smooth integration and continuity of results within this multi-scale simulation framework.",
          "url": "https://github.com/idaholab/moose/discussions/27339",
          "updatedAt": "2024-04-14T14:08:33Z",
          "publishedAt": "2024-04-10T15:07:29Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nfrom the previous step\n\nyou mean time step right? Or do you mean fixed point iteration between the heat transfer and phase field simulations?\nIf you use a TransientMultiApp for the phase field  simulations, they will naturally restart from where they were on the previous step.\nIf you need these solves to be transients, you can specify a Transient executioner with no time derivative term, that is the same as a steady solve.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27339#discussioncomment-9100694",
                  "updatedAt": "2024-04-12T22:32:22Z",
                  "publishedAt": "2024-04-12T22:32:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "BingkangLi"
                          },
                          "bodyText": "Hi @GiudGiud  I mean each element in the heat conduction FEM simulation will run a phase-field simulation. I examined the source code of CentroidMultiApp and found that it is public from the TransientMultiApp. If I use CentroidMultiApp, can I somehow automatically achieve the 'naturally restart from where they were on the previous step' behavior on each element of the heat conduction FEM simulation?\nthe CentroidMultiApp.h file\uff1a\n\nclass CentroidMultiApp : public TransientMultiApp, public BlockRestrictable\n{\npublic:\nstatic InputParameters validParams();\nCentroidMultiApp(const InputParameters & parameters);\nprotected:\nvirtual void fillPositions() override;\n};\n\nBinglang Li",
                          "url": "https://github.com/idaholab/moose/discussions/27339#discussioncomment-9101598",
                          "updatedAt": "2024-04-13T04:30:56Z",
                          "publishedAt": "2024-04-13T04:30:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this is correct. Yes CentroidMultiApp will have the same behavior as TransientMultiApp in that regard.",
                          "url": "https://github.com/idaholab/moose/discussions/27339#discussioncomment-9102957",
                          "updatedAt": "2024-04-13T10:17:53Z",
                          "publishedAt": "2024-04-13T10:17:52Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "note that if a multiapp at every element centroid is \"too many\" multiapps, you can use the 'positions' arguments of the transient multiapp instead",
                          "url": "https://github.com/idaholab/moose/discussions/27339#discussioncomment-9102961",
                          "updatedAt": "2024-04-13T10:18:31Z",
                          "publishedAt": "2024-04-13T10:18:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "BingkangLi"
                          },
                          "bodyText": "I tested the CentroidMultiApp ,you are right, thank you very much. :-)",
                          "url": "https://github.com/idaholab/moose/discussions/27339#discussioncomment-9109578",
                          "updatedAt": "2024-04-14T14:10:04Z",
                          "publishedAt": "2024-04-14T14:08:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Explicit Method for Large Deformation Model",
          "author": {
            "login": "FanZhangchen"
          },
          "bodyText": "Hi,\nSince I would like to build a dislocation density coupled large deformation model, I wonder if it is possible to implement the explicit method to the solid mechanics model. Or is it possible to set the implicit = true while the time integrator is explicit so that I could have a time-explicit only model?\nAlso, I do not quite understand the linear solver and nonlinear solver in Moose. I am curious about what will the nonlinear solver do in an explicit method.\nI do not know too much in this field, if my question is not clear, please let me know.\nBest and Thanks,\nzc",
          "url": "https://github.com/idaholab/moose/discussions/27359",
          "updatedAt": "2024-04-14T05:27:05Z",
          "publishedAt": "2024-04-12T11:31:21Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "@FanZhangchen we have done some work on dislocation dynamics coupled with mechanics, the repository is here:\nhttps://github.com/ngrilli/c_pfor_am\nand you can check our recent paper:\nhttps://www.sciencedirect.com/science/article/pii/S002250962300039X\nWe have used explicit option in the kernels for dislocation transport,\nhowever, I do not recommend to use explicit for the stress equilibrium equation.\nYou can keep the implicit formulation for the stress equilibrium, while using explicit to update other variables,\nsuch as dislocation density.\nBest Regards,\nNicol\u00f2",
                  "url": "https://github.com/idaholab/moose/discussions/27359#discussioncomment-9096659",
                  "updatedAt": "2024-04-12T14:07:41Z",
                  "publishedAt": "2024-04-12T14:07:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I am curious about what will the nonlinear solver do in an explicit method.\n\nnot much to do if  all the terms are explicit. But you still have an equation albeit fairly easy to solve.\nThere has been some work on simplifying the solve for fully explicit cases (see ActuallyExplicitEuler and the ExplicitTimeIntegrator time integrator code)",
                          "url": "https://github.com/idaholab/moose/discussions/27359#discussioncomment-9100652",
                          "updatedAt": "2024-04-12T22:21:26Z",
                          "publishedAt": "2024-04-12T22:21:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "@ngrilli Thanks for your advice. That makes sense to me to use the explicit method for the dislocation density and use implicit for the stress equilibrium equation. I have read your paper and it is beneficial for me. We might meet similar numerical oscillations caused by the dislocation density transport equation and I am also trying to solve it with DG.\n@GiudGiud Thanks for your reply. I will check the code. And I have another question about the off-diagonal terms in the stiffness matrix of Moose. Maybe I ignored some details, but I didn't find the document that describes how Moose treats the coupled off-diagonal terms. Are there any descriptions of how Moose obtains the coupled off-diagonal terms in the stiffness matrix? I just want to have a further understanding of the coupled terms in Moose. Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/27359#discussioncomment-9107490",
                          "updatedAt": "2024-04-14T05:27:06Z",
                          "publishedAt": "2024-04-14T05:27:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Negative Jacobian during reading mesh",
          "author": {
            "login": "jin0123456"
          },
          "bodyText": "Hello,\nI used Filemesh and FileMeshGenerator separately for the same problem, and the only difference in the input file is the mesh set.\nLike this,\n[Mesh]\n  type = FileMesh\n  file = IFA-513r6_3D.e\n  patch_size = 60\n  patch_update_strategy = always\n[]\n\n[Mesh]\n  patch_size = 60\n  patch_update_strategy = always\n  [simple_mesh]\n    type = FileMeshGenerator\n    file = IFA-513r6_3D.e\n  []\n  allow_renumbering = false\n[]\n\nBut the output is totaly different, for the first case the simulation could go on in several time steps utill crashed for other reasons. For the second case it would output this,\nElem Information\n   id()=invalid, unique_id()=invalid, subdomain_id()=98, processor_id()=45\n   type()=QUAD4\n   dim()=2\n   n_nodes()=4\n   mapping=LAGRANGE_MAP\n    0  Node id()=563, processor_id()=45, Point=(x,y,z)=(-0.00518801, 0.00168569, 0.810184)\n    DoFs=(0/0/102969) (0/1/102970) (0/2/102971) (1/0/1241051) (1/17/1267853) (1/18/1267854) (1/19/1267855) \n    1  Node id()=607, processor_id()=45, Point=(x,y,z)=(-0.00446707, 0.00146398, 0.810184)\n    DoFs=(0/0/102933) (0/1/102934) (0/2/102935) (1/0/1241039) (1/17/1267817) (1/18/1267818) (1/19/1267819) \n    2  Node id()=572, processor_id()=45, Point=(x,y,z)=(-0.00468301, -5.73504e-19, 0.810184)\n    DoFs=(0/0/102936) (0/1/102937) (0/2/102938) (1/0/1241040) (1/17/1267820) (1/18/1267821) (1/19/1267822) \n    3  Node id()=544, processor_id()=3, Point=(x,y,z)=(-0.005455, -6.68045e-19, 0.810184)\n    DoFs=(0/0/7131) (0/1/7132) (0/2/7133) (1/0/82870) (1/17/107896) (1/18/107897) (1/19/107898) \n   n_sides()=4\n    neighbor(0)=nullptr\n    neighbor(1)=nullptr\n    neighbor(2)=nullptr\n    neighbor(3)=nullptr\n   hmin()=0.000754263, hmax()=0.00176614\n   volume()=1.20233e-06\n   active()=1, ancestor()=0, subactive()=0, has_children()=0\n   parent()=nullptr\n   level()=0, p_level()=0\n   refinement_flag()=DO_NOTHING\n   p_refinement_flag()=DO_NOTHING\n   DoFs=\nlibMesh terminating:\nERROR: negative Jacobian -3.9443e-31 at point (x,y,z)=(0.00136058, 0.000426164, 0.810184) in element 18446744073709551615\n[3] ../src/fe/fe_map.C, line 903, compiled Sep  7 2023 at 15:19:38\n\nSo is it a problem with my mesh? Or why are the results so different?",
          "url": "https://github.com/idaholab/moose/discussions/27316",
          "updatedAt": "2024-04-12T23:42:45Z",
          "publishedAt": "2024-04-08T11:45:50Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nthere is a problem with the mesh. You have a flipped element, that s what the second error is saying. Does this happen on the very first time step? Or does this problem develop during the simulation?\nyou can use the meshDiagnosticsGenerator, another mesh generator to examine the mesh\nhttps://mooseframework.inl.gov/source/meshgenerators/MeshDiagnosticsGenerator.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9046355",
                  "updatedAt": "2024-04-08T14:34:06Z",
                  "publishedAt": "2024-04-08T13:36:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jin0123456"
                          },
                          "bodyText": "It happens on the first step.\nAnd I have tried meshDiagnosticsGenerator, it ouput like this,\n*** Info ***\nSideset up (990) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset clad_inside (991) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset outer (992) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset clad_top (993) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset down (994) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset clad_down (995) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset fuel_top (996) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset fuel_outer (997) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset fuel_down (998) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nSideset center (999) is consistently oriented with regards to the blocks it neighbors\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nNumber of elements below prescribed minimum volume : 0\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nNumber of elements with negative volume : 0\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nNumber of elements above prescribed maximum volume : 0\ufffd[39m\nElement type in subdomain clad (98) : HEX8\nElement type in subdomain fuel (99) : HEX8\n\n\ufffd[36m\n*** Info ***\nNumber of elements overlapping (node-based heuristics): 0\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nNumber of elements overlapping (centroid-based heuristics): 0\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nNumber of non-planar element sides detected: 0\ufffd[39m\nNon-conformality detected at  :   Node id()=1, processor_id()=43, Point=(x,y,z)=(-0.00518801, 0.00168569,  0.00094)\n    DoFs=\n\nNon-conformality detected at  :   Node id()=1, processor_id()=43, Point=(x,y,z)=(-0.00518801, 0.00168569,  0.00094)\n    DoFs=\n\nNon-conformality detected at  :   Node id()=1, processor_id()=43, Point=(x,y,z)=(-0.00518801, 0.00168569,  0.00094)\n    DoFs=\n\nNon-conformality detected at  :   Node id()=1, processor_id()=43, Point=(x,y,z)=(-0.00518801, 0.00168569,  0.00094)\n    DoFs=\n\nNon-conformality detected at  :   Node id()=2, processor_id()=43, Point=(x,y,z)=(-0.00441319, 0.00320637,  0.00094)\n    DoFs=\n\nNon-conformality detected at  :   Node id()=2, processor_id()=43, Point=(x,y,z)=(-0.00441319, 0.00320637,  0.00094)\n    DoFs=\n\nNon-conformality detected at  :   Node id()=2, processor_id()=43, Point=(x,y,z)=(-0.00441319, 0.00320637,  0.00094)\n    DoFs=\n\nNon-conformality detected at  :   Node id()=2, processor_id()=43, Point=(x,y,z)=(-0.00441319, 0.00320637,  0.00094)\n    DoFs=\n\nNon-conformality detected at  :   Node id()=3, processor_id()=43, Point=(x,y,z)=(-0.00320637, 0.00441319,  0.00094)\n    DoFs=\n\nMaximum output reached, log is silenced\n\n\ufffd[33m\n*** Warning ***\nThe following warning occurred in the object \"diag\", of type \"MeshDiagnosticsGenerator\".\n\nNumber of non-conformal nodes: 530\ufffd[39m\n\nI think it's the mesh problem? I will regenerate it and try again.",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9052704",
                          "updatedAt": "2024-04-09T01:04:40Z",
                          "publishedAt": "2024-04-09T01:04:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "where is the output from the diagnostics for negative Jacobians in elements?\n530 non-conformal nodes is definitely a problem, we only support non-conformality arising from uniform mesh refinement performed by libmesh",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9053342",
                          "updatedAt": "2024-04-09T02:40:33Z",
                          "publishedAt": "2024-04-09T02:40:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jin0123456"
                          },
                          "bodyText": "It doesn't seem to output the diagnostics for negative Jacobians in elements although I set check_local_jacobian = WARNING.\nSo I need to improve my mesh.",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9053504",
                          "updatedAt": "2024-04-09T03:06:56Z",
                          "publishedAt": "2024-04-09T03:06:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it should still give you a log that says \"n\" elements (n can be 0) have negative jacobians",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9053580",
                          "updatedAt": "2024-04-09T03:21:20Z",
                          "publishedAt": "2024-04-09T03:21:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jin0123456"
                          },
                          "bodyText": "My bad, i didn't see it before.\n\ufffd[36m\n*** Info ***\nNumber of elements with a negative Jacobian: 0\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nNumber of element sides with negative Jacobians: 0\ufffd[39m",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9054641",
                          "updatedAt": "2024-04-09T06:23:36Z",
                          "publishedAt": "2024-04-09T06:23:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok thanks.\nthe initial error is odd\nERROR: negative Jacobian -3.9443e-31 at point (x,y,z)=(0.00136058, 0.000426164, 0.810184) in element 18446744073709551615\nthere's a lot of signs that this is reading out of bounds because the id of the element is marked as invalid and then reported as a huge numbner.\nDo you mind running this in a debugger and reporting a full backtrace?\nhttps://mooseframework.inl.gov/application_development/debugging.html",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9058785",
                          "updatedAt": "2024-04-09T12:58:52Z",
                          "publishedAt": "2024-04-09T12:58:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jin0123456"
                          },
                          "bodyText": "You are right. I definetely dont have that much elements, maybe the file reading or transforming process went wrong.\nSo I set allow_renumbering = true, the simulation could go on.",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9064945",
                          "updatedAt": "2024-04-10T01:02:03Z",
                          "publishedAt": "2024-04-10T01:02:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Im glad you found a way forward\nCould you please share the mesh and the input? I ll try to find the bug when I have time",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9065734",
                          "updatedAt": "2024-04-10T03:08:39Z",
                          "publishedAt": "2024-04-10T03:08:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jin0123456"
                          },
                          "bodyText": "I put there.https://github.com/jin0123456/miniature-system\nThough you may not be able to run it directly, using the mesh in a simple thermal conduction problem could work.",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9066067",
                          "updatedAt": "2024-04-10T04:17:50Z",
                          "publishedAt": "2024-04-10T04:17:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "on a simple thermal conduction problem I am hitting\n*** ERROR ***\nCLI_ARGS:1.2:\nThe following error occurred in the Problem 'MOOSE Problem' of type FEProblem.\n\nA libMesh::PetscSolverException was raised during FEProblemBase::computeJacobianTags\nNew nonzero at (2,6) caused a malloc\nUse MatSetOption(A, MAT_NEW_NONZERO_ALLOCATION_ERR, PETSC_FALSE) to turn off this check\n\n\nwe can avoid it with this:\n[Problem]\n  error_on_jacobian_nonzero_reallocation = false\n[]\n\nor by turning the quadrature = true off in the GapHeatTransfer block.",
                          "url": "https://github.com/idaholab/moose/discussions/27316#discussioncomment-9100896",
                          "updatedAt": "2024-04-12T23:34:41Z",
                          "publishedAt": "2024-04-12T23:34:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Time stepper computed zero time step size on initial which is not allowed.",
          "author": {
            "login": "jmeier"
          },
          "bodyText": "Dear Moose-Community,\nIn one of my Moose input files I defined two TimeSequenceSteppers and get the following error:\n*** ERROR ***\nThe following error occurred in the object \"Executioner\", of type \"Transient\".\n\nTime stepper computed zero time step size on initial which is not allowed.\n1. If you are using an existing time stepper, double check the values in your input file or report an error.\n2. If you are developing a new time stepper, make sure that initial time step size in your code is computed correctly.\n\nMy Executioner-block looks like:\n[Executioner]\n  type = Transient\n\n  end_time = 1.0\n  [TimeSteppers]\n    [TimeSequenceStepper1]\n      type = TimeSequenceStepper\n      time_sequence = '0.5'\n    []\n    [TimeSequenceStepper2]\n      type = TimeSequenceStepper\n      time_sequence = '0.0 0.2 0.4 1.0'\n    []\n  []\n\nI would have expected, that Moose is merging the time steps into '0.0 0.2 0.4 0.5 1.0' rather than giving this error message. My impression from TimeStepper is that Moose should be merging. If I manually merge the two TimeSequenceStepper blocks, Moose works as expected. Is this intended behavior?",
          "url": "https://github.com/idaholab/moose/discussions/27350",
          "updatedAt": "2024-04-15T07:00:06Z",
          "publishedAt": "2024-04-11T13:11:02Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nIs this intended behavior?\n\nThe error is the intended behavior. Specifying a solve at t=0 when you start at t=0 is disallowed.\nThe timesequencestepper was ignoring it somehow, but the combined time stepper sees it.\nThe combined time stepper does not merge the sequences. It polls the steppers for the next time step to take\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27350#discussioncomment-9100745",
                  "updatedAt": "2024-04-12T22:46:48Z",
                  "publishedAt": "2024-04-12T22:46:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Cahn-Hilliard not being coservative",
          "author": {
            "login": "alimostafavi24"
          },
          "bodyText": "Dear Moose Community,\nIt is well known that Cahn-Hilliard equation is in conservative form, and it can be shown mathematically that with Neumann BC for the chemical potential, the integral of order parameter over the domain must be constant during time.\nI noticed that within the Moose framework, this is not true on adaptive grids. What will be the best explanation for this behavior? Is there any good reference for this issue on adaptive grids?\nThanks,\nAli",
          "url": "https://github.com/idaholab/moose/discussions/27346",
          "updatedAt": "2024-05-24T23:59:47Z",
          "publishedAt": "2024-04-10T21:31:17Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIs the order parameter one of the variables of the solve?\nWhen we perform steps of adaptivity, whether refinement or coarsening, we project the variables onto the new grid. Nonlinear quantities related to these variables would not be conserved by this process.\nYou could create a user object that enforces this conservation.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9089566",
                  "updatedAt": "2024-04-11T23:12:37Z",
                  "publishedAt": "2024-04-11T23:12:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Thank you for your reply.\nYes, I perform adaptivity on the order parameter c and the conservation is lost.\nI solve the issue of losing the convergence in another way. Right now I am mainly looking for a way to describe why exactly conservation is lost on adaptive grids (is it related to the interpolation of the variables to the new grid?) and whether this is a common issue in finite element method with h-refinement.\nAlso, does this happen to all of the non-linear variables in the system? (5 other variables apart from order parameter including velocity components, pressure, chemical potential)\nAnd if there is any reference that I can cite and refer to about this issue it is highly appreciated.\nThanks.",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9089648",
                          "updatedAt": "2024-04-11T23:25:38Z",
                          "publishedAt": "2024-04-11T23:25:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is 'c' one of the nonlinear variables?\nWhat finite element family and order is it?",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9089811",
                          "updatedAt": "2024-04-11T23:54:10Z",
                          "publishedAt": "2024-04-11T23:54:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Yes, it is.\nNonlinear System:\n  Num DOFs:                115298\n  Num Local DOFs:          9940\n  Variables:               { \"vel_x\" \"vel_y\" \"p\" \"c\" \"w\" \"rho_e\" \"phi\" }\n  Finite Element Types:    \"LAGRANGE\"  \n  Approximation Orders:    \"FIRST\"",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9089835",
                          "updatedAt": "2024-04-11T23:59:41Z",
                          "publishedAt": "2024-04-11T23:59:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So when refining, we should easily conserve the integral of c.\nWhen coarsening, I would expect us to minimize the L2 difference but we ll have to check libmesh to be sure",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9090697",
                          "updatedAt": "2024-04-12T02:31:49Z",
                          "publishedAt": "2024-04-12T02:31:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "I think you are right. I am adding this MOOSE input file for test purposes.\nWhen there is no mesh coarsening and just h-refinement, it seems that solution is conserved. But when coarsening is enabled (set it more than 0.0 in the adaptivity part of the input file), then the solution is not conservative.\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 50\n  ny = 50\n  nz = 0\n  xmin = 0\n  xmax = 250\n  ymin = 0\n  ymax = 250\n  zmin = 0\n  zmax = 0\n  elem_type = QUAD4\n[]\n\n[Variables]\n  [./c]\n  [../]\n  [./w]\n  [../]\n[]\n\n[AuxVariables]\n  [./local_free_energy]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n\n[ICs]\n  [./cIC]\n    type = SmoothCircleIC\n    variable = c\n    x1 = 125.0\n    y1 = 125.0\n    radius = 60.0\n    invalue = 1.0\n    outvalue = 0.1\n    int_width = 30.0\n  [../]\n[]\n\n[Kernels]\n  [./c_res]\n    type = SplitCHParsed\n    variable = c\n    f_name = F\n    kappa_name = kappa_c\n    w = w\n  [../]\n  [./w_res]\n    type = SplitCHWRes\n    variable = w\n    mob_name = M\n  [../]\n  [./time]\n    type = CoupledTimeDerivative\n    variable = w\n    v = c\n  [../]\n[]\n\n[AuxKernels]\n  [./local_free_energy]\n    type = TotalFreeEnergy\n    variable = local_free_energy\n    kappa_names = kappa_c\n    interfacial_vars = c\n  [../]\n[]\n\n[Materials]\n  [./pfmobility]\n    type = GenericConstantMaterial\n    prop_names  = 'M kappa_c'\n    prop_values = '1e-3 0.1'\n  [../]\n  [./free_energy]\n    type = DerivativeParsedMaterial\n    coupled_variables = c\n    constant_names = 'barr_height  cv_eq'\n    constant_expressions = '0.1          1.0e-2'\n    expression = 16*barr_height*(c-cv_eq)^2*(1-cv_eq-c)^2\n    derivative_order = 2\n  [../]\n[]\n\n[Postprocessors]\n\n  [./total_free_energy]\n    type = ElementIntegralVariablePostprocessor\n    variable = local_free_energy\n  [../]\n\n    [./total_solutec]\n    type = ElementIntegralVariablePostprocessor\n    variable = c\n    execute_on = linear\n\n  [../]\n\n\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  scheme = bdf2\n  solve_type = NEWTON\n  petsc_options_iname = -pc_type\n  petsc_options_value = lu\n  l_max_its = 30\n  l_tol = 1.0e-4\n  nl_rel_tol = 1.0e-10\n  start_time = 0.0\n  num_steps = 60\n  dt = 200\n[]\n\n[Outputs]\n  execute_on = 'timestep_end'\n  exodus = true\n[]\n\n[Adaptivity]\n  initial_steps = 2\n  steps = 1\n  marker = error\n  [Indicators]\n    [jump]\n      type = GradientJumpIndicator\n      variable = c\n     outputs = none\n\n    []\n  []\n  [Markers]\n    [error]\n      type = ErrorFractionMarker\n     coarsen = 0.50\n      refine = 0.90\n      indicator = jump\n      outputs = none\n    []\n  []\n max_h_level = 2\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9098318",
                          "updatedAt": "2024-04-12T16:42:16Z",
                          "publishedAt": "2024-04-12T16:42:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@roystgnr could you please point us to the docs for h-coarsening of variables in libmesh?\nI see the code for coarsening elements in MeshRefinement. Is the code for the projection during coarsening in the GenericProjector?",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9098363",
                          "updatedAt": "2024-04-12T16:54:02Z",
                          "publishedAt": "2024-04-12T16:48:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "This input file from MOOSE tests shows it better.\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 100\n  ny = 100\n  xmax = 30.0\n  ymax = 30.0\n  elem_type = QUAD4\n[]\n\n[Variables]\n  [./c]\n  [../]\n  [./w]\n  [../]\n[]\n\n[ICs]\n  [./c_IC]\n    type = CrossIC\n    x1 = 0.0\n    x2 = 30.0\n    y1 = 0.0\n    y2 = 30.0\n    variable = c\n  [../]\n[]\n\n[Kernels]\n  [./cres]\n    type = SplitCHParsed\n    variable = c\n    kappa_name = kappa_c\n    w = w\n    f_name = F\n  [../]\n  [./wres]\n    type = SplitCHWRes\n    variable = w\n    mob_name = M\n    coupled_variables = c\n  [../]\n  [./time]\n    type = CoupledTimeDerivative\n    variable = w\n    v = c\n  [../]\n[]\n\n[BCs]\n  [./Periodic]\n    [./all]\n      auto_direction = 'x y'\n    [../]\n  [../]\n[]\n\n[Materials]\n  [./kappa]\n    type = GenericConstantMaterial\n    prop_names = 'kappa_c'\n    prop_values = '2e-2'\n  [../]\n  [./mob]\n    type = DerivativeParsedMaterial\n    property_name = M\n    coupled_variables = c\n    expression = '1-0.9*c^2'\n    outputs = exodus\n    derivative_order = 1\n  [../]\n  [./free_energy]\n    type = MathEBFreeEnergy\n    property_name = F\n    c = c\n  [../]\n[]\n\n[Preconditioning]\n  [./SMP]\n   type = SMP\n   off_diag_row = 'w c'\n   off_diag_column = 'c w'\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  scheme = 'BDF2'\n\n  solve_type = 'NEWTON'\n  petsc_options_iname = '-pc_type -ksp_gmres_restart -sub_pc_type -pc_asm_overlap'\n  petsc_options_value = 'asm         31      lu      1'\n\n  l_max_its = 30\n  l_tol = 1.0e-4\n  nl_max_its = 50\n  nl_rel_tol = 1.0e-10\n\n  dt = 1.0\n  num_steps = 20\n[]\n\n[Outputs]\n  exodus = true\n[]\n\n[Postprocessors]\n\n\n  # for testing we also monitor the total solute amount, which should be conserved.\n\n\n    [./total_solutec]\n    type = ElementIntegralVariablePostprocessor\n    variable = c\n\n  [../]\n  []\n\n  [Adaptivity]\n  initial_steps = 1\n  steps = 1\n  marker = error\n  [Indicators]\n    [jump]\n      type = GradientJumpIndicator\n      variable = c\n     outputs = none\n\n    []\n  []\n  [Markers]\n    [error]\n      type = ErrorFractionMarker\n     coarsen = 0.90\n      refine = 0.90\n      indicator = jump\n      outputs = none\n    []\n  []\n max_h_level = 1\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9099555",
                          "updatedAt": "2024-04-12T19:14:20Z",
                          "publishedAt": "2024-04-12T19:14:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "It's GenericProjector that does the refinement and coarsening.  In either case the algorithm is the same: interpolate values (and for C1 elements gradients, and for HERMITE elements gradient cross terms) at nodes, then project (L2 for C0 elements, H1 for C1) along edges holding nodes fixed, then project along faces holding edges and nodes fixed, then project on interiors holding boundaries fixed.\nFor refinement, this gives you the same value (up to floating point error) for p-refinement and for h-refinement in any FEFamily that has a nested space (everything except CLOUGH, in libMesh).\nFor coarsening, this totally breaks conservation.  Picture the simplest case, 1D p=1.  You have a coarse element that's linear between its two end points, you set its endpoints equal to what the two fine elements had ... and now you're done; there's no other DoFs to set.  If the coarsened-away node's value was higher than the average of its neighbors then you've just subtracted mass to nowhere, if lower you've just added mass from nowhere.\nThe only alternatives are non-local (as is fairly easy to see in this case - you can't tweak those end node values without worrying about how it affects conservation on their neighbors, and how to compensate for that without breaking their neighbors...). E.g. doing a global L2 projection rather than a bunch of local ones would be conservative ... but the problem in that case is that you can more easily get something like Gibbs' ringing effects; there's no free lunch once you start shrinking your approximation space.",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9099674",
                          "updatedAt": "2024-04-12T19:33:48Z",
                          "publishedAt": "2024-04-12T19:33:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Thanks. It was explained very well :)",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9099721",
                          "updatedAt": "2024-04-12T19:38:26Z",
                          "publishedAt": "2024-04-12T19:38:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Is there any reference that I can cite or refer to for this numerical problem? @roystgnr\nThanks,",
                          "url": "https://github.com/idaholab/moose/discussions/27346#discussioncomment-9099740",
                          "updatedAt": "2024-04-12T19:40:44Z",
                          "publishedAt": "2024-04-12T19:40:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adding lagrange multiplier to the Cahn-Hilliard equation in the split form",
          "author": {
            "login": "alimostafavi24"
          },
          "bodyText": "Dear MOOSE community,\nI added the scalar Lagrange multiplier to enforce a constraint on the volume integral of order parameter. Can someone please explain to me what additional term is added to the original Cahn-Hilliard equation by adding this constraint? Attached is the relevant part of the input file.\n@jiangwen84 @GiudGiud\n[Variables]\n  [./c]\n    order = FIRST\n    family = LAGRANGE\n    [./InitialCondition]\n    type = SpecifiedSmoothCircleIC\n    variable = c\n    x_positions = '0'\n    y_positions = '0'\n    z_positions = '0'\n    radii = '${R}'\n    invalue = 1\n    outvalue = -1\n    int_width = ${epsilon3}\n  [../]\n[]\n  [./w]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./lambdac]\n    family = SCALAR\n    order = FIRST\n [../]\n[]\n\n[ScalarKernels]\n [./mean_zero_pressure_c]\n    type = AverageValueConstraint\n   variable = lambdac\n    pp_name = total_solutec\n  value =   -4.572052e-03\n[]\n[]\n\n[Kernels]\n  [./mean_zero_c]\n  type = ScalarLagrangeMultiplier\n  variable = c\n   lambda = lambdac\n [../]\n  [./c_res]\n    type = SplitCHParsed\n    variable = c\n    f_name = F\n    kappa_name = kappa_c\n    w = w\n  [../]\n\n  [./w_res]\n    type =  SplitCHWResAniso #SplitCHWRes\n    variable = w\n    mob_name = M_c\n  [../]\n  [./time]\n    type = CoupledTimeDerivative\n    variable = w\n    v = c\n  [../]\n[]\n\n[Postprocessors]\n    [./total_solutec]\n    type = ElementIntegralVariablePostprocessor\n    variable = c\n    execute_on = linear\n[]\n\nThanks,",
          "url": "https://github.com/idaholab/moose/discussions/27364",
          "updatedAt": "2024-04-12T21:51:54Z",
          "publishedAt": "2024-04-12T19:13:19Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAdding a constraint (that way) is like adding an additional equation that gets solved simultaneously by the nonlinear solver.\nYou do not need to change the original equations for that\nHaving the AverageValueConstraint and the ScalarLagrangeMultiplier kernels looks fine to me\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27364#discussioncomment-9100251",
                  "updatedAt": "2024-04-15T13:46:30Z",
                  "publishedAt": "2024-04-12T21:02:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Thanks.\nMy understanding is that the strong form of the equations remain intact. However, additional term appears in residual term for the order parameter according the (https://github.com/idaholab/large_media/blob/master/framework/scalar_constraint_kernel.pdf). Am I correct?\nRegards,",
                          "url": "https://github.com/idaholab/moose/discussions/27364#discussioncomment-9100366",
                          "updatedAt": "2024-04-12T21:22:07Z",
                          "publishedAt": "2024-04-12T21:22:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you look at the end of that document, the extra term (9) in the residual is added by the ScalarLagrangeMultiplier kernel which you already have",
                          "url": "https://github.com/idaholab/moose/discussions/27364#discussioncomment-9100506",
                          "updatedAt": "2024-04-12T21:51:54Z",
                          "publishedAt": "2024-04-12T21:51:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "AdvancedExtruderGenerator skipping radial nodes?",
          "author": {
            "login": "Spudman105"
          },
          "bodyText": "I am trying to make a pipe in moose and have made the circle in 2D using the annularmeshgenerator. However when I use the AdvancedExtruderGenerator to extrude, I lose some of the rings of nodes that are in the original circle. I have tried a bunch of the other commands and feel like I'm missing something?\n[Mesh]\n  [face1]\n      type = AnnularMeshGenerator\n      rmin = 0 # makes plane a disk instead of a ring\n      rmax = .5 # sets the radius from the center for the outer ring, r=.5 means diameter is 1 which is beam spot size.\n      nt = 10 # number of notes along outer ring \n      nr = 3 # number of nodes between the center and the outer radius. (increase later but small now for speed of tests)\n  []\n  \n  [extrude]\n      type = AdvancedExtruderGenerator\n      input = face1\n      heights = '1 2'\n      num_layers = '1 1 '\n      direction = '0 0 1'\n      biases = '1 2'\n  []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27347",
          "updatedAt": "2024-04-12T21:31:14Z",
          "publishedAt": "2024-04-11T00:54:17Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "maxnezdyur"
                  },
                  "bodyText": "Can you check that by clipping the mesh in the middle? I would do more checks to confirm that these elements and nodes are missing.",
                  "url": "https://github.com/idaholab/moose/discussions/27347#discussioncomment-9096384",
                  "updatedAt": "2024-04-12T13:44:28Z",
                  "publishedAt": "2024-04-12T13:44:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nThis is just wireframe not showing the inner nodes.\nuse surface with edges instead in the selector (center top of the screen, it defaults to surface usually)",
                  "url": "https://github.com/idaholab/moose/discussions/27347#discussioncomment-9100404",
                  "updatedAt": "2024-04-12T21:53:09Z",
                  "publishedAt": "2024-04-12T21:31:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "We caught a libMesh error in ThreadedElementLoopBase:ERROR: negative Jacobian",
          "author": {
            "login": "navier-rgb"
          },
          "bodyText": "Hello, I\u2019m getting the following convergence error message when I run my simulation. It converges without any useful result when I edit some parameters. What could possibly be the problem?\nTime Step 156, time = 150.047, dt = 0.015625\n 0 Nonlinear |R| = 5.644995e+03\n      0 Linear |R| = 5.644995e+03\n      1 Linear |R| = 5.820683e-03\n      2 Linear |R| = 5.248988e-10\n  Elem Information\n   id()=0, unique_id()=8, subdomain_id()=0, processor_id()=0\n   type()=HEX8\n   dim()=3\n   n_nodes()=8\n   mapping=LAGRANGE_MAP\n    0  Node id()=0, processor_id()=0, Point=(x,y,z)=(       0,        0,        0)\n    DoFs=(0/0/0) (0/1/1) (0/2/2) (1/3/3) (1/4/4)\n    1  Node id()=1, processor_id()=0, Point=(x,y,z)=( 21.0098,        0,        0)\n    DoFs=(0/0/3) (0/1/4) (0/2/5) (1/3/5) (1/4/6)\n    2  Node id()=2, processor_id()=0, Point=(x,y,z)=(-6.20884, 0.840915,        0)\n    DoFs=(0/0/6) (0/1/7) (0/2/8) (1/3/7) (1/4/8)\n    3  Node id()=3, processor_id()=0, Point=(x,y,z)=(       0, 0.0597855,        0)\n    DoFs=(0/0/9) (0/1/10) (0/2/11) (1/3/9) (1/4/10)\n    4  Node id()=4, processor_id()=0, Point=(x,y,z)=(       0,        0, -16.7096)\n    DoFs=(0/0/12) (0/1/13) (0/2/14) (1/3/11) (1/4/12)\n    5  Node id()=5, processor_id()=0, Point=(x,y,z)=(-19.8541,        0,  9.26035)\n    DoFs=(0/0/15) (0/1/16) (0/2/17) (1/3/13) (1/4/14)\n    6  Node id()=6, processor_id()=0, Point=(x,y,z)=( 10.8365, 0.0473549, -5.58162)\n    DoFs=(0/0/18) (0/1/19) (0/2/20) (1/3/15) (1/4/16)\n    7  Node id()=7, processor_id()=0, Point=(x,y,z)=(       0,  10.8865,   4.9301)\n    DoFs=(0/0/21) (0/1/22) (0/2/23) (1/3/17) (1/4/18)\n   n_sides()=6\n    neighbor(0)=nullptr\n    neighbor(1)=nullptr\n    neighbor(2)=nullptr\n    neighbor(3)=nullptr\n    neighbor(4)=nullptr\n    neighbor(5)=nullptr\n   hmin()=0.0597855, hmax()=41.9\n   volume()=170.406\n   active()=1, ancestor()=0, subactive()=0, has_children()=0\n   parent()=nullptr\n   level()=0, p_level()=0\n   refinement_flag()=DO_NOTHING\n   p_refinement_flag()=DO_NOTHING\n   DoFs=(1/0/0) (1/1/1) (1/2/2) (1/5/19) (1/6/20) (1/7/21) (1/8/22) (1/9/23) (1/10/24) (1/11/25) (1/12/26) (1/13/27)\nWe caught a libMesh error in ThreadedElementLoopBase:ERROR: negative Jacobian -19.9283 at point (x,y,z)=( 1.94596, 0.421356, -1.74928) in element 0\nStack frames: 40\n0: libMesh::print_trace(std::ostream&)\n1: libMesh::MacroFunctions::report_error(char const*, int, char const*, char const*, std::ostream&)\n2: libMesh::FEMap::compute_single_point_map(unsigned int, std::vector<double, std::allocator<double> > const&, libMesh::Elem const*, unsigned int, std::vector<libMesh::Node const*, std::allocator<libMesh::Node const*> > const&, bool)\n3: libMesh::FEMap::compute_map(unsigned int, std::vector<double, std::allocator<double> > const&, libMesh::Elem const*, bool)\n4: libMesh::FE<3u, (libMesh::FEFamily)2>::reinit(libMesh::Elem const*, std::vector<libMesh::Point, std::allocator<libMesh::Point> > const*, std::vector<double, std::allocator<double> > const*)\n5: Assembly::reinitFE(libMesh::Elem const*)\n6: Assembly::reinit(libMesh::Elem const*)\n7: DisplacedProblem::prepare(libMesh::Elem const*, unsigned int)\n8: FEProblemBase::prepare(libMesh::Elem const*, unsigned int)\n9: NonlinearThread::onElement(libMesh::Elem const*)\n10: ThreadedElementLoopBase<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> >::operator()(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&, bool)\n11: /home/user/MOOSE/projects/moose/framework/libmoose-opt.so.0(+0xcc480f) [0x7f9ad29bc80f]\n12: NonlinearSystemBase::computeResidualInternal(std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> > const&)\n13: NonlinearSystemBase::computeResidualTags(std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> > const&)\n14: FEProblemBase::computeResidualTags(std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> > const&)\n15: FEProblemBase::computeResidualInternal(libMesh::NumericVector<double> const&, libMesh::NumericVector<double>&, std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> > const&)\n16: FEProblemBase::computeResidualSys(libMesh::NonlinearImplicitSystem&, libMesh::NumericVector<double> const&, libMesh::NumericVector<double>&)\n17: ComputeResidualFunctor::residual(libMesh::NumericVector<double> const&, libMesh::NumericVector<double>&, libMesh::NonlinearImplicitSystem&)\n18: libmesh_petsc_snes_residual\n19: SNESComputeFunction\n20: /home/user/mambaforge3/envs/moose/lib/libpetsc.so.3.16(+0xcc8218) [0x7f9acd675218]\n21: SNESLineSearchApply\n22: SNESSolve_NEWTONLS\n23: SNESSolve\n24: libMesh::PetscNonlinearSolver<double>::solve(libMesh::SparseMatrix<double>&, libMesh::NumericVector<double>&, libMesh::NumericVector<double>&, double, unsigned int)\n25: libMesh::NonlinearImplicitSystem::solve()\n26: TimeIntegrator::solve()\n27: NonlinearSystem::solve()\n28: FEProblemBase::solve(unsigned int)\n29: FEProblemSolve::solve()\n30: FixedPointSolve::solveStep(double&, double&, std::set<unsigned long, std::less<unsigned long>, std::allocator<unsigned long> > const&)\n31: FixedPointSolve::solve()\n32: TimeStepper::step()\n33: Transient::takeStep(double)\n34: Transient::execute()\n35: MooseApp::executeExecutioner()\n36: MooseApp::run()\n37: main\n38: __libc_start_main\n39: ../dracorex-opt(+0x33ef) [0x5626c13d73ef]\n[0] ../src/fe/fe_map.C, line 1138, compiled Sep  7 2023 at 15:19:38",
          "url": "https://github.com/idaholab/moose/discussions/25483",
          "updatedAt": "2024-04-12T20:50:38Z",
          "publishedAt": "2023-09-16T21:55:28Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis happens when an element gets flipped and/or distorted such that the Jacobian (the one of the transformation from the reference element) is negative.\nUse a checkpoint to recover right before this point and try a smaller time step\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25483#discussioncomment-7023829",
                  "updatedAt": "2023-09-16T22:04:37Z",
                  "publishedAt": "2023-09-16T22:04:28Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "How do you use checkpoints to recover right before this point I am encountering a similar problem. @navier-rgb @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/25483#discussioncomment-9099431",
                          "updatedAt": "2024-04-12T19:00:42Z",
                          "publishedAt": "2024-04-12T19:00:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "turn on checkpoint = true in the Outputs block\nthen you can add on the command line --recover the second time you run the input to restart from there.\nThat's one way. There's a page here:\nhttps://mooseframework.inl.gov/application_usage/restart_recover.html",
                          "url": "https://github.com/idaholab/moose/discussions/25483#discussioncomment-9099653",
                          "updatedAt": "2024-04-12T19:30:26Z",
                          "publishedAt": "2024-04-12T19:30:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "It did not solve my issue. I have also submitted a ticket on my issue here:#27363",
                          "url": "https://github.com/idaholab/moose/discussions/25483#discussioncomment-9100178",
                          "updatedAt": "2024-04-12T20:50:39Z",
                          "publishedAt": "2024-04-12T20:50:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}