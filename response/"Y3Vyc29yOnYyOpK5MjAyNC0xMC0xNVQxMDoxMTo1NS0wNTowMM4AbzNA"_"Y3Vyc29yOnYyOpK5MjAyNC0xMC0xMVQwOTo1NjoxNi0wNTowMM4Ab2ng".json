{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0xMC0xMVQwOTo1NjoxNi0wNTowMM4Ab2ng"
    },
    "edges": [
      {
        "node": {
          "title": "Newsletter September 2024",
          "author": {
            "login": "GiudGiud"
          },
          "bodyText": "The September 2024 MOOSE Newsletter has been released!",
          "url": "https://github.com/idaholab/moose/discussions/28846",
          "updatedAt": "2024-10-14T20:04:24Z",
          "publishedAt": "2024-10-14T18:21:42Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Constitutive Failure",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "@sapitts I used the \"ComputeCrystalPlasticityThermalEigenstrain\" to add eigen strain contribution into my crystal plasticity model.\nBelow is relevant parts of the code\n[./dummy_temperature]\n      family = MONOMIAL\n      order = CONSTANT\n    []\n[./set_dummy_temperature]\n      type = ConstantAux\n      variable = dummy_temperature\n      value = 1.0  \n    [../]\n[phase0_eigenstrain_0]\n    type = ComputeCrystalPlasticityThermalEigenstrain\n    eigenstrain_name = phase0_eigenstrain_0\n    deformation_gradient_name = phase0_deformation_gradient_0\n    temperature = dummy_temperature\n    thermal_expansion_coefficients = '0.0067 0.0286 0.0067'\n    base_name = phase0\n  []\n\nBut I get a constitutive failure as shown below\n\ufffd[36m\n*** Info ***\nSolidMechanics Action: selecting 'total small strain' formulation. Use `incremental = true` to select 'incremental small strain' instead.\ufffd[39m\nCurrently Setting Up\n  Initializing\n    Finished Initializing Equation Systems                                               [\ufffd[33m  0.92 s\ufffd[39m] [\ufffd[33m  500 MB\ufffd[39m]\n  Finished Initializing                                                                  [\ufffd[33m  0.96 s\ufffd[39m] [\ufffd[33m  501 MB\ufffd[39m]\nFinished Setting Up                                                                      [\ufffd[33m  1.66 s\ufffd[39m] [\ufffd[33m  501 MB\ufffd[39m]\nFramework Information:\nMOOSE Version:           git commit 4505a3e on 2024-06-10\nLibMesh Version:         1c5369aa05eaae8ebeb7930845fce3b1d59cbb37\nPETSc Version:           3.20.3\nSLEPc Version:           3.20.1\nCurrent Time:            Mon Sep 30 15:45:57 2024\nExecutable Timestamp:    Fri Sep 27 18:22:34 2024\n\nParallelism:\n  Num Processors:          2\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   \n    Total:                 77650\n    Local:                 40870\n    Min/Max/Avg:           36780/40870/38825\n  Elems:                   \n    Total:                 73128\n    Local:                 36564\n    Min/Max/Avg:           36564/36564/36564\n  Num Subdomains:          1\n  Num Partitions:          2\n  Partitioner:             metis\n\nNonlinear System:\n  Num DOFs:                310600\n  Num Local DOFs:          163480\n  Variables:               { \"disp_x\" \"disp_y\" \"eta0\" \"eta1\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                219384\n  Num Local DOFs:          109692\n  Variables:               \"vonmises\" \"stress_xx\" \"dummy_temperature\" \n  Finite Element Types:    \"MONOMIAL\" \"MONOMIAL\" \"MONOMIAL\" \n  Approximation Orders:    \"CONSTANT\" \"CONSTANT\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             IterationAdaptiveDT\n  TimeIntegrator:          ImplicitEuler\n  Solver Mode:             Preconditioned JFNK\n  PETSc Preconditioner:    lu mat_superlu_dist_fact: SamePattern  mat_superlu_dist_replacetinypivot: true \n  MOOSE Preconditioner:    SMP\n\n.Currently Executing\n  Performing Initial Setup\n    Setting Up Materials\n      Finished Computing Initial Material Values                                         [\ufffd[33m  0.73 s\ufffd[39m] [\ufffd[33m 1032 MB\ufffd[39m]\n    Finished Setting Up Materials                                                        [\ufffd[33m  0.73 s\ufffd[39m] [\ufffd[33m 1032 MB\ufffd[39m]\n  Finished Performing Initial Setup                                                      [\ufffd[33m  1.71 s\ufffd[39m] [\ufffd[33m 1045 MB\ufffd[39m]\n\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+\n| time           | stress_xx      | vonmises       |\n+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+\n\nWarning:  This MeshOutput subclass only supports meshes which are contiguously renumbered!\n                                                                [\ufffd[33m 25.13 s\ufffd[39m] [\ufffd[33m 2356 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m2.005573e+03\ufffd[39m\n  Currently Outputting\n    Finished Outputting Step                                                             [\ufffd[33m  2.42 s\ufffd[39m] [\ufffd[33m 1148 MB\ufffd[39m]\n  Finished Outputting                                                                    [\ufffd[33m  2.43 s\ufffd[39m] [\ufffd[33m 1148 MB\ufffd[39m]\n\nTime Step 1, time = 0.0005, dt = 0.0005\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 0.00025, dt = 0.00025\n    Computing Residual\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 0.000125, dt = 0.000125\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 6.25e-05, dt = 6.25e-05\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.125e-05, dt = 3.125e-05\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.5625e-05, dt = 1.5625e-05\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 7.8125e-06, dt = 7.8125e-06\n                                                                [\ufffd[33m 25.24 s\ufffd[39m] [\ufffd[33m 2356 MB\ufffd[39m]\n      5 Linear |R| = \ufffd[32m4.066195e+02\ufffd[39m\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.90625e-06, dt = 3.90625e-06\n    Computing Residual\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.95313e-06, dt = 1.95313e-06\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 9.76563e-07, dt = 9.76563e-07\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 4.88281e-07, dt = 4.88281e-07\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 2.44141e-07, dt = 2.44141e-07\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.2207e-07, dt = 1.2207e-07\n                                                                [\ufffd[33m 25.23 s\ufffd[39m] [\ufffd[33m 2356 MB\ufffd[39m]\n      6 Linear |R| = \ufffd[32m8.705781e+01\ufffd[39m\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 6.10352e-08, dt = 6.10352e-08\n    Computing Residual\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.05176e-08, dt = 3.05176e-08\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.52588e-08, dt = 1.52588e-08\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 7.62939e-09, dt = 7.62939e-09\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.8147e-09, dt = 3.8147e-09\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.90735e-09, dt = 1.90735e-09\n.                                                                [\ufffd[33m 25.29 s\ufffd[39m] [\ufffd[33m 2356 MB\ufffd[39m]\n      7 Linear |R| = \ufffd[32m1.869723e+01\ufffd[39m\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 9.53674e-10, dt = 9.53674e-10\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 4.76837e-10, dt = 4.76837e-10\n    Computing Residual\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 2.38419e-10, dt = 2.38419e-10\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.19209e-10, dt = 1.19209e-10\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 5.96046e-11, dt = 5.96046e-11\n.\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 2.98023e-11, dt = 2.98023e-11\n.                                                                [\ufffd[33m 25.34 s\ufffd[39m] [\ufffd[33m 2356 MB\ufffd[39m]\n      8 Linear |R| = \ufffd[32m4.010335e+00\ufffd[39m\n\n    Computing Residual    Computing Residual.                                                                  [\ufffd[33m 15.02 s\ufffd[39m] [\ufffd[33m 1150 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m9.410223e+05\ufffd[39m\n.    Computing Jacobian...                                                                  [\ufffd[33m 12.54 s\ufffd[39m] [\ufffd[33m 1194 MB\ufffd[39m]\n                                                                [\ufffd[33m 24.74 s\ufffd[39m] [\ufffd[33m 2356 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n\nA MooseException was raised during FEProblemBase::computeResidualTags\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m9.405887e+05\ufffd[39m\nNonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n  Finished Solving                                                                       [\ufffd[33m259.79 s\ufffd[39m] [\ufffd[33m 2038 MB\ufffd[39m]\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 3.72529e-12, dt = 3.72529e-12\n      0 Linear |R| = \ufffd[32m9.410223e+05\ufffd[39m\n\n    Computing Residual\n    Computing Residual..                                                                  [\ufffd[33m 14.69 s\ufffd[39m] [\ufffd[33m 1753 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m9.403824e+05\ufffd[39m\n    Computing Jacobian..                                                                  [\ufffd[33m 11.57 s\ufffd[39m] [\ufffd[33m 1753 MB\ufffd[39m]\n.                                                                [\ufffd[33m 26.78 s\ufffd[39m] [\ufffd[33m 2223 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m1.735643e+05\ufffd[39m\n      0 Linear |R| = \ufffd[32m9.403824e+05\ufffd[39m\n    Computing Residual\n    Computing Residual......                                                                [\ufffd[33m 24.61 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m1.682828e+05\ufffd[39m\n                                                                [\ufffd[33m 27.38 s\ufffd[39m] [\ufffd[33m 2224 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m3.301680e+04\ufffd[39m\n    Computing Residual    Computing Residual......                                                                [\ufffd[33m 25.15 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m2.653108e+04\ufffd[39m\n                                                                [\ufffd[33m 27.50 s\ufffd[39m] [\ufffd[33m 2225 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m1.151673e+04\ufffd[39m\n    Computing Residual    Computing Residual.....                                                                [\ufffd[33m 25.39 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m7.149096e+03\ufffd[39m\n.                                                                [\ufffd[33m 27.47 s\ufffd[39m] [\ufffd[33m 2225 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m3.356829e+03\ufffd[39m\n    Computing Residual    Computing Residual.....                                                                [\ufffd[33m 25.31 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m1.445788e+03\ufffd[39m\n.    Computing Residual                                                                [\ufffd[33m 27.53 s\ufffd[39m] [\ufffd[33m 2226 MB\ufffd[39m]\n      5 Linear |R| = \ufffd[32m8.201200e+02\ufffd[39m\n.    Computing Residual...                                                                [\ufffd[33m 25.27 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      5 Linear |R| = \ufffd[32m2.664199e+02\ufffd[39m\n.    Computing Residual.                                                                [\ufffd[33m 27.48 s\ufffd[39m] [\ufffd[33m 2226 MB\ufffd[39m]\n      6 Linear |R| = \ufffd[32m2.067922e+02\ufffd[39m\n.    Computing Residual...                                                                [\ufffd[33m 25.25 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      6 Linear |R| = \ufffd[32m5.230396e+01\ufffd[39m\n.    Computing Residual..                                                                [\ufffd[33m 27.55 s\ufffd[39m] [\ufffd[33m 2226 MB\ufffd[39m]\n      7 Linear |R| = \ufffd[32m5.121541e+01\ufffd[39m\n    Computing Residual...                                                                [\ufffd[33m 25.32 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      7 Linear |R| = \ufffd[32m1.023860e+01\ufffd[39m\n.    Computing Residual..                                                                [\ufffd[33m 27.53 s\ufffd[39m] [\ufffd[33m 2226 MB\ufffd[39m]\n      8 Linear |R| = \ufffd[32m1.277816e+01\ufffd[39m\n.    Computing Residual..                                                                [\ufffd[33m 25.28 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      8 Linear |R| = \ufffd[32m1.969368e+00\ufffd[39m\n    Computing Residual...                                                                [\ufffd[33m 27.55 s\ufffd[39m] [\ufffd[33m 2227 MB\ufffd[39m]\n      9 Linear |R| = \ufffd[32m3.164672e+00\ufffd[39m\n.    Computing Residual.                                                                [\ufffd[33m 24.84 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n\nA MooseException was raised during FEProblemBase::computeResidualTags\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m9.403824e+05\ufffd[39m\nNonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n  Finished Solving                                                                       [\ufffd[33m260.84 s\ufffd[39m] [\ufffd[33m 1753 MB\ufffd[39m]\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.86265e-12, dt = 1.86265e-12\n.\n    Computing Residual..                                                                  [\ufffd[33m 14.42 s\ufffd[39m] [\ufffd[33m 1753 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m9.401865e+05\ufffd[39m\n.                                                                [\ufffd[33m 26.92 s\ufffd[39m] [\ufffd[33m 2227 MB\ufffd[39m]\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n\nA MooseException was raised during FEProblemBase::computeResidualTags\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\n 1 Nonlinear |R| = \ufffd[33m9.410223e+05\ufffd[39m\nNonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n  Finished Solving                                                                       [\ufffd[33m309.08 s\ufffd[39m] [\ufffd[33m 1723 MB\ufffd[39m]\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 1.49012e-11, dt = 1.49012e-11\n    Computing Jacobian.                                                                  [\ufffd[33m 11.33 s\ufffd[39m] [\ufffd[33m 1753 MB\ufffd[39m]\n\n    Computing Residual.      0 Linear |R| = \ufffd[32m9.401865e+05\ufffd[39m\n                                                                  [\ufffd[33m 16.18 s\ufffd[39m] [\ufffd[33m 1723 MB\ufffd[39m]\n 0 Nonlinear |R| = \ufffd[32m9.408027e+05\ufffd[39m\n\n    Computing Residual    Computing Jacobian..                                                                  [\ufffd[33m 12.47 s\ufffd[39m] [\ufffd[33m 1723 MB\ufffd[39m]\n.      0 Linear |R| = \ufffd[32m9.408027e+05\ufffd[39m\n.                                                                [\ufffd[33m 22.58 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m1.663665e+05\ufffd[39m\n\n    Computing Residual    Computing Residual......                                                                [\ufffd[33m 23.04 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m2.422012e+04\ufffd[39m\n                                                                [\ufffd[33m 26.66 s\ufffd[39m] [\ufffd[33m 2317 MB\ufffd[39m]\n      1 Linear |R| = \ufffd[32m1.718833e+05\ufffd[39m\n    Computing Residual    Computing Residual.....                                                                [\ufffd[33m 23.14 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m5.672407e+03\ufffd[39m\n.    Computing Residual                                                                [\ufffd[33m 27.12 s\ufffd[39m] [\ufffd[33m 2317 MB\ufffd[39m]\n      2 Linear |R| = \ufffd[32m3.101018e+04\ufffd[39m\n.    Computing Residual...                                                                [\ufffd[33m 23.24 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      4 Linear |R| = \ufffd[32m9.867253e+02\ufffd[39m\n.    Computing Residual.                                                                [\ufffd[33m 27.34 s\ufffd[39m] [\ufffd[33m 2317 MB\ufffd[39m]\n      3 Linear |R| = \ufffd[32m1.010828e+04\ufffd[39m\n.    Computing Residual...                                                                [\ufffd[33m 23.19 s\ufffd[39m] [\ufffd[33m 2345 MB\ufffd[39m]\n      5 Linear |R| = \ufffd[32m1.662660e+02\ufffd[39m\n.    Computing Residual",
          "url": "https://github.com/idaholab/moose/discussions/28731",
          "updatedAt": "2024-10-14T17:34:12Z",
          "publishedAt": "2024-09-30T19:56:08Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "sapitts"
                  },
                  "bodyText": "I am not surprised that you see a constitutive failure: you are instantaneously applying a very large eigenstrain. Consider methods that you can use to gradually increase the eigenstrain, and review the troubleshooting documentation here: https://mooseframework.inl.gov/application_usage/failed_solves.html I would also recommend using an incremental strain formulation for a simulation involving crystal plasticity.\nAlso review the debugging information to ensure that your specific constitutive model is working as you expect: https://mooseframework.inl.gov/application_development/debugging.html",
                  "url": "https://github.com/idaholab/moose/discussions/28731#discussioncomment-10885563",
                  "updatedAt": "2024-10-08T21:47:40Z",
                  "publishedAt": "2024-10-08T21:47:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "Yes, I do agree with you on the magnitude of the eigenstrain. I used these arbitrary numbers and I did not get the constitutive failure('1e-05 2e-05 3e-05'). The values I used were taken from a paper. I am thinking of using normalized values instead. What do you suggest?\nThanks for the feedback",
                          "url": "https://github.com/idaholab/moose/discussions/28731#discussioncomment-10885650",
                          "updatedAt": "2024-10-08T22:03:17Z",
                          "publishedAt": "2024-10-08T22:03:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "And can you suggest some of the ways I can gradually increase the eigenstrain?\nThanks for the help",
                          "url": "https://github.com/idaholab/moose/discussions/28731#discussioncomment-10915786",
                          "updatedAt": "2024-10-11T13:47:37Z",
                          "publishedAt": "2024-10-11T13:47:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sapitts"
                          },
                          "bodyText": "It is your work to determine the best way to apply the conditions that optimize your physics and the numerical constraints of your system. One of the options you could consider is to apply the eigenstrains as a function of time (maybe asynchronously)\nIn either case, make sure you are using a finite, incremental strain formulation. Total small strain is not a good choice for simulations including plastic deformation.",
                          "url": "https://github.com/idaholab/moose/discussions/28731#discussioncomment-10938894",
                          "updatedAt": "2024-10-14T16:17:40Z",
                          "publishedAt": "2024-10-14T16:17:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I am not sure how the \"ComputeCrystalPlasticityThermalEigenstrain\" class works. But just a further thought or maybe a question. How will the contribution of the eigenstrain be added to my simulation considering the fact that temperature is constant in the XYZ direction?\nI have implemented the finite incremental strain formulation as you suggested. The contribution from the eigenstrain my simulation was constant in both x and y directions. i have attached the csv file.\nTest_s049_eigen_out.csv\nThis is some important part of my input script:\n[./set_dummy_temperature]\n      type = ConstantAux\n      variable = dummy_temperature\n      value = 1.0 \n      execute_on = 'timestep_begin' \n    [../]\n  [elasticity_tensor_phase0]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '2.906e5 1.87e5 1.87e5 2.906e5 1.87e5 2.906e5 1.142e5 1.142e5 1.142e5'\n    fill_method = symmetric9\n    euler_angle_1 = 0.0\n    euler_angle_2 = 0.0\n    euler_angle_3 = 0.0\n    base_name = phase0\n  []\n  [stress_phase0]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl_phase0'\n    eigenstrain_names = 'phase0_eigenstrain_0'\n    tan_mod_type = exact\n    rtol = 1e-08\n    base_name = phase0\n  []\n  [trial_xtalpl_phase0]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    crystal_lattice_type = BCC\n    resistance_tol = 0.01\n    r = 1.4             \n    h = 6000            \n    t_sat = 598.5        \n    gss_a = 1.5         \n    ao = 0.001           \n    xm = 0.017             \n    gss_initial = 600\n    base_name = phase0\n  []\n[phase0_eigenstrain_0]\n    type = ComputeCrystalPlasticityThermalEigenstrain\n    eigenstrain_name = phase0_eigenstrain_0\n    deformation_gradient_name = phase0_deformation_gradient_0\n    temperature = dummy_temperature\n    thermal_expansion_coefficients = '1e-05 2e-05 3e-05'\n    base_name = phase0\n  []\n\n[./TensorMechanics]\n      displacements = 'disp_x disp_y'\n      add_variables = true\n      generate_output = stress_xx\n      strain = FINITE\n   []",
                          "url": "https://github.com/idaholab/moose/discussions/28731#discussioncomment-10939524",
                          "updatedAt": "2024-10-14T17:23:34Z",
                          "publishedAt": "2024-10-14T17:23:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sapitts"
                          },
                          "bodyText": "The documentation for these classes is well written, see https://mooseframework.inl.gov/source/materials/crystal_plasticity/ComputeCrystalPlasticityThermalEigenstrain.html and https://mooseframework.inl.gov/source/materials/crystal_plasticity/ComputeMultipleCrystalPlasticityStress.html. The references listed at the bottom of the thermal eigenstrain page have additional details",
                          "url": "https://github.com/idaholab/moose/discussions/28731#discussioncomment-10939615",
                          "updatedAt": "2024-10-14T17:34:13Z",
                          "publishedAt": "2024-10-14T17:34:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Moose ex03 missing parameter",
          "author": {
            "login": "libinbabu1991"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n I have consulted the Posting Guidelines.\n I have searched the Discussions Forum and MOOSE Framework Troubleshooting and have not found what I was looking for\n Q&A Getting Started is the most appropriate category for my question (trouble installing, beginner user, ...)\n\nIssue or question about MOOSE\nHello,\nI am getting missing required parameter error as below.\nPlease advise how to resolve it.\nThanks!\n(Optional) code in question / simulation log / errors\n(moose) root@131-ENG-DESKTOP:~/projects/moose/examples/ex03_coupling# make -j8\nCreating Unity /root/projects/moose/examples/ex03_coupling/build/unity_src/kernels_Unity.C\nCompiling C++ (in opt mode) /root/projects/moose/examples/ex03_coupling/build/unity_src/kernels_Unity.C...\nLinking Library /root/projects/moose/examples/ex03_coupling/lib/libex03-opt.la...\nLinking Executable /root/projects/moose/examples/ex03_coupling/ex03-opt...\n(moose) root@131-ENG-DESKTOP:~/projects/moose/examples/ex03_coupling# ./ex03-opt -i ex03.i\n\n\n*** Info ***\n'execute_on' parameter specified in [Outputs] block is ignored for object 'checkpoint'.\nDefine this object in its own sub-block of [Outputs] to modify its execution schedule.\n\n\n*** ERROR ***\n/root/projects/moose/examples/ex03_coupling/ex03.i:23: missing required parameter 'Kernels/conv/velocity'\n        Doc String: \"Velocity Vector\"\n\n\nStack frames: 19\nEncountering Errors? Please include diagnostic output\nNo response",
          "url": "https://github.com/idaholab/moose/discussions/28841",
          "updatedAt": "2024-10-14T17:09:09Z",
          "publishedAt": "2024-10-13T04:59:33Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI can't reproduce this locally.\nCan you give the diagnostics output from the diagnostics script in moose.scripts ?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28841#discussioncomment-10931149",
                  "updatedAt": "2024-10-13T23:25:17Z",
                  "publishedAt": "2024-10-13T23:25:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "libinbabu1991"
                          },
                          "bodyText": "I could not find a diagnostic file in my app dog's folder > scripts.\nI looked inside the Moose folder and found one.\nI hope I have taken the diagnostics.sh file content from the right location \\wsl.localhost\\Ubuntu\\root\\projects\\moose\\scripts\nPlease see the content below.\n#!/bin/bash\n#* This file is part of the MOOSE framework\n#* https://www.mooseframework.org\n#*\n#* All rights reserved, see COPYRIGHT for full restrictions\n#* https://github.com/idaholab/moose/blob/master/COPYRIGHT\n#*\n#* Licensed under LGPL 2.1, please see LICENSE for details\n#* https://www.gnu.org/licenses/lgpl-2.1.html\nSCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\nfunction ecolor_support()\n{\nECOLOR_SUPPORT=\"${ECOLOR_SUPPORT:-$(tput colors)}\"\necho \"${ECOLOR_SUPPORT}\"\n}\nfunction get_value()\n{\ngrep \"^$1: \" \"${SCRIPT_DIR}\"/../framework/doc/packages_config.yml | awk '{print $2}'\n}\nfunction print_failure_and_exit()\n{\nif [[ -n \"${CANCELED}\" ]]; then exit 1; fi\nprint_red \"ERROR: \"\nprintf \"Printing report.\\n\"\nenv_test\nprintf '\nThere was an error while %s\nPlease report the entirety of the output of diagnostics on\nthis terminal to either YOUR existing post OR a new post on\nhttps://github.com/idaholab/moose/discussions\\n' \"$(print_red \"$@\")\"\nexit_on_failure 1\n}\nfunction print_reset()\n{\nif [[ \"${NO_COLOR:-0}\" == 0 ]]; then\nprintf \"\\033[0m\"\nfi\n}\nfunction print_sep()\n{\nmax_len=$(tput cols)\nif [[ $max_len -gt 100 ]]; then max_len=100; fi\nprintf -v foo \"%${max_len}s\" '' && echo \"${foo//?/#}\"\n}\nfunction print_bold()\n{\nif [[ \"${NO_COLOR}\" == 1 ]]; then\nprintf '%b' \"$@\"\nelif [[ \"$(ecolor_support)\" -ge 256 ]]; then\nprintf '\\033[1;37m%b' \"$@\"\nelse\nprintf '\\033[1m%b' \"$@\"\nfi\nprint_reset\n}\nfunction print_red()\n{\nif [[ \"${NO_COLOR}\" == 1 ]]; then\nprintf '%b' \"$@\"\nelse\nprintf '\\033[1;91m%b' \"$@\"\nfi\nprint_reset\n}\nfunction print_orange()\n{\nif [[ \"${NO_COLOR}\" == 1 ]]; then\nprintf '%b' \"$@\"\nelif [[ \"$(ecolor_support)\" -ge 256 ]]; then\nprintf \"\\033[38;5;202m%b\" \"$@\"\nelse\nprintf \"\\033[0;33m%b\" \"$@\"\nfi\nprint_reset\n}\nfunction print_green()\n{\nif [[ \"${NO_COLOR}\" == 1 ]]; then\nprintf '%b' \"$@\"\nelse\nprintf \"\\033[1;92m%b\" \"$@\"\nfi\nprint_reset\n}\nfunction run_command()\n{\nif [[ \"${NO_COLOR}\" == 1 ]]; then\ntrue\nelif [[ \"$(ecolor_support)\" -ge 256 ]]; then\nprintf \"\\033[38;5;236m\"\nelse\nprintf \"\\033[1;30m\"\nfi\n# shellcheck disable=SC2068\n$@\nexit_code=$?\nprint_reset\nreturn $exit_code\n}\nfunction create_tmp()\n{\nif [[ -n \"$CTMP_DIR\" ]]; then echo \"${CTMP_DIR}\"; return; fi\nif [[ \"$(uname)\" == 'Darwin' ]]; then\nlocal TMP_DIR=\"${TMP_DIR:-\"$(mktemp -d -t MOOSE)\"}\"\nelse\nlocal TMP_DIR=\"${TMP_DIR:-\"$(mktemp -d -t MOOSE.XXXXXXXX)\"}\"\nfi\necho \"${TMP_DIR}\"\n}\nfunction exit_on_failure()\n{\nif [[ \"${NO_FAILURE}\" == '1' ]]; then\nprintf '\\n--continue-on-fail enabled. Not exiting.\\n\\n'\nreturn\nfi\nexit \"${1}\"\n}\nfunction print_help()\n{\n# shellcheck disable=SC2034\nargs=(\"-h|--help\"\n\"-f|--full-build\"\n\"-r|--run-checks\"\n\"-c|--conda-channel\"\n\"--continue-on-fail\"\n\"-v|--verbose\"\n\"--no-colors\")\n# shellcheck disable=SC2034\nargs_about=(\"Print this message and exit.\"\\\n            \"Build PETSc, libMesh, WASP, MOOSE, and then run entire test suite.\"\\\n            \"Build MOOSE and then run aggregated tests.\"\\\n            \"Prioritize MOOSE packages with this channel (default is public).\"\\\n            \"Do not stop on failure. If this option works, you have intermittent network issues.\"\\\n            \"Print additional output from commands being executed.\"\\\n            \"Do not print color.\")\n\nprintf '\\nSyntax:\\n\\t./%s\\n\\nOptions:\\n\\n' \"$(basename \"$0\")\"\nprint_args args args_about\nprintf '\\nInfluencial Environment Variables:\\n\n\n\\tMETHODS             libMesh build type \"opt dbg devel oprof\" (default: opt)\n\\tMETHOD              MOOSE build type (default: \"opt\")\n\\tMOOSE_JOBS          Cores available during make\nProxies/Certificate Authority environmet variables:\n(corporate work machines may require that these be set)\n\\tREQUESTS_CA_BUNDLE=%s\n\\tSSL_CERT_FILE=%s\n\\tCURL_CA_BUNDLE=%s\n\\thttp_proxy=%s\n\\thttps_proxy=%s\nSupplying no arguments prints useful environment information.\\n\\n' \n\"${REQUESTS_CA_BUNDLE:-'not set'}\" \n\"${SSL_CERT_FILE:-'not set'}\" \n\"${CURL_CA_BUNDLE:-'not set'}\" \n\"${HTTP_PROXY:-${http_proxy:-'not set'}}\" \n\"${HTTPS_PROXY:-${https_proxy:-'not set'}}\"\n}\nfunction ctl_c()\n{\nprintf \"\\033[0m\\n\\nYou canceled diagnostics. Running clean-up routines.\nPlease do not ctl-c again, and allow the temp directory to be deleted.\\n\"\nexport CANCELED=true\nexit 1\n}\nCheck Arguments. If PRISTINE is already set, break out of argument checking\nif [[ -z \"$PRISTINE_ENVIRONMENT\" ]]; then\n# shellcheck disable=SC1091\nsource \"${SCRIPT_DIR}\"/functions/help_system\nwhile [[ \"$#\" -gt 0 ]]; do\ncase \"${1}\" in\n-h|--help)\nprint_help; exit 0;;\n-f|--full-build)\nexport FULL_BUILD=1; shift ;;\n-r|--run-checks)\nexport RUN_CHECKS=1; shift ;;\n-c|--conda-channel)\nif ! [[ \"${2}\" =~ ^http|^file ]]; then\nprint_red '\\ninvalid -c|--conda-channel value\\n'\nprint_help; exit 1\nfi\nexport CONDA_CHANNEL=\"${2}\"; shift 2;;\n--continue-on-fail)\nexport NO_FAILURE=1; shift ;;\n-v|--verbose)\nexport VERBOSITY=1; shift ;;\n--no-colors)\nexport NO_COLOR=1; shift ;;\n*)\nprintf 'Unknown argument: %s\\n' \"${1}\"; exit 1;;\nesac\ndone\n# default to printing active environment, otherwise do not print active environment\n# (basically I want the default behavior to behave like the previous diagnostic.sh script)\nif [[ -n \"${FULL_BUILD}\" ]] || [[ -n \"${RUN_CHECKS}\" ]]; then\nNO_ENVIRONMENT=1\nfi\n# FULL_BUILD or RUN_CHECKS is set, but not PRISTINE_ENVIRONMENT\nif [[ \"${PRISTINE_ENVIRONMENT}\" != 0 ]] && [[ \"${NO_ENVIRONMENT}\" == 1 ]]; then\n# Obtain a temp directory\nexport CTMP_DIR\nCTMP_DIR=$(create_tmp)\n# Delete temporary directory at any time this script exits\ntrap 'printf \"\\033[0m\\n\\nDeleting temporary directory\\n\\n\\t${CTMP_DIR}\\n\"; rm -rf \"$CTMP_DIR\";' EXIT\nprintf \"Beginning in a pristine environment\\n\"\nenv -i bash --rcfile <(echo \"CLEAN_ENV='True' \nTERM=${TERM:-'xterm'} \nPRISTINE_ENVIRONMENT=1 \nMETHODS=${METHODS:-opt} \nMETHOD=${METHOD:-opt} \nMOOSE_JOBS=${MOOSE_JOBS:-6} \nFULL_BUILD=${FULL_BUILD:-0} \nRUN_CHECKS=${RUN_CHECKS:-0} \nNO_FAILURE=${NO_FAILURE:-0} \nVERBOSITY=${VERBOSITY:-0} \nNO_COLOR=${NO_COLOR:-0} \nCONDA_CHANNEL=${CONDA_CHANNEL:-'https://conda.software.inl.gov/public'} \nREQUESTS_CA_BUNDLE=${REQUESTS_CA_BUNDLE:-''} \nSSL_CERT_FILE=${SSL_CERT_FILE:-''} \nCURL_CA_BUNDLE=${CURL_CA_BUNDLE:-''} \nCTMP_DIR=${CTMP_DIR} \nNO_ENVIRONMENT=1 \n${SCRIPT_DIR}/${BASH_SOURCE[0]}; exit\")\nexit $?\nelse\n# Set defaults\nexport PRISTINE_ENVIRONMENT=${PRISTINE_ENVIRONMENT:-0}\nexport FULL_BUILD=${FULL_BUILD:-0}\nexport METHOD=${METHOD:-opt}\nexport METHODS=${METHODS:-opt}\nexport MOOSE_JOBS=${MOOSE_JOBS:-6}\nexport RUN_CHECKS=${RUN_CHECKS:-0}\nexport NO_FAILURE=${NO_FAILURE:-0}\nexport VERBOSITY=${VERBOSITY:-0}\nexport NO_COLOR=${NO_COLOR:-0}\nexport CONDA_CHANNEL=${CONDA_CHANNEL:-'https://conda.software.inl.gov/public'}\nexport REQUESTS_CA_BUNDLE=${REQUESTS_CA_BUNDLE:-''}\nexport SSL_CERT_FILE=${SSL_CERT_FILE:-''}\nexport CURL_CA_BUNDLE=${CURL_CA_BUNDLE:-''}\nexport NO_ENVIRONMENT=${NO_ENVIRONMENT:-0}\nfi\nfi\nAugment additional pristine environment variables\nif [[ \"${PRISTINE_ENVIRONMENT}\" == \"1\" ]]; then\ntrap 'ctl_c' INT\n# Further sandbox our environment\nexport HOME=${CTMP_DIR}\n# Make our environment more sane\nexport PATH=/bin:/usr/bin:/sbin\nif [[ \"$(ecolor_support)\" -ge 256 ]]; then\nexport TERM=xterm-256color\nelse\nexport TERM=xterm\nfi\n# Make our environment safe\numask 027\n# It's not enough to set these with --rcfile.\n# They must be exported to be inherited by child processes\nexport CTMP_DIR REQUESTS_CA_BUNDLE SSL_CERT_FILE CURL_CA_BUNDLE\nprint_sep\nprintf 'Temporary Directory:\\n%s\\n' \"${CTMP_DIR}\"\nfi\nMake print_environment available in any step\nshellcheck disable=SC1091\nsource \"${SCRIPT_DIR}\"/functions/diagnostic_environment.sh\nDo only the one thing if default behavior\nif [[ \"${NO_ENVIRONMENT}\" == 0 ]]; then print_environment; exit; fi\nDo all the things\nprintf '\nNote: The following steps will be performed in a temporary directory,\nand will be deleted when finished or upon encountering an error.\n  The purpose of this tool is to determine if external factors\n  are preventing you from building or running MOOSE.\n\n  Errors encountered will usually mean network or hardware related\n  causes (VPN, Network Proxies, Corporate SSL Certificates, etc).\n\n  If diagnostics runs to completion without errors then likely the\n  issue will be something in your environment as to the cause. If\n  this is case, run %s again without any arguments, and\n  carefully scrutinize the output.\\n' \"$(basename \"$0\")\"\n\nprint_sep\nshellcheck disable=SC1091\nsource \"${SCRIPT_DIR}\"/functions/diagnostic_conda.sh\nshellcheck disable=SC1091\nsource \"${SCRIPT_DIR}\"/functions/diagnostic_application.sh\nshellcheck disable=SC1091\nsource \"${SCRIPT_DIR}\"/functions/diagnostic_tests.sh\nGet individual packages for now, until moose-mpi becomes available\nexport MOOSE_PACKAGES\nMOOSE_PACKAGES=\"moose-mpi moose-libmesh-vtk moose-tools $(get_value 'default_mpi') \nzlib python packaging pyaml jinja2\"\ninstall_conda\ncreate_env\nbuild_application\ntest_application",
                          "url": "https://github.com/idaholab/moose/discussions/28841#discussioncomment-10931283",
                          "updatedAt": "2024-10-14T00:15:46Z",
                          "publishedAt": "2024-10-14T00:15:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you have to run the script not copy it.\nit should be run from moose/scripts\nare you using your executable in dog/ ? Dont use that for running examples",
                          "url": "https://github.com/idaholab/moose/discussions/28841#discussioncomment-10931301",
                          "updatedAt": "2024-10-14T00:17:42Z",
                          "publishedAt": "2024-10-14T00:17:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "libinbabu1991"
                          },
                          "bodyText": "Okay. Sorry my mistake.\nYes, I used the executable dog-opt to run the examples. (:~/projects/dog/ex03_coupling# ../dog-opt -i ex03.i )\nWhat executable should I use for ex03?\nI ran the bellow script:\n(moose) root@131-ENG-DESKTOP:~/projects/moose/scripts# ./diagnostics.sh\n####################################################################################################\nInfluential Environment Variables\nCC=mpicc\nCC_FOR_BUILD=/root/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-cc\nCFLAGS=   -fPIC -fstack-protector-strong -fno-plt  -ffunction-sections -pipe -isystem /root/miniconda3/envs/moose/include\nCONDA_BUILD_SYSROOT=/root/miniconda3/envs/moose/x86_64-conda-linux-gnu/sysroot\nCONDA_CHANNEL=https://conda.software.inl.gov/public\nCONDA_DEFAULT_ENV=moose\nCONDA_EXE=/root/miniconda3/bin/conda\nCONDA_PREFIX=/root/miniconda3/envs/moose\nCONDA_PREFIX_1=/root/miniconda3\nCONDA_PROMPT_MODIFIER=(moose)\nCONDA_PYTHON_EXE=/root/miniconda3/bin/python\nCONDA_SHLVL=2\nCONDA_TOOLCHAIN_BUILD=x86_64-conda-linux-gnu\nCONDA_TOOLCHAIN_HOST=x86_64-conda-linux-gnu\nCPP=/root/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-cpp\nCPPFLAGS=   -isystem /root/miniconda3/envs/moose/include\nCURL_CA_BUNDLE=\nCXX=mpicxx\nCXXFILT=/root/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-c++filt\nCXXFLAGS=-fvisibility-inlines-hidden -fmessage-length=0    -fPIC -fstack-protector-strong -fno-plt  -ffunction-sections -pipe -isystem /root/miniconda3/envs/moose/include  -std=c++17\nCXX_FOR_BUILD=/root/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-c++\nF77=mpif77\nF90=mpif90\nF95=/root/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-f95\nFC=mpif90\nFC_FOR_BUILD=/root/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-gfortran\nFFLAGS=   -fPIC -fstack-protector-strong -fno-plt  -ffunction-sections -pipe -isystem /root/miniconda3/envs/moose/include\nFI_PROVIDER=tcp\nHDF5_DIR=/root/miniconda3/envs/moose\nLD=/root/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-ld\nLDFLAGS=-Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/root/miniconda3/envs/moose/lib -Wl,-rpath-link,/root/miniconda3/envs/moose/lib -L/root/miniconda3/envs/moose/lib\nLD_GOLD=/root/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-ld.gold\nLIBMESH_DIR=/root/miniconda3/envs/moose/libmesh\nMOOSE_JOBS=6\nMOOSE_NO_CODESIGN=true\nPATH=/root/miniconda3/envs/moose/bin:/root/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0:/mnt/c/Windows/System32/OpenSSH:/mnt/c/Program Files (x86)/HP/HP Performance Advisor:/mnt/c/Program Files/dotnet:/mnt/c/Program Files/Siemens/NX2306/CAPITALINTEGRATION/capitalnxremote:/mnt/c/Users/LibinBabu/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/LibinBabu/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin:/root/miniconda3/envs/moose/wasp/bin\nPETSC_DIR=/root/miniconda3/envs/moose/petsc\nREQUESTS_CA_BUNDLE=\nSSL_CERT_FILE=\nWASP_DIR=/root/miniconda3/envs/moose/wasp\n####################################################################################################\nCompiler(s) (CC CXX FC F77 F90):\nwhich $CC; /root/miniconda3/envs/moose/bin/mpicc\n$CC --version; x86_64-conda-linux-gnu-cc (conda-forge gcc 12.3.0-7) 12.3.0\n$CC -show; x86_64-conda-linux-gnu-cc -I/root/miniconda3/envs/moose/include -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -Wl,-rpath,/root/miniconda3/envs/moose/lib -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -Wl,-rpath -Wl,/root/miniconda3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\nwhich $CXX; /root/miniconda3/envs/moose/bin/mpicxx\n$CXX --version; x86_64-conda-linux-gnu-c++ (conda-forge gcc 12.3.0-7) 12.3.0\n$CXX -show; x86_64-conda-linux-gnu-c++ -I/root/miniconda3/envs/moose/include -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -Wl,-rpath,/root/miniconda3/envs/moose/lib -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -lmpicxx -Wl,-rpath -Wl,/root/miniconda3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\nwhich $FC; /root/miniconda3/envs/moose/bin/mpif90\n$FC --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$FC -show; x86_64-conda-linux-gnu-gfortran -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -Wl,-rpath,/root/miniconda3/envs/moose/lib -I/root/miniconda3/envs/moose/include -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/root/miniconda3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\nwhich $F77; /root/miniconda3/envs/moose/bin/mpif77\n$F77 --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$F77 -show; x86_64-conda-linux-gnu-gfortran -I/root/miniconda3/envs/moose/include -fallow-argument-mismatch -L/root/miniconda3/envs/moose/lib -Wl,-rpath,/root/miniconda3/envs/moose/lib -I/root/miniconda3/envs/moose/include -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/root/miniconda3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\nwhich $F90; /root/miniconda3/envs/moose/bin/mpif90\n$F90 --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$F90 -show; x86_64-conda-linux-gnu-gfortran -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -Wl,-rpath,/root/miniconda3/envs/moose/lib -I/root/miniconda3/envs/moose/include -I/root/miniconda3/envs/moose/include -L/root/miniconda3/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/root/miniconda3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\nOK\n####################################################################################################\nPython Sanity Checks\n/usr/bin/env python3 --version; (reporting as: Python 3.11.8) matches\nwhich python3 python;\n/root/miniconda3/envs/moose/bin/python3 --version; == Python 3.11.8\n/root/miniconda3/envs/moose/bin/python --version; == Python 3.11.8\nOK\n####################################################################################################\nPython Modules (TestHarness, run-ability)\nOK\n####################################################################################################\nMOOSE Repository/Conda Version Checks\n          Installed     Required\n\nmoose-dev     2024.10.01 == 2024.10.01\nmoose-libmesh 2024.08.30 == 2024.08.30\nmoose-petsc   3.21.5     == 3.21.5\nmoose-wasp    2024.05.08 == 2024.05.08\nmoose-mpi     2024.10.01 == 2024.10.01\nOK\nchecks PASSED",
                          "url": "https://github.com/idaholab/moose/discussions/28841#discussioncomment-10931425",
                          "updatedAt": "2024-10-14T00:51:37Z",
                          "publishedAt": "2024-10-14T00:51:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok that s the problem\nyou have to use the example 3 executable to run the ex03 inputs\nthere's an object in that folder you need to use",
                          "url": "https://github.com/idaholab/moose/discussions/28841#discussioncomment-10931431",
                          "updatedAt": "2024-10-14T00:54:09Z",
                          "publishedAt": "2024-10-14T00:54:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "libinbabu1991"
                          },
                          "bodyText": "I changed the directory from dog to moose and tried. But the error still comes. Please see below:\n(moose) root@131-ENG-DESKTOP:/projects/dog/ex03_coupling# cd /projects/moose/examples/ex03_coupling\n(moose) root@131-ENG-DESKTOP:/projects/moose/examples/ex03_coupling# make -j8\n(moose) root@131-ENG-DESKTOP:/projects/moose/examples/ex03_coupling# ./ex03-opt -i ex03.i\n*** Info ***\n'execute_on' parameter specified in [Outputs] block is ignored for object 'checkpoint'.\nDefine this object in its own sub-block of [Outputs] to modify its execution schedule.\n*** ERROR ***\n/root/projects/moose/examples/ex03_coupling/ex03.i:23: missing required parameter 'Kernels/conv/velocity'\nDoc String: \"Velocity Vector\"\nStack frames: 19\n0: libMesh::print_trace(std::ostream&)",
                          "url": "https://github.com/idaholab/moose/discussions/28841#discussioncomment-10931460",
                          "updatedAt": "2024-10-14T01:03:30Z",
                          "publishedAt": "2024-10-14T01:03:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did you modify this ex03.i input?",
                          "url": "https://github.com/idaholab/moose/discussions/28841#discussioncomment-10931517",
                          "updatedAt": "2024-10-14T01:21:11Z",
                          "publishedAt": "2024-10-14T01:21:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "libinbabu1991"
                          },
                          "bodyText": "Hi,\nI was able to successfully run example 3 when I used the input file from a fresh package of example files. I used the examples from TMAP8>MOOSE\n\\wsl.localhost\\Ubuntu\\root\\projects\\TMAP8\\moose\\examples\\ex03_coupling\nI might have made some modifications to the initial package of ex03.i file unknowingly.\nThanks for your patience and support!",
                          "url": "https://github.com/idaholab/moose/discussions/28841#discussioncomment-10939398",
                          "updatedAt": "2024-10-14T17:09:10Z",
                          "publishedAt": "2024-10-14T17:09:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[need help] 3 questions RE: ElementSubdomainModifier and CoupledVarThresholdElementSubdomainModifier",
          "author": {
            "login": "Traiwit"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHi guys,\nI have 3 questions RE: ElementSubdomainModifier (more specifically CoupledVarThresholdElementSubdomainModifier)\nFirst question, how do I make BC wait for the boundary to be generated? lets say i'm generating a boundary at every time step\n [new_side]\n    type = CoupledVarThresholdElementSubdomainModifier\n    coupled_var = 'state_M0'\n    criterion_type = EQUAL\n    threshold = 1\n    subdomain_id = 3\n    complement_subdomain_id = 1\n    moving_boundary_name = moving_boundary_tet\n    execute_on = 'TIMESTEP_BEGIN'\n[]\n\nbut during the initialization, it just gives this error\n*** ERROR ***\n(BCs/bc_drain0001_Pit/boundary):\n    the following side sets (ids) do not exist on the mesh: moving_boundary_tet (21)\n    \n    MOOSE distinguishes between \"node sets\" and \"side sets\" depending on whether \n    you are using \"Nodal\" or \"Integrated\" BCs respectively. Node sets corresponding \n    to your side sets are constructed for you by default.\n    \n    Try setting \"Mesh/construct_side_list_from_node_list=true\" if you see this error.\n    Note: If you are running with adaptivity you should prefer using side sets.\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n\nI tried to ignore the checks, but still doesnt work\n[Problem]\n  boundary_restricted_elem_integrity_check = false  # default: true\n  boundary_restricted_node_integrity_check = false   # default: true\n  check_uo_aux_state = false                        # default: false\n  error_on_jacobian_nonzero_reallocation = false    # default: false\n  fv_bcs_integrity_check = false                     # default: true\n  kernel_coverage_check = false                      # default: true\n  material_coverage_check = false                    # default: true\n  material_dependency_check = false                  # default: true\n  skip_nl_system_check = false                      # default: false\n[]\n\n\nQuestion2: if I call CoupledVarThresholdElementSubdomainModifier twice in 1 input file, the surface/side generated is overwritten the previous one, for example if I do this\n[tet]\n  type = CoupledVarThresholdElementSubdomainModifier\n  coupled_var = 'state_M0'\n  criterion_type = EQUAL\n  block = '1 3'\n  threshold = 1\n  subdomain_id = 3\n  complement_subdomain_id = 1\n  moving_boundary_name = moving_boundary_tet\n  execute_on = 'TIMESTEP_BEGIN'\n[]\n\n\n[wedge]\n  type = CoupledVarThresholdElementSubdomainModifier\n  coupled_var = 'state_M0'\n  block = '2 4'\n  criterion_type = EQUAL\n  threshold = 1\n  subdomain_id = 4\n  complement_subdomain_id = 2\n  moving_boundary_name = moving_boundary_wedge\n  execute_on = 'TIMESTEP_BEGIN'\n[]\n\nonly moving_boundary_wedge will be produced in the mesh, how to overcome this problem? as later on, i might want to generate surface at the top of the mesh for surface recharge and stuff as well as the drain surface\n\nLast question, this is probs the most headache one\nI have modified ElementSubdomainModifier, so that it only produces surface(s) based on the variable, (i dont want anything to do with Subdomain whatsoever). I'm not so good with C++ so I mostly just commented out lines that related to subdomain\nnow I have a problem, the surface I generated is almost perfect, but it still generated artificial surfaces inside the main surface, I dig deep enough to realise that this 'inside surface' is caused by the parallelisation? the more mpi cores > the more inside surfaces\n\ncompare to the one I want (pre-made, not generated)\n\nbelow is my modified ElementSubdomainModifier.C could you help me to improve this?\nor should I make another function that remove the surfaces inside any surface (scan all directions, etc)?\n#include \"ElementSubdomainModifier.h\"\n#include \"DisplacedProblem.h\"\n\n#include \"libmesh/parallel_algebra.h\"\n#include \"libmesh/parallel.h\"\n#include \"libmesh/dof_map.h\"\n#include \"libmesh/remote_elem.h\"\n#include \"libmesh/parallel_ghost_sync.h\"\n\nInputParameters\nElementSubdomainModifier::validParams()\n{\n  InputParameters params = ElementUserObject::validParams();\n  params.addClassDescription(\n      \"Modify element subdomain ID. This userobject only runs on the undisplaced mesh, and it will \"\n      \"modify both the undisplaced and the displaced mesh.\");\n  params.addParam<bool>(\"apply_initial_conditions\",\n                        true,\n                        \"Whether to apply initial conditions on the moved nodes and elements\");\n  params.addParam<BoundaryName>(\n      \"moving_boundary_name\",\n      \"Boundary to modify when an element is moved. A boundary with the provided name will be \"\n      \"created if not already exists on the mesh.\");\n  params.addParam<BoundaryName>(\"complement_moving_boundary_name\",\n                                \"Boundary that associated with the unmoved domain when neighbor \"\n                                \"element(s) is moved. A boundary with the provided name will be \"\n                                \"created if not already exists on the mesh.\");\n  params.set<bool>(\"use_displaced_mesh\") = false;\n  params.suppressParameter<bool>(\"use_displaced_mesh\");\n  return params;\n}\n\nElementSubdomainModifier::ElementSubdomainModifier(const InputParameters & parameters)\n  : ElementUserObject(parameters),\n    _displaced_problem(_fe_problem.getDisplacedProblem().get()),\n    _apply_ic(getParam<bool>(\"apply_initial_conditions\")),\n    _moving_boundary_specified(isParamValid(\"moving_boundary_name\")),\n    _complement_moving_boundary_specified(isParamValid(\"complement_moving_boundary_name\")),\n    _moving_boundary_id(-1)\n{\n}\n\nvoid\nElementSubdomainModifier::initialSetup()\n{\n  if (_moving_boundary_specified)\n  {\n    _moving_boundary_name = getParam<BoundaryName>(\"moving_boundary_name\");\n    setMovingBoundaryName(_mesh);\n    if (_displaced_problem)\n      setMovingBoundaryName(_displaced_problem->mesh());\n  }\n\n  if (_complement_moving_boundary_specified)\n  {\n    _complement_moving_boundary_name = getParam<BoundaryName>(\"complement_moving_boundary_name\");\n    setComplementMovingBoundaryName(_mesh);\n    if (_displaced_problem)\n      setComplementMovingBoundaryName(_displaced_problem->mesh());\n  }\n}\n\nvoid\nElementSubdomainModifier::setMovingBoundaryName(MooseMesh & mesh)\n{\n  // We only need one boundary to modify. Create a dummy vector just to use the API.\n  const std::vector<BoundaryID> boundary_ids = mesh.getBoundaryIDs({{_moving_boundary_name}}, true);\n  mooseAssert(boundary_ids.size() == 1, \"Expect exactly one boundary ID.\");\n  _moving_boundary_id = boundary_ids[0];\n  mesh.setBoundaryName(_moving_boundary_id, _moving_boundary_name);\n  mesh.getMesh().get_boundary_info().sideset_name(_moving_boundary_id) = _moving_boundary_name;\n  mesh.getMesh().get_boundary_info().nodeset_name(_moving_boundary_id) = _moving_boundary_name;\n}\n\nvoid\nElementSubdomainModifier::setComplementMovingBoundaryName(MooseMesh & mesh)\n{\n  // We only need one boundary to modify. Create a dummy vector just to use the API.\n  const std::vector<BoundaryID> boundary_ids =\n      mesh.getBoundaryIDs({{_complement_moving_boundary_name}}, true);\n  mooseAssert(boundary_ids.size() == 1, \"Expect exactly one boundary ID.\");\n  _complement_moving_boundary_id = boundary_ids[0];\n  mesh.setBoundaryName(_complement_moving_boundary_id, _complement_moving_boundary_name);\n  mesh.getMesh().get_boundary_info().sideset_name(_complement_moving_boundary_id) =\n      _complement_moving_boundary_name;\n  mesh.getMesh().get_boundary_info().nodeset_name(_complement_moving_boundary_id) =\n      _complement_moving_boundary_name;\n}\n\nvoid\nElementSubdomainModifier::initialize()\n{\n  _moved_elems.clear();\n  _moved_displaced_elems.clear();\n  _moved_nodes.clear();\n  _cached_subdomain_assignments.clear();\n  _moving_boundary_subdomains.clear();\n}\n\nvoid\nElementSubdomainModifier::execute()\n{\n  // First, compute the desired subdomain ID for the current element.\n  SubdomainID subdomain_id = computeSubdomainID();\n\n  // If the current element's subdomain ID isn't what we want\n  if (subdomain_id != std::numeric_limits<SubdomainID>::max() &&\n      _current_elem->subdomain_id() != subdomain_id)\n  {\n    _moving_boundary_subdomains.insert(subdomain_id);\n    _moving_boundary_subdomains.insert(_current_elem->subdomain_id());\n    // Current element ID, used to index both the element on the displaced and undisplaced meshes.\n    _mesh.getMesh().allow_renumbering(false);\n    dof_id_type elem_id = _current_elem->id();\n    // Change the element's subdomain\n    Elem * elem = _mesh.elemPtr(elem_id);\n    // Elem * displaced_elem =\n    //     _displaced_problem ? _displaced_problem->mesh().elemPtr(elem_id) : nullptr;\n    _mesh.getMesh().allow_renumbering(false);\n\n    // Save the affected nodes so that we can later update/initialize the solution\n    for (unsigned int i = 0; i < elem->n_nodes(); ++i)\n      _moved_nodes.insert(elem->node_id(i));\n    // _cached_subdomain_assignments.emplace_back(elem, subdomain_id);\n    _moved_elems.push_back(elem);\n\n  }\n}\n\n\nvoid\nElementSubdomainModifier::threadJoin(const UserObject & in_uo)\n{\n  // Join the data from uo into _this_ object:\n  const auto & uo = static_cast<const ElementSubdomainModifier &>(in_uo);\n\n  _moved_elems.insert(_moved_elems.end(), uo._moved_elems.begin(), uo._moved_elems.end());\n\n  _moved_displaced_elems.insert(_moved_displaced_elems.end(),\n                                uo._moved_displaced_elems.begin(),\n                                uo._moved_displaced_elems.end());\n\n  _moved_nodes.insert(uo._moved_nodes.begin(), uo._moved_nodes.end());\n  // _cached_subdomain_assignments.insert(_cached_subdomain_assignments.end(),\n  //                                      uo._cached_subdomain_assignments.begin(),\n  //                                      uo._cached_subdomain_assignments.end());\n}\n\nvoid\nElementSubdomainModifier::finalize()\n{\n  // Do not apply cached subdomain changes\n  // for (auto & [elem, subdomain_id] : _cached_subdomain_assignments)\n  //   elem->subdomain_id() = subdomain_id;\n\n  _ghost_sides_to_add.clear();\n  _complement_ghost_sides_to_add.clear();\n  _complement_ghost_sides_to_remove.clear();\n  _complement_ghost_nodes_to_remove.clear();\n\n  /*\n    Synchronize ghost element subdomain ID\n    Note: this needs to be done before updating boundary info because\n    updating boundary requires the updated element subdomain ids\n  */\n  SyncSubdomainIds sync(_mesh.getMesh());\n  Parallel::sync_dofobject_data_by_id(_mesh.getMesh().comm(),\n                                      _mesh.getMesh().elements_begin(),\n                                      _mesh.getMesh().elements_end(),\n                                      sync);\n\n\n  if (_moving_boundary_specified)\n    updateMovingBoundaryInfo(_mesh, _moved_elems);\n\n  // Synchronize boundary information after mesh update\n  synchronizeBoundaryInfo(_mesh);\n\n  // // Reinit equation systems\n  // _fe_problem.meshChanged();\n\n  _mesh.getMesh().allow_renumbering(false);\n\n  // // Apply initial condition for the newly moved elements and boundary nodes\n  buildMovedElemsRange();\n  buildMovedBndNodesRange();\n\n\n\n}\n\n\n\n\nvoid\nElementSubdomainModifier::updateMovingBoundaryInfo(MooseMesh & mesh, const std::vector<const Elem *> & moved_elems)\n{\n\n\n  if (_moving_boundary_subdomains.size())\n    mooseAssert(_moving_boundary_subdomains.size() == 2,\n                \"The number of moving subdomains should be two\");\n\n  BoundaryInfo & bnd_info = mesh.getMesh().get_boundary_info();\n\n  bnd_info.sideset_name(_moving_boundary_id) = _moving_boundary_name;\n  bnd_info.nodeset_name(_moving_boundary_id) = _moving_boundary_name;\n\n  auto & elem_side_bnd_ids = bnd_info.get_sideset_map();\n  std::set<const Elem *> boundary_elem_candidates(moved_elems.begin(), moved_elems.end());\n  std::vector<std::pair<const Elem *, unsigned int>> elem_sides_to_be_cleared;\n\n  std::cout << \"Number of moved elements: \" << moved_elems.size() << std::endl;\n\n  // Collect current boundary elements and sides to be cleared\n  for (const auto & [elem, side_bnd] : elem_side_bnd_ids)\n  {\n    auto side = side_bnd.first;\n    auto boundary_id = side_bnd.second;\n    if (boundary_id == _moving_boundary_id)\n    {\n      elem_sides_to_be_cleared.emplace_back(elem, side);\n      // std::cout << \"Marking old boundary side for removal: Elem ID \" << elem->id() << \", Side \" << side << std::endl;\n    }\n  }\n\n  // Clear old boundary sides\n  for (auto & [elem, side] : elem_sides_to_be_cleared)\n  {\n    bnd_info.remove_side(elem, side, _moving_boundary_id);\n    // std::cout << \"Removed old boundary side: Elem ID \" << elem->id() << \", Side \" << side << std::endl;\n  }\n\n  std::cout << \"Old boundary sides removed.\" << std::endl;\n\n  // Add moved elements to the candidate list\n  for (auto elem : moved_elems)\n    boundary_elem_candidates.insert(elem);\n\n  // Set to collect new boundary nodes\n  std::set<const Node *> boundary_nodes;\n\n  // Process the boundary element candidates\n  for (auto elem : boundary_elem_candidates)\n  {\n    for (auto side : elem->side_index_range())\n    {\n      const Elem * neighbor = elem->neighbor_ptr(side);\n\n      // Debug statement to print element and side info\n      // std::cout << \"Processing Element ID: \" << elem->id() << \", Side: \" << side << std::endl;\n\n      if (neighbor && neighbor->active() && neighbor != libMesh::remote_elem)\n      {\n        // Only add side if the neighbor is not part of the moved elements\n        if (std::find(moved_elems.begin(), moved_elems.end(), neighbor) == moved_elems.end())\n        {\n          bnd_info.add_side(elem, side, _moving_boundary_id);\n          // std::cout << \"Adding new boundary side: Elem ID \" << elem->id() << \", Side \" << side << std::endl;\n\n          // Collect nodes for this side\n          auto nodes = elem->nodes_on_side(side);\n          for (auto node : nodes)\n            boundary_nodes.insert(&(elem->node_ref(node)));\n        }\n      }\n      else if (neighbor && !neighbor->active() && neighbor != libMesh::remote_elem)\n      {\n        // std::cout << \"Neighbor is not active, checking family members.\" << std::endl;\n        std::vector<const Elem *> active_family;\n        auto top_parent = neighbor->top_parent();\n        top_parent->active_family_tree_by_neighbor(active_family, elem);\n        for (auto felem : active_family)\n        {\n          if (std::find(moved_elems.begin(), moved_elems.end(), felem) == moved_elems.end())\n          {\n            auto cside = felem->which_neighbor_am_i(elem);\n            bnd_info.add_side(felem, cside, _moving_boundary_id);\n            // std::cout << \"Adding new boundary side from family: Elem ID \" << felem->id() << \", Side \" << cside << std::endl;\n\n            if (felem->processor_id() != this->processor_id())\n              _ghost_sides_to_add[felem->processor_id()].emplace_back(felem->id(), cside);\n\n            // Collect nodes for this side\n            auto nodes = felem->nodes_on_side(cside);\n            for (auto node : nodes)\n              boundary_nodes.insert(&(felem->node_ref(node)));\n          }\n        }\n      }\n    }\n  }\n\n  // Clear old boundary nodes\n  auto & nodeset_map = bnd_info.get_nodeset_map();\n  std::vector<const Node *> nodes_elem_sides_to_be_cleared;\n  for (const auto & pair : bnd_info.get_nodeset_map())\n    if (pair.second == _moving_boundary_id)\n      nodes_elem_sides_to_be_cleared.push_back(pair.first);\n\n  for (const auto node : nodes_elem_sides_to_be_cleared)\n  {\n    bnd_info.remove_node(node, _moving_boundary_id);\n    // std::cout << \"Removed old boundary node: Node ID \" << node->id() << std::endl;\n  }\n\n    /* Reconstruct a new nodeset from the updated sideset */\n  // std::set<const Node *> boundary_nodes;\n  for (const auto & [elem, side_bnd] : elem_side_bnd_ids)\n  {\n    auto side = side_bnd.first;\n    auto boundary_id = side_bnd.second;\n    if (boundary_id == _moving_boundary_id)\n    {\n      auto nodes = elem->nodes_on_side(side);\n      for (auto node : nodes)\n        boundary_nodes.insert(&(elem->node_ref(node)));\n    }\n  }\n\n  // Add new boundary nodes\n  for (const auto node : boundary_nodes)\n  {\n    bnd_info.add_node(node, _moving_boundary_id);\n    // std::cout << \"Added new boundary node: Node ID \" << node->id() << std::endl;\n  }\n\n  std::cout << \"Boundary nodes updated.\" << std::endl;\n\n  // Ensure synchronization\n  // synchronizeBoundaryInfo(mesh);\n}\n\n\nvoid\nElementSubdomainModifier::updateComplementBoundaryInfo(\n    MooseMesh & mesh, const std::vector<const Elem *> & moved_elems)\n{\n\n}\n\nvoid\nElementSubdomainModifier::synchronizeBoundaryInfo(MooseMesh & mesh)\n{\n  // std::cout << \"Pushing boundary side info...\" << std::endl;\n  pushBoundarySideInfo(mesh);\n  // std::cout << \"Boundary side info pushed.\" << std::endl;\n\n  // std::cout << \"Pushing boundary node info...\" << std::endl;\n  pushBoundaryNodeInfo(mesh);\n  // std::cout << \"Boundary node info pushed.\" << std::endl;\n\n  // // std::cout << \"Synchronizing side ids...\" << std::endl;\n  mesh.getMesh().get_boundary_info().parallel_sync_side_ids();\n  // // std::cout << \"Side ids synchronized.\" << std::endl;\n\n  // // std::cout << \"Synchronizing node ids...\" << std::endl;\n  mesh.getMesh().get_boundary_info().parallel_sync_node_ids();\n\n  std::cout << \"SynchronizeBoundaryInfo is done.\" << std::endl;\n\n  // std::cout << \"Updating mesh...\" << std::endl;\n  // mesh.update();\n  // std::cout << \"Mesh updated.\" << std::endl;\n}\n\n\nvoid\nElementSubdomainModifier::pushBoundarySideInfo(MooseMesh & moose_mesh)\n{\n  auto & mesh = moose_mesh.getMesh();\n  auto elem_remove_functor =\n      [&mesh, this](processor_id_type,\n                    const std::vector<std::pair<dof_id_type, unsigned short int>> & received_elem)\n  {\n    // remove the side\n    for (const auto & pr : received_elem)\n      mesh.get_boundary_info().remove_side(\n          mesh.elem_ptr(pr.first), pr.second, _complement_moving_boundary_id);\n  };\n\n  // We create a tempalte functor to add with custom boundary IDs\n  auto elem_add_functor_with_boundary_id =\n      [&mesh](const std::vector<std::pair<dof_id_type, unsigned short int>> & received_elem,\n              const BoundaryID boundary_id)\n  {\n    // add the side\n    for (const auto & pr : received_elem)\n      mesh.get_boundary_info().add_side(mesh.elem_ptr(pr.first), pr.second, boundary_id);\n  };\n\n  // Then we use it with the regular and the complement boundary id\n  auto complement_elem_add_functor =\n      [this, elem_add_functor_with_boundary_id](\n          processor_id_type,\n          const std::vector<std::pair<dof_id_type, unsigned short int>> & received_elem)\n  { elem_add_functor_with_boundary_id(received_elem, _complement_moving_boundary_id); };\n\n  auto elem_add_functor =\n      [this, elem_add_functor_with_boundary_id](\n          processor_id_type,\n          const std::vector<std::pair<dof_id_type, unsigned short int>> & received_elem)\n  { elem_add_functor_with_boundary_id(received_elem, _moving_boundary_id); };\n\n  // Push/pull the ghost cell sides for the regular and complement boundaries\n  Parallel::push_parallel_vector_data(\n      mesh.get_boundary_info().comm(), _ghost_sides_to_add, elem_add_functor);\n  Parallel::push_parallel_vector_data(\n      mesh.get_boundary_info().comm(), _complement_ghost_sides_to_remove, elem_remove_functor);\n  if (_complement_moving_boundary_specified)\n    Parallel::push_parallel_vector_data(mesh.get_boundary_info().comm(),\n                                        _complement_ghost_sides_to_add,\n                                        complement_elem_add_functor);\n}\n\nvoid\nElementSubdomainModifier::pushBoundaryNodeInfo(MooseMesh & moose_mesh)\n{\n  auto & mesh = moose_mesh.getMesh();\n  auto node_remove_functor =\n      [&mesh, this](processor_id_type, const std::vector<dof_id_type> & received_nodes)\n  {\n    for (const auto & pr : received_nodes)\n    {\n      if (_moving_boundary_specified)\n        mesh.get_boundary_info().remove_node(mesh.node_ptr(pr), _moving_boundary_id);\n      if (_complement_moving_boundary_specified)\n        mesh.get_boundary_info().remove_node(mesh.node_ptr(pr), _complement_moving_boundary_id);\n    }\n  };\n\n  Parallel::push_parallel_vector_data(\n      mesh.get_boundary_info().comm(), _complement_ghost_nodes_to_remove, node_remove_functor);\n}\n\n\n\nvoid\nElementSubdomainModifier::buildMovedElemsRange()\n{\n  // Clear the object first\n  _moved_elems_range.reset();\n\n  // Make some fake element iterators defining this vector of elements\n  Elem * const * elem_itr_begin = const_cast<Elem * const *>(_moved_elems.data());\n  Elem * const * elem_itr_end = elem_itr_begin + _moved_elems.size();\n\n  const auto elems_begin = MeshBase::const_element_iterator(\n      elem_itr_begin, elem_itr_end, Predicates::NotNull<Elem * const *>());\n  const auto elems_end = MeshBase::const_element_iterator(\n      elem_itr_end, elem_itr_end, Predicates::NotNull<Elem * const *>());\n\n  _moved_elems_range = std::make_unique<ConstElemRange>(elems_begin, elems_end);\n}\n\nvoid\nElementSubdomainModifier::buildMovedBndNodesRange()\n{\n  // This is more involved than building the element range, because not all moved nodes are\n  // necessarily associated with a boundary initial condition. We need to first build a set of\n  // boundary nodes. Clear the object first:\n  _moved_bnd_nodes_range.reset();\n\n  // create a vector of the newly activated nodes\n  std::set<const BndNode *> moved_bnd_nodes_set;\n  for (auto & bnd_node : *_mesh.getBoundaryNodeRange())\n  {\n    dof_id_type bnd_node_id = bnd_node->_node->id();\n    if (_moved_nodes.find(bnd_node_id) != _moved_nodes.end())\n      moved_bnd_nodes_set.insert(bnd_node);\n  }\n\n  // Dump all the boundary nodes into a vector so that we can build a range out of it\n  std::vector<const BndNode *> moved_bnd_nodes;\n  moved_bnd_nodes.assign(moved_bnd_nodes_set.begin(), moved_bnd_nodes_set.end());\n\n  // Make some fake node iterators defining this vector of nodes\n  BndNode * const * bnd_node_itr_begin = const_cast<BndNode * const *>(moved_bnd_nodes.data());\n  BndNode * const * bnd_node_itr_end = bnd_node_itr_begin + moved_bnd_nodes.size();\n\n  const auto bnd_nodes_begin = MooseMesh::const_bnd_node_iterator(\n      bnd_node_itr_begin, bnd_node_itr_end, Predicates::NotNull<const BndNode * const *>());\n  const auto bnd_nodes_end = MooseMesh::const_bnd_node_iterator(\n      bnd_node_itr_end, bnd_node_itr_end, Predicates::NotNull<const BndNode * const *>());\n\n  _moved_bnd_nodes_range = std::make_unique<ConstBndNodeRange>(bnd_nodes_begin, bnd_nodes_end);\n}\n\nvoid\nElementSubdomainModifier::setOldAndOlderSolutionsForMovedNodes(SystemBase & sys)\n{\n\n}\n\nvoid\nElementSubdomainModifier::setAncestorsSubdomainIDs(const SubdomainID & subdomain_id,\n                                                   const dof_id_type & elem_id)\n{\n\n}\n\n\nif I'm not mistaken @hugary1995 is the one who created this class, right?\nI'm also tagging: @GiudGiud since you know the general framework pretty well.\nThank you very much!\nKind regards,\nTrai",
          "url": "https://github.com/idaholab/moose/discussions/27857",
          "updatedAt": "2024-10-14T02:51:06Z",
          "publishedAt": "2024-06-11T05:40:06Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Question 1:\nYou could try using Controls to start the BC as inactive, I am not sure it would work though\nI think we need a add_sideset_id parameter in the Mesh, just like we have for subdomains",
                  "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9742589",
                  "updatedAt": "2024-06-11T18:46:39Z",
                  "publishedAt": "2024-06-11T18:46:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Question 2: this seems like a bug. Let's make a minimal example and fix this",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9742606",
                          "updatedAt": "2024-06-11T18:47:49Z",
                          "publishedAt": "2024-06-11T18:47:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Question3: could you check that you did not over-comment out code by simply using the native subdomain modifier but making it move element from one subdomain to itself ?\nIf it checks out then this seems like a parallel bug and we'd want a minimal input there too",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9742651",
                          "updatedAt": "2024-06-11T18:52:48Z",
                          "publishedAt": "2024-06-11T18:52:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @GiudGiud\nif we can solve question2, I think can find the way to work around question3\nnot sure how the boundary name keeps over-written itself, it should come from the initialisation, esp setMovingBoundaryName, here:\nElementSubdomainModifier::ElementSubdomainModifier(const InputParameters & parameters)\n  : ElementUserObject(parameters),\n    _displaced_problem(_fe_problem.getDisplacedProblem().get()),\n    _apply_ic(getParam<bool>(\"apply_initial_conditions\")),\n    _moving_boundary_specified(isParamValid(\"moving_boundary_name\")),\n    _complement_moving_boundary_specified(isParamValid(\"complement_moving_boundary_name\")),\n    _moving_boundary_id(-1)\n{\n}\n\nvoid\nElementSubdomainModifier::initialSetup()\n{\n  if (_moving_boundary_specified)\n  {\n    _moving_boundary_name = getParam<BoundaryName>(\"moving_boundary_name\");\n    setMovingBoundaryName(_mesh);\n    if (_displaced_problem)\n      setMovingBoundaryName(_displaced_problem->mesh());\n  }\n\n  if (_complement_moving_boundary_specified)\n  {\n    _complement_moving_boundary_name = getParam<BoundaryName>(\"complement_moving_boundary_name\");\n    setComplementMovingBoundaryName(_mesh);\n    if (_displaced_problem)\n      setComplementMovingBoundaryName(_displaced_problem->mesh());\n  }\n}\n\nvoid\nElementSubdomainModifier::setMovingBoundaryName(MooseMesh & mesh)\n{\n  // We only need one boundary to modify. Create a dummy vector just to use the API.\n  const std::vector<BoundaryID> boundary_ids = mesh.getBoundaryIDs({{_moving_boundary_name}}, true);\n  mooseAssert(boundary_ids.size() == 1, \"Expect exactly one boundary ID.\");\n  _moving_boundary_id = boundary_ids[0];\n\n  \n  mesh.setBoundaryName(_moving_boundary_id, _moving_boundary_name);\n  mesh.getMesh().get_boundary_info().sideset_name(_moving_boundary_id) = _moving_boundary_name;\n  mesh.getMesh().get_boundary_info().nodeset_name(_moving_boundary_id) = _moving_boundary_name;\n}\n\nbut i'm still not sure how to fix this? do you have any suggestion? I tried this on simpler mesh, same thing happens",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9746284",
                          "updatedAt": "2024-06-12T04:34:17Z",
                          "publishedAt": "2024-06-12T04:34:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "okay this is easier than i thought\n  params.addParam<Real>(\"boundary_ID\",-1,\"Boundary ID to modify\");\n  return params;\n}\n\nElementSubdomainModifier::ElementSubdomainModifier(const InputParameters & parameters)\n  : ElementUserObject(parameters),\n    _displaced_problem(_fe_problem.getDisplacedProblem().get()),\n    _apply_ic(getParam<bool>(\"apply_initial_conditions\")),\n    _moving_boundary_specified(isParamValid(\"moving_boundary_name\")),\n    _complement_moving_boundary_specified(isParamValid(\"complement_moving_boundary_name\")),\n    _moving_boundary_id(getParam<Real>(\"boundary_ID\"))\n{\n}\n\n\nvoid\nElementSubdomainModifier::setMovingBoundaryName(MooseMesh & mesh)\n{\n  // We only need one boundary to modify. Create a dummy vector just to use the API.\n  const std::vector<BoundaryID> boundary_ids = mesh.getBoundaryIDs({{_moving_boundary_name}}, true);\n  mooseAssert(boundary_ids.size() == 1, \"Expect exactly one boundary ID.\");\n  // _moving_boundary_id = boundary_ids[0];\n  mesh.setBoundaryName(_moving_boundary_id, _moving_boundary_name);\n  mesh.getMesh().get_boundary_info().sideset_name(_moving_boundary_id) = _moving_boundary_name;\n  mesh.getMesh().get_boundary_info().nodeset_name(_moving_boundary_id) = _moving_boundary_name;\n}\n\nI will move on to Q3 and revisit Q1 later, Q1 is more like MOOSE framework kinda problem",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9746489",
                          "updatedAt": "2024-06-12T04:47:58Z",
                          "publishedAt": "2024-06-12T04:47:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "since i can produce multiple surfaces, i can just use the original version of the class to produce multiple surfaces, Q3 is done.\nNow back to Q1, where i have to find the way to apply BC to these generated surfaces",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9747009",
                          "updatedAt": "2024-06-12T05:29:28Z",
                          "publishedAt": "2024-06-12T05:28:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @GiudGiud,  RE: Question1: adding control delay the enable_objects still doesn't work, not sure what to do at this point. if I could skip the BC checking during the initialisation would be nice.\n[Controls]\n  [controls0001]\n    type = ConditionalFunctionEnableControl\n    enable_objects = 'BCs::bc_walls_west_2'\n    # disable_objects = 'BCs::bc_walls_west_2'\n    conditional_function = 'if(t>0.1 ,1, 0)'\n    execute_on = 'INITIAL TIMESTEP_BEGIN'\n  []\n[]  \n\n  [./bc_walls_west_2]\n    type = PorousFlowPiecewiseLinearSinkBEH\n    variable = porepressure\n    boundary = 'moving_boundary_tet moving_boundary_wedge'\n    pt_vals = '0 1e10'\n    multipliers = '0 1e10'\n    flux_function =  0.1\n    charElLength = minL\n    check_state = true\n    state = state\n    use_mobility = true\n    fluid_phase = 0\n    save_in = flux_west_wall\n  [../]",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9749419",
                          "updatedAt": "2024-06-12T09:24:28Z",
                          "publishedAt": "2024-06-12T09:24:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "RE: Question1: adding control delay the enable_objects still doesn't work, not sure what to do at this point.\n\nok I m not surprised.You can either use a restart setup or we can look into adding the add_sideset_id parameter to the Mesh block",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9751356",
                          "updatedAt": "2024-06-12T12:46:00Z",
                          "publishedAt": "2024-06-12T12:46:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "restart wouldnt be ideal\nI tried add_sideset_id, also didnt work, i think we need to have something like a container sideset by name instead of ID, do we have any of this? or do i have to do this in mesh level (ie modify Abaqus mesh file)?",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9751679",
                          "updatedAt": "2024-06-12T13:12:05Z",
                          "publishedAt": "2024-06-12T13:12:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I tried add_sideset_id, also didnt work,\n\nhow did you try? did you implement it? it's not implemented",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9752971",
                          "updatedAt": "2024-06-12T14:49:55Z",
                          "publishedAt": "2024-06-12T14:49:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@Traiwit I am looking at doing the first item.\nCan you please confirm you need sideset and not nodeset?\nI ll add support for sideset names too.\nI am still interested in a MWE showing the boundary issues in parallel btw",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-9790144",
                          "updatedAt": "2024-06-17T05:01:09Z",
                          "publishedAt": "2024-06-17T04:52:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Traiwit"
                  },
                  "bodyText": "Hi @GiudGiud\ni'm revisiting this again, at this point I still cannot overcome the QUESTION1\nI can create an empty sideset/nodeset (via Abaqus mesh .inp file) but MOOSE still doesn't see it unless those sideset/nodeset have something inside it.\n*** ERROR ***\n/home/moose/RD2024GNKT/R02HR02/GNKT2020066_R02HR02_Q02H_attempt4_surfgen_ptshift.i:749: (BCs/bc_drain_tet/boundary):\n    the following side sets (ids) do not exist on the mesh: moving_boundary_tet (30)\n    \n    MOOSE distinguishes between \"node sets\" and \"side sets\" depending on whether \n    you are using \"Nodal\" or \"Integrated\" BCs respectively. Node sets corresponding \n    to your side sets are constructed for you by default.\n    \n    Try setting \"Mesh/construct_side_list_from_node_list=true\" if you see this error.\n    Note: If you are running with adaptivity you should prefer using side sets.\n\nMy simulation will generate these surfaces later during the TIMESTEP_BEGIN , just wonder how do i even skip this during initialisation.",
                  "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-10931339",
                  "updatedAt": "2024-10-14T00:28:25Z",
                  "publishedAt": "2024-10-14T00:28:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so declaring them in the Mesh block does not work?",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-10931358",
                          "updatedAt": "2024-10-14T00:31:51Z",
                          "publishedAt": "2024-10-14T00:31:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "by setting add_sideset_ids or add_sideset_names",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-10931361",
                          "updatedAt": "2024-10-14T00:32:30Z",
                          "publishedAt": "2024-10-14T00:32:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @GiudGiud this works!\nI didnt aware of this add_sideset_ids or add_sideset_names since last time i mentioned here, and we couldnt/didnt update our main MOOSE for almost half a year.\nFor some weird reason, when we update our MOOSE it changed the way of one of the Kernels works, we run test on PorousFlow module and they are all passed which is super weird. #27743\nanyways, this problem is solved, we might need to revisit #27743 soon\nThank you!\nTraiwit",
                          "url": "https://github.com/idaholab/moose/discussions/27857#discussioncomment-10931845",
                          "updatedAt": "2024-10-14T02:51:07Z",
                          "publishedAt": "2024-10-14T02:51:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "A 'ExampleConvection' is not a registered object.",
          "author": {
            "login": "engrmessi"
          },
          "bodyText": "I tried to run the ex02 file with sbatch file , then i got this error. ex01 file ran successfully with sbatch. please how do i fix this?",
          "url": "https://github.com/idaholab/moose/discussions/23838",
          "updatedAt": "2024-10-13T02:00:34Z",
          "publishedAt": "2023-03-24T21:16:12Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyou\u2019re probably not using the executable for example 2\nthe code (example convection object) is specific to each example, these objects are not used anywhere else",
                  "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-5423043",
                  "updatedAt": "2023-03-24T21:27:29Z",
                  "publishedAt": "2023-03-24T21:27:28Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "engrmessi"
                          },
                          "bodyText": "I used the file ex02.i . is this the file you mean?",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-5423093",
                          "updatedAt": "2023-03-24T21:36:11Z",
                          "publishedAt": "2023-03-24T21:36:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It's not just the input file, there's code for the ExampleConvection object in the moose/examples/ex02_kernel folder",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-5423423",
                          "updatedAt": "2023-03-24T22:37:31Z",
                          "publishedAt": "2023-03-24T22:37:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "libinbabu1991"
                          },
                          "bodyText": "Hello,\nI also got the same error:\nA 'ExampleConvection' is not a registered object.\nI edited the parameter name as instructed based on my app name cat1\nregisterMooseObject(\"cat1App\", ExampleConvection);\nStill getting the same error. Please advise how to run the example 2 correctly.\n-Libin",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-10923639",
                          "updatedAt": "2024-10-12T16:25:56Z",
                          "publishedAt": "2024-10-12T16:25:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nonce you registered, did you recompile?\nand are you using the executable in the folder that you compiled in?",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-10924023",
                          "updatedAt": "2024-10-12T17:46:17Z",
                          "publishedAt": "2024-10-12T17:46:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "libinbabu1991"
                          },
                          "bodyText": "Hi,\nI didn't quite get what you mean by register. May be this is the issue?\nAs a new user, I need to familiarize with the process. Let me explain what has been done so far.\nI copied only the ex02, mug.e amd the kernal from the example folder to my problem folder.\nI also went to example problem folder in the Moose folder and changed the name to src/base/cat1App.  (cat1 is my app name)\nWhen I run this in Moose, I get the same error message:\nA 'ExampleConvection' is not a registered object.",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-10924149",
                          "updatedAt": "2024-10-12T18:08:36Z",
                          "publishedAt": "2024-10-12T18:08:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "register is the \"register\" call at the top of the source of ExampleConvection\nDid you recompile after changing anything in the source code?",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-10924164",
                          "updatedAt": "2024-10-12T18:11:39Z",
                          "publishedAt": "2024-10-12T18:11:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "libinbabu1991"
                          },
                          "bodyText": "If you mean changing the ExampleApp to Moose app in the below register parameter, yes.\nregisterMooseObject(\"MooseApp\", ExampleConvection);\nYes, I recompiled as well.",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-10924287",
                          "updatedAt": "2024-10-12T18:29:55Z",
                          "publishedAt": "2024-10-12T18:29:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you paste the compilation log here please?\nand then the command you run in the directory, where you hit the error",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-10924377",
                          "updatedAt": "2024-10-12T18:49:24Z",
                          "publishedAt": "2024-10-12T18:49:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "libinbabu1991"
                          },
                          "bodyText": "Hi,\nI created a new app called dog. I could not run the example 2 from this new folder initially because of the error that I have mentioned above.\nHowever it is working now after making some changes as below. Not sure if they are the right steps for using in the next examples given in the Moose package.\n\nCopied the ex02 and mug.e from the moose\\examples\\ex02_kernel to dog folder\nCopied the Example.c from the moose\\examples\\ex02_kernel\\src\\kernels to dog folder\nCopied the Example.h moose\\examples\\ex02_kernel\\include\\kernels to dog\\include\nEdited the Example.c content from registerMooseObject(\"ExampleApp\", ExampleConvection); to registerMooseObject(\"dogApp\", ExampleConvection);",
                          "url": "https://github.com/idaholab/moose/discussions/23838#discussioncomment-10925725",
                          "updatedAt": "2024-10-13T02:04:01Z",
                          "publishedAt": "2024-10-13T02:00:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Anisotropy in phase field",
          "author": {
            "login": "d5sneha"
          },
          "bodyText": "i'm trying to modify the materials block in raccoon for anisotropic materials, modifying the smalldeformationIsotropicElasticity but it is giving me the error while running\n*** ERROR ***\nA 'snehaIsotropicElasticity' is not a registered object.\n\nIf you are trying to find this object in a dynamically loaded library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\n\nI highly appreciate any help i can get.",
          "url": "https://github.com/idaholab/moose/discussions/28719",
          "updatedAt": "2024-10-12T15:25:22Z",
          "publishedAt": "2024-09-27T07:02:17Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDid you create this object?\nIf so:\n\nhow did you register it? (at the top of the source file)\nis this in an app? or are you working inside a module?\ndid you recompile the code after creating the object?\nwhat executable are you using?",
                  "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10776036",
                  "updatedAt": "2024-09-27T13:40:11Z",
                  "publishedAt": "2024-09-27T13:40:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "d5sneha"
                          },
                          "bodyText": "yes, i am working in raccoon and i have created it in materials inside raccoon and i haven't recompiled yet as i don't know how i should proceed.",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10789448",
                          "updatedAt": "2024-09-29T14:16:15Z",
                          "publishedAt": "2024-09-29T14:16:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It will not be registered until you recompile.\nWhen you compile you may get errors if there are mistakes in the code\nTo recompile you will need to go in racoon/ using the cd command, then type \"make\".\nYou can use \"make -j6\" if you have 6 processors on your machine for example",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10789702",
                          "updatedAt": "2024-09-29T15:11:42Z",
                          "publishedAt": "2024-09-29T15:11:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "d5sneha"
                          },
                          "bodyText": "this is the error i am getting on recompilation.\n(moose) snehad@ubuntu:~/projects/raccoon$ make -j 2\nmake: *** No rule to make target '/home/snehad/projects/raccoon/include/materials/small_deformation_models/snehaIsotropicElasticity', needed by '/home/snehad/projects/raccoon/build/header_symlinks/snehaIsotropicElasticity'.  Stop.\nmake: *** Waiting for unfinished jobs....",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10789806",
                          "updatedAt": "2024-10-01T13:22:46Z",
                          "publishedAt": "2024-09-29T15:31:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "d5sneha"
                          },
                          "bodyText": "i want to apply phase field fracture method for anisotropic materials, is there any other way to solve anisotropy in raccoon?\nbecause in materials block i was using SmalldeformationIsotropicElasticity for iostropic problems, but now for anisotropic case i couldn't find anything. And in SmalldeformationIsotropicElasticity the Hooke's law is defined for isotropic case only.\n\"SmalldeformationIsotopicElasticity'' file\n//* This file is part of the RACCOON application\n//* being developed at Dolbow lab at Duke University\n//* http://dolbow.pratt.duke.edu\n\n#include \"SmallDeformationIsotropicElasticity.h\"\n#include \"RaccoonUtils.h\"\n\nregisterMooseObject(\"raccoonApp\", SmallDeformationIsotropicElasticity);\n\nInputParameters\nSmallDeformationIsotropicElasticity::validParams()\n{\n InputParameters params = SmallDeformationElasticityModel::validParams();\n params.addClassDescription(\"Isotropic elasticity under small strain asumptions.\");\n\n params.addRequiredParam<MaterialPropertyName>(\"bulk_modulus\", \"The bulk modulus $K$\");\n params.addRequiredParam<MaterialPropertyName>(\"shear_modulus\", \"The shear modulus $G$\");\n\n params.addRequiredCoupledVar(\"phase_field\", \"Name of the phase-field (damage) variable\");\n params.addParam<MaterialPropertyName>(\n     \"strain_energy_density\",\n     \"psie\",\n     \"Name of the strain energy density computed by this material model\");\n params.addParam<MaterialPropertyName>(\"degradation_function\", \"g\", \"The degradation function\");\n params.addParam<MooseEnum>(\n     \"decomposition\", MooseEnum(\"NONE SPECTRAL VOLDEV\", \"NONE\"), \"The decomposition method\");\n\n return params;\n}\n\nSmallDeformationIsotropicElasticity::SmallDeformationIsotropicElasticity(\n   const InputParameters & parameters)\n : SmallDeformationElasticityModel(parameters),\n   DerivativeMaterialPropertyNameInterface(),\n   _K(getADMaterialPropertyByName<Real>(prependBaseName(\"bulk_modulus\", true))),\n   _G(getADMaterialPropertyByName<Real>(prependBaseName(\"shear_modulus\", true))),\n\n   _d_name(getVar(\"phase_field\", 0)->name()),\n\n   // The strain energy density and its derivatives\n   _psie_name(prependBaseName(\"strain_energy_density\", true)),\n   _psie(declareADProperty<Real>(_psie_name)),\n   _psie_active(declareADProperty<Real>(_psie_name + \"_active\")),\n   _dpsie_dd(declareADProperty<Real>(derivativePropertyName(_psie_name, {_d_name}))),\n\n   // The degradation function and its derivatives\n   _g_name(prependBaseName(\"degradation_function\", true)),\n   _g(getADMaterialProperty<Real>(_g_name)),\n   _dg_dd(getADMaterialProperty<Real>(derivativePropertyName(_g_name, {_d_name}))),\n\n   _decomposition(getParam<MooseEnum>(\"decomposition\").getEnum<Decomposition>())\n{\n}\n\nADRankTwoTensor\nSmallDeformationIsotropicElasticity::computeStress(const ADRankTwoTensor & strain)\n{\n ADRankTwoTensor stress;\n\n if (_decomposition == Decomposition::none)\n   stress = computeStressNoDecomposition(strain);\n else if (_decomposition == Decomposition::spectral)\n   stress = computeStressSpectralDecomposition(strain);\n else if (_decomposition == Decomposition::voldev)\n   stress = computeStressVolDevDecomposition(strain);\n else\n   paramError(\"decomposition\", \"Unsupported decomposition type.\");\n\n return stress;\n}\n\nADRankTwoTensor\nSmallDeformationIsotropicElasticity::computeStressNoDecomposition(const ADRankTwoTensor & strain)\n{\n const ADRankTwoTensor I2(ADRankTwoTensor::initIdentity);\n ADRankTwoTensor stress_intact = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n ADRankTwoTensor stress = _g[_qp] * stress_intact;\n\n _psie_active[_qp] = 0.5 * stress_intact.doubleContraction(strain);\n _psie[_qp] = _g[_qp] * _psie_active[_qp];\n _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n\n return stress;\n}\n\nADRankTwoTensor\nSmallDeformationIsotropicElasticity::computeStressSpectralDecomposition(\n   const ADRankTwoTensor & strain)\n{\n const ADReal lambda = _K[_qp] - 2 * _G[_qp] / LIBMESH_DIM;\n const ADRankTwoTensor I2(ADRankTwoTensor::initIdentity);\n ADReal strain_tr = strain.trace();\n ADReal strain_tr_pos = RaccoonUtils::Macaulay(strain_tr);\n\n // Spectral decomposition\n ADRankTwoTensor strain_pos = RaccoonUtils::spectralDecomposition(strain);\n\n // Stress\n ADRankTwoTensor stress_intact = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n ADRankTwoTensor stress_pos = lambda * strain_tr_pos * I2 + 2 * _G[_qp] * strain_pos;\n ADRankTwoTensor stress_neg = stress_intact - stress_pos;\n ADRankTwoTensor stress = _g[_qp] * stress_pos + stress_neg;\n\n // Strain energy density\n ADReal psie_intact =\n     0.5 * lambda * strain_tr * strain_tr + _G[_qp] * strain.doubleContraction(strain);\n _psie_active[_qp] = 0.5 * lambda * strain_tr_pos * strain_tr_pos +\n                     _G[_qp] * strain_pos.doubleContraction(strain_pos);\n ADReal psie_inactive = psie_intact - _psie_active[_qp];\n _psie[_qp] = _g[_qp] * _psie_active[_qp] + psie_inactive;\n _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n\n return stress;\n}\n\nADRankTwoTensor\nSmallDeformationIsotropicElasticity::computeStressVolDevDecomposition(\n   const ADRankTwoTensor & strain)\n{\n const ADRankTwoTensor I2(ADRankTwoTensor::initIdentity);\n\n // Volumetric-deviatoric decomposition\n ADReal strain_tr = strain.trace();\n ADReal strain_tr_pos = RaccoonUtils::Macaulay(strain_tr);\n ADReal strain_tr_neg = strain_tr - strain_tr_pos;\n ADRankTwoTensor strain_dev = strain.deviatoric();\n\n // Stress\n ADRankTwoTensor stress_intact = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n ADRankTwoTensor stress_neg = _K[_qp] * strain_tr_neg * I2;\n ADRankTwoTensor stress_pos = stress_intact - stress_neg;\n ADRankTwoTensor stress = _g[_qp] * stress_pos + stress_neg;\n\n // Strain energy density\n ADReal psie_intact =\n     0.5 * _K[_qp] * strain_tr * strain_tr + _G[_qp] * strain_dev.doubleContraction(strain_dev);\n ADReal psie_inactive = 0.5 * _K[_qp] * strain_tr_neg * strain_tr_neg;\n _psie_active[_qp] = psie_intact - psie_inactive;\n _psie[_qp] = _g[_qp] * _psie_active[_qp] + psie_inactive;\n _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n\n return stress;\n}\n\nplease help me on how i can modify it for anisotropic material?",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10789841",
                          "updatedAt": "2024-10-01T13:22:21Z",
                          "publishedAt": "2024-09-29T15:38:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Can you check the file extensions? Should be .C for source (capital C) and .h for a header",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10790077",
                          "updatedAt": "2024-09-29T16:13:34Z",
                          "publishedAt": "2024-09-29T16:13:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think @hugary1995 is more aware of the needs here (for implementing anisotropy in raccoon)\nI expect you will want to make a few material properties generate RealVectorValue instead of Real (and higher order tensors for tensor properties) to model the directional values. But there's probably more to this",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10791326",
                          "updatedAt": "2024-09-29T20:36:44Z",
                          "publishedAt": "2024-09-29T20:36:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "d5sneha"
                          },
                          "bodyText": "@GiudGiud  yes i have checked the file extensions as .C and .h they were correct.",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10809100",
                          "updatedAt": "2024-10-01T13:17:34Z",
                          "publishedAt": "2024-10-01T13:17:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "is it compiling fine now?\nmake is listing the file without an extension in its error message you posted\n/home/snehad/projects/raccoon/include/materials/small_deformation_models/snehaIsotropicElasticity",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10809164",
                          "updatedAt": "2024-10-01T13:23:22Z",
                          "publishedAt": "2024-10-01T13:23:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "d5sneha"
                          },
                          "bodyText": "it is still giving a lot of errors.\n(moose) snehad@ubuntu:~/projects/raccoon$ make -j 2\nCompiling C++ (in opt mode) /home/snehad/projects/raccoon/build/unity_src/materials_Unity.C...\n\nIn file included from /home/snehad/projects/raccoon/moose/framework/build/header_symlinks/MooseObject.h:17,\n                 from /home/snehad/projects/raccoon/moose/framework/build/header_symlinks/MaterialBase.h:13,\n                 from /home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Material.h:13,\n                 from /home/snehad/projects/raccoon/build/header_symlinks/ArrheniusLaw.h:7,\n                 from /home/snehad/projects/raccoon/src/materials/ArrheniusLaw.C:5,\n                 from /home/snehad/projects/raccoon/build/unity_src/materials_Unity.C:2:\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:8:35: error: 'SmallDeformationIsotropicElasticity' was not declared in this scope\n    8 | registerMooseObject(\"raccoonApp\", SmallDeformationIsotropicElasticity);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Registry.h:43:21: note: in definition of macro 'registerMooseObject'\n   43 |       Registry::add<classname>({app, #classname, \"\", \"\", __FILE__, __LINE__, \"\", \"\"})\n      |                     ^~~~~~~~~\n/home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Registry.h:43:31: error: no matching function for call to 'Registry::add<<expression error> >(<brace-enclosed initializer list>)'\n   43 |       Registry::add<classname>({app, #classname, \"\", \"\", __FILE__, __LINE__, \"\", \"\"})\n      |       ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:8:1: note: in expansion of macro 'registerMooseObject'\n    8 | registerMooseObject(\"raccoonApp\", SmallDeformationIsotropicElasticity);\n      | ^~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Registry.h:165:15: note: candidate: 'template<class T> static char Registry::add(const RegistryEntryData&)'\n  165 |   static char add(const RegistryEntryData & base_info)\n      |               ^~~\n/home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Registry.h:165:15: note:   template argument deduction/substitution failed:\n/home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Registry.h:43:31: error: template argument 1 is invalid\n   43 |       Registry::add<classname>({app, #classname, \"\", \"\", __FILE__, __LINE__, \"\", \"\"})\n      |       ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:8:1: note: in expansion of macro 'registerMooseObject'\n    8 | registerMooseObject(\"raccoonApp\", SmallDeformationIsotropicElasticity);\n      | ^~~~~~~~~~~~~~~~~~~\nIn file included from /home/snehad/projects/raccoon/build/unity_src/materials_Unity.C:36:\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:11:1: error: 'SmallDeformationIsotropicElasticity' has not been declared\n   11 | SmallDeformationIsotropicElasticity::validParams()\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:31:1: error: 'SmallDeformationIsotropicElasticity' does not name a type\n   31 | SmallDeformationIsotropicElasticity::SmallDeformationIsotropicElasticity(\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:44:83: error: expected unqualified-id before ')' token\n   44 |     _dpsie_dd(declareADProperty<Real>(derivativePropertyName(_psie_name, {_d_name}))),\n      |                                                                                   ^\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:49:81: error: expected unqualified-id before ')' token\n   49 |     _dg_dd(getADMaterialProperty<Real>(derivativePropertyName(_g_name, {_d_name}))),\n      |                                                                                 ^\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:56:1: error: 'SmallDeformationIsotropicElasticity' has not been declared\n   56 | SmallDeformationIsotropicElasticity::computeStress(const ADRankTwoTensor & strain)\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C: In function 'ADRankTwoTensor computeStress(const ADRankTwoTensor&)':\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:60:7: error: '_decomposition' was not declared in this scope\n   60 |   if (_decomposition == Decomposition::none)\n      |       ^~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:60:25: error: 'Decomposition' has not been declared\n   60 |   if (_decomposition == Decomposition::none)\n      |                         ^~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:61:14: error: 'computeStressNoDecomposition' was not declared in this scope\n   61 |     stress = computeStressNoDecomposition(strain);\n      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:62:30: error: 'Decomposition' has not been declared\n   62 |   else if (_decomposition == Decomposition::spectral)\n      |                              ^~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:63:14: error: 'computeStressSpectralDecomposition' was not declared in this scope\n   63 |     stress = computeStressSpectralDecomposition(strain);\n      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:64:30: error: 'Decomposition' has not been declared\n   64 |   else if (_decomposition == Decomposition::voldev)\n      |                              ^~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:65:14: error: 'computeStressVolDevDecomposition' was not declared in this scope\n   65 |     stress = computeStressVolDevDecomposition(strain);\n      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:67:5: error: 'paramError' was not declared in this scope\n   67 |     paramError(\"decomposition\", \"Unsupported decomposition type.\");\n      |     ^~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C: At global scope:\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:73:1: error: 'SmallDeformationIsotropicElasticity' has not been declared\n   73 | SmallDeformationIsotropicElasticity::computeStressNoDecomposition(const ADRankTwoTensor & strain)\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C: In function 'ADRankTwoTensor computeStressNoDecomposition(const ADRankTwoTensor&)':\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:76:37: error: '_K' was not declared in this scope\n   76 |   ADRankTwoTensor stress_intact_1 = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n      |                                     ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:76:40: error: '_qp' was not declared in this scope\n   76 |   ADRankTwoTensor stress_intact_1 = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n      |                                        ^~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:76:73: error: '_G' was not declared in this scope\n   76 |   ADRankTwoTensor stress_intact_1 = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n      |                                                                         ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:77:28: error: '_g' was not declared in this scope\n   77 |   ADRankTwoTensor stress = _g[_qp] * stress_intact_1;\n      |                            ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:79:3: error: '_psie_active' was not declared in this scope\n   79 |   _psie_active[_qp] = 0.5 * stress_intact_1.doubleContraction(strain);\n      |   ^~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:80:3: error: '_psie' was not declared in this scope\n   80 |   _psie[_qp] = _g[_qp] * _psie_active[_qp];\n      |   ^~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:81:3: error: '_dpsie_dd' was not declared in this scope\n   81 |   _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n      |   ^~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:81:20: error: '_dg_dd' was not declared in this scope\n   81 |   _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n      |                    ^~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C: At global scope:\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:87:1: error: 'SmallDeformationIsotropicElasticity' has not been declared\n   87 | SmallDeformationIsotropicElasticity::computeStressSpectralDecomposition(\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C: In function 'ADRankTwoTensor computeStressSpectralDecomposition(const ADRankTwoTensor&)':\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:90:25: error: '_K' was not declared in this scope\n   90 |   const ADReal lambda = _K[_qp] - 2 * _G[_qp] / LIBMESH_DIM;\n      |                         ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:90:28: error: '_qp' was not declared in this scope\n   90 |   const ADReal lambda = _K[_qp] - 2 * _G[_qp] / LIBMESH_DIM;\n      |                            ^~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:90:39: error: '_G' was not declared in this scope\n   90 |   const ADReal lambda = _K[_qp] - 2 * _G[_qp] / LIBMESH_DIM;\n      |                                       ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:102:28: error: '_g' was not declared in this scope\n  102 |   ADRankTwoTensor stress = _g[_qp] * stress_pos + stress_neg;\n      |                            ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:107:3: error: '_psie_active' was not declared in this scope\n  107 |   _psie_active[_qp] = 0.5 * lambda * strain_tr_pos * strain_tr_pos +\n      |   ^~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:110:3: error: '_psie' was not declared in this scope\n  110 |   _psie[_qp] = _g[_qp] * _psie_active[_qp] + psie_inactive;\n      |   ^~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:111:3: error: '_dpsie_dd' was not declared in this scope\n  111 |   _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n      |   ^~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:111:20: error: '_dg_dd' was not declared in this scope\n  111 |   _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n      |                    ^~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C: At global scope:\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:117:1: error: 'SmallDeformationIsotropicElasticity' has not been declared\n  117 | SmallDeformationIsotropicElasticity::computeStressVolDevDecomposition(\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C: In function 'ADRankTwoTensor computeStressVolDevDecomposition(const ADRankTwoTensor&)':\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:129:35: error: '_K' was not declared in this scope\n  129 |   ADRankTwoTensor stress_intact = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n      |                                   ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:129:38: error: '_qp' was not declared in this scope\n  129 |   ADRankTwoTensor stress_intact = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n      |                                      ^~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:129:71: error: '_G' was not declared in this scope\n  129 |   ADRankTwoTensor stress_intact = _K[_qp] * strain.trace() * I2 + 2 * _G[_qp] * strain.deviatoric();\n      |                                                                       ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:132:28: error: '_g' was not declared in this scope\n  132 |   ADRankTwoTensor stress = _g[_qp] * stress_pos + stress_neg;\n      |                            ^~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:138:3: error: '_psie_active' was not declared in this scope; did you mean 'psie_inactive'?\n  138 |   _psie_active[_qp] = psie_intact - psie_inactive;\n      |   ^~~~~~~~~~~~\n      |   psie_inactive\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:139:3: error: '_psie' was not declared in this scope\n  139 |   _psie[_qp] = _g[_qp] * _psie_active[_qp] + psie_inactive;\n      |   ^~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:140:3: error: '_dpsie_dd' was not declared in this scope\n  140 |   _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n      |   ^~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:140:20: error: '_dg_dd' was not declared in this scope\n  140 |   _dpsie_dd[_qp] = _dg_dd[_qp] * _psie_active[_qp];\n      |                    ^~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C: At global scope:\n/home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Registry.h:42:28: error: 'dummyvar_for_registering_obj_SmallDeformationIsotropicElasticity26' defined but not used [-Werror=unused-variable]\n   42 |   static char combineNames(dummyvar_for_registering_obj_##classname, __COUNTER__) =                \\\n      |                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Registry.h:23:29: note: in definition of macro 'combineNames1'\n   23 | #define combineNames1(X, Y) X##Y\n      |                             ^\n/home/snehad/projects/raccoon/moose/framework/build/header_symlinks/Registry.h:42:15: note: in expansion of macro 'combineNames'\n   42 |   static char combineNames(dummyvar_for_registering_obj_##classname, __COUNTER__) =                \\\n      |               ^~~~~~~~~~~~\n/home/snehad/projects/raccoon/src/materials/small_deformation_models/SmallDeformationIsotropicElasticity.C:8:1: note: in expansion of macro 'registerMooseObject'\n    8 | registerMooseObject(\"raccoonApp\", SmallDeformationIsotropicElasticity);\n      | ^~~~~~~~~~~~~~~~~~~\ncc1plus: all warnings being treated as errors\nmake: *** [/home/snehad/projects/raccoon/moose/framework/build.mk:151: /home/snehad/projects/raccoon/build/unity_src/materials_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10921128",
                          "updatedAt": "2024-10-12T15:24:22Z",
                          "publishedAt": "2024-10-12T06:53:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "d5sneha"
                          },
                          "bodyText": "I think @hugary1995 is more aware of the needs here (for implementing anisotropy in raccoon)\nI expect you will want to make a few material properties generate RealVectorValue instead of Real (and higher order tensors for tensor properties) to model the directional values. But there's probably more to this\n\n@hugary1995 how i implement mode-1 and mode-2 problems for anisotropic materials in RACOON.",
                          "url": "https://github.com/idaholab/moose/discussions/28719#discussioncomment-10921132",
                          "updatedAt": "2024-10-12T06:56:17Z",
                          "publishedAt": "2024-10-12T06:56:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Memory issues with GrandPotentialPlanar example",
          "author": {
            "login": "nwinner"
          },
          "bodyText": "Hello all, I'm new to the MOOSE framework and I'm experimenting with examples for the phase field module to get a feel for things.\nI took the GrandPotentialPlanar.i example, which runs fine, and made some modifications to try and match the parameters provided by in this paper. by Biswas et al.\nI modify the input file to start to work towards the system provided in the paper. (I have questions about that too but I'll save that for another thread unless it comes up in the discussion.). When I modify the initial conditions and the material constants, I am able to get some cases where I get EXIT CODE 9, signalling out-of-memory. This is very strange to me (1) that it is dependent on the input parameters I use, when the mesh doesn't change, and also (2) because the VectorMemoryUsage doesn't show very high memory usage:\nhardware_id,node_utilization,page_faults,physical_mem,total_ram,virtual_mem\n0,0.004812122606905,700,324,2163051,1088\n\nI am running this through docker moose:latest on a compute node with 720GB of RAM and 2TB of disk space. So there shouldn't be any issue unless I'm misundestanding something.\nInput file:\nGrandPotentialPlanar.txt\nOutput log:\noutput.log\nCould I get some assistsance with understanding the problem?",
          "url": "https://github.com/idaholab/moose/discussions/28781",
          "updatedAt": "2024-10-11T21:41:39Z",
          "publishedAt": "2024-10-05T01:23:36Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis runs fine on my machine.\nSIG9 just means SIGKILL. It's not necessarily OOM though that is by far the most likely.\nI dont run out of memory on a much smaller machine. It seems you use 32 processes. Can you try less? Maybe 8 like I did\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10850500",
                  "updatedAt": "2024-10-05T06:52:38Z",
                  "publishedAt": "2024-10-05T06:52:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nwinner"
                  },
                  "bodyText": "When I run the input file using 8 processes, it works. Doesn't this point to some sort of OOM error since we are reducing the memory required for each rank, or does SIG9 have some other meaning related to \"over parallelizing\"?",
                  "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10854136",
                  "updatedAt": "2024-10-05T18:12:49Z",
                  "publishedAt": "2024-10-05T18:12:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "how many CPUs do you have? and how many slots does openmpi(? or mpich) detect?",
                          "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10854220",
                          "updatedAt": "2024-10-05T18:28:43Z",
                          "publishedAt": "2024-10-05T18:28:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nwinner"
                          },
                          "bodyText": "CPUs: 112\nThreads per core: 2\nCore(s) per socket: 28\nSocket: 2",
                          "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10854659",
                          "updatedAt": "2024-10-05T20:17:12Z",
                          "publishedAt": "2024-10-05T20:17:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "seems fine to me.\nif you run with htop, do you see the memory spike with more cores?",
                          "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10854772",
                          "updatedAt": "2024-10-05T20:47:57Z",
                          "publishedAt": "2024-10-05T20:47:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nwinner"
                          },
                          "bodyText": "I don't see any obvious spikes in memory with htop. I can dump the memory per core using VectorMemoryUsage and it looks like ths snippet in my original post.\nI can attach a monitor with psrecord to the first mpi rank using psrecord $(pgrep moose-opt | tail -1) --interval 0.001 --log usage_log.txt and the top of the log looks like this:\n# Elapsed time   CPU (%)     Real (MB)   Virtual (MB)\n       0.000        0.000      304.234     1025.750\n       0.001        0.000      304.234     1025.750\n       0.003        0.000      304.234     1025.750\n       0.004        0.000      304.418     1026.004\n       0.005        0.000      304.418     1026.258\n       0.006        0.000      304.418     1026.258\n       0.007        0.000      304.418     1026.258\n       0.009        0.000      304.418     1026.258\n       0.010      807.300      304.418     1026.258",
                          "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10855493",
                          "updatedAt": "2024-10-06T00:02:51Z",
                          "publishedAt": "2024-10-06T00:02:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "thanks that definitely rules out memory.\nAt what number of MPI processes do you get the error first? Is 8 the largest you can use?",
                          "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10855501",
                          "updatedAt": "2024-10-06T00:04:47Z",
                          "publishedAt": "2024-10-06T00:04:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nwinner"
                          },
                          "bodyText": "Increasing the number of processes and keepting n-threads=1, I can run 24 processes. It seems to fail at similar step each time for a given number of processes:\nProcesses, terminates on\n25,68\n26,58\n28,21\n32,14\nThe time step it terminates on is not 100% consistent, but it does seem to get further as number of processes decreases. Whether it matters I don't know, but for n=26, I would sometimes get exit code 135 instead of 9:\n===================================================================================\n=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\n=   PID 32469 RUNNING AT daa54fcfb23a\n=   EXIT CODE: 135\n=   CLEANING UP REMAINING PROCESSES\n=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES\n===================================================================================\nYOUR APPLICATION TERMINATED WITH THE EXIT STRING: Terminated (signal 15)\nThis typically refers to a problem with your application.\nPlease see the FAQ page for debugging suggestions",
                          "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10855563",
                          "updatedAt": "2024-10-06T00:26:39Z",
                          "publishedAt": "2024-10-06T00:26:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hi @nwinner\nI cannot reproduce this issue locally up to >100 cores.\nIf you want to investigate this further, I will need you to debug this in parallel using these instructions\nhttps://mooseframework.inl.gov/application_development/debugging.html",
                          "url": "https://github.com/idaholab/moose/discussions/28781#discussioncomment-10919480",
                          "updatedAt": "2024-10-11T21:42:13Z",
                          "publishedAt": "2024-10-11T21:41:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Help with using Paraview for visualizing",
          "author": {
            "login": "ColinMG2"
          },
          "bodyText": "I have been trying to use paraview through conda in the Ubuntu terminal to visualize a _in.e file. Here is my error: qt.qpa.xcb: could not connect to display 10.255.255.254:0.0\nqt.qpa.plugin: From 6.5.0, xcb-cursor0 or libxcb-cursor0 is needed to load the Qt xcb platform plugin.\nqt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \"\" even though it was found.\nThis application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\nAvailable platform plugins are: vkkhrdisplay, vnc, xcb, offscreen, minimal, linuxfb, eglfs, minimalegl.\nDoes anyone know how to resolve this issue?",
          "url": "https://github.com/idaholab/moose/discussions/28784",
          "updatedAt": "2024-10-11T16:09:52Z",
          "publishedAt": "2024-10-05T23:28:45Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nFor now you should simply install paraview on the windows side and use that.\nI recall @milljm had some good first steps to add missing packages on the Ubuntu side. I dont recall if that was enough\nI think we recommended installing paraview from the paraview website on the Ubuntu side. This takes care of some missing dependencies in conda\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28784#discussioncomment-10855483",
                  "updatedAt": "2024-10-06T00:00:12Z",
                  "publishedAt": "2024-10-05T23:59:36Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "10.255.255.254:0.0\n\nThis makes me think you are operating within a WSL instance? If you are, there are sometimes additional steps one needs to take to allow Linux GUI apps to connect to the Windows GUI.\nOn top of the things listed on our WSL Instructions, you may find additional tricks to try from this long thread: #22718 (reply in thread).",
                          "url": "https://github.com/idaholab/moose/discussions/28784#discussioncomment-10867782",
                          "updatedAt": "2024-10-07T13:32:02Z",
                          "publishedAt": "2024-10-07T13:32:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ColinMG2"
                          },
                          "bodyText": "Yes I am using WSL. I have been trying to find the additional steps to allow Linux GUI apps to connect to the Windows GUI but I can't seem to find them.",
                          "url": "https://github.com/idaholab/moose/discussions/28784#discussioncomment-10872622",
                          "updatedAt": "2024-10-07T19:56:12Z",
                          "publishedAt": "2024-10-07T19:56:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I would start here: https://learn.microsoft.com/en-us/windows/wsl/tutorials/gui-apps\nAnd see if you can get any of the examples they describe working (like GIMP).",
                          "url": "https://github.com/idaholab/moose/discussions/28784#discussioncomment-10879737",
                          "updatedAt": "2024-10-08T12:44:37Z",
                          "publishedAt": "2024-10-08T12:44:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ColinMG2"
                          },
                          "bodyText": "I was able to get Tilix (a virtual Linux terminal) to work. I am actually able to run moose on there but I still run into the same error message when I try to run the \"paraview\" command on a _in.e or _out.e file.",
                          "url": "https://github.com/idaholab/moose/discussions/28784#discussioncomment-10895980",
                          "updatedAt": "2024-10-09T18:44:11Z",
                          "publishedAt": "2024-10-09T18:44:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ColinMG2"
                          },
                          "bodyText": "I was able to get it to work by running the following:\nsudo apt install xterm\nexport DISPLAY=:1.0\nxterm\nThe output was as follows:\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nxterm is already the newest version (372-1ubuntu1).\n0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.\nxterm: Xt error: Can't open display: :1.0\nBy running export DISPLAY=:0 this fixes the error I got in the output message. I can now run paraview through a conda environment and it will open a Linux GUI for Paraview.",
                          "url": "https://github.com/idaholab/moose/discussions/28784#discussioncomment-10896225",
                          "updatedAt": "2024-10-09T19:08:00Z",
                          "publishedAt": "2024-10-09T19:07:59Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Interesting, usually the IP address is required. I'll mark your post as the answer. Let me know if this does not work for you!",
                          "url": "https://github.com/idaholab/moose/discussions/28784#discussioncomment-10897080",
                          "updatedAt": "2024-10-09T20:51:02Z",
                          "publishedAt": "2024-10-09T20:51:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ColinMG2"
                          },
                          "bodyText": "This link here helped me out with this problem. https://forum.qt.io/topic/132855/qt-qpa-xcb-could-not-connect-to-display-1-0-qt-qpa-plugin-could-not-load-the-qt-platform-plugin-xcb-in-even-though-it-was-found",
                          "url": "https://github.com/idaholab/moose/discussions/28784#discussioncomment-10917265",
                          "updatedAt": "2024-10-11T16:09:53Z",
                          "publishedAt": "2024-10-11T16:09:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Grain Area",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "Hello everyone. I am trying to calculate the precipitate area of my domain using the postprocessor below:\n [./gr1area]\n      type = ElementIntegralVariablePostprocessor\n      variable = eta1\n      execute_on = 'initial timestep_end'\n  [../]\n   [./gr3area]\n      type = ElementIntegralVariablePostprocessor\n      variable = eta3\n      execute_on = 'initial timestep_end'\n  [../]\n\nThe data I get after the simulation does not accurately represent my problem.\nAfter the simulation and analyzing my results. The percentage precipitate area is about 1.6% which is far from the true case. I am expecting precipitate area between 30%-40%.\nAttached is a picture of my domain(last timestep) and my plot for the area fraction. The csv file is also attached.\n\n\nTwo_phase_noload_c11_table.csv",
          "url": "https://github.com/idaholab/moose/discussions/28777",
          "updatedAt": "2024-10-11T15:35:00Z",
          "publishedAt": "2024-10-04T19:59:30Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Adding Action to my app",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nI made a new App (\"Foo\") with the stork script using recent devel and I'm trying to create an Action called MyAction. It's just a placeholder for now. The app compiles fine when with just the MyAction source/header files, but fails when I to register in FooApp.C with registerSyntax(\"MyAction\", \"CustomSyntaxHere\"); in the registerAll method.\nError:\nIn file included from /home/jesse/projects/moose/framework/build/header_symlinks/MooseApp.h:26,\n                 from /home/jesse/projects/foo/build/header_symlinks/FooApp.h:12,\n                 from /home/jesse/projects/foo/src/base/FooApp.C:1,\n                 from /home/jesse/projects/foo/build/unity_src/base_Unity.C:2:\n/home/jesse/projects/foo/src/base/FooApp.C: In static member function 'static void FooApp::registerAll(Factory&, ActionFactory&, Syntax&)':\n/home/jesse/projects/moose/framework/build/header_symlinks/ActionFactory.h:26:3: error: invalid use of member function 'Syntax& MooseApp::syntax()' (did you forget the '()' ?)\n   26 |   syntax.registerActionSyntax(action, action_syntax, \"\", __FILE__, __LINE__)\n      |   ^~~~~~\n/home/jesse/projects/moose/framework/build/header_symlinks/ActionFactory.h:26:3: note: in definition of macro 'registerSyntax'\n   26 |   syntax.registerActionSyntax(action, action_syntax, \"\", __FILE__, __LINE__)\n      |   ^~~~~~\n\n\nMyAction.C:\n#include \"MyAction.h\"\n#include \"Factory.h\"\n#include \"Parser.h\"\n#include \"FEProblem.h\"\n\nregisterMooseAction(\"FooApp\", MyAction, \"add_kernel\");\n\nInputParameters\nMyAction::validParams()\n{\n  InputParameters params = Action::validParams();\n\n  return params;\n}\n\nMyAction::MyAction(const InputParameters & params)\n  : Action(params)\n{\n}\n\nvoid\nMyAction::act()\n{\n}\n\nMyAction.h:\n#pragma once\n\n#include \"Action.h\"\n\nclass MyAction : public Action\n{\npublic:\n  MyAction(const InputParameters & params);\n\n  static InputParameters validParams();\n\n  virtual void act() override;\n};",
          "url": "https://github.com/idaholab/moose/discussions/28826",
          "updatedAt": "2024-10-11T14:56:16Z",
          "publishedAt": "2024-10-10T16:53:49Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe macro registerSyntax is trying to use a Syntax object called syntax\nI think it might be called 's' instead of syntax in this routine\nYou can add\nauto & syntax =s; before the registerSyntax call",
                  "url": "https://github.com/idaholab/moose/discussions/28826#discussioncomment-10907590",
                  "updatedAt": "2024-10-10T18:43:34Z",
                  "publishedAt": "2024-10-10T18:43:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "That did it. Thanks.... Would this be considered a bug?",
                          "url": "https://github.com/idaholab/moose/discussions/28826#discussioncomment-10914640",
                          "updatedAt": "2024-10-11T11:51:29Z",
                          "publishedAt": "2024-10-11T11:51:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It s probably just that your app was created when it was s  for the parameter and now it's syntax",
                          "url": "https://github.com/idaholab/moose/discussions/28826#discussioncomment-10915513",
                          "updatedAt": "2024-10-11T13:23:48Z",
                          "publishedAt": "2024-10-11T13:23:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "No this is a brand new app that I made to test",
                          "url": "https://github.com/idaholab/moose/discussions/28826#discussioncomment-10915884",
                          "updatedAt": "2024-10-11T13:57:48Z",
                          "publishedAt": "2024-10-11T13:57:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "alright then yes it s a bug the macro should work on new apps not just old apps",
                          "url": "https://github.com/idaholab/moose/discussions/28826#discussioncomment-10916515",
                          "updatedAt": "2024-10-11T14:56:09Z",
                          "publishedAt": "2024-10-11T14:56:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I ll put up a patch",
                          "url": "https://github.com/idaholab/moose/discussions/28826#discussioncomment-10916518",
                          "updatedAt": "2024-10-11T14:56:16Z",
                          "publishedAt": "2024-10-11T14:56:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}