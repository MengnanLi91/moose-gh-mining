{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wNi0xOVQyMjo0NTowMS0wNTowMM4AP1A2"
    },
    "edges": [
      {
        "node": {
          "title": "Error running an example in PorousFlow modulus: Need Exodus reader to restart variables",
          "author": {
            "login": "sinaheidari22"
          },
          "bodyText": "Dear all,\nI was trying to run an available example in the PorousFlow module considering a two-part simulation which is restarting a simulation using previous simulations.     Here is the file: (modules/porous_flow/examples/restart/gas_injection.i)\nI got this error\n*** ERROR ***\nThe following error occurred in the object \"MOOSE Problem\", of type \"FEProblem\".\nNeed Exodus reader to restart variables but the reader is not available\nUse either FileMesh with an Exodus mesh file or FileMeshGenerator with an Exodus mesh file and with use_for_exodus_restart equal to true.\nCould you please advise on that,\nThanks for reading.",
          "url": "https://github.com/idaholab/moose/discussions/21367",
          "updatedAt": "2022-06-21T14:59:13Z",
          "publishedAt": "2022-06-21T14:54:32Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou need to modify your Mesh block to\n[Mesh]\n  uniform_refine = 1\n  [file]\n    type = FileMeshGenerator\n    file = gravityeq_out.e\n    use_for_exodus_restart = true\n  []\n  [translate]\n    type = TransformGenerator\n    transform = TRANSLATE\n    vector_value = '0.1 0 0'\n    input = file\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/21367#discussioncomment-2994857",
                  "updatedAt": "2022-06-21T14:55:55Z",
                  "publishedAt": "2022-06-21T14:55:54Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sinaheidari22"
                          },
                          "bodyText": "Thank you for your prompt response.\nThe issue is solved now.",
                          "url": "https://github.com/idaholab/moose/discussions/21367#discussioncomment-2994889",
                          "updatedAt": "2022-06-21T14:59:14Z",
                          "publishedAt": "2022-06-21T14:59:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Creating material properties of time and time step",
          "author": {
            "login": "czadeh"
          },
          "bodyText": "Hi,\nI wish to create a material property that has time dependent behavior.\nThe function itself is dependent on cumulative time, but I am taking its derivative so that I can calculate the material property at each time step according to the derivative * delta t.\nThe form of the equation is as follows, where E is the material property I wish to calculate, i is the iteration, dE/dt is the time derivative, and delta_t is the time step:\nE(i+1) = E(i) + dE(i)/dt * delta_t\nMy question is: how do I access\n\ndelta_t\ncumulative t\n\nwithin a standard material property header and source file? Is there some standard way of calling those values within the MOOSE framework? I am not executing with variable time step, but I want to avoid creating redundant variables and parameters.\nThanks,\nCameron",
          "url": "https://github.com/idaholab/moose/discussions/21339",
          "updatedAt": "2022-06-20T18:10:26Z",
          "publishedAt": "2022-06-17T17:58:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nBoth the current time and the timestep are available in the Material Property code by accessing the FEProblem with the\n_mi_feproblem class member.\nThen you get access to these FEProblemBase class routines:\n  virtual Real & time() const { return _time; }\n  virtual Real & timeOld() const { return _time_old; }\n  virtual int & timeStep() const { return _t_step; }\n  virtual Real & dt() const { return _dt; }\n  virtual Real & dtOld() const { return _dt_old; }\n\nby calling for example: _mi_feproblem.dt()\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21339#discussioncomment-2978393",
                  "updatedAt": "2022-06-18T23:15:06Z",
                  "publishedAt": "2022-06-18T23:15:06Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "czadeh"
                          },
                          "bodyText": "Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/21339#discussioncomment-2988012",
                          "updatedAt": "2022-06-20T18:10:25Z",
                          "publishedAt": "2022-06-20T18:10:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Workshop 2022 Video Availability",
          "author": {
            "login": "ajsummers"
          },
          "bodyText": "Hello,\nI was just wondering if you would be posting a video of the recent workshop to the website, like with the 2020 Workshop. I learned a lot from the last workshop, and I saw that your group expanded on the content provided in this workshop.\nThank you",
          "url": "https://github.com/idaholab/moose/discussions/21341",
          "updatedAt": "2022-06-20T14:07:54Z",
          "publishedAt": "2022-06-17T20:20:43Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Please see #21308.",
                  "url": "https://github.com/idaholab/moose/discussions/21341#discussioncomment-2986283",
                  "updatedAt": "2022-06-20T14:07:55Z",
                  "publishedAt": "2022-06-20T14:07:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "M1 and M2 chips",
          "author": {
            "login": "WilkAndy"
          },
          "bodyText": "I'm thinking of buying a new computer.  Does MOOSE work on Apple M1 and M2 chips?",
          "url": "https://github.com/idaholab/moose/discussions/21332",
          "updatedAt": "2022-07-21T23:31:10Z",
          "publishedAt": "2022-06-17T07:34:46Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Refs #20811",
                  "url": "https://github.com/idaholab/moose/discussions/21332#discussioncomment-2969506",
                  "updatedAt": "2022-06-17T07:43:30Z",
                  "publishedAt": "2022-06-17T07:43:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes it does for M1. There is a working conda distribution for it too. We will have a M2 in about a month to try.\nI think there is still a few modules failures on M1 see this PR #20349\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21332#discussioncomment-2973005",
                  "updatedAt": "2022-06-17T16:26:17Z",
                  "publishedAt": "2022-06-17T16:23:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "joe61vette"
                  },
                  "bodyText": "Hi:  what would also help those of us considering a new Mac purchase would be some guidance on memory.  As the new unified memory works somewhat differently, less is supposedly needed.  Is that true for Moose based apps? If anyone who is currently running Moose on an M1 could post (for example) memory usage vs DOFs that would really help.\nI know the normal guidance is to buy all the memory you can afford, but with the memory being non-upgradeable and coming at a premium price some advice would help.\nThanks,\nJoe Kelly",
                  "url": "https://github.com/idaholab/moose/discussions/21332#discussioncomment-2980004",
                  "updatedAt": "2022-06-19T12:52:24Z",
                  "publishedAt": "2022-06-19T12:52:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "There won't be much of a difference. You should go with what satisfies your current needs.",
                          "url": "https://github.com/idaholab/moose/discussions/21332#discussioncomment-2986276",
                          "updatedAt": "2022-06-20T14:07:14Z",
                          "publishedAt": "2022-06-20T14:07:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Tensor Mechanics Action ignoring block restriction?",
          "author": {
            "login": "Edward-Eth"
          },
          "bodyText": "Hi, I am attempting to use the tensor mechanics action with the new tensor mechanics formulation, but having an issue with it seeming to ignore block restriction?\nThe code I am using for the action is this:\n[Modules/TensorMechanics/Master]\n    block = 1\n    [Printed]\n      strain = FINITE\n      block = 1\n      new_system = true\n      add_variables = true\n      generate_output = 'vonmises_stress stress_xx stress_yy stress_zz elastic_strain_xx elastic_strain_yy elastic_strain_zz plastic_strain_xx plastic_strain_yy plastic_strain_zz'\n      eigenstrain_names = eigenstrain\n      temperature = T\n    []\n[]\n\nAnd despite the block = 1 parameter in the Printed Subblock, I get the error:\n*** ERROR ***\nThe 'block' parameter of the object 'Printed_strain' must be a subset of the 'block' parameter of the variable 'disp_x':\n    Object 'Printed_strain': 0, 1\n    Variable 'disp_x': 1\n\nI clearly have the block parameter set to 1, so why is the printed_strain object being applied to both block 0 and block 1?",
          "url": "https://github.com/idaholab/moose/discussions/21298",
          "updatedAt": "2022-06-25T05:43:02Z",
          "publishedAt": "2022-06-14T14:53:24Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "The tensor mechanics action needs to be defined on all the blocks where displacements are defined. If you want to restrict it, you need to restrict the displacements in the mesh too.",
                  "url": "https://github.com/idaholab/moose/discussions/21298#discussioncomment-2948847",
                  "updatedAt": "2022-06-14T16:16:46Z",
                  "publishedAt": "2022-06-14T16:16:46Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Edward-Eth"
                          },
                          "bodyText": "disp_x,y,z are only present in block 1, the problem is the tensor mechanics action isn't restricting to block 1. So it's trying to define TM on blocks other than 1 where there are no displacements.",
                          "url": "https://github.com/idaholab/moose/discussions/21298#discussioncomment-2949178",
                          "updatedAt": "2022-06-14T17:04:42Z",
                          "publishedAt": "2022-06-14T17:04:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "umm ok looks like I misunderstood this. Let s see if Tensor mechanics people pitch in otherwise I ll take a look",
                          "url": "https://github.com/idaholab/moose/discussions/21298#discussioncomment-2949608",
                          "updatedAt": "2022-06-14T18:06:43Z",
                          "publishedAt": "2022-06-14T18:06:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "reverendbedford"
                          },
                          "bodyText": "I will take a look as if it's wrong I'm probably responsible.",
                          "url": "https://github.com/idaholab/moose/discussions/21298#discussioncomment-2975127",
                          "updatedAt": "2022-06-18T03:02:44Z",
                          "publishedAt": "2022-06-18T03:02:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "I'd be surprised if it's wrong, as we have regression tests for block restriction.",
                          "url": "https://github.com/idaholab/moose/discussions/21298#discussioncomment-2976259",
                          "updatedAt": "2022-06-18T11:09:35Z",
                          "publishedAt": "2022-06-18T11:09:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Edward-Eth"
                          },
                          "bodyText": "I'd be surprised if it's wrong, as we have regression tests for block restriction.\n\nWhat am I missing in the way I'm trying to restrict the blocks Tensor Mechanics is applied on in that case?",
                          "url": "https://github.com/idaholab/moose/discussions/21298#discussioncomment-2984678",
                          "updatedAt": "2022-06-20T09:44:25Z",
                          "publishedAt": "2022-06-20T09:44:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "reverendbedford"
                  },
                  "bodyText": "This seems to work fine:\n[Mesh]\n  [./gmg]\n    type = GeneratedMeshGenerator\n    dim = 3\n    nx = 10\n    ny = 10\n    nz = 10\n    xmax = 1\n    ymax = 1\n    zmax = 1\n  []\n  [./split]\n    type = ParsedSubdomainMeshGenerator\n    input = gmg\n    combinatorial_geometry = 'x > 0.5'\n    block_id = 1\n  []\n[]\n\n[Variables]\n  [./dummy]\n    block = 0\n  []\n[]\n\n[Kernels]\n  [dummy]\n    type = Diffusion\n    variable = dummy\n    block = 0\n  []\n[]\n\n[Modules]\n  [TensorMechanics]\n    [Master]\n      displacements = 'disp_x disp_y disp_z'\n      [all]\n        block = 1\n        strain = FINITE\n        new_system = true\n        formulation = TOTAL\n        volumetric_locking_correction = false\n        add_variables = true\n        displacements = 'disp_x disp_y disp_z'\n        generate_output = 'cauchy_stress_xx cauchy_stress_yy cauchy_stress_zz cauchy_stress_xy '\n                          'cauchy_stress_xz cauchy_stress_yz mechanical_strain_xx mechanical_strain_yy mechanical_strain_zz mechanical_strain_xy '\n                          'mechanical_strain_xz mechanical_strain_yz'\n      []\n    []\n  []\n[]\n\n[Materials]\n  [elastic_tensor]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 100000.0\n    poissons_ratio = 0.3\n  []\n  [compute_stress]\n    type = ComputeLagrangianLinearElasticStress\n    large_kinematics = true\n  []\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n\n  solve_type = 'newton'\n  line_search = none\n\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'lu'\n\n  l_max_its = 2\n  l_tol = 1e-14\n  nl_max_its = 15\n  nl_rel_tol = 1e-8\n  nl_abs_tol = 1e-10\n\n  start_time = 0.0\n  dt = 1\n  end_time = 1\n[]\n\n[Outputs]\n  exodus = true\n[]\n\n\nDo you have displacements as a GlobalParam?\nDid you manually add the displacement variables yourself?  Because you have add_variables = true in your example above.",
                  "url": "https://github.com/idaholab/moose/discussions/21298#discussioncomment-2986163",
                  "updatedAt": "2022-06-20T14:14:20Z",
                  "publishedAt": "2022-06-20T13:55:08Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Phase-field crystal in MOOSE",
          "author": {
            "login": "vpavan1920"
          },
          "bodyText": "Is there a publication that discusses the implementation and PFC formulation in MOOSE ?",
          "url": "https://github.com/idaholab/moose/discussions/21333",
          "updatedAt": "2022-06-25T05:43:09Z",
          "publishedAt": "2022-06-17T07:47:28Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@laagesen @SudiptaBiswas @jiangwen84",
                  "url": "https://github.com/idaholab/moose/discussions/21333#discussioncomment-2972956",
                  "updatedAt": "2022-06-17T16:15:41Z",
                  "publishedAt": "2022-06-17T16:15:39Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SudiptaBiswas"
                          },
                          "bodyText": "We don't have phase-field crystal model in MOOSE.",
                          "url": "https://github.com/idaholab/moose/discussions/21333#discussioncomment-2972973",
                          "updatedAt": "2022-06-17T16:18:04Z",
                          "publishedAt": "2022-06-17T16:18:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Actually we do have some PFC capability, although to be honest it has not seen much development in recent years. There is not a publication, but there is some documentation here:\nhttps://mooseframework.inl.gov/moose/source/kernels/CHBulkPFCTrad.html\nBasically it implements a PFC free energy that can be used in a Cahn-Hilliard equation. There are some example input files and links to other classes on the documentation page.",
                          "url": "https://github.com/idaholab/moose/discussions/21333#discussioncomment-2974101",
                          "updatedAt": "2022-06-17T20:08:50Z",
                          "publishedAt": "2022-06-17T20:05:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vpavan1920"
                          },
                          "bodyText": "Thanks, I'll look at the documentation accordingly",
                          "url": "https://github.com/idaholab/moose/discussions/21333#discussioncomment-2985343",
                          "updatedAt": "2022-06-20T11:38:33Z",
                          "publishedAt": "2022-06-20T11:38:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Problem with downloaded mumps using update_and_rebuild_petsc.sh",
          "author": {
            "login": "TheBEllis"
          },
          "bodyText": "I'm currently trying to build MOOSE in an ubuntu WSL environment, and am running into issues with the petsc build script. The error I get at the moment is this. I can build MOOSE fine in my actual Linux install, just wsl that is giving me issues at the moment.\nInstalling Mumps; this may take several minutes\nTESTING: check from config.libraries(config/BuildSystem/config/libraries.py:157)\nUNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\nDownloaded mumps could not be used. Please check install in /home/bill/projects/moose/petsc/arch-moose\nI have uploaded the configure.log here.\nconfiglog.txt\nAny help greatly appreciated :)",
          "url": "https://github.com/idaholab/moose/discussions/21335",
          "updatedAt": "2022-06-20T10:59:39Z",
          "publishedAt": "2022-06-17T10:54:50Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIn a WSL environment you do not really want to use the manual installation of petsc and libmesh, it's much easier to use the conda build:\nhttps://mooseframework.inl.gov/getting_started/installation/conda.html\nbtw did you look at the initial instructions for wsl:\nhttps://mooseframework.inl.gov/getting_started/installation/windows10.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21335#discussioncomment-2972736",
                  "updatedAt": "2022-06-17T15:40:42Z",
                  "publishedAt": "2022-06-17T15:40:41Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TheBEllis"
                          },
                          "bodyText": "Apologies I did not see the windows instructions, I just went to use the linux ones out of habit! Thank you so much, I will give them a go!",
                          "url": "https://github.com/idaholab/moose/discussions/21335#discussioncomment-2985117",
                          "updatedAt": "2022-06-20T10:59:40Z",
                          "publishedAt": "2022-06-20T10:59:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MOOSE Installation",
          "author": {
            "login": "Gallasd"
          },
          "bodyText": "My installation process is stuck at this step (Ubuntu)\n\"make -j 4\"\nI follow the troubleshooting to solve my problem\n\"conda activate moose\"\nThe above has been successful\n\"conda update --all\"\nthis warning appears\uff1a\n\n_\u201cWARNING: A newer version of conda exists. <==\n  current version: 4.12.0\n  latest version: 4.13.0\nPlease update conda by running\n    $ conda update -n base conda\n# All requested packages already installed.\u201d\n\nthen\uff0cI run this code\u201cconda update -n base conda\u201d\uff0cstill the same problem.\nI had no choice, so I run\u201cmamba update --all\u201d,it's no problem.\n\nNext, I do the following\uff1a\n\u201ccd moose\ngit checkout master\ngit clean -xfd\n<output snipped>\ngit fetch upstream\ngit pull\ngit submodule update --init\u201d\n\nin running this line of code\u201cgit fetch upstream\u201d\uff0ca fatal error occurred\uff1a\n\n\"fatal: 'upstream' does not appear to be a git repository\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\"\n\nI don't know how to solve this problem.\nIt must be noted that if i ignore these codes and run the following a hello world example directly, there is no problem\nthe result we want\uff1a\n\u201cHello world from processor my_hostname, rank 0 out of 4 processors\nHello world from processor my_hostname, rank 1 out of 4 processors\nHello world from processor my_hostname, rank 3 out of 4 processors\nHello world from processor my_hostname, rank 2 out of 4 processors\u201d\n\nI hope you can help me solve this problem, my English is not good, if the expression is not clear, please forgive me, thank you very much",
          "url": "https://github.com/idaholab/moose/discussions/21347",
          "updatedAt": "2022-06-25T05:43:15Z",
          "publishedAt": "2022-06-19T05:23:26Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis line failed:\ngit fetch upstream\n\nprobably because upstream is not defined.\nCould you please give us the output of git remote -v? This will tell us which repository you are tracking and under what name\nAlso you should try the workflow again but with\ngit fetch origin\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21347#discussioncomment-2980373",
                  "updatedAt": "2022-06-19T14:47:45Z",
                  "publishedAt": "2022-06-19T14:47:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Gallasd"
                          },
                          "bodyText": "Thank you very much for your reply\nThank you for helping me a lot\uff0cI use the code you provided and it continues to work.",
                          "url": "https://github.com/idaholab/moose/discussions/21347#discussioncomment-2984373",
                          "updatedAt": "2022-06-20T09:02:08Z",
                          "publishedAt": "2022-06-20T09:02:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[Multiapps][3D -> 2D]",
          "author": {
            "login": "coskrrb2002"
          },
          "bodyText": "Dear Moose users,\nRecently, I am trying to use both 3D and 2D geometry.\nThe 2D geometry is the same as a projection of 3D in the x-y plane.\nI tried to transfer temperature values from the 3D to the 2D mesh.\nBut, it does not work well.\nThe temperature was not transferred from the 3D mesh to the 2D mesh at all.\nI am using TransientMultiApp like below with Transfers:\n[MultiApps]\n  [sub_app] #App name that you can create in here!\n    type = TransientMultiApp\n    app_type = corrosionApp\n    positions = '0 0 1' #x y z coordinates\n    input_files = '2DTest.i'\n    clone_master_mesh = false # Different mesh\n    execute_on = 'TIMESTEP_END'\n    catch_up = true\n  []\n[]\n\n[Transfers]\n  [tosub]\n    type = MultiAppProjectionTransfer\n    execute_on = 'TIMESTEP_END'\n    to_multi_app = sub_app\n    source_variable = 'T'\n    variable = 'T'\n  []\n[]\n\n\nAre there any mistakes in here?\nBest regards",
          "url": "https://github.com/idaholab/moose/discussions/21210",
          "updatedAt": "2022-06-20T08:58:05Z",
          "publishedAt": "2022-06-03T05:41:54Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe projection transfer is not a geometrical projection across dimensions, it s a projection between different meshes and finite element basis that still share the same geometrical space.\nFrom the 3D to the 2D, there is not a unique mapping. Are you trying to average the 3D temperatures axially? Or pick a slice in the 3D system?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21210#discussioncomment-2879316",
                  "updatedAt": "2022-06-03T15:35:05Z",
                  "publishedAt": "2022-06-03T15:34:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "coskrrb2002"
                          },
                          "bodyText": "Thank you for your answer,\nI am trying to pick a slice in the 3D system (surface) and moved the calculated data to the 2D model.\nIs there any other way to do this?\nNakkyu",
                          "url": "https://github.com/idaholab/moose/discussions/21210#discussioncomment-2888776",
                          "updatedAt": "2022-06-06T06:19:35Z",
                          "publishedAt": "2022-06-06T06:19:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "do the two meshes overlap?\nWhat is the extent of the 2D mesh? of the 3D mesh?",
                          "url": "https://github.com/idaholab/moose/discussions/21210#discussioncomment-2891095",
                          "updatedAt": "2022-06-08T15:58:03Z",
                          "publishedAt": "2022-06-06T14:14:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "coskrrb2002"
                          },
                          "bodyText": "I would like to do the following things (transient model - time dependent):\nCalculate temperature profile in a 3D mesh. (A box shape)\nTransfer temperature into a 2D mesh. (One of the plane on the box)\nCalculate the temperature dependent physics in the 2D mesh.\nI know if I apply the temperature dependent physics only on the surface, then I don't have to calculate seperately (3D and 2D).\nHowever, in my case, I have to use different coordinate systems. 2D mesh: cylindrical coordinate and 3D mesh: cartesian coordiante.\nThat's why I want to seperate into 3D and 2D mesh.\nIf there any other methods in MOOSE, probably I can extract temperature profile from 3D mesh and apply to 2D mesh as boundary conditions...",
                          "url": "https://github.com/idaholab/moose/discussions/21210#discussioncomment-2903508",
                          "updatedAt": "2022-06-08T07:22:35Z",
                          "publishedAt": "2022-06-08T07:22:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nSince you have a coordinate transfer change in there as well, you will want to use this PR:\n#20451\nIt also provides additional documentation on dimensional transfers. I m not sure 3D-2D RZ is allowed currently\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21210#discussioncomment-2907983",
                          "updatedAt": "2022-06-08T18:08:26Z",
                          "publishedAt": "2022-06-08T18:08:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "coskrrb2002"
                          },
                          "bodyText": "Thank you for your advice!",
                          "url": "https://github.com/idaholab/moose/discussions/21210#discussioncomment-2984336",
                          "updatedAt": "2022-06-20T08:58:05Z",
                          "publishedAt": "2022-06-20T08:58:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "The problem of lithium ion diffusivity input in different directions",
          "author": {
            "login": "biaogxb"
          },
          "bodyText": "I want to use the phase field model to simulate the growth of dendrites,and I have some problems when I input the anisotropic mobility of lithium ions.\nI use \u2018MatDiffusion\u2019 to simulate the migration of lithium ions, as shown in the following code\n [./Diffusion1]\n type = MatDiffusion\n variable=w\n D_name=D\n [../]\n[./Mobility_coefficient]\n type = DerivativeParsedMaterial\nfunction = '-M0*(1-h)*cl*(1-h)'   f_name = D   args = 'eta w'   derivative_order = 1   material_property_names = ' M0 cl:=D[f1,w] h'   [../]`\nWhere M0 represents diffusion coefficient of li+ in electricity.At first I set a constant, but now I want to change M0 to the following form\uff1a\n\nwhere, the diagonal components represent mobility coefficients in x and y directions.\nIn a word, I want to change the previous constant diffusion coefficient of li+ in electricity into the tensor as shown in the figure and use it to calculate \u2019D\u2018\uff0cfinally I bring D into the diffusion equation. How can I achieve it\uff1f\n\nI add a \u2018Mobility_tensor\u2019 block  and then change the place where M0 is used to M directly.I don't know if this modification is correct.\nThe code is as follows\uff1a\n[./Diffusion1]\ntype = MatAnisoDiffusion\n diffusivity = D\n variable = w\n [../]\n[./Mobility_tensor]\n type = ConstantAnisotropicMobility\n M_name = M\n tensor = '317.9 0 0 317.9'\n [../]\n [./Mobility_coefficient]\n type = DerivativeParsedMaterial\nfunction = '-M*(1-h)*cl*(1-h)' \n f_name = D\n args = 'eta w'\n derivative_order = 1\n material_property_names = ' M cl:=D[f1,w] h'\n [../]\nCan someone help me? Thank you\uff01",
          "url": "https://github.com/idaholab/moose/discussions/21317",
          "updatedAt": "2022-06-20T03:45:01Z",
          "publishedAt": "2022-06-16T03:42:01Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe derivative parsed material does not handle the matrix material property I think.\nIf you need a custom expression for an anisotropic diffusion coefficient, I think you will want to make a custom object.\nUnless there are other XXXAnisotropicMobility objects you can use\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21317#discussioncomment-2967720",
                  "updatedAt": "2022-06-17T00:06:43Z",
                  "publishedAt": "2022-06-17T00:06:43Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "biaogxb"
                          },
                          "bodyText": "OK, thanks. I'll study this further",
                          "url": "https://github.com/idaholab/moose/discussions/21317#discussioncomment-2982682",
                          "updatedAt": "2022-06-20T03:45:02Z",
                          "publishedAt": "2022-06-20T03:45:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}