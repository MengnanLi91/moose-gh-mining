{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wMS0wNVQxOTo0Njo1OS0wNjowMM4AObcf"
    },
    "edges": [
      {
        "node": {
          "title": "How to output derivatives in csv or exodus?",
          "author": {
            "login": "aiskhak"
          },
          "bodyText": "I have a FV Navier-Stokes application. I need to output velocity derivatives at each spatial location in csv or exodus file. How do I do that?",
          "url": "https://github.com/idaholab/moose/discussions/20004",
          "updatedAt": "2022-10-24T18:27:27Z",
          "publishedAt": "2022-01-10T21:07:22Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nIf you update your version of MOOSE you should be able to use a GenericFunctorGradientMaterial to get the derivatives of the velocity into a vector functor material property.\n\nThen you can use the appropriate aux kernel (GenericFunctorVectorAux -> FunctorVectorElementalAux I think) to output it to an aux variable\n\nGuillaume\n\u2026\n Le 10 janv. 2022 \u00e0 16:07, aiskhak ***@***.***> a \u00e9crit :\n\n \ufeff\n I have a FV Navier-Stokes application. I need to output velocity derivatives at each spatial location in csv or exodus file. How do I do that?\n\n \u2014\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.\n You are receiving this because you are subscribed to this thread.",
                  "url": "https://github.com/idaholab/moose/discussions/20004#discussioncomment-1944290",
                  "updatedAt": "2022-10-24T18:27:27Z",
                  "publishedAt": "2022-01-11T00:42:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Failure to find VTK libraries after updating MOOSE environment",
          "author": {
            "login": "aarograh"
          },
          "bodyText": "Bug Description\nBased on guidance in the 2021-11 MOOSE newsletter, I tried to update the MOOSE environment on our ORNL machines.  The process consistently failed to update the moose-libmesh and moose-tools libraries (no matter how much I tried to manually force it to install certain versions, conda kept claiming that it was already installed).  I finally wiped the environment and started from scratch following the MOOSE \"getting started\" instructions.\nFor my normal development setup, this worked fine.  However, the CI we have for our Mole code is failing with the following errors during compilation:\nCompiling C++ (in opt mode) /localhome/gitlab-runner/builds/43d03e71/0/mole/mole/build/unity_src/kernels_Unity.C...\nCompiling C++ (in opt mode) /localhome/gitlab-runner/builds/43d03e71/0/mole/mole/build/unity_src/materials_Unity.C...\nCompiling C++ (in opt mode) /localhome/gitlab-runner/builds/43d03e71/0/mole/mole/build/unity_src/postprocessors_Unity.C...\nCompiling C++ (in opt mode) /localhome/gitlab-runner/builds/43d03e71/0/mole/mole/build/unity_src/utils_Unity.C...\nLinking Library /localhome/gitlab-runner/builds/43d03e71/0/mole/mole/moose/modules/chemical_reactions/lib/libchemical_reactions-opt.la...\nLinking Library /localhome/gitlab-runner/builds/43d03e71/0/mole/mole/moose/modules/module_loader/lib/libmodule_loader_with_cr_ls-opt.la...\nLinking Library /localhome/gitlab-runner/builds/43d03e71/0/mole/mole/test/lib/libmole_test-opt.la...\nLinking Library /localhome/gitlab-runner/builds/43d03e71/0/mole/mole/moose/framework/libmoose-opt.la...\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkIOCore-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkCommonCore-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkCommonDataModel-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkFiltersCore-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkIOXML-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkImagingCore-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkIOImage-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkImagingMath-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkIOParallelXML-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkParallelMPI-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkParallelCore-6.3\n/localhome/gitlab-runner/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: cannot find -lvtkCommonExecutionModel-6.3\ncollect2: error: ld returned 1 exit status\nmake: *** [/localhome/gitlab-runner/builds/43d03e71/0/mole/mole/moose/framework/libmoose-opt.la] Error 1\nmake: *** Waiting for unfinished jobs....\n\nSteps to Reproduce\nIt is unclear how to reproduce this since I did the same process one several different machines.  MOOSE builds fine on my normal development machine (where I am manually building it), but it fails to build on the CI machine (where the build process is automated but follows the same set of commands as what I would do manually).\nImpact\nIt prevents our automated testing from working properly, which is requirement to accept changes to Mole.  We can manually test everything and post results but that's a nuisance and is definitely not as good of a QA procedure.",
          "url": "https://github.com/idaholab/moose/discussions/20003",
          "updatedAt": "2022-06-24T01:00:59Z",
          "publishedAt": "2022-01-10T21:00:11Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Switched this to a discussion.\nDoes your application require VTK? Are you missing the moose-libmesh-vtk conda package?",
                  "url": "https://github.com/idaholab/moose/discussions/20003#discussioncomment-1943279",
                  "updatedAt": "2022-06-24T01:01:01Z",
                  "publishedAt": "2022-01-10T21:03:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aarograh"
                          },
                          "bodyText": "Here's a portion of the conda list -n moose output:\nmoose-libmesh             2021.12.15              build_0    https://conda.software.inl.gov/public\nmoose-libmesh-vtk         9.1.0                   build_0    https://conda.software.inl.gov/public\nmoose-mpich               3.3.2                   build_8    https://conda.software.inl.gov/public\nmoose-petsc               3.15.1                  build_3    https://conda.software.inl.gov/public\nmoose-tools               2021.10.19       py39hc64a412_0    https://conda.software.inl.gov/public\nvtk                       9.0.3           no_osmesa_py39h801044d_100    conda-forge\n\nWe don't really use vtk at all.  It seems to automatically be trying to use it, which has never been an issue before.",
                          "url": "https://github.com/idaholab/moose/discussions/20003#discussioncomment-1943399",
                          "updatedAt": "2022-06-24T01:01:01Z",
                          "publishedAt": "2022-01-10T21:19:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "Is this when you do the base install with just moose-libmesh moose-tools?",
                          "url": "https://github.com/idaholab/moose/discussions/20003#discussioncomment-1943409",
                          "updatedAt": "2022-06-24T01:01:10Z",
                          "publishedAt": "2022-01-10T21:20:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aarograh"
                          },
                          "bodyText": "Yep.  Basically completely wiped out the old conda stuff and then followed these instructions: https://mooseframework.inl.gov/getting_started/installation/conda.html",
                          "url": "https://github.com/idaholab/moose/discussions/20003#discussioncomment-1943429",
                          "updatedAt": "2022-06-24T01:01:10Z",
                          "publishedAt": "2022-01-10T21:23:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "We're working on cleaning those instructions as well.\nWould you mind trying the instructions here: https://mooseframework.inl.gov/docs/PRs/19453/site/getting_started/installation/conda.html and pasting the resulting conda list once you're done?\nOne more question - do you have state within your CI builds? If so, I would suggest nuking the install every time and redoing it. Conda can be very funky with state",
                          "url": "https://github.com/idaholab/moose/discussions/20003#discussioncomment-1943461",
                          "updatedAt": "2022-06-24T01:01:23Z",
                          "publishedAt": "2022-01-10T21:31:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aarograh"
                          },
                          "bodyText": "I'm not sure what you mean by state.  Do you mean a build which carries over from one build to the next?  If so, then yes.\nAnd to that point, I added a make clobberall line in the CI instructions just now and things seem to be working properly now.  It looks like some old configuration information was messing something up and just needed to be wiped out.  I probably should've thought to try that sooner.",
                          "url": "https://github.com/idaholab/moose/discussions/20003#discussioncomment-1943515",
                          "updatedAt": "2022-06-24T01:03:30Z",
                          "publishedAt": "2022-01-10T21:39:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "Yep - that's exactly it (definition for state).\nFor a while we had state between CI builds, but for the sake of consistency we decided to start fresh every time.",
                          "url": "https://github.com/idaholab/moose/discussions/20003#discussioncomment-1943557",
                          "updatedAt": "2022-06-24T01:03:32Z",
                          "publishedAt": "2022-01-10T21:46:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aarograh"
                          },
                          "bodyText": "Good to know.  Since that's what you guys do, I'll just leave that clobberall in there so that we're always doing a fresh MOOSE build.  Hopefully that will make this simpler in the future.\nThanks for the help/information.",
                          "url": "https://github.com/idaholab/moose/discussions/20003#discussioncomment-1943628",
                          "updatedAt": "2022-06-24T01:03:31Z",
                          "publishedAt": "2022-01-10T21:58:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "finite volume - output values with coordinates",
          "author": {
            "login": "aiskhak"
          },
          "bodyText": "Hello All,\nI am using INSFV kernels for simulations. Then I open exodus file with the results and want to save the data in csv file. However, all the values are stored as \"cells\" with NO coordinates. I need somehow save the data with coordinates. How do I do this?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/19986",
          "updatedAt": "2024-02-14T21:26:36Z",
          "publishedAt": "2022-01-09T04:38:32Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nYou could output each coordinate into a different variable using a ParsedAux with just \u2018x\u2019 (respectively y and z) for the function.\n\nYou ll need to have the use_xyt parameter set to `true`.\n\nAlternatively, have you tried using this vector postprocessor to get the variable values directly to CSV ?\nhttps://mooseframework.inl.gov/source/vectorpostprocessors/ElementValueSampler.html\n\nGuillaume\n\u2026\n Le 8 janv. 2022 \u00e0 23:38, aiskhak ***@***.***> a \u00e9crit :\n\n \ufeff\n Hello All,\n\n I am using INSFV kernels for simulations. Then I open exodus file with the results and want to save the data in csv file. However, all the values are stored as \"cells\" with NO coordinates. I need somehow save the data with coordinates. How do I do this?\n\n Thanks!\n\n \u2014\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.\n You are receiving this because you are subscribed to this thread.",
                  "url": "https://github.com/idaholab/moose/discussions/19986#discussioncomment-1937122",
                  "updatedAt": "2024-02-14T21:26:36Z",
                  "publishedAt": "2022-01-10T00:00:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "Thank you, ElementValueSampler is exactly what I need.",
                          "url": "https://github.com/idaholab/moose/discussions/19986#discussioncomment-1943286",
                          "updatedAt": "2024-02-14T21:26:37Z",
                          "publishedAt": "2022-01-10T21:04:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Conda Python muddle",
          "author": {
            "login": "hsheldon"
          },
          "bodyText": "This isn't a MOOSE problem, rather a Python problem which I believe stems from the MOOSE installation on my MacBook. For example, when trying to use matplotlib.path.Path() I get the error \"Matplotlib has no attribute \"path\"\", which makes no sense because path.py definitely exists in the location where Matplotlib was loaded from. However, I notice that I seem to have multiple versions of Matplotlib in different locations within the Miniconda3 directory, and I wonder if this is causing a problem. What's the best way to clean up this mess? Should I simply remove Miniconda3 entirely and start over?",
          "url": "https://github.com/idaholab/moose/discussions/19993",
          "updatedAt": "2022-01-10T20:59:49Z",
          "publishedAt": "2022-01-10T11:51:41Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nHaving multiple versions of matlplotlib doesnt seem ideal. You could remove them all with conda and re-install only one, which conda/mamba will make sure is compatible with the MOOSE tools.\nOtherwise, you can try importing a specific version of matplotlib in your python script, using the commands listed here:\nhttps://stackoverflow.com/questions/6445167/force-python-to-use-an-older-version-of-module-than-what-i-have-installed-now\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19993#discussioncomment-1939833",
                  "updatedAt": "2022-01-10T12:25:43Z",
                  "publishedAt": "2022-01-10T12:25:32Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hsheldon"
                          },
                          "bodyText": "Thanks so much, removing and reinstalling with Conda worked.",
                          "url": "https://github.com/idaholab/moose/discussions/19993#discussioncomment-1943256",
                          "updatedAt": "2022-01-10T20:59:39Z",
                          "publishedAt": "2022-01-10T20:59:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Can you run\necho $PATH\nwhich python\nwhich python3\n\nand paste the result?",
                  "url": "https://github.com/idaholab/moose/discussions/19993#discussioncomment-1940747",
                  "updatedAt": "2022-01-10T14:47:26Z",
                  "publishedAt": "2022-01-10T14:47:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Make one of the domain as inactive for solving the equation",
          "author": {
            "login": "avtarsinghh1991"
          },
          "bodyText": "Hello MOOSE experts\nI am solving chemo-mechanical equations using kernels which I modified as per my requirement.\nLet's say there are two domains in the mesh file. And I want to solve the diffusion equation for only one of the domains. However, the mechanical equation should be solved for both of them.\nCan you please suggest some examples or procedures do it?\nThank you very much in advance.\nBest\nAvtar",
          "url": "https://github.com/idaholab/moose/discussions/19674",
          "updatedAt": "2023-05-18T01:47:56Z",
          "publishedAt": "2021-12-21T22:10:52Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyes you can specify a block argument on the kernels and/or on the relevant variables to restrict some physics to parts of the domain.\nHere are a few inputs that do it:\nhttps://github.com/idaholab/moose/blob/next/test/tests/kernels/block_kernel/block_vars.i. (restricts via the variable relevant to a kernel)\nhttps://github.com/idaholab/moose/blob/next/test/tests/kernels/block_kernel/block_kernel_test.i (restricts the body force kernel to a single block)\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1855591",
                  "updatedAt": "2023-05-18T01:47:58Z",
                  "publishedAt": "2021-12-22T00:09:08Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Hello Guillaume\nThank you very much. I am using block argument to specify the active and inactive domains. It's working fine. But there is a small issue.\nI am simulating particle embedded in a matrix with only particle treated as an active domain for diffusion.\nI am providing flux on the surface of the particle.\n\nDiffusion works fine within the particle i.e., it increases with time. But -ve value comes right above the particle surface whose value increases with time. I have a figure here for your reference.\nI have tried with different mesh sizes but it keeps on popping out for every case with value increasing with time.\nCan you please help me to remove that scenario? I shall be very thankful.\nBest\nAvtar",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1901834",
                          "updatedAt": "2023-12-06T08:11:27Z",
                          "publishedAt": "2022-01-03T19:26:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nWhat is this diffused field? Is it a postprocessing of the flux? What is defining it?\nShould it be defined outside the particle if only the particle is active for diffusion?\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1901996",
                          "updatedAt": "2023-12-06T08:11:27Z",
                          "publishedAt": "2022-01-03T19:56:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Hello Guillaume\nI named the concentration field as \"diffused\". I am solving the concentration field only for particle by applying the flux boundary condition on its surface.\nIt means that concentration field outside the particle should remain zero. But the concentration right above the particle surface begins to decrease and keeps on decreasing with time.\nInput file: There are 33 blocks with last one being the outer domain.\n[Kernels]\n[diffusion]\ntype = Concentration\nvariable = diffused\nblock = '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31' # 32 is outside domain so not considered\n[../]\n[./euler]\ntype = DiffusionTimeDerivative\nvariable = diffused\n[../]\n[]\n[Materials]\n[./diffusivity_tensor_with_Euler]\ntype = AnisoDiffusivity\nread_prop_user_object = euler_angle_read\ndiffusivity = '7.08e-15 0 0 0 10.08e-15 0 0 0 4.08e-15'\nblock = '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31'\n[../]\n[]\nThis may be due to interpolation of concentration field across 1-2 elements.\nBest\nAvtar",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1902077",
                          "updatedAt": "2024-02-13T14:12:03Z",
                          "publishedAt": "2022-01-03T20:16:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is there any kernel acting on the concentration field on the outside of the particle (where it goes negative right?)",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1902162",
                          "updatedAt": "2024-02-13T14:12:28Z",
                          "publishedAt": "2022-01-03T20:33:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Yes, TensorMechanics kernel is active for both the domains.\n[Modules/TensorMechanics/Master]\n[all]\nadd_variables = true\nstrain = FINITE\nautomatic_eigenstrain_names = true\ngenerate_output = 'vonmises_stress'\n[]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1902806",
                          "updatedAt": "2024-02-13T14:12:28Z",
                          "publishedAt": "2022-01-03T23:36:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "But TensorMechanics does not act on diffused right?\nIf diffused is supposed to be constant outside the particle, I would block restrict the variable to the particle, on top of the block restriction you have for the kernels",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1902850",
                          "updatedAt": "2023-05-18T01:48:00Z",
                          "publishedAt": "2022-01-03T23:50:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "I am solving the coupled chemo-mechanical problem. So, diffusion causes stress but stress is not affecting the diffusion.\nSo, the system is only one way coupled.\nYes, concentration should be solved only within the particle.\nUpdate: One more thing, the region in which concentration becomes negative outside the particle is always spread upto two mesh elements along radial direction even if I decrease the size of the meshing.",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1902863",
                          "updatedAt": "2023-05-18T01:48:00Z",
                          "publishedAt": "2022-01-03T23:55:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Let's try restricting the variable then.\nWhat FE family is diffused btw?",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1902939",
                          "updatedAt": "2023-05-18T01:48:07Z",
                          "publishedAt": "2022-01-04T00:06:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Thanks\nSure. I am trying to restrict the variable. Will let you know the output.\nAll variables belong to lagrange family.\n[Variables]\n[./diffused]\ninitial_condition = 0.0\norder = FIRST\nfamily = LAGRANGE\n[../]\n[./disp_x]\ninitial_condition = 0.0\norder = FIRST\nfamily = LAGRANGE\n[../]\n[./disp_y]\ninitial_condition = 0.0\norder = FIRST\nfamily = LAGRANGE\n[../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1902979",
                          "updatedAt": "2023-05-18T01:48:07Z",
                          "publishedAt": "2022-01-04T00:11:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Hello Guillaume\nThank you very much. The problem has been resolved.\nThe issue was, I was not putting the block items in the time derivative module.\n[Kernels]\n[diffusion]\ntype = Concentration\nvariable = diffused\nblock = '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31' # 32 is outside domain so not considered\n[../]\n[./euler]\ntype = TimeDerivative\nvariable = diffused\n### block = '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31' # 32 is outside domain so not considered\n[../]\n[]\n\nBest\nAvtar",
                          "url": "https://github.com/idaholab/moose/discussions/19674#discussioncomment-1941351",
                          "updatedAt": "2023-05-18T01:48:31Z",
                          "publishedAt": "2022-01-10T16:17:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Testing system documentation",
          "author": {
            "login": "rtaylo45"
          },
          "bodyText": "Hello,\nIm trying to set up more advanced testing in my app and im finding it hard to find documentation on the moose testing system. For example here, shows a list of testers but only two of the testers are linked to documentation. In those links they also don't really show any sort of arguments that can be added with these testers so that i can change the default behavior. Can someone point me to where i can find more documentation or more advanced usage i can use as examples?\nThanks,\nZack",
          "url": "https://github.com/idaholab/moose/discussions/19926",
          "updatedAt": "2024-04-26T19:06:08Z",
          "publishedAt": "2021-12-27T20:35:48Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI'm not sure we have pages for each type of test. @loganharbour do you know if we have more docs on the civet side on this?\nSome of the testers, like exodiff, are external and have their own docs. I could not find a page on mooseframeworks.org with docs on how to specify extra arguments either.\nThe repository has a lot of examples, what specifically are you looking for?\nHappy holidays,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19926#discussioncomment-1889625",
                  "updatedAt": "2024-04-26T19:06:08Z",
                  "publishedAt": "2021-12-30T22:57:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "rtaylo45"
                          },
                          "bodyText": "I was able to find an example in the repository for the specific test type i was looking for. I was trying to find a way to test for invalid input, but the question was meant to be more general. It was difficult for me to find out what i would even search for in the repository.",
                          "url": "https://github.com/idaholab/moose/discussions/19926#discussioncomment-1914273",
                          "updatedAt": "2024-04-26T19:06:20Z",
                          "publishedAt": "2022-01-05T18:29:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rtaylo45"
                          },
                          "bodyText": "@GiudGiud is there a way to flag a test to run only if a MakeFile variable is set?",
                          "url": "https://github.com/idaholab/moose/discussions/19926#discussioncomment-1920128",
                          "updatedAt": "2024-04-26T19:06:24Z",
                          "publishedAt": "2022-01-06T17:30:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I don't think so. There's only the executable_pattern afaik for that kind of skip.\nYou could pass a command line argument to the test to make it react to a Makefile variable being set or not (with additional code in your application to react to this argument), but the result could still be affected, and whether to consider the test result would not",
                          "url": "https://github.com/idaholab/moose/discussions/19926#discussioncomment-1924635",
                          "updatedAt": "2024-04-26T19:06:35Z",
                          "publishedAt": "2022-01-07T12:49:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I'm writing some docs for the testing system, I ll let you know if I find anything",
                          "url": "https://github.com/idaholab/moose/discussions/19926#discussioncomment-1924708",
                          "updatedAt": "2024-04-26T19:06:35Z",
                          "publishedAt": "2022-01-07T13:01:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Please see this PR #19985 and let me know if there's more information you think I should include in the testers docs\nI didnt see anything about a Makefile variable parameter for the testers. Maybe @milljm  or @loganharbour  will know about this",
                          "url": "https://github.com/idaholab/moose/discussions/19926#discussioncomment-1931164",
                          "updatedAt": "2024-04-26T19:06:47Z",
                          "publishedAt": "2022-01-08T10:44:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Specifying spatially and temporally varying flow and solute transport boundary conditions",
          "author": {
            "login": "jwheiss"
          },
          "bodyText": "Hello,\nIs it possible to specify spatially and temporally varying flow and solute transport boundary conditions in PorousFlow? For instance, if pressure and solute concentration vary spatially and temporally along the boundary, how do we specify that boundary condition?\nThe time-varying behavior of the pressure and solute at the boundary are complex and cannot be represented with a function. Can the user supply an external file that specifies over time the pressure and solute concentration at each element or at a specified interval along a boundary? If so, how would that be implemented? The spatially and temporally varying specified pressure also needs to be coupled to solid mechanics (coupling_type = HydroMechanical).\nThanks,\nJames",
          "url": "https://github.com/idaholab/moose/discussions/19936",
          "updatedAt": "2022-07-26T14:50:41Z",
          "publishedAt": "2021-12-31T16:41:13Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Hi James,\nSee the PorousFlow boundary page.  I suggest using a PorousFlowPiecewiseLinearSink or FunctionDirichletBC.  In these cases the flux_function or function can be specified by your file using, for instance, a PiecewiseMulticonstant function.",
                  "url": "https://github.com/idaholab/moose/discussions/19936#discussioncomment-1901976",
                  "updatedAt": "2022-07-26T14:50:58Z",
                  "publishedAt": "2022-01-03T19:54:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jwheiss"
                          },
                          "bodyText": "Hi Andy,\nThanks very much for your help. I'll take a look at the functions you mentioned.\nBest,\nJames",
                          "url": "https://github.com/idaholab/moose/discussions/19936#discussioncomment-1928470",
                          "updatedAt": "2022-07-26T14:50:59Z",
                          "publishedAt": "2022-01-07T20:59:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Martensite Transformation with Phase Field and Tensor Mechanics Module",
          "author": {
            "login": "ppandit95"
          },
          "bodyText": "Dear MOOSE Community,\nI am trying to run a simple simulation for martensitic transformation using the Allen - Cahn Equation wherein I have order parameter dependent Eigen strain as well as Composite Elasticity Tensor for which I have made the relevant input deck but I am not able to run a successful simulation . The input deck is as follows\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 64\n  ny = 64\n  xmin = 0\n  xmax = 0.15625\n  ymin = 0\n  ymax = 0.15625\n  elem_type = QUAD4\n[]\n\n[Variables]\n  [./eta]\n    order = FIRST\n    family = LAGRANGE\n    [./InitialCondition]\n      type = BoundingBoxIC\n      variable = eta\n      x1 = 0.0734375\n      y1 = 0.0734375\n      x2 = 0.0828125\n      y2 = 0.0828125\n      inside = 0.9\n      outside = 1e-5\n      #int_width = 0.003125\n    [../]\n  [../]\n  [./disp_x]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./disp_y]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n[]\n\n[Kernels]\n  [./TensorMechanics]\n    displacements = 'disp_x disp_y'\n    generate_output = 'stress_xx stress_yy'\n    eigenstrain_names = 'sfts'\n  [../]\n\n  [./eta_bulk]\n    type = AllenCahn\n    variable = eta\n    f_name = F\n  [../]\n  [./eta_interface]\n    type = ACInterface\n    variable = eta\n    #kappa_val = 1.975e-7#Step3.1:Modified the coefficient of the gradient term\n    kappa_name = kappa\n  [../]\n  [./time]\n    type = TimeDerivative\n    variable = eta\n  [../]\n[]\n\n#\n# Try visualizing the stress tensor components as done in Conserved.i\n#\n\n[Materials]\n  [./consts]\n    type = GenericConstantMaterial\n    prop_names  = 'L kappa'\n    prop_values = '1e-3 1.975e-7'#Step2.1-->Modified Mobility parameter in Allen Cahn Equation\n  [../]\n\n  # matrix phase\n  #Step 2.2---->Calculated Composite Elasticity Tensor\n  [./stiffness_a]\n    type = ComputeElasticityTensor\n    base_name = austenite\n    C_ijkl = '221880 149840 0 221880 0 0 0 0 36030'\n    # Stiffness tensor is created\n    fill_method = symmetric9\n    # See RankFourTensor.h for details on fill methods\n  [../]\n\n  # oversized precipitate phase (simulated using thermal expansion)\n  [./stiffness_m]\n    type = ComputeElasticityTensor\n    base_name = martensite\n    # Note that the two phases could have different stiffnesses.\n    # Try reducing the precipitate stiffness (to '1 1') rather than making it oversized\n    C_ijkl = '292700 106250 0 292700 0 0 0 0 93220'\n    fill_method = symmetric9\n  [../]\n  [./w_a]\n    type = DerivativeParsedMaterial\n    f_name = w_a\n    function = '(1 - eta)'\n    args = 'eta'\n    enable_jit = true\n    derivative_order = 2\n  [../]\n  [./w_m]\n    type = DerivativeParsedMaterial\n    f_name = w_m\n    function = eta\n    args = 'eta'\n    enable_jit = true\n    derivative_order = 2\n  [../]\n  [./coeff]\n    type = DerivativeParsedMaterial\n    f_name = coeff\n    function = eta\n    args = 'eta'\n    enable_jit = true\n    derivative_order = 2\n  [../]\n  [./stiffness]\n    type = CompositeElasticityTensor\n    args = eta\n    tensors = 'austenite martensite'\n    weights = 'w_a w_m'\n  [../]\n  [./sfts]\n    type = ComputeVariableEigenstrain\n    eigenstrain_name = sfts\n    eigen_base = '0.1 0 0 0 -0.1 0 0 0 0'\n    prefactor = coeff\n    args = 'eta'\n  [../]\n  [./strain]\n    type = ComputeSmallStrain\n    displacements = 'disp_x disp_y'\n    eigenstrain_names = sfts\n  [../]\n  [./stress]\n    type = ComputeLinearElasticStress\n  [../]\n  [./elastic_free_energy]\n    type = ElasticEnergyMaterial\n    f_name = Ed\n    args = 'eta'\n    derivative_order = 2\n  [../]\n\n  # Generate the global free energy from the chemical and elastic free energies\n  [./chemical_energy]\n    type = DerivativeParsedMaterial\n    f_name = F_chem\n    args = eta\n    function = '146.5*(1 + 0.075*eta^2 - 4.15*eta^3 + 3.075*eta^4)'\n    enable_jit = true\n    derivative_order = 2\n  [../]\n  [./free_energy]\n    type = DerivativeSumMaterial\n    f_name = F\n    sum_materials = 'F_chem Ed'\n    args = 'eta'\n    outputs = 'none'\n    derivative_order = 2\n  [../]\n\n\n[]\n\n[BCs]\n  [./Natural_y]\n    type = NeumannBC\n    variable = disp_y\n    boundary = 'bottom top left right'\n    value = 0\n  [../]\n  [./natural_x]\n    type = NeumannBC\n    variable = disp_x\n    boundary = 'top bottom left right'\n    value = 0\n  [../]\n  [./natural_eta]\n    type =NeumannBC\n    variable = eta\n    boundary = 'top bottom left right'\n    value = 0\n  [../]\n[]\n\n[Preconditioning]\n  # active = ' '\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  scheme = bdf2\n\n  # this gives best performance on 4 cores\n  solve_type = 'PJFNK'\n  petsc_options_iname = '-pc_type  -sub_pc_type '\n  petsc_options_value = 'asm       lu'\n\n  l_max_its = 30\n  nl_max_its = 10\n  nl_abs_tol = 1.0e-2\n  l_tol = 1.0e-2\n  start_time = 0.0\n  num_steps = 20\n\n  [./TimeStepper]\n    type = ConstantDT\n    dt = 0.01\n  [../]\n[]\n\n[Outputs]\n  execute_on = 'timestep_end'\n  exodus = true\n[]\n\nAny headers in this regard will be helpful.\nMany Thanks\nPushkar",
          "url": "https://github.com/idaholab/moose/discussions/19958",
          "updatedAt": "2022-06-11T08:39:15Z",
          "publishedAt": "2022-01-05T16:08:14Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhat error or issues are you getting exactly?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19958#discussioncomment-1924648",
                  "updatedAt": "2022-06-11T08:42:57Z",
                  "publishedAt": "2022-01-07T12:52:57Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "@GiudGiud I did manage to run a successful simulation for martensite transformation but I was not able to use a mesh on a unit domain ie for 64*64 elements I had to set xmax=64 and ymax=64 for the simulation otherwise the simulation wont run to the desired time steps .",
                          "url": "https://github.com/idaholab/moose/discussions/19958#discussioncomment-1924904",
                          "updatedAt": "2022-06-11T08:42:57Z",
                          "publishedAt": "2022-01-07T13:41:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Did you try reducing the time steps for the unit domain?\nAny of the advice here https://mooseframework.inl.gov/application_usage/failed_solves.html helps?",
                          "url": "https://github.com/idaholab/moose/discussions/19958#discussioncomment-1925447",
                          "updatedAt": "2022-06-11T08:42:58Z",
                          "publishedAt": "2022-01-07T15:09:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ppandit95"
                          },
                          "bodyText": "Thanks @GiudGiud for directing to the relevent webpage although I haven't yet tried by reducing the time step but will look into it....",
                          "url": "https://github.com/idaholab/moose/discussions/19958#discussioncomment-1925497",
                          "updatedAt": "2022-06-11T08:42:58Z",
                          "publishedAt": "2022-01-07T15:18:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error:Task add_kernel is not registered to build FVKernel derived objects",
          "author": {
            "login": "ScouperLH"
          },
          "bodyText": "Hello everyone, I am using MOOSE to calculate the heat sink of a volumetric heat source by the coldplate. The following error occurred during operation:\n\nFramework Information:\nMOOSE Version:           git commit fad6e84 on 2021-12-02\nLibMesh Version:\nPETSc Version:           3.15.1\nSLEPc Version:           3.15.1\nI am not sure of the cause of the error, because my code comes from some test files. I want to simulate the process as follows: There is an S-shaped channel in a coldplate, a metal heat source is placed on the coldplate, and the parameters I have written in the input file:\nhttps://github.com/ScouperLH/bflow2/blob/70192880af7a699d99898984b665e193a803fc3c/coldplate.i\nhttps://github.com/ScouperLH/bflow2/blob/70192880af7a699d99898984b665e193a803fc3c/coldplate1.e\ncoldplate1.e\nIn addition, I would like to know whether MOOSE can simulate the heat sink and thermal contact process of the coldplate now?",
          "url": "https://github.com/idaholab/moose/discussions/19589",
          "updatedAt": "2022-06-11T16:05:22Z",
          "publishedAt": "2021-12-09T12:28:19Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI had a look at your input. You are mixing finite element and finite volume kernels in the [Kernels] block.\nThis is not supported. If you want to use finite volume fluid flow, you need to use finite volume heat conduction as well, and place all your kernels in [FVKernels].\nOr you could transition your fluid flow simulation to finite element, then you dont need to change your heat conduction kernels.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1780386",
                  "updatedAt": "2022-06-11T16:05:32Z",
                  "publishedAt": "2021-12-09T16:34:19Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ScouperLH"
                          },
                          "bodyText": "Hello, sir. Thanks for your reply, I will modify the code.",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1783064",
                          "updatedAt": "2022-06-11T16:05:35Z",
                          "publishedAt": "2021-12-10T02:10:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ScouperLH"
                          },
                          "bodyText": "Hello\uff0cMr.Guillaume. @GiudGiud\nThis week I have modified my code with FEM kernels, but the error 'The named variable is a standard variable, try a 'coupled[Value/Gradient/Dot/etc]...' function instead ' is reported.\nI would like to ask you how to make further modifications to make this code run, or if you can provide the path of related test cases, it is greatly appreciated.",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1832472",
                          "updatedAt": "2022-06-11T16:05:46Z",
                          "publishedAt": "2021-12-17T07:54:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ScouperLH"
                          },
                          "bodyText": "My input file as follow:\nIt seems that the velocity vector needs to be modified to a coupled variable, and I am not sure how to modify it.\n#Fluid properties\nmu = 1e-3     # Pa*s\nrho = 998.2    #kg/m3\ncp = 4128      #j/kg-k\nk = 0.6     #w/m-k\nalpha =0.0018   \n\n#Solid-plate   properties\ncp_p = 871    #j/kg-k\nrho_p = 2719      #kg/m3\nk_p = 202.4        #w/m-k\n\n#Solid-source   properties\ncp_s = 330    #j/kg-k\nrho_s = 5320      #kg/m3\nk_s = 54        #w/m-k\n\n#Operating conditions\nv_inlet = 0.1\nT_inlet = 273        #k\nheat_source = 2.6e8              # W/m^3\np_outlet = 1e-6\n\n[GlobalParams]\n  gravity = '0 0 0'\n[]\n\n[Mesh]\n  type = FileMesh\n  file = coldplate1.e\n[]\n\n[Preconditioning]\n  [Newton_SMP]\n    type = SMP\n    full = true\n    solve_type = 'NEWTON'\n  []\n[]\n\n[Variables]\n [./velocity]\n    order = CONSTANT\n   family = LAGRANGE\n   block='channel'\n  [../]\n\n  [./vel_x]\n    order = SECOND\n    family = LAGRANGE\n    block='channel'\n  [../]\n  [./vel_y]\n    order = SECOND\n    family = LAGRANGE\n    block='channel'\n  [../]\n  [./vel_z]\n    order = SECOND\n    family = LAGRANGE\n    block='channel'\n  [../]\n  [./p]\n    order = FIRST\n    family = LAGRANGE\n    block='channel'\n  [../]\n  [T_channel]\n    initial_condition = 273\n    scaling = 1e-4\n    block='channel'\n  []\n\n  [T_plate]\n    initial_condition = 273\n    scaling = 1e-4\n    block='plate'\n  []\n  [T_source]\n    initial_condition = 273\n    scaling = 1e-4\n    block='heat-source'\n  []\n[]\n\n[BCs]\n  [./x_no_slip]\n    type = DirichletBC\n    variable = vel_x\n    boundary = 'wall-channel-outer  wall-channel-inner'\n    value = 0.0\n  [../]\n  [./y_no_slip]\n    type = DirichletBC\n    variable = vel_y\n    boundary = 'wall-channel-outer  wall-channel-inner'\n    value = 0.0\n  [../]\n  [./z_no_slip]\n    type = DirichletBC\n    variable = vel_z\n    boundary = 'wall-channel-top  wall-channel-bottom'\n    value = 0.0\n  [../]\n  [./inlet_x]\n    type = DirichletBC\n    variable = vel_x\n    boundary = 'inlet'\n    value = 1e-15\n  [../]\n  [./inlet_y]\n    type = DirichletBC\n    variable = vel_y\n    boundary = 'inlet'\n    value = 0.1\n  [../]\n  [./inlet_z]\n    type = DirichletBC\n    variable = vel_z\n    boundary = 'inlet'\n    value = 1e-15\n  [../]\n  [./inlet_temp]\n    type = DirichletBC\n    variable =T_channel\n    boundary = 'inlet'\n    value = 273\n  [../]\n  [./outlet_p]\n    type = DirichletBC\n    variable = p\n    boundary = outlet\n    value = 0.0\n  [../]\n[]\n\n[Kernels]\n  [./mass]\n    type = INSADMass\n    variable = p\n    block = 'channel'\n  [../]\n  [./mass_pspg]\n    type = INSADMassPSPG\n    variable = p\n    block = 'channel'\n  [../]\n  [./momentum_convection]\n    type = INSADMomentumAdvection\n    variable = velocity\n    block = 'channel'\n  [../]\n  [./momentum_viscous]\n    type = INSADMomentumViscous\n    variable = velocity\n    block = 'channel'\n  [../]\n  [./momentum_pressure]\n    type = INSADMomentumPressure\n    variable = velocity\n    pressure = p\n    integrate_p_by_parts = true\n    block = 'channel'\n  [../]\n  [./momentum_supg]\n    type = INSADMomentumSUPG\n    variable = velocity\n    velocity = velocity\n    block = 'channel'\n  [../]\n [./temperature_advection]\n   type = INSADEnergyAdvection\n   variable = T_channel\n   block = 'channel'\n [../]\n  [./temperature_conduction]\n    type = ADHeatConduction\n    variable = T_channel\n    thermal_conductivity = 'k'\n  [../]\n  [temperature_supg]\n    type = INSADEnergySUPG\n    variable = T_channel\n    velocity = velocity\n  []\n\n  [source_conduction]\n    type = ADHeatConduction\n    variable = T_source\n    block = 'heat-source'\n  []\n  [plate_conduction]\n    type = ADHeatConduction\n    variable = T_plate\n    block = 'plate'\n  []\n [fluid_conduction]\n    type = ADHeatConduction\n    variable = T_channel\n    block = 'channel'\n []\n\n  #Source for the block\n  [source_0]\n    type = HeatSource\n    value = 2.6e8                   # W/m^3\n    variable = T_source\n    block =  'heat-source'\n  []\n[]\n\n[InterfaceKernels]\n  [source_to_plate]\n    type = SideSetHeatTransferKernel\n    variable = T_source\n    neighbor_var = T_plate\n    boundary = 'interface-heat-wrt-source'\n  []\n\n  [fluid_to_plate]\n    type = ConjugateHeatTransfer\n    variable = T_channel\n    T_fluid = T_channel\n    neighbor_var = 'T_plate'\n    boundary = 'interface-wrt-fluid'\n    htc = 'alpha'\n  []\n []\n\n[AuxVariables]\n  [T]\n  []\n[]\n\n[AuxKernels]\n  [T_channel]\n    type = NormalizationAux\n    variable = T\n    source_variable = T_channel\n    block = 'channel'\n  []\n\n  [T_plate]\n    type = NormalizationAux\n    variable = T\n    source_variable = T_plate\n    block = 'plate'\n  []\n\n  [T_source]\n    type = NormalizationAux\n    variable = T\n    source_variable = T_source\n    block = 'heat-source'\n  []\n  [./mag]\n   type = VectorMagnitudeAux\n   variable = velocity\n   x = vel_x\n   y = vel_y\n   z = vel_z\n  []\n []\n\n[Materials]\n  [./const_fluid]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho mu cp k'\n    prop_values = '${rho} ${mu}  ${cp}  ${k}'\n    block = 'channel'\n  [../]\n  [ins_mat]\n    type = INSADStabilized3Eqn\n    velocity = velocity\n    pressure = p\n    temperature = T_channel\n    block='channel'\n  []\n\n  [./plate]\n    type = ADHeatConductionMaterial\n    thermal_conductivity = 202.4    # W/m k\n    specific_heat = 4128    # J/kg k\n    block = 'plate'\n  [../]\n\n  [./fluid]\n    type = ADHeatConductionMaterial\n    thermal_conductivity = .6  # W/m k\n    specific_heat = 871    # J/kg K\n    block = 'channel'\n  [../]\n\n  [./alpha]\n    type = ADGenericConstantMaterial\n    prop_names = 'alpha'\n    prop_values = '0.0018'\n    block = 'channel'\n  [../]\n\n  [./const_functor_source]\n    type = ADGenericConstantFunctorMaterial\n    prop_names ='cp_s k_s'\n    prop_values =  '${cp_s} ${k_s}'\n    block = 'heat-source'\n  [../]\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'NEWTON'\n  petsc_options_iname = '-pc_type -sub_pc_factor_levels -ksp_gmres_restart'\n  petsc_options_value = 'asm      6                     200'\n  line_search = 'none'\n  nl_rel_tol = 1e-12\n  nl_max_its = 6\n  automatic_scaling=true\n[]\n\n[Outputs]\n  exodus = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1832484",
                          "updatedAt": "2022-06-11T16:05:56Z",
                          "publishedAt": "2021-12-17T07:55:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nI think you are mixing vector velocity and velocity norm here.\nThe INSADKernel need a vector velocity, and velocity in your input file is the velocity norm.\nWhich input file are you using as an example for your FE flow simulation?\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1841007",
                          "updatedAt": "2022-06-11T16:07:47Z",
                          "publishedAt": "2021-12-18T15:49:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ScouperLH"
                          },
                          "bodyText": "Thanks for your reply!\nI used the steady-var.i file as an example, which is under the path moose/modules/navier_stokes/test/tests/finite_element/ins/energy_source\nMy inlet velocity should be a vector coming in along the Y axis,  0.1m/s, but I don\u2019t know how to implement it in the example input file, because this is not an initial condition, but an inlet BC.\nSo I try to set the three inlet velocity components first, and then use VectorMagnitudeAux to combine them into a vector for calculation. It seems that this try is incorrect, but I can't find other cases to achieve the simulation I want.",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1842944",
                          "updatedAt": "2022-06-11T16:07:48Z",
                          "publishedAt": "2021-12-19T11:11:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "In that input you should see the right way to set up the velocities. It's a LAGRANGE_VEC variable, so a vector.\nThe inlet velocity can also be set similarly to that input.\nIn that input:\n  [./lid]\n    type = VectorFunctionDirichletBC\n    variable = velocity\n    boundary = 'top'\n    function_x = 'lid_function'\n  [../]\n\nWhat you can do:\n  [inlet]\n    type = VectorFunctionDirichletBC\n    variable = velocity\n    boundary = 'bottom'\n    function_y = 'some_function_with_the_inlet_velocity_profile' (or a constant)\n  [../]\n\nVectorMagnitudeAux gets you the norm of the vector. It doesnt combine components. This input file you mentioned has the right structure.",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1844218",
                          "updatedAt": "2022-06-11T16:08:01Z",
                          "publishedAt": "2021-12-19T21:32:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ScouperLH"
                          },
                          "bodyText": "Thank you very much for your suggestions, sir. Based on your suggestions, I modified the code and improved the input file based on some error prompts. Now it runs correctly!\nI put my code here, maybe someone will use it in the future.\nhttps://github.com/ScouperLH/bflow2/blob/80a44503752c169fb71b03de9886681abdbfaf64/coldplate3.i",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1851270",
                          "updatedAt": "2022-06-11T16:08:19Z",
                          "publishedAt": "2021-12-21T07:57:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ScouperLH"
                          },
                          "bodyText": "Performing automatic scaling calculation\nComputing Automatic Scaling\n  Computing Jacobian...                                                              [ 21.60 s] [    0 MB]\nFinished Computing Automatic Scaling                                                 [ 21.68 s] [    0 MB]\n\n0 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 25.05 s] [    0 MB]\n0 Linear |R| = 4.704515e+01\n1 Linear |R| = 4.307489e+01\n2 Linear |R| = 2.656472e+01\n3 Linear |R| = 1.049166e+01\n4 Linear |R| = 7.834301e-01\n5 Linear |R| = 3.419145e-01\n6 Linear |R| = 1.415768e-01\n7 Linear |R| = 1.010310e-01\n8 Linear |R| = 9.262614e-02\n9 Linear |R| = 8.983875e-02\n10 Linear |R| = 8.756475e-02\n11 Linear |R| = 7.938190e-02\n12 Linear |R| = 5.442626e-02\n13 Linear |R| = 3.948357e-02\n14 Linear |R| = 3.733933e-02\n15 Linear |R| = 3.701407e-02\n16 Linear |R| = 3.513853e-02\n17 Linear |R| = 3.199188e-02\n18 Linear |R| = 1.558786e-02\n19 Linear |R| = 3.965979e-03\n20 Linear |R| = 9.530404e-04\n21 Linear |R| = 2.251082e-04\n1 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 25.04 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.302308e+01\n  2 Linear |R| = 3.834077e+01\n  3 Linear |R| = 2.300318e+01\n  4 Linear |R| = 2.012377e+00\n  5 Linear |R| = 8.766623e-01\n  6 Linear |R| = 3.464290e-01\n  7 Linear |R| = 2.344327e-01\n  8 Linear |R| = 2.106147e-01\n  9 Linear |R| = 2.035869e-01\n 10 Linear |R| = 1.985982e-01\n 11 Linear |R| = 1.813393e-01\n 12 Linear |R| = 1.248452e-01\n 13 Linear |R| = 8.541414e-02\n 14 Linear |R| = 7.909337e-02\n 15 Linear |R| = 7.833610e-02\n 16 Linear |R| = 7.488472e-02\n 17 Linear |R| = 7.049844e-02\n 18 Linear |R| = 3.887895e-02\n 19 Linear |R| = 1.013263e-02\n 20 Linear |R| = 2.448030e-03\n 21 Linear |R| = 5.787350e-04\n 22 Linear |R| = 1.525261e-04\n\n2 Nonlinear |R| = 4.704515e+01\nComputing Jacobian...                                                                [ 24.76 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.307058e+01\n  2 Linear |R| = 2.709332e+01\n  3 Linear |R| = 1.083994e+01\n  4 Linear |R| = 8.173083e-01\n  5 Linear |R| = 3.566269e-01\n  6 Linear |R| = 1.471922e-01\n  7 Linear |R| = 1.046948e-01\n  8 Linear |R| = 9.587144e-02\n  9 Linear |R| = 9.296790e-02\n 10 Linear |R| = 9.062121e-02\n 11 Linear |R| = 8.219277e-02\n 12 Linear |R| = 5.636664e-02\n 13 Linear |R| = 4.074679e-02\n 14 Linear |R| = 3.849088e-02\n 15 Linear |R| = 3.815589e-02\n 16 Linear |R| = 3.624245e-02\n 17 Linear |R| = 3.307339e-02\n 18 Linear |R| = 1.623796e-02\n 19 Linear |R| = 4.136355e-03\n 20 Linear |R| = 9.943219e-04\n 21 Linear |R| = 2.348348e-04\n\n3 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 26.18 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.306078e+01\n  2 Linear |R| = 3.084999e+01\n  3 Linear |R| = 1.288230e+01\n  4 Linear |R| = 9.004115e-01\n  5 Linear |R| = 3.928069e-01\n  6 Linear |R| = 1.609914e-01\n  7 Linear |R| = 1.136747e-01\n  8 Linear |R| = 1.038217e-01\n  9 Linear |R| = 1.006347e-01\n 10 Linear |R| = 9.811167e-02\n 11 Linear |R| = 8.909113e-02\n 12 Linear |R| = 6.112584e-02\n 13 Linear |R| = 4.386958e-02\n 14 Linear |R| = 4.132763e-02\n 15 Linear |R| = 4.096275e-02\n 16 Linear |R| = 3.895374e-02\n 17 Linear |R| = 3.573005e-02\n 18 Linear |R| = 1.782920e-02\n 19 Linear |R| = 4.553604e-03\n 20 Linear |R| = 1.095399e-03\n 21 Linear |R| = 2.587359e-04\n\n4 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 26.04 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.307157e+01\n  2 Linear |R| = 3.020308e+01\n  3 Linear |R| = 1.243034e+01\n  4 Linear |R| = 8.688552e-01\n  5 Linear |R| = 3.790824e-01\n  6 Linear |R| = 1.557582e-01\n  7 Linear |R| = 1.102451e-01\n  8 Linear |R| = 1.007833e-01\n  9 Linear |R| = 9.770515e-02\n 10 Linear |R| = 9.524958e-02\n 11 Linear |R| = 8.646104e-02\n 12 Linear |R| = 5.930867e-02\n 13 Linear |R| = 4.268652e-02\n 14 Linear |R| = 4.025295e-02\n 15 Linear |R| = 3.989417e-02\n 16 Linear |R| = 3.791675e-02\n 17 Linear |R| = 3.472596e-02\n 18 Linear |R| = 1.722401e-02\n 19 Linear |R| = 4.394496e-03\n 20 Linear |R| = 1.056707e-03\n 21 Linear |R| = 2.496946e-04\n\n5 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 28.35 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.304933e+01\n  2 Linear |R| = 2.985834e+01\n  3 Linear |R| = 1.298532e+01\n  4 Linear |R| = 1.091720e+00\n  5 Linear |R| = 4.757846e-01\n  6 Linear |R| = 1.927892e-01\n  7 Linear |R| = 1.343797e-01\n  8 Linear |R| = 1.221407e-01\n  9 Linear |R| = 1.182941e-01\n 10 Linear |R| = 1.153463e-01\n 11 Linear |R| = 1.049099e-01\n 12 Linear |R| = 7.205416e-02\n 13 Linear |R| = 5.095757e-02\n 14 Linear |R| = 4.780311e-02\n 15 Linear |R| = 4.737423e-02\n 16 Linear |R| = 4.511669e-02\n 17 Linear |R| = 4.174166e-02\n 18 Linear |R| = 2.147072e-02\n 19 Linear |R| = 5.513581e-03\n 20 Linear |R| = 1.327706e-03\n 21 Linear |R| = 3.137261e-04\n\n6 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 25.10 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.307939e+01\n  2 Linear |R| = 2.401051e+01\n  3 Linear |R| = 9.197900e+00\n  4 Linear |R| = 7.139924e-01\n  5 Linear |R| = 3.117261e-01\n  6 Linear |R| = 1.300695e-01\n  7 Linear |R| = 9.354471e-02\n  8 Linear |R| = 8.599613e-02\n  9 Linear |R| = 8.344489e-02\n 10 Linear |R| = 8.131712e-02\n 11 Linear |R| = 7.362485e-02\n 12 Linear |R| = 5.045351e-02\n 13 Linear |R| = 3.688041e-02\n 14 Linear |R| = 3.496777e-02\n 15 Linear |R| = 3.466708e-02\n 16 Linear |R| = 3.287024e-02\n 17 Linear |R| = 2.975432e-02\n 18 Linear |R| = 1.425252e-02\n 19 Linear |R| = 3.617103e-03\n 20 Linear |R| = 8.686243e-04\n 21 Linear |R| = 2.051354e-04\n\n7 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 25.07 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.303152e+01\n  2 Linear |R| = 3.611542e+01\n  3 Linear |R| = 1.944491e+01\n  4 Linear |R| = 1.719531e+00\n  5 Linear |R| = 7.489597e-01\n  6 Linear |R| = 2.974815e-01\n  7 Linear |R| = 2.025416e-01\n  8 Linear |R| = 1.824215e-01\n  9 Linear |R| = 1.764072e-01\n 10 Linear |R| = 1.720679e-01\n 11 Linear |R| = 1.569840e-01\n 12 Linear |R| = 1.080206e-01\n 13 Linear |R| = 7.441388e-02\n 14 Linear |R| = 6.912281e-02\n 15 Linear |R| = 6.846940e-02\n 16 Linear |R| = 6.539606e-02\n 17 Linear |R| = 6.136257e-02\n 18 Linear |R| = 3.335076e-02\n 19 Linear |R| = 8.662432e-03\n 20 Linear |R| = 2.091094e-03\n 21 Linear |R| = 4.943804e-04\n 22 Linear |R| = 1.302770e-04\n\n8 Nonlinear |R| = 4.704515e+01\nComputing Jacobian...                                                                [ 24.76 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.307519e+01\n  2 Linear |R| = 2.657255e+01\n  3 Linear |R| = 1.053262e+01\n  4 Linear |R| = 7.967575e-01\n  5 Linear |R| = 3.476940e-01\n  6 Linear |R| = 1.437851e-01\n  7 Linear |R| = 1.024725e-01\n  8 Linear |R| = 9.390363e-02\n  9 Linear |R| = 9.107040e-02\n 10 Linear |R| = 8.876738e-02\n 11 Linear |R| = 8.048673e-02\n 12 Linear |R| = 5.518773e-02\n 13 Linear |R| = 3.997598e-02\n 14 Linear |R| = 3.778890e-02\n 15 Linear |R| = 3.745987e-02\n 16 Linear |R| = 3.556915e-02\n 17 Linear |R| = 3.241478e-02\n 18 Linear |R| = 1.584320e-02\n 19 Linear |R| = 4.032939e-03\n 20 Linear |R| = 9.692530e-04\n 21 Linear |R| = 2.289311e-04\n\n9 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 29.09 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.306162e+01\n  2 Linear |R| = 2.855040e+01\n  3 Linear |R| = 1.175842e+01\n  4 Linear |R| = 8.858145e-01\n  5 Linear |R| = 3.863992e-01\n  6 Linear |R| = 1.585615e-01\n  7 Linear |R| = 1.121015e-01\n  8 Linear |R| = 1.024297e-01\n  9 Linear |R| = 9.929153e-02\n 10 Linear |R| = 9.679741e-02\n 11 Linear |R| = 8.787373e-02\n 12 Linear |R| = 6.028676e-02\n 13 Linear |R| = 4.330405e-02\n 14 Linear |R| = 4.081971e-02\n 15 Linear |R| = 4.046215e-02\n 16 Linear |R| = 3.846858e-02\n 17 Linear |R| = 3.525401e-02\n 18 Linear |R| = 1.754917e-02\n 19 Linear |R| = 4.480427e-03\n 20 Linear |R| = 1.077652e-03\n 21 Linear |R| = 2.545206e-04\n\n10 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 26.22 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.305443e+01\n  2 Linear |R| = 3.263520e+01\n  3 Linear |R| = 1.472458e+01\n  4 Linear |R| = 1.082731e+00\n  5 Linear |R| = 4.720367e-01\n  6 Linear |R| = 1.913067e-01\n  7 Linear |R| = 1.333964e-01\n  8 Linear |R| = 1.212717e-01\n  9 Linear |R| = 1.174586e-01\n 10 Linear |R| = 1.145365e-01\n 11 Linear |R| = 1.041859e-01\n 12 Linear |R| = 7.154657e-02\n 13 Linear |R| = 5.066594e-02\n 14 Linear |R| = 4.751828e-02\n 15 Linear |R| = 4.708700e-02\n 16 Linear |R| = 4.484697e-02\n 17 Linear |R| = 4.148410e-02\n 18 Linear |R| = 2.130155e-02\n 19 Linear |R| = 5.468027e-03\n 20 Linear |R| = 1.316746e-03\n 21 Linear |R| = 3.111767e-04\n\n11 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 25.16 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.306326e+01\n  2 Linear |R| = 2.995628e+01\n  3 Linear |R| = 1.268461e+01\n  4 Linear |R| = 9.471656e-01\n  5 Linear |R| = 4.130735e-01\n  6 Linear |R| = 1.687568e-01\n  7 Linear |R| = 1.187296e-01\n  8 Linear |R| = 1.082952e-01\n  9 Linear |R| = 1.049471e-01\n 10 Linear |R| = 1.023202e-01\n 11 Linear |R| = 9.295412e-02\n 12 Linear |R| = 6.379294e-02\n 13 Linear |R| = 4.559661e-02\n 14 Linear |R| = 4.290700e-02\n 15 Linear |R| = 4.252617e-02\n 16 Linear |R| = 4.045628e-02\n 17 Linear |R| = 3.720114e-02\n 18 Linear |R| = 1.872023e-02\n 19 Linear |R| = 4.788134e-03\n 20 Linear |R| = 1.152111e-03\n 21 Linear |R| = 2.721735e-04\n\n12 Nonlinear |R| = 4.704515e+01\nComputing Jacobian...                                                                [ 25.09 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.305442e+01\n  2 Linear |R| = 3.166961e+01\n  3 Linear |R| = 1.395377e+01\n  4 Linear |R| = 1.032679e+00\n  5 Linear |R| = 4.502661e-01\n  6 Linear |R| = 1.829751e-01\n  7 Linear |R| = 1.279870e-01\n  8 Linear |R| = 1.164873e-01\n  9 Linear |R| = 1.128457e-01\n 10 Linear |R| = 1.100331e-01\n 11 Linear |R| = 1.000450e-01\n 12 Linear |R| = 6.868811e-02\n 13 Linear |R| = 4.879475e-02\n 14 Linear |R| = 4.581563e-02\n 15 Linear |R| = 4.540499e-02\n 16 Linear |R| = 4.323068e-02\n 17 Linear |R| = 3.990544e-02\n 18 Linear |R| = 2.035015e-02\n 19 Linear |R| = 5.217301e-03\n 20 Linear |R| = 1.256092e-03\n 21 Linear |R| = 2.967613e-04\n\n13 Nonlinear |R| = 4.704515e+01\nComputing Jacobian....                                                               [ 25.46 s] [    0 MB]\n  0 Linear |R| = 4.704515e+01\n  1 Linear |R| = 4.304395e+01\n  2 Linear |R| = 3.500874e+01\n  3 Linear |R| = 1.699315e+01\n  4 Linear |R| = 1.247285e+00\n  5 Linear |R| = 5.436404e-01\n  6 Linear |R| = 2.187034e-01\n  7 Linear |R| = 1.512544e-01\n  8 Linear |R| = 1.370708e-01\n  9 Linear |R| = 1.326907e-01\n 10 Linear |R| = 1.294082e-01\n 11 Linear |R| = 1.178470e-01\n 12 Linear |R| = 8.098038e-02\n 13 Linear |R| = 5.682367e-02\n 14 Linear |R| = 5.311163e-02\n 15 Linear |R| = 5.262605e-02\n 16 Linear |R| = 5.018395e-02\n 17 Linear |R| = 4.665573e-02\n 18 Linear |R| = 2.442737e-02\n 19 Linear |R| = 6.294058e-03\n 20 Linear |R| = 1.517118e-03\n 21 Linear |R| = 3.584755e-04\n\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 13\nFinished Solving                                                                       [1289.36 s] [   22 MB]\nSolve Did NOT Converge!\nAborting as solve did not converge\nFinished Executing",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1851678",
                          "updatedAt": "2022-06-11T16:08:21Z",
                          "publishedAt": "2021-12-21T09:26:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ScouperLH"
                          },
                          "bodyText": "New version, new error message:\nThe good news is that we can at least calculate!\nThe bad news is that the nonlinear residuals do not converge at all :\uff08\nDo you have any suggestions?",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1851724",
                          "updatedAt": "2022-06-11T16:08:36Z",
                          "publishedAt": "2021-12-21T09:36:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThere's some general advice on failed solves here\nhttps://mooseframework.inl.gov/application_usage/failed_solves.html\nAlso,\nYou can first try disabling the line search, as it doesnt always succeed.\nIn the [Executioner], add line_search = none\nThen you can try to tighten the linear solve, since 1e-4 isnt that tight so the solution could be bouncing around\nYou can try smaller time steps and ramp them up once you have a good initialisation.\nSimilarly, I would try to bump up viscosity by like 1000 and solve a more diffusive problem first. Then ramp down viscosity to the real value\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1853644",
                          "updatedAt": "2022-06-11T16:08:36Z",
                          "publishedAt": "2021-12-21T16:06:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ScouperLH"
                  },
                  "bodyText": "Hello everyone, good news!\nAfter a marathon-like test, we can get the result. During this period, I am very grateful to the two experts @GiudGiud  @lindsayad  for helping me. I am deeply sorry for the bother you in the past month. Thank you again!",
                  "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1917219",
                  "updatedAt": "2022-06-11T16:07:18Z",
                  "publishedAt": "2022-01-06T08:39:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I'm so happy you were able to get a result! Nice work @ScouperLH. Happy to help although @GiudGiud did the lion's share",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1919475",
                          "updatedAt": "2022-06-11T16:07:34Z",
                          "publishedAt": "2022-01-06T15:55:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "please mark whatever answer was the \"most helpful\" so that we can consider this discussion \"answered\"",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1919480",
                          "updatedAt": "2022-06-11T16:07:34Z",
                          "publishedAt": "2022-01-06T15:56:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ScouperLH"
                          },
                          "bodyText": "please mark whatever answer was the \"most helpful\" so that we can consider this discussion \"answered\"\n\nIt's Ok",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1922201",
                          "updatedAt": "2022-06-11T16:07:34Z",
                          "publishedAt": "2022-01-07T02:12:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Glad this is working!\nhave a good one,\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/19589#discussioncomment-1922548",
                          "updatedAt": "2022-06-12T07:25:59Z",
                          "publishedAt": "2022-01-07T04:13:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "new effective porosity and effective permeability model implementation",
          "author": {
            "login": "rksin8"
          },
          "bodyText": "Hi,\nI want to implement these two relations for effective porosity and effective permeability respectively:\n\n\nI modified the existing moose implementation as:\n\nEffective porosity:\n\nvoid\nPorosityFromStrainDumux::computeQpProperties()\n{\n  const unsigned qp_to_use =\n      (_nodal_material && _bnd  ? nearestQP(_qp) : _qp);\n\n  _porosity[_qp] = (_initial_porosity - (*_vol_strain_qp)[qp_to_use] )/(1.0 -(*_vol_strain_qp)[qp_to_use]);\n\n  if (_porosity[_qp] < _residual_porosity)\n  {\n     _porosity[_qp] = _residual_porosity;\n  }\n  _dporosity_dvar[_qp].resize(_num_var);\n  for (unsigned int v = 0; v < _num_var; ++v)\n    _dporosity_dvar[_qp][v] = 0;\n\n  _dporosity_dgradvar[_qp].resize(_num_var);\n  for (unsigned int v = 0; v < _num_var; ++v)\n    _dporosity_dgradvar[_qp][v] = 0;\n}\n\n\nEffective permeability:\n\nvoid\nPermeabilityKozenyCarmanRutqvist::computeQpProperties()\n{\n  _permeability_qp[_qp] =\n      _k_anisotropy * _k0 * std::exp(22.2* (_porosity_qp[_qp]/_phi0 - 1));\n\n  _dpermeability_qp_dvar[_qp].resize(_num_var, RealTensorValue());\n  for (unsigned int v = 0; v < _num_var; ++v)\n    _dpermeability_qp_dvar[_qp][v] = _dporosity_qp_dvar[_qp][v] * _permeability_qp[_qp] * 22.2/_phi0;\n\n  _dpermeability_qp_dgradvar[_qp].resize(LIBMESH_DIM);\n  for (unsigned i = 0; i < LIBMESH_DIM; ++i)\n  {\n    _dpermeability_qp_dgradvar[_qp][i].resize(_num_var, RealTensorValue());\n    for (unsigned int v = 0; v < _num_var; ++v)\n      _dpermeability_qp_dgradvar[_qp][i][v] = \n          _dporosity_qp_dgradvar[_qp][v](i) * _permeability_qp[_qp] * 22.2/_phi0;\n  }\n}\n\nBut now having convergence issue.  Would you please confirm these implementations are correct? Thank you!",
          "url": "https://github.com/idaholab/moose/discussions/19962",
          "updatedAt": "2022-06-11T09:09:54Z",
          "publishedAt": "2022-01-06T00:48:57Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Your perm looks OK - hopefully i haven't missed anything there.  The only problem i foresee is the \"22.2\": since it's reasonably large, the exponential changes will be huge, and MOOSE will probably experience poor convergence.\nYour porosity derivatives are incorrect.  They need to include things like (*_dvol_strain_qp_dvar)[qp_to_use][pvar].  You can see examples of this in PorousFlowPorosity and PorousFlowPorosityExponentialBase.  This is probably the cause of your convergence problems.  However, another problem is the cutoff at residual porosity: any \"if\" conditions like you have are likely to cause convergence problems because of the \"sharp corner\" at residual porosity.",
                  "url": "https://github.com/idaholab/moose/discussions/19962#discussioncomment-1916019",
                  "updatedAt": "2022-06-11T09:09:58Z",
                  "publishedAt": "2022-01-06T01:46:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}