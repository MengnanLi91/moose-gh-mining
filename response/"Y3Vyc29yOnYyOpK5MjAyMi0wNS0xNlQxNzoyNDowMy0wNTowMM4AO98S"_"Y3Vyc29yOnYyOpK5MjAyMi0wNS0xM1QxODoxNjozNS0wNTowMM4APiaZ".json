{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wNS0xM1QxODoxNjozNS0wNTowMM4APiaZ"
    },
    "edges": [
      {
        "node": {
          "title": "1d Spring Dampers",
          "author": {
            "login": "Edward-Eth"
          },
          "bodyText": "Hi all, simple question here. I've done a bit of digging through the source docs and have struggled to find a simple way of implementing 1D spring dampers in a model. Is there no simple inbuilt tool for this purpose? Just checking there isn't before I make one myself.",
          "url": "https://github.com/idaholab/moose/discussions/20770",
          "updatedAt": "2022-07-08T00:12:33Z",
          "publishedAt": "2022-04-12T13:36:48Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@jiangwen84 @gambka any hints on this?",
                  "url": "https://github.com/idaholab/moose/discussions/20770#discussioncomment-2568245",
                  "updatedAt": "2022-07-08T00:12:33Z",
                  "publishedAt": "2022-04-14T16:45:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@Edward-Eth in which context is this?\nIs this for numerical or physical relaxation? Seems like the latter.\nAre they going to be attached to DOFs ? How many?",
                          "url": "https://github.com/idaholab/moose/discussions/20770#discussioncomment-2755123",
                          "updatedAt": "2022-07-08T00:12:34Z",
                          "publishedAt": "2022-05-15T19:14:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Edward-Eth"
                          },
                          "bodyText": "This is as a simplification of a physical component in a structure. I suppose they'd be attached to displacements and velocities between nodes. I'm suspecting that this could actually be achieved by the tactical application of DynamicTensorMechanics to 1D mesh elements.",
                          "url": "https://github.com/idaholab/moose/discussions/20770#discussioncomment-2759710",
                          "updatedAt": "2022-07-08T00:12:34Z",
                          "publishedAt": "2022-05-16T13:26:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "not sure.\nThis seems like an ODE that would live on a single node to me. PLease have a look at the NodalKernel system and let me know if it seems like the way to do this\nhttps://mooseframework.inl.gov/syntax/NodalKernels/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/20770#discussioncomment-2760019",
                          "updatedAt": "2022-07-08T00:12:36Z",
                          "publishedAt": "2022-05-16T14:03:03Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Is the function to calculate 'EffectiveStrain' in 'RankTwoScalarTools' invalid now?",
          "author": {
            "login": "echo1115"
          },
          "bodyText": "According to https://mooseframework.inl.gov/source/utils/RankTwoScalarTools.html , the effective plastic strain or effective creep strain could be obtained by using the ' effectiveStrain' method.\n\nBut acturally in MOOSE:\nhttps://github.com/idaholab/moose/blob/25abc3b0f580842db2924dcdb643bbf4b99406d1/modules/tensor_mechanics/include/utils/RankTwoScalarTools.h ,\nthe option of  ' effectiveStrain'  corresponds to a 'mooseError'.",
          "url": "https://github.com/idaholab/moose/discussions/20979",
          "updatedAt": "2022-06-22T05:33:10Z",
          "publishedAt": "2022-05-07T02:35:52Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "The error message is accurate, which is also consistent with the documentation.",
                  "url": "https://github.com/idaholab/moose/discussions/20979#discussioncomment-2708087",
                  "updatedAt": "2022-06-22T05:33:20Z",
                  "publishedAt": "2022-05-08T04:07:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Does that means  if we want to get the effective plastic strain or effective creep strain\uff0cother method should be adopted or we would get an error ?",
                          "url": "https://github.com/idaholab/moose/discussions/20979#discussioncomment-2708366",
                          "updatedAt": "2022-06-22T05:33:19Z",
                          "publishedAt": "2022-05-08T07:22:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "yes you want to be using the new API that the error code is mentioning.\nCan you not update to use that one?",
                          "url": "https://github.com/idaholab/moose/discussions/20979#discussioncomment-2755419",
                          "updatedAt": "2022-06-22T05:33:20Z",
                          "publishedAt": "2022-05-15T21:09:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "yes i can create a new 'Auxkernel' and use \"RankTwoScalarTools::effectiveStrain()\" to get the effective strain. Thanks for your reply @hugary1995  @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/20979#discussioncomment-2757391",
                          "updatedAt": "2022-06-22T05:33:20Z",
                          "publishedAt": "2022-05-16T07:48:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "the use of displaced mesh",
          "author": {
            "login": "xiaojbing"
          },
          "bodyText": "I want to implement the displaced mesh configuration by using the \"displacement='disp_x disp_y'\" and \"_use_displaced_mesh=true\" . The mesh can now be seen moving over time on the console, but the solve show the same results as if the displacement field had not been applied. I suspect that the coordinate values do not change at each step, resulting in results that are not related to the moving mesh. Is there any way that the coordinate values can be changed at each step to affect the calculation of the equations.\n#[GlobalParams]\n  #order = FIRST\n  #family = LAGRANGE\n  #disp_x = disp_x\n  #disp_y = disp_y\n  #displacements = 'disp_x disp_y'\n#[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n  #use_displaced_mesh = true\n[]\n\n[Mesh]\n  file = grids/test03.exo\n  use_displaced_mesh = true\n  displacements = 'disp_x disp_y'\n\n  block_id = 3\n  block_name = 'fluid'\n\n  boundary_id = '1 2'\n  boundary_name = 'wall far'\n  uniform_refine = 1\n[]\n\n[Problem]\n  type = EulerProblem\n  mach = 0.6\n  attack = 0\n  jacobian_delay = 1\n  flux_type = HLL\n\n  [./Kernels]\n    use_displaced_mesh = true\n    displacements = 'disp_x disp_y'\n    type = CFDCellKernel\n    shock_indicator = indicator\n    block = '3'\n  [../]\n\n  [./DGKernels]\n    type = CFDFaceKernel\n    block = '3'\n  [../]\n[]\n\n[AuxVariables]\n  [./disp_x]\n    order = FIRST\n    family = LAGRANGE\n    block = '3'\n  [../]\n\n  [./disp_y]\n    order = FIRST\n    family = LAGRANGE\n    block = '3'\n  [../]\n[]\n\n[AuxKernels]\n  [./disp_x_kernel]\n    use_displaced_mesh = true\n    type = FunctionAux\n    variable = disp_x\n    function = 'sqrt(x^2+y^2)*cos(atan(y/x)-4.86/360*2*pi-2.44*sin(0.1620*t)/360*2*pi) - x'\n    block = '3'\n  [../]\n\n  [./disp_y_kernel]\n    use_displaced_mesh = true\n    type = FunctionAux\n    variable = disp_y\n    function = 'sqrt(x^2+y^2)*sin(atan(y/x)-4.86/360*2*pi-2.44*sin(0.1620*t)/360*2*pi) - y'\n    block = '3'\n  [../]\n[]\n\n[Variables]\n  order = CONSTANT\n  family = MONOMIAL\n  variables = 'density momx momy momz rhoe'\n[]\n\n[ICs]\n  type = CFDPassFlowIC\n[]\n\n[BoundaryCondition]\n  [./euler_far_field]\n    #use_displaced_mesh = true\n    type = FarFieldPressure\n    boundary = '2'\n  [../]\n\n  [./euler_wall]\n    #use_displaced_mesh = true\n    type = RotarySlipWall\n    boundary = '1'\n  [../]\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Adaptivity]\n  #marker = marker\n  #max_h_level = 2\n  [./Indicators]\n    [./indicator]\n      type =  DensityJumpIndicator\n      variable = density\n      scale = 0\n    [../]\n  [../]\n  [./Markers]\n    [./marker]\n      type = ErrorMaxFractionMarker\n      indicator = indicator\n      coarsen = 0.7\n      refine = 0.5\n    [../]\n  [../]\n[]\n\n\n[Executioner]\n  no_fe_reinit = true\n  type = Transient\n  solve_type = NEWTON\n  num_steps = 1000\n  l_tol = 5e-02\n  l_max_its = 20\n\n  nl_max_its = 20\n  nl_rel_tol = 0.999999\n\n  [./TimeStepper]\n    type = RatioTimeStepper\n    dt = 1E-02\n    ratio = 2\n    step = 5\n    max_dt = 0.5\n  [../]\n[]\n\n[CFDForce]\n  [cfdforce]\n    #use_displaced_mesh = true\n    type = CFDForceUserObject\n    boundary = 'wall'\n    ref_point = '0 0 0'\n    ref_length = 1\n  []\n[]\n\n[Postprocessors]\n  [./residuals]\n    type = VariableResidual\n    variable = density\n  [../]\n  [cd]\n    type = CFDForcePostprocessor3\n    solution = cfdforce\n  []\n  [cl]\n    type = CFDForcePostprocessor2\n    solution = cfdforce\n  []\n[]\n\n[Outputs]\n  csv = true\n  checkpoint = true\n  #show = 'density momx momy momz rhoe disp_x disp_y'\n\n  [./console]\n    type = Console\n    perf_log = true\n    execute_on = 'linear nonlinear'\n  [../]\n\n  [./exodus]\n    type = Exodus\n    execute_on = 'initial timestep_end'\n    interval = 2\n  [../]\n\n  #[./tecplot]\n    #type = Tecplot\n    #execute_on = 'initial timestep_end'\n    #interval = 10\n  #[../]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/20583",
          "updatedAt": "2022-06-09T01:48:25Z",
          "publishedAt": "2022-03-17T13:26:05Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI assume that by the cloud you mean the exodus output?\nHave you tried to output the displaced mesh? For this you will need an exodus block in Outputs with the use_displaced parameter set to true.\n[Outputs]\n  [exo]\n    type = Exodus\n    use_displaced = true\n  []\n[]\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2381060",
                  "updatedAt": "2022-06-22T18:24:11Z",
                  "publishedAt": "2022-03-17T14:13:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xiaojbing"
                          },
                          "bodyText": "Thank you so much. But I have another question. When I use the  \"use_displaced_mesh=true\" in the [DGKernel] block, I get an error when I run it, but I found an example inputfile shows that this parameter can be used in the block, so what is the reason for this error?",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2387466",
                          "updatedAt": "2022-06-22T18:24:15Z",
                          "publishedAt": "2022-03-18T12:38:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nSo you hit a seg fault. You have narrowed the issue down to CFDFaceKernel ?\nWhich application is that from? I dont see it in the MOOSE documentation.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2388427",
                          "updatedAt": "2022-06-22T18:24:25Z",
                          "publishedAt": "2022-03-18T15:04:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xiaojbing"
                          },
                          "bodyText": "In my input file, I found that the displacements='disp_x disp_y disp_z' in the [mesh] block and the use_displaced_ mesh=true in the\n[DGkernels] block would conflict, and if both sytax were added at the same time, an error would appear on the console, whereas if the true was changed to false, it would work fine.\n\nI found that the reason may be that use displaced mesh is false by default, which causes it not to run after I set it to true in the input\nfile, and I wonder if there is a way to change this mandatory-like parameter.",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2452365",
                          "updatedAt": "2022-06-22T18:24:26Z",
                          "publishedAt": "2022-03-28T12:58:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ADDGDiffusion works fine with displaced meshes. There is an example here:\nhttps://github.com/idaholab/moose/blob/next/test/tests/dgkernels/dg_displacement/dg_displacement.i\nI recommend you use our debugging workflow here\nhttps://mooseframework.inl.gov/application_development/debugging.html\nto isolate the problem down to a kernel. I suspect the CFDFaceKernel.",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2453340",
                          "updatedAt": "2022-08-14T08:24:03Z",
                          "publishedAt": "2022-03-28T14:50:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xiaojbing"
                          },
                          "bodyText": "thank you...  But I find that ADDGDiffusion inherits from DGKernel, and the CFDFaceKernel what I am using also inherits from DGKernel. In the dg_displacement.i, the ADDGDiffusion have not used the paramete \"boundary = \" , and in this case it could use the paramete use_displaced_mesh = true . But in my input file. I have to use the paramete boundary =  to run the use_displaced_mesh = true , but this also leads to unreasonable results.",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2530224",
                          "updatedAt": "2022-08-14T08:24:03Z",
                          "publishedAt": "2022-04-08T11:11:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This is a problem with your implementation of this DGKernel.\nPlease see these instructions for debugging.\nhttps://mooseframework.inl.gov/application_development/debugging.html\nonce you have obtained a backtrace in debug mode for this error we may be able to help you\nDo not add boundary = if the kernel is to be executed in the volume",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2545501",
                          "updatedAt": "2022-08-14T08:24:03Z",
                          "publishedAt": "2022-04-11T14:59:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xiaojbing"
                          },
                          "bodyText": "Thank you for your patience. I can run this simulation now. But I still hava some qustions to ask.\nI create an application named parakeet to slove CFD problems, and I add my own physics in it. Now I want to use displaced mesh in input file.\nIn parakeet, The CFDCellKernel inherit Kernel.C. The CFDFaceKernel inherit DGKernel.C. The CFDBC inherit IntegratedBC.C.\nI set the displacement field to 0 and then used use_displaced_mesh=true  only in [Kernel], [DGKernel] and [BCs] respectively. The expected results should be same as if I don't add displacement. But  the results are reasonable when I only use it in [kernel], the other two situation are not as expected.\nI had tried to annotation code to find the reason. And I found that when the code in the red box was removed in the CFDFaceKernel.CPP and CFDBC.CPP, the results will be reasonable. But the removed code  is only related to the time-marching, which should only affect convergence,  not calculation results.\nI have also tried adjusting the convergence exponent to reduce the residuals to a very low level and the results are still unreasonable. So the reason for the unreasonable results is not convergence. Am I overlooking something, is there anything else I need to pay special attention to when using displaced mesh?\nCFDFaceKernel.cpp & CFDBC.cpp:\n\ninput file:\n[Mesh]\n  displacements = 'disp_x disp_y'\n  file = grids/test03.exo\n[]\n\n[Problem]\n  type = EulerProblem\n  mach = 0.15\n\n  [./Kernels]\n    disp_x = disp_x\n    disp_y = disp_y\n    #use_displaced_mesh = true\n    type = CFDCellKernel\n  [../]\n\n  [./DGKernels]\n    disp_x = disp_x\n    disp_y = disp_y\n    #use_displaced_mesh = true\n    type = CFDFaceKernel\n  [../]\n[]\n\n[AuxVariables]\n  [./disp_x]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./disp_y]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n[]\n\n[AuxKernels]\n  [./disp_x_kernel]\n    type = FunctionAux\n    variable = disp_x\n    function = '0'\n  [../]\n  [./disp_y_kernel]\n    type = FunctionAux\n    variable = disp_y\n    function = '0'\n  [../]\n[]\n\n[Variables]\n  order = CONSTANT\n  family = MONOMIAL\n  variables = 'density momx momy momz rhoe'\n[]\n\n[ICs]\n  type = CFDPassFlowIC\n[]\n\n[BoundaryCondition]\n  [./euler_far_field]\n    use_displaced_mesh = true\n    type = FarFieldPressure\n    boundary = far\n  [../]\n\n  [./euler_wall]\n    use_displaced_mesh = true\n    type = SlipWall\n    boundary = wall\n  [../]\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n    solve_type = 'NEWTON'\n  [../]\n[]\n\n[Executioner]\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'lu'\n  type = Transient\n  solve_type = PJFNK\n  scheme = bdf2\n\n  line_search = 'none'\n  nl_abs_tol = 1e-20\n  start_time = 0.0\n  timestep_tolerance = 1e-6\n\n  num_steps = 1000\n  l_tol = 1e-10\n  l_max_its = 20\n\n  nl_max_its = 20\n  nl_rel_tol = 1e-10\n\n  dt = 0.01\n  end_time = 5.0\n[]\n\n[Outputs]\n  csv = true\n  checkpoint = true\n  [./console]\n    type = Console\n    perf_log = true\n    execute_on = 'linear nonlinear'\n  [../]\n  [./exodus]\n    type = Exodus\n    execute_on = 'initial timestep_end'\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2590744",
                          "updatedAt": "2022-08-14T08:24:03Z",
                          "publishedAt": "2022-04-19T07:16:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Honestly not sure.\nI would look at tensor_mechanics and examine how they use the displaced variables in their FE solve.\nIf you can find other examples of DGKernels adapted for the displaced mesh that's also worth taking into consideration.\nA 0 displacement should indeed not affect the solve",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2595833",
                          "updatedAt": "2022-08-14T08:24:35Z",
                          "publishedAt": "2022-04-19T19:41:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xiaojbing"
                          },
                          "bodyText": "Thank you very much, I will try.",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2597400",
                          "updatedAt": "2022-08-14T08:24:35Z",
                          "publishedAt": "2022-04-20T01:07:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@xiaojbing any update on this?\nDid you find the problem?",
                          "url": "https://github.com/idaholab/moose/discussions/20583#discussioncomment-2755146",
                          "updatedAt": "2022-08-14T08:24:35Z",
                          "publishedAt": "2022-05-15T19:24:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Applying periodic boundary conditions on subdomain restricted variables",
          "author": {
            "login": "ngrilli"
          },
          "bodyText": "Dear MOOSE Users,\nAs the title says, I would like to know if it is possible in MOOSE to apply\nperiodic boundary conditions on variables that are restricted to a subdomain/block.\nOf course the boundaries on which I want to apply the periodic BC will be the\nboundaries of the subdomain.\nDoes anybody have a successful example of this?\nI try to explain what I tried:\nI have a structured mesh and I divide it into\nan \"inner_volume\" and \"outer_volume\".\nIn the inner_volume I use a model with advection,\nrepresenting dislocation transport with some variables that are restricted to the inner_volume.\nI define the surfaces of the inner_volume using SubdomainBoundingBoxGenerator,\nit is just a parallelepiped.\nI use the \"translation\" option to define the periodic BC on the subdomain.\nThe outer_domain has a phenomenological model without transport.\nTensor mechanics kernels are applied everywhere,\nwhile the dislocation variables have their own kernels restricted to inner_volume.\nTwo different materials calculate the stress in the two domains.\nI show the RVE here:\n\nThe results I obtain show that my advected quantity in the inner_volume just accumulates at the boundary,\nindicating that Periodic BC are not applied and standard Neumann BC hold:\n\nMoreover, the variable does not look periodic, so I think the Periodic BC is just skipped.\nI do not get any warning or error though.\nI have to mention the model with transport works very well\nwhen I run the simulation with a single domain, with only the transport model.\nIn that case, I see the periodic boundary conditions applied properly.\nEven though the model is complicated, I have tested it for months with periodic BC\non a single domain and I am sure it works well,\nthe problem only arises when I switch to two domains\nand try to apply periodic BC on the subdomain.\nI tried other things:\n\nuse \"auto\" periodic BC on the whole domain\ndefine the surfaces in gmsh instead\n\nbut in no case I see the periodic BC applied properly on the subdomain\nI attach the complete input file here.\nThank you very much in advance.\nNicol\u00f2\nFullGrain146_to_post.txt",
          "url": "https://github.com/idaholab/moose/discussions/20023",
          "updatedAt": "2022-06-27T00:38:42Z",
          "publishedAt": "2022-01-12T14:55:43Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "I want to add that I checked carefully in paraview that the surfaces I defined are correct and same for the translation vectors.\nIs there any other thing I can try apart from Periodic BC, like some type of constraint or penalty terms between arbitrary nodes in the mesh?\nThank you\nNicol\u00f2",
                  "url": "https://github.com/idaholab/moose/discussions/20023#discussioncomment-1955484",
                  "updatedAt": "2022-06-27T00:38:46Z",
                  "publishedAt": "2022-01-12T15:00:27Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "This issue can be probably reproduced on a smaller and simpler problem, e.g, 2 elements and each one is a subdomain,  correct?",
                          "url": "https://github.com/idaholab/moose/discussions/20023#discussioncomment-1955950",
                          "updatedAt": "2022-06-27T00:38:46Z",
                          "publishedAt": "2022-01-12T15:56:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ngrilli"
                          },
                          "bodyText": "@jiangwen84\nThank you for your answer, sure I will try to produce a minimal example.\nActually I noticed in the MOOSE tests this one:\nhttps://github.com/idaholab/moose/blob/next/test/tests/bcs/periodic/periodic_subdomain_restricted_test.i\nwhich seems to do the same, but I need to check if the result is actually correct.\nI will keep you updated.\nNicol\u00f2",
                          "url": "https://github.com/idaholab/moose/discussions/20023#discussioncomment-1955993",
                          "updatedAt": "2022-06-27T00:38:46Z",
                          "publishedAt": "2022-01-12T16:01:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@ngrilli any update on this?",
                          "url": "https://github.com/idaholab/moose/discussions/20023#discussioncomment-2755116",
                          "updatedAt": "2022-06-27T00:38:46Z",
                          "publishedAt": "2022-05-15T19:11:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error using CHECKPOINT option",
          "author": {
            "login": "Silvia-Caligari"
          },
          "bodyText": "Hi,\nI'm trying to do simulations on a university cluster using the checkpoint moose option and I obtain this error:\nMake sure LIBMESH_HAVE_XDR is defined at build time\n\nThe XDR interface is not available in this installation\n\n[11] /home/caligari/AVFLOW/moose/scripts/../libmesh/src/utils/xdr_cxx.C, line 147, compiled\n\nPMIX ERROR: UNREACHABLE in file ../../../../../../../src/openmpi-4.0.5/opal/mca/pmix/pmix3x/pmix/src/server/pmix_server.c at line 2193\n\nIs any solution available?\nThank you",
          "url": "https://github.com/idaholab/moose/discussions/20711",
          "updatedAt": "2022-06-14T21:21:47Z",
          "publishedAt": "2022-04-05T08:51:25Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nPlease see this answer #20479 (reply in thread)\nYou need to install libtirpc-devel on your cluster.\nIf you cant do that and need to use checkpoint anyway please see this answer:\n#20479 (comment)\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2508365",
                  "updatedAt": "2022-06-14T21:37:58Z",
                  "publishedAt": "2022-04-05T13:51:43Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Silvia-Caligari"
                          },
                          "bodyText": "Thank you for your answer.\nCan you please link me any information about the installation on cluster?\nThank you very much",
                          "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2543819",
                          "updatedAt": "2022-06-14T21:38:04Z",
                          "publishedAt": "2022-04-11T10:57:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This is typically installed by your cluster administrator. You should get in touch with your university cluster administrators",
                          "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2544684",
                          "updatedAt": "2022-06-14T21:38:39Z",
                          "publishedAt": "2022-04-11T13:17:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Silvia-Caligari"
                          },
                          "bodyText": "Thank you for your answer,\nwe have just installed the library, but how can we give to lib mesh the path of the library?",
                          "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2545007",
                          "updatedAt": "2022-06-14T21:38:34Z",
                          "publishedAt": "2022-04-11T14:05:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Did you install it in a non-standard place?\nIf you did not, libmesh will just know",
                          "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2545035",
                          "updatedAt": "2022-07-21T18:25:45Z",
                          "publishedAt": "2022-04-11T14:06:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Silvia-Caligari"
                          },
                          "bodyText": "Yes, it is in a non-std place as our system does not provide that library. How and where can I set the paths to a non-std place?",
                          "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2554720",
                          "updatedAt": "2022-07-21T18:25:45Z",
                          "publishedAt": "2022-04-12T20:01:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Silvia-Caligari"
                          },
                          "bodyText": "We tried using:\nexport libmesh_optional_INCLUDES=/home/caligari/AVFLOW/libtirpc-1.3.2/bin/include/tirpc\nexport CPPFLAGS=-I/home/caligari/AVFLOW/libtirpc-1.3.2/bin/include/\nbut they didn't work. Do you have any suggestions?",
                          "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2559832",
                          "updatedAt": "2022-07-21T18:25:47Z",
                          "publishedAt": "2022-04-13T13:50:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@milljm\nthis is definitely what you need to do, but there may be subtleties",
                          "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2560008",
                          "updatedAt": "2022-07-21T18:25:51Z",
                          "publishedAt": "2022-04-13T14:08:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Silvia-Caligari"
                  },
                  "bodyText": "We tried using:\nexport libmesh_optional_INCLUDES=/home/caligari/AVFLOW/libtirpc-1.3.2/bin/include/tirpc\nexport CPPFLAGS=-I/home/caligari/AVFLOW/libtirpc-1.3.2/bin/include/\nbut they didn't work. Do anyone have any suggestions?",
                  "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2559827",
                  "updatedAt": "2022-06-14T21:38:49Z",
                  "publishedAt": "2022-04-13T13:49:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nIs this solved?\nOr are you happy enough with the binary = false workaround?\nBtw you dont want to discard existing CPP_FLAGS so you may want to have:\nexport CPPFLAGS=$CPPFLAGS -I/home/caligari/AVFLOW/libtirpc-1.3.2/bin/include/\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/20711#discussioncomment-2755112",
                          "updatedAt": "2022-06-14T21:38:49Z",
                          "publishedAt": "2022-05-15T19:11:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Installation issue in Jetstream2 supercomputer",
          "author": {
            "login": "Amir1361"
          },
          "bodyText": "Hello,\nI installed the MOOSE on the Rocky Linux 8. But when I wanted to run the tests, I got the attached error.\noutput.txt\nCould you please help me with this?\nThanks,\nAmir",
          "url": "https://github.com/idaholab/moose/discussions/20741",
          "updatedAt": "2022-07-25T13:45:53Z",
          "publishedAt": "2022-04-07T23:39:13Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Amir\nThe error messages say Application not found so the executable did not build. Could you please report the log of the make command?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2527458",
                  "updatedAt": "2022-07-25T13:45:55Z",
                  "publishedAt": "2022-04-08T00:34:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Amir1361"
                          },
                          "bodyText": "Hi Guillaume,\nThank you for your reply. I have attached the log of the 'make' command.\nMoose_test.txt\nmy_test.txt\nThanks,\nAmir",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2532164",
                          "updatedAt": "2022-04-08T16:12:03Z",
                          "publishedAt": "2022-04-08T16:12:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok now you are getting linking errors with Gffortran. Which platform is this on?",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2532201",
                          "updatedAt": "2022-04-08T16:18:28Z",
                          "publishedAt": "2022-04-08T16:18:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Amir1361"
                          },
                          "bodyText": "I am using XSEDE Cloud computing. For running jobs parallelly, I need to run the jobs over the Slurm. So I made an instance based on Rocky8, but I cannot install MOOSE correctly.",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2532281",
                          "updatedAt": "2022-04-08T16:30:31Z",
                          "publishedAt": "2022-04-08T16:30:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what does this return:\necho $FC $CC $CXX\nwhich mpicc; which mpif90\nmpicc --version",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2533858",
                          "updatedAt": "2022-04-08T22:29:53Z",
                          "publishedAt": "2022-04-08T22:29:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Amir1361"
                          },
                          "bodyText": "Here is the output. Thanks,\nAmir\nresult.txt",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2534732",
                          "updatedAt": "2022-04-09T04:37:43Z",
                          "publishedAt": "2022-04-09T04:37:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello\nDid you do this?\n\n==> For changes to take effect, close and re-open your current shell. <==\n\nAdded mamba to /home/rocky/.bashrc\n\n==> For changes to take effect, close and re-open your current shell. <==\n\nYou need to abide by what mambda tells you.\nAlso, jetstream being a supercomputer as you mentioned, the mamba installation is very unoptimized for it. You should install this way instead:\nhttps://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2537877",
                          "updatedAt": "2022-04-10T02:24:43Z",
                          "publishedAt": "2022-04-10T02:24:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Amir1361"
                          },
                          "bodyText": "Here is the output when I followed up on the mamba orders.\nterminal_text.txt\nI already installed Moose on another supercomputer by Anaconda and it works well.\nAlso, I made another instance and I tried to use the Moose installation for HPC Cluster. Here is the error message while we have python on our system.\nHPC cluster.txt\nThanks,\nAmir",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2540695",
                          "updatedAt": "2022-04-10T20:27:54Z",
                          "publishedAt": "2022-04-10T20:27:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Hey @Amir1361\nI can see the error as\npython: command not found. I was also having the same issue while installing MOOSE on XSEDE cluster. It has python3 command instead of python. I don't know why.\nBut, the solution is that you should make .moose_profile bash file and add following text in it\nPATH=$PATH:$HOME/bin\nexport PATH\nmodule load gcc python cmake\n\nand source the file.\nEvery time you need to run, you should compile the .moose_profile bash file or add those lines in the main .bash file.\nBest\nAvtar",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2541305",
                          "updatedAt": "2022-10-07T01:28:22Z",
                          "publishedAt": "2022-04-11T01:36:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@Amir1361\nthe output of the commands in the conda environment look right, it should install fine now. Just dont do any performance benchmarking off of this and keep in mind you could have performance issues from this install method.\nPlease follow Avtar's advice on installing with the HPC-enabled method and let us know how it goes",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2544660",
                          "updatedAt": "2022-10-07T01:28:22Z",
                          "publishedAt": "2022-04-11T13:16:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Amir1361"
                  },
                  "bodyText": "@GiudGiud Thank you! I am still get error by running the tests in the Moose by Conda:\nMoose_Conda.txt\nThank you @asingh-mit. I put them in the Moose Profile:\nMoose profile.txt\nBut again I got the same error:\nHPC cluster.txt\nThank you!",
                  "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2546261",
                  "updatedAt": "2022-10-07T01:28:29Z",
                  "publishedAt": "2022-04-11T16:45:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Would an alias work for setting python ?\nalias python=python3",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2546418",
                          "updatedAt": "2022-10-07T01:28:30Z",
                          "publishedAt": "2022-04-11T17:06:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Amir1361"
                  },
                  "bodyText": "It does not work. Again I have the python error.",
                  "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2546564",
                  "updatedAt": "2022-10-07T01:28:31Z",
                  "publishedAt": "2022-04-11T17:32:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Put the following in .moose_profile\nPATH=$PATH:$HOME/bin\nexport PATH\nmodule load gcc python cmake\nexport CC=mpicc\nexport CXX=mpicxx\nexport F90=mpif90\nexport F77=mpif77\nexport FC=mpif90\n\nsave the file.\nThen\nsource .moose_profile\nthen try to install",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2546585",
                          "updatedAt": "2022-10-07T01:28:32Z",
                          "publishedAt": "2022-04-11T17:37:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "After source the file, try to run the command python and see if the cluster is recognizing it.",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2546590",
                          "updatedAt": "2022-10-07T01:28:32Z",
                          "publishedAt": "2022-04-11T17:38:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Amir1361"
                  },
                  "bodyText": "Cluster recognizes python now. But I get the same error again.\nHPC cluster.txt",
                  "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2546740",
                  "updatedAt": "2022-10-07T01:28:41Z",
                  "publishedAt": "2022-04-11T18:04:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "hello is this still an issue?",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2754577",
                          "updatedAt": "2022-10-07T01:28:42Z",
                          "publishedAt": "2022-05-15T16:00:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Amir1361"
                          },
                          "bodyText": "Hi,\nIt was solved. Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/20741#discussioncomment-2755061",
                          "updatedAt": "2022-10-07T01:28:42Z",
                          "publishedAt": "2022-05-15T18:51:03Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "update_and_rebuild_libmesh error: fparser_ad.hh: No such file or directory",
          "author": {
            "login": "aruybalid"
          },
          "bodyText": "Hi,\nI am trying to install MOOSE on the INL HPC and get the following error upon running  ./update_and_rebuild_libmesh.sh.\n_make[1]: Entering directory `/home/ruybandr/projects/moose/libmesh/build'\n  CXX      src/apps/fparser_parse_opt-fparser_parse.o\nIn file included from ../src/apps/fparser_parse.C:23:\n./include/libmesh/parsed_function.h:34:10: fatal error: libmesh/fparser_ad.hh: No such file or directory\n   34 | #include \"libmesh/fparser_ad.hh\"\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\ncompilation terminated._\n\nAny idea what might be wrong?\nAndre",
          "url": "https://github.com/idaholab/moose/discussions/20673",
          "updatedAt": "2022-06-24T04:29:51Z",
          "publishedAt": "2022-03-30T16:35:39Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWeird. I have fparser_ad.hh under libmesh/include/libmesh.\nDid petsc install ok?\nWhat modules did you load?\nAre you following the INL HPC instructions?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2473378",
                  "updatedAt": "2022-06-24T04:29:52Z",
                  "publishedAt": "2022-03-30T20:58:30Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "petsc installed OK",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2473409",
                          "updatedAt": "2022-07-04T20:42:05Z",
                          "publishedAt": "2022-03-30T21:05:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aruybalid"
                  },
                  "bodyText": "Hi Guillaume,\nI am following instructions here: https://mooseframework.inl.gov/getting_started/installation/inl_hpc_install_moose.html\nCurrently Loaded Modules:\n\ngcc/9.3.0-gcc-4.8.5-twls   2) openmpi/4.0.5_ucx1.9   3) python/3.7-anaconda-2019.10   4) cmake/3.22.3-gcc-9.3.0-ngra",
                  "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2473397",
                  "updatedAt": "2022-07-04T20:42:05Z",
                  "publishedAt": "2022-03-30T21:02:45Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You should have a different set of modules at this point, from having ran this:\nmodule load use.moose moose-dev\n(if you do run this command now, make sure to module purge first AND to re-install petsc)\nStill wont explain the libmesh failure..\nAre you on a recent moose commit? What does git show in moose/ say",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2473430",
                          "updatedAt": "2022-07-04T20:42:05Z",
                          "publishedAt": "2022-03-30T21:10:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "Hi Guillaume,\nI am using a moose fork from Topher Matthews:\ncommit e0d62f95a9f713f2f8c168162a0a7a72ff2938a9\nAuthor: Topher Matthews <cmatthews@lanl.gov>\nDate:   Mon Mar 28 17:05:04 2022 -0600\n\n    Fix global limit calculation. It's still not perfect, and mising tiles at the extremes may still hit errors, but it should be good for most\n\ndiff --git a/modules/tensor_mechanics/include/materials/LAROMANCEStressUpdateBase.h b/modules/tensor_mechanics/include/materials/LAROMANCEStres\nindex 0cc8d41..3282533 100644\n--- a/modules/tensor_mechanics/include/materials/LAROMANCEStressUpdateBase.h\n+++ b/modules/tensor_mechanics/include/materials/LAROMANCEStressUpdateBase.h\n@@ -126,16 +126,6 @@ protected:\n                             const unsigned int t,\n                             const unsigned int tt,\n                             const unsigned int in_index);\n-  /**\n-   * Method to check input values against applicability windows set by ROM data set.\n-   * @param input Input value\n-   * @param vector for upper and lower WindowFailure enums indicating what to do if input is outside\n-   * of limits\n-   * @param global_limits Vector of lower and upper global limits of the input\n-   */\n-  void checkInputWindow(const GenericReal<is_ad> & input,\n-                        const std::vector<WindowFailure> behavior,\n-                        const std::vector<Real> & global_limits);\n \n   /**\n    * Convert the input variables into the form expected by the ROM Legendre polynomials to have a\n@@ -419,8 +409,8 @@ protected:\n \n   /*\n    * Material specific orientations of tiling\n-   * variables\n-   * @return Vector declaring tiling orientation\n+   * variables. Indexing is partition, then input\n+   * @return Vector of a vector declaring tiling orientation\n    */\n   virtual std::vector<std::vector<unsigned int>> getTilings()\n   {\n@@ -431,8 +421,8 @@ protected:\n\n\nI will load the proper modules and try to install again.",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2473667",
                          "updatedAt": "2022-07-04T20:42:05Z",
                          "publishedAt": "2022-03-30T21:50:57Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aruybalid"
                  },
                  "bodyText": "Hi Guillaume,\nI just pulled origin/next and tried to install petsc (successful) and libmesh, but get the same error:\nHere is the version of moose I now have and from which I tried to install libmesh:\nruybandr@sawtooth2:~/projects/moose/scripts$git show\ncommit 824960ff17002d85f032f6ac80037c26bbd12942 (HEAD -> next, origin/next, andre/next)\nMerge: 6e5116d03d 26b0c8f844\nAuthor: Logan Harbour <loganhharbour@gmail.com>\nDate:   Tue Mar 29 10:31:16 2022 -0600\n\n    Merge pull request #20336 from milljm/20335-generic-hash-names\n    \n    Return a hash for a given library",
                  "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2474069",
                  "updatedAt": "2022-06-24T04:29:53Z",
                  "publishedAt": "2022-03-30T23:29:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Thanks for ruling this out.\nWhat does find . -name fparser* return in moose/libmesh?\nand echo $LIBMESH_DIR ?",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2474143",
                          "updatedAt": "2022-06-24T04:29:53Z",
                          "publishedAt": "2022-03-30T23:52:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "Thanks for the support:\nfind . -name fparser* finds\n./libmesh/tests/fparser\n./libmesh/include/libmesh/fparser_ad.hh\n./libmesh/include/libmesh/fparser.hh\n./libmesh/bin/fparser_parse-devel\n./libmesh/bin/fparser_parse-dbg\n./libmesh/bin/fparser_parse-opt\n./libmesh/src/apps/fparser_parse.C\n./libmesh/installed/include/libmesh/fparser_ad.hh\n./libmesh/installed/include/libmesh/fparser.hh\n./libmesh/installed/bin/fparser_parse-devel\n./libmesh/installed/bin/fparser_parse-dbg\n./libmesh/installed/bin/fparser_parse-opt\n./libmesh/m4/fparser.m4\n./libmesh/contrib/fparser\n./libmesh/contrib/fparser/fparser_gmpint.hh\n./libmesh/contrib/fparser/fparser_ad.cc\n./libmesh/contrib/fparser/fparser_ad.hh\n./libmesh/contrib/fparser/fparser.cc\n./libmesh/contrib/fparser/fparser_mpfr.hh\n./libmesh/contrib/fparser/fparser.hh\n./libmesh/contrib/fparser/docs/fparser.html\n./libmesh/build/tests/fparser\n./libmesh/build/src/apps/.deps/fparser_parse_opt-fparser_parse.Po\n./libmesh/build/src/apps/.deps/fparser_parse_dbg-fparser_parse.Po\n./libmesh/build/src/apps/.deps/fparser_parse_devel-fparser_parse.Po\n./libmesh/build/contrib/fparser\n./python/mms/fparser.py\n\nSo the file is in ./libmesh/include/libmesh/fparser_ad.hh, as you also reported, but it seems to be looking in libmesh/?\necho $LIBMESH_DIR gives:\n/home/ruybandr/projects/moose/libmesh",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2474158",
                          "updatedAt": "2022-07-04T20:42:07Z",
                          "publishedAt": "2022-03-30T23:57:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yeah it is just there. I dont get it. Did you modify the LIBRARY_PATH ?\nIs this a fresh install ?\n@milljm you seen this before?",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2475362",
                          "updatedAt": "2022-07-04T20:42:07Z",
                          "publishedAt": "2022-03-31T05:34:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "I purged modules and loaded the modules as on the instruction page and per your suggestion earlier. Then I pulled the moose/next branch just before running the update_and_rebuild_libmesh.sh script (did petsc before libmesh). I did not alter LIBRARY_PATH.",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2475673",
                          "updatedAt": "2022-03-31T06:32:37Z",
                          "publishedAt": "2022-03-31T06:32:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@loganharbour @cticenhour any idea on this?",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2480776",
                          "updatedAt": "2022-03-31T19:05:43Z",
                          "publishedAt": "2022-03-31T19:05:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "I have also just tried it with idaholab/devel, but ran into the same problem. LIBMESH_DIR is: /home/ruybandr/projects/moose/libmesh, which is exported to $PATH within bashrc. Would it be useful to remove that directory from $PATH and start over to let the installation scripts set the directories as needed?",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2480938",
                          "updatedAt": "2022-03-31T19:35:23Z",
                          "publishedAt": "2022-03-31T19:35:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont think you need LIBMESH_DIR exported to your PATH. Why was this done?",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2480947",
                          "updatedAt": "2022-03-31T19:37:42Z",
                          "publishedAt": "2022-03-31T19:37:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "I miscommunicated. Excuse me for the confusion.  I have not added it to $PATH. I just set the LIBMESH_DIR to be /home/ruybandr/projects/moose/libmesh using export inside .bashrc. Is that the right thing to do?",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2481540",
                          "updatedAt": "2022-03-31T21:33:59Z",
                          "publishedAt": "2022-03-31T21:33:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You shouldn\u2019t have to do this for the update and install script I think. Can you try without?\nIs that path correct btw? What does \u2018ls $LIBMESH_DIR\u2019 return?",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2481559",
                          "updatedAt": "2022-10-13T02:58:09Z",
                          "publishedAt": "2022-03-31T21:38:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "While using our vetted version of libMesh (submodule libmesh) it is not necessary to set LIBMESH_DIR. If you find there is a foreign LIBMESH_DIR being set to something not-of-your-making (say from one of our Conda installs), the best way to deal with that, is to unset LIBMESH_DIR, and then build your own (which, is what you are trying to do).\nAs for the error... no, I have not encountered this before. I am still piecing things together...",
                          "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2481566",
                          "updatedAt": "2022-10-13T02:58:09Z",
                          "publishedAt": "2022-03-31T21:40:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aruybalid"
                  },
                  "bodyText": "config.log",
                  "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2488848",
                  "updatedAt": "2022-07-29T15:04:10Z",
                  "publishedAt": "2022-04-01T22:12:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Closing this.\nWe managed to get a working build on /scratch, it's still unclear what happens on home/. I ll keep an eye out see if others are affected by this",
                  "url": "https://github.com/idaholab/moose/discussions/20673#discussioncomment-2754438",
                  "updatedAt": "2022-07-29T15:04:10Z",
                  "publishedAt": "2022-05-15T15:14:39Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "chigger example for reading in exodus mesh info",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "Is there an example/test for chigger that gets the nodal coordinates from an exodus mesh and/or variable values (nodal or elemental) based on coordinates? Note I'm thinking about a mechanics problem so I'd be interested in the coordinates on the displaced mesh.",
          "url": "https://github.com/idaholab/moose/discussions/21013",
          "updatedAt": "2022-07-06T06:17:57Z",
          "publishedAt": "2022-05-12T17:19:51Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nLooking at the tests in chigger/tests/displacement, the way to deal with the displaced mesh is to output the displaced exodus directly and read this.\nFor nodal coordinates and variable values I could not find anything in the tests. I think Chigger is more of a plotting tool than a python analysis of exodus files tool personally. But others may disagree.\nAnyway\nin python/chigger/exodus/ExodusSourceLineSampler.py you see code for a probing a variable at a desired location. I think this should do what you need.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21013#discussioncomment-2746691",
                  "updatedAt": "2022-07-06T06:17:57Z",
                  "publishedAt": "2022-05-13T16:08:15Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if your final goal is plotting and not probing the file value at a given point then maybe there's a better test.\nTagging @aeslaughter as he remains the expert on this.",
                          "url": "https://github.com/idaholab/moose/discussions/21013#discussioncomment-2746705",
                          "updatedAt": "2022-07-06T06:18:14Z",
                          "publishedAt": "2022-05-13T16:10:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "My interest really isn't plotting at this point. I'd like to do more analysis of the mesh after the fact rather than setting up nodesets and sidesets and postprocessors if it's less effort.",
                          "url": "https://github.com/idaholab/moose/discussions/21013#discussioncomment-2749631",
                          "updatedAt": "2022-07-06T06:18:14Z",
                          "publishedAt": "2022-05-14T03:55:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "One way I do this is to load the results exodus file and run all the postprocessing I need with Problem/solve=false",
                          "url": "https://github.com/idaholab/moose/discussions/21013#discussioncomment-2749765",
                          "updatedAt": "2022-07-06T06:18:14Z",
                          "publishedAt": "2022-05-14T05:10:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Installation error in HPC",
          "author": {
            "login": "gmaurya20"
          },
          "bodyText": "I have been trying to install MOOSE in HPC. I am using an offline installation instruction given on the MOOSEframework website. These are the version of the prerequisites that I am using to install MOOSE:\nPython-3.7.4\nmpich-3.2\ngcc/ver-9.1.0\nCmake-3.23.1\nwhen I am running the script \" ./scripts/update_and_rebuild_petsc.sh --skip-submodule-update --with-packages-download-dir=~/offline/downloads --prefix=$HOME/libs/petsc \" I am getting error. i ahve attached the screenshot of the error.\nplease help me to solve this error.\nThank You,\nRegards\nGaurav",
          "url": "https://github.com/idaholab/moose/discussions/21001",
          "updatedAt": "2022-05-31T15:03:06Z",
          "publishedAt": "2022-05-11T14:26:21Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "Can you share the configure.log that the output is referencing?",
                  "url": "https://github.com/idaholab/moose/discussions/21001#discussioncomment-2730926",
                  "updatedAt": "2022-05-31T15:03:10Z",
                  "publishedAt": "2022-05-11T14:44:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "gmaurya20"
                          },
                          "bodyText": "configure.log",
                          "url": "https://github.com/idaholab/moose/discussions/21001#discussioncomment-2731838",
                          "updatedAt": "2022-05-31T15:03:10Z",
                          "publishedAt": "2022-05-11T16:36:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "There seems to be a weird mismatch between GCC versions for mpicc --version vs mpif90 --version:\nExecuting: mpif90 --version\nstdout:\nGNU Fortran (GCC) 4.8.5 20150623 (Red Hat 4.8.5-4)\n\nExecuting: mpicc --version\nstdout:\ngcc (GCC) 9.1.0\n\nThese need to match up... as throughout the build process both of these locations are being included with linker flags. The error also supports this theory:\nPossible ERROR while running linker: exit code 1\nstderr:\n/home/gmaurya20/libs/petsc/lib/libsuperlu_dist.so: undefined reference to `GOMP_loop_nonmonotonic_dynamic_next'\n/home/gmaurya20/libs/petsc/lib/libsuperlu_dist.so: undefined reference to `GOMP_loop_nonmonotonic_guided_start'\n/home/gmaurya20/libs/petsc/lib/libsuperlu_dist.so: undefined reference to `GOMP_loop_nonmonotonic_dynamic_start'\n/home/gmaurya20/libs/petsc/lib/libsuperlu_dist.so: undefined reference to `GOMP_loop_nonmonotonic_guided_next'\n/home/gmaurya20/libs/petsc/lib/libsuperlu_dist.so: undefined reference to `GOMP_taskloop'\n\nWhen I do a search for \"GOMP_loop_nonmonotonic_dynamic_next\" I run into several posts about differences between building and then running against different GCC versions. Ref:  https://gcc.gnu.org/legacy-ml/fortran/2019-05/msg00037.html\nWhat you should do is determine if you can get the same GCC versions for each MPI wrapper:\nmpicc --version\nmpicxx --version\nmpif90 --version\nmpif77 --version\nEach of the above commands should return the same GCC version.",
                  "url": "https://github.com/idaholab/moose/discussions/21001#discussioncomment-2732585",
                  "updatedAt": "2022-05-31T15:03:13Z",
                  "publishedAt": "2022-05-11T18:41:54Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "gmaurya20"
                          },
                          "bodyText": "I installed a new mpich and it worked.",
                          "url": "https://github.com/idaholab/moose/discussions/21001#discussioncomment-2749718",
                          "updatedAt": "2022-05-31T15:03:45Z",
                          "publishedAt": "2022-05-14T04:40:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Multi-block 1d spherical",
          "author": {
            "login": "lanzam213"
          },
          "bodyText": "Greetings, I have created a multi-block 1d spherical problem to solve transient heat transfer in a sphere encapsulated in 4 concentric shells. My question is if the spherical equation formulation is consistent with a 1d mesh geometry generated with CartesianMeshGenerator . I ask because the (X,Y,Z) coordinates of a Cartesian mesh suggests the spherical formulation could possibly not work, although a solution is achieved, and because I'm unable to open the exodus output file in ParaView. To create the mesh I used CartesianMeshGenerator to define 5 subdomains, as shown below. I appreciate any suggestions.\n[Mesh]\n[./mesh_gen]\ntype = CartesianMeshGenerator\ndim = 1\ndx = '2.5e-4 9.5e-5 4.0e-5 3.5e-5 4.0e-5'\nix = '29 11 5 4 5'\nsubdomain_id = '1 2 3 4 5'\n[../]\n[]\n[./Problem]\ncoord_type = RSPHERICAL\n[../]",
          "url": "https://github.com/idaholab/moose/discussions/21026",
          "updatedAt": "2022-07-03T10:47:41Z",
          "publishedAt": "2022-05-13T22:58:41Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes this should work. The mesh may look regular 1D but the code performs the necessary adjustments for volume / jacobian computations\nYou can convince yourself by solving a simple problem (diffusion?) and comparing to an analytical solution\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21026#discussioncomment-2749025",
                  "updatedAt": "2022-07-03T10:47:39Z",
                  "publishedAt": "2022-05-13T23:16:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}