{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wNy0xMVQwOTo0MjoxNi0wNTowMM4AaXIX"
    },
    "edges": [
      {
        "node": {
          "title": "spherical indentation of hcp bicrystal combining slip and twin -- convergence problem",
          "author": {
            "login": "HairyLittleBoy"
          },
          "bodyText": "In order to simulate the spherical indentation process of hcp polycrystal considering both slip and twinning, I first built a bicrystal model WITHOUT contact and then add a spherical indenter to the model and contact part to the input file. I got convergence problem after adding contact and I will show the whole process of my simulation and settings, hope someone can help\n1. bicrystal hcp without contact\n(1) model file : Ti_bicrystal.e.txt\n(2) input file : Ti_bicrystal.i.txt\n\n input file of bicrystal hcp without contact\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n[]\n\n[Mesh]\n  file = Ti_bicrystal.e\n[]\n\n[AuxVariables]\n  [temperature]\n    initial_condition = 300\n  []\n  [pk2]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [fp_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [fp_zz]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [e_zz]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n\n  # -------------------------------------\n  [poly1_total_twin_volume_fraction]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_increment_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_increment_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_increment_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_resolved_shear_stress_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_resolved_shear_stress_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_resistance_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_resistance_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_resistance_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_resolved_twin_stress_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1twin_resistance_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n\n  # -------------------------------------\n  [poly2_total_twin_volume_fraction]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_increment_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_increment_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_increment_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_resolved_shear_stress_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_resolved_shear_stress_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_resistance_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_resistance_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_resistance_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_resolved_twin_stress_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2twin_resistance_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n[]\n\n[Physics/SolidMechanics/QuasiStatic]\n  [poly1]\n    strain = FINITE\n    add_variables = true\n    generate_output = stress_zz\n    block = 11\n    base_name = poly1\n  []\n  [poly2]\n    strain = FINITE\n    add_variables = true\n    generate_output = stress_zz\n    block = 12\n    base_name = poly2\n  []\n\n[]\n\n[AuxKernels]\n  [pk2]\n    type = RankTwoAux\n    variable = pk2\n    rank_two_tensor = second_piola_kirchhoff_stress\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [fp_xx]\n    type = RankTwoAux\n    variable = fp_xx\n    rank_two_tensor = plastic_deformation_gradient\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n  []\n  [fp_zz]\n    type = RankTwoAux\n    variable = fp_zz\n    rank_two_tensor = plastic_deformation_gradient\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [e_zz]\n    type = RankTwoAux\n    variable = e_zz\n    rank_two_tensor = total_lagrangian_strain\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  #---------------------------------------  \n  [poly1_total_twin_volume_fraction]\n    type = MaterialRealAux\n    variable = poly1_total_twin_volume_fraction\n    property = poly1twin_total_volume_fraction_twins\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_increment_0]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_increment_0\n    property = poly1_slip_increment\n    index = 0\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_increment_3]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_increment_3\n    property = poly1_slip_increment\n    index = 3\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_increment_9]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_increment_9\n    property = poly1_slip_increment\n    index = 9\n    execute_on = timestep_end\n    block = 11\n  []\n  [tau_3_poly1]\n    type = MaterialStdVectorAux\n    variable = poly1_resolved_shear_stress_3\n    property = poly1_applied_shear_stress\n    index = 3\n    execute_on = timestep_end\n    block = 11\n  []\n  [tau_9_poly1]\n    type = MaterialStdVectorAux\n    variable = poly1_resolved_shear_stress_9\n    property = poly1_applied_shear_stress\n    index = 9\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_resistance_0]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_resistance_0\n    property = poly1_slip_resistance\n    index = 0\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_resistance_3]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_resistance_3\n    property = poly1_slip_resistance\n    index = 3\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_resistance_9]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_resistance_9\n    property = poly1_slip_resistance\n    index = 9\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1twin_tau_0]\n    type = MaterialStdVectorAux\n    variable = poly1_resolved_twin_stress_0\n    property = poly1twin_applied_shear_stress\n    index = 0\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1twin_resistance_0]\n    type = MaterialStdVectorAux\n    variable = poly1twin_resistance_0\n    property = poly1twin_slip_resistance\n    index = 0\n    execute_on = timestep_end\n    block = 11\n  []\n\n  #----------------------------------------  \n  [poly2_total_twin_volume_fraction]\n    type = MaterialRealAux\n    variable = poly2_total_twin_volume_fraction\n    property = poly2twin_total_volume_fraction_twins\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_increment_0]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_increment_0\n    property = poly2_slip_increment\n    index = 0\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_increment_3]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_increment_3\n    property = poly2_slip_increment\n    index = 3\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_increment_9]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_increment_9\n    property = poly2_slip_increment\n    index = 9\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_tau_3]\n    type = MaterialStdVectorAux\n    variable = poly2_resolved_shear_stress_3\n    property = poly2_applied_shear_stress\n    index = 3\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_tau_9]\n    type = MaterialStdVectorAux\n    variable = poly2_resolved_shear_stress_9\n    property = poly2_applied_shear_stress\n    index = 9\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_resistance_0]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_resistance_0\n    property = poly2_slip_resistance\n    index = 0\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_resistance_3]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_resistance_3\n    property = poly2_slip_resistance\n    index = 3\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_resistance_9]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_resistance_9\n    property = poly2_slip_resistance\n    index = 9\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2twin_tau_0]\n    type = MaterialStdVectorAux\n    variable = poly2_resolved_twin_stress_0\n    property = poly2twin_applied_shear_stress\n    index = 0\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2twin_resistance_0]\n    type = MaterialStdVectorAux\n    variable = poly2twin_resistance_0\n    property = poly2twin_slip_resistance\n    index = 0\n    execute_on = timestep_end\n    block = 12\n  []\n[]\n\n[BCs]\n  [symmy]\n    type = DirichletBC\n    variable = disp_y\n    preset = true\n    boundary = NS.TESS-1_Z0\n    value = 0\n  []\n  [symmx]\n    type = DirichletBC\n    variable = disp_x\n    boundary = NS.TESS-1_Y0\n    value = 0\n  []\n  [symmz]\n    type = DirichletBC\n    variable = disp_z\n    boundary = NS.TESS-1_X0\n    value = 0\n  []\n  [tdisp]\n    type = FunctionDirichletBC\n    variable = disp_z\n    boundary = NS.TESS-1_X1\n    function = '0.005*t'\n  []\n[]\n\n[Materials]\n  [elasticity_tensor_ploy1]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '1.622e5 9.18e4 6.88e4 1.622e5 6.88e4 1.805e5 4.67e4 4.67e4 4.67e4' #alpha Ti, Alankar et al. Acta Materialia 59 (2011) 7003-7009\n    fill_method = symmetric9\n    base_name = poly1\n    block = 11\n  []\n  [stress_ploy1]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'poly1_slip_xtalpl poly1_twin_xtalpl'\n    tan_mod_type = exact\n    base_name = poly1\n    block = 11\n  []\n  [poly1_slip_xtalpl]\n    type = CrystalPlasticityHCPDislocationSlipBeyerleinUpdate\n    number_slip_systems = 15\n    slip_sys_file_name = 'hcp_aprismatic_capyramidal_slip_sys.txt'\n    unit_cell_dimension = '2.934e-7 2.934e-7 4.657e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    zero_tol = 5e-10\n    temperature = temperature\n    initial_forest_dislocation_density = 15.0e5\n    initial_substructure_density = 1.0e3\n    slip_system_modes = 2\n    number_slip_systems_per_mode = '3 12'\n    lattice_friction_per_mode = '98 224' #Knezevic et al MSEA 654 (2013)\n    effective_shear_modulus_per_mode = '4.7e4 4.7e4' #Ti, in MPa, https://materialsproject.org/materials/mp-46/\n    burgers_vector_per_mode = '2.934e-7 6.586e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    slip_generation_coefficient_per_mode = '1.25e5 2.25e7' #from Beyerlein and Tome 2008 IJP\n    normalized_slip_activiation_energy_per_mode = '3.73e-3 3.2e-2' #from Beyerlein and Tome 2008 IJP\n    slip_energy_proportionality_factor_per_mode = '330 100' #from Beyerlein and Tome 2008 IJP\n    substructure_rate_coefficient_per_mode = '355 0.4' #from Capolungo et al MSEA (2009)\n    applied_strain_rate = 0.001\n    gamma_o = 1.0e-3\n    Hall_Petch_like_constant_per_mode = '0.2 0.2' #Estimated to match graph in Capolungo et al MSEA (2009), Figure 2\n    grain_size = 20.0e-3 #20 microns, Beyerlein and Tome IJP (2008)\n    total_twin_volume_fraction = poly1twin_total_volume_fraction_twins\n    base_name = poly1\n    block = 11\n  []\n  [poly1_twin_xtalpl]\n    type = CrystalPlasticityTwinningKalidindiUpdate\n    base_name = poly1twin\n    crystal_lattice_type = HCP\n    unit_cell_dimension = '2.934e-7 2.934e-7 4.657e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    number_slip_systems = 6\n    slip_sys_file_name = 'hcp_tensile_twin_systems.txt'\n    initial_twin_lattice_friction = 1140.0\n    non_coplanar_coefficient_twin_hardening = 10000\n    coplanar_coefficient_twin_hardening = 1000\n    characteristic_twin_shear = 0.167\n    block = 11\n  []\n\n  #--------------------------------------------\n  [elasticity_tensor_poly2]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '1.622e5 9.18e4 6.88e4 1.622e5 6.88e4 1.805e5 4.67e4 4.67e4 4.67e4' #alpha Ti, Alankar et al. Acta Materialia 59 (2011) 7003-7009\n    fill_method = symmetric9\n    base_name = poly2\n    block = 12\n    euler_angle_1 = 0.0\n    euler_angle_2 = 45.0\n    euler_angle_3 = 0.9\n  []\n  [stress_poly2]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'poly2_slip_xtalpl poly2_twin_xtalpl'\n    tan_mod_type = exact\n    base_name = poly2\n    block = 12\n  []\n  [poly2_slip_xtalpl]\n    type = CrystalPlasticityHCPDislocationSlipBeyerleinUpdate\n    number_slip_systems = 15\n    slip_sys_file_name = 'hcp_aprismatic_capyramidal_slip_sys.txt'\n    unit_cell_dimension = '2.934e-7 2.934e-7 4.657e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    zero_tol = 5e-10\n    temperature = temperature\n    initial_forest_dislocation_density = 15.0e5\n    initial_substructure_density = 1.0e3\n    slip_system_modes = 2\n    number_slip_systems_per_mode = '3 12'\n    lattice_friction_per_mode = '98 224' #Knezevic et al MSEA 654 (2013)\n    effective_shear_modulus_per_mode = '4.7e4 4.7e4' #Ti, in MPa, https://materialsproject.org/materials/mp-46/\n    burgers_vector_per_mode = '2.934e-7 6.586e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    slip_generation_coefficient_per_mode = '1.25e5 2.25e7' #from Beyerlein and Tome 2008 IJP\n    normalized_slip_activiation_energy_per_mode = '3.73e-3 3.2e-2' #from Beyerlein and Tome 2008 IJP\n    slip_energy_proportionality_factor_per_mode = '330 100' #from Beyerlein and Tome 2008 IJP\n    substructure_rate_coefficient_per_mode = '355 0.4' #from Capolungo et al MSEA (2009)\n    applied_strain_rate = 0.001\n    gamma_o = 1.0e-3\n    Hall_Petch_like_constant_per_mode = '0.2 0.2' #Estimated to match graph in Capolungo et al MSEA (2009), Figure 2\n    grain_size = 20.0e-3 #20 microns, Beyerlein and Tome IJP (2008)\n    total_twin_volume_fraction = poly2twin_total_volume_fraction_twins\n    base_name = poly2\n    block = 12\n  []\n  [poly2_twin_xtalpl]\n    type = CrystalPlasticityTwinningKalidindiUpdate\n    base_name = poly2twin\n    crystal_lattice_type = HCP\n    unit_cell_dimension = '2.934e-7 2.934e-7 4.657e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    number_slip_systems = 6\n    slip_sys_file_name = 'hcp_tensile_twin_systems.txt'\n    initial_twin_lattice_friction = 1140.0\n    non_coplanar_coefficient_twin_hardening = 10000\n    coplanar_coefficient_twin_hardening = 1000\n    characteristic_twin_shear = 0.167\n    block = 12\n  []\n[]\n[Postprocessors]\n\n  [pk2]\n    type = ElementAverageValue\n    variable = pk2\n  []\n  [fp_zz]\n    type = ElementAverageValue\n    variable = fp_zz\n  []\n  [e_zz]\n    type = ElementAverageValue\n    variable = e_zz\n  []\n  [fp_xx]\n    type = ElementAverageValue\n    variable = fp_xx\n  []\n  [poly1_stress_zz]\n    type = ElementAverageValue\n    variable = poly1_stress_zz\n    block = 11\n  []\n  [ploy1_total_twin_volume_fraction]\n    type = ElementAverageValue\n    variable = poly1_total_twin_volume_fraction\n    block = 11\n  []\n  [ploy1_slip_increment_0]\n    type = ElementAverageValue\n    variable = poly1_slip_increment_0\n    block = 11\n  []\n  [ploy1_1slip_increment_3]\n    type = ElementAverageValue\n    variable = poly1_slip_increment_3\n    block = 11\n  []\n  [ploy1_slip_increment_9]\n    type = ElementAverageValue\n    variable = poly1_slip_increment_9\n    block = 11\n  []\n  [ploy1_tau_3]\n    type = ElementAverageValue\n    variable = poly1_resolved_shear_stress_3\n    block = 11\n  []\n  [ploy1_tau_9]\n    type = ElementAverageValue\n    variable = poly1_resolved_shear_stress_9\n    block = 11\n  []\n  [ploy1_slip_resistance_0]\n    type = ElementAverageValue\n    variable = poly1_slip_resistance_0\n    block = 11\n  []\n  [ploy1_slip_resistance_3]\n    type = ElementAverageValue\n    variable = poly1_slip_resistance_3\n    block = 11\n  []\n  [ploy1_slip_resistance_9]\n    type = ElementAverageValue\n    variable = poly1_slip_resistance_9\n    block = 11\n  []\n  [ploy1twin_tau_0]\n    type = ElementAverageValue\n    variable = poly1_resolved_twin_stress_0\n    block = 11\n  []\n  [ploy1twin_resistance_0]\n    type = ElementAverageValue\n    variable = poly1twin_resistance_0\n    block = 11\n  []\n\n  #------------------------------------- \n\n  [poly2_stress_zz]\n    type = ElementAverageValue\n    variable = poly2_stress_zz\n    block = 12\n  []\n  [poly2_total_twin_volume_fraction]\n    type = ElementAverageValue\n    variable = poly2_total_twin_volume_fraction\n    block = 12\n  []\n  [poly2_slip_increment_0]\n    type = ElementAverageValue\n    variable = poly2_slip_increment_0\n    block = 12\n  []\n  [poly2_slip_increment_3]\n    type = ElementAverageValue\n    variable = poly2_slip_increment_3\n    block = 12\n  []\n  [poly2_slip_increment_9]\n    type = ElementAverageValue\n    variable = poly2_slip_increment_9\n    block = 12\n  []\n  [poly2_tau_3]\n    type = ElementAverageValue\n    variable = poly2_resolved_shear_stress_3\n    block = 12\n  []\n  [poly2_tau_9]\n    type = ElementAverageValue\n    variable = poly2_resolved_shear_stress_9\n    block = 12\n  []\n  [poly2_slip_resistance_0]\n    type = ElementAverageValue\n    variable = poly2_slip_resistance_0\n    block = 12\n  []\n  [poly2_slip_resistance_3]\n    type = ElementAverageValue\n    variable = poly2_slip_resistance_3\n    block = 12\n  []\n  [poly2_slip_resistance_9]\n    type = ElementAverageValue\n    variable = poly2_slip_resistance_9\n    block = 12\n  []\n  [poly2twin_tau_0]\n    type = ElementAverageValue\n    variable = poly2_resolved_twin_stress_0\n    block = 12\n  []\n  [poly2twin_resistance_0]\n    type = ElementAverageValue\n    variable = poly2twin_resistance_0\n    block = 12\n  []\n\n[]\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n  petsc_options_iname = '-pc_type -pc_asm_overlap -sub_pc_type -ksp_type -ksp_gmres_restart'\n  petsc_options_value = ' asm      2              lu            gmres     200'\n  nl_rel_tol = 1e-12\n  nl_abs_step_tol = 1e-10\n  dt = 0.5\n  dtmin = 1.0e-2\n  dtmax = 10.0\n  end_time = 2.25\n[]\n[Outputs]\n  csv = true\n  perf_graph = true\n  exodus = true\n[]\n\n(3)\nmodel shown in Cubit :\n\n(4)\n\n solving process shown in terminal\n\n(moose) ubuntu@dealvm ~/Moose/cp_hcpTwin $ /home/ubuntu/Moose/project/cp_plas/cp_plas-opt -i Ti_bicrystal.i\n\n\n*** Info ***\nSolidMechanics Action: selecting 'incremental finite strain' formulation.\nFramework Information:\nMOOSE Version:           git commit 9fd3692734 on 2024-03-29\nLibMesh Version:         \nPETSc Version:           3.20.3\nSLEPc Version:           3.20.1\nCurrent Time:            Sat Jul 13 01:57:43 2024\nExecutable Timestamp:    Sat Mar 30 12:16:30 2024\n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          3\n  Spatial Dimension:       3\n  Nodes:                   343\n  Elems:                   216\n  Num Subdomains:          2\n\nNonlinear System:\n  Num DOFs:                1029\n  Num Local DOFs:          1029\n  Variables:               { \"disp_x\" \"disp_y\" \"disp_z\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                4015\n  Num Local DOFs:          4015\n  Variables:               \"temperature\" { \"pk2\" \"fp_xx\" \"fp_zz\" \"e_zz\" } { \"poly1_total_twin_volume_fraction\" \n                             \"poly1_slip_increment_0\" \"poly1_slip_increment_3\" \"poly1_slip_increment_9\" \n                             \"poly1_resolved_shear_stress_3\" ... \"poly1_slip_resistance_0\" \"poly1_slip_resistance_3\" \n                             \"poly1_slip_resistance_9\" \"poly1_resolved_twin_stress_0\" \"poly1twin_resistance_0\" \n                             } { \"poly2_total_twin_volume_fraction\" \"poly2_slip_increment_0\" \"poly2_slip_increment_3\" \n                             \"poly2_slip_increment_9\" \"poly2_resolved_shear_stress_3\" ... \"poly2_slip_resistance_0\" \n                             \"poly2_slip_resistance_3\" \"poly2_slip_resistance_9\" \"poly2_resolved_twin_stress_0\" \n                             \"poly2twin_resistance_0\" } { \"poly1_stress_zz\" \"poly2_stress_zz\" } \n  Finite Element Types:    \"LAGRANGE\" \"MONOMIAL\" \"MONOMIAL\" \"MONOMIAL\" \"MONOMIAL\" \n  Approximation Orders:    \"FIRST\" \"CONSTANT\" \"CONSTANT\" \"CONSTANT\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             ConstantDT\n  TimeIntegrator:          ImplicitEuler\n  Solver Mode:             Preconditioned JFNK\n  PETSc Preconditioner:    asm \n  MOOSE Preconditioner:    SMP\n\n\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n| time           | e_zz           | fp_xx          | fp_zz          | pk2            | ploy1_1slip_increment_3 | ploy1_slip_increment_0 | ploy1_slip_increment_9 | ploy1_slip_resistance_0 | ploy1_slip_resistance_3 | ploy1_slip_resistance_9 | ploy1_tau_3    |\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |            0.000000e+00 |           0.000000e+00 |           0.000000e+00 |            0.000000e+00 |            0.000000e+00 |            0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n| time           | ploy1_tau_9    | ploy1_total_twin_volume_fraction | ploy1twin_resistance_0 | ploy1twin_tau_0| poly1_stress_zz| poly2_slip_increment_0 | poly2_slip_increment_3 | poly2_slip_increment_9 | poly2_slip_resistance_0 | poly2_slip_resistance_3 |\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n|   0.000000e+00 |   0.000000e+00 |                     0.000000e+00 |           0.000000e+00 |   0.000000e+00 |   0.000000e+00 |           0.000000e+00 |           0.000000e+00 |           0.000000e+00 |            0.000000e+00 |            0.000000e+00 |\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n| time           | poly2_slip_resistance_9 | poly2_stress_zz| poly2_tau_3    | poly2_tau_9    | poly2_total_twin_volume_fraction | poly2twin_resistance_0 | poly2twin_tau_0|\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n|   0.000000e+00 |            0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |                     0.000000e+00 |           0.000000e+00 |   0.000000e+00 |\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n\n\nTime Step 1, time = 0.5, dt = 0.5\n 0 Nonlinear |R| = 3.385298e+02\n      0 Linear |R| = 3.385298e+02\n      1 Linear |R| = 1.046370e+02\n      2 Linear |R| = 2.345756e+01\n      3 Linear |R| = 5.102728e+00\n      4 Linear |R| = 9.961761e-01\n      5 Linear |R| = 2.201971e-01\n      6 Linear |R| = 6.398600e-02\n      7 Linear |R| = 1.580150e-02\n      8 Linear |R| = 2.726329e-03\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 0\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.25, dt = 0.25\n 0 Nonlinear |R| = 1.739086e+02\n      0 Linear |R| = 1.739086e+02\n      1 Linear |R| = 2.330008e-01\n      2 Linear |R| = 1.502678e-04\n 1 Nonlinear |R| = 7.772474e-01\n      0 Linear |R| = 7.772474e-01\n      1 Linear |R| = 1.447259e-04\n      2 Linear |R| = 6.400878e-08\n 2 Nonlinear |R| = 2.954659e-06\n      0 Linear |R| = 2.954659e-06\n      1 Linear |R| = 1.304933e-09\n      2 Linear |R| = 5.273141e-13\n 3 Nonlinear |R| = 4.535399e-11\n Solve Converged!\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n| time           | e_zz           | fp_xx          | fp_zz          | pk2            | ploy1_1slip_increment_3 | ploy1_slip_increment_0 | ploy1_slip_increment_9 | ploy1_slip_resistance_0 | ploy1_slip_resistance_3 | ploy1_slip_resistance_9 | ploy1_tau_3    |\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |            0.000000e+00 |           0.000000e+00 |           0.000000e+00 |            0.000000e+00 |            0.000000e+00 |            0.000000e+00 |   0.000000e+00 |\n|   2.500000e-01 |  -2.411840e-07 |   1.000000e+00 |   1.000000e+00 |   2.461184e-02 |           -4.232100e-37 |           2.665773e-21 |           3.720194e-29 |            1.381167e+02 |            2.871454e+02 |            2.871454e+02 |  -2.833528e-01 |\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n| time           | ploy1_tau_9    | ploy1_total_twin_volume_fraction | ploy1twin_resistance_0 | ploy1twin_tau_0| poly1_stress_zz| poly2_slip_increment_0 | poly2_slip_increment_3 | poly2_slip_increment_9 | poly2_slip_resistance_0 | poly2_slip_resistance_3 |\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n|   0.000000e+00 |   0.000000e+00 |                     0.000000e+00 |           0.000000e+00 |   0.000000e+00 |   0.000000e+00 |           0.000000e+00 |           0.000000e+00 |           0.000000e+00 |            0.000000e+00 |            0.000000e+00 |\n|   2.500000e-01 |   1.243573e+00 |                     4.677234e-43 |           1.140000e+03 |  -1.647938e+00 |   1.095016e-02 |           2.327355e-21 |          -1.055643e-33 |           6.921544e-29 |            1.381167e+02 |            2.871454e+02 |\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n| time           | poly2_slip_resistance_9 | poly2_stress_zz| poly2_tau_3    | poly2_tau_9    | poly2_total_twin_volume_fraction | poly2twin_resistance_0 | poly2twin_tau_0|\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n|   0.000000e+00 |            0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |                     0.000000e+00 |           0.000000e+00 |   0.000000e+00 |\n|   2.500000e-01 |            2.871454e+02 |   4.355366e-02 |  -3.687926e-02 |   2.326863e+00 |                     1.487240e-44 |           1.140000e+03 |  -2.781702e+00 |\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n\n\nTime Step 2, time = 0.75, dt = 0.5\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 2, time = 0.5, dt = 0.25\n 0 Nonlinear |R| = 1.739106e+02\n      0 Linear |R| = 1.739106e+02\n      1 Linear |R| = 2.162322e-01\n      2 Linear |R| = 2.385951e-04\n 1 Nonlinear |R| = 7.770542e-01\n      0 Linear |R| = 7.770542e-01\n      1 Linear |R| = 2.914869e-04\n      2 Linear |R| = 2.585098e-07\n 2 Nonlinear |R| = 2.988767e-06\n      0 Linear |R| = 2.988767e-06\n      1 Linear |R| = 2.491574e-09\n      2 Linear |R| = 1.909264e-12\n 3 Nonlinear |R| = 4.357606e-11\n Solve Converged!\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n| time           | e_zz           | fp_xx          | fp_zz          | pk2            | ploy1_1slip_increment_3 | ploy1_slip_increment_0 | ploy1_slip_increment_9 | ploy1_slip_resistance_0 | ploy1_slip_resistance_3 | ploy1_slip_resistance_9 | ploy1_tau_3    |\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |            0.000000e+00 |           0.000000e+00 |           0.000000e+00 |            0.000000e+00 |            0.000000e+00 |            0.000000e+00 |   0.000000e+00 |\n|   2.500000e-01 |  -2.411840e-07 |   1.000000e+00 |   1.000000e+00 |   2.461184e-02 |           -4.232100e-37 |           2.665773e-21 |           3.720194e-29 |            1.381167e+02 |            2.871454e+02 |            2.871454e+02 |  -2.833528e-01 |\n|   5.000000e-01 |  -4.841439e-07 |   1.000000e+00 |   1.000000e+00 |   5.036655e-02 |           -4.523715e-31 |           2.793968e-15 |           3.953959e-23 |            1.381167e+02 |            2.871454e+02 |            2.871454e+02 |  -5.678129e-01 |\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+----------------+\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n| time           | ploy1_tau_9    | ploy1_total_twin_volume_fraction | ploy1twin_resistance_0 | ploy1twin_tau_0| poly1_stress_zz| poly2_slip_increment_0 | poly2_slip_increment_3 | poly2_slip_increment_9 | poly2_slip_resistance_0 | poly2_slip_resistance_3 |\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n|   0.000000e+00 |   0.000000e+00 |                     0.000000e+00 |           0.000000e+00 |   0.000000e+00 |   0.000000e+00 |           0.000000e+00 |           0.000000e+00 |           0.000000e+00 |            0.000000e+00 |            0.000000e+00 |\n|   2.500000e-01 |   1.243573e+00 |                     4.677234e-43 |           1.140000e+03 |  -1.647938e+00 |   1.095016e-02 |           2.327355e-21 |          -1.055643e-33 |           6.921544e-29 |            1.381167e+02 |            2.871454e+02 |\n|   5.000000e-01 |   2.486720e+00 |                     4.836092e-37 |           1.140000e+03 |  -3.295096e+00 |   2.973747e-02 |           2.465951e-15 |          -1.129795e-27 |           7.405852e-23 |            1.381167e+02 |            2.871454e+02 |\n+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+-------------------------+-------------------------+\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n| time           | poly2_slip_resistance_9 | poly2_stress_zz| poly2_tau_3    | poly2_tau_9    | poly2_total_twin_volume_fraction | poly2twin_resistance_0 | poly2twin_tau_0|\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n|   0.000000e+00 |            0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |                     0.000000e+00 |           0.000000e+00 |   0.000000e+00 |\n|   2.500000e-01 |            2.871454e+02 |   4.355366e-02 |  -3.687926e-02 |   2.326863e+00 |                     1.487240e-44 |           1.140000e+03 |  -2.781702e+00 |\n|   5.000000e-01 |            2.871454e+02 |   9.569693e-02 |  -7.619896e-02 |   4.654666e+00 |                     1.554772e-38 |           1.140000e+03 |  -5.564263e+00 |\n+----------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n\n\nTime Step 3, time = 1, dt = 0.5\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 3, time = 0.75, dt = 0.25\n 0 Nonlinear |R| = 1.739121e+02\n      0 Linear |R| = 1.739121e+02\n      1 Linear |R| = 3.116062e-01\n      2 Linear |R| = 6.238707e-04\n 1 Nonlinear |R| = 7.862994e-01\n      0 Linear |R| = 7.862994e-01\n      1 Linear |R| = 4.848348e-04\n      2 Linear |R| = 6.440515e-07\n 2 Nonlinear |R| = 3.308238e-06\n      0 Linear |R| = 3.308238e-06\n      1 Linear |R| = 3.748422e-09\n      2 Linear |R| = 4.195457e-12\n 3 Nonlinear |R| = 4.713559e-11\n Solve Converged!\n\n\n\nOne can find from the information in terminal that the problem ComputeMultipleCrystalPlasticityStress: Constitutive failure shows in every step, and overcome by reduction to half.\n2. bicrystal hcp spherical indentation\n(1) model file : Ti_bicrystalSphrInden.e.txt\n(2) input file : Ti_bicrystal_spherInden.i.txt\n\n input file of bicrystal spherical indentation\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n  volumetric_locking_correction = true\n  order = FIRST\n  family = LAGRANGE\n[]\n\n[Mesh]\n  file = Ti_bicrystalSphrInden.e\n[]\n\n[AuxVariables]\n  [temperature]\n    initial_condition = 300\n  []\n  [pk2]\n    order = CONSTANT\n    family = MONOMIAL\n    block = '11 12'\n  []\n  [fp_xx]\n    order = CONSTANT\n    family = MONOMIAL\n    block = '11 12'\n  []\n  [fp_zz]\n    order = CONSTANT\n    family = MONOMIAL\n    block = '11 12'\n  []\n  [e_zz]\n    order = CONSTANT\n    family = MONOMIAL\n    block = '11 12'\n  []\n\n  # -------------------------------------\n  [poly1_total_twin_volume_fraction]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_increment_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_increment_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_increment_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_resolved_shear_stress_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_resolved_shear_stress_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_resistance_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_resistance_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_slip_resistance_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1_resolved_twin_stress_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n  [poly1twin_resistance_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 11\n  []\n\n  # -------------------------------------\n  [poly2_total_twin_volume_fraction]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_increment_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_increment_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_increment_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_resolved_shear_stress_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_resolved_shear_stress_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_resistance_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_resistance_3]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_slip_resistance_9]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2_resolved_twin_stress_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [poly2twin_resistance_0]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 12\n  []\n  [./saved_x]\n  [../]\n  [./saved_y]\n  [../]\n  [./saved_z]\n  [../]\n[]\n\n[Physics/SolidMechanics/QuasiStatic]\n  [poly1]\n    strain = FINITE\n    add_variables = true\n    generate_output = stress_zz\n    block = 11\n    base_name = poly1\n  []\n  [poly2]\n    strain = FINITE\n    add_variables = true\n    generate_output = stress_zz\n    block = 12\n    base_name = poly2\n  []\n\n[]\n\n[Modules/TensorMechanics/Master]\n  [./all]\n    add_variables = true\n    strain = FINITE\n    block = 1\n    use_automatic_differentiation = false\n    generate_output = 'stress_xx stress_xy stress_xz stress_yy stress_zz'\n    save_in = 'saved_x saved_y saved_z'\n    use_finite_deform_jacobian = true\n  [../]\n[]\n\n[AuxKernels]\n  [pk2]\n    type = RankTwoAux\n    variable = pk2\n    rank_two_tensor = second_piola_kirchhoff_stress\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [fp_xx]\n    type = RankTwoAux\n    variable = fp_xx\n    rank_two_tensor = plastic_deformation_gradient\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n  []\n  [fp_zz]\n    type = RankTwoAux\n    variable = fp_zz\n    rank_two_tensor = plastic_deformation_gradient\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [e_zz]\n    type = RankTwoAux\n    variable = e_zz\n    rank_two_tensor = total_lagrangian_strain\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  #---------------------------------------  \n  [poly1_total_twin_volume_fraction]\n    type = MaterialRealAux\n    variable = poly1_total_twin_volume_fraction\n    property = poly1twin_total_volume_fraction_twins\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_increment_0]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_increment_0\n    property = poly1_slip_increment\n    index = 0\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_increment_3]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_increment_3\n    property = poly1_slip_increment\n    index = 3\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_increment_9]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_increment_9\n    property = poly1_slip_increment\n    index = 9\n    execute_on = timestep_end\n    block = 11\n  []\n  [tau_3_poly1]\n    type = MaterialStdVectorAux\n    variable = poly1_resolved_shear_stress_3\n    property = poly1_applied_shear_stress\n    index = 3\n    execute_on = timestep_end\n    block = 11\n  []\n  [tau_9_poly1]\n    type = MaterialStdVectorAux\n    variable = poly1_resolved_shear_stress_9\n    property = poly1_applied_shear_stress\n    index = 9\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_resistance_0]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_resistance_0\n    property = poly1_slip_resistance\n    index = 0\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_resistance_3]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_resistance_3\n    property = poly1_slip_resistance\n    index = 3\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1_slip_resistance_9]\n    type = MaterialStdVectorAux\n    variable = poly1_slip_resistance_9\n    property = poly1_slip_resistance\n    index = 9\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1twin_tau_0]\n    type = MaterialStdVectorAux\n    variable = poly1_resolved_twin_stress_0\n    property = poly1twin_applied_shear_stress\n    index = 0\n    execute_on = timestep_end\n    block = 11\n  []\n  [poly1twin_resistance_0]\n    type = MaterialStdVectorAux\n    variable = poly1twin_resistance_0\n    property = poly1twin_slip_resistance\n    index = 0\n    execute_on = timestep_end\n    block = 11\n  []\n\n  #----------------------------------------  \n  [poly2_total_twin_volume_fraction]\n    type = MaterialRealAux\n    variable = poly2_total_twin_volume_fraction\n    property = poly2twin_total_volume_fraction_twins\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_increment_0]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_increment_0\n    property = poly2_slip_increment\n    index = 0\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_increment_3]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_increment_3\n    property = poly2_slip_increment\n    index = 3\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_increment_9]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_increment_9\n    property = poly2_slip_increment\n    index = 9\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_tau_3]\n    type = MaterialStdVectorAux\n    variable = poly2_resolved_shear_stress_3\n    property = poly2_applied_shear_stress\n    index = 3\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_tau_9]\n    type = MaterialStdVectorAux\n    variable = poly2_resolved_shear_stress_9\n    property = poly2_applied_shear_stress\n    index = 9\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_resistance_0]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_resistance_0\n    property = poly2_slip_resistance\n    index = 0\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_resistance_3]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_resistance_3\n    property = poly2_slip_resistance\n    index = 3\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2_slip_resistance_9]\n    type = MaterialStdVectorAux\n    variable = poly2_slip_resistance_9\n    property = poly2_slip_resistance\n    index = 9\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2twin_tau_0]\n    type = MaterialStdVectorAux\n    variable = poly2_resolved_twin_stress_0\n    property = poly2twin_applied_shear_stress\n    index = 0\n    execute_on = timestep_end\n    block = 12\n  []\n  [poly2twin_resistance_0]\n    type = MaterialStdVectorAux\n    variable = poly2twin_resistance_0\n    property = poly2twin_slip_resistance\n    index = 0\n    execute_on = timestep_end\n    block = 12\n  []\n[]\n\n[Functions]\n  [./push_down]\n    type = ParsedFunction\n    expression = 'if(t < 1.5, -t, t-3.0)'\n  [../]\n[]\n\n[BCs]\n  [boty]\n    type = DirichletBC\n    variable = disp_y\n    boundary = NS.TESS-1_Z0\n    value = 0.0\n  []\n  [botx]\n    type = DirichletBC\n    variable = disp_x\n    boundary = NS.TESS-1_Z0\n    value = 0.0\n  []\n  [botz]\n    type = DirichletBC\n    variable = disp_z\n    boundary = NS.TESS-1_Z0\n    value = 0.0\n  []\n\n  [indenterx]\n    type = DirichletBC\n    variable = disp_x\n    boundary = indenterUpSurf\n    value = 0.0\n  []\n\n  [indentery]\n    type = DirichletBC\n    variable = disp_y\n    boundary = indenterUpSurf\n    value = 0.0\n  []  \n\n  [indenterz]\n    type = FunctionDirichletBC\n    variable = disp_z\n    boundary = indenterUpSurf\n    function = push_down\n  []\n[]\n\n[Materials]\n  [elasticity_tensor_ploy1]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '1.622e5 9.18e4 6.88e4 1.622e5 6.88e4 1.805e5 4.67e4 4.67e4 4.67e4' #alpha Ti, Alankar et al. Acta Materialia 59 (2011) 7003-7009\n    fill_method = symmetric9\n    base_name = poly1\n    block = 11\n  []\n  [stress_ploy1]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'poly1_slip_xtalpl poly1_twin_xtalpl'\n    tan_mod_type = exact\n    base_name = poly1\n    block = 11\n  []\n  [poly1_slip_xtalpl]\n    type = CrystalPlasticityHCPDislocationSlipBeyerleinUpdate\n    number_slip_systems = 15\n    slip_sys_file_name = 'hcp_aprismatic_capyramidal_slip_sys.txt'\n    unit_cell_dimension = '2.934e-7 2.934e-7 4.657e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    zero_tol = 5e-10\n    temperature = temperature\n    initial_forest_dislocation_density = 15.0e5\n    initial_substructure_density = 1.0e3\n    slip_system_modes = 2\n    number_slip_systems_per_mode = '3 12'\n    lattice_friction_per_mode = '98 224' #Knezevic et al MSEA 654 (2013)\n    effective_shear_modulus_per_mode = '4.7e4 4.7e4' #Ti, in MPa, https://materialsproject.org/materials/mp-46/\n    burgers_vector_per_mode = '2.934e-7 6.586e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    slip_generation_coefficient_per_mode = '1.25e5 2.25e7' #from Beyerlein and Tome 2008 IJP\n    normalized_slip_activiation_energy_per_mode = '3.73e-3 3.2e-2' #from Beyerlein and Tome 2008 IJP\n    slip_energy_proportionality_factor_per_mode = '330 100' #from Beyerlein and Tome 2008 IJP\n    substructure_rate_coefficient_per_mode = '355 0.4' #from Capolungo et al MSEA (2009)\n    applied_strain_rate = 0.001\n    gamma_o = 1.0e-3\n    Hall_Petch_like_constant_per_mode = '0.2 0.2' #Estimated to match graph in Capolungo et al MSEA (2009), Figure 2\n    grain_size = 20.0e-3 #20 microns, Beyerlein and Tome IJP (2008)\n    total_twin_volume_fraction = poly1twin_total_volume_fraction_twins\n    base_name = poly1\n    block = 11\n  []\n  [poly1_twin_xtalpl]\n    type = CrystalPlasticityTwinningKalidindiUpdate\n    base_name = poly1twin\n    crystal_lattice_type = HCP\n    unit_cell_dimension = '2.934e-7 2.934e-7 4.657e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    number_slip_systems = 6\n    slip_sys_file_name = 'hcp_tensile_twin_systems.txt'\n    initial_twin_lattice_friction = 1140.0\n    non_coplanar_coefficient_twin_hardening = 10000\n    coplanar_coefficient_twin_hardening = 1000\n    characteristic_twin_shear = 0.167\n    block = 11\n  []\n\n  #--------------------------------------------\n  [elasticity_tensor_poly2]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '1.622e5 9.18e4 6.88e4 1.622e5 6.88e4 1.805e5 4.67e4 4.67e4 4.67e4' #alpha Ti, Alankar et al. Acta Materialia 59 (2011) 7003-7009\n    fill_method = symmetric9\n    base_name = poly2\n    block = 12\n    euler_angle_1 = 0.0\n    euler_angle_2 = 45.0\n    euler_angle_3 = 0.9\n  []\n  [stress_poly2]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'poly2_slip_xtalpl poly2_twin_xtalpl'\n    tan_mod_type = exact\n    base_name = poly2\n    block = 12\n  []\n  [poly2_slip_xtalpl]\n    type = CrystalPlasticityHCPDislocationSlipBeyerleinUpdate\n    number_slip_systems = 15\n    slip_sys_file_name = 'hcp_aprismatic_capyramidal_slip_sys.txt'\n    unit_cell_dimension = '2.934e-7 2.934e-7 4.657e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    zero_tol = 5e-10\n    temperature = temperature\n    initial_forest_dislocation_density = 15.0e5\n    initial_substructure_density = 1.0e3\n    slip_system_modes = 2\n    number_slip_systems_per_mode = '3 12'\n    lattice_friction_per_mode = '98 224' #Knezevic et al MSEA 654 (2013)\n    effective_shear_modulus_per_mode = '4.7e4 4.7e4' #Ti, in MPa, https://materialsproject.org/materials/mp-46/\n    burgers_vector_per_mode = '2.934e-7 6.586e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    slip_generation_coefficient_per_mode = '1.25e5 2.25e7' #from Beyerlein and Tome 2008 IJP\n    normalized_slip_activiation_energy_per_mode = '3.73e-3 3.2e-2' #from Beyerlein and Tome 2008 IJP\n    slip_energy_proportionality_factor_per_mode = '330 100' #from Beyerlein and Tome 2008 IJP\n    substructure_rate_coefficient_per_mode = '355 0.4' #from Capolungo et al MSEA (2009)\n    applied_strain_rate = 0.001\n    gamma_o = 1.0e-3\n    Hall_Petch_like_constant_per_mode = '0.2 0.2' #Estimated to match graph in Capolungo et al MSEA (2009), Figure 2\n    grain_size = 20.0e-3 #20 microns, Beyerlein and Tome IJP (2008)\n    total_twin_volume_fraction = poly2twin_total_volume_fraction_twins\n    base_name = poly2\n    block = 12\n  []\n  [poly2_twin_xtalpl]\n    type = CrystalPlasticityTwinningKalidindiUpdate\n    base_name = poly2twin\n    crystal_lattice_type = HCP\n    unit_cell_dimension = '2.934e-7 2.934e-7 4.657e-7' #Ti, in mm, https://materialsproject.org/materials/mp-46/\n    number_slip_systems = 6\n    slip_sys_file_name = 'hcp_tensile_twin_systems.txt'\n    initial_twin_lattice_friction = 1140.0\n    non_coplanar_coefficient_twin_hardening = 10000\n    coplanar_coefficient_twin_hardening = 1000\n    characteristic_twin_shear = 0.167\n    block = 12\n  []\n\n\n  [./elasticity_tensor_indenter]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 1000000.0\n    poissons_ratio = 0.3\n    block = 1\n  [../]\n  [./stress_indenter]\n    type = ComputeFiniteStrainElasticStress\n    block = 1\n  [../]\n  \n[]\n[Postprocessors]\n\n  [pk2]\n    type = ElementAverageValue\n    variable = pk2\n    block = '11 12'\n  []\n  [fp_zz]\n    type = ElementAverageValue\n    variable = fp_zz\n    block = '11 12'\n  []\n  [e_zz]\n    type = ElementAverageValue\n    variable = e_zz\n    block = '11 12'\n  []\n  [fp_xx]\n    type = ElementAverageValue\n    variable = fp_xx\n    block = '11 12'\n  []\n  [poly1_stress_zz]\n    type = ElementAverageValue\n    variable = poly1_stress_zz\n    block = 11\n  []\n  [ploy1_total_twin_volume_fraction]\n    type = ElementAverageValue\n    variable = poly1_total_twin_volume_fraction\n    block = 11\n  []\n  [ploy1_slip_increment_0]\n    type = ElementAverageValue\n    variable = poly1_slip_increment_0\n    block = 11\n  []\n  [ploy1_1slip_increment_3]\n    type = ElementAverageValue\n    variable = poly1_slip_increment_3\n    block = 11\n  []\n  [ploy1_slip_increment_9]\n    type = ElementAverageValue\n    variable = poly1_slip_increment_9\n    block = 11\n  []\n  [ploy1_tau_3]\n    type = ElementAverageValue\n    variable = poly1_resolved_shear_stress_3\n    block = 11\n  []\n  [ploy1_tau_9]\n    type = ElementAverageValue\n    variable = poly1_resolved_shear_stress_9\n    block = 11\n  []\n  [ploy1_slip_resistance_0]\n    type = ElementAverageValue\n    variable = poly1_slip_resistance_0\n    block = 11\n  []\n  [ploy1_slip_resistance_3]\n    type = ElementAverageValue\n    variable = poly1_slip_resistance_3\n    block = 11\n  []\n  [ploy1_slip_resistance_9]\n    type = ElementAverageValue\n    variable = poly1_slip_resistance_9\n    block = 11\n  []\n  [ploy1twin_tau_0]\n    type = ElementAverageValue\n    variable = poly1_resolved_twin_stress_0\n    block = 11\n  []\n  [ploy1twin_resistance_0]\n    type = ElementAverageValue\n    variable = poly1twin_resistance_0\n    block = 11\n  []\n\n  #------------------------------------- \n\n  [poly2_stress_zz]\n    type = ElementAverageValue\n    variable = poly2_stress_zz\n    block = 12\n  []\n  [poly2_total_twin_volume_fraction]\n    type = ElementAverageValue\n    variable = poly2_total_twin_volume_fraction\n    block = 12\n  []\n  [poly2_slip_increment_0]\n    type = ElementAverageValue\n    variable = poly2_slip_increment_0\n    block = 12\n  []\n  [poly2_slip_increment_3]\n    type = ElementAverageValue\n    variable = poly2_slip_increment_3\n    block = 12\n  []\n  [poly2_slip_increment_9]\n    type = ElementAverageValue\n    variable = poly2_slip_increment_9\n    block = 12\n  []\n  [poly2_tau_3]\n    type = ElementAverageValue\n    variable = poly2_resolved_shear_stress_3\n    block = 12\n  []\n  [poly2_tau_9]\n    type = ElementAverageValue\n    variable = poly2_resolved_shear_stress_9\n    block = 12\n  []\n  [poly2_slip_resistance_0]\n    type = ElementAverageValue\n    variable = poly2_slip_resistance_0\n    block = 12\n  []\n  [poly2_slip_resistance_3]\n    type = ElementAverageValue\n    variable = poly2_slip_resistance_3\n    block = 12\n  []\n  [poly2_slip_resistance_9]\n    type = ElementAverageValue\n    variable = poly2_slip_resistance_9\n    block = 12\n  []\n  [poly2twin_tau_0]\n    type = ElementAverageValue\n    variable = poly2_resolved_twin_stress_0\n    block = 12\n  []\n  [poly2twin_resistance_0]\n    type = ElementAverageValue\n    variable = poly2twin_resistance_0\n    block = 12\n  []\n\n[]\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n\n  petsc_options_iname = '-pc_type -pc_factor_mat_solver_type'\n  petsc_options_value = 'lu    superlu_dist'\n  line_search = 'none'\n\n  l_max_its = 60\n  nl_max_its = 50\n  dt = 1e-10\n  dtmin = 1e-20\n  end_time = 1.8\n  \n  nl_rel_tol = 1e-8\n  nl_abs_tol = 1e-6 # 6 if no friction\n  l_tol = 1e-3\n  automatic_scaling = true\n\n[]\n[Outputs]\n  [./my_checkpoint]\n    type = Checkpoint\n    time_step_interval = 50\n  [../]\n  exodus = true\n  csv = true\n  print_linear_residuals = true\n  print_perf_log = true\n  [./console]\n    type = Console\n    max_rows = 5\n  [../]\n[]\n\n[Dampers]\n  [contact_slip]\n    type = ContactSlipDamper\n    primary = indenterContact\n    secondary = matContact\n  []\n[]\n\n[Contact]\n  [ind_base]\n    primary = indenterContact\n    secondary = matContact\n    model = coulomb\n    friction_coefficient = 0.4\n    normalize_penalty = true\n    formulation = tangential_penalty\n    penalty = 1e7\n    capture_tolerance = 0.0001\n  []\n[]\n\n(3)\nmodel shown in Cubit :\n\n(4)\n\n solving process shown in terminal\n\n(base) ubuntu@dealvm ~/Moose/cp_hcpTwin $ conda activate moose\n(moose) ubuntu@dealvm ~/Moose/cp_hcpTwin $ /home/ubuntu/Moose/project/cp_plas/cp_plas-opt -i Ti_bicrystal_spherInden.i \n*** Info ***\nSolidMechanics Action: selecting 'incremental finite strain' formulation.\n*** Warning, This code is deprecated and will be removed in future versions:\n/home/ubuntu/Moose/cp_hcpTwin/Ti_bicrystal_spherInden.i:176.1: The 'Modules/TensorMechanics/Master' syntax is deprecated. Please use 'Physics/SolidMechanics/QuasiStatic' instead.\nStack frames: 15\n0: libMesh::print_trace(std::ostream&)\n1: void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(libMesh::BasicOStreamProxy<char, std::char_traits<char> >&, bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n2: Moose::Builder::walkRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, hit::Node*)\n3: Moose::Builder::walk(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, hit::Node*)\n4: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n5: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n6: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n7: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n8: Moose::Builder::build()\n9: MooseApp::setupOptions()\n10: MooseApp::run()\n11: /home/ubuntu/Moose/project/cp_plas/cp_plas-opt(+0x30eb) [0x56490cab50eb]\n12: main\n13: __libc_start_main\n14: /home/ubuntu/Moose/project/cp_plas/cp_plas-opt(+0x3396) [0x56490cab5396]\n*** Warning, This code is deprecated and will be removed in future versions:\n/home/ubuntu/Moose/cp_hcpTwin/Ti_bicrystal_spherInden.i:177.3: The 'Modules/TensorMechanics/Master' syntax is deprecated. Please use 'Physics/SolidMechanics/QuasiStatic' instead.\nStack frames: 16\n0: libMesh::print_trace(std::ostream&)\n1: void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(libMesh::BasicOStreamProxy<char, std::char_traits<char> >&, bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n2: Moose::Builder::walkRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, hit::Node*)\n3: Moose::Builder::walk(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, hit::Node*)\n4: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n5: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n6: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n7: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n8: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n9: Moose::Builder::build()\n10: MooseApp::setupOptions()\n11: MooseApp::run()\n12: /home/ubuntu/Moose/project/cp_plas/cp_plas-opt(+0x30eb) [0x56490cab50eb]\n13: main\n14: __libc_start_main\n15: /home/ubuntu/Moose/project/cp_plas/cp_plas-opt(+0x3396) [0x56490cab5396]\n*** Warning, This code is deprecated and will be removed in future versions:\n/home/ubuntu/Moose/cp_hcpTwin/Ti_bicrystal_spherInden.i:758: (Outputs/print_perf_log):\nThe parameter 'print_perf_log' is deprecated.\nUse perf_graph instead!\nCurrently Setting Up\nInitializing\nFinished Initializing Equation Systems                                               [  3.52 s] [  702 MB]\nFinished Initializing                                                                  [  3.69 s] [  704 MB]\nFinished Setting Up                                                                      [  6.47 s] [  704 MB]\nFramework Information:\nMOOSE Version:           git commit 9fd3692734 on 2024-03-29\nLibMesh Version:\nPETSc Version:           3.20.3\nSLEPc Version:           3.20.1\nCurrent Time:            Sat Jul 13 03:30:20 2024\nExecutable Timestamp:    Sat Mar 30 12:16:30 2024\nParallelism:\nNum Processors:          1\nNum Threads:             1\nMesh:\nParallel Type:           replicated\nMesh Dimension:          3\nSpatial Dimension:       3\nNodes:                   17351\nElems:                   15257\nNum Subdomains:          3\nNonlinear System:\nNum DOFs:                52053\nNum Local DOFs:          52053\nVariables:               { \"disp_x\" \"disp_y\" \"disp_z\" }\nFinite Element Types:    \"LAGRANGE\"\nApproximation Orders:    \"FIRST\"\nAuxiliary System:\nNum DOFs:                410761\nNum Local DOFs:          410761\nVariables:               \"temperature\" { \"pk2\" \"fp_xx\" \"fp_zz\" \"e_zz\" } { \"poly1_total_twin_volume_fraction\"\n\"poly1_slip_increment_0\" \"poly1_slip_increment_3\" \"poly1_slip_increment_9\"\n\"poly1_resolved_shear_stress_3\" ... \"poly1_slip_resistance_0\" \"poly1_slip_resistance_3\"\n\"poly1_slip_resistance_9\" \"poly1_resolved_twin_stress_0\" \"poly1twin_resistance_0\"\n} { \"poly2_total_twin_volume_fraction\" \"poly2_slip_increment_0\" \"poly2_slip_increment_3\"\n\"poly2_slip_increment_9\" \"poly2_resolved_shear_stress_3\" ... \"poly2_slip_resistance_0\"\n\"poly2_slip_resistance_3\" \"poly2_slip_resistance_9\" \"poly2_resolved_twin_stress_0\"\n\"poly2twin_resistance_0\" } { \"saved_x\" \"saved_y\" \"saved_z\" } { \"poly1_stress_zz\"\n\"poly2_stress_zz\" \"stress_xx\" \"stress_xy\" \"stress_xz\" \"stress_yy\" \"stress_zz\"\n} { \"penetration\" \"contact_pressure\" \"nodal_area\" }\nFinite Element Types:    \"LAGRANGE\" \"MONOMIAL\" \"MONOMIAL\" \"MONOMIAL\" \"LAGRANGE\" \"MONOMIAL\" \"LAGRANGE\"\nApproximation Orders:    \"FIRST\" \"CONSTANT\" \"CONSTANT\" \"CONSTANT\" \"FIRST\" \"CONSTANT\" \"FIRST\"\nExecution Information:\nExecutioner:             Transient\nTimeStepper:             ConstantDT\nTimeIntegrator:          ImplicitEuler\nSolver Mode:             Preconditioned JFNK\nPETSc Preconditioner:    lu mat_superlu_dist_fact: SamePattern  mat_superlu_dist_replacetinypivot: true\nMOOSE Preconditioner:    SMP\nCurrently Executing\nPerforming Initial Setup\nSetting Up Materials\nFinished Computing Initial Material Values                                         [  0.77 s] [  902 MB]\nFinished Setting Up Materials                                                        [  0.78 s] [  902 MB]\nFinished Reinitializing Because of Geometric Search Objects                          [  5.51 s] [ 1190 MB]\nFinished Performing Initial Setup                                                      [ 10.29 s] [ 1190 MB]\nTime Step 0, time = 0\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+\n| time           | e_zz           | fp_xx          | fp_zz          | pk2            | ploy1_1slip_increment_3 | ploy1_slip_increment_0 | ploy1_slip_increment_9 | ploy1_slip_resistance_0 | ploy1_slip_resistance_3 | ploy1_slip_resistance_9 |\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |            0.000000e+00 |           0.000000e+00 |           0.000000e+00 |            0.000000e+00 |            0.000000e+00 |            0.000000e+00 |\n+----------------+----------------+----------------+----------------+----------------+-------------------------+------------------------+------------------------+-------------------------+-------------------------+-------------------------+\n+----------------+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+\n| time           | ploy1_tau_3    | ploy1_tau_9    | ploy1_total_twin_volume_fraction | ploy1twin_resistance_0 | ploy1twin_tau_0| poly1_stress_zz| poly2_slip_increment_0 | poly2_slip_increment_3 | poly2_slip_increment_9 |\n+----------------+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |                     0.000000e+00 |           0.000000e+00 |   0.000000e+00 |   0.000000e+00 |           0.000000e+00 |           0.000000e+00 |           0.000000e+00 |\n+----------------+----------------+----------------+----------------------------------+------------------------+----------------+----------------+------------------------+------------------------+------------------------+\n+----------------+-------------------------+-------------------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n| time           | poly2_slip_resistance_0 | poly2_slip_resistance_3 | poly2_slip_resistance_9 | poly2_stress_zz| poly2_tau_3    | poly2_tau_9    | poly2_total_twin_volume_fraction | poly2twin_resistance_0 | poly2twin_tau_0|\n+----------------+-------------------------+-------------------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\n|   0.000000e+00 |            0.000000e+00 |            0.000000e+00 |            0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |                     0.000000e+00 |           0.000000e+00 |   0.000000e+00 |\n+----------------+-------------------------+-------------------------+-------------------------+----------------+----------------+----------------+----------------------------------+------------------------+----------------+\nTime Step 1, time = 1e-10, dt = 1e-10\nPerforming automatic scaling calculation\n*** Warning ***\nWarning in PenetrationLocator. Penetration is not detected for one or more secondary nodes. This could be because those secondary nodes simply do not project to faces on the primary surface. However, this could also be because contact should be enforced on those nodes, but the faces that they project to are outside the contact patch, which will give an erroneous result. Use appropriate options for 'patch_size' and 'patch_update_strategy' in the Mesh block to avoid this issue. Setting 'patch_update_strategy=iteration' is recommended because it completely avoids this potential issue. Also note that this warning is printed only once, so a similar situation could occur multiple times during the simulation but this warning is printed only at the first occurrence.\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                  [ 11.64 s] [ 1294 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353436e+01\n3 Linear |R| = 5.755924e+00\n4 Linear |R| = 1.655838e+00\n5 Linear |R| = 1.649811e+00\n6 Linear |R| = 1.626658e+00\n7 Linear |R| = 1.604453e+00\n8 Linear |R| = 1.583134e+00\n9 Linear |R| = 1.562642e+00\n10 Linear |R| = 1.542927e+00\n11 Linear |R| = 1.523939e+00\n12 Linear |R| = 1.505635e+00\n13 Linear |R| = 1.487975e+00\n14 Linear |R| = 1.470922e+00\n15 Linear |R| = 1.454443e+00\n16 Linear |R| = 1.438505e+00\n17 Linear |R| = 1.423080e+00\n18 Linear |R| = 1.408141e+00\n19 Linear |R| = 1.393663e+00\n20 Linear |R| = 1.379622e+00\n21 Linear |R| = 1.365997e+00\n22 Linear |R| = 1.352769e+00\n23 Linear |R| = 1.339917e+00\n24 Linear |R| = 1.327424e+00\n25 Linear |R| = 1.315275e+00\n26 Linear |R| = 1.303453e+00\n27 Linear |R| = 1.291945e+00\n28 Linear |R| = 1.280736e+00\n29 Linear |R| = 1.269813e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1        10         9         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nFinished Solving                                                                       [182.49 s] [ 2145 MB]\nAborting as solve did not converge\nTime Step 1, time = 5e-11, dt = 5e-11\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  8.21 s] [ 2145 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353471e+01\n3 Linear |R| = 5.755022e+00\n4 Linear |R| = 1.655645e+00\n5 Linear |R| = 1.649528e+00\n6 Linear |R| = 1.626848e+00\n7 Linear |R| = 1.605079e+00\n8 Linear |R| = 1.584161e+00\n9 Linear |R| = 1.564040e+00\n10 Linear |R| = 1.544666e+00\n11 Linear |R| = 1.525995e+00\n12 Linear |R| = 1.507985e+00\n13 Linear |R| = 1.490599e+00\n14 Linear |R| = 1.473800e+00\n15 Linear |R| = 1.457556e+00\n16 Linear |R| = 1.441838e+00\n17 Linear |R| = 1.426618e+00\n18 Linear |R| = 1.411870e+00\n19 Linear |R| = 1.397570e+00\n20 Linear |R| = 1.383695e+00\n21 Linear |R| = 1.370226e+00\n22 Linear |R| = 1.357143e+00\n23 Linear |R| = 1.344428e+00\n24 Linear |R| = 1.332063e+00\n25 Linear |R| = 1.320034e+00\n26 Linear |R| = 1.308324e+00\n27 Linear |R| = 1.296921e+00\n28 Linear |R| = 1.285811e+00\n29 Linear |R| = 1.274981e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1        10         9         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nAborting as solve did not converge\nFinished Solving                                                                       [169.31 s] [ 2622 MB]\nTime Step 1, time = 2.5e-11, dt = 2.5e-11\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  8.04 s] [ 2622 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353436e+01\n3 Linear |R| = 5.755765e+00\n4 Linear |R| = 1.655332e+00\n5 Linear |R| = 1.649235e+00\n6 Linear |R| = 1.626494e+00\n7 Linear |R| = 1.604669e+00\n8 Linear |R| = 1.583700e+00\n9 Linear |R| = 1.563532e+00\n10 Linear |R| = 1.544115e+00\n11 Linear |R| = 1.525404e+00\n12 Linear |R| = 1.507357e+00\n13 Linear |R| = 1.489936e+00\n14 Linear |R| = 1.473105e+00\n15 Linear |R| = 1.456833e+00\n16 Linear |R| = 1.441087e+00\n17 Linear |R| = 1.425842e+00\n18 Linear |R| = 1.411070e+00\n19 Linear |R| = 1.396748e+00\n20 Linear |R| = 1.382854e+00\n21 Linear |R| = 1.369366e+00\n22 Linear |R| = 1.356265e+00\n23 Linear |R| = 1.343533e+00\n24 Linear |R| = 1.331153e+00\n25 Linear |R| = 1.319109e+00\n26 Linear |R| = 1.307387e+00\n27 Linear |R| = 1.295971e+00\n28 Linear |R| = 1.284849e+00\n29 Linear |R| = 1.274009e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1        10         9         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nFinished Solving                                                                       [171.04 s] [ 2857 MB]\nAborting as solve did not converge\nTime Step 1, time = 1.25e-11, dt = 1.25e-11\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  8.30 s] [ 2857 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353436e+01\n3 Linear |R| = 5.756140e+00\n4 Linear |R| = 1.656081e+00\n5 Linear |R| = 1.649999e+00\n6 Linear |R| = 1.627083e+00\n7 Linear |R| = 1.605096e+00\n8 Linear |R| = 1.583976e+00\n9 Linear |R| = 1.563669e+00\n10 Linear |R| = 1.544124e+00\n11 Linear |R| = 1.525293e+00\n12 Linear |R| = 1.507135e+00\n13 Linear |R| = 1.489611e+00\n14 Linear |R| = 1.472684e+00\n15 Linear |R| = 1.456321e+00\n16 Linear |R| = 1.440492e+00\n17 Linear |R| = 1.425168e+00\n18 Linear |R| = 1.410323e+00\n19 Linear |R| = 1.395932e+00\n20 Linear |R| = 1.381973e+00\n21 Linear |R| = 1.368424e+00\n22 Linear |R| = 1.355267e+00\n23 Linear |R| = 1.342482e+00\n24 Linear |R| = 1.330051e+00\n25 Linear |R| = 1.317960e+00\n26 Linear |R| = 1.306193e+00\n27 Linear |R| = 1.294736e+00\n28 Linear |R| = 1.283574e+00\n29 Linear |R| = 1.272697e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1        10         9         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nFinished Solving                                                                       [165.00 s] [ 2858 MB]\nAborting as solve did not converge\nTime Step 1, time = 6.25e-12, dt = 6.25e-12\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  7.68 s] [ 2858 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353436e+01\n3 Linear |R| = 5.755818e+00\n4 Linear |R| = 1.655176e+00\n5 Linear |R| = 1.649125e+00\n6 Linear |R| = 1.626253e+00\n7 Linear |R| = 1.604308e+00\n8 Linear |R| = 1.583228e+00\n9 Linear |R| = 1.562958e+00\n10 Linear |R| = 1.543447e+00\n11 Linear |R| = 1.524648e+00\n12 Linear |R| = 1.506520e+00\n13 Linear |R| = 1.489024e+00\n14 Linear |R| = 1.472124e+00\n15 Linear |R| = 1.455786e+00\n16 Linear |R| = 1.439981e+00\n17 Linear |R| = 1.424679e+00\n18 Linear |R| = 1.409855e+00\n19 Linear |R| = 1.395484e+00\n20 Linear |R| = 1.381544e+00\n21 Linear |R| = 1.368014e+00\n22 Linear |R| = 1.354873e+00\n23 Linear |R| = 1.342104e+00\n24 Linear |R| = 1.329689e+00\n25 Linear |R| = 1.317613e+00\n26 Linear |R| = 1.305860e+00\n27 Linear |R| = 1.294416e+00\n28 Linear |R| = 1.283267e+00\n29 Linear |R| = 1.272402e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1         9         8         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nAborting as solve did not converge\nFinished Solving                                                                       [161.90 s] [ 2858 MB]\nTime Step 1, time = 3.125e-12, dt = 3.125e-12\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  7.22 s] [ 2858 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353471e+01\n3 Linear |R| = 5.754990e+00\n4 Linear |R| = 1.655492e+00\n5 Linear |R| = 1.649435e+00\n6 Linear |R| = 1.626633e+00\n7 Linear |R| = 1.604750e+00\n8 Linear |R| = 1.583728e+00\n9 Linear |R| = 1.563511e+00\n10 Linear |R| = 1.544049e+00\n11 Linear |R| = 1.525295e+00\n12 Linear |R| = 1.507209e+00\n13 Linear |R| = 1.489752e+00\n14 Linear |R| = 1.472887e+00\n15 Linear |R| = 1.456583e+00\n16 Linear |R| = 1.440808e+00\n17 Linear |R| = 1.425535e+00\n18 Linear |R| = 1.410737e+00\n19 Linear |R| = 1.396391e+00\n20 Linear |R| = 1.382474e+00\n21 Linear |R| = 1.368965e+00\n22 Linear |R| = 1.355844e+00\n23 Linear |R| = 1.343094e+00\n24 Linear |R| = 1.330696e+00\n25 Linear |R| = 1.318636e+00\n26 Linear |R| = 1.306898e+00\n27 Linear |R| = 1.295468e+00\n28 Linear |R| = 1.284332e+00\n29 Linear |R| = 1.273479e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1         8         7         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nFinished Solving                                                                       [159.06 s] [ 2858 MB]\nAborting as solve did not converge\nTime Step 1, time = 1.5625e-12, dt = 1.5625e-12\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  7.77 s] [ 2858 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353471e+01\n3 Linear |R| = 5.755398e+00\n4 Linear |R| = 1.655299e+00\n5 Linear |R| = 1.649230e+00\n6 Linear |R| = 1.626645e+00\n7 Linear |R| = 1.604963e+00\n8 Linear |R| = 1.584126e+00\n9 Linear |R| = 1.564080e+00\n10 Linear |R| = 1.544776e+00\n11 Linear |R| = 1.526169e+00\n12 Linear |R| = 1.508220e+00\n13 Linear |R| = 1.490889e+00\n14 Linear |R| = 1.474142e+00\n15 Linear |R| = 1.457946e+00\n16 Linear |R| = 1.442274e+00\n17 Linear |R| = 1.427096e+00\n18 Linear |R| = 1.412387e+00\n19 Linear |R| = 1.398124e+00\n20 Linear |R| = 1.384285e+00\n21 Linear |R| = 1.370848e+00\n22 Linear |R| = 1.357796e+00\n23 Linear |R| = 1.345109e+00\n24 Linear |R| = 1.332771e+00\n25 Linear |R| = 1.320767e+00\n26 Linear |R| = 1.309081e+00\n27 Linear |R| = 1.297701e+00\n28 Linear |R| = 1.286611e+00\n29 Linear |R| = 1.275802e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1        10         9         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nFinished Solving                                                                       [160.58 s] [ 2858 MB]\nAborting as solve did not converge\nTime Step 1, time = 7.8125e-13, dt = 7.8125e-13\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  7.75 s] [ 2858 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353471e+01\n3 Linear |R| = 5.754921e+00\n4 Linear |R| = 1.655795e+00\n5 Linear |R| = 1.649749e+00\n6 Linear |R| = 1.626997e+00\n7 Linear |R| = 1.605161e+00\n8 Linear |R| = 1.584182e+00\n9 Linear |R| = 1.564004e+00\n10 Linear |R| = 1.544578e+00\n11 Linear |R| = 1.525859e+00\n12 Linear |R| = 1.507804e+00\n13 Linear |R| = 1.490375e+00\n14 Linear |R| = 1.473537e+00\n15 Linear |R| = 1.457256e+00\n16 Linear |R| = 1.441504e+00\n17 Linear |R| = 1.426252e+00\n18 Linear |R| = 1.411474e+00\n19 Linear |R| = 1.397146e+00\n20 Linear |R| = 1.383246e+00\n21 Linear |R| = 1.369752e+00\n22 Linear |R| = 1.356646e+00\n23 Linear |R| = 1.343909e+00\n24 Linear |R| = 1.331524e+00\n25 Linear |R| = 1.319476e+00\n26 Linear |R| = 1.307748e+00\n27 Linear |R| = 1.296328e+00\n28 Linear |R| = 1.285202e+00\n29 Linear |R| = 1.274357e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1        10         9         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nFinished Solving                                                                       [161.31 s] [ 2858 MB]\nAborting as solve did not converge\nTime Step 1, time = 3.90625e-13, dt = 3.90625e-13\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  7.51 s] [ 2858 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353471e+01\n3 Linear |R| = 5.754847e+00\n4 Linear |R| = 1.655793e+00\n5 Linear |R| = 1.649738e+00\n6 Linear |R| = 1.626828e+00\n7 Linear |R| = 1.604846e+00\n8 Linear |R| = 1.583732e+00\n9 Linear |R| = 1.563431e+00\n10 Linear |R| = 1.543890e+00\n11 Linear |R| = 1.525064e+00\n12 Linear |R| = 1.506911e+00\n13 Linear |R| = 1.489390e+00\n14 Linear |R| = 1.472467e+00\n15 Linear |R| = 1.456108e+00\n16 Linear |R| = 1.440283e+00\n17 Linear |R| = 1.424962e+00\n18 Linear |R| = 1.410121e+00\n19 Linear |R| = 1.395733e+00\n20 Linear |R| = 1.381777e+00\n21 Linear |R| = 1.368232e+00\n22 Linear |R| = 1.355077e+00\n23 Linear |R| = 1.342294e+00\n24 Linear |R| = 1.329867e+00\n25 Linear |R| = 1.317778e+00\n26 Linear |R| = 1.306013e+00\n27 Linear |R| = 1.294558e+00\n28 Linear |R| = 1.283399e+00\n29 Linear |R| = 1.272524e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1        10         9         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nFinished Solving                                                                       [158.71 s] [ 2858 MB]\nAborting as solve did not converge\nTime Step 1, time = 1.95313e-13, dt = 1.95313e-13\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  7.79 s] [ 2858 MB]\n0 Linear |R| = 2.426460e+02\n1 Linear |R| = 1.211658e+02\n2 Linear |R| = 2.353471e+01\n3 Linear |R| = 5.754857e+00\n4 Linear |R| = 1.655806e+00\n5 Linear |R| = 1.649765e+00\n6 Linear |R| = 1.626844e+00\n7 Linear |R| = 1.604853e+00\n8 Linear |R| = 1.583729e+00\n9 Linear |R| = 1.563419e+00\n10 Linear |R| = 1.543870e+00\n11 Linear |R| = 1.525037e+00\n12 Linear |R| = 1.506876e+00\n13 Linear |R| = 1.489350e+00\n14 Linear |R| = 1.472421e+00\n15 Linear |R| = 1.456056e+00\n16 Linear |R| = 1.440225e+00\n17 Linear |R| = 1.424900e+00\n18 Linear |R| = 1.410053e+00\n19 Linear |R| = 1.395662e+00\n20 Linear |R| = 1.381702e+00\n21 Linear |R| = 1.368153e+00\n22 Linear |R| = 1.354994e+00\n23 Linear |R| = 1.342208e+00\n24 Linear |R| = 1.329778e+00\n25 Linear |R| = 1.317686e+00\n26 Linear |R| = 1.305919e+00\n27 Linear |R| = 1.294461e+00\n28 Linear |R| = 1.283300e+00\n29 Linear |R| = 1.272422e+00\nLinear solve did not converge due to DIVERGED_BREAKDOWN iterations 30\nContactSlipDamper: Damping     #Cont    #Stick     #Slip #SlipFric #StickLock  #SlipRev\n1        10         9         1         0          0         0\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\nFinished Solving                                                                       [160.57 s] [ 2858 MB]\n Solve Did NOT Converge!\nAborting as solve did not converge\nTime Step 1, time = 9.76563e-14, dt = 9.76563e-14\n0 Nonlinear |R| = 2.426460e+02\nComputing Jacobian                                                                   [  7.92 s] [ 2858 MB]\n^C\n(moose) ubuntu@dealvm ~/Moose/cp_hcpTwin $\n\n\n\nOne can also find from the information in terminal that the problem ComputeMultipleCrystalPlasticityStress: Constitutive failure and Nonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0 show in every step, and after dt has reduced to half, the |R| seems stay the same!.\nI hope someone may run my simulations and try to find where the promblem is? thankS :)",
          "url": "https://github.com/idaholab/moose/discussions/28127",
          "updatedAt": "2024-07-14T22:17:35Z",
          "publishedAt": "2024-07-14T02:36:19Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nPlease look at the troubleshooting failed solves page on the website for more information on how to deal with this\nYou will likely want to either turn off the line search or use a custom line search for contact for this simulation",
                  "url": "https://github.com/idaholab/moose/discussions/28127#discussioncomment-10045660",
                  "updatedAt": "2024-07-14T22:17:36Z",
                  "publishedAt": "2024-07-14T22:17:35Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Stress strain curve not yielding",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I am using the CrystalPlasticityKalidindiUpdate class for Inconel 718 model as shown in my material block below.\n[Materials]\n  [elasticity_tensor_phase0]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '2.596e5 1.79e5 1.79e5 2.596e5 1.79e5 2.596e5 1.096e5 1.096e5 1.096e5'\n    fill_method = symmetric9\n    base_name = phase0\n  []\n  [stress_phase0]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl_phase0'\n    rtol = 1e-9\n    abs_tol = 1e-10\n    tan_mod_type = exact\n    base_name = phase0\n  []\n  [trial_xtalpl_phase0]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    crystal_lattice_type = FCC\n    r = 1.0             \n    h = 6000            \n    t_sat = 598.5        \n    gss_a = 1.5         \n    ao = 0.001           \n    xm = 0.017             \n    gss_initial = 465.5  \n    base_name = phase0\n  []\n  [strain_phase0]\n    type = ComputeFiniteStrain\n    displacements = 'disp_x disp_y'\n    base_name = phase0\n    #    eigenstrain_names = eigenstrain2\n  []\n\n  [elasticity_tensor_phase1]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '2.596e5 1.79e5 1.79e5 2.596e5 1.79e5 2.596e5 1.096e5 1.096e5 1.096e5'\n    fill_method = symmetric9\n    euler_angle_1 = 0.0\n    euler_angle_2 = 0.0\n    euler_angle_3 = 0.0\n    base_name = phase1\n  []\n  [stress_phase1]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl_phase1'\n    rtol = 1e-9\n    abs_tol = 1e-10\n    tan_mod_type = exact\n    base_name = phase1\n  []\n  [trial_xtalpl_phase1]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    crystal_lattice_type = FCC\n    r = 1.0             \n    h = 6000            \n    t_sat = 598.5        \n    gss_a = 1.5         \n    ao = 0.001           \n    xm = 0.017             \n    gss_initial = 465.5     \n    base_name = phase1\n  []\n\n  [strain_phase1]\n    type = ComputeFiniteStrain\n    displacements = 'disp_x disp_y'\n    base_name = phase1\n  []\n\n  # Switching functions for each phase\n  [h0]\n    type = SwitchingFunctionMultiPhaseMaterial\n    phase_etas = eta0\n    all_etas = 'eta0 eta1'\n    h_name = h0\n  []\n  [h1]\n    type = SwitchingFunctionMultiPhaseMaterial\n    phase_etas = eta1\n    all_etas = 'eta0 eta1'\n    h_name = h1\n  []\n\n  # Generate the global stress from the phase stresses\n  [global_stress]\n    type = MultiPhaseStressMaterial\n    phase_base = 'phase0 phase1'\n    h = 'h0  h1'\n  []\n[]\n\n\nI got all my crystal plasticity parameters from experimental data except the gss_a for this alloy. The problem I am having is after plotting the stress-strain curve, it never enters the plastic region. The plot shows only the elastic. What could be the possible reasons?\nPs: I have used this model with other crystal plasticity parameters and elastic constants it entered the plastic region.\nI have attached pictures of the experimental data.\n\n\n@sapitts @dschwen @GiudGiud",
          "url": "https://github.com/idaholab/moose/discussions/28086",
          "updatedAt": "2024-07-12T13:39:37Z",
          "publishedAt": "2024-07-09T12:18:29Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Emmanuel-324"
                  },
                  "bodyText": "Below is my full input script for your perusal\n[Mesh]\n  [file]\n    type = FileMeshGenerator\n    file = my_kks_noload_one8_out.e-s170\n    use_for_exodus_restart = true\n  []\n[]\n\n[Variables]\n  [disp_x]\n  []\n  [disp_y]\n  []\n\n  # order parameter 0\n  [eta0]\n    initial_from_file_var = eta1\n  []\n  # order parameter 1\n  [eta1]\n    initial_from_file_var = eta3\n  []\n[]\n\n[AuxVariables]\n  [phase0_pk2]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [phase0_fp_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [phase0_e_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [phase1_pk2]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [phase1_fp_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [phase1_e_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n\n  [vonmises]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [stress_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n\n  [phase0_gss]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 0\n  []\n  [phase0_slip_increment]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 0\n  []\n  [phase1_gss]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 0\n  []\n  [phase1_slip_increment]\n    order = CONSTANT\n    family = MONOMIAL\n    block = 0\n  []\n[]\n\n[AuxKernels]\n  [phase0_pk2]\n    type = RankTwoAux\n    variable = phase0_pk2\n    rank_two_tensor = phase0_second_piola_kirchhoff_stress\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [phase0_fp_xx]\n    type = RankTwoAux\n    variable = phase0_fp_xx\n    rank_two_tensor = phase0_plastic_deformation_gradient\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [phase0_e_xx]\n    type = RankTwoAux\n    variable = phase0_e_xx\n    rank_two_tensor = phase0_total_lagrangian_strain\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [phase1_pk2]\n    type = RankTwoAux\n    variable = phase1_pk2\n    rank_two_tensor = phase1_second_piola_kirchhoff_stress\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [phase1_fp_xx]\n    type = RankTwoAux\n    variable = phase1_fp_xx\n    rank_two_tensor = phase1_plastic_deformation_gradient\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n  [phase1_e_xx]\n    type = RankTwoAux\n    variable = phase1_e_xx\n    rank_two_tensor = phase1_total_lagrangian_strain\n    index_j = 2\n    index_i = 2\n    execute_on = timestep_end\n  []\n\n  [vonmises]\n    type = RankTwoScalarAux\n    rank_two_tensor = stress\n    variable = vonmises\n    scalar_type = VonMisesStress\n    execute_on = timestep_end\n    #   block = 0\n  []\n\n  [stress_xx]\n    type = RankTwoAux\n    rank_two_tensor = stress\n    variable = stress_xx\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n  []\n\n  [gss_phase0]\n    type = MaterialStdVectorAux\n    variable = phase0_gss\n    property = phase0_slip_resistance\n    index = 0\n    execute_on = timestep_end\n  []\n  [slip_inc_phase0]\n    type = MaterialStdVectorAux\n    variable = phase0_slip_increment\n    property = phase0_slip_increment\n    index = 0\n    execute_on = timestep_end\n  []\n  [gss_phase1]\n    type = MaterialStdVectorAux\n    variable = phase1_gss\n    property = phase1_slip_resistance\n    index = 0\n    execute_on = timestep_end\n  []\n  [slip_inc_phase1]\n    type = MaterialStdVectorAux\n    variable = phase1_slip_increment\n    property = phase1_slip_increment\n    index = 0\n    execute_on = timestep_end\n  []\n[]\n\n[BCs]\n  [symmy]\n    type = DirichletBC\n    variable = disp_y\n    boundary = bottom\n    value = 0\n  []\n  [symmx]\n    type = DirichletBC\n    variable = disp_x\n    boundary = left\n    value = 0\n  []\n  [tdisp]\n    type = FunctionDirichletBC\n    variable = disp_x\n    boundary = right\n    function = '0.1*t'\n  []\n[]\n\n[Materials]\n  [elasticity_tensor_phase0]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '2.596e5 1.79e5 1.79e5 2.596e5 1.79e5 2.596e5 1.096e5 1.096e5 1.096e5'\n    fill_method = symmetric9\n    base_name = phase0\n  []\n  [stress_phase0]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl_phase0'\n    rtol = 1e-9\n    abs_tol = 1e-10\n    tan_mod_type = exact\n    base_name = phase0\n  []\n  [trial_xtalpl_phase0]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    crystal_lattice_type = FCC\n    r = 1.0             \n    h = 6000            \n    t_sat = 598.5        \n    gss_a = 1.5         \n    ao = 0.001           \n    xm = 0.017             \n    gss_initial = 465.5  \n    base_name = phase0\n  []\n  [strain_phase0]\n    type = ComputeFiniteStrain\n    displacements = 'disp_x disp_y'\n    base_name = phase0\n    #    eigenstrain_names = eigenstrain2\n  []\n\n  [elasticity_tensor_phase1]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '2.596e5 1.79e5 1.79e5 2.596e5 1.79e5 2.596e5 1.096e5 1.096e5 1.096e5'\n    fill_method = symmetric9\n    euler_angle_1 = 0.0\n    euler_angle_2 = 0.0\n    euler_angle_3 = 0.0\n    base_name = phase1\n  []\n  [stress_phase1]\n    type = ComputeMultipleCrystalPlasticityStress\n    crystal_plasticity_models = 'trial_xtalpl_phase1'\n    rtol = 1e-9\n    abs_tol = 1e-10\n    tan_mod_type = exact\n    base_name = phase1\n  []\n  [trial_xtalpl_phase1]\n    type = CrystalPlasticityKalidindiUpdate\n    number_slip_systems = 12\n    slip_sys_file_name = input_slip_sys.txt\n    crystal_lattice_type = FCC\n    r = 1.0             \n    h = 6000            \n    t_sat = 598.5        \n    gss_a = 1.5         \n    ao = 0.001           \n    xm = 0.017             \n    gss_initial = 465.5     \n    base_name = phase1\n  []\n\n  [strain_phase1]\n    type = ComputeFiniteStrain\n    displacements = 'disp_x disp_y'\n    base_name = phase1\n  []\n\n  # Switching functions for each phase\n  [h0]\n    type = SwitchingFunctionMultiPhaseMaterial\n    phase_etas = eta0\n    all_etas = 'eta0 eta1'\n    h_name = h0\n  []\n  [h1]\n    type = SwitchingFunctionMultiPhaseMaterial\n    phase_etas = eta1\n    all_etas = 'eta0 eta1'\n    h_name = h1\n  []\n\n  # Generate the global stress from the phase stresses\n  [global_stress]\n    type = MultiPhaseStressMaterial\n    phase_base = 'phase0 phase1'\n    h = 'h0  h1'\n  []\n[]\n\n[Kernels]\n  [eta0_dt]\n    type = TimeDerivative\n    variable = eta0\n  []\n  [eta1_dt]\n    type = TimeDerivative\n    variable = eta1\n  []\n  [TensorMechanics]\n    displacements = 'disp_x disp_y'\n  []\n[]\n\n[Postprocessors]\n  [phase0_pk2]\n    type = ElementAverageValue\n    variable = phase0_pk2\n  []\n  [phase0_fp_xx]\n    type = ElementAverageValue\n    variable = phase0_fp_xx\n  []\n  [phase0_e_xx]\n    type = ElementAverageValue\n    variable = phase0_e_xx\n  []\n  [phase1_pk2]\n    type = ElementAverageValue\n    variable = phase1_pk2\n  []\n  [phase1_fp_xx]\n    type = ElementAverageValue\n    variable = phase1_fp_xx\n  []\n  [phase1_e_xx]\n    type = ElementAverageValue\n    variable = phase1_e_xx\n  []\n  [vonmises]\n    type = ElementAverageValue\n    variable = vonmises\n    block = 'ANY_BLOCK_ID 0'\n  []\n  [stress_xx]\n    type = ElementAverageValue\n    variable = stress_xx\n  []\n  [phase0_gss]\n    type = ElementAverageValue\n    variable = phase0_gss\n  []\n  [phase0_slip_increment]\n    type = ElementAverageValue\n    variable = phase0_slip_increment\n  []\n  [phase1_gss]\n    type = ElementAverageValue\n    variable = phase1_gss\n  []\n  [phase1_slip_increment]\n    type = ElementAverageValue\n    variable = phase1_slip_increment\n  []\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n\n  petsc_options_iname = '-pc_type -pc_factor_mat_solver_package -snes_type'\n  petsc_options_value = 'lu            superlu_dist          vinewtonrsls'\n\n  #  petsc_options_iname = '-pc_type -pc_asm_overlap -sub_pc_type -ksp_type -ksp_gmres_restart'\n  #  petsc_options_value = ' asm      2              lu            gmres     200'\n  l_max_its = 20\n  nl_max_its = 10\n  nl_rel_tol = 1.0e-8\n  nl_abs_tol = 1.0e-9\n\n  end_time = 21.50\n\n  [TimeStepper]\n    type = IterationAdaptiveDT\n    dt = 5e-3\n    cutback_factor = 0.75\n    growth_factor = 1.2\n    optimal_iterations = 20\n  []\n[]\n\n[Outputs]\n  exodus = true\n  print_linear_residuals = true\n  time_step_interval = 5\n  [console]\n    type = Console\n    time_step_interval = 5\n  []\n  [table]\n    type = CSV\n    execute_on = timestep_end\n    time_step_interval = 5\n  [] \n[]",
                  "url": "https://github.com/idaholab/moose/discussions/28086#discussioncomment-10032057",
                  "updatedAt": "2024-07-12T13:39:38Z",
                  "publishedAt": "2024-07-12T13:39:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "coupling problem",
          "author": {
            "login": "zahidhasan83"
          },
          "bodyText": "Dear all,\nI am trying to simulate two different physics with two different input files using phase field module. However, the two different material physics are dependent on each other. Therefore, I am planning to do a coupled simulation. The computation will look like:\n\nFirst run input1.i file to solve the first physics and get the output file (input1.e) with grain structure and grain boundaries.\nNext, import the grain structure and boundaries from input1.e file to input2.i file and solve the second physics. Get the input2.e file from this step with output grain structure and grain boundaries.\nFollowing that feed the grain structure and grain boundaries from input2.e file in the input1.i file and solve the first physics again.\n\nThese simulation steps will repeat for a certain time.\nWould you be kind to let me know, how to do such computation in MOOSE? Do I need to use a Multiapp system for that? If so which Multiapp system will be the most appropriate for these problem?\nI would appreciate your advice.\nThanks, and best regards,\nZahid",
          "url": "https://github.com/idaholab/moose/discussions/28104",
          "updatedAt": "2024-07-12T08:45:59Z",
          "publishedAt": "2024-07-11T02:19:58Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Rahim-Habibi"
                  },
                  "bodyText": "Hi,\nI would suggest \"TransientMultiApp', you can control the apps via \"execute_on\" and \"sub_cycling\".\nOR\nAnother option would be to apply \"restart\" to feed the parent/child at each step by child/parent output.\nRahim",
                  "url": "https://github.com/idaholab/moose/discussions/28104#discussioncomment-10019625",
                  "updatedAt": "2024-07-11T10:23:01Z",
                  "publishedAt": "2024-07-11T10:23:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "zahidhasan83"
                          },
                          "bodyText": "@Rahim-Habibi Dear Rahim, since I am exchanging the grain structure and grain boundaries between two simulations, do you think the following input in the parent file makes sense for a TransientMultiApp:\n\"[MultiApps]\n[sub]\ntype = TransientMultiApp\napp_type = MooseTestApp\npositions = '0 0 0'\ninput_files = 'recr-test-2.i'\nclone_parent_mesh = true\nexecute_on = 'timestep_end'\n[]\n[]\n[Transfers]\n[bnds_from_sub]\ntype = MultiAppShapeEvaluationTransfer\nfrom_multi_app = sub\nsource_variable = bnds\nvariable = bnds\nexecute_on = 'timestep_end'\n[]\n[gr0_from_sub]\ntype = MultiAppShapeEvaluationTransfer\nfrom_multi_app = sub\nsource_variable = gr0\nvariable = gr0\nexecute_on = 'timestep_end'\n[]\n[bnds_to_sub]\ntype = MultiAppShapeEvaluationTransfer\nto_multi_app = sub\nsource_variable = bnds\nvariable = bnds\nexecute_on = 'timestep_end'\n[]\n[gr0_to_sub]\ntype = MultiAppShapeEvaluationTransfer\nto_multi_app = sub\nsource_variable = gr0\nvariable = gr0\nexecute_on = 'timestep_end'\n[]\n[]\"\nOther queries:\nI am using the identical computational domain and scale for both simulations. Therefore, positions = '0 0 0' is correct? If clone_parent_mesh = true, will the second.i use the output mesh from the first.i?\nThanks, and best regards,\nZahid",
                          "url": "https://github.com/idaholab/moose/discussions/28104#discussioncomment-10025902",
                          "updatedAt": "2024-07-11T23:15:12Z",
                          "publishedAt": "2024-07-11T23:15:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Rahim-Habibi"
                          },
                          "bodyText": "Hi,\nYes, it seems OK.\nRegarding your second query, \"clone_parent_mesh\" is about the mesh and initilizes the apps by same mesh when it is true.  Generally you can define the mesh either in child app or parant app using this option.\nWhen you want to run child app in spacfic position(s) you need to set position otherwise just leave the setting as it is (I think so).\nTo have control on the outputs, check \"Transfers\" objects and use the proper one based on your problem.\nRahim",
                          "url": "https://github.com/idaholab/moose/discussions/28104#discussioncomment-10029339",
                          "updatedAt": "2024-07-12T08:55:46Z",
                          "publishedAt": "2024-07-12T08:45:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIs this a transient and you are solving physics1 then physics2 every time step?\nIn this case use a TransientMultiapp\nOr are you looking for a steady state equilibrium solution?\nIn this case use a FullSolveMultiapp\nYou can use Transfers to pass the solution between the two solves\nThere is a tutorial on this here:\nhttps://mooseframework.inl.gov/getting_started/examples_and_tutorials/tutorial02_multiapps/presentation/index.html#/\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28104#discussioncomment-10021859",
                  "updatedAt": "2024-07-11T14:16:17Z",
                  "publishedAt": "2024-07-11T14:16:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "zahidhasan83"
                          },
                          "bodyText": "@GiudGiud Appreciate.",
                          "url": "https://github.com/idaholab/moose/discussions/28104#discussioncomment-10025852",
                          "updatedAt": "2024-07-11T23:02:05Z",
                          "publishedAt": "2024-07-11T23:02:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Multiple Cubes with Mesh Generation",
          "author": {
            "login": "AryGP"
          },
          "bodyText": "Hello,\nI am trying to simulate the thermal expansion of two copper wafers using MOOSE and visualizing on Paraview. I am struggling to create 2 objects in moose. I am using the solid_mechanics/thermal_expansion/constant_expansion_stress_free_temp.i\nThis is what I have, I just want to make 2 cubes and see both of them expand and come in contact.\n[Mesh]\n  type = GeneratedMesh\n  dim = 3\n  nx = 2\n  ny = 2\n  nz = 2\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n[]\n\n[AuxVariables]\n  [./temp]\n  [../]\n[]\n\n[Functions]\n  [./temperature_load]\n    type = ParsedFunction\n    expression = t*(500.0)+300.0\n  [../]\n[]\n\n[Physics]\n  [SolidMechanics]\n    [QuasiStatic]\n      [./all]\n        strain = SMALL\n        incremental = true\n        add_variables = true\n        eigenstrain_names = eigenstrain\n        generate_output = 'strain_xx strain_yy strain_zz'\n      [../]\n    [../]\n  [../]\n[]\n\n[AuxKernels]\n  [./tempfuncaux]\n    type = FunctionAux\n    variable = temp\n    function = temperature_load\n  [../]\n[]\n\n[BCs]\n  [./x_bot]\n    type = DirichletBC\n    variable = disp_x\n    boundary = left\n    value = 0.0\n  [../]\n  [./y_bot]\n    type = DirichletBC\n    variable = disp_y\n    boundary = bottom\n    value = 0.0\n  [../]\n  [./z_bot]\n    type = DirichletBC\n    variable = disp_z\n    boundary = back\n    value = 0.0\n  [../]\n[]\n\n[Materials]\n  [./elasticity_tensor]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 2.1e5\n    poissons_ratio = 0.3\n  [../]\n  [./small_stress]\n    type = ComputeFiniteStrainElasticStress\n  [../]\n  [./thermal_expansion_strain]\n    type = ComputeThermalExpansionEigenstrain\n    stress_free_temperature = 298\n    thermal_expansion_coeff = 1.3e-5\n    temperature = temp\n    eigenstrain_name = eigenstrain\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = 'PJFNK'\n\n  l_max_its = 50\n  nl_max_its = 50\n  nl_rel_tol = 1e-12\n  nl_abs_tol = 1e-10\n  l_tol = 1e-9\n\n  start_time = 0.0\n  end_time = 0.075\n  dt = 0.0125\n  dtmin = 0.0001\n[]\n\n[Outputs]\n  exodus = true\n  checkpoint = true\n[]\n\n[Postprocessors]\n  [./strain_xx]\n    type = ElementAverageValue\n    variable = strain_xx\n  [../]\n  [./strain_yy]\n    type = ElementAverageValue\n    variable = strain_yy\n  [../]\n  [./strain_zz]\n    type = ElementAverageValue\n    variable = strain_zz\n  [../]\n  [./temperature]\n    type = AverageNodalVariableValue\n    variable = temp\n  [../]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/28090",
          "updatedAt": "2024-07-12T00:13:16Z",
          "publishedAt": "2024-07-10T01:45:43Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nTry this to make two cubes\n[Mesh]\n  [cube1]\n    type = GeneratedMeshGenerator\n    dim = 3\n    nx = 2\n    ny = 2\n    nz = 2\n    subdomain_name = 'cube1'\n  []\n  [cube2]\n    type = GeneratedMeshGenerator\n    dim = 3\n    xmin = 1\n    xmax = 2\n    nx = 2\n    ny = 2\n    nz = 2\n    subdomain_ids = '1'\n    subdomain_name = 'cube2'\n  []\n  [stitch]\n    type = StitchedMeshGenerator\n    inputs = 'cube1 cube2'\n    stitch_boundaries_pairs = 'right left'\n[]\n[]\n\nThe two meshes will have different subdomains so you can define different materials on them for example",
                  "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10004967",
                  "updatedAt": "2024-07-10T04:19:44Z",
                  "publishedAt": "2024-07-10T04:19:43Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "AryGP"
                          },
                          "bodyText": "Awesome, that worked. Thanks!\nThe only issue I'm having now is that whenever I take the file to paraview (visualizer for moose), it's not able to create the cubes as it was able to before with just the 1.",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10024964",
                          "updatedAt": "2024-07-11T20:16:48Z",
                          "publishedAt": "2024-07-11T20:16:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AryGP"
                          },
                          "bodyText": "also, after the 3rd time step, in the ran test,\n30 Linear |R| = 6.013082e-14\nthis is red, while all the other are green.",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10024988",
                          "updatedAt": "2024-07-11T20:20:16Z",
                          "publishedAt": "2024-07-11T20:20:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the 30th is red because the residual increased instead of decreased. this is not cause for concern",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10025095",
                          "updatedAt": "2024-07-11T20:38:02Z",
                          "publishedAt": "2024-07-11T20:38:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AryGP"
                          },
                          "bodyText": "",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10025231",
                          "updatedAt": "2024-07-11T21:02:57Z",
                          "publishedAt": "2024-07-11T21:02:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AryGP"
                          },
                          "bodyText": "",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10025239",
                          "updatedAt": "2024-07-11T21:03:49Z",
                          "publishedAt": "2024-07-11T21:03:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "in StitchedMeshGenerator set prevent_boundary_ids_overlap = False",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10025247",
                          "updatedAt": "2024-07-11T21:05:51Z",
                          "publishedAt": "2024-07-11T21:05:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AryGP"
                          },
                          "bodyText": "Wow, thanks. That worked. Do you mind explaining the syntax of the coordinate system? I am now trying to create a small gap between those two cubes instead of having them touch so I can see at what distance I can set them apart so they come in contact under increase in temp.",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10025303",
                          "updatedAt": "2024-07-11T21:20:38Z",
                          "publishedAt": "2024-07-11T21:20:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if the cubes should be separate do not stitch them\nyou can use a CombinerGenerator to just have the two blocks sitting next to each other",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10025330",
                          "updatedAt": "2024-07-11T21:25:03Z",
                          "publishedAt": "2024-07-11T21:25:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AryGP"
                          },
                          "bodyText": "Ok.\n\nAlso, on a separate note. If I want to change the material of the cube, how would I do that? Is that something I need to do in moose or in paraview?\nIs it possible to have a cube and a cylinder together as well instead of 2 cubes?",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10025425",
                          "updatedAt": "2024-07-11T21:39:56Z",
                          "publishedAt": "2024-07-11T21:39:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "these are both trivial things to do in moose\nplease follow the training material here\nhttps://mooseframework.inl.gov/getting_started/examples_and_tutorials/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10025465",
                          "updatedAt": "2024-07-11T21:46:47Z",
                          "publishedAt": "2024-07-11T21:46:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "AryGP"
                  },
                  "bodyText": "I was able to create the Concentric circle but I can't get the extrude generator to work.\n[Mesh]\n[cube1]\ntype = GeneratedMeshGenerator\ndim = 3\nnx = 2\nny = 2\nnz = 2\nsubdomain_name = 'cube1'\n[]\n[circle]\ntype = ConcentricCircleMeshGenerator\nnum_sectors = 6\nradii = '0.2546 0.3368 0.3600 0.3818 0.3923 0.4025 0.4110 0.4750'\nrings = '5 3 2 1 1 1 1 3 5'\nhas_outer_square = on\npitch = 1.42063\n#portion = left_half\npreserve_volumes = off\nsmoothing_max_it = 3\n[]\n[extrude]\ntype = AdvancedExtruderGenerator\ninput = cylinder\nheights = '1 2 3'\nnum_layers = '1 2 3'\ndirection = '0 0 1'\nbottom_sideset = '4'\ntop_sideset = '5'\nsubdomain_swaps = '0 1;\n0 2;\n0 3'\n[]\n[stitch]\ntype = StitchedMeshGenerator\nprevent_boundary_ids_overlap = False\ninputs = 'cube1 cylinder'\nstitch_boundaries_pairs = 'right left'\n[]\n[]\n*** ERROR ***\nYour MeshGenerator tree contains multiple possible generator outputs :\n\"stitch and one or more of the following from an independent set: \"extrude\"\nThis may be due to a missing dependency or may be intentional. Please either\n\ncheck that all the mesh generators are connected as a tree and culminate in a single final mesh. Having one wrong 'input=mg' parameter is the most common error\nadd additional dependencies to remove the ambiguity if you are using a user-built MeshGenerator\nif you intend to execute a subset of the defined generators (uncommon), select the final MeshGenerator in the [Mesh] block with the \"final_generator\" parameter.",
                  "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10026090",
                  "updatedAt": "2024-07-12T00:09:54Z",
                  "publishedAt": "2024-07-12T00:09:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the error message explains what is happening.\nyou need every mesh generator to form a connected graph with a single output mesh (the tree)",
                          "url": "https://github.com/idaholab/moose/discussions/28090#discussioncomment-10026108",
                          "updatedAt": "2024-07-12T00:13:16Z",
                          "publishedAt": "2024-07-12T00:13:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Switching from constant rate well to constant BHP",
          "author": {
            "login": "Femi-Oyenowo"
          },
          "bodyText": "Is there currently a way to switch from a constant rate well to a constant bottomhole pressure (BHP) well once a certain max BHP is reached?",
          "url": "https://github.com/idaholab/moose/discussions/28087",
          "updatedAt": "2024-07-11T23:47:16Z",
          "publishedAt": "2024-07-09T23:33:43Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Femi-Oyenowo"
                  },
                  "bodyText": "Is there a way to combine the current DiracKernels or PorousFlowSinks like the PeacemanBorehole to mimic this constraint?",
                  "url": "https://github.com/idaholab/moose/discussions/28087#discussioncomment-10024530",
                  "updatedAt": "2024-07-11T19:09:02Z",
                  "publishedAt": "2024-07-11T19:09:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@cpgr",
                          "url": "https://github.com/idaholab/moose/discussions/28087#discussioncomment-10024590",
                          "updatedAt": "2024-07-11T19:17:52Z",
                          "publishedAt": "2024-07-11T19:17:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "Not at the moment I don't believe. You could perhaps use the controls system and a function based on a post processor for bottom hole pressure to turn off a constant rate source and turn on a Peaceman source?",
                          "url": "https://github.com/idaholab/moose/discussions/28087#discussioncomment-10026014",
                          "updatedAt": "2024-07-11T23:47:17Z",
                          "publishedAt": "2024-07-11T23:47:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Not a registered object issue",
          "author": {
            "login": "rnpratoori"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nMy issue is similar to #27623 but I am facing this issue for PhaseField Module.\nI had to delete my previous installation and reinstall it again. I tried doing git clean -xfd but with no success. Below is the error message I keep getting -\nA 'SplitCHParsed' is not a registered object.\n\nIf you are trying to find this object in a dynamically loaded library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\n\nI also have some auxkernels in it, but they don't seem to have any issue. How can I fix this? I am using moose on wsl",
          "url": "https://github.com/idaholab/moose/discussions/28106",
          "updatedAt": "2024-07-11T20:18:40Z",
          "publishedAt": "2024-07-11T14:51:36Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhich executable are you using?\nIs this an app or inside moose?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10022461",
                  "updatedAt": "2024-07-11T15:11:28Z",
                  "publishedAt": "2024-07-11T15:11:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "rnpratoori"
                          },
                          "bodyText": "This is an app I am working on - https://github.com/rnpratoori/panther\nI compiled it using make -j 6 in the app directory.",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10022517",
                          "updatedAt": "2024-07-11T15:17:08Z",
                          "publishedAt": "2024-07-11T15:17:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you please try\ncd panther\ngit commit -am \"save all\"\ngit clean -xfd\ncd ../moose\ngit commit -am \"Save all\"\ngit clean -xfd\ncd ../panther\nmake -j6",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10022541",
                          "updatedAt": "2024-07-11T15:20:02Z",
                          "publishedAt": "2024-07-11T15:20:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rnpratoori"
                          },
                          "bodyText": "Thank you for your reply @GiudGiud. I tried the commands, but I am still facing the same issue.",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10022841",
                          "updatedAt": "2024-07-11T15:49:24Z",
                          "publishedAt": "2024-07-11T15:49:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rnpratoori"
                          },
                          "bodyText": "@GiudGiud This is the complete message I get, if it is of any help -\nA 'SplitCHParsed' is not a registered object.\n\nIf you are trying to find this object in a dynamically loaded library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\n\nStack frames: 21\n0: libMesh::print_trace(std::ostream&)\n1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\n2: void mooseError<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n3: Factory::reportUnregisteredError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const\n4: Factory::getValidParams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const\n5: MooseObjectAction::MooseObjectAction(InputParameters const&)\n6: AddKernelAction::AddKernelAction(InputParameters const&)\n7: RegistryEntry<AddKernelAction>::buildAction(InputParameters const&)\n8: ActionFactory::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, InputParameters&)\n9: Moose::Builder::walkRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, hit::Node*)\n10: Moose::Builder::walk(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, hit::Node*)\n11: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n12: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n13: hit::Node::walk(hit::Walker*, hit::NodeType, hit::TraversalOrder)\n14: Moose::Builder::build()\n15: MooseApp::setupOptions()\n16: MooseApp::run()\n17: ../panther-opt(+0x20eb) [0x5593532200eb]\n18: main\n19: __libc_start_main\n20: ../panther-opt(+0x2396) [0x559353220396]\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10023050",
                          "updatedAt": "2024-07-11T16:12:46Z",
                          "publishedAt": "2024-07-11T16:12:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you please copy paste the Makefile in your local repo ?",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10023274",
                          "updatedAt": "2024-07-11T16:35:38Z",
                          "publishedAt": "2024-07-11T16:35:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rnpratoori"
                          },
                          "bodyText": "Here it is -\n################### MOOSE Application Standard Makefile #######################\n###############################################################################\n#\n# Optional Environment variables\n# MOOSE_DIR        - Root directory of the MOOSE project\n#\n###############################################################################\n# Use the MOOSE submodule if it exists and MOOSE_DIR is not set\nMOOSE_SUBMODULE    := $(CURDIR)/moose\nifneq ($(wildcard $(MOOSE_SUBMODULE)/framework/Makefile),)\n  MOOSE_DIR        ?= $(MOOSE_SUBMODULE)\nelse\n  MOOSE_DIR        ?= $(shell dirname `pwd`)/moose\nendif\n\n# framework\nFRAMEWORK_DIR      := $(MOOSE_DIR)/framework\ninclude $(FRAMEWORK_DIR)/build.mk\ninclude $(FRAMEWORK_DIR)/moose.mk\n\n################################## MODULES ####################################\n# To use certain physics included with MOOSE, set variables below to\n# yes as needed.  Or set ALL_MODULES to yes to turn on everything (overrides\n# other set variables).\n\nALL_MODULES                 := no\n\nCHEMICAL_REACTIONS          := no\nCONTACT                     := no\nELECTROMAGNETICS            := no\nEXTERNAL_PETSC_SOLVER       := no\nFLUID_PROPERTIES            := no\nFSI                         := no\nFUNCTIONAL_EXPANSION_TOOLS  := no\nGEOCHEMISTRY                := no\nHEAT_TRANSFER               := no\nLEVEL_SET                   := no\nMISC                        := no\nNAVIER_STOKES               := no\nOPTIMIZATION                := no\nPERIDYNAMICS                := no\nPHASE_FIELD                 := yes \nPOROUS_FLOW                 := no\nRAY_TRACING                 := no\nREACTOR                     := no\nRDG                         := no\nRICHARDS                    := no\nSOLID_MECHANICS             := no\nSTOCHASTIC_TOOLS            := no\nTHERMAL_HYDRAULICS          := no\nXFEM                        := no\n\ninclude $(MOOSE_DIR)/modules/modules.mk\n###############################################################################\n\n# dep apps\nAPPLICATION_DIR    := $(CURDIR)\nAPPLICATION_NAME   := panther\nBUILD_EXEC         := yes\nGEN_REVISION       := no\ninclude            $(FRAMEWORK_DIR)/app.mk\n\n###############################################################################\n# Additional special case targets should be added here",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10023290",
                          "updatedAt": "2024-07-11T16:37:34Z",
                          "publishedAt": "2024-07-11T16:37:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what does ldd <your executable-opt> return ? (are you using linux?)",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10023794",
                          "updatedAt": "2024-07-11T17:34:46Z",
                          "publishedAt": "2024-07-11T17:34:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rnpratoori"
                          },
                          "bodyText": "I am using wsl on Windows 11 with Ubuntu 20.04. Here is the output of ldd:\n        libpanther_test-opt.so.0 => /home/rnp20/MOOSE/projects/panther/test/lib/libpanther_test-opt.so.0 (0x00007f821e54e000)\n        libmoose-opt.so.0 => /home/rnp20/MOOSE/projects/moose/framework/libmoose-opt.so.0 (0x00007f821b8e0000)\n        libpcre-opt.so.0 => /home/rnp20/MOOSE/projects/moose/framework/contrib/pcre/libpcre-opt.so.0 (0x00007f821b8b3000)\n        libhit-opt.so.0 => /home/rnp20/MOOSE/projects/moose/framework/contrib/hit/libhit-opt.so.0 (0x00007f821b840000)\n        libpanther-opt.so.0 => /home/rnp20/MOOSE/projects/panther/lib/libpanther-opt.so.0 (0x00007f821b7ed000)\n        libmodule_loader_with-opt.so.0 => /home/rnp20/MOOSE/projects/moose/modules/module_loader/lib/libmodule_loader_with-opt.so.0 (0x00007f821b7de000)\n        libwaspcore.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwaspcore.so.04 (0x00007f821b7bb000)\n        libwaspddi.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwaspddi.so.04 (0x00007f821b79c000)\n        libwaspexpr.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwaspexpr.so.04 (0x00007f821b768000)\n        libwasphalite.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwasphalite.so.04 (0x00007f821b70e000)\n        libwasphit.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwasphit.so.04 (0x00007f821b6c0000)\n        libwasphive.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwasphive.so.04 (0x00007f821b6b6000)\n        libwaspjson.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwaspjson.so.04 (0x00007f821b672000)\n        libwasplsp.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwasplsp.so.04 (0x00007f821b632000)\n        libwaspsiren.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwaspsiren.so.04 (0x00007f821b616000)\n        libwaspson.so.04 => /home/rnp20/miniforge/envs/moose/wasp/lib/libwaspson.so.04 (0x00007f821b5c6000)\n        libmesh_opt.so.0 => /home/rnp20/miniforge/envs/moose/libmesh/lib/libmesh_opt.so.0 (0x00007f8219e15000)\n        libtimpi_opt.so.11 => /home/rnp20/miniforge/envs/moose/libmesh/lib/libtimpi_opt.so.11 (0x00007f8219e06000)\n        libvtkIOCore-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkIOCore-9.2.so.1 (0x00007f8219d98000)\n        libvtkCommonCore-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkCommonCore-9.2.so.1 (0x00007f8219531000)\n        libvtkCommonDataModel-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkCommonDataModel-9.2.so.1 (0x00007f8218fff000)\n        libvtkFiltersCore-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkFiltersCore-9.2.so.1 (0x00007f82187a1000)\n        libvtkIOXML-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkIOXML-9.2.so.1 (0x00007f8218687000)\n        libvtkImagingCore-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkImagingCore-9.2.so.1 (0x00007f82183f3000)\n        libvtkIOImage-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkIOImage-9.2.so.1 (0x00007f8218215000)\n        libvtkImagingMath-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkImagingMath-9.2.so.1 (0x00007f82181cc000)\n        libvtkIOParallelXML-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkIOParallelXML-9.2.so.1 (0x00007f8218183000)\n        libvtkParallelMPI-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkParallelMPI-9.2.so.1 (0x00007f8218165000)\n        libvtkParallelCore-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkParallelCore-9.2.so.1 (0x00007f8218104000)\n        libvtkCommonExecutionModel-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtkCommonExecutionModel-9.2.so.1 (0x00007f8218006000)\n        libvtksys-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/libvtksys-9.2.so.1 (0x00007f8217fb5000)\n        libz.so.1 => /home/rnp20/miniforge/envs/moose/lib/libz.so.1 (0x00007f8217f9a000)\n        libslepc.so.3.20 => /home/rnp20/miniforge/envs/moose/lib/libslepc.so.3.20 (0x00007f8217bdf000)\n        libpetsc.so.3.20 => /home/rnp20/miniforge/envs/moose/lib/libpetsc.so.3.20 (0x00007f8216165000)\n        libHYPRE-2.29.0.so => /home/rnp20/miniforge/envs/moose/lib/libHYPRE-2.29.0.so (0x00007f8215cfe000)\n        libstrumpack.so.7.1 => /home/rnp20/miniforge/envs/moose/lib/libstrumpack.so.7.1 (0x00007f8214cdf000)\n        libscalapack.so.2.2 => /home/rnp20/miniforge/envs/moose/lib/libscalapack.so.2.2 (0x00007f82145e8000)\n        libsuperlu_dist.so.8 => /home/rnp20/miniforge/envs/moose/lib/libsuperlu_dist.so.8 (0x00007f8214464000)\n        libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f8214427000)\n        libparmetis.so => /home/rnp20/miniforge/envs/moose/lib/libparmetis.so (0x00007f82143e7000)\n        libmetis.so => /home/rnp20/miniforge/envs/moose/lib/libmetis.so (0x00007f821437c000)\n        libhdf5_hl.so.200 => /home/rnp20/miniforge/envs/moose/lib/libhdf5_hl.so.200 (0x00007f8214358000)\n        libhdf5.so.200 => /home/rnp20/miniforge/envs/moose/lib/libhdf5.so.200 (0x00007f8213f26000)\n        libmpifort.so.12 => /home/rnp20/miniforge/envs/moose/lib/libmpifort.so.12 (0x00007f8213ed5000)\n        libgfortran.so.5 => /home/rnp20/miniforge/envs/moose/lib/libgfortran.so.5 (0x00007f8213d2a000)\n        libgcc_s.so.1 => /home/rnp20/miniforge/envs/moose/lib/libgcc_s.so.1 (0x00007f8213d0d000)\n        libquadmath.so.0 => /home/rnp20/miniforge/envs/moose/lib/libquadmath.so.0 (0x00007f8213cd4000)\n        libstdc++.so.6 => /home/rnp20/miniforge/envs/moose/lib/libstdc++.so.6 (0x00007f8213af1000)\n        librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f8213ae7000)\n        libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8213ae1000)\n        libmpi.so.12 => /home/rnp20/miniforge/envs/moose/lib/libmpi.so.12 (0x00007f82136c7000)\n        libmpicxx.so.12 => /home/rnp20/miniforge/envs/moose/lib/libmpicxx.so.12 (0x00007f82136a6000)\n        libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f8213557000)\n        libgomp.so.1 => /home/rnp20/miniforge/envs/moose/lib/libgomp.so.1 (0x00007f821351b000)\n        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8213329000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007f821e568000)\n        libnetcdf.so.13 => /home/rnp20/miniforge/envs/moose/libmesh/lib/./libnetcdf.so.13 (0x00007f8213217000)\n        libvtkdoubleconversion-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkdoubleconversion-9.2.so.1 (0x00007f8213206000)\n        libvtklz4-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtklz4-9.2.so.1 (0x00007f82131d0000)\n        libvtklzma-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtklzma-9.2.so.1 (0x00007f82131a3000)\n        libvtkzlib-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkzlib-9.2.so.1 (0x00007f8213185000)\n        libvtkloguru-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkloguru-9.2.so.1 (0x00007f821314d000)\n        libvtkCommonTransforms-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkCommonTransforms-9.2.so.1 (0x00007f821310a000)\n        libvtkCommonMisc-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkCommonMisc-9.2.so.1 (0x00007f8212cd9000)\n        libvtkCommonSystem-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkCommonSystem-9.2.so.1 (0x00007f8212c99000)\n        libvtkpugixml-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkpugixml-9.2.so.1 (0x00007f8212c5c000)\n        libvtkCommonMath-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkCommonMath-9.2.so.1 (0x00007f8212c35000)\n        libvtkIOXMLParser-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkIOXMLParser-9.2.so.1 (0x00007f8212c1b000)\n        libvtkDICOMParser-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkDICOMParser-9.2.so.1 (0x00007f8212bfc000)\n        libvtkmetaio-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkmetaio-9.2.so.1 (0x00007f8212b5e000)\n        libvtkpng-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkpng-9.2.so.1 (0x00007f8212b17000)\n        libvtktiff-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtktiff-9.2.so.1 (0x00007f8212a95000)\n        libvtkjpeg-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkjpeg-9.2.so.1 (0x00007f8212a18000)\n        libvtkIOLegacy-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/./libvtkIOLegacy-9.2.so.1 (0x00007f8212957000)\n        libzfp.so.0 => /home/rnp20/miniforge/envs/moose/lib/./libzfp.so.0 (0x00007f8212903000)\n        libcrypto.so.1.1 => /home/rnp20/miniforge/envs/moose/lib/./libcrypto.so.1.1 (0x00007f8212631000)\n        libcurl.so.4 => /home/rnp20/miniforge/envs/moose/lib/./libcurl.so.4 (0x00007f821258e000)\n        libvtkkissfft-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/././libvtkkissfft-9.2.so.1 (0x00007f8212584000)\n        libvtkexpat-9.2.so.1 => /home/rnp20/miniforge/envs/moose/libmesh-vtk/lib/././libvtkexpat-9.2.so.1 (0x00007f8212551000)\n        libnghttp2.so.14 => /home/rnp20/miniforge/envs/moose/lib/././libnghttp2.so.14 (0x00007f8212523000)\n        libssh2.so.1 => /home/rnp20/miniforge/envs/moose/lib/././libssh2.so.1 (0x00007f82124df000)\n        libssl.so.1.1 => /home/rnp20/miniforge/envs/moose/lib/././libssl.so.1.1 (0x00007f821244f000)\n        libgssapi_krb5.so.2 => /home/rnp20/miniforge/envs/moose/lib/././libgssapi_krb5.so.2 (0x00007f82123fc000)\n        libkrb5.so.3 => /home/rnp20/miniforge/envs/moose/lib/./././libkrb5.so.3 (0x00007f8212325000)\n        libk5crypto.so.3 => /home/rnp20/miniforge/envs/moose/lib/./././libk5crypto.so.3 (0x00007f8212309000)\n        libcom_err.so.3 => /home/rnp20/miniforge/envs/moose/lib/./././libcom_err.so.3 (0x00007f8212303000)\n        libkrb5support.so.0 => /home/rnp20/miniforge/envs/moose/lib/./././libkrb5support.so.0 (0x00007f82122f4000)\n        libkeyutils.so.1 => /home/rnp20/miniforge/envs/moose/lib/./././libkeyutils.so.1 (0x00007f82122ed000)\n        libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 (0x00007f82122d1000)",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10023881",
                          "updatedAt": "2024-07-11T17:43:11Z",
                          "publishedAt": "2024-07-11T17:43:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont see phase_field being linked it.\nSo something failed with the Makefile.\nYou can try setting ALL_MODULES to yes and recompiling the executable",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10024274",
                          "updatedAt": "2024-07-11T18:33:53Z",
                          "publishedAt": "2024-07-11T18:33:53Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rnpratoori"
                          },
                          "bodyText": "@GiudGiud this works",
                          "url": "https://github.com/idaholab/moose/discussions/28106#discussioncomment-10024977",
                          "updatedAt": "2024-07-11T20:18:41Z",
                          "publishedAt": "2024-07-11T20:18:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Restart error",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "I already have this mesh I want restart from\n[Mesh]\n  file = 0166-mesh.cpr\n[]\n[Problem]\n  restart_file_base = 0166-mesh.cpr\n[]\n\nBut I get this error:\n\ufffd[36m\n*** Info ***\nSolidMechanics Action: selecting 'incremental finite strain' formulation.\ufffd[39m\n\n\ufffd[36m\n*** Info ***\nUsing /home/emmanuel324/projects/belson/Final_scripts/1/0166-mesh.cpr for restart.\ufffd[39m\nFinished Setting Up                                                                      [\ufffd[33m  1.34 s\ufffd[39m] [\ufffd[33m  425 MB\ufffd[39m]\n\n\ufffd[31m\n*** ERROR ***\nUnable to open file \"/home/emmanuel324/projects/belson/Final_scripts/1/0166-mesh.cpr-restart-0.rd/header\"\ufffd[39m\n\n\n\ufffd[31m\n*** ERROR ***\nUnable to open file \"/home/emmanuel324/projects/belson/Final_scripts/1/0166-mesh.cpr-restart-1.rd/header\"\ufffd[39m\n\nEven though I have these files \"0166-mesh.cpr-restart-0.rd\" and \"0166-mesh.cpr-restart-1.rd\" in the folder it is asking for. Any help?",
          "url": "https://github.com/idaholab/moose/discussions/28109",
          "updatedAt": "2024-07-11T16:50:08Z",
          "publishedAt": "2024-07-11T16:13:06Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Emmanuel-324"
                  },
                  "bodyText": "When I use restart_file_base = LATEST my script gets completed at a very high timestep with any meaningful outcome. I want my simulation to read the mesh as it is or continue at a slow timestep",
                  "url": "https://github.com/idaholab/moose/discussions/28109#discussioncomment-10023082",
                  "updatedAt": "2024-07-11T16:15:44Z",
                  "publishedAt": "2024-07-11T16:15:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you have to specify the start_time and end_time in the executioner to go beyond the time it restarts from",
                          "url": "https://github.com/idaholab/moose/discussions/28109#discussioncomment-10023284",
                          "updatedAt": "2024-07-11T16:36:22Z",
                          "publishedAt": "2024-07-11T16:36:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Emmanuel-324"
                          },
                          "bodyText": "I set my start_time and end_time but now it fails completely.\nTime Step 1, time = 42682.4, dt = 0.005\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 0.0025\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 0.00125\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 0.000625\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 0.0003125\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 0.00015625\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 7.8125e-05\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 3.90625e-05\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1.95313e-05\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 9.76563e-06\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 4.88281e-06\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 2.44141e-06\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1.2207e-06\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 6.10352e-07\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 3.05176e-07\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1.52588e-07\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 7.62939e-08\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 3.8147e-08\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1.90735e-08\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 9.53674e-09\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 4.76837e-09\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 2.38419e-09\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1.19209e-09\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 5.96046e-10\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 2.98023e-10\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1.49012e-10\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 7.45058e-11\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 3.72529e-11\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1.86265e-11\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 9.31323e-12\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 4.65661e-12\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 2.32831e-12\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1.16415e-12\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 42682.4, dt = 1e-12\n\nComputeMultipleCrystalPlasticityStress: Constitutive failure\nTo recover, the solution will fail and then be re-attempted with a reduced time step.\n\nNonlinear solve did not converge due to DIVERGED_FUNCTION_DOMAIN iterations 0\n\ufffd[31m Solve Did NOT Converge!\ufffd[39m\nAborting as solve did not converge\n\n\ufffd[31m\n*** ERROR ***\n/home/emmanuel324/projects/belson/Final_scripts/1/copper.i:386.3:\nThe following error occurred in the TimeStepper 'IterationAdaptiveDT' of type IterationAdaptiveDT.\n\nSolve failed and timestep already at dtmin, cannot continue!\ufffd[39m\n\n\n\ufffd[31m\n*** ERROR ***\n/home/emmanuel324/projects/belson/Final_scripts/1/copper.i:386.3:\nThe following error occurred in the TimeStepper 'IterationAdaptiveDT' of type IterationAdaptiveDT.\n\nSolve failed and timestep already at dtmin, cannot continue!\ufffd[39m",
                          "url": "https://github.com/idaholab/moose/discussions/28109#discussioncomment-10023413",
                          "updatedAt": "2024-07-11T16:50:08Z",
                          "publishedAt": "2024-07-11T16:50:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Can Smeared Cracking be Coupled with Production (Single Phase flow, Permeability Changes)",
          "author": {
            "login": "miraboreasumr"
          },
          "bodyText": "I want to know, what features that MOOSE does't support while I am using smeared cracking (continuum damage mode) coupled with flow in porous media to simulate hydraulic fracturing propagation and then productions (flow in to the location of damage factor = 1).\nI think I need to change the permeability at the grids with damage factor = 1, after this, I need to run another flow in porous media, or it can they be coupled? In-stitu stress needs to be considered.\nCan you also see some convergence issue for coupling these two methods?",
          "url": "https://github.com/idaholab/moose/discussions/27894",
          "updatedAt": "2024-07-11T15:59:57Z",
          "publishedAt": "2024-06-13T14:35:17Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@cpgr @rpodgorney",
                  "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-9765012",
                  "updatedAt": "2024-06-13T15:31:15Z",
                  "publishedAt": "2024-06-13T15:31:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "rpodgorney"
                  },
                  "bodyText": "Adding @lynnmunday , he has been doing smeared cracking runs in Falcon",
                  "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-9765057",
                  "updatedAt": "2024-06-13T15:53:40Z",
                  "publishedAt": "2024-06-13T15:35:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lynnmunday"
                  },
                  "bodyText": "I used PorousFlowFullySaturated with coupling_type = HYDROMECHANICAL which will set up the kernels for coupling porous flow and mechanics i.e. PorousFlowEffectiveStressCoupling and PorousFlowVolumetricStrain and the mechanics kernel.  However, unlike the Physics/SolidMechanics action, this does not create a strain calculator material i.e. ComputeIncrementalSmallStrain, so you need to include that like I have below.\nI have this auxvar for the smeared cracking strain that I use in the below to modify the permeability.\n[AuxVariables]\n  [./crack_max_strain1]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n[AuxKernels]\n  [./crack_strain1]\n    type = MaterialRealVectorValueAux\n    property = crack_max_strain\n    variable = crack_max_strain1\n    component = 0\n  [../]\n[]\n\nThis is the auxkernel to modify the permeability.  I also tried to compute the aperture but it was 2 order magnitude too large.  That is why I'm using a made up relationship between permeability and smeared cracking strain instead of a^2/12.  The crack_perm function needs work, maybe it should look like the maybe_better_perm auxkernel but that gives too large of a crack.  A better measure of the element length normal to the crack face would give a better strain measure.\n[AuxKernels]\n[crack_perm]\n  type = ParsedAux\n  variable = crack_perm\n  coupled_variables = 'permeability crack_max_strain1'\n  expression = 'permeability *(1 + ${three_s_over_a0} * max(0, crack_max_strain1))'\n  execute_on = NONLINEAR\n[]\n[maybe_better_perm]\n  type = ParsedAux\n  variable = crack_perm_not_used\n  coupled_variables = 'permeability crack_max_strain1 elem_length_min'\n  expression = 'a:=(crack_max_strain1*elem_length_min); permeability + (a)^2/12'\n  execute_on = TIMESTEP_END\n[]\n[aperture]\n  type = ParsedAux\n  variable = aperture\n  coupled_variables = 'crack_max_strain1 elem_length_min'\n  expression = '(crack_max_strain1*elem_length_min)'\n  execute_on = TIMESTEP_END\n[]\n[]\n\nThis is my porous flow and smeared cracking materials :\n[Materials]\n  [porosity]\n    type = PorousFlowPorosityConst\n    porosity = porosity \n  []\n  [permeability]\n    type = PorousFlowPermeabilityConstFromVar\n    perm_xx = crack_perm\n    perm_yy = crack_perm\n    perm_zz = crack_perm\n  []\n  [elasticity_fracture]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = ${rock_young}\n    poissons_ratio = ${rock_poisson}\n  []\n  [strain]\n    type = ComputeIncrementalSmallStrain\n    displacements = 'disp_x disp_y disp_z'\n  []\n  [elastic_stress]\n    type = ComputeSmearedCrackingStress\n    cracking_stress = 1.2e7\n    softening_models = abrupt_softening\n    max_stress_correction = 0.  #using zero lags damage by a timestep\n    shear_retention_factor = 0.1\n    cracked_elasticity_type = FULL\n    output_properties = true\n    perform_finite_strain_rotations=false\n  []\n  [abrupt_softening]\n    type = AbruptSoftening\n    residual_stress = 0.05\n  []\n  [undrained_density]\n    type = GenericConstantMaterial\n    prop_names = density\n    prop_values = ${rock_gravitational_density}\n  []\n[]\n\nTo make this work, you need to define some kind of weakened field for the smeared cracking model to fracture along or a some distribution of initial damage.  Other wise you will get isotropic damage around the highest pressure point.  You can also use a spatially varying permeability to spread out damage",
                  "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-9768892",
                  "updatedAt": "2024-06-14T00:42:07Z",
                  "publishedAt": "2024-06-14T00:42:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "Let me know if you get something working with the aperture.",
                          "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-9768896",
                          "updatedAt": "2024-06-14T00:43:16Z",
                          "publishedAt": "2024-06-14T00:42:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "miraboreasumr"
                          },
                          "bodyText": "I used PorousFlowFullySaturated with coupling_type = HYDROMECHANICAL which will set up the kernels for coupling porous flow and mechanics i.e. PorousFlowEffectiveStressCoupling and PorousFlowVolumetricStrain and the mechanics kernel. However, unlike the Physics/SolidMechanics action, this does not create a strain calculator material i.e. ComputeIncrementalSmallStrain, so you need to include that like I have below.\nI have this auxvar for the smeared cracking strain that I use in the below to modify the permeability.\n[AuxVariables]\n  [./crack_max_strain1]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n[AuxKernels]\n  [./crack_strain1]\n    type = MaterialRealVectorValueAux\n    property = crack_max_strain\n    variable = crack_max_strain1\n    component = 0\n  [../]\n[]\n\nThis is the auxkernel to modify the permeability. I also tried to compute the aperture but it was 2 order magnitude too large. That is why I'm using a made up relationship between permeability and smeared cracking strain instead of a^2/12. The crack_perm function needs work, maybe it should look like the maybe_better_perm auxkernel but that gives too large of a crack. A better measure of the element length normal to the crack face would give a better strain measure.\n[AuxKernels]\n[crack_perm]\n  type = ParsedAux\n  variable = crack_perm\n  coupled_variables = 'permeability crack_max_strain1'\n  expression = 'permeability *(1 + ${three_s_over_a0} * max(0, crack_max_strain1))'\n  execute_on = NONLINEAR\n[]\n[maybe_better_perm]\n  type = ParsedAux\n  variable = crack_perm_not_used\n  coupled_variables = 'permeability crack_max_strain1 elem_length_min'\n  expression = 'a:=(crack_max_strain1*elem_length_min); permeability + (a)^2/12'\n  execute_on = TIMESTEP_END\n[]\n[aperture]\n  type = ParsedAux\n  variable = aperture\n  coupled_variables = 'crack_max_strain1 elem_length_min'\n  expression = '(crack_max_strain1*elem_length_min)'\n  execute_on = TIMESTEP_END\n[]\n[]\n\nThis is my porous flow and smeared cracking materials :\n[Materials]\n  [porosity]\n    type = PorousFlowPorosityConst\n    porosity = porosity \n  []\n  [permeability]\n    type = PorousFlowPermeabilityConstFromVar\n    perm_xx = crack_perm\n    perm_yy = crack_perm\n    perm_zz = crack_perm\n  []\n  [elasticity_fracture]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = ${rock_young}\n    poissons_ratio = ${rock_poisson}\n  []\n  [strain]\n    type = ComputeIncrementalSmallStrain\n    displacements = 'disp_x disp_y disp_z'\n  []\n  [elastic_stress]\n    type = ComputeSmearedCrackingStress\n    cracking_stress = 1.2e7\n    softening_models = abrupt_softening\n    max_stress_correction = 0.  #using zero lags damage by a timestep\n    shear_retention_factor = 0.1\n    cracked_elasticity_type = FULL\n    output_properties = true\n    perform_finite_strain_rotations=false\n  []\n  [abrupt_softening]\n    type = AbruptSoftening\n    residual_stress = 0.05\n  []\n  [undrained_density]\n    type = GenericConstantMaterial\n    prop_names = density\n    prop_values = ${rock_gravitational_density}\n  []\n[]\n\nTo make this work, you need to define some kind of weakened field for the smeared cracking model to fracture along or a some distribution of initial damage. Other wise you will get isotropic damage around the highest pressure point. You can also use a spatially varying permeability to spread out damage\n\nHi, by any chance, is there an example that you can share with me so that I can understand the structure and make changes to make it work?",
                          "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-9774979",
                          "updatedAt": "2024-06-14T13:39:51Z",
                          "publishedAt": "2024-06-14T13:39:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "I'll post it. I just need to clean it up first.",
                          "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-9798444",
                          "updatedAt": "2024-06-17T19:42:06Z",
                          "publishedAt": "2024-06-17T19:42:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "miraboreasumr"
                          },
                          "bodyText": "I'll post it. I just need to clean it up first.\n\nHi Dr, do you have the chance to clean it?",
                          "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-10021152",
                          "updatedAt": "2024-07-11T13:13:41Z",
                          "publishedAt": "2024-07-11T13:13:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "rpodgorney"
                  },
                  "bodyText": "Low priority\n\n\n\n\nRobert Podgorney, Ph.D.\nDirectorate Fellow, Energy and Environment\nIdaho National Laboratory   |   1955 Fremont Ave.   |   Idaho Falls, ID   |   83415\n***@***.******@***.***>   |   208-526-1524\n\u2026\n_______________________________\n\n[signature_4227069542]\n\nStatement of Confidentiality\nThe contents of this e-mail message and any attachments are confidential and are intended solely for addressee. The information may also be legally privileged. This transmission is sent in trust, for the sole purpose of delivery to the intended recipient. If you have received this transmission in error, any use, reproduction or dissemination of this transmission is strictly prohibited. If you are not the intended recipient, please immediately notify the sender by reply e-mail or phone and delete this message and its attachments, if any.\n\n\nFrom: Lynn Munday ***@***.***>\nDate: Monday, June 17, 2024 at 13:42\nTo: idaholab/moose ***@***.***>\nCc: Robert K. Podgorney ***@***.***>, Mention ***@***.***>\nSubject: [EXTERNAL] Re: [idaholab/moose] Can Smeared Cracking be Coupled with Production (Single Phase flow, Permeability Changes) (Discussion #27894)\n\nI'll post it. I just need to clean it up first.\n\n\u2014\nReply to this email directly, view it on GitHub<#27894 (reply in thread)>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ACWGDT6FKZQDWKUZTKKO3YTZH432HAVCNFSM6AAAAABJIRNPWWVHI2DSMVQWIX3LMV43SRDJONRXK43TNFXW4Q3PNVWWK3TUHM4TOOJYGQ2DI>.\nYou are receiving this because you were mentioned.Message ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-9798463",
                  "updatedAt": "2024-06-17T19:44:13Z",
                  "publishedAt": "2024-06-17T19:44:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "I haven't yet. I\"ll get this done probably next week.",
                          "url": "https://github.com/idaholab/moose/discussions/27894#discussioncomment-10022930",
                          "updatedAt": "2024-07-11T15:59:58Z",
                          "publishedAt": "2024-07-11T15:59:57Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Physics/SolidMechanics/QuasiStatic",
          "author": {
            "login": "Emmanuel-324"
          },
          "bodyText": "How do I solve the error below in my input script?\nNo SolidMechanics/QuasiStatic action can be block unrestricted if more than one SolidMechanics/QuasiStatic action is specified.\n\n[Physics/SolidMechanics/QuasiStatic]\n  strain = FINITE\n  add_variables = true\n  displacements = 'disp_x disp_y'\n  [eta0_dt]\n    type = TimeDerivative\n    variable = eta0\n  []\n  [eta1_dt]\n    type = TimeDerivative\n    variable = eta1\n  []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/28107",
          "updatedAt": "2024-07-11T15:23:17Z",
          "publishedAt": "2024-07-11T15:21:20Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI think you mean to use this syntax\n[Physics/SolidMechanics/QuasiStatic]\n  strain = FINITE\n  add_variables = true\n  displacements = 'disp_x disp_y'\n[]\n\n\n[Kernels]\n  [eta0_dt]\n    type = TimeDerivative\n    variable = eta0\n  []\n  [eta1_dt]\n    type = TimeDerivative\n    variable = eta1\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/28107#discussioncomment-10022579",
                  "updatedAt": "2024-07-11T15:23:17Z",
                  "publishedAt": "2024-07-11T15:23:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Warning in SolidMechanics",
          "author": {
            "login": "jin0123456"
          },
          "bodyText": "Hello\nI met a warning,\n*** Warning ***\nMissing coupled variables {temp} (add them to coupled_variables parameter of TM_fuel0)\n\nThis warning occurs in Physics/SolidMechanics/QuasiStatic, but my MOOSE version is not the latest so it occurs in Modules/TensorMechanics/Master.\nThe solution is I need to add temperature = temp. But the convergence is poor when i did it.\nSince it's just warning the simulation can continue, should I necessarily add temperature = temp? And what's this setting about, would it make a big difference to the result?",
          "url": "https://github.com/idaholab/moose/discussions/28076",
          "updatedAt": "2024-07-11T14:42:16Z",
          "publishedAt": "2024-07-08T06:15:25Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nDo you want to model thermal expansion or not? This is what it controls.\nIf convergence is poor with it, maybe the parameters for the thermal expansion are not set right. For example the reference temperature for the thermal eigenstrain.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28076#discussioncomment-9987861",
                  "updatedAt": "2024-07-08T13:50:03Z",
                  "publishedAt": "2024-07-08T13:50:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jin0123456"
                          },
                          "bodyText": "1.If i don't set temperature = temp, it still models thermal expansion. So whats the difference?\n2.Besides, i set stress_free_temperature = 300, which 300 is the initial condition of temperature.\nIs that wrong?",
                          "url": "https://github.com/idaholab/moose/discussions/28076#discussioncomment-10018626",
                          "updatedAt": "2024-07-11T08:46:41Z",
                          "publishedAt": "2024-07-11T08:46:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "1.If i don't set temperature = temp, it still models thermal expansion. So whats the difference?\n\nnot sure but if you are getting a warning without then you should address it\nWhat about the thermal expansion coefficient?",
                          "url": "https://github.com/idaholab/moose/discussions/28076#discussioncomment-10022152",
                          "updatedAt": "2024-07-11T14:42:16Z",
                          "publishedAt": "2024-07-11T14:42:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}