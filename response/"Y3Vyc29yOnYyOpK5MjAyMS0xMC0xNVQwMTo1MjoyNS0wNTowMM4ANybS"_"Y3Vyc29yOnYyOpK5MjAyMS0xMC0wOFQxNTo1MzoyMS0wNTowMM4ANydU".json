{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0xMC0wOFQxNTo1MzoyMS0wNTowMM4ANydU"
    },
    "edges": [
      {
        "node": {
          "title": "Product and Team naming conventions",
          "author": {
            "login": "rpshaw"
          },
          "bodyText": "I know this is not a technical question, so if there is a better venue, I'm all ears. I work at Sandia Labs on the Sierra suite of codes, which is somewhat similar to MOOSE in scope and functionality. I had some question about naming conventions:\n\nI was wondering how you came up with the module names: bison, falcon, etc.\nDo you structure your teams around the modules?\n\nIf not, do they have team names and how did those team names come about?\n\n\n\nIt seems like there is some continuity with your naming that we'd like to explore on our side.\nThanks,\nRyan",
          "url": "https://github.com/idaholab/moose/discussions/19065",
          "updatedAt": "2021-10-18T22:22:59Z",
          "publishedAt": "2021-10-11T22:04:18Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@friedmud",
                  "url": "https://github.com/idaholab/moose/discussions/19065#discussioncomment-1474612",
                  "updatedAt": "2021-10-14T04:43:16Z",
                  "publishedAt": "2021-10-14T04:43:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "friedmud"
                  },
                  "bodyText": "I don't think it's all that different from Sierra naming - which shouldn't be surprising since I came from Sandia, working on Sierra \ud83d\ude04\nFALCON, BISON, Pronghorn, etc. are applications that utilize the framework and are effectively equivalent to Adagio, Aria, etc. at Sandia.  They are code names - and they are typically the names of the code teams (depends on the size of the application - some are small and are only developed by one person).\nWhen we can we try to make them acronyms and have them be animals from Idaho.  MOOSE came first (Multiphysics Object-Oriented Simulation Environment) then BISON (recursive acronym: BISON Implicit Simulation Of Nuclear-Fuel), etc.  But - many (like Pronghorn) are just animal names and aren't acronyms.\nThe animal names have proven a good choice since people all over the world can pick animal names that are meaningful to them (like the mascot of their school, or an animal that is only in their area, etc.)\nLet me know if somehow I missed the intent of your question!",
                  "url": "https://github.com/idaholab/moose/discussions/19065#discussioncomment-1479800",
                  "updatedAt": "2021-10-14T23:28:06Z",
                  "publishedAt": "2021-10-14T23:27:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Get error in compile test of MOOSE installation",
          "author": {
            "login": "sSajjad90"
          },
          "bodyText": "I got this error in MOOSE installation. Would you please let me know how can I fix it?\nSincerely,\nSajjad\n`(moose) sajjad@sajjad-PC:~$ conda install moose-tools\nCollecting package metadata (current_repodata.json): failed\nUnavailableInvalidChannel: The channel is not accessible or is invalid.\nchannel name: moose\nchannel url: https://mooseframework.org/conda/moose\nerror code: 404\nYou will need to adjust your conda configuration to proceed.\nUse conda config --show channels to view your configuration's current state,\nand use conda config --show-sources to view config file locations.\n`",
          "url": "https://github.com/idaholab/moose/discussions/19090",
          "updatedAt": "2022-06-18T08:29:42Z",
          "publishedAt": "2021-10-13T13:05:38Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "That is an old channel. Please run the following to remove it and recreate your environment:\nconda deactivate\nconda env remove -n moose\nconda config --remove channels https://mooseframework.org/conda/moose\nconda config --add channels https://conda.software.inl.gov/public\nconda create --name moose -q -y\nconda activate moose\nconda install moose-tools\nconda install moose-libmesh\n\nSorry for the trouble. I'll make an issue so that in the future we have this information on the site.",
                  "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1470755",
                  "updatedAt": "2022-06-18T08:29:44Z",
                  "publishedAt": "2021-10-13T13:16:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sSajjad90"
                  },
                  "bodyText": "Many thanks,\nNow I got stuck with a new problem\nat the last step to 'make -j4' there is the following passage and 'run test' failed.\nAny advice?\nLinking Executable /home/sajjad/projects/moose/framework/contrib/exodiff/exodiff... /home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libcrypto.so.1.1: undefined reference to clock_gettime@GLIBC_2.17'\n/home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libcrypto.so.1.1: undefined reference to __fdelt_chk@GLIBC_2.15' /home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libssl.so.1.1: undefined reference to memcpy@GLIBC_2.14'\n/home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libcrypto.so.1.1: undefined reference to getauxval@GLIBC_2.16' /home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libcrypto.so.1.1: undefined reference to secure_getenv@GLIBC_2.17'\ncollect2: error: ld returned 1 exit status\n/home/sajjad/projects/moose/framework/moose.mk:370: recipe for target '/home/sajjad/projects/moose/framework/contrib/exodiff/exodiff' failed\nmake: *** [/home/sajjad/projects/moose/framework/contrib/exodiff/exodiff] Error 1\nmake: *** Waiting for unfinished jobs....\n(moose) sajjad@sajjad-PC:~/projects/moose/test$\n`",
                  "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1471429",
                  "updatedAt": "2022-06-18T08:29:45Z",
                  "publishedAt": "2021-10-13T14:49:14Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "You have stale artifacts in the build that used the old environment that you need to clean up. Do this to clean them up:\ncd ~/projects/moose\nmake clobberall\n\nThen, recompile and try again.",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1471990",
                          "updatedAt": "2022-06-18T08:29:47Z",
                          "publishedAt": "2021-10-13T16:16:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sSajjad90"
                          },
                          "bodyText": "I've got this error\n(moose) sajjad@sajjad-PC:~/projects/moose$ make clobberall make: *** No rule to make target 'clobberall'.  Stop.",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1472143",
                          "updatedAt": "2022-06-18T08:29:47Z",
                          "publishedAt": "2021-10-13T16:45:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "Whoops:\ncd ~/projects/moose/test\nmake clobberall",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1472169",
                          "updatedAt": "2022-06-18T08:29:48Z",
                          "publishedAt": "2021-10-13T16:49:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sSajjad90"
                          },
                          "bodyText": "I did it, but there is the same error",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1472292",
                          "updatedAt": "2022-06-29T15:25:35Z",
                          "publishedAt": "2021-10-13T17:11:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "weird. moose/test should have a makefile.\nCan you tell us what ls ~/projects/moose/test returns\nif these is a makefile there you should definitely be able to make clobberall then make again",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1472679",
                          "updatedAt": "2022-06-29T15:25:35Z",
                          "publishedAt": "2021-10-13T18:19:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sSajjad90"
                          },
                          "bodyText": "Please let me tell you the complete history:\nI already had MOOSE, and it worked properly on the application I had. I made a new application and tried to activate some modules in the make file. But the make command returned nothing (There was no compiling file after changing the module in the make file).\nI gave up and backed to the previous application. But I've got some weird errors to compile the new *.C files. I supposed I had to update moose to solve the problem, where I got several errors to connect the moose repositories. On the first try, it was error 500, and then it was 000 and 404.\nI uninstalled moose, then updated Linux and tried to install it again, where I got the error 404 to connect the moose repository (First discussion). With your help and  Troubleshooting guideline, it was solved, and MOOSE was installed, but in the make step, there were some unfinished jobs and failed (following lines), and the run-tests failed (errors are at the end).\nNote that I tried to fix the problem with the make clobberall and the Build Issues and Failing Tests solution ways, but I have got the same error. Even I uninstalled and reinstalled moose and conda again, and there was the same error.\nI passed a day full of errors, and now I am confused.\nWould you please let me know how I can fix this problem?\nI am looking forward to hearing from you,\nand Thanks in advance for your kind support.\n### last lines of meke step where you can see the error\n\nCompiling C (in opt mode) /home/sajjad/projects/moose/framework/contrib/mtwist/src/randistrs.c...\nLinking Library /home/sajjad/projects/moose/framework/contrib/pcre/libpcre-opt.la...\nLinking Library /home/sajjad/projects/moose/framework/contrib/gtest/libgtest.la...\nLinking Library /home/sajjad/projects/moose/framework/contrib/hit/libhit-opt.la...\nLinking Executable /home/sajjad/projects/moose/framework/contrib/exodiff/exodiff...\n/home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libcrypto.so.1.1: undefined reference to `clock_gettime@GLIBC_2.17'\n/home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libcrypto.so.1.1: undefined reference to `__fdelt_chk@GLIBC_2.15'\n/home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libssl.so.1.1: undefined reference to `memcpy@GLIBC_2.14'\n/home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libcrypto.so.1.1: undefined reference to `getauxval@GLIBC_2.16'\n/home/sajjad/miniconda3/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/9.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/sajjad/miniconda3/envs/moose/lib/libcrypto.so.1.1: undefined reference to `secure_getenv@GLIBC_2.17'\ncollect2: error: ld returned 1 exit status\n/home/sajjad/projects/moose/framework/moose.mk:370: recipe for target '/home/sajjad/projects/moose/framework/contrib/exodiff/exodiff' failed\nmake: *** [/home/sajjad/projects/moose/framework/contrib/exodiff/exodiff] Error 1\nmake: *** Waiting for unfinished jobs....\n\n### run_tests errors\n\nFinal Test Results:\n--------------------------------------------------------------------------------------------------------------\nmaterials/derivative_material_interface.ad_bad_evaluation/nan ....................... [not supported yet] SKIP\nmaterials/derivative_material_interface.ad_bad_evaluation/error ..................... [not supported yet] SKIP\nmaterials/derivative_material_interface.ad_bad_evaluation/exception ................. [not supported yet] SKIP\nmaterials/derivative_material_interface.ad_bad_evaluation/warning ................... [not supported yet] SKIP\nmaterials/stateful_prop.stateful_old/csvdiff_old ................................... [skipped dependency] SKIP\nmaterials/stateful_prop.stateful_older/csvdiff_older ............................... [skipped dependency] SKIP\nmarkers/value_threshold_marker.test ........................................... FAILED (Application not found)\nmarkers/boundary_marker.adjacent .............................................. FAILED (Application not found)\nmarkers/q_point_marker.test ................................................... FAILED (Application not found)\nmarkers/boundary_marker.distance .............................................. FAILED (Application not found)\nmarkers/error_tolerance_marker.test ........................................... FAILED (Application not found)\nmarkers/dont_mark.test ........................................................ FAILED (Application not found)\nmarkers/error_fraction_marker.test ............................................ FAILED (Application not found)\nmarkers/reporter_point_marker.mark_only ....................................... FAILED (Application not found)\nmarkers/box_marker.mark_only .................................................. FAILED (Application not found)\nmarkers/error_tolerance_marker.adapt_test ..................................... FAILED (Application not found)\nmarkers/error_fraction_marker.no_clear ........................................ FAILED (Application not found)\nmarkers/reporter_point_marker.wrong_size_error ................................ FAILED (Application not found)\nmarkers/oriented_box_marker.obm ............................................... FAILED (Application not found)\nmarkers/box_marker.mark_and_adapt ............................................. FAILED (Application not found)\nmarkers/error_fraction_marker.fv .............................................. FAILED (Application not found)\nmarkers/block_restricted.test ................................................. FAILED (Application not found)\nmarkers/reporter_point_marker.adaptivity ...................................... FAILED (Application not found)\nmarkers/uniform_marker.test ................................................... FAILED (Application not found)\nmarkers/value_range_marker.test ............................................... FAILED (Application not found)\nmarkers/combo_marker.test ..................................................... FAILED (Application not found)\nmarkers/expected_error.displaced_error ........................................ FAILED (Application not found)\nmarkers/two_circle_marker.group/two_circle_marker ............................. FAILED (Application not found)\nmarkers/two_circle_marker.group/two_circle_marker_coarsen ..................... FAILED (Application not found)\nmarkers/two_circle_marker.group/two_circle_marker_gaussian_ic ................. FAILED (Application not found)\nmaterials/derivative_material_interface.analytic_derivatives/property_names ... FAILED (Application not found)\nmaterials/old_cyclic_dep.test ................................................. FAILED (Application not found)\nmaterials/derivative_material_interface.analytic_derivatives/material_chaining  FAILED (Application not found)\nmaterials/material_dependency.dont_reinit_mat_for_aux ......................... FAILED (Application not found)\nmaterials/discrete.newton_iteration/eq1 ....................................... FAILED (Application not found)\nmaterials/derivative_material_interface.analytic_derivatives/parsed_material .. FAILED (Application not found)\nmaterials/discrete.newton_iteration/eq2 ....................................... FAILED (Application not found)\nmaterials/output.group/all .................................................... FAILED (Application not found)\nmaterials/derivative_material_interface.ordering/construction ................. FAILED (Application not found)\nmaterials/discrete.newton_no_calc ............................................. FAILED (Application not found)\nmaterials/output.group/all_via_outputs ........................................ FAILED (Application not found)\nmaterials/stateful_prop.stateful_old/exodiff_old .............................. FAILED (Application not found)\nmaterials/derivative_material_interface.ordering/ad_construction .............. FAILED (Application not found)\nmaterials/discrete.newton_warning ............................................. FAILED (Application not found)\nmaterials/output.group/limit_via_outputs ...................................... FAILED (Application not found)\nmaterials/stateful_coupling.test .............................................. FAILED (Application not found)\nmaterials/derivative_material_interface.ordering/execution .................... FAILED (Application not found)\nmaterials/stateful_prop.stateful_older/exodiff_older .......................... FAILED (Application not found)\nmaterials/discrete.coverage_check/block_incompatible .......................... FAILED (Application not found)\nmaterials/stateful_coupling.aux_init_qp_props ................................. FAILED (Application not found)\nmaterials/output.group/block_via_outputs ...................................... FAILED (Application not found)\nmaterials/derivative_material_interface.new_getproperty_semantics ............. FAILED (Application not found)\nmaterials/stateful_prop.implicit_stateful ..................................... FAILED (Application not found)\nmaterials/discrete.coverage_check/boundary_incompatible ....................... FAILED (Application not found)\nmaterials/interface_material.jump ............................................. FAILED (Application not found)\nmaterials/get_material_property_names.get_prop_names/boundary ................. FAILED (Application not found)\n--------------------------------------------------------------------------------------------------------------\nRan 50 tests in 1.2 seconds. Average test time 0.0 seconds, maximum test time 0.0 seconds.\n0 passed, 6 skipped, 0 pending, 50 FAILED\nMAX FAILURES REACHED\n(moose) sajjad@sajjad-PC:~/projects/moose/test$",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1473729",
                          "updatedAt": "2022-06-29T15:25:36Z",
                          "publishedAt": "2021-10-13T22:53:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Save ALL your work (git commit)\nthen run git clean -xfd in the repository.\nThose GLIBC errors lead me to think there are some stale objects interfering with compilation.\nbtw tests will never pass if the executable is not compiled",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1473750",
                          "updatedAt": "2022-07-01T13:32:02Z",
                          "publishedAt": "2021-10-13T23:06:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sSajjad90"
                          },
                          "bodyText": "After several tries to fix the problem considering all guidelines of the moose website and your suggestions, plus several uninstallation and reinstallation of moose, wherever I just got the same error, I supposed there is an error in the libcrypto library of moose dependencies. If possible, take a look at the following link about GLIBC errors, and please let me know how I can fix that error.\nhttps://stackoverflow.com/questions/51076458/undefined-reference-to-symbol-socketglibc-2-4-while-linking\nI look forward to hearing from you,\nSincerely,\nSajjad",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1476860",
                          "updatedAt": "2022-07-01T13:32:02Z",
                          "publishedAt": "2021-10-14T12:40:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "erikgus94"
                          },
                          "bodyText": "Hi,\nI just wanted to let you know that I have exactly the same problem and I'm interested in knowing how to solve it.",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1477043",
                          "updatedAt": "2022-07-01T13:32:02Z",
                          "publishedAt": "2021-10-14T13:14:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "What Arch/Version of Linux are you both running on? If you are unsure, and even if you are not can you try the following command and report back the results\nlsb_release -a\nI am also interested in your Conda environments. Can you post the results of the following command as well:\nconda info --all",
                          "url": "https://github.com/idaholab/moose/discussions/19090#discussioncomment-1477170",
                          "updatedAt": "2022-07-01T13:32:01Z",
                          "publishedAt": "2021-10-14T13:36:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Prescribing value on a set of nodes",
          "author": {
            "login": "tairoon1"
          },
          "bodyText": "Hi,\nI was wondering, is it possible to prescribe the values of a variable on an edge not by selecting the edge by name and then giving a value or function, but actually to use a node list and corresponding value list for each node? So something like:\n[BCs]\n  [prescribed]\n    type = DirichletBC\n    variable = u\n    node_ids = '0 1 2 3 4'\n    values = '0 0.1 0.2 0.3 0.4'\n  []\n[]\n\nThanks for your help.",
          "url": "https://github.com/idaholab/moose/discussions/19079",
          "updatedAt": "2022-10-08T11:40:10Z",
          "publishedAt": "2021-10-12T16:57:15Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "Dear @tairoon1\nYou need to look into the MeshGenerators,\nnormally I use this one:\nhttps://github.com/idaholab/moose/blob/next/framework/src/meshgenerators/SideSetsFromBoundingBoxGenerator.C\nin which I set the coordinates for a box, and the nodes inside are added to a node set.\nI cannot see any MeshGenerator in the framework that can work with the node ids, but should not be too difficult to make,\nyou should also check in the modules.\nI am quite sure the solution will not be to add the ids to a BC, but using a MeshGenerator.\nBest Regards,\nNicol\u00f2",
                  "url": "https://github.com/idaholab/moose/discussions/19079#discussioncomment-1467392",
                  "updatedAt": "2022-10-08T11:40:11Z",
                  "publishedAt": "2021-10-12T22:49:02Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Docs for the one @ngrilli suggested, I would do it that way too\nhttps://mooseframework.inl.gov/source/meshgenerators/SubdomainBoundingBoxGenerator.html\nThis one works with ids but you need to specify the ids for ALL elements\nhttps://mooseframework.inl.gov/source/meshgenerators/SubdomainIDGenerator.html\nEDIT : that last one is for block ids. We could make a new one for sideset IDs though",
                          "url": "https://github.com/idaholab/moose/discussions/19079#discussioncomment-1468052",
                          "updatedAt": "2022-10-08T11:40:11Z",
                          "publishedAt": "2021-10-13T02:44:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tairoon1"
                          },
                          "bodyText": "Thank you for the replies. If I understand correctly, then the MeshGenerators allows you to select a node set. Assuming now, I have that node set, how could I then prescribe values onto each degree of freedom of each node?",
                          "url": "https://github.com/idaholab/moose/discussions/19079#discussioncomment-1475800",
                          "updatedAt": "2022-10-08T11:40:11Z",
                          "publishedAt": "2021-10-14T09:36:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ngrilli"
                          },
                          "bodyText": "Dear @tairoon1\nA MeshGenerator object always provides a name for the newly created node set.\nYou can use that name in the boundary conditions.\nYou can see an example here:\nhttps://github.com/ngrilli/c_pfor_am/blob/main/test/tests/neper/polycrystalneper.i\nNote the line:\n\"new_boundary = x0\"\nBest Regards,\nNicol\u00f2",
                          "url": "https://github.com/idaholab/moose/discussions/19079#discussioncomment-1476757",
                          "updatedAt": "2022-10-08T11:40:12Z",
                          "publishedAt": "2021-10-14T12:21:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So you'll have to create a DirichletBC for every nodeset you created. As long as there s like less than 1000 it should be fine speedwise.\nIf there are a lot of nodes you want to specify, you may want to either:\n\nwrite a script to write the input file\nwrite an Action (in moose, in C++) to make it create the nodesets and the dirichlet BC from just a vector",
                          "url": "https://github.com/idaholab/moose/discussions/19079#discussioncomment-1477957",
                          "updatedAt": "2022-10-08T11:40:12Z",
                          "publishedAt": "2021-10-14T15:53:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tairoon1"
                          },
                          "bodyText": "I see, thank you for your replies. I think I understand now how it works. I was hoping that it would be possible to directly specify directly given a list of node_ids/dof_ids and then a list of values, but I guess that would be quite specific. Thanks for your help!",
                          "url": "https://github.com/idaholab/moose/discussions/19079#discussioncomment-1478141",
                          "updatedAt": "2022-10-08T11:40:12Z",
                          "publishedAt": "2021-10-14T16:21:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Updating material property name from \"thermal_conductivity\" to \"thermal_conductivity_tensor\"",
          "author": {
            "login": "singhgp4321"
          },
          "bodyText": "Does anyone mind if I update the declared and extracted material property name (type RankTwoTensor) from \"thermal_conductivity\" to \"thermal_conductivity_tensor\" in the AnisoHeatConductionMaterial and AnisoHeatConduction kernel?\n@dschwen let me know if you are fine with the following change?\nThe following code in AnisoHeatConductionMaterial\n_thermal_conductivity(\n    declareGenericProperty<RankTwoTensor, is_ad>(_base_name + \"thermal_conductivity\")),\n_dthermal_conductivity_dT(\n    declarePropertyDerivative<RankTwoTensor>(_base_name + \"thermal_conductivity\", _T_name)),\n\nand in AnisoHeatConduction kernel\n_k(getMaterialProperty<RankTwoTensor>(\"thermal_conductivity\")),\n_dk_dT(getMaterialPropertyDerivative<RankTwoTensor>(\"thermal_conductivity\", _var.name()))\n\nwill change to:\n_thermal_conductivity(\n    declareGenericProperty<RankTwoTensor, is_ad>(_base_name + \"thermal_conductivity_tensor\")),\n_dthermal_conductivity_dT(\n    declarePropertyDerivative<RankTwoTensor>(_base_name + \"thermal_conductivity_tensor\", _T_name)),\n\n\n_k(getMaterialProperty<RankTwoTensor>(\"thermal_conductivity_tensor\")),\n_dk_dT(getMaterialPropertyDerivative<RankTwoTensor>(\"thermal_conductivity_tensor\", _var.name()))",
          "url": "https://github.com/idaholab/moose/discussions/19096",
          "updatedAt": "2022-08-16T21:58:58Z",
          "publishedAt": "2021-10-13T20:16:59Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "That's gonna be inconsistent with the existing naming convention IMHO. For example, we have \"stress\" instead of \"stress_tensor\", \"eigenstrain_names\" instead of \"eigenstrain_tensor_names\". Is the original name \"thermal_conductivity\" causing you trouble? If so, I'm fine with renaming it.",
                  "url": "https://github.com/idaholab/moose/discussions/19096#discussioncomment-1473780",
                  "updatedAt": "2022-08-16T21:59:04Z",
                  "publishedAt": "2021-10-13T23:22:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Porous Flow-nonlinear solver does not coverge",
          "author": {
            "login": "rksin8"
          },
          "bodyText": "Hi,\nI am trying to develop a hydromechanical model based on Porous Flow THM example. Model runs but non-linear solver does not converge.  My Input&Mesh file available here.\nHow can I solve this issue?\nThanks",
          "url": "https://github.com/idaholab/moose/discussions/19034",
          "updatedAt": "2022-09-29T15:22:34Z",
          "publishedAt": "2021-10-07T14:12:15Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nHave you consulted the following pages\nhttps://mooseframework.inl.gov/modules/porous_flow/stabilization.html\nhttps://mooseframework.inl.gov/modules/porous_flow/nonlinear_convergence_problems.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19034#discussioncomment-1456821",
                  "updatedAt": "2022-09-29T15:22:32Z",
                  "publishedAt": "2021-10-11T03:36:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "rksin8"
                          },
                          "bodyText": "after scaling, not it is working fine.  Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/19034#discussioncomment-1467023",
                          "updatedAt": "2022-09-29T15:22:42Z",
                          "publishedAt": "2021-10-12T20:39:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Linking variables with a multiplier at an interface.",
          "author": {
            "login": "LukeFisherUKAEA"
          },
          "bodyText": "I am relatively new to MOOSE and am looking to implement a steady-state multiplier at an interface, to link two variables.  Specifically, i'm looking to model a scenario where, for an interface between two regions A and B with variable u in region A and variable v in region B, the boundary condition on v at the interface is a function of the value of variable u at the interface.  There also needs to be a mass flux conservation condition at the boundary, however that can be handled using the InterfaceDiffusionFluxMatch interface kernel.  The function takes other variables, e.g. temperature and volume, and so cannot be implemented using the function kernels, as I understand that these only take variables (x, y, z, t).  As this is an equilibrium situation and we can effectively ignore rate effects, the InterfaceReaction interface kernel is not suitable.\nIt strikes me that this should be relatively straightforward to do - has anyone any experience of this problem?  Many thanks.\n**Specifically, this is to implement Sieverts Law at the interface, where C = K * SQRT( P )\nC is the concentration in region B (v) and P is the gas pressure in region A (u).",
          "url": "https://github.com/idaholab/moose/discussions/18948",
          "updatedAt": "2023-05-18T11:19:21Z",
          "publishedAt": "2021-09-28T10:07:38Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou may want to consult this discussion #18799\nto choose between a BC object and an interface kernel with a penalty factor.\nInterfaceReaction could easily be modified to penalize the difference between C and K sqrt(P)\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18948#discussioncomment-1397496",
                  "updatedAt": "2023-05-18T11:19:51Z",
                  "publishedAt": "2021-09-28T16:53:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LukeFisherUKAEA"
                          },
                          "bodyText": "Hi Guillaume,\nMany thanks for this.  Would you be able to point me in the direction of some guidance on modifying kernels, for those that are new to this?\nLuke",
                          "url": "https://github.com/idaholab/moose/discussions/18948#discussioncomment-1401046",
                          "updatedAt": "2023-05-18T11:19:53Z",
                          "publishedAt": "2021-09-29T08:32:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Here's some guidelines for kernels. Interfqace kernels are similar except they are only ran at interface\nhttps://mooseframework.inl.gov/syntax/Kernels/",
                          "url": "https://github.com/idaholab/moose/discussions/18948#discussioncomment-1403234",
                          "updatedAt": "2023-05-18T11:19:53Z",
                          "publishedAt": "2021-09-29T14:41:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "https://mooseframework.inl.gov/syntax/InterfaceKernels/ for interface kernels but it s not as detailed",
                          "url": "https://github.com/idaholab/moose/discussions/18948#discussioncomment-1403696",
                          "updatedAt": "2023-05-18T11:19:53Z",
                          "publishedAt": "2021-09-29T15:35:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "How is this going?",
                          "url": "https://github.com/idaholab/moose/discussions/18948#discussioncomment-1427412",
                          "updatedAt": "2023-05-18T11:20:02Z",
                          "publishedAt": "2021-10-05T00:05:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LukeFisherUKAEA"
                          },
                          "bodyText": "This has turned out well - with minor modification the combination of InterfaceDiffusion and InterfaceReaction are giving the results I need.  Many thanks for your help.",
                          "url": "https://github.com/idaholab/moose/discussions/18948#discussioncomment-1465167",
                          "updatedAt": "2023-05-18T11:20:04Z",
                          "publishedAt": "2021-10-12T14:18:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Question about Isotropic Power Hardening stress update",
          "author": {
            "login": "Bala-1005"
          },
          "bodyText": "Hello everyone,\nI have a question about how IsotropicPowerHardeningStressUpdate material is setup. As far as I can see, this particular class is used to calculate the yield stress based on the strength coefficient and strain hardening exponent. My question is how is the inelastic strain calculated while using this class? Is it directly inherited from IsotropicPlasticityStressUpdate?\nThanks,\nBala",
          "url": "https://github.com/idaholab/moose/discussions/17580",
          "updatedAt": "2024-11-14T16:46:37Z",
          "publishedAt": "2021-04-12T16:48:08Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "The IsotropicPowerHardeningStressUpdate inherits from IsotropicPlasticityStressUpdate. The inelastic strain is calculated using the return mapping algorithm.",
                  "url": "https://github.com/idaholab/moose/discussions/17580#discussioncomment-1461687",
                  "updatedAt": "2024-11-14T16:46:38Z",
                  "publishedAt": "2021-10-12T00:20:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Access to material properties within computeProperties()",
          "author": {
            "login": "albiedahal"
          },
          "bodyText": "Hi all,\nCan the material properties of other elements be accessed/modified when the computeProperties() method is being called for one element?\nRegards,\nAlbert",
          "url": "https://github.com/idaholab/moose/discussions/19062",
          "updatedAt": "2022-07-13T14:59:31Z",
          "publishedAt": "2021-10-11T18:06:42Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNot natively. It can be done with some hacking (reinit on neighbor element, compute, reinit on local)\nYou can access the neighbor material properties in interface_kernels though. If you are using those and the work performed in the material computeProperties() can be moved there, that is an option.\nCould you please give us more details about your use case?\nSecond caveat:\nIt can be done in the functor material system which we are adding here, and which does not leverage computeProperties but does on-demand computation of matprops : #18395\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19062#discussioncomment-1460786",
                  "updatedAt": "2022-07-13T14:59:33Z",
                  "publishedAt": "2021-10-11T18:57:18Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "albiedahal"
                          },
                          "bodyText": "Hi @GiudGiud,\nI am trying to code in a nonlocal return mapping algorithm ( #19003 ). In the algorithm, the plastic multiplier is calculated for all the integration points of the domain simultaneously. I am currently calculating the plastic multiplier in separate std::vector. The vector is updated for each time the  computeQpProperties() is called and after the final call for the last _qp in the domain, my std::vector has the correct values of the plastic multiplier and plastic strain for all of the quadrature poinst, which I want to assign to the _plastic_strain[_qp]  for each element.",
                          "url": "https://github.com/idaholab/moose/discussions/19062#discussioncomment-1461166",
                          "updatedAt": "2022-07-13T14:59:34Z",
                          "publishedAt": "2021-10-11T20:40:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "@albiedahal you might want to look into compue = false  materials, the getMaterial (not getMaterial_Property_!) call, and the computePropertiesAtQp call. This allows you to trigger material property re-computes on your own terms (e.g. multiple times within a local return mapping solve).",
                          "url": "https://github.com/idaholab/moose/discussions/19062#discussioncomment-1461302",
                          "updatedAt": "2022-07-13T14:59:34Z",
                          "publishedAt": "2021-10-11T21:28:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so there is a global quantity that needs to be accessible when you compute the plastic_strain material property.\nCan you lag it? Use the one from the previous iteration or even time step?\nIf so, retrieve an old material property using getMaterialPropertyOld\nIf not, I would create a UserObject to compute this quantity before computing material properties, then retrieve it when computing material properties.\nUsing a material property for this quantity does not work (unless you can use an old value) because all material properties are computed roughly (there is dependency resolution etc) at the same time",
                          "url": "https://github.com/idaholab/moose/discussions/19062#discussioncomment-1461305",
                          "updatedAt": "2022-07-13T14:59:38Z",
                          "publishedAt": "2021-10-11T21:28:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Instead of the UO, I think @dschwen s solution is preferable btw",
                          "url": "https://github.com/idaholab/moose/discussions/19062#discussioncomment-1461314",
                          "updatedAt": "2022-07-13T14:59:45Z",
                          "publishedAt": "2021-10-11T21:32:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "You are probably already aware of this, another issue here is that you are going to get a dense matrix using this approach, which may very likely bring you more trouble than it is worth.",
                  "url": "https://github.com/idaholab/moose/discussions/19062#discussioncomment-1461653",
                  "updatedAt": "2022-07-13T14:59:37Z",
                  "publishedAt": "2021-10-12T00:00:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Anomalous console prints during the solve on older HPC",
          "author": {
            "login": "mangerij"
          },
          "bodyText": "Hi,\nI noticed after a recent recompile (fresh MOOSE/libMesh/Petsc stack) on an older HPC system that I have console prints telling me the following:\nAdapting Mesh\nAdapting Mesh.....                                                                   7.03 s\nStill Adapting Mesh................................................\nStill Adapting Mesh..                                                                        60.40 s\nor\nFinished Computing Residual                                                         6.99 s\nComputing Residual\nUpdating Displaced Mesh.....                                                       6.81 s\nFinished Computing Residual                                                          7.00 s\nfor what it appears to be every linear iteration.\nThe problem is a bit large, with some aggressive AMR active (giving something like 5000 dof/proc when max h_level is reached). We are not using displaced mesh also so losing 6.81 seconds for every linear iteration is a bit much for me.\nHas anyone seen this before?",
          "url": "https://github.com/idaholab/moose/discussions/18908",
          "updatedAt": "2022-11-21T18:24:04Z",
          "publishedAt": "2021-09-23T16:12:01Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you share your input file? We'd have to look to find what is using the displaced mesh.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1375853",
                  "updatedAt": "2023-09-19T11:33:16Z",
                  "publishedAt": "2021-09-23T17:11:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "We are only using the tensor_mechanics Action that sets up the stress-divergence Kernels and the GlobalStrain system to ensure strain periodicity.\nI should note that I have noticed the \"update displaced mesh issue\" for quite some time. I had a thread on the old google group about this.\nI have a much simpler input file than the problem above that does not use AMR nor print \"Computing Residual\" but does print \"updating displaced mesh\" when the dof/proc gets large enough. Maybe that is the best place to start. Can I send that off-list to you? thanks I will also have to give you access to Ferret.",
                          "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1378780",
                          "updatedAt": "2021-09-24T09:02:40Z",
                          "publishedAt": "2021-09-24T08:58:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You can send me that file, either on the email listed on github or on my INL email (swap out gmail for inl.gov)",
                          "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1380776",
                          "updatedAt": "2023-09-19T11:33:16Z",
                          "publishedAt": "2021-09-24T15:45:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "I know that the tensor_mechanics action can definitely turn on the displaced mesh... it uses it any time you have a large strain formulation (and possibly in other scenarios too).\nIs the updating of the displaced mesh the main issue here?  Or are you wanting to turrn off the printing?  You can turn off the printing by using perf_graph_live = false in your Outputs block... or you can turn the time up that it waits before printing by setting perf_graph_live_time_limit = # where # is however many seconds you want it to wait before printing anything.\nThis is a new system for printing progress that we're still refining.  Feel free to provide feedback on it.",
                          "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1380999",
                          "updatedAt": "2023-09-19T11:33:16Z",
                          "publishedAt": "2021-09-24T16:29:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "@GiudGiud I granted your github acct Ferret access and sent the input file to your gmail. Thanks!\nEDIT @friedmud indeed I put perf_graph_live = false in the outputs block and I am no longer seeing the update displaced mesh (along with computing residual, jacobian etc) prints. However, the problem is damn slow now -  and I worry there is some needless checks related to Update displaced mesh that is causing this.",
                          "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1390393",
                          "updatedAt": "2023-09-19T11:33:21Z",
                          "publishedAt": "2021-09-27T13:30:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "Yeah - if your issue is that PerfGraphLive exposed something happening that shouldn't be... then that's a different issue.",
                          "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1391668",
                          "updatedAt": "2023-09-19T11:33:21Z",
                          "publishedAt": "2021-09-27T16:52:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "The TM Action is not turning displaced mesh on, but as soon as you put displacements into [GlobalParams] it is also picked up by the [Mesh] block and will trigger the creation of the displaced mesh.",
                          "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1452856",
                          "updatedAt": "2023-09-19T11:33:21Z",
                          "publishedAt": "2021-10-09T15:27:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "I've seen similar behavior when I loaded an MPI different from the one used for compilation.",
                  "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1378819",
                  "updatedAt": "2023-09-19T11:33:22Z",
                  "publishedAt": "2021-09-24T09:07:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "I do get the warning\nMPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found\nat the start up, but I am relatively certain we are using the same MPI during compilation (no change to the loaded modules, etc)",
                          "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1378853",
                          "updatedAt": "2024-06-12T16:13:48Z",
                          "publishedAt": "2021-09-24T09:14:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Solution is to set use_displaced_mesh in the [Mesh] block to false when providing displacements.\nWe ll document that, raised an issue #19049",
                  "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1451040",
                  "updatedAt": "2024-06-12T16:13:49Z",
                  "publishedAt": "2021-10-09T01:05:13Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "Thanks @GiudGiud and @dschwen",
                          "url": "https://github.com/idaholab/moose/discussions/18908#discussioncomment-1458657",
                          "updatedAt": "2024-06-12T16:13:49Z",
                          "publishedAt": "2021-10-11T11:42:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Where is the ~/projects directory located?",
          "author": {
            "login": "rarygit"
          },
          "bodyText": "I am following the online installation guide.\nI am having difficulty with the last step:  ./run_tests -j 4\nThe error message: ModuleNotFoundError: No module named 'TestHarness'\nThis might be due to my confusion where MOOSE_DIR and FRAMEWORK_DIR are located.\nFor me, the installation guide is clear how to install in conda, but not its relationship to the projects dir\nOS: Ubuntu 20.04\nConda MOOSE Environment\nhttps://mooseframework.inl.gov/getting_started/installation/conda.html\nThis is OK so far:\nconda create --name moose -q -y\nconda activate moose\nconda install moose-tools\nconda install moose-libmesh\nObtaining and Building MOOSE\nhttps://mooseframework.inl.gov/getting_started/installation/install_moose.html\nThis is OK so far:\nmkdir ~/projects    Where are you meant to make the /projects folder?\ncd ~/projects\ngit clone https://github.com/idaholab/moose.git\ncd moose\ngit checkout master\ncd ~/projects/moose/test\nmake -j 4\nBut not this:\n./run_tests -j 4\nFirst question:\nAt this point, I need clarity here regarding my moose and project folders\nIs the projects dir in my moose conda env?\nOr is it located somewhere else, even another HDD?\nIs this path to projects correct?\n~/conda_envs/envs/moose/projects\nand is this the  path to framework?\n~/conda_envs/envs/moose/projects/moose/framework\nTherefore:\nMOOSE_DIR = ~/conda_envs/envs/moose/\nand\nFRAMEWORK_DIR = ~/conda_envs/envs/moose/projects/moose/framework\n+++++++++++++++++++++++++++++++++++++\nSecond question:\nIn Troubleshooting, you use /tmp folder\nWhere is /tmp in relation to ~/conda_env/env/moose ?\nhttps://mooseframework.inl.gov/help/troubleshooting.html#buildissues\nTry building a simple hello world example (there is more text than what is visible, be sure to copy it all):\ncd /tmp\ncat << EOF > hello.C\nThanks for any help or suggestions",
          "url": "https://github.com/idaholab/moose/discussions/19044",
          "updatedAt": "2022-09-09T10:13:49Z",
          "publishedAt": "2021-10-08T09:19:21Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "rarygit"
                  },
                  "bodyText": "From this post:\n#18902\nhttps://user-images.githubusercontent.com/55847507/134444152-d84a78d1-ff4d-412f-97b2-64c3cd4ab784.png\nI see that the MOOSE_DIR is in the conda_env,\nand FRAMEWORK_DIR is elsewhere, in this case the USER dir on mac OSX\non Ubuntu OS:\nMOOSE_DIR = ~/conda_envs/envs/moose/\nand\nFRAMEWORK_DIR = /media/USER/projects/moose/framework\nalternatively,\nFRAMEWORK_DIR = /media/USER/some other HDD/projects/moose/framework\nIs that now correct?",
                  "url": "https://github.com/idaholab/moose/discussions/19044#discussioncomment-1447388",
                  "updatedAt": "2022-09-09T10:15:03Z",
                  "publishedAt": "2021-10-08T10:09:35Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "MOOSE_DIR should be the path to where you cloned moose into. It has nothing to do with conda. If you ran make within the tests directory, MOOSE_DIR should be one level up from this.",
                  "url": "https://github.com/idaholab/moose/discussions/19044#discussioncomment-1448124",
                  "updatedAt": "2022-09-26T08:25:47Z",
                  "publishedAt": "2021-10-08T13:03:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "rarygit"
                  },
                  "bodyText": "@loganharbour\nThanks for replying and clarifying the paths.\nI am reinstalling and trying again.\nWhich page on Moose (mooseframework.inl.gov) has the link to this url:  \"Obtaining and Building MOOSE\"\nhttps://mooseframework.inl.gov/getting_started/installation/install_moose.html\nInstallation page has links to install the MOOSE Framework on Linux and macOSX,\nhttps://mooseframework.inl.gov/getting_started/installation/\nwhich lands you on the Install conda moose environment.\nhttps://mooseframework.inl.gov/getting_started/installation/conda.html\nThis page advises the user to install, compile and test MOOSE by running the following commands in a terminal.\nmkdir ~/projects\ncd ~/projects\ngit clone https://github.com/idaholab/moose.git\ncd moose\ngit checkout master\ncd ~/projects/moose/test\nmake -j 4\n./run_tests -j 4\nThat ends in failure with errors.\nIn fact there is another web page called \"Obtaining and Building MOOSE\", which is absent from the Installation or Conda pages\nhttps://mooseframework.inl.gov/getting_started/installation/install_moose.html\nI stumbled upon on it while googling searches about /projects and setting up the moose framework\nThe commands on that page are:\n\"To install MOOSE run the following commands in a terminal.\"\nmkdir ~/projects\ncd ~/projects\ngit clone https://github.com/idaholab/moose.git\ncd moose\ngit checkout master\ncd ~/projects/moose\nunset PETSC_DIR PETSC_ARCH\n./scripts/update_and_rebuild_petsc.sh\n./scripts/update_and_rebuild_libmesh.sh\ncd ~/projects/moose/test\nmake -j 4\n./run_tests -j 4\nWhich are considerably different commands to those provided on the conda moose environment page.\nI will try this, using:\nMOOSE_DIR = the path to where you cloned moose into. MOOSE_DIR is one level up from the test directory.\nFRAMEWORK_DIR = MOOSE_DIR/framework",
                  "url": "https://github.com/idaholab/moose/discussions/19044#discussioncomment-1449941",
                  "updatedAt": "2022-09-26T08:25:43Z",
                  "publishedAt": "2021-10-08T18:24:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "rarygit"
                  },
                  "bodyText": "Ok, that worked well!\nSet MOOSE_DIR and FRAMEWORK_DIR in both .bashrc and the Makefile in /projects/moose/test\nGiven the time it takes to get to finally ./run_tests, I wasn't taking any risks.\n.....\n./run_tests -j 4\nRan 2912 tests in 832.8 seconds. Average test time 0.9 seconds, maximum test time 48.9 seconds.\n2912 passed, 96 skipped, 0 pending, 0 failed\nAll up, the cloning, installing, compiling, testing of moose on \"/media/hDD/projects/moose\" swallowed 11.4 Gb,\nand took a few hours to complete.\nThanks to @loganharbour, problem solved.",
                  "url": "https://github.com/idaholab/moose/discussions/19044#discussioncomment-1450449",
                  "updatedAt": "2022-09-26T08:25:30Z",
                  "publishedAt": "2021-10-08T20:53:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}