{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wNS0wOFQwNzoxMzoxOC0wNTowMM4AZRfD"
    },
    "edges": [
      {
        "node": {
          "title": "Peridynamic Heat Conduction Models",
          "author": {
            "login": "rbh007720"
          },
          "bodyText": "Is the Bond-based model able to solve the transient heat transfer problem? In \"Thermomechanical peridynamic analysis with irregular non-uniform domain discretization\", the implementation is based on an implicit solver for the steady-state problem. Is it possible to treat unsteady-state heat conduction?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/20981",
          "updatedAt": "2024-05-09T10:59:38Z",
          "publishedAt": "2022-05-08T16:01:55Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@laagesen @bwspenc any ideas on this ?",
                  "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-2755425",
                  "updatedAt": "2022-06-10T07:40:27Z",
                  "publishedAt": "2022-05-15T21:11:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "@rbh007720 have you looked at any PD time derivative kernel?\nLet me @hchen139 .",
                          "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-2756437",
                          "updatedAt": "2022-06-10T07:40:27Z",
                          "publishedAt": "2022-05-16T03:20:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hchen139"
                          },
                          "bodyText": "@rbh007720 I don't think we have implemented any time derivative kernel for PD yet. You can look at the TimeDerivativeNodalKernel to consider the transient heat transfer process.",
                          "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-2759614",
                          "updatedAt": "2022-06-10T07:40:27Z",
                          "publishedAt": "2022-05-16T13:14:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rbh007720"
                          },
                          "bodyText": "Thanks for the reply. Should I look at TimeDerivativeNodalKernel or TimeDerivative Kernel? I would like to know what is the difference between them.\nThanks!",
                          "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-2763727",
                          "updatedAt": "2022-06-10T07:40:27Z",
                          "publishedAt": "2022-05-17T00:45:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hchen139"
                          },
                          "bodyText": "TimeDerivativeNodalKernel operates on nodes while TimeDerivative operates on elements. Since PD is a Lagrangian method and uses nodal integration, nodal kernel would make sense for the transient kernel. All the current implementations of PD kernels are based on elemental kernel to use the material classes in other MOOSE modules that are based on FEM.",
                          "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-2763804",
                          "updatedAt": "2022-06-11T03:05:57Z",
                          "publishedAt": "2022-05-17T01:14:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Nodal kernels are made to solve ODEs that live on individual nodes. So it's quite different from FEM. If you only had nodal kernels, you would only be solving decoupled ODEs on each node. Of course they may be coupled through the values of FEM fields (that have regular kernels for example).\nSo probably TimeDerivative",
                          "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-2768347",
                          "updatedAt": "2022-06-11T03:05:57Z",
                          "publishedAt": "2022-05-17T14:39:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Narayanan1999"
                  },
                  "bodyText": "rbh007720 Sir, were you able to do transient analysis in Peridynamics using TimeDerivativeNodalKernel? If so, can you please share the input file or that transient part code?\nI tried solving a 1D bar subjected to an initial strain. The transient analysis is done using Newmark-Beta Method from Tensor Mechanics module. Though the input file runs, the values are not matching with theoretical value. The following is the result that I obtained for the displacement occurred at the midpoint of the bar during this time interval (x-time; y-displacment):",
                  "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-9358691",
                  "updatedAt": "2024-05-08T18:18:26Z",
                  "publishedAt": "2024-05-08T18:14:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hchen139"
                          },
                          "bodyText": "I am not sure whether you can directly run transient analysis based on the available developments in the peridynamics module. There might need some additional developments.",
                          "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-9359847",
                          "updatedAt": "2024-05-08T20:17:32Z",
                          "publishedAt": "2024-05-08T20:17:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Narayanan1999"
                          },
                          "bodyText": "Ok Sir, Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/20981#discussioncomment-9367479",
                          "updatedAt": "2024-05-09T10:59:39Z",
                          "publishedAt": "2024-05-09T10:59:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Meshing An Exodus File Using MOOSE",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "Can an unmeshed exodus file be meshed using online generation in MOOSE?",
          "url": "https://github.com/idaholab/moose/discussions/25723",
          "updatedAt": "2024-05-09T08:28:38Z",
          "publishedAt": "2023-10-11T20:42:45Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "What do you mean by unmeshed? Exodus stores data on nodes or elements so there is already mesh construct in it. You can use a FileMeshGenerator to load an exodus mesh",
                  "url": "https://github.com/idaholab/moose/discussions/25723#discussioncomment-7256889",
                  "updatedAt": "2023-10-11T20:54:27Z",
                  "publishedAt": "2023-10-11T20:54:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Ah, I see what your question implies. Cubit does not allow me to save the geometry without meshing it as a .e file. Can I mesh the geometry with a minimal amount of meshing in Cubit, import it into MOOSE, delete the previous mesh and then use online generation meshing in MOOSE to define a new mesh?",
                          "url": "https://github.com/idaholab/moose/discussions/25723#discussioncomment-7256937",
                          "updatedAt": "2023-10-11T21:02:12Z",
                          "publishedAt": "2023-10-11T21:02:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nwhich dimension is your geometry?\nis this a simple geometry?\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/25723#discussioncomment-7256945",
                          "updatedAt": "2023-10-11T21:03:54Z",
                          "publishedAt": "2023-10-11T21:03:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "",
                          "url": "https://github.com/idaholab/moose/discussions/25723#discussioncomment-7256972",
                          "updatedAt": "2023-10-11T21:08:24Z",
                          "publishedAt": "2023-10-11T21:08:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I would say just create it directly from scratch in MOOSE if you are trying to use MOOSE mesh generators\nthe reactor module is meant to model these lattice systems",
                          "url": "https://github.com/idaholab/moose/discussions/25723#discussioncomment-7257001",
                          "updatedAt": "2023-10-11T21:13:55Z",
                          "publishedAt": "2023-10-11T21:13:52Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "@GiudGiud , I applied the method suggested above. Thank you for your guidance. The numerical results that I am getting by using the basic method, appears to imply that the boundary condition that I am applying to the overall outer boundary is being applied equally to each individual location outer boundary. I'm applying equal power density to each circular region, this an expectation for the highest temperature at the center of the array. It appears a symmetry condition is being applied to each section equally. I have included a pic of the result. Is there a way to prevent the application of this symmetry boundary condition?",
                          "url": "https://github.com/idaholab/moose/discussions/25723#discussioncomment-7267777",
                          "updatedAt": "2023-10-12T21:17:16Z",
                          "publishedAt": "2023-10-12T21:17:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Looks like you ll need to rename the outer boundary to apply your condition only there\nYou use other mesh generators (sidesetfromnormal, sidesetaround etc) to do that\nYou can plot the sidesets in paraview to see where they are defined.",
                          "url": "https://github.com/idaholab/moose/discussions/25723#discussioncomment-7268227",
                          "updatedAt": "2023-10-12T22:55:31Z",
                          "publishedAt": "2023-10-12T22:55:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Temperature dependent mobility and grain growth simulation",
          "author": {
            "login": "ykvishal"
          },
          "bodyText": "Brief details:\nI am simulating the effect of temperature gradient on grain growth. I modified 3D_6000_gr.i by following temperature_gradient.i file. A typical set up is given here:\n\n2D simulation video is shown here:\nhttps://user-images.githubusercontent.com/31565781/112631151-cf2ad100-8e36-11eb-94a7-4e3c6746a1ab.mp4\nProblem:\nI need 5 nodes (X28 cores, pmem=8gb) to run 3D_6000_gr.i (ie 140 cores). But, temperature dependent mobility case needs 560 cores. Also dt is almost 1/10 th of normal grain growth case.  First I started with 40 nodes (X14 cores, pmem=17gb) then I followed memory requirement per core using VectorMemoryUsage and I could reduce number of nodes to 28 nodes (X20 cores, pmem=12gb). However, I still need 560 cores. . I tried with 280 cores - 20 nodes (X14 cores, pmem=17gb but simulation does not start. Here is the comparison of  VectorMemoryUsage\nPhysical Memory in GBs\n\nNode Utilization:\n\nHere t represents Time Step.\nI also have PerfGraphOutput data.\nFor  3D_6000_gr.i\nPerformance Graph:\n\nHeaviest Branch:\n\nHeaviest Sections:\n\n\nFor Temperature dependent mobility case:\nPerformance Graph:\n\nHeaviest Branch:\n\nHeaviest Sections:\n\nIs there a way to reduce number of cores to run a temperature dependent mobility case? Also, is there a way to increase dt?\nThank you.\nEdit: I made minor changes to the  3D_6000_gr.i file like 1) added parallel_type = distributed to the mesh block; 2) Neumann boundary condition ; and 3) changed op_num to 50 from 28 due to problem with GrainTracker. I will create a separate thread on this GrainTracker issue.",
          "url": "https://github.com/idaholab/moose/discussions/17433",
          "updatedAt": "2024-05-08T21:14:45Z",
          "publishedAt": "2021-03-26T12:55:43Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "If you are changing the temperature profile, the rate of grain coarsening is going to change. If the temperature is lower and coarsening slows down, if you are using mesh adaptivity (and you should for a problem this large) you are going to have more degrees of freedom in your problem. So, it would be helpful to know how many degrees of freedom are in the problem for the two cases. Can you add a NumDOFs postprocessor to your input files and run? If there are dramatically more DOF's in the problem with the gradient there may not be much you can do other than add more cores. However just want to find out if this is the case.",
                  "url": "https://github.com/idaholab/moose/discussions/17433#discussioncomment-545390",
                  "updatedAt": "2022-06-30T14:41:18Z",
                  "publishedAt": "2021-03-29T20:08:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "Thank you @laagesen for your reply.\nFor 3D_6000_gr.i,  the post-processor output is as follows\n\nFor Temperature dependent mobility case:,  the post-processor output is as follows",
                          "url": "https://github.com/idaholab/moose/discussions/17433#discussioncomment-545483",
                          "updatedAt": "2022-06-30T14:41:18Z",
                          "publishedAt": "2021-03-29T20:18:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "OK the number of DOF's is not changing in either case, so you are not using adaptivity. (I'm not sure why you have a smaller number of DOF's in the temperature-dependent problem- from the n_elements postprocessor it looks like the mesh size is different right? I would stick to the same mesh size if possible so you can make an apples-to-apples comparison). Anyways, I think you should use mesh adaptivity for a large problem like this. This should reduce the number of DOF's and therefore the number of cores you need. You can see a good example of how this is done in the example moose/modules/phase_field/examples/grain_growth/grain_growth_2D_voronoi_newadapt.i\nand you can find documentation on the adaptivity system here:\nhttps://mooseframework.inl.gov/syntax/Adaptivity/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/17433#discussioncomment-545570",
                          "updatedAt": "2022-06-30T14:41:32Z",
                          "publishedAt": "2021-03-29T20:36:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Also, please make sure all parameters are set the same between the two input files other than the temperature gradient. I just noticed that the wGB parameter in the GBEvolution material in the two input files that you started from are very different from each other, if those are different values in your different cases, the performance will be very different. wGB controls the width of the diffuse interface that represents grain boundaries.",
                          "url": "https://github.com/idaholab/moose/discussions/17433#discussioncomment-545621",
                          "updatedAt": "2022-06-30T14:41:31Z",
                          "publishedAt": "2021-03-29T20:52:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "Yes, I kept everything else same from 3D_6000_gr.i and I only copied temperature related part from temperature_gradient.i\nMy materials block is as follows\n[Materials]\n[./Copper]\ntype = GBEvolution\nT = T #T = 500\nwGB = 3 # um\nGBmob0 = 2.5e-6 #m^4/(Js) from Schoenfelder 1997\nQ = 0.23 #Migration energy in eV\nGBenergy = 0.708 #GB energy in J/m^2\nmolar_volume = 7.11e-6 #Molar volume in m^3/mol\nlength_scale = 1.0e-6\ntime_scale = 1.0\n[../]\n[]\nI already tried adaptivity in 2D. I will try it with 3D simulations and see what happens.",
                          "url": "https://github.com/idaholab/moose/discussions/17433#discussioncomment-545663",
                          "updatedAt": "2022-07-05T08:32:26Z",
                          "publishedAt": "2021-03-29T21:01:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "mnabilbhuiyan"
                  },
                  "bodyText": "Hello @laagesen, in this temperature_gradient.i input file in the\n[Functions]\n[./TGradient]\ntype = ParsedFunction\nexpression = '450 + 0.1x'\n[../]\n[]\nsection instead of x, if I use t, the expression will be then  '450 + 0.1x'. In this case, will it indicate the temperature change is time-dependent and also rate of grain growth will be time dependent?_",
                  "url": "https://github.com/idaholab/moose/discussions/17433#discussioncomment-9359598",
                  "updatedAt": "2024-05-08T19:48:19Z",
                  "publishedAt": "2024-05-08T19:48:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "yes you should be able to substitute t for x in that ParsedFunction. Just be aware grain growth could accelerate a lot at later times and convergence of the problem will get slower.",
                          "url": "https://github.com/idaholab/moose/discussions/17433#discussioncomment-9359935",
                          "updatedAt": "2024-05-08T20:29:53Z",
                          "publishedAt": "2024-05-08T20:29:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mnabilbhuiyan"
                          },
                          "bodyText": "Thank you so much for clearing this.",
                          "url": "https://github.com/idaholab/moose/discussions/17433#discussioncomment-9360287",
                          "updatedAt": "2024-05-08T21:14:46Z",
                          "publishedAt": "2024-05-08T21:14:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Install MOOSE in HPC cluster",
          "author": {
            "login": "sidharthsarmah"
          },
          "bodyText": "Hi @GiudGiud , I am trying to run jobs in HPC cluster using MOOSE, I followed these steps for condo https://mooseframework.inl.gov/getting_started/installation/conda.html but encountered some error to install MOOSE in it using https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html, please suggest.\n(moose) [sidharth@narval2 scripts]$ export MOOSE_JOBS=6 METHODS=opt\n(moose) [sidharth@narval2 scripts]$ ./update_and_rebuild_petsc.sh\n/home/sidharth/projects/def-jsong/sidharth/projects/moose/scripts\nSubmodule 'petsc' (https://gitlab.com/petsc/petsc.git) registered for path 'petsc'\nCloning into '/lustre06/project/6002274/sidharth/projects/moose/petsc'...\nSubmodule path 'petsc': checked out '1580af9fcba34756b20ac647dbc5659db3fdd05b'\nINFO: Checking for HDF5...\nINFO: HDF5 installation location was set using HDF5_DIR=/home/sidharth/miniforge/envs/moose\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe version of PETSc you are using is out-of-date, we recommend updating to the new release\n Available Version: 3.20.4   Installed Version: 3.20.3\nhttps://petsc.org/release/download/\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n=============================================================================================\n                         Configuring PETSc to compile on your system\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: CC=mpicc. Ignoring it! Use \"./configure CC=$CC\" if you really\n  want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: CXX=mpicxx. Ignoring it! Use \"./configure CXX=$CXX\" if you\n  really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: FC=mpif90. Ignoring it! Use \"./configure FC=$FC\" if you\n  really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: F77=mpif77. Ignoring it! Use \"./configure F77=$F77\" if you\n  really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: F90=mpif90. Ignoring it! Use \"./configure F90=$F90\" if you\n  really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC\n  -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem\n  /home/sidharth/miniforge/envs/moose/include. Ignoring it! Use \"./configure\n  CFLAGS=$CFLAGS\" if you really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: CXXFLAGS=-fvisibility-inlines-hidden  -fmessage-length=0\n  -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2\n  -ffunction-sections -pipe -isystem /home/sidharth/miniforge/envs/moose/include\n  -std=c++17. Ignoring it! Use \"./configure CXXFLAGS=$CXXFLAGS\" if you really want to use\n  this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: FFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC\n  -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem\n  /home/sidharth/miniforge/envs/moose/include. Ignoring it! Use \"./configure\n  FFLAGS=$FFLAGS\" if you really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable:\n  CPP=/home/sidharth/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-cpp. Ignoring it! Use\n  \"./configure CPP=$CPP\" if you really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: CPPFLAGS=-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem\n  /home/sidharth/miniforge/envs/moose/include. Ignoring it! Use \"./configure\n  CPPFLAGS=$CPPFLAGS\" if you really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable: LDFLAGS=-Wl,-O2 -Wl,--sort-common -Wl,--as-needed\n  -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections\n  -Wl,--allow-shlib-undefined -Wl,-rpath,/home/sidharth/miniforge/envs/moose/lib\n  -Wl,-rpath-link,/home/sidharth/miniforge/envs/moose/lib\n  -L/home/sidharth/miniforge/envs/moose/lib. Ignoring it! Use \"./configure\n  LDFLAGS=$LDFLAGS\" if you really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable:\n  AR=/home/sidharth/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-ar. Ignoring it! Use\n  \"./configure AR=$AR\" if you really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Found environment variable:\n  RANLIB=/home/sidharth/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-ranlib. Ignoring\n  it! Use \"./configure RANLIB=$RANLIB\" if you really want to use this value\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Using default C optimization flags \"-g -O\". You might consider manually setting optimal\n  optimization flags for your system with COPTFLAGS=\"optimization flags\" see\n  config/examples/arch-*-opt.py for examples\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Using default Cxx optimization flags \"-g -O\". You might consider manually setting optimal\n  optimization flags for your system with CXXOPTFLAGS=\"optimization flags\" see\n  config/examples/arch-*-opt.py for examples\n=============================================================================================\n=============================================================================================\n                                     ***** WARNING *****\n  Using default FC optimization flags \"-g -O\". You might consider manually setting optimal\n  optimization flags for your system with FOPTFLAGS=\"optimization flags\" see\n  config/examples/arch-*-opt.py for examples\n=============================================================================================\nTESTING: configureMPI2 from config.packages.MPI(config/BuildSystem/config/packages/MPI.py:396)\n*********************************************************************************************\n           UNABLE to CONFIGURE with GIVEN OPTIONS (see configure.log for details):\n---------------------------------------------------------------------------------------------\n  PETSc requires some of the MPI-2.0 (1997), MPI-2.1 (2008) functions - they are not\n  available with the specified MPI library\n*********************************************************************************************\nThere was an error. Exiting...\n(moose) [sidharth@narval2 scripts]$",
          "url": "https://github.com/idaholab/moose/discussions/26787",
          "updatedAt": "2024-05-08T20:12:19Z",
          "publishedAt": "2024-02-10T05:22:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "your mpi seems too old?\nwhat does the diagnostics script in moose/scripts return?",
                  "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8425417",
                  "updatedAt": "2024-02-10T05:45:04Z",
                  "publishedAt": "2024-02-10T05:45:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "HI, FYI",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8425436",
                          "updatedAt": "2024-02-11T16:33:36Z",
                          "publishedAt": "2024-02-10T05:51:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "COMPILER icc:\nicc (ICC) 19.1.1.217 20200306\nCopyright (C) 1985-2020 Intel Corporation.  All rights reserved.\n\nintel compilers are not supported. You ll need to follow the installation page more closely",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8425441",
                          "updatedAt": "2024-02-10T05:53:25Z",
                          "publishedAt": "2024-02-10T05:53:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , any suggestions? do I need to change the cluster?",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8425479",
                          "updatedAt": "2024-02-10T06:03:17Z",
                          "publishedAt": "2024-02-10T06:03:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you ll need to find a different compiler. Maybe there are modules on your cluster? what does module avail return?",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8425497",
                          "updatedAt": "2024-02-10T06:07:42Z",
                          "publishedAt": "2024-02-10T06:07:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "FYI",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8425509",
                          "updatedAt": "2024-02-11T16:34:17Z",
                          "publishedAt": "2024-02-10T06:10:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "well first unload intel/2020.1.217\nbut it s not enough. You need a mpi module that uses gcc and I dont see one in the list of modules.\nmaybe ask your cluster administators for one?",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8425519",
                          "updatedAt": "2024-02-10T06:17:56Z",
                          "publishedAt": "2024-02-10T06:17:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , I unload using module unload intel/2020.1.217 and will get back once I ask the administrators for the installations.",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8425571",
                          "updatedAt": "2024-02-10T06:37:12Z",
                          "publishedAt": "2024-02-10T06:37:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud, they suggest that I use std end:\nhttps://docs.alliancecan.ca/wiki/Standard_software_environments\nThese are the lines which I used along with the outcome:\n1.\n[name@server ~]$ module load StdEnv/2023\n\n\n\n\nexport MOOSE_JOBS=6 METHODS=opt\n./update_and_rebuild_petsc.sh\n...\n====================================\n/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/bin/gmake --no-print-directory -f makefile PETSC_ARCH=arch-moose PETSC_DIR=/home/sidharth/projects/def-jsong/sidharth/projects/moose/scripts/../petsc SLEPC_DIR=/lustre06/project/6002274/sidharth/projects/moose/petsc/arch-moose/externalpackages/git.slepc install-builtafterslepc\n/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/bin/gmake --no-print-directory -f makefile PETSC_ARCH=arch-moose PETSC_DIR=/home/sidharth/projects/def-jsong/sidharth/projects/moose/scripts/../petsc SLEPC_DIR=/lustre06/project/6002274/sidharth/projects/moose/petsc/arch-moose/externalpackages/git.slepc slepc4py-install\ngmake[6]: Nothing to be done for 'slepc4py-install'.\ngmake[2]: Leaving directory '/lustre06/project/6002274/sidharth/projects/moose/petsc'\n=========================================\nNow to check if the libraries are working do:\nmake PETSC_DIR=/home/sidharth/projects/def-jsong/sidharth/projects/moose/scripts/../petsc PETSC_ARCH=arch-moose check\n=========================================\n\n\n\n\n./update_and_rebuild_libmesh.sh\n...\n---------------------------------------------\n-- Done configuring core library features ---\n---------------------------------------------\n---------------------------------------------\n----- Configuring for optional packages -----\n---------------------------------------------\nchecking for built-in XDR support... no\nchecking for XDR support in /usr/include/tirpc... no\nconfigure: error: *** XDR was not found, but --enable-xdr-required was specified.\nRunning make -j 6...\nmake: *** No targets specified and no makefile found.  Stop.\n\n\n\n\n./update_and_rebuild_wasp.sh\n...\n-- Installing: /home/sidharth/projects/def-jsong/sidharth/projects/moose/scripts/../framework/contrib/wasp/install/include/wasplsp/ThreadConnection.h\n-- Installing: /home/sidharth/projects/def-jsong/sidharth/projects/moose/scripts/../framework/contrib/wasp/install/include/wasplsp/WaspServer.h\n-- Installing: /home/sidharth/projects/def-jsong/sidharth/projects/moose/scripts/../framework/contrib/wasp/install/include/wasplsp/WaspServer.i.h\n\n\n\n\nConda activate moose\nmake -j 6\n...\nmake: *** [/home/sidharth/projects/def-jsong/sidharth/projects/moose/framework/build.mk:150: /home/sidharth/projects/def-jsong/sidharth/projects/moose/framework/build/unity_src/transfers_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\nmake: *** [/home/sidharth/projects/def-jsong/sidharth/projects/moose/framework/build.mk:150: /home/sidharth/projects/def-jsong/sidharth/projects/moose/framework/build/unity_src/meshgenerators_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\nmake: *** [/home/sidharth/projects/def-jsong/sidharth/projects/moose/framework/build.mk:150: /home/sidharth/projects/def-jsong/sidharth/projects/moose/framework/build/unity_src/actions_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\n\n\n\n\n(moose) [sidharth@narval2 test]$ ./run_tests -j 6\n...\n<frozen importlib._bootstrap>:241: RuntimeWarning: compile time version 3.10 of module 'hit' does not match runtime version 3.11\nSegmentation fault (core dumped)\n(moose) [sidharth@narval2 test]$",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8447200",
                          "updatedAt": "2024-02-12T21:53:11Z",
                          "publishedAt": "2024-02-12T21:48:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Step 3:\nAsk your cluster admins if they can install the necessary package. Reference: #22659\nStep 5:\nBecause you are using the System's provided compile suite (module load StdEnv/2023), you cannot use Conda. By trying to use both, you will run into conflicting scenarios (module load StdEnv/2023 provides a compiler stack, and conda activate will provide another completely different compiler stack).\nYou must continue to use the same compiler stack throughout the entire installation and usage of MOOSE.\nIf it turns out your HPC Cluster admins do not wish to install libtirpc-devel, you always have the option of using only Conda. But if you use Conda, you can no longer use modules. To make this clear, module load is akin to conda activate. They do the same thing: Attempt to manage your environment. You cannot/should not/it is dangerous unless you know what you're doing/ use both.",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8447579",
                          "updatedAt": "2024-02-12T22:48:52Z",
                          "publishedAt": "2024-02-12T22:48:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "HI @milljm , @GiudGiud  :\nThe admin suggested me the following:\nplease try to install it locally with these instructions given by my colleague in a previous ticket :\n\nmodule load scipy-stack/2023b\nmodule load gcc/9.3.0\nmodule load petsc/3.17.1 boost/1.80.0 eigen/3.4.0 glpk/5.0 wasp/3.1.4\n\ngit clone --depth 1 --branch 2023-11-08 https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fidaholab%2Fmoose.git&data=05%7C02%7Csidharth.sarmah%40mail.mcgill.ca%7C24d040bc9d6f47c4d6d108dc3186a880%7Ccd31967152e74a68afa9fcf8f89f09ea%7C0%7C0%7C638439701616227442%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=8IJ%2BzC2s1THteBQyUqam3peKZSDK5I%2FSL6hmeXepPwo%3D&reserved=0\ncd moose/scripts\nexport MOOSE_JOBS=6 METHODS=opt\nmodule load gcc/9.3.0 petsc/3.17.1 boost/1.80.0 eigen/3.4.0 glpk/5.0\nexport PETSC_DIR=$EBROOTPETSC\nexport WASP_DIR=$EBROOTWASP\nexport EIGEN_INC=$EBROOTEIGEN/include\nexport GLPK_DIR=$EBROOTGLPK\n\nCPPFLAGS=\"$CPPFLAGS -I$EBROOTGENTOO/include/tirpc \" ./update_and_rebuild_libmesh.sh\n\ncd ../test\nmake\n\nOnce I did it, it was okay but then when I tried, ./run_tests. I got this error message please suggest.\nmisc/check_error.aux_kernel_with_var ......................................... FAILED (EXPECTED ERROR MISSING)\nmisc/check_error.bad_kernel_test ............................................. FAILED (EXPECTED ERROR MISSING)\nmisc/check_error.function_file_test3 ......................................... FAILED (EXPECTED ERROR MISSING)\nmisc/check_error.incomplete_kernel_variable_coverage_test .................... FAILED (EXPECTED ERROR MISSING)\nmisc/check_error.scalar_kernel_with_var ...................................... FAILED (EXPECTED ERROR MISSING)\nmisc/check_error.bad_kernel_var_test ......................................... FAILED (EXPECTED ERROR MISSING)\n--------------------------------------------------------------------------------------------------------------\nRan 52 tests in 83.0 seconds. Average test time 0.9 seconds, maximum test time 1.0 seconds.\n2 passed, 250 skipped, 0 pending, 50 FAILED\nMAX FAILURES REACHED\n[sidharth@beluga2 test]$",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8536350",
                          "updatedAt": "2024-02-20T23:30:03Z",
                          "publishedAt": "2024-02-20T23:28:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "adityakavalur"
                  },
                  "bodyText": "@sidharthsarmah and @milljm just to add my two cents in case its useful.\n\nIf you are trying to unload stickied modules module --force unload foo should do the trick, similarly module purge does not unload stickied modules you need to add the force flag for that as well, module --force purge, however that seems a bit excessive to me. The former will allow you to get to cleaner environments in a meaningful manner.\nI would suggest trying without the StdEnv module and simply the base gcc, often times vendors/HPC admin will add a whole bunch of compiler flags and compiler wrappers on the base version through these modules.",
                  "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8677706",
                  "updatedAt": "2024-03-05T09:33:52Z",
                  "publishedAt": "2024-03-05T09:33:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "That is what I think is going on as well. I've tried to get the cluster admins involved, and they have invited @sidharthsarmah to contact them with issues involving building on their cluster, and I think that is the correct direction to go at this time.\nWe have no support for Intel compilers, yet this environment seems to still be setting Intel Math Kernel libraries. Whether or not this is actually affecting the build process... I don't know.\nThe cluster is operating on Gentoo. Which by itself is fine, but the packages are not being maintained by portage. But instead by easybuild. In my most humble opinion, this is a little odd. As it defeats the purpose of the highly customizable/optimized builds provided by portage. Personally I think this is why 'building' things on this cluster is proving difficult.",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8682805",
                          "updatedAt": "2024-03-05T16:37:01Z",
                          "publishedAt": "2024-03-05T16:37:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi, @GiudGiud @milljm could you please suggest what do I do next? Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8683251",
                          "updatedAt": "2024-03-05T17:08:59Z",
                          "publishedAt": "2024-03-05T17:08:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "At this point, I would ask a cluster admin to try and follow our Getting Started instructions while on B\u00e9luga. There is something special needed that we're unable to detect.",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8683366",
                          "updatedAt": "2024-03-05T17:17:48Z",
                          "publishedAt": "2024-03-05T17:17:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bartoldeman"
                          },
                          "bodyText": "I'm an analyst for Beluga. We have Gentoo as a compatibility layer because the same modules are used on different OSes, it's the same approach as EESSI (http://www.eessi.io/docs/overview/)\nIn the end it wasn't so hard, but you need to load the petsc module instead of trying to build it yourself.\nmodule load StdEnv/2023 \nmodule load python scipy-stack petsc slepc vtk parmetis wasp eigen boost\nexport WASP_DIR=$EBROOTWASP\nexport MOOSE_JOBS=6 METHODS=opt\ngit clone --depth 1 --branch 2024-02-12 https://github.com/idaholab/moose.git moose-2024-02-12\ncd moose-2024-02-12/scripts/\n./update_and_rebuild_libmesh.sh --with-xdr-include=$EBROOTGENTOO/include/tirpc\ncd ../test\nmake -j6\n./run_tests -j6\n\nthis passed all tests except a few:\nmisc/signal_handler.test_signal .................................................... FAILED (TESTER EXCEPTION)\nmisc/signal_handler.test_signal_parallel .............................. [min_cpus=3] FAILED (TESTER EXCEPTION)\nkernels/bad_scaling_scalar_kernels.poorly-conditioned-field-scalar-system ... FAILED (EXPECTED OUTPUT MISSING)\nparser/hit_error.error ....................................................... FAILED (EXPECTED ERROR MISSING)\nkernels/simple_transient_diffusion.cant-solve-poorly-scaled ................. FAILED (EXPECTED OUTPUT MISSING)\nkernels/simple_transient_diffusion.cant-solve-large-transient-changes ........ FAILED (EXPECTED ERROR MISSING)\nusability.diagnostic ......................................................... FAILED (EXPECTED ERROR MISSING)\npartitioners/petsc_partitioner.party ............................................ [min_cpus=4] FAILED (ERRMSG)\n--------------------------------------------------------------------------------------------------------------\nRan 4037 tests in 1277.9 seconds. Average test time 1.4 seconds, maximum test time 47.5 seconds.\n4029 passed, 212 skipped, 0 pending, 8 FAILED",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8724962",
                          "updatedAt": "2024-03-08T21:26:47Z",
                          "publishedAt": "2024-03-08T21:26:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @milljm @bartoldeman ,\nThis work but when I tried to make the tensor mechanics-opt to run my input file, I got this error:\n[sidharth@beluga3 tensor_mechanics]$ make -j 6\n\n***ERROR***\nWASP does not seem to be available.\nMake sure to either run scripts/update_and_rebuild_wasp.sh in your MOOSE directory,\nor set WASP_DIR to a valid WASP install\n\nDo you think I need to install petsc and wasp as well, as suggested it need not be except we have wasp and petsc as modules already, so no need to install them another time as well)? @bartoldeman",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8737906",
                          "updatedAt": "2024-03-11T17:25:00Z",
                          "publishedAt": "2024-03-10T20:15:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Can you follow the exact instrucitons that @bartoldeman pasted here and attach the console log so we can see what it outputs.\nAs a reminder:\nmodule load StdEnv/2023 \nmodule load python scipy-stack petsc slepc vtk parmetis wasp eigen boost\nexport WASP_DIR=$EBROOTWASP\nexport MOOSE_JOBS=6 METHODS=opt\ngit clone --depth 1 --branch 2024-02-12 https://github.com/idaholab/moose.git moose-2024-02-12\ncd moose-2024-02-12/scripts/\n./update_and_rebuild_libmesh.sh --with-xdr-include=$EBROOTGENTOO/include/tirpc\ncd ../test\nmake -j6\n./run_tests -j6",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8738519",
                          "updatedAt": "2024-03-10T22:22:54Z",
                          "publishedAt": "2024-03-10T22:22:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bartoldeman"
                          },
                          "bodyText": "Hello @sidharthsarmah\nyou need to load the wasp module included in (module load python scipy-stack petsc slepc vtk parmetis wasp eigen boost) and set export WASP_DIR=$EBROOTWASP for WASP_DIR to be set correctly. I suspect you forgot one or both of those commands before make -j6.\nmodule avail merely lists the modules you can load, not the ones that are loaded, that would be module list.",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8744344",
                          "updatedAt": "2024-03-11T11:05:31Z",
                          "publishedAt": "2024-03-11T11:05:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "@bartoldeman thank you for looking into this!\nIn the event a user needs to build PETSc themselves, what are the \"special tricks\" in order to do so on this cluster? I am asking only because we usually see pre-built versions of PETSc (or libMesh, etc) available as modules, they do not contain every contrib/configure option MOOSE based applications require.\nAlso note: I do not think the 8 failures you received are due to any sort of missing contribs in PETSc. I am genuinely interested in knowing so that I may provide helpful tips in the future.",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8744737",
                          "updatedAt": "2024-03-11T11:44:57Z",
                          "publishedAt": "2024-03-11T11:44:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @bartoldeman\nI did followed these commands:\nmodule load StdEnv/2023 \nmodule load python scipy-stack petsc slepc vtk parmetis wasp eigen boost\nexport WASP_DIR=$EBROOTWASP\nexport MOOSE_JOBS=6 METHODS=opt\ngit clone --depth 1 --branch 2024-02-12 https://github.com/idaholab/moose.git moose-2024-02-12\ncd moose-2024-02-12/scripts/\n./update_and_rebuild_libmesh.sh --with-xdr-include=$EBROOTGENTOO/include/tirpc\ncd ../test\nmake -j6\n./run_tests -j6\n\n\nDo I need to do it again before making the tensor mechanics app?\nmodule load python scipy-stack petsc slepc vtk parmetis wasp eigen boost \nexport WASP_DIR=$EBROOTWASP",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8744840",
                          "updatedAt": "2024-03-11T11:55:47Z",
                          "publishedAt": "2024-03-11T11:54:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bartoldeman"
                          },
                          "bodyText": "@sidharthsarmah yes you need to run those two commands every time.",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8745481",
                          "updatedAt": "2024-03-11T12:48:13Z",
                          "publishedAt": "2024-03-11T12:48:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sidharthsarmah"
                  },
                  "bodyText": "Hi @GiudGiud , I am getting this error when I try to make -j6 in my local laptop. Should I run update_and_rebuild_libmesh.sh in scripts folder.\nError:\n(base) sidharthsarmah@Sidharths-MacBook-Air tensor_mechanics % make -j 6\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/libtool: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/libtool: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n\n***WARNING***\nYour libmesh is out of date.\nYou need to run update_and_rebuild_libmesh.sh in the scripts directory.\n\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\nCompiling C++ (in opt mode) /Users/sidharthsarmah/MOOSE/projects/moose/framework/build/unity_src/src_Unity.C...\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\nCompiling C++ (in opt mode) /Users/sidharthsarmah/MOOSE/projects/moose/framework/build/unity_src/linesearches_Unity.C...\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/libtool: No such file or directory\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\nmake: *** [/Users/sidharthsarmah/MOOSE/projects/moose/framework/build/unity_src/src_Unity..opt.lo] Error 127\nmake: *** Waiting for unfinished jobs....\n/bin/sh: /Users/sidharthsarmah/MOOSE/projects/moose/libmesh/installed/libtool: No such file or directory\nmake: *** [/Users/sidharthsarmah/MOOSE/projects/moose/framework/build/unity_src/linesearches_Unity..opt.lo] Error 127\n(base) sidharthsarmah@Sidharths-MacBook-Air tensor_mechanics %",
                  "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8832965",
                  "updatedAt": "2024-03-18T20:45:13Z",
                  "publishedAt": "2024-03-18T20:44:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you forgot to activate the moose conda environment on your local laptop",
                          "url": "https://github.com/idaholab/moose/discussions/26787#discussioncomment-8832977",
                          "updatedAt": "2024-03-18T20:45:40Z",
                          "publishedAt": "2024-03-18T20:45:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Dry-out During CO2 Injection",
          "author": {
            "login": "denismart997"
          },
          "bodyText": "Dear, Moose community\nMy name is Denis , I was exploring different Moose applications for CO2 storage, went through couple papers, such as (https://doi.org/10.3929/ethz-b-000410774),  \"A Numerical Model for Formation Dry-out During CO2 Injection\u2026\u201d, and currently I am a little bit confused , for modelling such behaviour - geochemical system should be considered (porous flow tutorial 13) , including reactions + hard coded salt precipitation when the solubility limit is exceed. Or everything is much simpler , and it is possible to run simple CO2 injection case with nonlinear NaCl variable. However, after simulations in this case only salt transport is reflected, without dry-out and salt precipitation around injection point.  (By mentioning dry-out front I mean the continuous injection of dry scCO2 vaporizes the remaining formation brine in the swept zone, which persistently increases the concentration of dissolved salt. When the salt concentration reaches the solubility limit, it precipitates out of the brine). Thank you in advance.\nKind regards,\nDenis.",
          "url": "https://github.com/idaholab/moose/discussions/21660",
          "updatedAt": "2024-05-08T17:34:00Z",
          "publishedAt": "2022-07-21T22:33:24Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "@cpgr is the world expert in this type of problem",
                  "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-3201789",
                  "updatedAt": "2022-07-21T22:46:53Z",
                  "publishedAt": "2022-07-21T22:46:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "@WilkAndy is overstating my expertise, but I think I can explain this paper.\nLike you say, as you inject CO2, the brine near the well gets pushed out until it is immobile (liquid saturation below its residual saturation). This immobile water continues to evaporate into the gas (or supercritical) phase, and is transported away. The NaCl in the brine will then start to precipitate once the amount of NaCl is above it's equilibrium concentration.\nIf you want to model this properly, you can do a coupled geochemistry - flow simulation like you note. In the linked study, the authors don't explicitly include a solid NaCl phase once the mass fraction of salt exceeds its equilibrium concentration due to evaporation of the water. Instead, they reduce the fracture aperture (they are modelling flow into a fracture only) using a simple model to account for the reduction due to precipitate. They then reduce the amount of NaCl in the liquid phase by resetting the mass fraction of NaCl to its equilibrium value in each cell.\nThere are more details in the corresponding journal article https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1029/2020WR027213",
                          "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-3201981",
                          "updatedAt": "2022-07-21T23:48:51Z",
                          "publishedAt": "2022-07-21T23:48:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "denismart997"
                          },
                          "bodyText": "Dear, @cpgr\nThank you very much for your reply and clarification. Could you please provide one more hint , about brineco2 module in moose? Mainly , I have a question regarding a local equilibrium phase partitioning and mass fraction of water in the CO2 phase. As I understood you are applying the same approach as it is done in Tough2 simulator (ECO2N module), where local equilibrium is calculated according to its solubility limit at a certain pressure, temperature and salinity (Spycher and Pruess, 2005), and this\nimplies that phase partitioning occurs instantaneously? Am I right? If yes , from your point of you, can it be done differently, using kinetic approach? The example is this paper \"(http://dx.doi.org/10.1016/j.ijggc.2014.05.010)\".  Thank you in advance.\nKind regards,\nDenis.",
                          "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-3286274",
                          "updatedAt": "2022-07-30T10:26:08Z",
                          "publishedAt": "2022-07-30T10:26:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "That's correct - we use an instantaneous equilibrium assumption (same as TOUGH). We don't have the capability to compute the evaporation of water into the gas phase using a kinetic approach currently. However, I have previously hacked together something for the related problem of kinetic dissolution of the gas phase into the water phase. I can't remember the fine details off the top of my head, but an example of the difference between instantaneous dissolution of CO2 into the water and dissolution computed using a kinetic mass transfer with MOOSE is (for a 1D radial model of flow from a well)\n\nSo it is certainly possible to do what you want with a bit of coding.",
                          "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-3293135",
                          "updatedAt": "2022-07-31T23:18:56Z",
                          "publishedAt": "2022-07-31T23:18:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "denismart997"
                          },
                          "bodyText": "Dear, @cpgr\nThank you very much for you reply regarding last question . Sorry , for disturbing you once again, for my master thesis instantaneous equilibrium approach should be sufficient, so I want to repeat something similar to the simulation which was performed from the first (aperture) paper , but much simpler - just scCO2 core flooding experiment, slightly heterogeneous with random porosity distribution just for visualisation. However, since there is no input file available from that experiment (only output .e file), I have problems with injection boundary, I have tried simple PorousFlowSink , but it requires significant injection rates (1000 more than it should be) just to let fluid enter the core(even if Pc=0), and after 3 sec. of simulation there are some convergence issues. I have tried DircacKernel point injection, and it works much better , but I need injection to be performed from the whole inflow boundary. If you have couple min, could you please have a look into input file , might something catch you attention . Thank you very much!\nhttps://github.com/denismart997/MooseCO2/blob/b0ed0e37073de5e6058c6ad352d721dcdeb903cf/CO2_StartS2.i",
                          "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-3379504",
                          "updatedAt": "2022-08-11T21:51:46Z",
                          "publishedAt": "2022-08-11T21:49:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "The input file you linked didn't really work as the initial residual was lower than your nl_abs_tol, so nothing happens.\nAfter some minor tweaks I could get it to run and it seems to do something sensible (but I don't know if the injection rate is what you want)\n\nWhat I did was:\n\nremove the scaling of the pressure variable\nset nl_abs_tol = 1e-11\n\nand I could get the above.\nIf you add the following to your input file\n[Debug]\n  show_var_residual_norms = true\n[]\n\nyou can see that the residuals of the unscaled nonlinear variables are all around the same magnitude.\nYou might also want to add a post processor to check that you are injecting the exact amount of CO2 that you expect\n[Postprocessors]\n  [co2mass]\n    type = PorousFlowFluidMass\n    phase = '0 1'\n    fluid_component = 1\n    execute_on = 'initial timestep_end'\n  []\n[]\n\nwill compute the CO2 mass (in kg) in all phases.\nFinally, you could remove the bottomnaclg BC as there is no NaCl in the gas phase, so this is always 0.\nLet me know how it goes,\nChris",
                          "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-3380004",
                          "updatedAt": "2022-08-12T00:03:09Z",
                          "publishedAt": "2022-08-12T00:00:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "denismart997"
                          },
                          "bodyText": "Dear , @cpgr\nThank you very much, Chris, for you help , it look much better know . This is what I ve got after 3000 sec , I thought that salt concentration would be more prominent by this stage, as it was at single point injection. But anyway looks much better. Thanks a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-3387713",
                          "updatedAt": "2022-08-12T23:15:47Z",
                          "publishedAt": "2022-08-12T23:15:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "robo-boluo"
                  },
                  "bodyText": "Dear Chris Green and and guillaumeGiudicelli  @cpgr @GiudGiud ,\nMay I ask if there are examples of CO2 injection into brine containing multiple salts, such as NaCl and CaCl2, MgCl2...? Additionally, if the kernels (PorousFlowMassTimeDerivative, PorousFlowAdvectiveFlux) are utilized to simulate CO2, water, and brine flow, how can the mass fractions of ions (f_H, f_Na, f_Ca, f_HCO3....) be saved? These saved fraction variables are necessary for coupling into the geochemistry model.\nAlternatively, can the [PorousFlowFullySaturated] action be employed to address CO2 injection into brine, facilitating the direct preservation of mass fractions using save_component_rate_in? I gleaned information on the usage of PorousFlowFullySaturated from the reactive transport example located in ['moose/modules/combined/examples/geochem-porous_flow/forge/porous_flow.i'].\"\nAppreciate your time and guidance on this matter.\nRegards,\nRobo",
                  "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-9311197",
                  "updatedAt": "2024-05-04T04:14:29Z",
                  "publishedAt": "2024-05-04T04:12:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "I don't believe there are any examples of this. The kernels etc can handle multiple fluid components. How difficult this is to do depends on whether you want the CO2 in a gas phase to be able to dissolve into the fluid.",
                          "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-9347902",
                          "updatedAt": "2024-05-07T23:24:40Z",
                          "publishedAt": "2024-05-07T23:24:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "robo-boluo"
                          },
                          "bodyText": "Hi Chris Green @cpgr\nThank you for your kind reply. For practical application, the injected CO2 is anticipated to exist in both gas and liquid phases. The dissolved CO2 will undergo a reaction with H2O, yielding HCO3- and H+ ions. Subsequently, the H+ ions will be utilized for reactive transport modeling, including mineral dissolution and precipitation. I'm not certain about the feasibility of employing MOOSE to model this scenario",
                          "url": "https://github.com/idaholab/moose/discussions/21660#discussioncomment-9358152",
                          "updatedAt": "2024-05-08T17:34:01Z",
                          "publishedAt": "2024-05-08T17:34:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Multicomponent Spinodal decomposition",
          "author": {
            "login": "KamalnathOSU"
          },
          "bodyText": "Hi !\nI am trying to simulate spinodal decomposition in a multicomponent (N>=3) alloy with all cross-diffusion. Do you have any example for this case in MOOSE ?\nAlso, in a multicomponent alloy, there would be many kernels (in the reverse_split formulation). Is there a in-built action to add these kernels into the input script ? https://mooseframework.inl.gov/source/actions/ConservedAction.html Does it add kernels for multiple variables ? Its functionality is unclear. Do you have any example that uses ConservedAction ?",
          "url": "https://github.com/idaholab/moose/discussions/27441",
          "updatedAt": "2024-05-08T16:18:13Z",
          "publishedAt": "2024-04-22T19:42:24Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@laagesen",
                  "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9203306",
                  "updatedAt": "2024-04-23T16:35:31Z",
                  "publishedAt": "2024-04-23T16:35:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Hello, thanks for your interest in the MOOSE phase-field module!\nWe don't currently have any examples for multi-component spinodal decomposition. However, as long as you have a free energy defined that includes the additional dependence on the additional composition order parameter(s), you should be able to add additional evolution equations based on that. You can do that either with adding the appropriate variables and kernels, or as you suggested, using the ConservedAction action. You would just want to make sure to change the name of the block that defines the action, because as the documentation says, that controls the variable name. You can see an example here:\nmoose/modules/phase_field/examples/cahn-hilliard/Parsed_SplitCH.i\nIn that case, the free energy is defined in fbulk and only depends on c, you would want to change this to depend on your other variables too. Then you would add multiple copies of the PhaseField block with different names (replacing c) to get the evolution equations.",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9203703",
                          "updatedAt": "2024-04-23T17:15:42Z",
                          "publishedAt": "2024-04-23T17:15:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Thank you very much !",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9205623",
                          "updatedAt": "2024-04-23T21:18:17Z",
                          "publishedAt": "2024-04-23T21:18:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Hi @laagesen\n\nYou can do that either with adding the appropriate variables and kernels, or as you suggested, using the ConservedAction action. You would just want to make sure to change the name of the block that defines the action, because as the documentation says, that controls the variable name.\n\nI have another question on ConservedAction. It also takes in coupled_variables as an argument. But while creating SplitCHParsed kernel that information is not used. Is there some other place in which you are using that information ?\nLine 196-210 in ConservedAction  class.\n        // Add SplitCHParsed kernel\n        {\n          std::string kernel_type = \"SplitCHParsed\";\n\n          std::string kernel_name = _var_name + \"_\" + kernel_type;\n          InputParameters params = _factory.getValidParams(kernel_type);\n          params.set<NonlinearVariableName>(\"variable\") = _var_name;\n          params.set<std::vector<VariableName>>(\"w\") = {_chempot_name};\n          params.set<MaterialPropertyName>(\"f_name\") =\n              getParam<MaterialPropertyName>(\"free_energy\");\n          params.set<MaterialPropertyName>(\"kappa_name\") = getParam<MaterialPropertyName>(\"kappa\");\n          params.applyParameters(parameters());\n\n          _problem->addKernel(kernel_type, kernel_name, params);\n        }",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9356321",
                          "updatedAt": "2024-05-08T15:15:49Z",
                          "publishedAt": "2024-05-08T15:15:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "I am not sure, I think @tonkmr wrote this kernel, maybe he can comment?",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9356931",
                          "updatedAt": "2024-05-08T15:53:26Z",
                          "publishedAt": "2024-05-08T15:53:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tonkmr"
                          },
                          "bodyText": "The command\nparams.applyParameters(parameters());\ntakes the parameters of the action and uses them for the kernel. So, coupled_variables is passed through there. To prove it to yourself, you could make two versions of the input file, one that uses the action and one that doesn't and ensure they give exactly the same behavior.",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9357022",
                          "updatedAt": "2024-05-08T16:04:50Z",
                          "publishedAt": "2024-05-08T16:04:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "@tonkmr\nGreat ! Thank you. One more quick question.\nIf I have a parameter in the action, which is not a parameter of the kernel, Then it would be ignored by params.applyParameters(parameters()) command right ?",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9357087",
                          "updatedAt": "2024-05-08T16:12:03Z",
                          "publishedAt": "2024-05-08T16:12:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "yes it will\nsee the doxygen for applyParameters\nhttps://mooseframework.inl.gov/docs/doxygen/moose/classInputParameters.html#af94a58913d2cefb06ed97e976ccd9003",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9357117",
                          "updatedAt": "2024-05-08T16:15:10Z",
                          "publishedAt": "2024-05-08T16:15:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Thank you very much @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9357139",
                          "updatedAt": "2024-05-08T16:18:13Z",
                          "publishedAt": "2024-05-08T16:18:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Hi Guys,\nI have one more question on the same topic. I am using SpiltCHParsed kernel in my spinodal decomposition input file. I have some doubts on the proper usage of \"coupled_variables\". I am solving for spinodal decomposition in Fe, Cr, Ni where I chose xFe and xCr as the non-linear variable.  While specifying 'coupled_variables' , shall I specify the dependence on xFe and xCr (as shown below) ? Or should I not include the non-linear variable specified in the variable argument ?\n  [./c1_res]\n   type = SplitCHParsed\n   variable = xFe\n   f_name = 'F'\n   kappa_name = 'kappa1_c'\n   w = w1\n   coupled_variables = ' xFe xCr'\n [../]",
                  "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9297026",
                  "updatedAt": "2024-05-02T15:27:26Z",
                  "publishedAt": "2024-05-02T15:27:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "You should enter any other variables that your free energy F depends on, but not the variable that kernel is acting on. So in your case you don't want to enter xFe but probably do want to enter xCr, if there is xCr dependence in your free energy F (which I am assuming there is).",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9297632",
                          "updatedAt": "2024-05-02T16:19:36Z",
                          "publishedAt": "2024-05-02T16:19:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you are using the non AD SplitCHParsed  as you show then yes, do include them as it will declare additional derivartive material properties",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9297638",
                          "updatedAt": "2024-05-02T16:19:54Z",
                          "publishedAt": "2024-05-02T16:19:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "see what Larry said",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9297646",
                          "updatedAt": "2024-05-02T16:20:22Z",
                          "publishedAt": "2024-05-02T16:20:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "@laagesen But if I accidentally include xFe into coupled_variables argument, will it cause any problem ?",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9298659",
                          "updatedAt": "2024-05-02T18:09:42Z",
                          "publishedAt": "2024-05-02T18:09:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no it may only mean one extra material property defined. The users of these material properties are not going to get it wrong",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9298766",
                          "updatedAt": "2024-05-02T18:19:58Z",
                          "publishedAt": "2024-05-02T18:19:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Hi @laagesen ,\nOne more question, how to print the dependent concentration variable as an Auxvariable ? Is there a specific kernel for that ?\nFor example, in Fe-Cr-Ni alloy, I chose xFe and xCr as the non-linear variable. Now, I how to do print xNi ? Is there a general method for this ?",
                  "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9317355",
                  "updatedAt": "2024-05-05T02:39:14Z",
                  "publishedAt": "2024-05-05T02:39:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is it created as a material property somewhere? Do you see it with Debug/show_material_props?\nIf so there's material property output for that\nIf not, then can it be computed simply with an analytical expression? If so you can use a ParsedAux to compute it",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9317570",
                          "updatedAt": "2024-05-05T03:58:17Z",
                          "publishedAt": "2024-05-05T03:58:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "No, it is not created as material property.\nHowever, I can make ParsedAux to work for it.",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9329665",
                          "updatedAt": "2024-05-06T13:51:52Z",
                          "publishedAt": "2024-05-06T13:51:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Hi @laagesen @dschwen\nI am trying to couple a CALPHAD minimizer engine (Pandat) to moose, so that it can define first and second derivatives of free energy required for spinodal simulation. I define these free energies and material properties, and evalutate it in computeQpProperties() as shown below.\nIt looks like computeQpProperties() is called for every linear and non-linear iterations. However, evaluation of second derivative could be quite expensive for multicomponent alloys. I believe based on my understanding of the MOOSE that we dont need to evaluate second derivative for linear iterations.  Is there anyway to skip the second derivative evaluation in MOOSE for linear iterations ?\nvoid\nGmTernaryExtended::computeQpProperties()\n{\n\n  Real R = 8.31442;// Gas constant\n\n  Real X1 = _X1[_qp];\n  Real X2 = _X2[_qp];\n  Real X3 = 1-X1-X2;\n  vector<double> conc_vector = {X1,X2,X3};\n  Real T  = _TK[_qp];\n  \n  //Declare memory for PFM_SDK output data\n  PFM_SDK_Output_Data output;\n  calculate_local_eq(conc_vector,T,output);\n\n//Free energy\n  _G[_qp] = output.phase_Gibbs_energy[0] / _Gnormal ;\n\n//First derivative\n  double mu_ref=output.mu[ _ncomp - 1];\n  _dGdX1[_qp] = (output.mu[0] - mu_ref) / _Gnormal ;\n  _dGdX2[_qp] = (output.mu[1] - mu_ref) / _Gnormal ;\n\n//Second derivative\n  {int engine_id=0;\n  _d2GdX1X1[_qp] = cal_d2G(output,engine_id,0,0) / _Gnormal;\n  _d2GdX1X2[_qp] = cal_d2G(output,engine_id,0,1) / _Gnormal;\n  _d2GdX2X2[_qp] = cal_d2G(output,engine_id,1,1) / _Gnormal;\n  }\n}",
                  "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9331575",
                  "updatedAt": "2024-05-06T16:32:16Z",
                  "publishedAt": "2024-05-06T16:32:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Evaluating second derivatives will take more time, but it will likely make the problem converge faster - they are used to precondition the matrix-vector problem and without this preconditioning, converging nonlinear iterations may be much slower. @dschwen can probably say more here",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9331658",
                          "updatedAt": "2024-05-06T16:36:32Z",
                          "publishedAt": "2024-05-06T16:36:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "@laagesen\nThank you for your prompt response.\nI think there is a misunderstanding.  I still want to evaluate second derivative for nonlinear iterations. However, for linear iterations, we dont need second derivatives (as Jacobian is not recalculated). Can we skip second derivative only for linear iterations ?",
                  "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9331721",
                  "updatedAt": "2024-05-06T16:40:14Z",
                  "publishedAt": "2024-05-06T16:40:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Hi,\nCan other developers also chime in the discussion?\nIs there a indicator in available in computeQpProperties() function that  can tell me whether the evaluation is perform ed for linear iteration or non-linear iteration ?",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9356131",
                          "updatedAt": "2024-05-08T15:02:28Z",
                          "publishedAt": "2024-05-08T15:02:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "use a reference to the fe_problem to use getCurrentExecuteOnFlag which you can compare to EXEC_LINEAR for example\nsee the doxygene for materials and problems",
                          "url": "https://github.com/idaholab/moose/discussions/27441#discussioncomment-9357130",
                          "updatedAt": "2024-05-08T16:16:23Z",
                          "publishedAt": "2024-05-08T16:16:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "A build problem after updating moose",
          "author": {
            "login": "Always-kimi"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A Getting Started is the most appropriate category for my question (trouble installing, beginner user, ...)\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (avoid screenshots if possible, triple back quotes before/after pasted text, etc)\n\nIssue or question about MOOSE\nhello\ndevelopers,\nI have a build problem after updating moose when I rebuild my applications. It seems to be a git problem that just happened yesterday and on both debian and wsl.\nfatal: ambiguous argument 'HEAD': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'\nTraceback (most recent call last):\n  File \"/home/kimi/projects/moose/framework/../scripts/premake.py\", line 183, in <module>\n    PreMake().check()\n  File \"/home/kimi/projects/moose/framework/../scripts/premake.py\", line 18, in __init__\n    self.versioner_meta = Versioner().version_meta()\n  File \"/home/kimi/projects/moose/scripts/versioner.py\", line 302, in version_meta\n    app_name, _, app_hash = self.get_app()\n  File \"/home/kimi/projects/moose/scripts/versioner.py\", line 352, in get_app\n    git_hash = subprocess.check_output(hash_command, encoding='utf-8').rstrip()[0:7]\n  File \"/home/kimi/miniforge/envs/moose/lib/python3.10/subprocess.py\", line 421, in check_output\n    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,\n  File \"/home/kimi/miniforge/envs/moose/lib/python3.10/subprocess.py\", line 526, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['git', 'rev-parse', 'HEAD']' returned non-zero exit status 128.\nmake: [/home/kimi/projects/moose/framework/moose.mk:388: prebuild] Error 1 (ignored)\n\nAlthough it doesn't affect the build and test applications, I'd like to know how to deal with it.\nDiagnostics for MOOSE installation issues\n[Optional] Output of the diagnostics scripts. To run the script: cd ~/projects/moose/scripts; ./diagnostics.sh",
          "url": "https://github.com/idaholab/moose/discussions/27575",
          "updatedAt": "2024-05-08T14:15:26Z",
          "publishedAt": "2024-05-08T07:30:52Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIn which folder are you building? It seems to be outside of a git repository\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27575#discussioncomment-9354003",
                  "updatedAt": "2024-05-08T12:18:08Z",
                  "publishedAt": "2024-05-08T12:18:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Always-kimi"
                          },
                          "bodyText": "In the babbler folder created by using the command `./moose/scripts/stork.sh Babbler'.\nI try to build a new application, it's still the same.\n(moose) kimi@DESKTOP-7APSM1S:~/projects$ ./moose/scripts/stork.sh Abc\nInitialized empty Git repository in /home/kimi/projects/abc/.git/\n\n*** Please tell me who you are.\n\nRun\n\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n\nto set your account's default identity.\nOmit --global to set the identity only in this repository.\n\nfatal: empty ident name (for <kimi@DESKTOP-7APSM1S.localdomain>) not allowed\nMOOSE app created in '/home/kimi/projects/abc'\n\nTo store your changes on GitHub:\n    1. Log in to your GitHub account\n    2. Create a new repository named 'abc'\n    3. In this terminal window, run the following commands:\n         cd /home/kimi/projects/abc\n         git remote add origin https://github.com/YourGitHubUserName/abc\n         git commit -m \"Initial code commit\"\n         git push -u origin main\n\nTo automatically enforce MOOSE C++ code style in your commits, run:\n\n    cd /home/kimi/projects/abc\n    ./scripts/install-format-hook.sh\n\nTo enable software quality assurance (SQA) documentation using MooseDocs, perform the\nfollowing steps after adding your git repository remote:\n\n    1. Navigate to /home/kimi/projects/abc/doc\n    2. Run './moosedocs.py init sqa --app 'Abc' --category abc'\n    3. Commit the initial SQA changes using the following commands:\n         git add /home/kimi/projects/abc/doc\n         git commit -m \"Initial SQA changes\"\n         git push origin main\n    4. Add new SQA content to the forms in /home/kimi/projects/abc/doc/content/sqa\n\nFor general assistance in MOOSE-based application SQA, please contact the MOOSE\nframework development team. For further info on the MooseDocs code documentation\nsystem, please visit https://mooseframework.inl.gov.\n(moose) kimi@DESKTOP-7APSM1S:~/projects$ cd abc/\n(moose) kimi@DESKTOP-7APSM1S:~/projects/abc$ make -j6\nfatal: ambiguous argument 'HEAD': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'\nTraceback (most recent call last):\n  File \"/home/kimi/projects/moose/framework/../scripts/premake.py\", line 183, in <module>\n    PreMake().check()\n  File \"/home/kimi/projects/moose/framework/../scripts/premake.py\", line 18, in __init__\n    self.versioner_meta = Versioner().version_meta()\n  File \"/home/kimi/projects/moose/scripts/versioner.py\", line 302, in version_meta\n    app_name, _, app_hash = self.get_app()\n  File \"/home/kimi/projects/moose/scripts/versioner.py\", line 352, in get_app\n    git_hash = subprocess.check_output(hash_command, encoding='utf-8').rstrip()[0:7]\n  File \"/home/kimi/miniforge/envs/moose/lib/python3.10/subprocess.py\", line 421, in check_output\n    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,\n  File \"/home/kimi/miniforge/envs/moose/lib/python3.10/subprocess.py\", line 526, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['git', 'rev-parse', 'HEAD']' returned non-zero exit status 128.\nmake: [/home/kimi/projects/moose/framework/moose.mk:388: prebuild] Error 1 (ignored)",
                          "url": "https://github.com/idaholab/moose/discussions/27575#discussioncomment-9354364",
                          "updatedAt": "2024-05-08T12:54:08Z",
                          "publishedAt": "2024-05-08T12:54:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the creation of the app is failing:\nit is telling you to run this\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n\nthen Babbler, because this has not been done, is not an actual git repository",
                          "url": "https://github.com/idaholab/moose/discussions/27575#discussioncomment-9354960",
                          "updatedAt": "2024-05-08T14:07:42Z",
                          "publishedAt": "2024-05-08T13:48:49Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Always-kimi"
                          },
                          "bodyText": "Oh I got it, but this operation wasn't needed before when creating a moose application, did the moose framework update the procedure?",
                          "url": "https://github.com/idaholab/moose/discussions/27575#discussioncomment-9355077",
                          "updatedAt": "2024-05-08T13:58:23Z",
                          "publishedAt": "2024-05-08T13:58:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont think we have. We ll make sure we catch this problem in the future though, I created an issue",
                          "url": "https://github.com/idaholab/moose/discussions/27575#discussioncomment-9355220",
                          "updatedAt": "2024-05-08T14:08:22Z",
                          "publishedAt": "2024-05-08T14:08:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Always-kimi"
                          },
                          "bodyText": "Thanks a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/27575#discussioncomment-9355336",
                          "updatedAt": "2024-05-08T14:15:27Z",
                          "publishedAt": "2024-05-08T14:15:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Not converge about DIVERGED_NANORINF and  DIVERGED_LINEAR_SOLVE problem.",
          "author": {
            "login": "lipxisi"
          },
          "bodyText": "Hello\nIn the case of 06.i of porous_flow I modified  geometry, fluid properties and permeability to suit my model. However, the solver does not converge, sometimes there will be DIVERGED_NANORINF and DIVERGED_LINEAR_SOLVE related problems, like\n[Time Step 3, time = 150, dt = 50\n 0 Nonlinear |R| = 1.449103e-08\n Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 0\n Solve Did NOT Converge!\nAborting as solve did not converge]\n\nsometimes there will be directly skip linear convergence problems.\n[Time step 5,time =18000,dt =3600\n0 Nonlinear lRl=4.939397e-15 \nSolve converged!]\n\nI don't know what is the main reason for this, and I should adjust those areas. Though I have looked at https://mooseframework.inl.gov/moose/application_usage/failed_solves.html, but there is no good solution.\ninputfile\n[Mesh]\n  [cube]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmax = 9.5\n    ymax = 9.5\n    nx = 100\n    ny = 100\n  []\n  #[rename]\n  #  type = RenameBoundaryGenerator\n  #  input = cube\n  #  old_boundary = '0 1 2 3'\n  #  new_boundary = 'out_side out_side out_side out_side'\n  #[]\n[]\n\n[GlobalParams]\n  PorousFlowDictator = dictator\n[]\n\n[Variables]\n  [porepressure]\n    initial_condition = 0\n  []\n  [tracer_concentration]\n    initial_condition = 0\n    #scaling = 1e5\n  []\n[]\n\n[ICs]\n  [tracer_concentration]\n    type = ConstantIC\n    value = 1\n    variable = tracer_concentration\n    boundary = top\n  []\n  [poutside]\n    type = ConstantIC\n    variable = porepressure\n    boundary = top\n    value = 5e5\n  []\n[]\n\n[BCs]\n  [tracer_concentration]\n    type = DirichletBC\n    value = 1\n    variable = tracer_concentration\n    boundary = top\n  []\n  [1tracer_concentration]\n    type = DirichletBC\n    value = 0\n    variable = tracer_concentration\n    boundary = bottom\n  []\n  [poutside]\n    type = DirichletBC\n    variable = porepressure\n    boundary = top\n    value = 5e5\n  []\n  [1poutside]\n    type = DirichletBC\n    variable = porepressure\n    boundary = bottom\n    value = 0\n  []\n[]\n\n[PorousFlowFullySaturated]\n  porepressure = porepressure\n  coupling_type = Hydro\n  gravity = '0 0 0'\n  fp = the_simple_fluid\n  mass_fraction_vars = tracer_concentration\n  stabilization = KT # Note to reader: 06_KT.i uses KT stabilization - compare the results\n  flux_limiter_type = superbee\n[]\n\n[FluidProperties]\n  [the_simple_fluid]\n    type = SimpleFluidProperties\n    bulk_modulus = 13E9\n    viscosity = 9E-2\n    density0 = 2787.0\n  []\n[]\n\n[Materials]\n  [porosity]\n    type = PorousFlowPorosity\n    porosity_zero = 0.15\n  []\n  [permeability_caps]\n    type = PorousFlowPermeabilityConst\n    block = '0'\n    permeability = '1E-19 0 0   0 1E-19 0   0 0 1E-19'\n  []\n[]\n\n[Preconditioning]\n  active = basic\n  [basic]\n    type = SMP\n    full = true\n    petsc_options = '-ksp_diagonal_scale -ksp_diagonal_scale_fix'\n    petsc_options_iname = '-pc_type -sub_pc_type -sub_pc_factor_shift_type -pc_asm_overlap'\n    petsc_options_value = ' asm      lu           NONZERO                   2'\n  []\n  [preferred_but_might_not_be_installed]\n    type = SMP\n    full = true\n    petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n    petsc_options_value = ' lu       mumps'\n  []\n[]\n\n[Functions]\n  [dt_controller]\n    type = PiecewiseConstant\n    x = '0    3600   18000  43200'\n    y = '50   500  1800  43200'\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = Newton\n  end_time = 3.6e5\n\n  [TimeStepper]\n    type = FunctionDT\n    function = dt_controller\n  []\n  nl_abs_tol = 1E-10\n  l_abs_tol = 1e-15\n[]\n\n[Outputs]\n  exodus = true\n  print_linear_residuals = true\n[]\n\nThank you for checking!",
          "url": "https://github.com/idaholab/moose/discussions/27576",
          "updatedAt": "2024-05-16T09:40:19Z",
          "publishedAt": "2024-05-08T08:34:20Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI dont usually say this but your convergence criteria are too tight\n  nl_abs_tol = 1E-10\n  l_abs_tol = 1e-15\n\nyou can leave the first one if it works, but the second one is too close to numerical precision. In fact since the residual is checked by the nonlinear solver, you dont need to converge the linear solve anywhere near as tight. 1e-3 is often enough\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27576#discussioncomment-9354227",
                  "updatedAt": "2024-05-08T12:39:48Z",
                  "publishedAt": "2024-05-08T12:39:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Problem in splitting the domain",
          "author": {
            "login": "khushbuiitk"
          },
          "bodyText": "Hi MOOSE community,\nI am trying to split the domain into two parts and assign different properties like conductivity to each split domain to check if it grows faster. I tried using a subdomain generator, but it isn't working at all.\nPlease help me with this.\nThanks",
          "url": "https://github.com/idaholab/moose/discussions/27573",
          "updatedAt": "2024-05-08T12:14:24Z",
          "publishedAt": "2024-05-08T05:19:24Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you describe the split of the domain with simple expressions of the local coordinates? For example x > 2 for the other subdomain.\nIf so, you could use this mesh generator to do the split?\nhttps://mooseframework.inl.gov/source/meshgenerators/ParsedSubdomainMeshGenerator.html\nMaybe paste the Mesh block here if you cannot get it to work\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27573#discussioncomment-9353961",
                  "updatedAt": "2024-05-08T12:14:25Z",
                  "publishedAt": "2024-05-08T12:14:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Peacock segmentation fault problem",
          "author": {
            "login": "Balbest"
          },
          "bodyText": "When I try to run peacock (from peacock env), the following error is emerging: Segmentation fault (core dumped).\nParaview runs with no problems, libmesh is updated, chigger/tests/window/window_clear.py returns the same segmentation fault.\nFor some reason, I had some problems with environment variables (i.e. not set MOOSE_DIR).\ntest_PeacockMainWindow.py returns:\n\n\ntestConnections (__main__.Tests) ... QCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nNo executable found for method type(s): opt, dbg, oprof, devel\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nWARNING\n '/home/balbest/Workmain/moose_projects/moose/test/moose_test-opt -options_left 0 --json' exited with non zero status 127.\nPlease make sure your application is built and able to execute the given arguments.\nWorking dir: /home/balbest/Workmain/moose_projects/moose/python/peacock/tests/peacock_app/PeacockMainWindow\nOutput: /home/balbest/Workmain/moose_projects/moose/test/moose_test-opt: error while loading shared libraries: libmoose-opt.so.0: cannot open shared object file: No such file or directory\nWARNING\nFailed to load json from '/home/balbest/Workmain/moose_projects/moose/test/moose_test-opt': '/home/balbest/Workmain/moose_projects/moose/test/moose_test-opt -options_left 0 --json' exited with non zero status 127.\nPlease make sure your application is built and able to execute the given arguments.\nWorking dir: /home/balbest/Workmain/moose_projects/moose/python/peacock/tests/peacock_app/PeacockMainWindow\nOutput: /home/balbest/Workmain/moose_projects/moose/test/moose_test-opt: error while loading shared libraries: libmoose-opt.so.0: cannot open shared object file: No such file or directory\nFAIL\ntestConsole (main.Tests) ... QCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 180, 180, 180, 255'\nQCssParser::parseColorValue: Specified color without alpha value but alpha given: 'rgb 111, 111, 111, 255'\nNo executable found for method type(s): opt, dbg, oprof, devel\nok\n======================================================================\nFAIL: testConnections (main.Tests)\nTraceback (most recent call last):\nFile \"/home/balbest/Workmain/moose_projects/moose/python/peacock/tests/peacock_app/PeacockMainWindow/./test_PeacockMainWindow.py\", line 39, in testConnections\nself.assertIn(path, w.windowTitle())\nAssertionError: '/home/balbest/Workmain/moose_projects/moose/test/moose_test-opt' not found in 'Peacock'\n\nRan 2 tests in 0.486s\nFAILED (failures=1)\n\n \nmoose_test-opt itself runs as usual",
          "url": "https://github.com/idaholab/moose/discussions/27566",
          "updatedAt": "2024-05-08T12:13:18Z",
          "publishedAt": "2024-05-07T21:05:10Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhich OS are you using?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27566#discussioncomment-9347141",
                  "updatedAt": "2024-05-07T21:14:40Z",
                  "publishedAt": "2024-05-07T21:14:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Balbest"
                          },
                          "bodyText": "Ubuntu 22",
                          "url": "https://github.com/idaholab/moose/discussions/27566#discussioncomment-9347495",
                          "updatedAt": "2024-05-07T22:21:37Z",
                          "publishedAt": "2024-05-07T22:21:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you set the MOOSE_DIR environment variable, compile moose if you have not, and try again to see if those warnings about finding moose disappear ?",
                          "url": "https://github.com/idaholab/moose/discussions/27566#discussioncomment-9347530",
                          "updatedAt": "2024-05-07T22:28:50Z",
                          "publishedAt": "2024-05-07T22:28:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Balbest"
                          },
                          "bodyText": "okay, after I repeated the process, I've got exactly the same output described here: #26884 (reply in thread)\nAnd I also don't have any other VTK installations.\nRepeating this #26884 (reply in thread)\nreturns the following:\n\n(/home/balbest/home/balbest/Temp_conda/_env/.envs/peacock-testing) bash-5.1$ ./peacock\nTraceback (most recent call last):\nFile \"/home/balbest/Workmain/moose_projects/moose/python/peacock/./peacock\", line 36, in \nrun_peacock()\nFile \"/home/balbest/Workmain/moose_projects/moose/python/peacock/./peacock\", line 28, in run_peacock\nsys.exit(main(sys.argv))\nFile \"/home/balbest/Workmain/moose_projects/moose/python/peacock/./peacock\", line 12, in main\nfrom peacock.CheckRequirements import has_requirements\nFile \"/home/balbest/Workmain/moose_projects/moose/python/peacock/init.py\", line 11, in \nfrom . import base\nFile \"/home/balbest/Workmain/moose_projects/moose/python/peacock/base/init.py\", line 10, in \nfrom .MooseWidget import MooseWidget\nFile \"/home/balbest/Workmain/moose_projects/moose/python/peacock/base/MooseWidget.py\", line 11, in \nimport mooseutils\nFile \"/home/balbest/Workmain/moose_projects/moose/python/mooseutils/init.py\", line 23, in \nfrom .civet_results import get_civet_results, get_civet_hashes\nFile \"/home/balbest/Workmain/moose_projects/moose/python/mooseutils/civet_results.py\", line 24, in \nDEFAULT_JOBS_CACHE = os.path.join(os.getenv('HOME'), '.local', 'share', 'civet', 'jobs')\nFile \"/home/balbest/home/balbest/Temp_conda/_env/.envs/peacock-testing/lib/python3.10/posixpath.py\", line 76, in join\na = os.fspath(a)\nTypeError: expected str, bytes or os.PathLike object, not NoneType",
                          "url": "https://github.com/idaholab/moose/discussions/27566#discussioncomment-9350854",
                          "updatedAt": "2024-05-08T07:20:27Z",
                          "publishedAt": "2024-05-08T07:20:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you export the HOME environment variable? It seems to fail on that line that does os.getenv('HOME')",
                          "url": "https://github.com/idaholab/moose/discussions/27566#discussioncomment-9353742",
                          "updatedAt": "2024-05-08T11:52:55Z",
                          "publishedAt": "2024-05-08T11:52:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Balbest"
                          },
                          "bodyText": "yes, it was not defined. So now ./peacock returns \"Aborted (core dumped)\"",
                          "url": "https://github.com/idaholab/moose/discussions/27566#discussioncomment-9353840",
                          "updatedAt": "2024-05-08T12:02:05Z",
                          "publishedAt": "2024-05-08T12:02:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "well nothing I can do from that unfortunately.\nI would recommend:\n\ntry the workbench GUI instead : https://www.ornl.gov/onramp/neams-workbench\nuse the input files outside of the GUI and use paraview for visualizing meshes / results. That's how I do all my work",
                          "url": "https://github.com/idaholab/moose/discussions/27566#discussioncomment-9353887",
                          "updatedAt": "2024-05-08T12:06:57Z",
                          "publishedAt": "2024-05-08T12:06:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Balbest"
                          },
                          "bodyText": "yes, I switch to paraview then, thanks for your efforts!",
                          "url": "https://github.com/idaholab/moose/discussions/27566#discussioncomment-9353956",
                          "updatedAt": "2024-05-08T12:13:18Z",
                          "publishedAt": "2024-05-08T12:13:17Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}