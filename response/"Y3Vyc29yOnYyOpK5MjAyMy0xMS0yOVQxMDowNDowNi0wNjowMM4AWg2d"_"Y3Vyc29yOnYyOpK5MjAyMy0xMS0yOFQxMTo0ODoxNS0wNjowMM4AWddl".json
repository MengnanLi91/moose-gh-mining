{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0xMS0yOFQxMTo0ODoxNS0wNjowMM4AWddl"
    },
    "edges": [
      {
        "node": {
          "title": "If it is possible to develop a two-phase flow code like RELAP5",
          "author": {
            "login": "SomnusYu"
          },
          "bodyText": "Hi all,\nI would like to know if it is possible to develop a two-phase flow code using the THM module. Just like RELAP5:\n\nusing six-equation model;\nusing the closure model in RELAP5;\nusing the RDG method and Roe-type numerical method to solve convection terms;\nusing water97 fluid properties;\nusing the component framework in THM, and developing the two-phase components.\n\nIf it is possible? I'm not sure.....  Could anyone kindly tell me? Or I must develop our own code using the seven-equation model like RELAP7?",
          "url": "https://github.com/idaholab/moose/discussions/26182",
          "updatedAt": "2023-11-29T14:34:53Z",
          "publishedAt": "2023-11-29T04:10:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Definitely possible but it's a lot of work\n@joshuahansel for a more elaborate answer",
                  "url": "https://github.com/idaholab/moose/discussions/26182#discussioncomment-7699586",
                  "updatedAt": "2023-11-29T04:19:43Z",
                  "publishedAt": "2023-11-29T04:19:43Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "joshuahansel"
                  },
                  "bodyText": "It's definitely possible, so long as you have the funding and resources to develop a two-phase code. As you suggested, RELAP-7 does the same thing but with the 7-equation model. Architecturally, you'd just follow the structure of THM or RELAP-7. If you have specific questions about how we've done things, we can answer those.\nFor Water97, you may need to implement more interfaces depending on your formulation and what lookups you need.",
                  "url": "https://github.com/idaholab/moose/discussions/26182#discussioncomment-7704887",
                  "updatedAt": "2023-11-29T13:35:58Z",
                  "publishedAt": "2023-11-29T13:35:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@SomnusYu can you please give us some background on your project? Is this a classic 3 year grant for PhD research?",
                          "url": "https://github.com/idaholab/moose/discussions/26182#discussioncomment-7705267",
                          "updatedAt": "2023-11-29T14:11:30Z",
                          "publishedAt": "2023-11-29T14:11:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "SomnusYu"
                  },
                  "bodyText": "Yes, it's my PHD project, and I have developed it for two years. These days I meet a lot of problems, so I am not sure it is possible to finish it.\n---- Replied Message ----\n| From | Guillaume ***@***.***> |\n| Date | 11/29/2023 22:11 |\n| To | idaholab/moose ***@***.***> |\n| Cc | SomnusYu ***@***.***>,\nMention ***@***.***> |\n| Subject | Re: [idaholab/moose] If it is possible to develop a two-phase flow code like RELAP5 (Discussion #26182) |\n\n@SomnusYu can you please give us some background on your project? Is this a classic 3 year grant for PhD research?\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you were mentioned.Message ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26182#discussioncomment-7705422",
                  "updatedAt": "2023-11-29T14:23:32Z",
                  "publishedAt": "2023-11-29T14:23:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "As for most coding endeavors I would recommend starting with simple cases. Two-phase is ambitious.\nIf you have a working one-phase solver and get the right answers for the relevant validation (or verification against 1D simple studies or THM) cases, you are on the right track!\nAs @joshuahansel mentioned we are always happy to support as much as our time allows",
                          "url": "https://github.com/idaholab/moose/discussions/26182#discussioncomment-7705521",
                          "updatedAt": "2023-11-29T14:31:27Z",
                          "publishedAt": "2023-11-29T14:31:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "SomnusYu"
                  },
                  "bodyText": "Thank you very much.\n---- Replied Message ----\n| From | ***@***.***> |\n| Date | 11/29/2023 21:36 |\n| To | idaholab/moose ***@***.***> |\n| Cc | SomnusYu ***@***.***>,\nAuthor ***@***.***> |\n| Subject | Re: [idaholab/moose] If it is possible to develop a two-phase flow code like RELAP5 (Discussion #26182) |\n\nIt's definitely possible, so long as you have the funding and resources to develop a two-phase code. As you suggested, RELAP-7 does the same thing but with the 7-equation model. Architecturally, you'd just follow the structure of THM or RELAP-7. If you have specific questions about how we've done things, we can answer those.\n\nFor Water97, you may need to implement more interfaces depending on your formulation and what lookups you need.\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26182#discussioncomment-7705435",
                  "updatedAt": "2023-11-29T14:24:47Z",
                  "publishedAt": "2023-11-29T14:24:46Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "SomnusYu"
                  },
                  "bodyText": "Thanks for you suggestions. Thank you very much!\n---- Replied Message ----\n| From | Guillaume ***@***.***> |\n| Date | 11/29/2023 22:31 |\n| To | idaholab/moose ***@***.***> |\n| Cc | SomnusYu ***@***.***>,\nMention ***@***.***> |\n| Subject | Re: [idaholab/moose] If it is possible to develop a two-phase flow code like RELAP5 (Discussion #26182) |\n\nAs for most coding endeavors I would recommend starting with simple cases. Two-phase is ambitious.\n\nIf you have a working one-phase solver and get the right answers for the relevant validation (or verification against 1D simple studies or THM) cases, you are on the right track!\n\nAs @joshuahansel mentioned we are always happy to support as much as our time allows\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you were mentioned.Message ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/26182#discussioncomment-7705581",
                  "updatedAt": "2023-11-29T14:34:54Z",
                  "publishedAt": "2023-11-29T14:34:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Unable to get into \"base\" environment",
          "author": {
            "login": "hardud"
          },
          "bodyText": "I have successfully installed Mambaforge in my home directory and exported the path so it can be used.\nWhen I run \"mamba init\" it initializes, and asks to close and reopen my current shell.\nWhen I reopen my shell, I AM NOT GETTING INTO THE BASE ENVIRONMENT. I DO NOT SEE MY PROMPT PREFIXED WITH (BASE).  I am stuck in the loop since forever.",
          "url": "https://github.com/idaholab/moose/discussions/26178",
          "updatedAt": "2023-11-29T14:14:31Z",
          "publishedAt": "2023-11-29T02:22:30Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhich os/platform is this?\nOpen the .bashrc / profile (depending on the platform) and look for the prompt that starts mamba on console startup. is it there?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26178#discussioncomment-7699024",
                  "updatedAt": "2023-11-29T02:46:50Z",
                  "publishedAt": "2023-11-29T02:46:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hardud"
                          },
                          "bodyText": "I have macOS.\nMy .bash_profile reads the following:",
                          "url": "https://github.com/idaholab/moose/discussions/26178#discussioncomment-7699066",
                          "updatedAt": "2023-11-29T02:55:19Z",
                          "publishedAt": "2023-11-29T02:55:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "are you using zsh for the shell by any chance? if so the .bash_profile is completely ignored.\nYou ll have to modify the .zshprofile or stop using zsh (and use bash instead)",
                          "url": "https://github.com/idaholab/moose/discussions/26178#discussioncomment-7699149",
                          "updatedAt": "2023-11-29T03:06:48Z",
                          "publishedAt": "2023-11-29T03:06:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hardud"
                          },
                          "bodyText": "That worked! Thank you so much.",
                          "url": "https://github.com/idaholab/moose/discussions/26178#discussioncomment-7699196",
                          "updatedAt": "2023-11-29T03:15:48Z",
                          "publishedAt": "2023-11-29T03:15:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Another fix would be to run (something only recently discovered):\nmamba init --all",
                          "url": "https://github.com/idaholab/moose/discussions/26178#discussioncomment-7704893",
                          "updatedAt": "2023-11-29T13:36:23Z",
                          "publishedAt": "2023-11-29T13:36:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "that s genius. Making a PR to change our instructions rn",
                          "url": "https://github.com/idaholab/moose/discussions/26178#discussioncomment-7705313",
                          "updatedAt": "2023-11-29T14:14:32Z",
                          "publishedAt": "2023-11-29T14:14:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "malamute  error",
          "author": {
            "login": "Salma-Mao"
          },
          "bodyText": "hello all,\nI have installed the moose by docker. And I pull the malamute by container of docker. But I get the error.\nroot@8a641d28a674:/projects/malamute# git checkout main\nBranch 'main' set up to track remote branch 'main' from 'origin'.\nSwitched to a new branch 'main'\nroot@8a641d28a674:/projects/malamute# git submodule update --init moose\nSubmodule 'moose' (https://github.com/idaholab/moose.git) registered for path 'moose'\nCloning into '/root/projects/malamute/moose'...\nSubmodule path 'moose': checked out '2ad125da4dc5a8d5413806b0f3f35d7b46c7e7e5'\nroot@8a641d28a674:/projects/malamute# ls\nLICENSE  Makefile  NOTICE.txt  README.md  doc  examples  include  moose  run_tests  scripts  src  test  testroot  unit\nroot@8a641d28a674:/projects/malamute# make -j 2\nChecking if header needs updating: /opt/moose/framework/include/base/MooseRevision.h...\nLinking Library /opt/moose/modules/navier_stokes/lib/libnavier_stokes-opt.la...\nLinking Library /opt/moose/modules/contact/lib/libcontact-opt.la...\nLinking Library /opt/moose/modules/phase_field/lib/libphase_field-opt.la...\nRebuilding symlinks in /root/projects/malamute/build/header_symlinks\nCreating Unity Directory /root/projects/malamute/build/unity_src\nCreating Unity /root/projects/malamute/build/unity_src/bcs_Unity.C\nCreating Unity /root/projects/malamute/build/unity_src/indicators_Unity.C\nCreating Unity /root/projects/malamute/build/unity_src/materials_Unity.C\nCreating Unity /root/projects/malamute/build/unity_src/interfacekernels_Unity.C\nCreating Resource file /root/projects/malamute/malamute.yaml\nChecking if header needs updating: /root/projects/malamute/include/base/MalamuteRevision.h...\nCreating Unity /root/projects/malamute/build/unity_src/kernels_Unity.C\nCompiling C++ (in opt mode) /root/projects/malamute/build/unity_src/bcs_Unity.C...\nCompiling C++ (in opt mode) /root/projects/malamute/build/unity_src/indicators_Unity.C...\nCompiling C++ (in opt mode) /root/projects/malamute/build/unity_src/materials_Unity.C...\nCompiling C++ (in opt mode) /root/projects/malamute/build/unity_src/interfacekernels_Unity.C...\nIn file included from /root/projects/malamute/build/unity_src/materials_Unity.C:3:\n/root/projects/malamute/src/materials/ADGaussianHeatSourceBase.C: In static member function 'static InputParameters ADGaussianHeatSourceBase::validParams()':\n/root/projects/malamute/src/materials/ADGaussianHeatSourceBase.C:26:96: error: no matching function for call to 'InputParameters::addParam<std::vector<double, std::allocator > >(const char [2], , const char [152])'\n26 |                                      \"the effective radius to be equal along three directions.\");\n|                                                                                                ^\nIn file included from /opt/moose/framework/build/header_symlinks/MooseObject.h:13,\nfrom /opt/moose/framework/build/header_symlinks/MaterialBase.h:13,\nfrom /opt/moose/framework/build/header_symlinks/Material.h:13,\nfrom /root/projects/malamute/build/header_symlinks/ADGaussianHeatSourceBase.h:12,\nfrom /root/projects/malamute/build/header_symlinks/ADFunctionPathGaussianHeatSource.h:12,\nfrom /root/projects/malamute/src/materials/ADFunctionPathGaussianHeatSource.C:10,\nfrom /root/projects/malamute/build/unity_src/materials_Unity.C:2:\n/opt/moose/framework/build/header_symlinks/InputParameters.h:1359:1: note: candidate: 'template<class T, class S> void InputParameters::addParam(const string&, const S&, const string&)'\n1359 | InputParameters::addParam(const std::string & name, const S & value, const std::string & doc_string)\n| ^~~~~~~~~~~~~~~\n/opt/moose/framework/build/header_symlinks/InputParameters.h:1359:1: note:   template argument deduction/substitution failed:\nIn file included from /root/projects/malamute/build/unity_src/materials_Unity.C:3:\n/root/projects/malamute/src/materials/ADGaussianHeatSourceBase.C:26:96: note:   couldn't deduce template parameter 'S'\n26 |                                      \"the effective radius to be equal along three directions.\");\n|                                                                                                ^\nIn file included from /opt/moose/framework/build/header_symlinks/MooseObject.h:13,\nfrom /opt/moose/framework/build/header_symlinks/MaterialBase.h:13,\nfrom /opt/moose/framework/build/header_symlinks/Material.h:13,\nfrom /root/projects/malamute/build/header_symlinks/ADGaussianHeatSourceBase.h:12,\nfrom /root/projects/malamute/build/header_symlinks/ADFunctionPathGaussianHeatSource.h:12,\nfrom /root/projects/malamute/src/materials/ADFunctionPathGaussianHeatSource.C:10,\nfrom /root/projects/malamute/build/unity_src/materials_Unity.C:2:\n/opt/moose/framework/build/header_symlinks/InputParameters.h:1378:1: note: candidate: 'void InputParameters::addParam(const string&, const string&) [with T = std::vector; std::string = std::__cxx11::basic_string]'\n1378 | InputParameters::addParam(const std::string & name, const std::string & doc_string)\n| ^~~~~~~~~~~~~~~\n/opt/moose/framework/build/header_symlinks/InputParameters.h:1378:1: note:   candidate expects 2 arguments, 3 provided\nmake: *** [/opt/moose/framework/build.mk:144: /root/projects/malamute/build/unity_src/materials_Unity.x86_64-pc-linux-gnu.opt.lo] Error 1\nmake: *** Waiting for unfinished jobs....",
          "url": "https://github.com/idaholab/moose/discussions/26183",
          "updatedAt": "2023-11-29T16:03:59Z",
          "publishedAt": "2023-11-29T06:22:48Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis looks like the moose version is older than the malamute version.\nMake sure to use the moose submodule in malamute, that one will work for sure\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26183#discussioncomment-7704848",
                  "updatedAt": "2023-11-29T13:32:34Z",
                  "publishedAt": "2023-11-29T13:32:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Salma-Mao"
                          },
                          "bodyText": "Hello\nThank you for your help. The problem have been solved.",
                          "url": "https://github.com/idaholab/moose/discussions/26183#discussioncomment-7704930",
                          "updatedAt": "2023-11-29T13:41:19Z",
                          "publishedAt": "2023-11-29T13:41:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Artificial Driving force for flat grain boundary migration",
          "author": {
            "login": "ashishdhole"
          },
          "bodyText": "Hello, I am trying to study the interaction of grain boundaries with the spherical particles. For which I want a flat grain in a 3D space to migrate from one side of the box to other. But the driving force in grain growth is defined only by the curvature of the grain boundary. Is there a way to add artificial driving force in moose?",
          "url": "https://github.com/idaholab/moose/discussions/26180",
          "updatedAt": "2023-11-29T03:43:07Z",
          "publishedAt": "2023-11-29T03:43:07Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Resultant of Passing a Vector and the _grad Operator",
          "author": {
            "login": "jsevic"
          },
          "bodyText": "Hello,\nIf I pass a row vector in a custom AuxKernek using this command:\n  _direction(getParam<RealVectorValue>(\"direction\"))\nand then return\n_direction * _grad_coupled_n[_qp] \nwill this be a scalar?\nAnother related question, in the AuxKernel if the row vector above is called row_vector, is this passed as direction = '[1 0 0]' for the x-direction?\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/26117",
          "updatedAt": "2023-11-29T00:43:30Z",
          "publishedAt": "2023-11-21T15:15:04Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhat is the type of _grad_coupled_n ? This is from your kernel right? I have not seen it in the moose base clases.\nIf it s a RealVectorValue / a VariableGradient then yes. * is the dot-product for 'vectors' (of size 2/3, RealVectorValue)\nIf you want to specify a vector in the input, 1 0 0 would be the X-direction indeed, you dont need to try to pass it vertically like\nrow_vector = '1\n                         0\n                         0'\n\n(not like above)",
                  "url": "https://github.com/idaholab/moose/discussions/26117#discussioncomment-7633001",
                  "updatedAt": "2023-11-21T16:47:58Z",
                  "publishedAt": "2023-11-21T16:47:57Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "OK this works thanks, _grad_coupled_n should have been pasted as  _grad_coupled_V and what really helped too was I found this AuxKernel VectorVariableMagnitudeAux and now my MOOSE test cases match my hand calculations for integrating current density to obtain current.",
                  "url": "https://github.com/idaholab/moose/discussions/26117#discussioncomment-7698413",
                  "updatedAt": "2023-11-29T16:15:53Z",
                  "publishedAt": "2023-11-29T00:43:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Primary concentration in PorousFlowAqueousPreDisChemistry",
          "author": {
            "login": "steam-simulator"
          },
          "bodyText": "Hello,\nIt seems PorousFlowAqueousPreDisChemistry treats/uses the mass fractions of the variables representing the chemical species as the primary concentrations . Could someone please confirm this for me? Thanks.",
          "url": "https://github.com/idaholab/moose/discussions/26168",
          "updatedAt": "2023-11-29T01:23:33Z",
          "publishedAt": "2023-11-28T06:51:40Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "Yep",
                  "url": "https://github.com/idaholab/moose/discussions/26168#discussioncomment-7689286",
                  "updatedAt": "2023-11-28T07:58:55Z",
                  "publishedAt": "2023-11-28T07:58:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "steam-simulator"
                          },
                          "bodyText": "ok. Last question. so I'm assuming this concentration is in mol/m3 (i.e., molarity). correct?",
                          "url": "https://github.com/idaholab/moose/discussions/26168#discussioncomment-7689754",
                          "updatedAt": "2023-11-28T08:52:16Z",
                          "publishedAt": "2023-11-28T08:52:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "I think it is molarity, but it should be listed here\nhttps://mooseframework.inl.gov/modules/porous_flow/nomenclature.html",
                          "url": "https://github.com/idaholab/moose/discussions/26168#discussioncomment-7697243",
                          "updatedAt": "2023-11-28T21:14:14Z",
                          "publishedAt": "2023-11-28T21:14:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Variable, Material, Element Types",
          "author": {
            "login": "czadeh"
          },
          "bodyText": "Hello,\nI am writing a research paper about a simulation I created using MOOSE and I need help with some details.\nI know the variables are first order Lagrange by default and that is what I am using.\nHowever, I am not sure what type the material properties are by default. I am using ADMaterialProperty Real. Are these first order monomial by default?\nAlso, I am using GeneratedMeshGenerator to create a 3D mesh. In the documentation, I see that the default elem_type is linear for the requested dimension but I am still unsure of what that means. What type of element is default for 3D?\nLastly, what is the preferred way of citing MOOSE for a publication?\nThank you,\nCameron",
          "url": "https://github.com/idaholab/moose/discussions/26175",
          "updatedAt": "2023-11-28T20:31:41Z",
          "publishedAt": "2023-11-28T18:38:39Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nBy default material properties are computed at quadrature points. they are not a particular finite element family, they dont require a projection onto shape functions.\nHowever, when we output them to exodus, we project them on a constant monomial basis.\nDefault is Hex8 element in 3D. Second order (quadratic) element would be Hex20.\nThe preferred way of citing MOOSE is to follow the instructions there (and cite the 2.0 paper)\nhttps://mooseframework.inl.gov/moose/citing.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26175#discussioncomment-7696541",
                  "updatedAt": "2023-11-28T19:46:12Z",
                  "publishedAt": "2023-11-28T19:45:31Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "czadeh"
                          },
                          "bodyText": "Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/26175#discussioncomment-7696908",
                          "updatedAt": "2023-11-28T20:31:41Z",
                          "publishedAt": "2023-11-28T20:31:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Segmentation fault after update moose",
          "author": {
            "login": "LifengGan"
          },
          "bodyText": "Dear moose developers,\nI get Segmentation fault (signal 11) error message after updating the moose\n*** Info ***\nTensorMechanics Action: selecting 'incremental finite strain' formulation.[39m\n\n===================================================================================\n=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\n=   PID 487872 RUNNING AT node1\n=   EXIT CODE: 139\n=   CLEANING UP REMAINING PROCESSES\n=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES\n===================================================================================\nYOUR APPLICATION TERMINATED WITH THE EXIT STRING: Segmentation fault (signal 11)\nThis typically refers to a problem with your application.\nPlease see the FAQ page for debugging suggestions\n\nhere i give the ./diagnostics.sh\nMon Nov 27 11:12:44 CST 2023\n\nSystem Arch: LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch Distributor ID: CentOS Description: CentOS Linux release 7.6.1810 (Core) Release: 7.6.1810 Codename: Core\n\nMOOSE Package Version: Custom Build\n\nCPU Count: 96\n\nMemory Free: 704434.344 MB\n\nVariable `which $CC` check:\n/share/home/lifeng/mambaforge3/envs/moose/bin/mpicc\n\n$CC --version:\nx86_64-conda-linux-gnu-cc (conda-forge gcc 10.4.0-19) 10.4.0\nCopyright (C) 2020 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nMPICC:\nwhich mpicc:\n\t/share/home/lifeng/mambaforge3/envs/moose/bin/mpicc\nmpicc -show:\n\tx86_64-conda-linux-gnu-cc -I/share/home/lifeng/mambaforge3/envs/moose/include -I/share/home/lifeng/mambaforge3/envs/moose/include -L/share/home/lifeng/mambaforge3/envs/moose/lib -Wl,-rpath,/share/home/lifeng/mambaforge3/envs/moose/lib -I/share/home/lifeng/mambaforge3/envs/moose/include -L/share/home/lifeng/mambaforge3/envs/moose/lib -Wl,-rpath -Wl,/share/home/lifeng/mambaforge3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nCOMPILER x86_64-conda-linux-gnu-cc:\nx86_64-conda-linux-gnu-cc (conda-forge gcc 10.4.0-19) 10.4.0\nCopyright (C) 2020 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nPython:\n\t/share/home/lifeng/mambaforge3/envs/moose/bin/python\n\tPython 3.10.8\n\nMODULES NOT AVAILABLE\n\nPETSc configure:\nstatic const char *petscconfigureoptions = \"--with-64-bit-indices --with-cxx-dialect=C++17 --with-debugging=no --with-fortran-bindings=0 --with-mpi=1 --with-openmp=1 --with-shared-libraries=1 --with-sowing=0 --download-fblaslapack=1 --download-hypre=1 --download-metis=1 --download-mumps=1 --download-ptscotch=1 --download-parmetis=1 --download-scalapack=1 --download-slepc=1 --download-strumpack=1 --download-superlu_dist=1 --with-hdf5-dir=${PREFIX} --with-make-np=16 --COPTFLAGS=-O3 --CXXOPTFLAGS=-O3 --FOPTFLAGS=-O3 --with-x=0 --with-ssl=0 --with-mpi-dir=/share/home/lifeng/mambaforge3/envs/moose AR=${PREFIX}/bin/x86_64-conda-linux-gnu-ar RANLIB=${PREFIX}/bin/x86_64-conda-linux-gnu-ranlib CFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell\" CXXFLAGS=\"-fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem ${PREFIX}/include  -march=nocona -mtune=haswell\" CPPFLAGS=\"-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /share/home/lifeng/mambaforge3/envs/moose/include -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /share/home/lifeng/mambaforge3/envs/moose/include\" FFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include   -I/share/home/lifeng/mambaforge3/envs/moose/include\" FCFLAGS=\"-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include   -I/share/home/lifeng/mambaforge3/envs/moose/include\" LDFLAGS=\"-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/share/home/lifeng/mambaforge3/envs/moose/lib -Wl,-rpath-link,/share/home/lifeng/mambaforge3/envs/moose/lib -L/share/home/lifeng/mambaforge3/envs/moose/lib -Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/share/home/lifeng/mambaforge3/envs/moose/lib -Wl,-rpath-link,/share/home/lifeng/mambaforge3/envs/moose/lib -L/share/home/lifeng/mambaforge3/envs/moose/lib\" --prefix=/share/home/lifeng/mambaforge3/envs/moose\";\n\nPETSc linked libraries:\n\tlinux-vdso.so.1 =>  (0x00007ffcddf69000)\n\tlibHYPRE-2.29.0.so => /share/home/lifeng/mambaforge3/envs/moose/lib/./libHYPRE-2.29.0.so (0x00002b71af8a0000)\n\tlibpthread.so.0 => /lib64/libpthread.so.0 (0x00002b71afd07000)\n\tlibstrumpack.so.7.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libstrumpack.so.7.1 (0x00002b71aff23000)\n\tlibscalapack.so.2.2 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libscalapack.so.2.2 (0x00002b71b0f42000)\n\tlibsuperlu_dist.so.8 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libsuperlu_dist.so.8 (0x00002b71adc4c000)\n\tlibparmetis.so => /share/home/lifeng/mambaforge3/envs/moose/lib/./libparmetis.so (0x00002b71addd0000)\n\tlibmetis.so => /share/home/lifeng/mambaforge3/envs/moose/lib/./libmetis.so (0x00002b71b1639000)\n\tlibhdf5.so.200 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libhdf5.so.200 (0x00002b71b16a4000)\n\tlibm.so.6 => /lib64/libm.so.6 (0x00002b71b1ad6000)\n\tlibdl.so.2 => /lib64/libdl.so.2 (0x00002b71b1dd8000)\n\tlibmpifort.so.12 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libmpifort.so.12 (0x00002b71b1fdc000)\n\tlibmpi.so.12 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libmpi.so.12 (0x00002b71b202d000)\n\tlibgfortran.so.5 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libgfortran.so.5 (0x00002b71b2447000)\n\tlibgcc_s.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libgcc_s.so.1 (0x00002b71b25f2000)\n\tlibstdc++.so.6 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libstdc++.so.6 (0x00002b71b260d000)\n\tlibgomp.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libgomp.so.1 (0x00002b71b27f0000)\n\tlibc.so.6 => /lib64/libc.so.6 (0x00002b71b282c000)\n\t/lib64/ld-linux-x86-64.so.2 (0x00002b71adc04000)\n\tlibquadmath.so.0 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libquadmath.so.0 (0x00002b71b2bf9000)\n\tlibzfp.so.0 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libzfp.so.0 (0x00002b71b2c32000)\n\tlibmpicxx.so.12 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libmpicxx.so.12 (0x00002b71b2c86000)\n\tlibcrypto.so.1.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libcrypto.so.1.1 (0x00002b71b2ca5000)\n\tlibcurl.so.4 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libcurl.so.4 (0x00002b71b2f77000)\n\tlibrt.so.1 => /lib64/librt.so.1 (0x00002b71b301a000)\n\tlibz.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libz.so.1 (0x00002b71b3222000)\n\tlibnghttp2.so.14 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libnghttp2.so.14 (0x00002b71b323d000)\n\tlibssh2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libssh2.so.1 (0x00002b71b3269000)\n\tlibssl.so.1.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libssl.so.1.1 (0x00002b71b32ad000)\n\tlibgssapi_krb5.so.2 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libgssapi_krb5.so.2 (0x00002b71b333d000)\n\tlibkrb5.so.3 => /share/home/lifeng/mambaforge3/envs/moose/lib/././././libkrb5.so.3 (0x00002b71b3390000)\n\tlibk5crypto.so.3 => /share/home/lifeng/mambaforge3/envs/moose/lib/././././libk5crypto.so.3 (0x00002b71b3467000)\n\tlibcom_err.so.3 => /share/home/lifeng/mambaforge3/envs/moose/lib/././././libcom_err.so.3 (0x00002b71ade17000)\n\tlibkrb5support.so.0 => /share/home/lifeng/mambaforge3/envs/moose/lib/././././libkrb5support.so.0 (0x00002b71b3481000)\n\tlibkeyutils.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/././././libkeyutils.so.1 (0x00002b71ade1e000)\n\tlibresolv.so.2 => /lib64/libresolv.so.2 (0x00002b71b3490000)\n\nENVIRONMENT:\nADDR2LINE=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-addr2line\nAR=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ar\nAS=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-as\nbuild_alias=x86_64-conda-linux-gnu\nBUILD=x86_64-conda-linux-gnu\nCC_FOR_BUILD=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-cc\nCC=mpicc\n_CE_CONDA=\n_CE_M=\nCFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include\nC_INCLUDE_PATH=/share/home/lifeng/mambaforge3/envs/moose/include\nCMAKE_ARGS=-DCMAKE_AR=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ar -DCMAKE_CXX_COMPILER_AR=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ar -DCMAKE_C_COMPILER_AR=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ar -DCMAKE_RANLIB=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ranlib -DCMAKE_CXX_COMPILER_RANLIB=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ranlib -DCMAKE_C_COMPILER_RANLIB=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ranlib -DCMAKE_LINKER=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ld -DCMAKE_STRIP=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-strip\nCMAKE_PREFIX_PATH=/share/home/lifeng/mambaforge3/envs/moose:/share/home/lifeng/mambaforge3/envs/moose/x86_64-conda-linux-gnu/sysroot/usr\nCONDA_BUILD_SYSROOT=/share/home/lifeng/mambaforge3/envs/moose/x86_64-conda-linux-gnu/sysroot\nCONDA_DEFAULT_ENV=moose\nCONDA_EXE=/share/home/lifeng/mambaforge3/bin/conda\nCONDA_PREFIX_1=/share/home/lifeng/mambaforge3\nCONDA_PREFIX=/share/home/lifeng/mambaforge3/envs/moose\nCONDA_PROMPT_MODIFIER=(moose) \nCONDA_PYTHON_EXE=/share/home/lifeng/mambaforge3/bin/python\n_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu\nCONDA_SHLVL=2\nCONDA_TOOLCHAIN_BUILD=x86_64-conda-linux-gnu\nCONDA_TOOLCHAIN_HOST=x86_64-conda-linux-gnu\nCPPFLAGS=-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /share/home/lifeng/mambaforge3/envs/moose/include\nCPP=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-cpp\nCXXFILT=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-c++filt\nCXXFLAGS=-fvisibility-inlines-hidden  -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include -std=c++17\nCXX_FOR_BUILD=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-c++\nCXX=mpicxx\nDEBUG_CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fvar-tracking-assignments -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include\nDEBUG_CPPFLAGS=-D_DEBUG -D_FORTIFY_SOURCE=2 -Og -isystem /share/home/lifeng/mambaforge3/envs/moose/include\nDEBUG_CXXFLAGS=-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fvar-tracking-assignments -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include\nDEBUG_FFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments -ffunction-sections -pipe\nDEBUG_FORTRANFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments -ffunction-sections -pipe\nEigen3_DIR=/share/home/lifeng/mambaforge3/envs/moose/libmesh/include/Eigen\nELFEDIT=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-elfedit\nF77=mpif77\nF90=mpif90\nF95=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-f95\nFC_FOR_BUILD=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gfortran\nFC=mpif90\nFFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include\nFORTRANFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /share/home/lifeng/mambaforge3/envs/moose/include\nGCC_AR=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ar\nGCC_NM=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-nm\nGCC_RANLIB=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc-ranlib\nGCC=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gcc\nGFORTRAN=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gfortran\nGPROF=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-gprof\nGSETTINGS_SCHEMA_DIR_CONDA_BACKUP=\nGSETTINGS_SCHEMA_DIR=/share/home/lifeng/mambaforge3/envs/moose/share/glib-2.0/schemas\nGXX=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-g++\nHDF5_DIR=/share/home/lifeng/mambaforge3/envs/moose\nHISTCONTROL=ignoredups\nHISTSIZE=1000\nHOME=/share/home/lifeng\nhost_alias=x86_64-conda-linux-gnu\nHOSTNAME=mgr\nHOST=x86_64-conda-linux-gnu\nKDEDIRS=/usr\nLANG=en_US.UTF-8\nLDFLAGS=-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/share/home/lifeng/mambaforge3/envs/moose/lib -Wl,-rpath-link,/share/home/lifeng/mambaforge3/envs/moose/lib -L/share/home/lifeng/mambaforge3/envs/moose/lib\nLD_GOLD=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ld.gold\nLD=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ld\nLESSOPEN=||/usr/bin/lesspipe.sh %s\nLIBMESH_DIR=/share/home/lifeng/mambaforge3/envs/moose/libmesh\nLOGNAME=lifeng\nLS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:\nMAIL=/var/spool/mail/lifeng\nMESON_ARGS=--buildtype release\nMOOSE_NO_CODESIGN=true\nMPIHOME=/share/home/lifeng/mambaforge3/envs/moose\nMSM_HOME=/usr/local/MegaRAID Storage Manager\nMSM_PRODUCT=MSM\nNM=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-nm\nOBJCOPY=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-objcopy\nOBJDUMP=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-objdump\nPATH=/share/home/lifeng/mambaforge3/envs/moose/bin:/share/home/lifeng/mambaforge3/condabin:/share/apps/ABAQUS2021/Abaqus21/SIMULIA/Commands:/share/apps/lammps-stable_7Aug2019/src:/share/apps/vasp/src/vasp.5.4.4/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/share/home/lifeng/.local/bin:/share/home/lifeng/bin:/share/home/lifeng/mambaforge3/envs/moose/wasp/bin\nPETSC_DIR=/share/home/lifeng/mambaforge3/envs/moose\nPWD=/share/home/lifeng/projects/moose/scripts\nQTDIR=/usr/lib64/qt-3.3\nQT_GRAPHICSSYSTEM_CHECKED=1\nQTINC=/usr/lib64/qt-3.3/include\nQTLIB=/usr/lib64/qt-3.3/lib\nQT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins\nRANLIB=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-ranlib\nREADELF=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-readelf\nSHELL=/bin/bash\nSHLVL=2\nSIZE=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-size\nSSH_CLIENT=10.249.176.63 14205 22\nSSH_CONNECTION=10.249.176.63 14205 10.249.180.93 22\nSSH_TTY=/dev/pts/3\nSTRINGS=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-strings\nSTRIP=/share/home/lifeng/mambaforge3/envs/moose/bin/x86_64-conda-linux-gnu-strip\nTERM=xterm-256color\nUSER=lifeng\n_=/usr/bin/env\nVASP_HOME=/share/apps/vasp/src/vasp.5.4.4\nVTKINCLUDE_DIR=/share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/include/vtk-9.2\nVTKLIB_DIR=/share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib\nWASP_DIR=/share/home/lifeng/mambaforge3/envs/moose/wasp\nXDG_DATA_DIRS=/share/home/lifeng/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share\nXDG_RUNTIME_DIR=/run/user/1015\nXDG_SESSION_ID=3069\nXML_CATALOG_FILES=file:///share/home/lifeng/mambaforge3/envs/moose/etc/xml/catalog file:///etc/xml/catalog\n\nand ldd /share/home/lifeng/projects/moose/test/moose_test-opt gives\n\tlinux-vdso.so.1 =>  (0x00007ffe219eb000)\n\tlibmoose_test-opt.so.0 => /share/home/lifeng/projects/moose/test/lib/libmoose_test-opt.so.0 (0x00002b183ec1b000)\n\tlibmoose-opt.so.0 => /share/home/lifeng/projects/moose/framework/libmoose-opt.so.0 (0x00002b183f806000)\n\tlibpcre-opt.so.0 => /share/home/lifeng/projects/moose/framework/contrib/pcre/libpcre-opt.so.0 (0x00002b183ea23000)\n\tlibhit-opt.so.0 => /share/home/lifeng/projects/moose/framework/contrib/hit/libhit-opt.so.0 (0x00002b183ea50000)\n\tlibwaspcore.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwaspcore.so.04 (0x00002b183eabe000)\n\tlibwaspddi.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwaspddi.so.04 (0x00002b183eadf000)\n\tlibwaspexpr.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwaspexpr.so.04 (0x00002b183eaff000)\n\tlibwasphalite.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwasphalite.so.04 (0x00002b183eb33000)\n\tlibwasphit.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwasphit.so.04 (0x00002b183eb88000)\n\tlibwasphive.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwasphive.so.04 (0x00002b183ebd7000)\n\tlibwaspjson.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwaspjson.so.04 (0x00002b1842185000)\n\tlibwasplsp.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwasplsp.so.04 (0x00002b18421c9000)\n\tlibwaspsiren.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwaspsiren.so.04 (0x00002b183ebe2000)\n\tlibwaspson.so.04 => /share/home/lifeng/mambaforge3/envs/moose/wasp/lib/libwaspson.so.04 (0x00002b1842206000)\n\tlibmesh_opt.so.0 => /share/home/lifeng/mambaforge3/envs/moose/libmesh/lib/libmesh_opt.so.0 (0x00002b1842254000)\n\tlibtimpi_opt.so.11 => /share/home/lifeng/mambaforge3/envs/moose/libmesh/lib/libtimpi_opt.so.11 (0x00002b183ebff000)\n\tlibhdf5_cpp.so.200 => /share/home/lifeng/mambaforge3/envs/moose/lib/libhdf5_cpp.so.200 (0x00002b18438cd000)\n\tlibvtkIOCore-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkIOCore-9.2.so.1 (0x00002b1843945000)\n\tlibvtkCommonCore-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkCommonCore-9.2.so.1 (0x00002b18439b3000)\n\tlibvtkCommonDataModel-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkCommonDataModel-9.2.so.1 (0x00002b184421a000)\n\tlibvtkFiltersCore-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkFiltersCore-9.2.so.1 (0x00002b184474c000)\n\tlibvtkIOXML-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkIOXML-9.2.so.1 (0x00002b1844fa8000)\n\tlibvtkImagingCore-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkImagingCore-9.2.so.1 (0x00002b18450c2000)\n\tlibvtkIOImage-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkIOImage-9.2.so.1 (0x00002b1845356000)\n\tlibvtkImagingMath-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkImagingMath-9.2.so.1 (0x00002b1845534000)\n\tlibvtkIOParallelXML-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkIOParallelXML-9.2.so.1 (0x00002b184557d000)\n\tlibvtkParallelMPI-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkParallelMPI-9.2.so.1 (0x00002b18455c6000)\n\tlibvtkParallelCore-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkParallelCore-9.2.so.1 (0x00002b18455e2000)\n\tlibvtkCommonExecutionModel-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtkCommonExecutionModel-9.2.so.1 (0x00002b1845643000)\n\tlibvtksys-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/libvtksys-9.2.so.1 (0x00002b1845741000)\n\tlibz.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/libz.so.1 (0x00002b1845792000)\n\tlibslepc.so.3.019 => /share/home/lifeng/mambaforge3/envs/moose/lib/libslepc.so.3.019 (0x00002b18457ad000)\n\tlibpetsc.so.3.20 => /share/home/lifeng/mambaforge3/envs/moose/lib/libpetsc.so.3.20 (0x00002b1845b67000)\n\tlibHYPRE-2.29.0.so => /share/home/lifeng/mambaforge3/envs/moose/lib/libHYPRE-2.29.0.so (0x00002b18475df000)\n\tlibstrumpack.so.7.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/libstrumpack.so.7.1 (0x00002b1847a46000)\n\tlibscalapack.so.2.2 => /share/home/lifeng/mambaforge3/envs/moose/lib/libscalapack.so.2.2 (0x00002b1848a65000)\n\tlibsuperlu_dist.so.8 => /share/home/lifeng/mambaforge3/envs/moose/lib/libsuperlu_dist.so.8 (0x00002b184915c000)\n\tlibpthread.so.0 => /lib64/libpthread.so.0 (0x00002b1849303000)\n\tlibparmetis.so => /share/home/lifeng/mambaforge3/envs/moose/lib/libparmetis.so (0x00002b184951f000)\n\tlibmetis.so => /share/home/lifeng/mambaforge3/envs/moose/lib/libmetis.so (0x00002b184955d000)\n\tlibhdf5_hl.so.200 => /share/home/lifeng/mambaforge3/envs/moose/lib/libhdf5_hl.so.200 (0x00002b18495c8000)\n\tlibhdf5.so.200 => /share/home/lifeng/mambaforge3/envs/moose/lib/libhdf5.so.200 (0x00002b18495ec000)\n\tlibmpifort.so.12 => /share/home/lifeng/mambaforge3/envs/moose/lib/libmpifort.so.12 (0x00002b1849a1e000)\n\tlibgfortran.so.5 => /share/home/lifeng/mambaforge3/envs/moose/lib/libgfortran.so.5 (0x00002b1849a6f000)\n\tlibgcc_s.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/libgcc_s.so.1 (0x00002b1849c1a000)\n\tlibquadmath.so.0 => /share/home/lifeng/mambaforge3/envs/moose/lib/libquadmath.so.0 (0x00002b1849c35000)\n\tlibstdc++.so.6 => /share/home/lifeng/mambaforge3/envs/moose/lib/libstdc++.so.6 (0x00002b1849c6e000)\n\tlibrt.so.1 => /lib64/librt.so.1 (0x00002b1849e51000)\n\tlibdl.so.2 => /lib64/libdl.so.2 (0x00002b184a05a000)\n\tlibmpi.so.12 => /share/home/lifeng/mambaforge3/envs/moose/lib/libmpi.so.12 (0x00002b184a25e000)\n\tlibmpicxx.so.12 => /share/home/lifeng/mambaforge3/envs/moose/lib/libmpicxx.so.12 (0x00002b184a678000)\n\tlibm.so.6 => /lib64/libm.so.6 (0x00002b184a697000)\n\tlibgomp.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/libgomp.so.1 (0x00002b184a99a000)\n\tlibc.so.6 => /lib64/libc.so.6 (0x00002b184a9d6000)\n\tlibnetcdf.so.13 => /share/home/lifeng/mambaforge3/envs/moose/libmesh/lib/./libnetcdf.so.13 (0x00002b184ada5000)\n\tlibcrypto.so.1.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libcrypto.so.1.1 (0x00002b184aeb5000)\n\tlibcurl.so.4 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libcurl.so.4 (0x00002b184b188000)\n\tlibvtkdoubleconversion-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkdoubleconversion-9.2.so.1 (0x00002b184b22b000)\n\tlibvtklz4-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtklz4-9.2.so.1 (0x00002b184b23d000)\n\tlibvtklzma-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtklzma-9.2.so.1 (0x00002b184b271000)\n\tlibvtkzlib-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkzlib-9.2.so.1 (0x00002b184b29e000)\n\tlibvtkloguru-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkloguru-9.2.so.1 (0x00002b184b2bd000)\n\t/lib64/ld-linux-x86-64.so.2 (0x00002b183e9f7000)\n\tlibvtkCommonTransforms-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkCommonTransforms-9.2.so.1 (0x00002b184b2f5000)\n\tlibvtkCommonMisc-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkCommonMisc-9.2.so.1 (0x00002b184b339000)\n\tlibvtkCommonSystem-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkCommonSystem-9.2.so.1 (0x00002b184b768000)\n\tlibvtkpugixml-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkpugixml-9.2.so.1 (0x00002b184b7a8000)\n\tlibvtkCommonMath-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkCommonMath-9.2.so.1 (0x00002b184b7e6000)\n\tlibvtkIOXMLParser-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkIOXMLParser-9.2.so.1 (0x00002b184b80d000)\n\tlibvtkDICOMParser-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkDICOMParser-9.2.so.1 (0x00002b184b828000)\n\tlibvtkmetaio-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkmetaio-9.2.so.1 (0x00002b184b845000)\n\tlibvtkpng-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkpng-9.2.so.1 (0x00002b184b8e3000)\n\tlibvtktiff-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtktiff-9.2.so.1 (0x00002b184b92b000)\n\tlibvtkjpeg-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkjpeg-9.2.so.1 (0x00002b184b9ad000)\n\tlibvtkIOLegacy-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/./libvtkIOLegacy-9.2.so.1 (0x00002b184ba2b000)\n\tlibzfp.so.0 => /share/home/lifeng/mambaforge3/envs/moose/lib/./libzfp.so.0 (0x00002b184baea000)\n\tlibnghttp2.so.14 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libnghttp2.so.14 (0x00002b184bb3f000)\n\tlibssh2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libssh2.so.1 (0x00002b184bb6c000)\n\tlibssl.so.1.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libssl.so.1.1 (0x00002b184bbb0000)\n\tlibgssapi_krb5.so.2 => /share/home/lifeng/mambaforge3/envs/moose/lib/././libgssapi_krb5.so.2 (0x00002b184bc40000)\n\tlibvtkkissfft-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/././libvtkkissfft-9.2.so.1 (0x00002b184bc94000)\n\tlibvtkexpat-9.2.so.1 => /share/home/lifeng/mambaforge3/envs/moose/libmesh-vtk/lib/././libvtkexpat-9.2.so.1 (0x00002b184bc9d000)\n\tlibkrb5.so.3 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libkrb5.so.3 (0x00002b184bcd0000)\n\tlibk5crypto.so.3 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libk5crypto.so.3 (0x00002b184bda8000)\n\tlibcom_err.so.3 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libcom_err.so.3 (0x00002b184bdc2000)\n\tlibkrb5support.so.0 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libkrb5support.so.0 (0x00002b184bdc8000)\n\tlibkeyutils.so.1 => /share/home/lifeng/mambaforge3/envs/moose/lib/./././libkeyutils.so.1 (0x00002b184bdd8000)\n\tlibresolv.so.2 => /lib64/libresolv.so.2 (0x00002b184bddf000)\n\nThanks\nLifeng",
          "url": "https://github.com/idaholab/moose/discussions/26152",
          "updatedAt": "2023-11-28T18:21:29Z",
          "publishedAt": "2023-11-27T03:18:33Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCould you please recompile in debug then run the case again?\nThis often catches the issues that end in segfault, and if it does not then it will be a good first step before catching the seg fault in a debugger\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7676387",
                  "updatedAt": "2023-11-27T03:40:38Z",
                  "publishedAt": "2023-11-27T03:40:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Hi, here i got this message using the debugging mode\n[ Thread debugging using libthread_db enabled] \nUsing host libthread _db library \"/lib64/libthread_db. so.1\".\nDwarf Error: wrong version in compilation unit header (is 5, should be 2, 3, o\u0433 4) [ in module /share\n/home/lifeng/mambaforge3/envs/moose/lib/libgfortran. so.5]\nDwarf Error: wrong version in compilation unit header (is 5, should be 2, 3, or 4) [ in module /share\n/home/lifeng/mambaforge3/envs/moose/lib/libgcc_s. so.1]\nDwarf Error: wrong version in compilation unit header (is 5, should be 2, 3, o\u0433 4) [ in module /share\n/home/lifeng/mambaforge3/envs/moose/lib/libquadmath. so.0]\nDwarf Error: wrong version in compilation unit header (is 5, should be 2, 3, o\u0433 4) [ in module /share\n/home/lifeng/mambaforge3/envs/moose/lib/libstdc++. so.6]\nDwarf Error: wrong version in compilation unit header (is5, should be 2, 3, o\u0433 4) [ in module /share\n/home/lifeng/mambaforge3/envs/moose/lib/libgomp. so.1]\n[ New Thread 0x2aaabddb4700 (LWP 164648)]\n[ Thread 0x2aaabddb4700 (LWP 164648) exited]\n[ Inferior 1 (process 164110) exited normally]\n\n\n*** ERROR ***\n\nStack frames: 200: libMesh::print _trace(std:rostream&)\n1: LibMesh: :MacroFunctions : : report error (char constt, int, char const+, char constt, std::ostream&\n2: libMesh: :ReplicatedMesh:relem_ptr(unsigned Long)\n3: LibMesh: :MeshBase: :elem_ref(unsigned long)\n4: LibMesh::AbaqusI0: assign_ subdomain_ids()\n5: LibMesh::AbaqusIo: :read(std:\u0441x1\n1::basic string<char, std::char _traits<char>, std::allocator<c\nhar>  const&)\n6: LibMesh: :NameBasedI0::read(std:: \u0441x\u044511: :basic string<char, std::char _traits<char , std::allocato r<charss const&)\n7e LibMesh::UnstructuredMesh::read(std::_\u0441xx11: :basic string<char, std::char_traits<char , std::all ocator <char>  const&, void+, bool, bool)\n8: FileMeshGenerator::generate()\n9: MeshGenerator::generateInternal()\n10: MeshGeneratorSystem::executeMeshGenerators()\n11: ExecuteMeshGenerators: ract(\n12: Action: :timedAct()\n13: Actionlarehouse::executeActionsWithAction(std::__cxx11::basic_string char, std::char_traits<char\n, std:allocator<char\u00bb> const&)\n14: Actionwarehouse: :executeAllActions()\n15: MooseApp::runInputFile()\n16: MooseApp: :run()\n17: main\n18: libc start main\n19: /share/home/lifeng/projects/phase_field_fracture/problems/singlecrystal/hex-thin-cell-crack/.\n.1../phase field fracture-dbg(+0x3079) [0x5555555570791\n[01../src/mesh/replicated_mesh.C, line 234, compiled Nov 16 2023 at 17:13:56",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7676605",
                          "updatedAt": "2023-11-27T07:25:54Z",
                          "publishedAt": "2023-11-27T04:28:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "looks like the Abaqus file mesh reader is failing.\nDid you change the mesh file since before the update?",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7680379",
                          "updatedAt": "2023-11-27T12:30:23Z",
                          "publishedAt": "2023-11-27T12:30:09Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "It is the Abaqus mesh file problem. However, I did not change the mesh file after updating the moose. I want to know what is the change for the new version moose.",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7682089",
                          "updatedAt": "2023-11-27T15:07:39Z",
                          "publishedAt": "2023-11-27T15:07:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The abaqus reader comes from libmesh\nthere has been some recent work on it, see those PRs:\nhttps://github.com/search?q=repo%3AlibMesh%2Flibmesh+abaqus&type=pullrequests",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7682124",
                          "updatedAt": "2023-11-27T15:10:58Z",
                          "publishedAt": "2023-11-27T15:10:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Thank you very much indeed.",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7682344",
                          "updatedAt": "2023-11-27T15:26:19Z",
                          "publishedAt": "2023-11-27T15:26:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "@GiudGiud Hi, my moose-libmesh version date 2023.11.06, and I want to cover the fix they did in libMesh/libmesh#3699 two weeks ago, how can I get the new moose-libmesh? Thanks",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7682657",
                          "updatedAt": "2023-11-28T03:06:51Z",
                          "publishedAt": "2023-11-27T15:52:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "After go back to moose-libmesh=2023.09.06, I fix this libmesh error when reading the abaqus inp file.",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7687714",
                          "updatedAt": "2023-11-28T03:40:24Z",
                          "publishedAt": "2023-11-28T03:40:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Interesting. Can you share your mesh? We should create an issue on the libmesh repository",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7687905",
                          "updatedAt": "2023-11-28T04:11:20Z",
                          "publishedAt": "2023-11-28T04:11:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LifengGan"
                          },
                          "bodyText": "Sure, here I attached the file. Thanks\nmesh.txt",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7688107",
                          "updatedAt": "2023-11-28T14:35:03Z",
                          "publishedAt": "2023-11-28T04:51:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Do you mind uploading the file on a public git repo instead? We are not supposed to download zip files",
                          "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7692728",
                          "updatedAt": "2023-11-28T14:04:12Z",
                          "publishedAt": "2023-11-28T14:04:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "roystgnr"
                  },
                  "bodyText": "I'm guessing this is the bug that libMesh/libmesh#3699 fixed?  (though I'd love to have that confirmed)\nI'll get another MOOSE libMesh submodule update ready this week to get the fix downstream.",
                  "url": "https://github.com/idaholab/moose/discussions/26152#discussioncomment-7695725",
                  "updatedAt": "2023-11-28T18:21:30Z",
                  "publishedAt": "2023-11-28T18:21:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "use boost special functions in Function object definition",
          "author": {
            "login": "chunhuizhao478"
          },
          "bodyText": "Hi all, I would like to use expint function in boost/math/special_functions/expint.hpp, after include the header file in the Function object:\n#include <boost/math/special_functions/expint.hpp>\nIt throws out the file-not-found error:\n/Users/andyz/projects/farms/src/functions/cdbm/InitialStressXYPressure.C:4:10: fatal error: 'boost/math/special_functions/expint.hpp' file not found\n#include <boost/math/special_functions/expint.hpp>\n         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n\nAs I searched in the MOOSE source code, there are cases including boost special functions, so I wonder what I missed here, thanks!",
          "url": "https://github.com/idaholab/moose/discussions/26172",
          "updatedAt": "2023-11-28T18:19:15Z",
          "publishedAt": "2023-11-28T17:17:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "If you look at the uses of boost special functions in MOOSE, they are guarded with\n#ifdef LIBMESH_HAVE_EXTERNAL_BOOST\n\nlibMesh does have some boost headers. However, it does not have them all. In particular it does not have expint.hpp. So you would need to configure libMesh pointing to an external boost that has that header in order to be able to use it.\n@roystgnr why do we have an \"incomplete\" boost?",
                  "url": "https://github.com/idaholab/moose/discussions/26172#discussioncomment-7694997",
                  "updatedAt": "2023-11-28T17:24:17Z",
                  "publishedAt": "2023-11-28T17:24:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "chunhuizhao478"
                          },
                          "bodyText": "So I wonder if there is still a way to directly add expint function in MOOSE without too much complexity, what I currently do is to compute the expression contains expint ouside MOOSE using Python and read the time series data file into MOOSE using PiecewiseMultilinear.",
                          "url": "https://github.com/idaholab/moose/discussions/26172#discussioncomment-7695131",
                          "updatedAt": "2023-11-28T17:38:26Z",
                          "publishedAt": "2023-11-28T17:38:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if it s just for your app / branch you can add a contrib then modify the Makefile",
                          "url": "https://github.com/idaholab/moose/discussions/26172#discussioncomment-7695451",
                          "updatedAt": "2023-11-28T18:07:40Z",
                          "publishedAt": "2023-11-28T18:07:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "chunhuizhao478"
                          },
                          "bodyText": "Hi @GiudGiud, could you elaborate more? I'm not familiar with the modifications I should do, thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/26172#discussioncomment-7695504",
                          "updatedAt": "2023-11-28T18:10:30Z",
                          "publishedAt": "2023-11-28T18:10:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "Complete boost is so huge (I just downloaded a tarball that expands to 900MB, 50x the subset we have) that boost itself includes bcp, a tool for creating incomplete subsets of boost.\nOriginally the libMesh logs claim Ben grabbed a subset of boost because we wanted shared_ptr and C++11 wasn't out yet.  Later we started optionally using their pool allocator ... and I'm not sure what else.  The ability to configure --with-boost=/some/external/boost is the recommended way to use arbitrary parts of boost.",
                          "url": "https://github.com/idaholab/moose/discussions/26172#discussioncomment-7695668",
                          "updatedAt": "2023-11-28T18:18:44Z",
                          "publishedAt": "2023-11-28T18:18:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ah me neither.\nBut you should be able to place a header from an external library into a contrib folder in your app, then in the Makefile add some logic so that it gets include in the include list",
                          "url": "https://github.com/idaholab/moose/discussions/26172#discussioncomment-7695682",
                          "updatedAt": "2023-11-28T18:19:15Z",
                          "publishedAt": "2023-11-28T18:19:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "computeQpStrain Q-points values",
          "author": {
            "login": "andrey1887"
          },
          "bodyText": "Hello. This is the main part of code computeQpStrain method.\nvoid\nComputeIncrementalBeamStrain::computeQpStrain()\n{\n  const Real A_avg = (_area[0] + _area[1]) / 2.0;\n  const Real Iz_avg = (_Iz[0] + _Iz[1]) / 2.0;\n  Real Ix = _Ix[_qp];\n  if (!_has_Ix)\n    Ix = _Iy[_qp] + _Iz[_qp];\n\n  // Rotate the gradient of displacements and rotations at t+delta t from global coordinate\n  // frame to beam local coordinate frame\n  const RealVectorValue grad_disp_0(1.0 / _original_length[0] * (_disp1 - _disp0));\n  const RealVectorValue grad_rot_0(1.0 / _original_length[0] * (_rot1 - _rot0));\n  const RealVectorValue avg_rot(\n      0.5 * (_rot0(0) + _rot1(0)), 0.5 * (_rot0(1) + _rot1(1)), 0.5 * (_rot0(2) + _rot1(2)));\n\n  _grad_disp_0_local_t = _total_rotation[0] * grad_disp_0;\n  _grad_rot_0_local_t = _total_rotation[0] * grad_rot_0;\n  _avg_rot_local_t = _total_rotation[0] * avg_rot;\n\n  // displacement at any location on beam in local coordinate system at t\n  // u_1 = u_n1 - rot_3 * y + rot_2 * z\n  // u_2 = u_n2 - rot_1 * z\n  // u_3 = u_n3 + rot_1 * y\n  // where u_n1, u_n2, u_n3 are displacements at neutral axis\n\n  // small strain\n  // e_11 = u_1,1 = u_n1, 1 - rot_3, 1 * y + rot_2, 1 * z\n  // e_12 = 2 * 0.5 * (u_1,2 + u_2,1) = (- rot_3 + u_n2,1 - rot_1,1 * z)\n  // e_13 = 2 * 0.5 * (u_1,3 + u_3,1) = (rot_2 + u_n3,1 + rot_1,1 * y)\n\n  // axial and shearing strains at each qp along the length of the beam\n  _mech_disp_strain_increment[_qp](0) = _grad_disp_0_local_t(0) * _area[_qp] -\n                                        _grad_rot_0_local_t(2) * _Ay[_qp] +\n                                        _grad_rot_0_local_t(1) * _Az[_qp];\n  _mech_disp_strain_increment[_qp](1) = -_avg_rot_local_t(2) * _area[_qp] +\n                                        _grad_disp_0_local_t(1) * _area[_qp] -\n                                        _grad_rot_0_local_t(0) * _Az[_qp];\n  _mech_disp_strain_increment[_qp](2) = _avg_rot_local_t(1) * _area[_qp] +\n                                        _grad_disp_0_local_t(2) * _area[_qp] +\n                                        _grad_rot_0_local_t(0) * _Ay[_qp];\n\n  // rotational strains at each qp along the length of the beam\n  // rot_strain_1 = integral(e_13 * y - e_12 * z) dA\n  // rot_strain_2 = integral(e_11 * z) dA\n  // rot_strain_3 = integral(e_11 * -y) dA\n  // Iyz is the product moment of inertia which is zero for most cross-sections so it is assumed to\n  // be zero for this analysis\n  const Real Iyz = 0;\n  _mech_rot_strain_increment[_qp](0) =\n      _avg_rot_local_t(1) * _Ay[_qp] + _grad_disp_0_local_t(2) * _Ay[_qp] +\n      _grad_rot_0_local_t(0) * Ix + _avg_rot_local_t(2) * _Az[_qp] -\n      _grad_disp_0_local_t(1) * _Az[_qp];\n  _mech_rot_strain_increment[_qp](1) = _grad_disp_0_local_t(0) * _Az[_qp] -\n                                       _grad_rot_0_local_t(2) * Iyz +\n                                       _grad_rot_0_local_t(1) * _Iz[_qp];\n  _mech_rot_strain_increment[_qp](2) = -_grad_disp_0_local_t(0) * _Ay[_qp] +\n                                       _grad_rot_0_local_t(2) * _Iy[_qp] -\n                                       _grad_rot_0_local_t(1) * Iyz;\n\nHere the average values between two nodes are calculated:\n  const RealVectorValue grad_disp_0(1.0 / _original_length[0] * (_disp1 - _disp0));\n  const RealVectorValue grad_rot_0(1.0 / _original_length[0] * (_rot1 - _rot0));\n  const RealVectorValue avg_rot(\n      0.5 * (_rot0(0) + _rot1(0)), 0.5 * (_rot0(1) + _rot1(1)), 0.5 * (_rot0(2) + _rot1(2)));\n\nAnd then the same _mech_strain for all q-points were assigned. I think this code will work properly only with 1 q-point, when Lagrange First order shape function is specified in input file. Is it right ?",
          "url": "https://github.com/idaholab/moose/discussions/26143",
          "updatedAt": "2023-11-28T17:48:15Z",
          "publishedAt": "2023-11-24T20:21:30Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "@cbolisetti @somu15 it looks like you guys have touched this class. Do you have any comment on @andrey1887's question?",
                  "url": "https://github.com/idaholab/moose/discussions/26143#discussioncomment-7683623",
                  "updatedAt": "2023-11-27T17:25:44Z",
                  "publishedAt": "2023-11-27T17:25:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cbolisetti"
                  },
                  "bodyText": "@andrey1887 yes, that is correct. The beam implementation in MOOSE assumes only one qp in the beam. Typically, in structural analysis codes, you would need a pretty coarse mesh for modeling beam elements. But in MOOSE, I recommend that you use a finer mesh.",
                  "url": "https://github.com/idaholab/moose/discussions/26143#discussioncomment-7683829",
                  "updatedAt": "2023-11-27T17:48:00Z",
                  "publishedAt": "2023-11-27T17:47:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you, @lindsayad , @cbolisetti for your answers. But if i add these lines in\nComputeIncrementalBeamStrain::computeQpStrain()\nstd::cout << \" qrule info : \";\n  _qrule->print_info();\n  //_qrule->n_points()\n  std::cout << \" q-point location \" << _q_point[_qp] << std::endl; \n\ni see two points.",
                          "url": "https://github.com/idaholab/moose/discussions/26143#discussioncomment-7684029",
                          "updatedAt": "2023-11-27T18:08:08Z",
                          "publishedAt": "2023-11-27T18:08:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cbolisetti"
                          },
                          "bodyText": "@andrey1887 yes that is correct. The elements have multiple qps but the rotation and strains are assumed to be constant through out the element. This is a reasonable assumption for small elements. The multiple quadrature points allow for spatially varying Young's modulus and cross sectional properties (area, I, shear coefficient, etc.).",
                          "url": "https://github.com/idaholab/moose/discussions/26143#discussioncomment-7684325",
                          "updatedAt": "2023-11-27T18:41:11Z",
                          "publishedAt": "2023-11-27T18:41:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Thank you @cbolisetti .",
                          "url": "https://github.com/idaholab/moose/discussions/26143#discussioncomment-7685544",
                          "updatedAt": "2023-11-27T20:58:56Z",
                          "publishedAt": "2023-11-27T20:58:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Is there a way to obtain a natural coordinate of q-point\n_qrule->print_info() gives next:\n Point 0:\n  (x,y,z)=(-0.57735,        0,        0)\n Weight:\n   w=1\n\n Point 1:\n  (x,y,z)=( 0.57735,       -0,       -0)\n Weight:\n   w=1\n\ni need only x",
                          "url": "https://github.com/idaholab/moose/discussions/26143#discussioncomment-7687113",
                          "updatedAt": "2023-11-28T02:01:36Z",
                          "publishedAt": "2023-11-28T02:01:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "_qrule->get_points()[_qp](0)",
                          "url": "https://github.com/idaholab/moose/discussions/26143#discussioncomment-7687228",
                          "updatedAt": "2023-11-28T02:18:43Z",
                          "publishedAt": "2023-11-28T02:18:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrey1887"
                          },
                          "bodyText": "Here:\n  // Rotate the gradient of displacements and rotations at t+delta t from global coordinate\n  // frame to beam local coordinate frame\n  const RealVectorValue grad_disp_0(1.0 / _original_length[0] * (_disp1 - _disp0));\n  const RealVectorValue grad_rot_0(1.0 / _original_length[0] * (_rot1 - _rot0));\n  const RealVectorValue avg_rot(\n      0.5 * (_rot0(0) + _rot1(0)), 0.5 * (_rot0(1) + _rot1(1)), 0.5 * (_rot0(2) + _rot1(2)));\n\n  _grad_disp_0_local_t = _total_rotation[0] * grad_disp_0;\n  _grad_rot_0_local_t = _total_rotation[0] * grad_rot_0;\n  _avg_rot_local_t = _total_rotation[0] * avg_rot;\n\ngradients firstly calculated and then rotated from global to local coordinates.\nI would like to calculate gradients from manually defined shape function of element.\nI think, in this case i need to rotate disp and rot  at both nodes to local coordinate system firstly, and then i will be able to calculate gradients at q-points.\n  const RealVectorValue _disp0_local = _total_rotation[0] * _disp0;\n  const RealVectorValue _rot0_local = _total_rotation[0] * _rot0;\n  const RealVectorValue _disp1_local = _total_rotation[0] * _disp1;\n  const RealVectorValue _rot1_local = _total_rotation[0] * _rot1;\n\n  Real e = _qrule->get_points()[_qp](0);\n\n\n  const Real grad_disp_y = 0.25 * ((6.0 / _original_length[0]) * (e * e - 1.0) * _disp0_local(1) +\n                                   (3.0 * Utility::pow<2>(e) - 2.0 * e - 1.0) * _rot0_local(1) +\n                                   (-6.0 / _original_length[0]) * (e * e - 1.0) * _disp1_local(1) +\n                                   (3.0 * Utility::pow<2>(e) + 2.0 * e - 1.0) * _rot1_local(1));\n\n  const Real grad_disp_z = 0.25 * ((6.0 / _original_length[0]) * (e * e - 1.0) * _disp0_local(2) +\n                                   (3.0 * Utility::pow<2>(e) - 2.0 * e - 1.0) * _rot0_local(2) +\n                                   (-6.0 / _original_length[0]) * (e * e - 1.0) * _disp1_local(2) +\n                                   (3.0 * Utility::pow<2>(e) + 2.0 * e - 1.0) * _rot1_local(2));\n\n  const Real grad_rot_y =\n      1 / _original_length[0] *\n      ((6.0 / _original_length[0]) * e * _disp0_local(1) + (3.0 * e - 1.0) * _rot0_local(1) +\n       (-6.0 / _original_length[0]) * e * _disp1_local(1) + (3.0 * e + 1.0) * _rot1_local(1));\n\n  const Real grad_rot_z =\n      1 / _original_length[0] *\n      ((6.0 / _original_length[0]) * e * _disp0_local(2) + (3.0 * e - 1.0) * _rot0_local(2) +\n       (-6.0 / _original_length[0]) * e * _disp1_local(2) + (3.0 * e + 1.0) * _rot1_local(2));\n\nIs it right?",
                          "url": "https://github.com/idaholab/moose/discussions/26143#discussioncomment-7695220",
                          "updatedAt": "2023-11-28T17:48:16Z",
                          "publishedAt": "2023-11-28T17:48:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}