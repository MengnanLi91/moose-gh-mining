{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wMS0xNFQwOToyNzo1Mi0wNjowMM4AOMMw"
    },
    "edges": [
      {
        "node": {
          "title": "CoupledVarThresholdElementSubdomainModifier: x, y, z dependence",
          "author": {
            "login": "czadeh"
          },
          "bodyText": "Hi,\nI have been trying to define a variable to be used with CoupledVarThresholdElementSubdomainModifier so that certain points on the mesh are modified while others are not. I encoded a spatial dependence on x, y, z points and made a class that inherits from Function.h. It returns a 0 or 1 to an AuxVariable if conditions are met. If the result is 1, then CoupledVarThresholdElementSubdomainModifier modifies the subdomain.\nHowever when testing this function, the spatial dependence was nonexistent and it seemed that only the last value of the function was used for the entire mesh.\nI decided to try adapting the code to a new class that inherits from ADMaterial.h. This way each qp can be modified depending on the spatial conditions. However, when using the virtual function computeQpProperties(), I cannot easily use the x, y, z points like I could when using the virtual function value() in a class that inherits from Function.h.\nI cannot use const Point & p as an argument to computeQpProperties. I tried to use libMesh::Point(0), libMesh::Point(1), libMesh::Point(2) as x, y, and z within my virtual function override but I am getting errors such as 'libMesh::TypeVector<T>::TypeVector(const T&, const T&, const T&) [with T = double]' is protected within this context.\nI am not sure how to deal with this issue or whether I am taking the right approach.\nHow can I use spatial data within computeQpProperties?\nIs a material property output even compatible with CoupledVarThresholdElementSubdomainModifier?\nIs there a better way to structure the output of a function so it has spatial dependence?\nThank you,\nCameron",
          "url": "https://github.com/idaholab/moose/discussions/20064",
          "updatedAt": "2022-09-19T03:11:55Z",
          "publishedAt": "2022-01-17T23:30:12Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nFrom a material computeQpProperties routine, you can access spatial properties using:\n_q_point[_qp]\nSee this code for example:\nhttps://github.com/idaholab/moose/blob/next/framework/src/materials/GenericFunctionMaterial.C\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20064#discussioncomment-1987140",
                  "updatedAt": "2022-09-19T03:12:01Z",
                  "publishedAt": "2022-01-18T01:16:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "czadeh"
                          },
                          "bodyText": "Thank you, I also saw here how the authors declared x, y, and z starting from line 56. I used that convention.\nconst Real & x = _q_point[_qp](0);\n\nconst Real & y = _q_point[_qp](1);\n\nconst Real & z = _q_point[_qp](2);\n\nI used my new material property along with a constant, monomial aux variable and the MaterialRealAux kernel to make it work with CoupledVarThresholdElementSubdomainModifier.",
                          "url": "https://github.com/idaholab/moose/discussions/20064#discussioncomment-1987357",
                          "updatedAt": "2022-09-19T03:12:01Z",
                          "publishedAt": "2022-01-18T02:30:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error: bad X server connection; trying to run & visualize w/ peacock on Windows 10 WSL",
          "author": null,
          "bodyText": "I'm trying to install MOOSE onto my Windows 10 machine via WSL 2. I have Ubuntu installed, and I followed along the directions found on https://mooseframework.inl.gov/getting_started/installation/windows10.html and https://mooseframework.inl.gov/getting_started/installation/conda.html . I installed VcXsrv with the default settings in the installer, and ran it with variations of native opengl & access control disabled & enabled before opening WSL. I am trying to run & visualize step1.i in the darcy_thermo_mech tutorial with the command: \" ~/projects/moose/python/peacock/peacock -i step1.i\", but I get the following error:\n2022-01-17 18:09:52.911 (   0.084s) [        F8154740]vtkXOpenGLRenderWindow.:448    ERR| vtkXOpenGLRenderWindow (0x55d0e77fb1e0): bad X server connection. DISPLAY=localhost:0. Aborting.\nI'm assuming there are additional installations/configurations to be made beyond what is given in the two links above. Would some be willing to help me out? I apologize if this is an error of overlooking something very obvious.",
          "url": "https://github.com/idaholab/moose/discussions/20067",
          "updatedAt": "2022-06-08T03:13:56Z",
          "publishedAt": "2022-01-18T00:30:27Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nPeacock isnt working very well with WSL. Even if we figure this one out, it'll show artifacts during rendering.\nDid some googling and it could be a firewall issue.\nOthers are saying you need to change the DISPLAY env variables https://superuser.com/questions/1476086/error-cant-open-display-0\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20067#discussioncomment-1987135",
                  "updatedAt": "2022-06-14T13:16:36Z",
                  "publishedAt": "2022-01-18T01:14:15Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": null,
                          "bodyText": "Would using Paraview be a suitable alternative for visualization in WSL?",
                          "url": "https://github.com/idaholab/moose/discussions/20067#discussioncomment-1987153",
                          "updatedAt": "2022-06-14T13:16:40Z",
                          "publishedAt": "2022-01-18T01:22:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes. Though what I did when I was working in WSL was to install paraview on windows and read the files on the windows side.",
                          "url": "https://github.com/idaholab/moose/discussions/20067#discussioncomment-1987164",
                          "updatedAt": "2022-06-14T13:16:40Z",
                          "publishedAt": "2022-01-18T01:25:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": null,
                          "bodyText": "What's the easiest way you've found to transfer files in the WSL 'virtual directories' to the Windows directories?",
                          "url": "https://github.com/idaholab/moose/discussions/20067#discussioncomment-1987174",
                          "updatedAt": "2022-06-14T13:16:40Z",
                          "publishedAt": "2022-01-18T01:29:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think I could just double click on the file navigator to open these files.\nI was using mobaxterm",
                          "url": "https://github.com/idaholab/moose/discussions/20067#discussioncomment-1987183",
                          "updatedAt": "2022-08-26T11:17:29Z",
                          "publishedAt": "2022-01-18T01:31:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": null,
                          "bodyText": "Yes. Though what I did when I was working in WSL was to install paraview on windows and read the files on the windows side.\n\nWorks like a charm. Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/20067#discussioncomment-1987223",
                          "updatedAt": "2022-08-26T11:17:29Z",
                          "publishedAt": "2022-01-18T01:44:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "periodic_dirac_kernel",
          "author": {
            "login": "Ali1990dashti"
          },
          "bodyText": "Dear community,\nI am trying to make a heat storage simulation using a MOOSE based application. In my model I have a hot and a cold well. In both wells I inject for six month and then produce for the next six month. For time stepping I am using FunctionDT functionality of MOOSE. For example the follwing lines represente my time steps (small time steps when the injection or production starts):\ntime_t = '0 864000 15552000 15552001 16416000 31104000 31104001 31968000 46656000 46656001 47520000 62208000'\ntime_dt= '60 172800 172800 60 172800 172800 60 172800 172800 60 172800 172800'\n\nMy main issue is that in wells my Dirac kernel is fluctiating: 6 month injection and 6 month production. In other words from time 0 to 15552000 (6 month) the flow on the point is for example -2 (injection), whereas from 15552001 to 31104000 (12 month) it is +2 (production). Now, I am wondering how I can make this shift in my dirac kernel. How can I define such a Dirac kernel in MOOSE that follows my times?\nIn advance I very much appreciate any help.",
          "url": "https://github.com/idaholab/moose/discussions/20055",
          "updatedAt": "2022-06-19T10:40:25Z",
          "publishedAt": "2022-01-17T16:13:01Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "avtarsinghh1991"
                  },
                  "bodyText": "Look at the following, it may be helpful.\nhttps://mooseframework.inl.gov/syntax/Executioner/TimeStepper/index.html\nBest\nAvtar",
                  "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1984993",
                  "updatedAt": "2022-06-19T10:40:26Z",
                  "publishedAt": "2022-01-17T17:07:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Ali1990dashti"
                          },
                          "bodyText": "Dear @asingh-mit,\nThanks for devoting time to my issue.\nI read to documentation but still I did not find a way to make the dirac kernel periodic. Do you know any sample doing such a thing?\nThanks for your help\nAli",
                          "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1985012",
                          "updatedAt": "2022-06-19T10:40:29Z",
                          "publishedAt": "2022-01-17T17:10:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Dear @Ali1990dashti\nAs far I understand, you want to apply periodic boundary conditions. Am I right?\nIf so you can generate your functions for doing so. I hope you find the following links helpful.\nhttps://mooseframework.inl.gov/syntax/Functions/index.html\nhttps://mooseframework.inl.gov/source/actions/AddPeriodicBCAction.html\nBest\nAvtar",
                          "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1985049",
                          "updatedAt": "2022-06-19T10:40:29Z",
                          "publishedAt": "2022-01-17T17:17:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ali1990dashti"
                          },
                          "bodyText": "Dear @asingh-mit\nThanks fror your feedback. I will go through the links your provided.\nCheers,\nAli",
                          "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1985061",
                          "updatedAt": "2022-06-19T10:40:29Z",
                          "publishedAt": "2022-01-17T17:20:04Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you use the FunctionDiracSource?\nhttps://mooseframework.inl.gov/source/dirackernels/FunctionDiracSource.html\nThis will allow you to specify when the dirac source is 0 or non 0, as shown in the example with a ParsedFunction\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1985964",
                  "updatedAt": "2023-03-10T21:13:14Z",
                  "publishedAt": "2022-01-17T19:57:09Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "If you're using a PorousFlowSink or one of its derived classes (PiecewiseLinear, etc) then you can use the flux_function input to specify what you want.",
                  "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1986058",
                  "updatedAt": "2023-05-15T17:53:29Z",
                  "publishedAt": "2022-01-17T20:20:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Or, if you're using a PorousFlowPolyLineSink then the multiplying_var can be made periodic as you desire.",
                          "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1986083",
                          "updatedAt": "2023-05-15T17:53:30Z",
                          "publishedAt": "2022-01-17T20:25:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "Yet another option is to use the Controls system to turn the Dirac kernels on off - so you can have an injection point source and a production point source, and toggle them in the input file - see https://github.com/idaholab/moose/blob/next/modules/porous_flow/examples/ates/ates.i for an example.",
                  "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1986696",
                  "updatedAt": "2023-05-15T17:53:30Z",
                  "publishedAt": "2022-01-17T22:39:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "Documentation of above example is also available - https://mooseframework.inl.gov/modules/porous_flow/ates.html",
                          "url": "https://github.com/idaholab/moose/discussions/20055#discussioncomment-1986700",
                          "updatedAt": "2023-05-15T17:54:15Z",
                          "publishedAt": "2022-01-17T22:40:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Plastic models of soils",
          "author": {
            "login": "jfenap"
          },
          "bodyText": "Hi all,\nAt the Geological Institute of Spain, we have develop several plastic models for soils. These models account that the material is made of porous and relate changes in the relative void space (porosity) to plastic dilatancy, representing dilatant and compactive volume changes. For this reason, it is assumed that any change in mean pressure is accompanied by elastic change in volume which makes the bulk modulus non constant.\nThe yield is a function with elliptical shape, and after yield the material approaches to a consolidation curve that is determined experimentally. See for example (http://docs.itascacg.com/3dec700/common/models/camclay/doc/modelcamclay.html).\nWe would like to code these models in MOOSE. We already studied the doco of TensorMechanics, but we are not sure that ComputeMultipleInelasticStress is going to work for us.\nWhere is a good place to start? And is there a similar code on which we can base ours?\nThanks and regards,\nFernando",
          "url": "https://github.com/idaholab/moose/discussions/20026",
          "updatedAt": "2022-08-02T13:38:36Z",
          "publishedAt": "2022-01-12T15:50:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "I'm not going to answer your question in this post, sorry, but i wanted to sincerely welcome you to MOOSE.  Your contribution to TensorMechanics will be a truly valuable addition to MOOSE, since i think soil plasticity is one of the important mechanical theories that MOOSE cannot do yet.\nI contributed a lot to ComputeMultipleInelasticStress in its early days.  Perhaps you can tell us more detail about why it's not going to work for you.  There are lots of people involved in TensorMechanics who might like to suggest potential code designs as this discussion proceeds, such as @bwspenc and @sapitts and @dschwen and @SudiptaBiswas  .  Feel free to look at the github \"blame\" for relevant classes to identify relevant people, and then mention them here to flag to them that this is a discussion of potential interest.",
                  "url": "https://github.com/idaholab/moose/discussions/20026#discussioncomment-1958076",
                  "updatedAt": "2022-08-02T13:38:40Z",
                  "publishedAt": "2022-01-12T20:17:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "somu15"
                  },
                  "bodyText": "Hi @jfenap\nWe have a non-linear soil model called I-Soil in MASTODON, a MOOSE application for structural and soil dynamics. Here is the link to the documentation: https://mooseframework.inl.gov/mastodon/manuals/theory/index.html. In addition, here is the link to the file in MASTODON that implements the I-Soil model: https://github.com/idaholab/mastodon/blob/devel/src/materials/ComputeISoilStress.C. Hopefully, this will be somewhat helpful.\nSom",
                  "url": "https://github.com/idaholab/moose/discussions/20026#discussioncomment-1986369",
                  "updatedAt": "2022-08-02T14:53:17Z",
                  "publishedAt": "2022-01-17T21:24:18Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Unusual P-F Runtime Error",
          "author": {
            "login": "jsevic"
          },
          "bodyText": "Hello,\nI have been working with the P-F for some time now, and recently this run time error came up. I replaced the TimeDerivative operator with HeatConductionTimeDerivative operator to pass thermal properties and the attached screen capture show the run  time error. I set the kernel back to TimeDerivative and still get the error.\nIt seems like the make file is not creating new code for the linked HeatConductionTimeDerivative operator, at least the dates on the linked files are not changing.\nAny help would be appreciated thx!\nJohn Sevic",
          "url": "https://github.com/idaholab/moose/discussions/19088",
          "updatedAt": "2022-06-12T02:27:15Z",
          "publishedAt": "2021-10-13T02:27:46Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis type of error happens when some linked libraries are recompiled and the executable cannot find routines anymore.\nPossibly here, you recompiled the framework but did not recompile the phase field module\nIt just means you need to recompile.\nYou may have to make clobberall first.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1468033",
                  "updatedAt": "2022-06-12T02:27:39Z",
                  "publishedAt": "2021-10-13T02:37:36Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "Guillaume,\nOK thanks I ran the clobber command and the compiler started on all the code and the EulerAngleProvider (and some other Euler functions) have been returning this error? Any suggestions?\nI have been using the P-F app I made in 2019 without any issues and then I added some new kernels and these errors showed up, this is the back ground.\nThank you.\nJohn Sevic",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1471406",
                          "updatedAt": "2022-06-12T02:27:40Z",
                          "publishedAt": "2021-10-13T14:44:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "Please also see attached another screen capture...",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1471414",
                          "updatedAt": "2022-06-12T02:27:41Z",
                          "publishedAt": "2021-10-13T14:46:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Did you update moose and libmesh?",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1471494",
                          "updatedAt": "2022-06-12T02:27:43Z",
                          "publishedAt": "2021-10-13T14:57:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "I have not, since I all my code has been working fine up to now?\n\u2026\nSent from my iPhone\n On Oct 13, 2021, at 7:57 AM, Guillaume Giudicelli ***@***.***> wrote:\n\n \ufeff\n Did you update moose and libmesh?\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1471633",
                  "updatedAt": "2022-06-12T02:27:43Z",
                  "publishedAt": "2021-10-13T15:16:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Well it s always good to update. You ll get new stuff and less bugs.\nBut anyway,\nIt's not finding Matrix and EulerAngles.\nI'm guessing you are missing a header, like #include \"EulerAngles.h\". It's in tensor_mechanics utils.",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1471687",
                          "updatedAt": "2022-06-12T02:27:43Z",
                          "publishedAt": "2021-10-13T15:26:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ah actually you have EulerAngles, but it s looking for Matrix. Lemme find where that is",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1471691",
                          "updatedAt": "2022-06-12T02:27:43Z",
                          "publishedAt": "2021-10-13T15:26:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "well the content of EulerAngles.h has changed it seems\n//* This file is part of the MOOSE framework\n//* https://www.mooseframework.org\n//*\n//* All rights reserved, see COPYRIGHT for full restrictions\n//* https://github.com/idaholab/moose/blob/master/COPYRIGHT\n//*\n//* Licensed under LGPL 2.1, please see LICENSE for details\n//* https://www.gnu.org/licenses/lgpl-2.1.html\n\n#pragma once\n\n#include \"MooseTypes.h\"\n#include \"libmesh/vector_value.h\"\n// Ignore depcrecated copy warnings for this class from libmesh Eigen contrib\n#include \"libmesh/ignore_warnings.h\"\n#include <Eigen/Geometry>\n\n// forward declaration\nclass MooseRandom;\n\n/**\n * Euler angle triplet.\n */\nclass EulerAngles\n{\npublic:\n  Real phi1, Phi, phi2;\n\n  // default constructor\n  EulerAngles();\n  // Quaternions to Euler Angles\n  EulerAngles(Eigen::Quaternion<Real> & q);\n\n  operator RealVectorValue() const { return RealVectorValue(phi1, Phi, phi2); }\n\n  void random();\n  void random(MooseRandom & random);\n  // Euler to Quaternions\n  Eigen::Quaternion<Real> toQuaternion();\n};\n\n// Restore warnings for other classes\n#include \"libmesh/restore_warnings.h\"\n\n\nso I ll need your moose commit number if you really dont want to update",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1471714",
                          "updatedAt": "2022-06-12T02:27:43Z",
                          "publishedAt": "2021-10-13T15:30:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "Ok cool let me see if I can get it compile exploring some of these Euler angle files. I can update on another machine. Thx!\n\u2026\nSent from my iPhone\n On Oct 13, 2021, at 8:30 AM, Guillaume Giudicelli ***@***.***> wrote:\n\n \ufeff\n well the content of EulerAngles.h has changed it seems\n\n //* This file is part of the MOOSE framework\n //* https://www.mooseframework.org\n //*\n //* All rights reserved, see COPYRIGHT for full restrictions\n //* https://github.com/idaholab/moose/blob/master/COPYRIGHT\n //*\n //* Licensed under LGPL 2.1, please see LICENSE for details\n //* https://www.gnu.org/licenses/lgpl-2.1.html\n\n #pragma once\n\n #include \"MooseTypes.h\"\n #include \"libmesh/vector_value.h\"\n // Ignore depcrecated copy warnings for this class from libmesh Eigen contrib\n #include \"libmesh/ignore_warnings.h\"\n #include <Eigen/Geometry>\n\n // forward declaration\n class MooseRandom;\n\n /**\n  * Euler angle triplet.\n  */\n class EulerAngles\n {\n public:\n   Real phi1, Phi, phi2;\n\n   // default constructor\n   EulerAngles();\n   // Quaternions to Euler Angles\n   EulerAngles(Eigen::Quaternion<Real> & q);\n\n   operator RealVectorValue() const { return RealVectorValue(phi1, Phi, phi2); }\n\n   void random();\n   void random(MooseRandom & random);\n   // Euler to Quaternions\n   Eigen::Quaternion<Real> toQuaternion();\n };\n\n // Restore warnings for other classes\n #include \"libmesh/restore_warnings.h\"\n\n so I ll need your moose commit number if you really dont want to update\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1471770",
                  "updatedAt": "2022-06-29T14:40:56Z",
                  "publishedAt": "2021-10-13T15:39:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "Sorry, how do I  get my MOOSE commit number, was this from my initial install?",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1474066",
                          "updatedAt": "2022-06-29T14:40:56Z",
                          "publishedAt": "2021-10-14T01:05:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "And I will do a fresh install tonight too, just in case.",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1474124",
                          "updatedAt": "2022-06-29T14:40:56Z",
                          "publishedAt": "2021-10-14T01:25:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it's the last commit that is not from your work.\nYou can see the log of commits with git log",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1474470",
                          "updatedAt": "2022-06-29T14:40:58Z",
                          "publishedAt": "2021-10-14T03:39:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "OK I will have to dig that up, the last install I did was many years ago.\nAttempting to install the latest MOOSE produced the following...",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1477318",
                          "updatedAt": "2022-09-23T14:06:28Z",
                          "publishedAt": "2021-10-14T14:01:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "We prefer you paste test directly (in triple quotes for readability) rather than post screenshots\nIt seems your conda is struggling from the beginning. After installing conda, did you follow the prompts it gave you? It should ask for you to\nconda init $your shell then restart the terminal",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1477779",
                          "updatedAt": "2022-09-23T14:06:28Z",
                          "publishedAt": "2021-10-14T15:22:03Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "Ok so you want me to the terminal text and put it in quotes no problem.\n\nYes it dis restart my terminal. FYI I am running El Cap.\n\u2026\nSent from my iPhone\n On Oct 14, 2021, at 8:22 AM, Guillaume Giudicelli ***@***.***> wrote:\n\n \ufeff\n We prefer you paste test directly (in triple quotes for readability) rather than post screenshots\n\n It seems your conda is struggling from the beginning. After installing conda, did you follow the prompts it gave you? It should ask for you to\n conda init $your shell then restart the terminal\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1478056",
                  "updatedAt": "2022-06-29T14:40:56Z",
                  "publishedAt": "2021-10-14T16:08:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "Guillaume,\nBefore moving further on this, I did want to point out what is puzzling - I wrote the present app in 2019 and have made various changes to the physics, all of this of course requiring compiling, and I have never seen this error before. In fact, compiling generally does not produce any errors for the present app, except this one time, from some files that don't seem to have any obvious connection to P-F? I may try reverting back to a known good build and work from the direction to see where it falls apart.\nThx!\nJohn Sevic",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1485514",
                          "updatedAt": "2022-06-29T14:40:57Z",
                          "publishedAt": "2021-10-16T00:00:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Are you using the conda build or did you install your own libmesh?",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1485604",
                          "updatedAt": "2022-06-29T14:40:59Z",
                          "publishedAt": "2021-10-16T00:58:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "I installed libmesh - I don\u2019t recall conda being around when I did the first install in 2016.\n\u2026\nSent from my iPhone\n On Oct 15, 2021, at 5:58 PM, Guillaume Giudicelli ***@***.***> wrote:\n\n \ufeff\n Are you using the conda build or did you install your own libmesh?\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1489280",
                  "updatedAt": "2022-06-29T14:40:59Z",
                  "publishedAt": "2021-10-17T13:45:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "OK that is interesting my back-up drive failed so reversion is presently not an option. I attempted a new install of the current MOOSE release and this is what I see.\nNote that I am currently running 10.11.6 (El Cap) and that the conda install did not finish correctly, does this need to install correctly in order for MOOSE to compile?\nJohn-Sevics-MBP-4:~ jsevic$ cd projects\nJohn-Sevics-MBP-4:projects jsevic$ git clone https://github.com/idaholab/moose.git\nCloning into 'moose'...\nremote: Enumerating objects: 511520, done.\nremote: Total 511520 (delta 0), reused 0 (delta 0), pack-reused 511520\nReceiving objects: 100% (511520/511520), 401.27 MiB | 12.86 MiB/s, done.\nResolving deltas: 100% (389042/389042), done.\nChecking out files: 100% (29514/29514), done.\nJohn-Sevics-MBP-4:projects jsevic$ cd moose\nJohn-Sevics-MBP-4:moose jsevic$ git checkout master\nBranch 'master' set up to track remote branch 'master' from 'origin'.\nSwitched to a new branch 'master'\nJohn-Sevics-MBP-4:moose jsevic$ cd ~/projects/moose/test\nJohn-Sevics-MBP-4:test jsevic$ make -j 4\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/libtool: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/libtool: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\n/bin/sh: /Users/jsevic/projects/moose/libmesh/installed/contrib/bin/libmesh-config: No such file or directory\nenv: python3: No such file or directory\n/Users/jsevic/projects/moose/framework/moose.mk:15: *** Build failed.  Stop.\nJohn-Sevics-MBP-4:test jsevic$",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1489778",
                          "updatedAt": "2022-06-29T14:40:58Z",
                          "publishedAt": "2021-10-17T16:58:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "And just in case, this is  the error returned on the conda install...\nLast login: Sun Oct 17 09:48:07 on ttys000\nJohn-Sevics-MBP-4:~ jsevic$ export PATH=$HOME/miniconda3/bin:$PATH\nJohn-Sevics-MBP-4:~ jsevic$ conda config --add channels conda-forge\nWarning: 'conda-forge' already in 'channels' list, moving to the top\nJohn-Sevics-MBP-4:~ jsevic$ conda config --add channels https://conda.software.inl.gov/public\nWarning: 'https://conda.software.inl.gov/public' already in 'channels' list, moving to the top\nJohn-Sevics-MBP-4:~ jsevic$ conda create --name moose -q -y\nCollecting package metadata (current_repodata.json): ...working... done\nSolving environment: ...working... failed with repodata from current_repodata.json, will retry with next repodata source.\nCollecting package metadata (repodata.json): ...working... done\nSolving environment: ...working... failed\nPackagesNotFoundError: The following packages are not available from current channels:\n\nmoose\n\nCurrent channels:\n\nhttps://conda.software.inl.gov/public/osx-64\nhttps://conda.software.inl.gov/public/noarch\nhttps://conda.anaconda.org/conda-forge/osx-64\nhttps://conda.anaconda.org/conda-forge/noarch\nhttps://repo.anaconda.com/pkgs/main/osx-64\nhttps://repo.anaconda.com/pkgs/main/noarch\nhttps://repo.anaconda.com/pkgs/r/osx-64\nhttps://repo.anaconda.com/pkgs/r/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\nhttps://anaconda.org\n\nand use the search bar at the top of the page.\nJohn-Sevics-MBP-4:~ jsevic$",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1489805",
                          "updatedAt": "2022-06-29T14:40:59Z",
                          "publishedAt": "2021-10-17T17:11:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@milljm do we have conda packages for el capitan?\nconda installation does need to succeed to install moose after.\nOtherwise can you just run scripts/update_and_rebuild_libmesh ? After having git fetch then git pull latest moose\n@milljm do we have a page for manual installation - updating? my quick search did not succeed in finding it",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1491384",
                          "updatedAt": "2022-06-29T14:41:03Z",
                          "publishedAt": "2021-10-18T04:52:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "Ok let me try. Thx!\n\u2026\nSent from my iPhone\n On Oct 17, 2021, at 9:53 PM, Guillaume Giudicelli ***@***.***> wrote:\n\n \ufeff\n @milljm do we have conda packages for el capitan?\n\n conda installation does need to succeed to install moose after.\n\n Otherwise can you just run scripts/update_and_rebuild_libmesh ? After having git fetch then git pull latest moose\n @milljm do we have a page for manual installation - updating? my quick search did not succeed in finding it\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1494956",
                  "updatedAt": "2022-06-29T14:41:03Z",
                  "publishedAt": "2021-10-18T11:44:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "Any guidance on MOOSE installing without Conda? Does the current MOOSE support El Cap still?\nThx!",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1508468",
                          "updatedAt": "2022-06-29T14:41:03Z",
                          "publishedAt": "2021-10-20T13:34:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "What is your xcode version ?\n/usr/bin/xcodebuild -version\nyou need at least Xcode SDK 10.10 for MOOSE",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1508868",
                          "updatedAt": "2022-06-29T14:41:07Z",
                          "publishedAt": "2021-10-20T14:36:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "I am running v. 9.\n\nPresently I believe the most efficient path forward is to get a new Mac Mini, for several reasons, so let me install the newest MOOSE on this new machine, it has the latest release of iOS and associated tools.\n\nI will get back to this  thread if there are any issues.\n\nThx!\n\u2026\n On Oct 20, 2021, at 7:36 AM, Guillaume Giudicelli ***@***.***> wrote:\n\n\n What is your xcode version ?\n One of these should return it\n /usr/bin/xcodebuild -version\n /usr/bin/xcodebuild -version\n\n you need at least Xcode SDK 10.10 for MOOSE\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub <#19088 (reply in thread)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABD6MBQL6FTMZI6DOM7KQNTUH3HYDANCNFSM5F4COC6Q>.\n Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1514070",
                  "updatedAt": "2022-06-29T14:41:03Z",
                  "publishedAt": "2021-10-21T12:15:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Are you talking about the M1 minis? You'll still have to be mindful about the XCode version, but the speed boost will definitely be worth it for compiling\nSee #18134",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1514590",
                          "updatedAt": "2022-06-29T14:41:03Z",
                          "publishedAt": "2021-10-21T13:58:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "Ah that is a good question, for the current MOOSE release, what version of XC is required/supported?\n\nYeah the M1 and I get more RAM too \u2714\ufe0f\n\nThx!\n\u2026\nSent from my iPhone\n On Oct 21, 2021, at 6:58 AM, Guillaume Giudicelli ***@***.***> wrote:\n\n \ufeff\n Are you talking about the M1 minis? You'll still have to be mindful about the XCode version, but the speed boost will definitely be worth it for compiling\n See #18134\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1514827",
                  "updatedAt": "2022-06-29T14:41:03Z",
                  "publishedAt": "2021-10-21T14:37:45Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "FYI - the M1 is not officially supported. We\u2019re making progress on it, but it\u2019s not complete.",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1514894",
                          "updatedAt": "2022-06-29T14:41:09Z",
                          "publishedAt": "2021-10-21T14:45:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "Cool, in fact I got an Intel Mini just in case so thanks for telling me.\n\u2026\nSent from my iPhone\n On Oct 21, 2021, at 7:45 AM, Logan Harbour ***@***.***> wrote:\n\n \ufeff\n FYI - the M1 is still not officially supported. We\u2019re making progress on it, but it\u2019s not complete.\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1515444",
                  "updatedAt": "2022-06-29T14:41:09Z",
                  "publishedAt": "2021-10-21T16:17:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "OK so my new Mac Mini has arrived, it is an Intel Late 2018 machine with Big Sur. Can I go directly to the current MOOSE install that appears to be set up for Catalina? Is X-Code 13 the correct version to support the current release of MOOSE?\nThx!\nJohn Sevic",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1561562",
                          "updatedAt": "2022-06-29T14:41:15Z",
                          "publishedAt": "2021-10-29T23:58:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "XCode 13 (and M1 possibly) will be supported for sure when this #19230 gets merged.\nIn the mean time we currently support 12.4 on Big Sur.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1563840",
                          "updatedAt": "2022-06-29T14:41:09Z",
                          "publishedAt": "2021-10-30T18:47:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "Ok cool I just loaded Monterey and X-Code 13 I will try loading MOOSE and conda next thx!\n\u2026\nSent from my iPhone\n On Oct 30, 2021, at 11:47 AM, Guillaume Giudicelli ***@***.***> wrote:\n\n \ufeff\n XCode 13 (and M1) will be supported for sure when this #19230 gets merged.\n In the mean time we currently support 12.4 on Big Sur.\n\n Guillaume\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n Triage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19088#discussioncomment-1564276",
                  "updatedAt": "2022-06-29T14:41:10Z",
                  "publishedAt": "2021-10-30T22:26:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Anisotropic and Rate independent phase field fracture",
          "author": {
            "login": "avtarsinghh1991"
          },
          "bodyText": "Hello MOOSE Experts\nI want to solve rate-independent and anisotropic phase-field fracture. Can you please provide me with close examples to solve the same?\nI shall be very thankful.\nBest\nAvtar",
          "url": "https://github.com/idaholab/moose/discussions/20005",
          "updatedAt": "2022-06-13T03:09:44Z",
          "publishedAt": "2022-01-10T21:45:07Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Hi Avtar,\nThere are plenty of examples in modules/combined/test/tests/phase_field_fracture/.\nAlternatively, there is an app for phase field fracture: https://hugary1995.github.io/raccoon/. I haven't put any anisotropic fracture models in yet (which should be trivial BTW), but if you are interested, we could discuss.\nThanks,\nGary",
                  "url": "https://github.com/idaholab/moose/discussions/20005#discussioncomment-1943908",
                  "updatedAt": "2022-06-13T03:09:44Z",
                  "publishedAt": "2022-01-10T22:49:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "avtarsinghh1991"
                  },
                  "bodyText": "Hello Gary\nThank you very much. I am new to MOOSE. I have checked the\nmodules/combined/test/tests/phase_field_fracture/ \nin which Allen-Cahn equation is solved. However, It is time-dependent and I can't able to find anything where I can block the time derivative term.\nFor example\nhttps://mooseframework.inl.gov/source/materials/ComputeLinearElasticPFFractureStress.html\n #This input uses PhaseField-Nonconserved Action to add phase field fracture bulk rate kernels\n [Mesh]\n   [gen]\n     type = GeneratedMeshGenerator\n     dim = 2\n     nx = 40\n     ny = 20\n     ymax = 0.5\n   []\n   [./noncrack]\n     type = BoundingBoxNodeSetGenerator\n     new_boundary = noncrack\n     bottom_left = '0.5 0 0'\n     top_right = '1 0 0'\n     input = gen\n   [../]\n []\n \n [GlobalParams]\n   displacements = 'disp_x disp_y'\n []\n \n [AuxVariables]\n   [./strain_yy]\n     family = MONOMIAL\n     order = CONSTANT\n   [../]\n []\n \n [Modules]\n   [./TensorMechanics]\n     [./Master]\n       [./All]\n         add_variables = true\n         strain = FINITE\n         planar_formulation = PLANE_STRAIN\n         additional_generate_output = 'stress_yy'\n         strain_base_name = uncracked\n       [../]\n     [../]\n   [../]\n   [./PhaseField]\n     [./Nonconserved]\n       [./c]\n         free_energy = E_el\n         kappa = kappa_op\n         mobility = L\n       [../]\n     [../]\n   [../]\n []\n \n [Kernels]\n   [./solid_x]\n     type = PhaseFieldFractureMechanicsOffDiag\n     variable = disp_x\n     component = 0\n     c = c\n  [../]\n   [./solid_y]\n     type = PhaseFieldFractureMechanicsOffDiag\n     variable = disp_y\n     component = 1\n     c = c\n   [../]\n   [./off_disp]\n     type = AllenCahnElasticEnergyOffDiag\n     variable = c\n     displacements = 'disp_x disp_y'\n     mob_name = L\n   [../]\n []\n \n [AuxKernels]\n   [./strain_yy]\n     type = RankTwoAux\n     variable = strain_yy\n     rank_two_tensor = uncracked_mechanical_strain\n     index_i = 1\n     index_j = 1\n     execute_on = TIMESTEP_END\n   [../]\n []\n \n [BCs]\n   [./ydisp]\n     type = FunctionDirichletBC\n     variable = disp_y\n     boundary = top\n     function = 't'\n   [../]\n   [./yfix]\n     type = DirichletBC\n     variable = disp_y\n     boundary = noncrack\n     value = 0\n   [../]\n   [./xfix]\n     type = DirichletBC\n     variable = disp_x\n     boundary = right\n     value = 0\n   [../]\n []\n \n [Materials]\n   [./pfbulkmat]\n     type = GenericConstantMaterial\n     prop_names = 'gc_prop l visco'\n     prop_values = '1e-3 0.05 1e-4'\n   [../]\n   [./elasticity_tensor]\n     type = ComputeElasticityTensor\n     C_ijkl = '120.0 80.0'\n     fill_method = symmetric_isotropic\n     base_name = uncracked\n   [../]\n   [./elastic]\n     type = ComputeFiniteStrainElasticStress\n     base_name = uncracked\n   [../]\n   [./cracked_stress]\n     type = ComputeCrackedStress\n     c = c\n     kdamage = 1e-5\n     F_name = E_el\n     use_current_history_variable = true\n     uncracked_base_name = uncracked\n     finite_strain_model = true\n   [../]\n []\n \n [Postprocessors]\n   [./av_stress_yy]\n     type = ElementAverageValue\n     variable = stress_yy\n   [../]\n   [./av_strain_yy]\n     type = SideAverageValue\n     variable = disp_y\n     boundary = top\n   [../]\n []\n \n [Preconditioning]\n   [./smp]\n     type = SMP\n     full = true\n   [../]\n []\n \n [Executioner]\n   type = Transient\n \n   solve_type = PJFNK\n   petsc_options_iname = '-pc_type -pc_factor_mat_solving_package'\n   petsc_options_value = 'lu superlu_dist'\n \n   nl_rel_tol = 1e-8\n   l_tol = 1e-4\n   l_max_its = 100\n   nl_max_its = 10\n \n   dt = 3e-5\n   num_steps = 2\n []\n \n [Outputs]\n   exodus = true\n []\n\nI find this example as most suitable for me. How can I make this Allen-Cahn into a rate-independent one?\nPlease help.\nI shall be very thankful.\nBest\nAvtar",
                  "url": "https://github.com/idaholab/moose/discussions/20005#discussioncomment-1948431",
                  "updatedAt": "2022-06-13T03:10:05Z",
                  "publishedAt": "2022-01-11T15:14:28Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Another input file called crack2d_iso_wo_time.i is time-independent I believe.",
                          "url": "https://github.com/idaholab/moose/discussions/20005#discussioncomment-1948495",
                          "updatedAt": "2022-06-16T02:40:27Z",
                          "publishedAt": "2022-01-11T15:25:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "@dschwen Is it worth adding an option in NonconservedAction to turn off the time derivative kernel?",
                          "url": "https://github.com/idaholab/moose/discussions/20005#discussioncomment-1948522",
                          "updatedAt": "2022-06-16T02:40:27Z",
                          "publishedAt": "2022-01-11T15:27:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Thank you @hugary1995 .\nI will check the examples you suggested. I need to put anisotropy as well. So I will try to write kernel for the same.\nBest\nAvtar",
                          "url": "https://github.com/idaholab/moose/discussions/20005#discussioncomment-1948606",
                          "updatedAt": "2022-06-16T02:40:27Z",
                          "publishedAt": "2022-01-11T15:41:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ngrilli"
                          },
                          "bodyText": "Dear @asingh-mit\nAnisotropy is already implemented here:\nhttps://github.com/idaholab/moose/blob/next/modules/combined/test/tests/phase_field_fracture/crack2d_aniso_cleavage_plane.i\nBest Regards,\nNicol\u00f2",
                          "url": "https://github.com/idaholab/moose/discussions/20005#discussioncomment-1982650",
                          "updatedAt": "2022-06-16T02:40:30Z",
                          "publishedAt": "2022-01-17T11:41:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "avtarsinghh1991"
                  },
                  "bodyText": "Hello @ngrilli\nThank you very much. Actually, I want to implement this for the polycrystalline system. So, I think I need to change the following source code in order to read the cleavage plane values for individual grains from the input file.\nhttps://mooseframework.inl.gov/docs/doxygen/modules/ACInterfaceCleavageFracture_8C_source.html\nBest\nAvtar",
                  "url": "https://github.com/idaholab/moose/discussions/20005#discussioncomment-1983817",
                  "updatedAt": "2022-06-16T02:40:27Z",
                  "publishedAt": "2022-01-17T14:18:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "libmesh build error on INL cluster",
          "author": {
            "login": "aruybalid"
          },
          "bodyText": "Hi,\nI am a LANL-postdoc developing surrogate models in MOOSE (working with Laurent Capolungo, Topher Matthews and Andrea Rovinelli). I am relatively new to working with MOOSE on the INL cluster and experiencing problems installing libmesh on the INL cluster (sawtooth) through update_and_rebuild_libmesh.sh. I have just cloned MOOSE, compiled PETSC successfully (update_and_rebuild_petsc.sh), and get an error during libmesh build (see first few lines of error copied below). How can I resolve this to compile libmesh?\nWarm regards,\nAndre Ruybalid\n../src/base/libmesh.C: In constructor 'libMesh::LibMeshInit::LibMeshInit(int, const char* const*, TIMPI::communicator, int)':\n../src/base/libmesh.C:441:38: error: 'using_threads' was not declared in this scope; did you mean 'n_threads'?\n441 |     new TIMPI::TIMPIInit(argc, argv, using_threads,\n|                                      ^~~~~~~~~~~~~\n|                                      n_threads\n../src/base/libmesh.C:442:26: error: 'handle_mpi_errors' was not declared in this scope\n442 |                          handle_mpi_errors);\n|                          ^~~~~~~~~~~~~~~~~",
          "url": "https://github.com/idaholab/moose/discussions/20051",
          "updatedAt": "2022-06-11T01:28:33Z",
          "publishedAt": "2022-01-14T18:05:14Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhich modules did you load for compilers? Especially for MPI\nFor next time, there's a pre-built PETSC module you can load on hpc, saves one step.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20051#discussioncomment-1971505",
                  "updatedAt": "2022-06-11T01:28:34Z",
                  "publishedAt": "2022-01-14T18:29:18Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "Hi Guillaume, thanks for your quick response. I have loaded the following:\nCurrently Loaded Modules:\n\ngcc/9.3.0-gcc-4.8.5-twls   3) python/3.7-anaconda-2019.10\nopenmpi/4.0.5_ucx1.9       4) cmake/3.18.4-gcc-9.3.0-qhpg\n\nAlso thanks for the tip about the petsc module.\nAndre",
                          "url": "https://github.com/idaholab/moose/discussions/20051#discussioncomment-1971807",
                          "updatedAt": "2022-06-11T01:28:34Z",
                          "publishedAt": "2022-01-14T19:34:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what does echo $CC $CXX return ?\nYou may need to set CC=mpicc CXX=mpicxx when running this script",
                          "url": "https://github.com/idaholab/moose/discussions/20051#discussioncomment-1972369",
                          "updatedAt": "2022-06-11T01:28:36Z",
                          "publishedAt": "2022-01-14T21:47:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "echo $CC $CXX returns:\n/apps/local/spack/software/gcc-4.8.5/gcc-9.3.0-twlsdabweaw75pj2f2hq7k7vo3vilvmi/bin/gcc\n/apps/local/spack/software/gcc-4.8.5/gcc-9.3.0-twlsdabweaw75pj2f2hq7k7vo3vilvmi/bin/g++\nIt should be the following (I had added it to .bashrc, but now am unsure if I sourced it)?\nexport CC=mpicc\nexport CXX=mpicxx",
                          "url": "https://github.com/idaholab/moose/discussions/20051#discussioncomment-1972473",
                          "updatedAt": "2022-06-11T01:28:36Z",
                          "publishedAt": "2022-01-14T22:13:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "Actually, I added this (in this order) to .bashrc:\nmodule purge\nexport CC=mpicc\nexport CXX=mpicxx\nexport F90=mpif90\nexport F77=mpif77\nexport FC=mpif90\nexport PETSC_DIR=/home/ruybandr/projects/moose/petsc\nexport PETSC_ARCH=arch-moose all\nmodule load openmpi\nmodule load python\nmodule load cmake\nIt seems loading openmpi after export CC=mpicc and export CXX=mpicxx changes the CC and CXX selection. I am now attempting to rebuild libmesh with CC=mpicc and CXX=mpicxx.\nI'll keep you posted..",
                          "url": "https://github.com/idaholab/moose/discussions/20051#discussioncomment-1972497",
                          "updatedAt": "2022-07-12T13:36:41Z",
                          "publishedAt": "2022-01-14T22:21:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok hope it works!\nmvapich2/2.3.3-gcc-9.2.0 is the one everyone uses on sawtooth I think btw. Openmpi should work too\nWith the pre-built petsc module, you ll have to make sure to load the relevant compiler too",
                          "url": "https://github.com/idaholab/moose/discussions/20051#discussioncomment-1972760",
                          "updatedAt": "2022-07-12T13:36:41Z",
                          "publishedAt": "2022-01-14T23:44:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aruybalid"
                          },
                          "bodyText": "It worked. So first:\nmodule load openmpi\nand subsequently set\nexport CC=mpicc\nexport CXX=mpicxx\netc.\nThanks for your help.\nAndre",
                          "url": "https://github.com/idaholab/moose/discussions/20051#discussioncomment-1973273",
                          "updatedAt": "2022-07-12T13:36:42Z",
                          "publishedAt": "2022-01-15T03:43:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "NSFVMomentumAdvection object mass is not completely bounded by INSFVBCs",
          "author": {
            "login": "aiskhak"
          },
          "bodyText": "Hello all,\nI want to use external mesh in .msh format for FV NS kernels. However, I am getting the following error:\n*** ERROR ***\nThe following error occurred in the object \"mass\", of type \"INSFVMassAdvection\".\n\nThe INSFVMomentumAdvection object mass is not completely bounded by INSFVBCs. Please examine sideset 0 and your FVBCs blocks.\n\nI examined the mesh in gmsh and peacock. There is no such sideset 0. Clearly something wrong with the mesh, but I am not sure how to fix it.\n[Mesh]\n  type = FileMesh\n  file = tamu.msh\n  #dim = 3\n[]\n\n[Problem]\n  fv_bcs_integrity_check = true\n[]\n\n[Variables]\n  [u]\n    type = INSFVVelocityVariable\n    initial_condition = 0\n  []\n  [v]\n    type = INSFVVelocityVariable\n    initial_condition = 0\n  []\n  [w]\n    type = INSFVVelocityVariable\n    initial_condition = 0\n  []\n  [pressure]\n    type = INSFVPressureVariable\n  []\n[]\n\n[FVKernels]\n  [mass]\n    type = INSFVMassAdvection\n    variable = pressure\n    advected_interp_method = 'average'\n    velocity_interp_method = 'rc'\n    vel = 'velocity'\n    pressure = pressure\n    u = u\n    v = v\n    w = w\n    mu = 1.e-3\n    rho = 1.e3\n  []\n\n  [u_advection]\n    type = INSFVMomentumAdvection\n    variable = u\n    advected_quantity = 'rhou'\n    vel = 'velocity'\n    advected_interp_method = 'average'\n    velocity_interp_method = 'rc'\n    pressure = pressure\n    u = u\n    v = v\n    w = w\n    mu = 1.e-3\n    rho = 1.e3\n  []\n  [u_viscosity]\n    type = FVDiffusion\n    variable = u\n    coeff =1.e-3\n  []\n  [u_pressure]\n    type = INSFVMomentumPressure\n    variable = u\n    momentum_component = 'x'\n    pressure = pressure\n  []\n\n  [v_advection]\n    type = INSFVMomentumAdvection\n    variable = v\n    advected_quantity = 'rhov'\n    vel = 'velocity'\n    advected_interp_method = 'average'\n    velocity_interp_method = 'rc'\n    pressure = pressure\n    u = u\n    v = v\n    w = w\n    mu = 1.e-3\n    rho = 1.e3\n  []\n  [v_viscosity]\n    type = FVDiffusion\n    variable = v\n    coeff = 1.e-3\n  []\n  [v_pressure]\n    type = INSFVMomentumPressure\n    variable = v\n    momentum_component = 'y'\n    pressure = pressure\n  []\n\n  [w_advection]\n    type = INSFVMomentumAdvection\n    variable = w\n    advected_quantity = 'rhow'\n    vel = 'velocity'\n    advected_interp_method = 'average'\n    velocity_interp_method = 'rc'\n    pressure = pressure\n    u = u\n    v = v\n    w = w\n    mu = 1.e-3\n    rho = 1.e3\n  []\n  [w_viscosity]\n    type = FVDiffusion\n    variable = w\n    coeff = 1.e-3\n  []\n  [w_pressure]\n    type = INSFVMomentumPressure\n    variable = w\n    momentum_component = 'z'\n    pressure = pressure\n  []\n[]\n\n[FVBCs]\n  [inlet-u]\n    type = INSFVInletVelocityBC\n    boundary = 'inlet'\n    variable = u\n    function = '1'\n  []\n  [inlet-v]\n    type = INSFVInletVelocityBC\n    boundary = 'inlet'\n    variable = v\n    function = 0\n  []\n  [inlet-w]\n    type = INSFVInletVelocityBC\n    boundary = 'inlet'\n    variable = w\n    function = 0\n  []\n\n  [walls-u]\n    type = INSFVNoSlipWallBC\n    boundary = 'wall'\n    variable = u\n    function = 0\n  []\n  [walls-v]\n    type = INSFVNoSlipWallBC\n    boundary = 'wall'\n    variable = v\n    function = 0\n  []\n  [walls-w]\n    type = INSFVNoSlipWallBC\n    boundary = 'wall'\n    variable = w\n    function = 0\n  []\n\n  [outlet_p]\n    type = INSFVOutletPressureBC\n    boundary = 'outlet'\n    variable = pressure\n    function = 0\n  []\n[]\n\n[Materials]\n  [ins_fv]\n    type = INSFVMaterial\n    u = 'u'\n    v = 'v'\n    w = 'w'\n    pressure = 'pressure'\n    rho = 1.e3\n  []\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'NEWTON'\n  petsc_options_iname = '-pc_type -ksp_gmres_restart -sub_pc_type -sub_pc_factor_shift_type'\n  petsc_options_value = 'asm      200                lu           NONZERO'\n  line_search = 'none'\n  nl_rel_tol = 1e-12\n[]\n\n[Outputs]\n  exodus = true\n  csv = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/19973",
          "updatedAt": "2022-01-27T23:03:29Z",
          "publishedAt": "2022-01-06T23:59:13Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nsideset 0 may just be an assigned number for a side that is not part of a defined sideset, yet is on the boundary of the fluid flow domain.\nYou should check that \u2018inlet, wall and outlet\u2019 completely bound the flow domain, with no holes.\nCan you share that mesh?\nguillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19973#discussioncomment-1922542",
                  "updatedAt": "2022-01-07T16:24:11Z",
                  "publishedAt": "2022-01-07T04:11:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "Thanks, probably you are right about the holes, I am not very experienced with gmsh.\nYep, sure. Attached; just copy that in .geo file and open with gmsh.\nThanks!\n// Gmsh project created on Tue Jul 13 06:44:35 2021\nSetFactory(\"OpenCASCADE\");\nlc = 1.0;\natan23 = Atan(2/3);\nEllipse(1) = {0, 0, 0, .20409, 0.19685, 0, atan23};\nEllipse(2) = {0, 0, 0, .18504, 0.17847579, 0, atan23};\nEllipse(3) = {0, 0, 0, .20409, 0.19685, atan23, 1.52410878112065};\nCoherence;\nEllipse(4) = {0, 0, 0, .18504, 0.17847579, atan23, 1.51929821048555};\nCoherence;\nPoint(11) = {0.028575, 0.01905, 0, lc};\nPoint(12) = {0.028575, 0, 0, lc};\nPoint(13) = {0.009525, 0, 0, lc};\nPoint(14) = {0.009525, 0.01905, 0, lc};\nPoint(15) = {0.20409, -0.01905, 0, lc};\nPoint(16) = {0.18504, -0.01905, 0, lc};\n//+\nLine(5) = {15, 5};\n//+\nLine(6) = {16, 15};\n//+\nLine(7) = {5, 8};\n//+\nLine(8) = {8, 16};\n//+\nLine(9) = {9, 6};\n//+\nLine(10) = {11, 9};\n//+\nLine(11) = {12, 8};\n//+\nLine(12) = {12, 11};\n//+\nLine(13) = {13, 14};\n//+\nLine(14) = {14, 11};\n//+\nLine(15) = {13, 12};\n//+\nLine(16) = {10, 7};\n//+\nLine(17) = {14, 10};\n//+\nCurve Loop(1) = {8, 6, 5, 7};\n//+\nPlane Surface(1) = {1};\n//+\nCurve Loop(2) = {1, -9, -2, -7};\n//+\nPlane Surface(2) = {2};\n//+\nCurve Loop(3) = {4, 16, -3, -9};\n//+\nPlane Surface(3) = {3};\n//+\nCurve Loop(4) = {11, 2, -10, -12};\n//+\nPlane Surface(4) = {4};\n//+\nCurve Loop(5) = {10, 4, -17, 14};\n//+\nPlane Surface(5) = {5};\n//+\nCurve Loop(6) = {12, -14, -13, 15};\n//+\nPlane Surface(6) = {6};\n//+\nTransfinite Curve {5, 6, 8, 7, 1, 3, 9, 16, 2, 4, 11, 10, 17, 12, 14, 15, 13} = 11 Using Progression 1;\n//+\nTransfinite Surface {1};\n//+\nTransfinite Surface {2};\n//+\nTransfinite Surface {3};\n//+\nTransfinite Surface {4};\n//+\nTransfinite Surface {5};\n//+\nTransfinite Surface {6};\n//+\nRecombine Surface {1};\n//+\nRecombine Surface {2};\n//+\nRecombine Surface {3};\n//+\nRecombine Surface {4};\n//+\nRecombine Surface {5};\n//+\nRecombine Surface {6};\nCoherence;\nExtrude { {0,1,0} , {0,0,0} , Pi/2} {\nSurface{1}; Surface{2}; Surface{3}; Surface{4}; Surface{5}; Surface{6}; Layers{10}; Recombine;\n}\nCoherence;\nExtrude { {0,1,0} , {0,0,0} , Pi/2} {\nSurface{11}; Surface{15}; Surface{19}; Surface{23}; Surface{26}; Surface{29}; Layers{10}; Recombine;\n}\nCoherence;\nExtrude { {0,1,0} , {0,0,0} , Pi/2} {\nSurface{34}; Surface{38}; Surface{42}; Surface{46}; Surface{49}; Surface{52}; Layers{10}; Recombine;\n}\nCoherence;\nExtrude { {0,1,0} , {0,0,0} , -Pi/2} {\nSurface{1}; Surface{2}; Surface{3}; Surface{4}; Surface{5}; Surface{6}; Layers{10}; Recombine;\n}\nCoherence;\nPoint(1) = {Sqrt(2)/200, 0, 0, lc};\nPoint(2) = {0, 0, Sqrt(2)/200, lc};\nPoint(3) = {-Sqrt(2)/200, 0, 0, lc};\nPoint(4) = {0, 0, -Sqrt(2)/200, lc};//+\nLine(117) = {1, 13};\n//+\nLine(118) = {2, 52};\n//+\nLine(119) = {3, 40};\n//+\nLine(120) = {4, 28};\n//+\nLine(121) = {1, 2};\n//+\nLine(122) = {2, 3};\n//+\nLine(123) = {3, 4};\n//+\nLine(124) = {4, 1};\nCoherence;\n//+\nCurve Loop(93) = {121, 122, 123, 124};\n//+\nPlane Surface(93) = {93};\n//+\nCurve Loop(94) = {121, 118, -116, -117};\n//+\nPlane Surface(94) = {94};\n//+\nCurve Loop(95) = {122, 119, 102, -118};\n//+\nPlane Surface(95) = {95};\n//+\nCurve Loop(96) = {123, 120, 73, -119};\n//+\nPlane Surface(96) = {96};\n//+\nCurve Loop(97) = {124, 117, 44, -120};\n//+\nPlane Surface(97) = {97};\n//+\nCoherence;\nTransfinite Curve {122, 121, 124, 123, 118, 117, 120, 119, 44, 116, 102, 73} = 11 Using Progression 1;\n//+\nTransfinite Surface {93};\n//+\nTransfinite Surface {95};\n//+\nTransfinite Surface {94};\n//+\nTransfinite Surface {96};\n//+\nTransfinite Surface {97};\n//+\nCoherence;\nRecombine Surface {93, 95, 96, 97, 94};\nCoherence;\nExtrude {0, -0.01905, 0} {\n  Surface{93};Surface{94};Surface{95};Surface{96};Surface{97};Layers {10}; Recombine;\n}\nCoherence;\nExtrude {0, 0.01905, 0} {\n  Surface{93};Surface{94};Surface{95};Surface{96};Surface{97};Layers {10}; Recombine;\n}\nExtrude {0, 0.159189178406, 0} {\n  Surface{119};Surface{123};Surface{126};Surface{129};Surface{131};Layers {10}; Recombine;\n}\nExtrude {0, 0.018396320939, 0} {\n  Surface{136};Surface{140};Surface{143};Surface{146};Surface{148};Layers {10}; Recombine;\n}\n\n// Physical groups\nPhysical Surface(\"inlet\") = {102,106,109,112,114};\nPhysical Surface(\"outlet\") = {8,31,54,77};\nPhysical Surface(\"wall\") = {7,9,12,18,20,28,30,32,35,41,43,51,53,55,58,64,66,74,76,78,80,85,86,92,104,108,111,113,153,157,160,163,165};\n//Physical Surface(\"internal\") = {1,2,3,4,5,6,10,11,13,14,15,16,17,19,21,22,23,24,25,26,27,29,33,34,36,37,38,39,40,42,44,45,46,47,48,49,50,52,56,57,59,60,61,62,63,65,67,68,69,70,71,72,73,75,79,81,82,83,84,87,88,89,90,91,93,94,95,96,97,98,99,100,101,103,105,107,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,158,159,161,162,164};\nPhysical Volume(\"fluid\") = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44};\n\n// Mesh\u200b\nMesh.ElementOrder = 1;\u200b \nMesh.MshFileVersion = 2.16;\u200b\nMesh 3;\u200b\nSave \"tamu.msh\";",
                          "url": "https://github.com/idaholab/moose/discussions/19973#discussioncomment-1922554",
                          "updatedAt": "2022-01-07T04:14:39Z",
                          "publishedAt": "2022-01-07T04:14:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I just looked and it seems water-tight to me. I'll dig in moose to see what's going on and I ll let you know",
                          "url": "https://github.com/idaholab/moose/discussions/19973#discussioncomment-1926297",
                          "updatedAt": "2022-01-07T16:38:17Z",
                          "publishedAt": "2022-01-07T16:38:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "I understand, this is a mess. The funny thing is that mesh works with another MOOSE application (SAM, which is a finite element solver).",
                          "url": "https://github.com/idaholab/moose/discussions/19973#discussioncomment-1926424",
                          "updatedAt": "2022-01-07T17:00:13Z",
                          "publishedAt": "2022-01-07T17:00:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I got the solver to output where it's complaining about and it's in the center tube, inside the half sphere at 0.00946637, 0.179159, -0.000745019\nI zoomed in on the mesh and there are some real fine elements there\nIs the mesh confomal there? The solver thinks those faces are on an external boundary\nThe FE solver might not complain, but the results could be wrong if there's issues with the mesh",
                          "url": "https://github.com/idaholab/moose/discussions/19973#discussioncomment-1966313",
                          "updatedAt": "2022-01-14T00:01:07Z",
                          "publishedAt": "2022-01-14T00:01:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "Thanks, I will try to investigate this and report later.",
                          "url": "https://github.com/idaholab/moose/discussions/19973#discussioncomment-1971868",
                          "updatedAt": "2022-01-14T19:45:27Z",
                          "publishedAt": "2022-01-14T19:45:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Output mesh element volume in FV kernels",
          "author": {
            "login": "aiskhak"
          },
          "bodyText": "Hello all,\nI am using Navier-Stokes FV kernels with 2D structured grids. I need information on the volume (or size) of the mesh elements. Is it possible to output this information?",
          "url": "https://github.com/idaholab/moose/discussions/20014",
          "updatedAt": "2022-06-20T15:16:20Z",
          "publishedAt": "2022-01-11T21:11:25Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can place this information in an auxvariable using a VolumeAux\nhttps://mooseframework.inl.gov/source/auxkernels/VolumeAux.html\nIf you care more about the length, there's this one too\nhttps://mooseframework.inl.gov/source/auxkernels/ElementLengthAux.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1951071",
                  "updatedAt": "2022-06-20T15:16:20Z",
                  "publishedAt": "2022-01-11T22:44:26Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "Thanks, that works. The only problem I face is that when I try to output this auxiliary variable with others I am getting a segmentation fault. However, I can output it using another vector postprocessor (with the same syntax).\nThis does not work:\n[VectorPostprocessors]\n  [vpp]\n    type = ElementValueSampler\n    variable = 'u v pressure eddy_viscosity_aux_var dudx_aux_var dudy_aux_var dvdx_aux_var dvdy_aux_var elvol_aux_var'\n    sort_by = x\n  []\n[]\n\nThis works:\n[VectorPostprocessors]\n  [vpp]\n    type = ElementValueSampler\n    variable = 'u v pressure eddy_viscosity_aux_var dudx_aux_var dudy_aux_var dvdx_aux_var dvdy_aux_var'\n    sort_by = x\n  []\n  [elv]\n    type = ElementValueSampler\n    variable = 'elvol_aux_var'\n    sort_by = x\n  []\n[]\n\nIs it the expected behavior?",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1952010",
                          "updatedAt": "2022-06-20T15:16:22Z",
                          "publishedAt": "2022-01-12T03:27:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont think so.\nCould you please compile in debug mode and get us a backtrace on this error?",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1952125",
                          "updatedAt": "2022-06-30T21:25:13Z",
                          "publishedAt": "2022-01-12T04:18:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "This is what I have got with debugging:\nThread 1 \"fv_app-dbg\" received signal SIGSEGV, Segmentation fault.\nstd::__uniq_ptr_impl<MooseVariableData, std::default_delete<MooseVariableData > >::_M_ptr (this=0x788)\nat /home/aiskhak/anaconda3/envs/moose/x86_64-conda-linux-gnu/include/c++/9.3.0/bits/unique_ptr.h:154\n154\t      pointer    _M_ptr() const { return std::get<0>(_M_t); }",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1957778",
                          "updatedAt": "2022-06-30T21:25:13Z",
                          "publishedAt": "2022-01-12T19:20:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "Hope that helps. Let me know if (and how) I can pull more information for you.",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1958252",
                          "updatedAt": "2022-06-30T21:25:22Z",
                          "publishedAt": "2022-01-12T20:54:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "when running it in a debugger, you should be getting a full backtrace by typing bt after it crashes. See this page for more info\nhttps://mooseframework.inl.gov/application_development/debugging.html",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1959362",
                          "updatedAt": "2022-06-30T21:25:24Z",
                          "publishedAt": "2022-01-13T01:32:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "Here is what I am getting:\n#0  std::__uniq_ptr_impl<MooseVariableData<double>, std::default_delete<MooseVariableData<double> > >::_M_ptr (this=0x788)\n    at /home/aiskhak/anaconda3/envs/moose/x86_64-conda-linux-gnu/include/c++/9.3.0/bits/unique_ptr.h:154\n#1  0x00007ffff7b3d9c7 in std::unique_ptr<MooseVariableData<double>, std::default_delete<MooseVariableData<double> > >::get (this=0x788)\n    at /home/aiskhak/anaconda3/envs/moose/x86_64-conda-linux-gnu/include/c++/9.3.0/bits/unique_ptr.h:361\n#2  0x00007ffff7b3d97d in std::unique_ptr<MooseVariableData<double>, std::default_delete<MooseVariableData<double> > >::operator-> (this=0x788)\n    at /home/aiskhak/anaconda3/envs/moose/x86_64-conda-linux-gnu/include/c++/9.3.0/bits/unique_ptr.h:355\n#3  0x00007ffff3d8559c in MooseVariableFE<double>::getElementalValue (this=0x0, elem=0x555555af6ce0, \n    idx=0) at /home/aiskhak/projects/moose/framework/src/variables/MooseVariableFE.C:196\n#4  0x00007ffff40015ae in ElementValueSampler::execute (this=0x555555e4ba30)\n    at /home/aiskhak/projects/moose/framework/src/vectorpostprocessors/ElementValueSampler.C:66\n#5  0x00007ffff4a82656 in ComputeUserObjectsThread::onElement (this=0x7fffffffcdb0, elem=0x555555af6ce0)\n    at /home/aiskhak/projects/moose/framework/src/loops/ComputeUserObjectsThread.C:123\n#6  0x00007ffff40409cb in ThreadedElementLoopBase<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> >::operator() (this=0x7fffffffcdb0, range=..., bypass_threading=false)\n    at /home/aiskhak/projects/moose/framework/build/header_symlinks/ThreadedElementLoopBase.h:226\n#7  0x00007ffff4dd627d in libMesh::Threads::parallel_reduce<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*>, ComputeUserObjectsThread> (range=..., body=...)\n    at /home/aiskhak/anaconda3/envs/moose/libmesh/include/libmesh/threads_pthread.h:380\n#8  0x00007ffff4d95b24 in FEProblemBase::computeUserObjectsInternal(MooseEnumItem const&, Moose::AuxGroup const&, TheWarehouse::QueryCache<>&) (this=0x555555c53570, type=..., \n    group=@0x7fffffffd194: Moose::POST_AUX, query=...)\n    at /home/aiskhak/projects/moose/framework/src/problems/FEProblemBase.C:3932\n#9  0x00007ffff4d94cda in FEProblemBase::computeUserObjects (this=0x555555c53570, type=..., \n    group=@0x7fffffffd194: Moose::POST_AUX)\n    at /home/aiskhak/projects/moose/framework/src/problems/FEProblemBase.C:3858\n#10 0x00007ffff4d94506 in FEProblemBase::execute (this=0x555555c53570, exec_type=...)\n    at /home/aiskhak/projects/moose/framework/src/problems/FEProblemBase.C:3771\n#11 0x00007ffff45a0611 in FixedPointSolve::solveStep (this=0x555555cb9a30, \n    begin_norm=@0x5555572bd810: 0, end_norm=@0x5555572ba720: 0, transformed_dofs=...)\n    at /home/aiskhak/projects/moose/framework/src/executioners/FixedPointSolve.C:426\n#12 0x00007ffff459f5ee in FixedPointSolve::solve (this=0x555555cb9a30)\n    at /home/aiskhak/projects/moose/framework/src/executioners/FixedPointSolve.C:273\n#13 0x00007ffff3fdce02 in TimeStepper::step (this=0x555555dbede0)\n    at /home/aiskhak/projects/moose/framework/src/timesteppers/TimeStepper.C:163\n#14 0x00007ffff45aeed2 in Transient::takeStep (this=0x555555cb91c0, input_dt=-1)\n    at /home/aiskhak/projects/moose/framework/src/executioners/Transient.C:446\n#15 0x00007ffff45ae1f8 in Transient::execute (this=0x555555cb91c0)\n    at /home/aiskhak/projects/moose/framework/src/executioners/Transient.C:331\n#16 0x00007ffff53cc3ab in MooseApp::executeExecutioner (this=0x55555569f5d0)\n    at /home/aiskhak/projects/moose/framework/src/base/MooseApp.C:1076\n#17 0x00007ffff53cf8c7 in MooseApp::run (this=0x55555569f5d0)\n    at /home/aiskhak/projects/moose/framework/src/base/MooseApp.C:1460\n#18 0x000055555555d803 in main (argc=3, argv=0x7fffffffdec8)\n    at /home/aiskhak/projects/fv_app/src/main.C:33",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1959535",
                          "updatedAt": "2022-06-30T21:25:23Z",
                          "publishedAt": "2022-01-13T02:32:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "MooseVariableFE::getElementalValue (this=0x0\nmeans the variable is null. It's probably because it's a FV variable and not FE.\nI ll have a look.",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1959698",
                          "updatedAt": "2022-06-30T21:25:23Z",
                          "publishedAt": "2022-01-13T03:26:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "What type is this extra variable you are adding? It's being recognized as a FE variable by that bit of code. If it's FV, then that's how the pointer s null.\nThere's clearly something wrong going on. Can you please try making it FV (fv = true or type=MooseVariableFVReal in variable declaration)",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1959711",
                          "updatedAt": "2022-06-30T21:25:23Z",
                          "publishedAt": "2022-01-13T03:33:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "I am adding the following variable and coresponding kernel:\n  [elvol_aux_var]\n    order = CONSTANT\n    family = MONOMIAL\n  [] \n\n  [elvol_aux_ker]\n    type = VolumeAux\n    variable = elvol_aux_var\n  []\n\nThe variable does not allow setting fv = True, which probably causes the problem",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1959751",
                          "updatedAt": "2022-06-30T21:25:23Z",
                          "publishedAt": "2022-01-13T03:43:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "fv = True or type=MooseVariableFVReal\nreturn:\n*** ERROR ***\nFV variables do not support setNodalValue",
                          "url": "https://github.com/idaholab/moose/discussions/20014#discussioncomment-1959862",
                          "updatedAt": "2022-06-30T21:25:25Z",
                          "publishedAt": "2022-01-13T04:15:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "libMesh Update (2021.11.11)",
          "author": {
            "login": "cticenhour"
          },
          "bodyText": "A new libMesh made its way to the MOOSE master branch in November. For those using the conda packages, please perform\nconda update --all\n\nin your MOOSE conda environment. The appropriate moose-libmesh package version should be 2021.11.11. For those using the the libMesh submodule, please run in the moose/scripts directory\n./update_and_rebuild_libmesh.sh\n\nafter updating your copy of MOOSE.\nMore details on the content of this update can be found in the November 2021 Newsletter.",
          "url": "https://github.com/idaholab/moose/discussions/19532",
          "updatedAt": "2022-06-28T09:05:44Z",
          "publishedAt": "2021-12-02T23:47:39Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "UPDATE TO THE UPDATE BELOW\nWhen conda (or mamba) update --all fails to correctly update libmesh, you can force an update to the right package with:\nmamba update moose-libmesh=<latest-version-date>\n\nThe current version date, in early February 2022, is 2022.01.19. You will find the latest version date on the Discussions announcement.\nIf this fails, please follow the instructions below.\nUPDATE\nconda update --all has failed to correctly update libmesh on systems with higher versions of python that we currently allow. This will cause MOOSE build failures.\nTo confirm this issue is affecting you, please type conda list | grep libmesh and look at the version. If different from 2021.11.11 (or the current latest if you are looking at this comment in 2022), this is affecting your system.\nThe solution is to remove the moose conda environment and re-install it.\nconda deactivate\nconda env remove -n moose\nconda install mamba -y\nconda create --name moose -q -y\nconda activate moose\nmamba install moose-libmesh moose-tools",
                  "url": "https://github.com/idaholab/moose/discussions/19532#discussioncomment-1759676",
                  "updatedAt": "2022-06-28T09:05:44Z",
                  "publishedAt": "2021-12-06T16:45:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "Also, your system might need a reboot after these commands :)",
                          "url": "https://github.com/idaholab/moose/discussions/19532#discussioncomment-1970302",
                          "updatedAt": "2022-07-12T13:42:54Z",
                          "publishedAt": "2022-01-14T15:27:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}