{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMC0xMi0xNVQwOTo0Njo0Mi0wNjowMM4AAQxp"
    },
    "edges": [
      {
        "node": {
          "title": "Rebuild issues on Linux",
          "author": {
            "login": "dealmeidavf"
          },
          "bodyText": "Hello,\nIn a recent rebuilt of libmesh:\ncd moose/\n./scripts/update_and_rebuild_libmesh.sh\nI noticed these lines in the screen output:\nlibtool: warning: '/usr/local/ompi/lib/libmpi_cxx.la' seems to be moved\nlibtool: warning: '/usr/local/ompi/lib/libmpi.la' seems to be moved\n\nI verified the mpi libs are there; not sure why the above messages...\n\nAlso additional messages:\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libX11.so when searching for -lX11\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libdl.so when searching for -ldl\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libdl.a when searching for -ldl\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/librt.so when searching for -lrt\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/librt.a when searching for -lrt\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libutil.so when searching for -lutil\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libutil.a when searching for -lutil\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libz.so when searching for -lz\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libm.so when searching for -lm\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libm.a when searching for -lm\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libpthread.so when searching for -lpthread\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libpthread.a when searching for -lpthread\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libc.so when searching for -lc\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libc.a when searching for -lc\n\nAny ideas on why these are incompatible?\n\nProceeding to the make tests:\ncd test\nmake -j 4\nanother block of incompatible messages:\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libX11.so when searching for -lX11\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libutil.so when searching for -lutil\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libutil.a when searching for -lutil\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libz.so when searching for -lz\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libpthread.so when searching for -lpthread\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libpthread.a when searching for -lpthread\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/librt.so when searching for -lrt\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/librt.a when searching for -lrt\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libdl.so when searching for -ldl\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libdl.a when searching for -ldl\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libm.so when searching for -lm\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libm.a when searching for -lm\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libpthread.so when searching for -lpthread\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libpthread.a when searching for -lpthread\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libc.so when searching for -lc\n/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: skipping incompatible /usr/lib/libc.a when searching for -lc\nThe tests do not run.\nIs there a way to do a clean up and recompile with the existing MOOSE repo? Or should I just make a fresh git clone and start from scratch?\nThanks for inputs.\n--\nValmor",
          "url": "https://github.com/idaholab/moose/discussions/16524",
          "updatedAt": "2023-05-22T04:29:01Z",
          "publishedAt": "2020-12-17T05:39:38Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "Dear @dealmeidavf\nWhich operating system?\nI often see that libtool warning, but then my MOOSE installation works fine\non both Ubuntu 20 and CentOS 7\nBest Regards,\nNicol\u00f2 Grilli\nNational University of Singapore",
                  "url": "https://github.com/idaholab/moose/discussions/16524#discussioncomment-218318",
                  "updatedAt": "2023-05-22T04:29:11Z",
                  "publishedAt": "2020-12-17T08:35:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dealmeidavf"
                          },
                          "bodyText": "Gentoo Linux. And yes, it appears but MOOSE works.\n\nThanks",
                          "url": "https://github.com/idaholab/moose/discussions/16524#discussioncomment-220430",
                          "updatedAt": "2023-05-22T04:29:11Z",
                          "publishedAt": "2020-12-17T23:09:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "You don't need to clone a fresh copy of moose in order to do a general clean.\nTo clean MOOSE, first make sure you stash or commit any work you might have in the moose directory tree as the next command would remove those if you don't. Then run:\ngit clean -xfd\nin the moose directory. This will clean up libraries, test output, and other miscellaneous objects used during building. After that, I would clean out the libmesh submodule. Perform these commands within your moose directory:\ngit submodule deinit -f libmesh\ngit submodule update --init --recursive libmesh\n\nThis will clear out the libmesh directory and pull a fresh copy of the submodule. You can do the same thing with petsc (just switch out petsc for libmesh in these command and you can remove --recursive).\nFinally, you can navigate to test and run make clobberall. This performs much the same function as git clean, but specifically focuses on the libraries and objects made during build. I find it useful to run this just in case the git clean missed something. With all that done, you should be free to rebuild petsc, libmesh, and moose.",
                  "url": "https://github.com/idaholab/moose/discussions/16524#discussioncomment-219240",
                  "updatedAt": "2023-05-22T04:29:13Z",
                  "publishedAt": "2020-12-17T15:02:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Regarding the output you are seeing during build...This could be a byproduct of something changing in your environment after you built moose previously. The cleaning should help. If cleaning doesn't stop this, then the issue is something deeper in your development stack.",
                          "url": "https://github.com/idaholab/moose/discussions/16524#discussioncomment-219244",
                          "updatedAt": "2023-05-22T04:29:12Z",
                          "publishedAt": "2020-12-17T15:04:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dealmeidavf"
                          },
                          "bodyText": "Thanks for the list of commands. I did build from a fresh clone and it was fine. I believe it was an upgrade of my system where python went from 3.7 to 3.8 that caused the problem. I will make sure to clean up before rebuilding MOOSE next time.\nOn the incompatible command matter. There are two libX11.so built on my system; 32 and 64 bit:\n\n\n->  file /usr/lib64/libX11.so.6.4.0\n/usr/lib64/libX11.so.6.4.0: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, stripped\n\n\n->  file /usr/lib/libX11.so.6.4.0\n/usr/lib/libX11.so.6.4.0: ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, stripped\n\n\nThe config script is probably probing all libX11 and finding that the 32bit version is incompatible. Just my guess. Apparently this is what is happening with a build of VisIt that I have been struggling with. The build_script does not find libX11. The fact that I saw the warning when building MOOSE gave me the hint for a related problem with VisIt.\nThanks.",
                          "url": "https://github.com/idaholab/moose/discussions/16524#discussioncomment-220451",
                          "updatedAt": "2023-05-22T04:29:13Z",
                          "publishedAt": "2020-12-17T23:20:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Glad you're able to build successfully now!\nI would guess that the script is likely going with whatever libX11 it finds first, or the location listed first in your PATH. Does it consistently show up in your builds? Or is intermittent?",
                          "url": "https://github.com/idaholab/moose/discussions/16524#discussioncomment-220469",
                          "updatedAt": "2023-05-22T04:29:13Z",
                          "publishedAt": "2020-12-17T23:31:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dealmeidavf"
                          },
                          "bodyText": "It always show. I just had not noticed before because the tests worked. However with the upgrade of python the tests failed and I had to go back look at the compilation messages from moose. Even this last fresh build had the skipping message. I looks like the build script is smart enough to ignore the incompatible library. However not all scripts will do that; I realize this now.\nGood point will check my PATH and make sure lib64 is first; a quick look shows that this may not be the case.\nThanks.",
                          "url": "https://github.com/idaholab/moose/discussions/16524#discussioncomment-220491",
                          "updatedAt": "2023-05-22T04:29:14Z",
                          "publishedAt": "2020-12-17T23:44:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MPI Intel for PETCs",
          "author": {
            "login": "jinca"
          },
          "bodyText": "Hello,\nHave you tried to run MPI Intel with MKL with PETSc? Specially the version 2020.2?\nI got this error:\n\"[0] MPI startup(): I_MPI_OFA_TRANSLATION_CACHE variable has been removed from the product, its value is ignored\"\nThanks in advance,\nJulita Inca",
          "url": "https://github.com/idaholab/moose/discussions/16425",
          "updatedAt": "2022-06-17T07:40:20Z",
          "publishedAt": "2020-12-08T20:12:27Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "Because I have a little background into your other error(s)...\nI think the TestHarness error you mentioned to me, is due to Python 3.8 (possibly). Can you produce the error from one of the 50 that failed?\nThanks!",
                  "url": "https://github.com/idaholab/moose/discussions/16425#discussioncomment-169289",
                  "updatedAt": "2022-07-19T03:15:17Z",
                  "publishedAt": "2020-12-08T21:50:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "We might need to take a look at the libMesh build/configure log. Though I am no expert like @lindsayad. Maybe he doesn't need it...\nStill, would you be able to provide that log? It should be located at:\n/home/yulys/projects/moose/libmesh/build/config.log\n\nThanks!",
                          "url": "https://github.com/idaholab/moose/discussions/16425#discussioncomment-182565",
                          "updatedAt": "2022-07-19T03:15:20Z",
                          "publishedAt": "2020-12-09T23:06:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fdkong"
                  },
                  "bodyText": "Just trying to answer your original question. Yes, PETSc in general work very well with MKL. But in MOOSE, by default, we do not choose to use MKL. You need to specify blaslpack dir to pick up MKL (--with-blas-lib=where/your/MKL and   --with-lapack-lib=where/your/MKL).",
                  "url": "https://github.com/idaholab/moose/discussions/16425#discussioncomment-182663",
                  "updatedAt": "2022-07-19T03:15:20Z",
                  "publishedAt": "2020-12-09T23:50:18Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jinca"
                  },
                  "bodyText": "Thank you for the answers. Apparently is a permission problem\n\n     UNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\n\n\nError running make on PTScotch: Could not execute \"['cd /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src && make clean ptesmumps esmumps']\":\n/usr/bin/mkdir -p ../bin\n/usr/bin/mkdir -p ../include\n/usr/bin/mkdir -p ../lib\n(cd libscotch ;      make clean)\nmake[1]: Entering directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotch' rm -f *~ *.o lib*.a parser_yy.c parser_ly.h parser_ll.c *scotch.h *scotchf.h y.output *dummysizes make[1]: Leaving directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotch'\n(cd scotch ;         make clean)\nmake[1]: Entering directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/scotch' rm -f *~ *.o acpl amk_ccc amk_fft2 amk_grf amk_hy amk_m2 amk_p2 atst gbase gcv *ggath *gmap gmk_hy gmk_m2 gmk_m3 gmk_msh gmk_ub2 gmtst *gord gotst gout *gpart *gscat *gtst mcv mmk_m2 mmk_m3 mord mtst make[1]: Leaving directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/scotch'\n(cd libscotchmetis ; make clean)\nmake[1]: Entering directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotchmetis' rm -f *~ *.o lib*.a metis.h parmetis.h make[1]: Leaving directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/libscotchmetis'\n(cd check ;          make clean)\nmake[1]: Entering directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/check' rm -f *~ *.o make[1]: Leaving directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/check'\n(cd esmumps ;        make clean)\nmake[1]: Entering directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/esmumps' rm -f *~ common.h *.o lib*.a main_esmumps make[1]: Leaving directory /home/ir-inca1/projects/moose/petsc/arch-moose/externalpackages/git.ptscotch/src/esmumps'\n(cd libscotch ;      make VERSION=6 RELEASE=0 PATCHLEVEL=9 scotch && make install)",
                  "url": "https://github.com/idaholab/moose/discussions/16425#discussioncomment-219929",
                  "updatedAt": "2022-06-17T07:40:30Z",
                  "publishedAt": "2020-12-17T19:58:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Could you share \"configure.log\" with us?",
                          "url": "https://github.com/idaholab/moose/discussions/16425#discussioncomment-219969",
                          "updatedAt": "2023-09-21T21:47:58Z",
                          "publishedAt": "2020-12-17T20:08:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jinca"
                          },
                          "bodyText": "Thanks Fande, give me some minutes, I was trying to install it with GCC7 instead of the Intel packages",
                          "url": "https://github.com/idaholab/moose/discussions/16425#discussioncomment-219986",
                          "updatedAt": "2023-09-21T21:47:58Z",
                          "publishedAt": "2020-12-17T20:16:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Yes, if you are using intel compilers, you will be fine with petsc and libmesh, but you might have troubles with moose.\nMOOSE does not support intel compilers anymore. It is better to use GCC",
                          "url": "https://github.com/idaholab/moose/discussions/16425#discussioncomment-219994",
                          "updatedAt": "2023-09-21T21:47:59Z",
                          "publishedAt": "2020-12-17T20:19:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "oprof compile error",
          "author": {
            "login": "hugary1995"
          },
          "bodyText": "Here is the error message. Any ideas?\nLinking Library /home/gary/projects/moose/framework/libmoose-oprof.la...\n/usr/bin/ld: /home/gary/projects/moose/framework/build/unity_src/.libs/src_Unity.x86_64-pc-linux-gnu.oprof.o: unable to initialize decompress status for section .debug_str\n/usr/bin/ld: /home/gary/projects/moose/framework/build/unity_src/.libs/src_Unity.x86_64-pc-linux-gnu.oprof.o: unable to initialize decompress status for section .debug_str\n/usr/bin/ld: /home/gary/projects/moose/framework/build/unity_src/.libs/src_Unity.x86_64-pc-linux-gnu.oprof.o: unable to initialize decompress status for section .debug_str\n/usr/bin/ld: /home/gary/projects/moose/framework/build/unity_src/.libs/src_Unity.x86_64-pc-linux-gnu.oprof.o: unable to initialize decompress status for section .debug_str\n/home/gary/projects/moose/framework/build/unity_src/.libs/src_Unity.x86_64-pc-linux-gnu.oprof.o: file not recognized: File format not recognized\ncollect2: error: ld returned 1 exit status\n/home/gary/projects/moose/framework/moose.mk:310: recipe for target '/home/gary/projects/moose/framework/libmoose-oprof.la' failed\nmake: *** [/home/gary/projects/moose/framework/libmoose-oprof.la] Error 1\nmake: *** Waiting for unfinished jobs....",
          "url": "https://github.com/idaholab/moose/discussions/16518",
          "updatedAt": "2022-08-22T09:20:44Z",
          "publishedAt": "2020-12-16T22:25:00Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Ignore me. I activated the wrong environment.",
                  "url": "https://github.com/idaholab/moose/discussions/16518#discussioncomment-217820",
                  "updatedAt": "2022-08-22T09:20:44Z",
                  "publishedAt": "2020-12-17T01:23:14Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Minor question about automatic_scaling",
          "author": {
            "login": "r-williams-2"
          },
          "bodyText": "Hello,\nJust got a minor question about using automatic_scaling=true in the executioner block.\nI have been using this quite successfully but I wanted to test individual physics to be sure it is working as intended. As such, I have set up a simple 1D diffusion problem with no-flux boundaries (using the grand potential phase-field method). This has one solution variable and a couple of auxiliary variables.\nWithout the use of automatic_scaling, the initial residual is massive and reduces easily with Newton iterations. However, when I use automatic_scaling (as used when solving the coupled problems I am working on) the initial nonlinear residual is very small (in the order of e-18) and is assumed to have already converged according to the nl_rel_tol = nl_abs_tol = 1.0e-8.\nIs there any reason why automatic_scaling would not work on a problem with a single variable? Is it something to do with the auxiliary variables? I am only concerned that when used in the coupled problem with automatic_scaling, the residual for this variable isn't reducing sufficiently to solve the problem correctly. Is the solution to set a lower absolute tolerance on the nonlinear residuals?\nIf you require/desire the input file, please let me know and I can provide this.\nAs always, any help is greatly appreciated!\nKind regards,\nRoss.",
          "url": "https://github.com/idaholab/moose/discussions/16491",
          "updatedAt": "2022-10-04T03:23:19Z",
          "publishedAt": "2020-12-14T17:44:14Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "@lindsayad",
                  "url": "https://github.com/idaholab/moose/discussions/16491#discussioncomment-206438",
                  "updatedAt": "2022-10-04T03:23:21Z",
                  "publishedAt": "2020-12-14T21:33:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "In general we try to discourage use of nl_abs_tol. I am guessing based on your description that you have Dirichlet boundary conditions? If so are you using preset or not? I would highly recommend using preset Dirichlet conditions if you have Dirichlet conditions.\nAnyway one way to ensure that your problem is truly converged is to use ReferenceResidualProblem. Please see this page for more documentation about it.\nMy first suggestion would be to just try ReferenceResidualProblem and see what happens. If you are unable to converge with nl_rel_tol = 1e-8 (remember to remove nl_abs_tol) perhaps because the initial residual is still too \"low\", I would try adding resid_vs_jac_scaling_param = 0.5 to your Executioner block. Doing that will ensure that both residual and Jacobian information is considered when determining the scaling factor. See the NonlinearSystemBase for more information. I would also recommend adding verbose = true to your Executioner block just to see what the scaling factor being computed is, both for the default automatic scaling setting and with the added resid_vs_jac_scaling_param = 0.5 parameter.\nIf you still have issues, please feel free to attach your input file here.",
                  "url": "https://github.com/idaholab/moose/discussions/16491#discussioncomment-210695",
                  "updatedAt": "2022-07-18T15:09:05Z",
                  "publishedAt": "2020-12-15T17:56:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "r-williams-2"
                          },
                          "bodyText": "Noted regarding nl_abs_tol. I'd picked it up from an example problem and kept using it. I do not have any Dirichlet BCs. In the simplified problem, I just have grad(mu)=0 on both boundaries and letting a linear chemical potential profile relax. This will be important towards the end of this post as it is similar to the case with no BCs applied in the mechanical case.\nReferenceResidualProblem is also very useful to know about for when I am using other physics in a coupled model. I'm glad I asked about this now. Thanks for that.\nSo, having tried removing the nl_abs_tol, it seems to work. I think the main issue was the use of nl_abs_tol=1e-8 as the 1D problem only has a single solution variable (so it wasn't other residuals dominating the problem) and there are no fluxes applied on the boundaries (so using the integration of the fluxes instead of the initial residual is probably not useful). When scaled, the initial residual was lower than 1e-8. I think when unscaled, it just wasn't lower than the absolute tolerance and was converging because of the nl_rel_tol. The standard scaling factor was 2.04503e-26 (so you can imagine how even an initial residual of 1e+9 could be small enough to have \"converged\" when only using automatic_scaling=true and nl_abs_tol=1e-8). When I used resid_vs_jac_scaling_param = 0.5, it's only scaled by 9.99547e-18. While this doesn't solve the problem if nl_abs_tol=1e-8, I think this is a better solution moving forward since, as you say, it takes into account the size of the residual and the Jacobian entries.\nNow, coming back to the BCs of grad(mu)=0 and that the problem relaxes to the equilibrium state (so the driving force for evolution vanishes and, consequently, the magnitude of the residual also reduces). I tried initiaising a problem close to equilibrium and did indeed find difficulties in dropping the residual according to nl_rel_tol=1e-8 (managed to get to about 1.1e-8 but increasing the nl_rel_tol only pushes this problem further ahead in simulated time). As per the ReferenceResidualProblem documentation, the only solution I can see for this is to apply a suitably small nl_abs_tol. Is there a good way to identify a physically-reasonable value for this other than separating the physics out like I have done? In this 1D case, I have found that a nl_abs_tol=1e-18 (much smaller than before) works well.\nAs promised, if you want to play about with it to see what I mean, I have attached the input file. If there is a better way to get this to you, just let me know.\nThanks again!\nDiffusion_1D_simplified.zip",
                          "url": "https://github.com/idaholab/moose/discussions/16491#discussioncomment-211994",
                          "updatedAt": "2022-07-18T15:09:05Z",
                          "publishedAt": "2020-12-15T23:29:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "You have a very interesting input. You have single physics (obviously as you said) and no Dirichlet conditions...so actually your condition number is totally independent of your scaling factor. You can test your condition number by passing on the command line -pc_type svd -pc_svd_monitor. Note that you will not want to do this if your number of dofs is much greater than 1000...it takes too much CPU and memory. So yea regardless of scaling factor your condition number is about 4...which is really good. 1 is perfect. 1e16 is when you start running out of double precision.\nAnd even more unique are the conditions you outlined...you just have two terms, the time derivative and diffusion. As t -> infinity both of those terms will go to zero, so with ReferenceResidualProblem given enough time you will not be able to improve 8 orders of magnitude relative to zero. So you have arrived at one of the cases where nl_abs_tol is truly appropriate.\nI have attached an updated input file that uses ReferenceResidualProblem that works well without an absolute tolerance for about 18 time steps, and then it starts running out of precision.\nDiffusion_1D_simplified.txt",
                          "url": "https://github.com/idaholab/moose/discussions/16491#discussioncomment-212329",
                          "updatedAt": "2022-11-07T09:05:13Z",
                          "publishedAt": "2020-12-16T03:09:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "r-williams-2"
                          },
                          "bodyText": "Fantastic. Thanks for that. I think I understand how everything operates.\nThe only other questions that remain are:\n\nIs there a better way of identifying a suitable nl_abs_tol than isolating your physics and using a problem near equilibrium to identify a reasonable value?\nCan I use something similar to ReferenceResidualProblem to set separate nl_abs_tol for the residual for each variable in case they are of different magnitude or should the individual scaling of each residual handle this issue?",
                          "url": "https://github.com/idaholab/moose/discussions/16491#discussioncomment-215031",
                          "updatedAt": "2022-11-07T09:10:33Z",
                          "publishedAt": "2020-12-16T14:23:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "There is another way to avoid using (and guessing) an nl_abs_tol. We have the Executioner/steady_state_detection boolean parameter. If you set that to true then if the solution changes by less than the tolerance ss_check_tol (default is 1e-8), then your simulation is considered to be at a steady-state and your transient solve stops. This is very handy. However, you may still have to set a nl_abs_tol (or loosen the ss_check_tol) because you may run out of precision for nl_rel_tol as you're running up to that steady state. There is no tried and true way I think for determining nl_abs_tol...you kind of have to run your problem and see.\nUnfortunately, it is not currently possible to set an nl_abs_tol for individual variables. I think we may have requests for that feature in the past, but no one has gotten around to implementing it. Feel free to search through our issues, and if we don't have an issue for that yet, please feel free to create one.",
                          "url": "https://github.com/idaholab/moose/discussions/16491#discussioncomment-217023",
                          "updatedAt": "2022-11-07T09:13:47Z",
                          "publishedAt": "2020-12-16T20:06:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "r-williams-2"
                          },
                          "bodyText": "Ahh. Yes. I had forgotten about this. I should probably start using that. I will be sure to keep an eye out for this specific scenario.\nI will have a look for that now.\nOnce again, thanks for all your help on this matter.",
                          "url": "https://github.com/idaholab/moose/discussions/16491#discussioncomment-217391",
                          "updatedAt": "2022-11-07T09:15:18Z",
                          "publishedAt": "2020-12-16T22:08:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "First Time Moose Install Compilation Error",
          "author": {
            "login": "sem1042"
          },
          "bodyText": "I'm trying to install moose on MacOS and when i ran make I got the following error:\n(moose) Sarahs-MacBook-Pro:test smoriarty$ make -j 4\nRebuilding symlinks in /Users/smoriarty/projects/moose/framework/build/header_symlinks\nRebuilding symlinks in /Users/smoriarty/projects/moose/test/build/header_symlinks\nCreating Unity Directory /Users/smoriarty/projects/moose/framework/build/unity_src\nChecking if header needs updating: /Users/smoriarty/projects/moose/framework/include/base/MooseRevision.h...\nCopying default MOOSE configuration to: /Users/smoriarty/projects/moose/framework/include/base/MooseConfig.h...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcrecpp.cc...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_stringpiece.cc...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_compile.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_xclass.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_ucd.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_byte_order.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_jit_compile.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_get.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_exec.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_tables.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_string_utils.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_version.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_study.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_newline.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_refcount.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_maketables.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_config.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_fullinfo.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_dfa_exec.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_globals.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_ord2utf8.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_valid_utf8.c...\nCompiling C (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/pcre/src/pcre_chartables.c...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/gtest/gtest-all.cc...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/hit/parse.cc...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/hit/lex.cc...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/hit/braceexpr.cc...\nBuilding and linking /Users/smoriarty/projects/moose/framework/../python/pyhit/hit.so...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/exodiff/exo_block.C...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/exodiff/exodiff.C...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/exodiff/add_to_log.C...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/exodiff/ED_SystemInterface.C...\nCompiling C++ (in opt mode) /Users/smoriarty/projects/moose/framework/contrib/exodiff/util.C...\nld: unsupported tapi file type '!tapi-tbd' in YAML file '/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/lib/libSystem.tbd' for architecture x86_64\nclang-9: error: linker command failed with exit code 1 (use -v to see invocation)\nmake: *** [/Users/smoriarty/projects/moose/framework/../python/pyhit/hit.so] Error 1\nmake: *** Waiting for unfinished jobs....\n\nDoes anyone know what's going on?",
          "url": "https://github.com/idaholab/moose/discussions/16242",
          "updatedAt": "2022-06-10T18:47:47Z",
          "publishedAt": "2020-11-18T20:34:21Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "Being discussed here: #16123\nEdit: Mistaken for a different issue.",
                  "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-134112",
                  "updatedAt": "2022-06-10T18:47:52Z",
                  "publishedAt": "2020-11-19T18:57:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Delete the apple xcode command line tools brute force first!\nrm -rf `xcode-select -p`\n\nInstall version 11.5 of the apple command line tools from https://developer.apple.com/download/more/",
                  "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-134141",
                  "updatedAt": "2022-06-10T18:48:00Z",
                  "publishedAt": "2020-11-19T19:20:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "FYI this issue will be fixed (and allow updates to CLT / XCode 12) as part of #16295. This is currently a work in progress - it will involve both conda recipe updates as well as a libmesh update.",
                          "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-138081",
                          "updatedAt": "2022-06-10T18:47:58Z",
                          "publishedAt": "2020-11-24T23:00:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Also this isn't exactly the answer if you have XCode installed over CLT...this would just remove the SDK directories within XCode, not XCode itself. In that case, XCode must be fully removed by deleting the app. But if you have only Command Line Tools, then this is fine.",
                          "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-138084",
                          "updatedAt": "2022-06-10T18:47:58Z",
                          "publishedAt": "2020-11-24T23:04:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Yes, @cticenhour is right. I also edited my post: The reboot is not necessary.",
                          "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-145026",
                          "updatedAt": "2022-06-10T18:47:58Z",
                          "publishedAt": "2020-12-02T16:28:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sem1042"
                          },
                          "bodyText": "rm: /Library/Developer/CommandLineTools/Library/Frameworks: Permission denied rm: /Library/Developer/CommandLineTools/Library: Permission denied rm: /Library/Developer/CommandLineTools: Permission denied (moose) Sarahs-MacBook-Pro:~ smoriarty$ /Volumes/Command\\ Line\\ Developer\\ Tools/Command\\ Line\\ Tools.pkg  -bash: /Volumes/Command Line Developer Tools/Command Line Tools.pkg: Permission denied\nI keep getting permission denied notifications when i delete Xcode with brute force. Any ideas why this is happening? Thank you for the guidance, it's much appreciated.\nAlso I'm trying to install the \"Command Line Tools for Xcode 11.5\" correct?",
                          "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-145328",
                          "updatedAt": "2022-12-19T03:20:51Z",
                          "publishedAt": "2020-12-02T20:26:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "This is a permissions issue, since you are trying to modify system files. You need to modify the above command to the following:\nsudo rm -rf `xcode-select -p` \nMacOS will ask for your password in order to temporarily elevate your permissions, and then you should be able to remove it.\n\"Command Line Tools for Xcode 11.5\" is correct.",
                          "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-145377",
                          "updatedAt": "2022-12-19T03:20:51Z",
                          "publishedAt": "2020-12-02T20:50:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sem1042"
                          },
                          "bodyText": "last question, I'm getting the same permission denied error when I try to install the new Xcode. How do I override?",
                          "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-146069",
                          "updatedAt": "2022-12-19T03:20:51Z",
                          "publishedAt": "2020-12-03T14:14:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "After opening the DMG file you get from Apple (it'll load a virtual drive on your desktop that you also open), then you can click on the PKG installer, where MacOS will ask (in graphical form, not on the Terminal) for your permission to install and a password to elevate your permissions. Can you elaborate on how you are installing and what you are seeing?",
                          "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-146114",
                          "updatedAt": "2022-12-19T03:20:51Z",
                          "publishedAt": "2020-12-03T15:06:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sem1042"
                          },
                          "bodyText": "I got it to work, thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-146813",
                          "updatedAt": "2022-12-19T03:20:36Z",
                          "publishedAt": "2020-12-03T23:28:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "MOOSE and our conda package have now been updated to allow for newer versions of XCode and Command Line Tools. If this issue is experienced by others, the answer is now to update MOOSE (https://mooseframework.inl.gov/getting_started/installation/index.html#update) and the conda package to the newest version (activate your moose environment, then conda update --all). Please see the full announcement and instructions to upgrade MOOSE here: https://groups.google.com/g/moose-announce/c/t4ogAXgU26Y\nIf you have any further issues or questions, please feel free to reach out!",
                  "url": "https://github.com/idaholab/moose/discussions/16242#discussioncomment-215206",
                  "updatedAt": "2022-06-10T18:48:01Z",
                  "publishedAt": "2020-12-16T14:46:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "!tapi-tbd error compiling on macOS Catalina, version 10.15.7",
          "author": {
            "login": "mangerij"
          },
          "bodyText": "Hello,\nA friend of mine is compiling MOOSE on macOS Catalina, version 10.15.7. He uses the conda approach to install and gets the following compile error:\nLinking Library /Users/mg/programs/moose/framework/contrib/pcre/libpcre-opt.la...\nLinking Library /Users/mg/programs/moose/framework/contrib/gtest/libgtest.la...\nLinking Library /Users/mg/programs/moose/framework/contrib/hit/libhit-opt.la...\nBuilding and linking /Users/mg/programs/moose/framework/../python/pyhit/hit.so...\nld: unsupported tapi file type '!tapi-tbd' in YAML file '/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/lib/libm.tbd' for architecture x86_64\nclang-9: error: linker command failed with exit code 1 (use -v to see invocation)\nmake: *** [/Users/mg/programs/moose/framework/contrib/gtest/libgtest.la] Error 1\nmake: *** Waiting for unfinished jobs....\nld: unsupported tapi file type '!tapi-tbd' in YAML file '/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/lib/libm.tbd' for architecture x86_64\nclang-9: error: linker command failed with exit code 1 (use -v to see invocation)\nmake: *** [/Users/mg/programs/moose/framework/contrib/hit/libhit-opt.la] Error 1\nld: unsupported tapi file type '!tapi-tbd' in YAML file '/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/lib/libm.tbd' for architecture x86_64\nclang-9: error: linker command failed with exit code 1 (use -v to see invocation)\nmake: *** [/Users/mg/programs/moose/framework/contrib/pcre/libpcre-opt.la] Error 1\nld: unsupported tapi file type '!tapi-tbd' in YAML file '/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/lib/libSystem.tbd' for architecture x86_64\nclang-9: error: linker command failed with exit code 1 (use -v to see invocation)\nmake: *** [/Users/mg/programs/moose/framework/../python/pyhit/hit.so] Error 1\n\nI googled this error and found some suggestions are to update the Xcode library on the Mac. He did so and still gets the problem. I'm not very familiar with compiling on Mac so are there any suggestions here? I'll direct him to this thread if there are any more questions to answer about his machine/build.\nThanks",
          "url": "https://github.com/idaholab/moose/discussions/16353",
          "updatedAt": "2022-06-10T19:44:36Z",
          "publishedAt": "2020-12-01T11:15:26Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "I am working on updating the MOOSE conda packages for compatibility with Xcode / Command Line Tools version 12 that will fix this issue in #16295. In the meantime, your friend needs to downgrade his Command Line Tools to version 11.5. He can do this by performing the following:\n\nRemove the Command Line Tools directory to remove the newer version: sudo rm -rf /Library/Developer/CommandLineTools\nGo to https://www.apple.com/developer/downloads, sign in with your Apple ID, and search for \"Command Line Tools 11.5\"\nDownload the dmg file and install by double-clicking on it and following the prompts.\nRestart your terminal!\nYou should then clean your MOOSE directory. Make sure you have stashed or committed any work you want to save. Then, perform the command git clean -xfd in ~/programs/moose/\nTry building MOOSE again.",
                  "url": "https://github.com/idaholab/moose/discussions/16353#discussioncomment-143851",
                  "updatedAt": "2022-06-10T19:44:44Z",
                  "publishedAt": "2020-12-01T15:20:17Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jerenmb"
                          },
                          "bodyText": "I had the same issue and this solved the problem. Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/16353#discussioncomment-182049",
                          "updatedAt": "2022-06-10T19:44:47Z",
                          "publishedAt": "2020-12-09T21:37:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "@mangerij @jerenmb The updates to MOOSE and our conda package that fix this issue have been merged into MOOSE master. You should feel free to update your Xcode and/or Command Line Tools after performing these updates. See the announcement here: https://groups.google.com/g/moose-announce/c/t4ogAXgU26Y\nIf you have any further issues, please feel free to reach out.",
                          "url": "https://github.com/idaholab/moose/discussions/16353#discussioncomment-215152",
                          "updatedAt": "2022-06-10T19:45:06Z",
                          "publishedAt": "2020-12-16T14:42:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Kernel error in Crow app",
          "author": {
            "login": "Giovar6"
          },
          "bodyText": "Hello Moose community,\nI would like to introduce myself first. I am Giovanni and come form Italy. Currently I am working on metal sintering, and in particular on solid state metal sintering simulation.\nI've found that Sudipta Biswas has already done something similar on moose with the Crow application (https://github.com/SudiptaBiswas/Crow). I see that a noticeable work has been done and I would like to start from these applications to develop my project. I have copied the following input file in my own application and also the other objects necessary to run correctly this application.\nHere is the input file:\n[GlobalParams]\n  var_name_base = gr\n  op_num = 2.0\n  int_width = 2.0\n  #en_ratio = 1\n[]\n\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 80\n  ny = 40\n  nz = 0\n  xmin = 0.0\n  xmax = 40.0\n  ymin = 0.0\n  ymax = 20.0\n  zmax = 0\n  elem_type = QUAD4\n[]\n\n[Variables]\n  [./c]\n    #scaling = 10\n  [../]\n  [./w]\n  [../]\n  [./PolycrystalVariables]\n  [../]\n[]\n\n[ICs]\n  [./ic_gr1]\n    int_width = 2.0\n    x1 = 25.0\n    y1 = 10.0\n    radius = 7.4\n    outvalue = 0.0\n    variable = gr1\n    invalue = 1.0\n    type = SmoothCircleIC\n  [../]\n  [./multip]\n    x_positions = '10.0 25.0'\n    int_width = 2.0\n    z_positions = '0 0'\n    y_positions = '10.0 10.0 '\n    radii = '7.4 7.4'\n    3D_spheres = false\n    outvalue = 0.001\n    variable = c\n    invalue = 0.999\n    type = SpecifiedSmoothCircleIC\n    block = 0\n  [../]\n  [./ic_gr0]\n    int_width = 2.0\n    x1 = 10.0\n    y1 = 10.0\n    radius = 7.4\n    outvalue = 0.0\n    variable = gr0\n    invalue = 1.0\n    type = SmoothCircleIC\n  [../]\n[]\n\n[AuxVariables]\n  [./bnds]\n  [../]\n  [./total_en]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./unique_grains]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./var_indices]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./centroids]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n\n[Kernels]\n  [./cres]\n    type = SplitCHParsed\n    variable = c\n    kappa_name = kappa_c\n    w = w\n    f_name = F\n    args = 'gr0 gr1'\n  [../]\n  [./wres]\n    type = SplitCHWRes\n    variable = w\n    mob_name = D\n  [../]\n  [./time]\n    type = CoupledTimeDerivative\n    variable = w\n    v = c\n  [../]\n  [./PolycrystalSinteringKernel]\n    c = c\n    consider_rigidbodymotion = false\n    anisotropic = false\n    grain_force = grain_force\n    grain_tracker_object = grain_center\n    grain_volumes = grain_volumes\n    translation_constant = 10.0\n    rotation_constant = 1.0\n  [../]\n[]\n\n[AuxKernels]\n  [./bnds]\n    type = BndsCalcAux\n    variable = bnds\n    v = 'gr0 gr1'\n  [../]\n  [./Total_en]\n    type = TotalFreeEnergy\n    variable = total_en\n    kappa_names = 'kappa_c kappa_op kappa_op'\n    interfacial_vars = 'c  gr0 gr1'\n  [../]\n  [./unique_grains]\n    type = FeatureFloodCountAux\n    variable = unique_grains\n    flood_counter = grain_center\n    field_display = UNIQUE_REGION\n    execute_on = timestep_begin\n  [../]\n  [./var_indices]\n    type = FeatureFloodCountAux\n    variable = var_indices\n    flood_counter = grain_center\n    field_display = VARIABLE_COLORING\n    execute_on = timestep_begin\n  [../]\n  [./centroids]\n    type = FeatureFloodCountAux\n    variable = centroids\n    execute_on = timestep_begin\n    field_display = CENTROID\n    flood_counter = grain_center\n  [../]\n[]\n\n[BCs]\n   [./flux]\n     type = CahnHilliardFluxBC\n     variable = w\n     boundary = 'top bottom left right'\n     flux = '0 0 0'\n     mob_name = D\n     args = 'c'\n   [../]\n[]\n\n[Functions]\n  [./load]\n    type = ConstantFunction\n    value = 0.01\n  [../]\n[]\n\n[Materials]\n  [./free_energy]\n    type = SinteringFreeEnergy\n    block = 0\n    c = c\n    v = 'gr0 gr1'\n    f_name = S\n    derivative_order = 2\n    outputs = console\n  [../]\n  [./CH_mat]\n    type = PFDiffusionGrowth\n    block = 0\n    rho = c\n    v = 'gr0 gr1'\n    outputs = console\n  [../]\n  [./constant_mat]\n    type = GenericConstantMaterial\n    block = 0\n    prop_names = '  A    B   L   kappa_op kappa_c'\n    prop_values = '16.0 1.0 1.0  0.5      1.0    '\n  [../]\n[]\n\n[VectorPostprocessors]\n  [./grain_volumes]\n    type = FeatureVolumeVectorPostprocessor\n    flood_counter = grain_center\n    execute_on = 'initial timestep_begin'\n  [../]\n[]\n\n[UserObjects]\n  [./grain_center]\n    type = GrainTracker\n    outputs = none\n    compute_var_to_feature_map = true\n    execute_on = 'initial timestep_begin'\n  [../]\n[]\n\n[Postprocessors]\n  [./elem_c]\n    type = ElementIntegralVariablePostprocessor\n    variable = c\n  [../]\n  [./elem_bnds]\n    type = ElementIntegralVariablePostprocessor\n    variable = bnds\n  [../]\n  [./total_energy]\n    type = ElementIntegralVariablePostprocessor\n    variable = total_en\n  [../]\n  [./free_en]\n    type = ElementIntegralMaterialProperty\n    mat_prop = F\n  [../]\n  [./dofs]\n    type = NumDOFs\n    system = 'NL'\n  [../]\n  [./tstep]\n    type = TimestepSize\n  [../]\n   [./run_time]\n    type = RunTime\n    time_type = active\n   [../]\n  [./int_area]\n    type = InterfaceAreaPostprocessor\n    variable = c\n  [../]\n  [./grain_size_gr0]\n    type = ElementIntegralVariablePostprocessor\n    variable = gr0\n  [../]\n  [./grain_size_gr1]\n    type = ElementIntegralVariablePostprocessor\n    variable = gr1\n  [../]\n  [./gb_area]\n    type = GrainBoundaryArea\n  [../]\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    coupled_groups = 'c,w c,gr0,gr1 '\n  [../]\n[]\n\n[Executioner]\n   Preconditioned JFNK (default)\n  type = Transient\n  scheme = BDF2\n  solve_type = NEWTON\n  petsc_options_iname = '-pc_type -ksp_grmres_restart -sub_ksp_type -sub_pc_type -pc_asm_overlap'\n  petsc_options_value = 'asm         31   preonly   lu      1'\n  l_max_its = 20\n  nl_max_its = 20\n  nl_abs_tol = 1e-10\n  nl_rel_tol = 1e-08\n  l_tol = 1e-04\n  end_time = 20\n  #dt = 0.01\n  [./TimeStepper]\n    type = IterationAdaptiveDT\n    dt = 0.01\n    growth_factor = 1.2\n  [../]\n[]\n\n[Adaptivity]\n  marker = bound_adapt\n  max_h_level = 2\n  [./Indicators]\n    [./error]\n      type = GradientJumpIndicator\n      variable = bnds\n    [../]\n  [../]\n  [./Markers]\n    [./bound_adapt]\n      type = ValueRangeMarker\n      lower_bound = 0.01\n      upper_bound = 0.99\n      variable = bnds\n    [../]\n  [../]\n[]\n\n[Outputs]\n  print_linear_residuals = true\n  csv = true\n  gnuplot = true\n  perf_graph = true\n  [./console]\n    type = Console\n    PerfGraphOutput = true\n  [../]\n  [./exodus]\n    type = Exodus\n    elemental_as_nodal = true\n  [../]\n[]\n\n[Debug]\n  show_var_residual_norms = true\n[]\n\nbut when I run this input file with peacock i get this error:\nWARNING\nError producing mesh: '/home/giovanni/projects/lucky/lucky-opt -i /home/giovanni/projects/lucky/problems/peacock_run_mesh_tmp.i --mesh-only /home/giovanni/projects/lucky/problems/peacock_run_mesh_tmp_Sintering.e --allow-test-objects' exited with non zero status 1.\nPlease make sure your application is built and able to execute the given arguments.\nWorking dir: /home/giovanni/projects/lucky/problems\nOutput:\n*** ERROR ***\n/home/giovanni/projects/lucky/problems/peacock_run_mesh_tmp.i:108: missing required parameter 'Kernels/PolycrystalSinteringKernel/type'\n\tDoc String: \"A string representing the Moose Object that will be built by this Action\"\n\n\nStack frames: 16\n0: libMesh::print_trace(std::ostream&)\n1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\n2: void mooseError<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)\n3: InputParameters::checkParams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n4: ActionFactory::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, InputParameters&)\n5: Parser::walkRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, hit::Node*)\n6: Parser::walk(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, hit::Node*)\n7: hit::Node::walk(hit::Walker*, hit::NodeType)\n8: hit::Node::walk(hit::Walker*, hit::NodeType)\n9: hit::Node::walk(hit::Walker*, hit::NodeType)\n10: Parser::parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n11: MooseApp::setupOptions()\n12: MooseApp::run()\n13: /home/giovanni/projects/lucky/lucky-opt(+0x51d1) [0x55ccce13e1d1]\n14: __libc_start_main\n15: /home/giovanni/projects/lucky/lucky-opt(+0x54af) [0x55ccce13e4af]\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\n\nExodus filenames: ['peacock_run_exe_tmp_Sintering_exodus.e']\nPostprocessor filenames: ['peacock_run_exe_tmp_Sintering_out.csv']\nVectorPostprocessor filenames: ['peacock_run_exe_tmp_Sintering_out_grain_volumes_*.csv']\nRunning command: /home/giovanni/projects/lucky/lucky-opt Outputs/csv=true -i peacock_run_exe_tmp_Sintering.i\nWorking directory: /home/giovanni/projects/lucky/problems\nFinished: Exit code: 1\n\nNow, according to the error description I should specify the type of PolycrystalSinteringKernel, but in the original input file it was not specified and the simulation runs correctly. I would like to precise that the application is correctly compiled and that I have performed a successful test.\nCan anyone please explain where I am wrong, if possible?\nProbably is a stupid question, but I am at my beginning with moose and not everything is clear.\nThank you in advance for your answer.",
          "url": "https://github.com/idaholab/moose/discussions/16408",
          "updatedAt": "2022-08-26T17:28:27Z",
          "publishedAt": "2020-12-07T16:00:36Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "permcody"
                  },
                  "bodyText": "I would suggest you start by just cloning that repository directly and making sure that you can build and run from it. It appears that the \"devel\" branch is reasonably current, but if you pulled from \"master\" or one of the other branches the source is going to be very out of date. Did you copy from \"devel\"?\nTo get a little closer to answering your question though, the problem is likely to do with registration of that sintering \"Action\". This is custom syntax that creates multiple objects with one block but since it's not registered in your application properly, MOOSE thinks you are just adding in some \"single\" kernel and made a syntax error (e.g. \"type\" is required in most basic input blocks and usually corresponds to the same named C++ source file). See if you get get her app working directly, then you can start moving things over. The other alternative would be to work with her directly and add to her application. She may be willing to collaborate with you directly in that application.",
                  "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-157826",
                  "updatedAt": "2022-08-26T17:29:09Z",
                  "publishedAt": "2020-12-07T18:15:51Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Giovar6"
                          },
                          "bodyText": "Hello and thank you for your fast reply.\nTo answer your question, I have directly forked the devel branch of the crow application and I was able to build perfectly. I was also able to run the code properly, from the devel branch of the Crow application.\nI believe you identified the problem. How can I make MOOSE understand that this is not a \"single\" kernel? How can I properly define this Action?\nThank you for your answer!",
                          "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-162963",
                          "updatedAt": "2022-08-26T17:29:11Z",
                          "publishedAt": "2020-12-08T09:11:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "permcody"
                          },
                          "bodyText": "Registering new syntax is one of the few things that does not occur right in the new object source file. It occurs in the main application: https://github.com/SudiptaBiswas/Crow/blob/7402c20b48166c7f75392ba9b2101e8043c01fdc/src/base/CrowApp.C#L32-L33\nWhile you are looking at the \"App\" take note of the other things that occur here (i.e. the registration of the required modules and other application dependencies). If you follow this pattern in your application you should be up and running.",
                          "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-163938",
                          "updatedAt": "2022-08-26T17:29:13Z",
                          "publishedAt": "2020-12-08T16:54:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Giovar6"
                          },
                          "bodyText": "Thank you for your answer.\nI've tried to follow your suggestions, but still was not able to run. I want to attempt something else. If not able to run I will write again.",
                          "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-205621",
                          "updatedAt": "2022-08-26T17:31:02Z",
                          "publishedAt": "2020-12-14T17:16:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Tagging @SudiptaBiswas",
                  "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-158948",
                  "updatedAt": "2022-08-26T17:57:19Z",
                  "publishedAt": "2020-12-07T18:27:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Giovar6"
                          },
                          "bodyText": "Thank you for your answer and for tagging Sudipta Biswas",
                          "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-162964",
                          "updatedAt": "2022-08-26T17:57:25Z",
                          "publishedAt": "2020-12-08T09:12:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SudiptaBiswas"
                          },
                          "bodyText": "Something amiss with my GitHub settings. I did not get a notification even after being tagged. @Giovar6 were you able to run this with peacock?",
                          "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-182377",
                          "updatedAt": "2022-08-26T17:57:25Z",
                          "publishedAt": "2020-12-09T22:40:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Giovar6"
                          },
                          "bodyText": "Hi @SudiptaBiswas. Yes, if I run the input file from the forked devel branch of your project I am able to run with peacock. If I copy the input file and the objects required by it in my project I am not able to run. I believe the suggestions of @permcody should help me to solve the problems, but still was not able to run.\nThank you for your interest",
                          "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-205629",
                          "updatedAt": "2022-08-26T17:57:26Z",
                          "publishedAt": "2020-12-14T17:20:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SudiptaBiswas"
                          },
                          "bodyText": "By your project do you mean, you have another MOOSE based application? If so, I would recommend coupling the applications rather than copying the files over. I could help you with that if needed.",
                          "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-206534",
                          "updatedAt": "2022-08-26T17:57:27Z",
                          "publishedAt": "2020-12-14T22:21:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Giovar6"
                          },
                          "bodyText": "Hi, yes I mean that I have copied the input file and other objects in my application. Thank you for your support. I would be very grateful for your support to couple the applications.",
                          "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-207714",
                          "updatedAt": "2022-08-26T17:57:45Z",
                          "publishedAt": "2020-12-15T08:17:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Giovar6"
                  },
                  "bodyText": "Hi all, And thank you for the support. Today I've tried again to follow the suggestions of @permcody and finally I was able to run the input file of the Crow app within my application. To solve the problem I've copied and edited to fit my application. the CrowApp.C and CrowApp.h files.",
                  "url": "https://github.com/idaholab/moose/discussions/16408#discussioncomment-214929",
                  "updatedAt": "2022-08-26T17:57:46Z",
                  "publishedAt": "2020-12-16T13:59:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Permission Denied Error whenever Create/Edit/Save Files using Atom - Windows Subsystem for Linux - WSL 1",
          "author": {
            "login": "hyeom-wisc"
          },
          "bodyText": "Hello,\nI have worked on tutorial #1 and moved forward by your help. Thanks a lot.\nOne thing I noticed was that there has been \"Permission denied\" error whenever I created, edited, and saved input files and source codes using ATOM. So far, I have provided the permission to each file using \"chmod +rw\" command manually. As you expected, it is time consuming. Is there any way to give the permission to files created/modified by ATOM easily?\nSincerely,\nSung",
          "url": "https://github.com/idaholab/moose/discussions/16459",
          "updatedAt": "2022-11-24T17:52:45Z",
          "publishedAt": "2020-12-10T22:18:45Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "The first thing that comes to my mind - do you launch atom using sudo? If opened as root, even once, a given file (or project directory) could have screwed up permissions like this. Changing a single file back to the proper permissions wouldn't fix an entire directory tree that is screwed up in this way.\nAlternatively, do you install packages using the apm install command on the command line? This is mentioned in the Atom Editor Setup page on the MOOSE website. I am wondering if you accidentally used sudo apm install which might have screwed up permissions in your Atom installation, and is spilling down to what you edit using it. Though that's a bit more far-fetched, perhaps.",
                  "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-189265",
                  "updatedAt": "2023-02-13T12:31:46Z",
                  "publishedAt": "2020-12-10T22:44:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "One more thing to add in general....In normal Atom usage, you should never need to mess with permissions on files that you have created or downloaded. So this is definitely a-typical.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-189266",
                          "updatedAt": "2023-03-02T13:42:13Z",
                          "publishedAt": "2020-12-10T22:45:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "Casey,\nThank you for the quick response. Only thing I did once I installed ATOM is to create files and save in directories of interest. Honestly, I cannot understand the Atom Editor Setup page. I was stuck even in the first step. Do I need to do everything shown on the page?\nSung",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-189285",
                          "updatedAt": "2023-03-02T13:42:13Z",
                          "publishedAt": "2020-12-10T22:53:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Only if you want to - plenty of developers use Atom without language and development plug-ins, which is what that page is discussing. Feel free to ask a question about that as well if you are confused.\nMy next question is then: how do you launch Atom? Graphically (by clicking on it) or through the Terminal?",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-189292",
                          "updatedAt": "2023-03-02T13:42:13Z",
                          "publishedAt": "2020-12-10T22:56:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "Thank you. It seems I need some help on this. I just downloaded/installed Atom from the website and click the icon to run Atom in Window. I created files (input files, source codes) using Atom and saved in directories. And then I ran the files in Moose framework using Ubuntu terminal. This time I saw the error messages and changed the permission one by one. I don't think this is typical.\nSung",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-189313",
                          "updatedAt": "2023-03-02T13:43:12Z",
                          "publishedAt": "2020-12-10T23:03:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Do you store your source code and input files within a MOOSE app that you created? If so, could you give the output of ls -la when you cd to that location in your Terminal? I am wondering now if it's not Atom at all, but how that application was made in the first place.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-189444",
                          "updatedAt": "2023-02-13T13:01:57Z",
                          "publishedAt": "2020-12-10T23:22:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "Please see the output in the terminal when I typed ls -la in the MOOSE app.\n(moose) hyeom@ERB914-7920:~$ ls -la\ntotal 90900\ndrwxr-xr-x 1 hyeom hyeom     4096 Dec 10 15:33 .\ndrwxr-xr-x 1 root  root      4096 Nov 16 16:00 ..\n-rw------- 1 hyeom hyeom    14453 Dec 10 16:46 .bash_history\n-rw-r--r-- 1 hyeom hyeom      220 Nov 16 16:00 .bash_logout\n-rw-r--r-- 1 hyeom hyeom     4331 Nov 27 10:57 .bashrc\ndrwxr-xr-x 1 hyeom hyeom     4096 Nov 27 11:13 .cache\ndrwxr-xr-x 1 hyeom hyeom     4096 Nov 16 16:16 .conda\n-rw-r--r-- 1 hyeom hyeom       52 Nov 23 10:35 .condarc\ndrwxr-xr-x 1 hyeom hyeom     4096 Nov 27 11:13 .config\n-rw-r--r-- 1 hyeom hyeom       26 Nov 24 12:23 .gitconfig\ndrwxr-xr-x 1 hyeom hyeom     4096 Nov 16 16:02 .landscape\ndrwxr-xr-x 1 hyeom hyeom     4096 Dec  7 10:26 .local\n-rw-r--r-- 1 hyeom hyeom        0 Dec 11 09:16 .motd_shown\n-rw-r--r-- 1 hyeom hyeom      807 Nov 16 16:00 .profile\ndrwx------ 1 hyeom hyeom     4096 Nov 28 15:14 .ssh\n-rw-r--r-- 1 hyeom hyeom        0 Nov 16 16:04 .sudo_as_admin_successful\n-rw-r--r-- 1 hyeom hyeom      478 Nov 16 16:36 .zshrc\n-rw-r--r-- 1 hyeom hyeom 93052469 Nov 16 16:31 Miniconda3-latest-Linux-x86_64.sh\ndrwxr-xr-x 1 hyeom hyeom     4096 Nov 16 16:16 miniconda3\ndrwxr-xr-x 1 hyeom hyeom     4096 Dec  7 09:39 projects",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-194100",
                          "updatedAt": "2023-02-13T13:01:57Z",
                          "publishedAt": "2020-12-11T15:20:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Thank you for the output. Instead of the home directory (~), I wanted you to run this in your projects directory (or even in the application you've been developing within projects). so cd ~/projects and then ls -la. But I do see something interesting here in your home directory. You do have a .sudo_as_admin_successful file dated on November 16th, around the same time you installed conda. This file is created after using sudo so that the system knows not to show a bunch of warnings about the dangers of sudo to you after you've used the command once. I am still wondering if this is a general permissions issue that you only see when using Atom. Could you give me that second set of Terminal output in your projects directory?",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195236",
                          "updatedAt": "2023-02-13T13:01:57Z",
                          "publishedAt": "2020-12-11T16:36:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "One more question - did you use sudo to install Miniconda?",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195238",
                          "updatedAt": "2023-02-13T13:01:57Z",
                          "publishedAt": "2020-12-11T16:37:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "Please check the outputs when I typed ls -la in projects folder and my application folder. I don't remember I used sudo for Miniconda.\n(moose) hyeom@ERB914-7920:~/projects$ ls -la\ntotal 0\ndrwxr-xr-x 1 hyeom hyeom 4096 Dec  7 09:39 .\ndrwxr-xr-x 1 hyeom hyeom 4096 Dec 11 10:08 ..\ndrwxr-xr-x 1 hyeom hyeom 4096 Dec  7 10:05 babbler\ndrwxr-xr-x 1 hyeom hyeom 4096 Dec 10 15:59 babbler2\ndrwxr-xr-x 1 hyeom hyeom 4096 Nov 24 11:58 hyeom\ndrwxr-xr-x 1 hyeom hyeom 4096 Nov 16 16:47 moose\ndrwxr-xr-x 1 hyeom hyeom 4096 Nov 28 14:03 practice\ndrwxr-xr-x 1 hyeom hyeom 4096 Nov 17 16:49 your_app_name\n(moose) hyeom@ERB914-7920:~/projects/babbler2$ ls -la\ntotal 476\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec 10 15:59 .\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 09:39 ..\n-rw-r--r-- 1 hyeom hyeom    738 Dec  7 09:39 .clang-format\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec 11 10:21 .git\n-rw-r--r-- 1 hyeom hyeom   3266 Dec  7 09:39 .gitignore\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 09:45 .libs\n-rw-r--r-- 1 hyeom hyeom   7848 Dec  7 09:46 .previous_test_results.json\n-rw-r--r-- 1 hyeom hyeom  26530 Dec  7 09:39 LICENSE\n-rw-r--r-- 1 hyeom hyeom   2061 Dec  7 09:39 Makefile\n-rw-r--r-- 1 hyeom hyeom    196 Dec  7 09:56 README.md\n-rwxr-xr-x 1 hyeom hyeom 435696 Dec 10 15:59 babbler2-opt\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 12:05 build\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 09:39 doc\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 11:59 include\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec 10 15:59 lib\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 12:22 problems\n-rwxr-xr-x 1 hyeom hyeom    471 Dec  7 09:39 run_tests\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 09:39 scripts\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec 10 15:56 src\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 09:45 test\n-rw-r--r-- 1 hyeom hyeom     87 Dec  7 09:39 testroot\ndrwxr-xr-x 1 hyeom hyeom   4096 Dec  7 09:39 unit",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195251",
                          "updatedAt": "2023-02-13T13:01:58Z",
                          "publishedAt": "2020-12-11T16:41:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "If you need a quick fix I reckon you should un-install and re-install Atom.\nAvoid using sudo in that process.",
                  "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-190142",
                  "updatedAt": "2023-03-02T13:43:43Z",
                  "publishedAt": "2020-12-11T01:43:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "I have uninstalled Atom and reinstalled it. I tried to set up Atom with following steps shown in the instruction. https://mooseframework.inl.gov/help/development/Atom_Editor.html\nHowever, there was error in the section for Source navigation with rtags. Anyway, I made a new input file using Atom and I still see the same permission denied error in the terminal.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195211",
                          "updatedAt": "2020-12-11T16:25:32Z",
                          "publishedAt": "2020-12-11T16:25:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Yeah, installing Atom with sudo cannot cause this issue. Where are you saving your input file to? This must be a file system permission issue. You've shown us the listing of your home directory, but are you actually saving to that location?",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195242",
                          "updatedAt": "2020-12-11T16:38:48Z",
                          "publishedAt": "2020-12-11T16:38:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "I have saved files created in Atom under the folder as follows:\nC:\\Users\\hyeom\\AppData\\Local\\Packages\\CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\hyeom\\projects\nI had the same permission issue when I ran git commands (e.g., git status). That time I provided the permission manually again.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195266",
                          "updatedAt": "2020-12-11T16:47:02Z",
                          "publishedAt": "2020-12-11T16:47:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Are you editing these files in Windows and then running them in your WSL Ubuntu instance?",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195278",
                          "updatedAt": "2020-12-11T16:51:10Z",
                          "publishedAt": "2020-12-11T16:51:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "I didn't edit the files in Windows file explorer (I check the directory, yes) but edited through Ubuntu Terminal and Atom.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195289",
                          "updatedAt": "2020-12-11T16:54:28Z",
                          "publishedAt": "2020-12-11T16:54:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "By editing I was referring to Atom - do you have Atom installed in Windows, launch it in Windows, and are using it to edit inside of your projects directory? This could be causing the permissions issue you describe. Windows Subsystem for Linux generally doesn't handle that well.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195321",
                          "updatedAt": "2020-12-11T17:05:50Z",
                          "publishedAt": "2020-12-11T17:05:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "Yes. I installed and ran Atom in Windows. I found and opened the files in the Windows directory having applications. What is the correct way to access or save the files through Atom? When I created a new file using Atom, I needed to convert the file using dos2unix command.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195384",
                          "updatedAt": "2020-12-11T17:10:14Z",
                          "publishedAt": "2020-12-11T17:10:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "It is not recommended to use Atom in this way on Windows with WSL Ubuntu, because of the issues you describe. Windows does a poor job handling permissions and translating between the two OS instances (as you've discovered). I would recommend that you don't use Atom for your WSL development, and use something like vim, emacs, or nano, which you can install natively inside of your Ubuntu installation. These do have a tiny learning curve and involve working in a Terminal over having a graphical environment.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195408",
                          "updatedAt": "2020-12-11T17:16:18Z",
                          "publishedAt": "2020-12-11T17:16:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "Thank you so much for the recommendation. Can you suggest any link or training website for me to start the text editors?",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195419",
                          "updatedAt": "2020-12-11T17:20:04Z",
                          "publishedAt": "2020-12-11T17:20:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Of course, you can continue to use Atom and perform the conversions and permissions changes as you're doing. But, there is currently no way to guarantee a \"clean\" experience using Atom in Windows with Ubuntu in WSL.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-195421",
                          "updatedAt": "2020-12-11T17:20:29Z",
                          "publishedAt": "2020-12-11T17:20:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "For those who come across this later, the answer to this issue was that Atom in Windows was being used to edit files within Windows Subsystem for Linux. Windows does not do a great job handling the transition between the two OS environments and often causes issues related to corrupted files, file permissions, or other incompatibilities. Therefore, it is recommended that a Linux native editor is used. We recommend vim and emacs since many members of the MOOSE development ecosystem use these, as well as other lightweight editors like nano. Tutorials for vim can be found in the threads in this discussion, as well as via a Google search.",
                  "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-196333",
                  "updatedAt": "2023-03-20T06:52:53Z",
                  "publishedAt": "2020-12-11T18:07:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "No @cticenhour , see below.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-196554",
                          "updatedAt": "2023-03-20T06:52:53Z",
                          "publishedAt": "2020-12-11T18:23:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "I have no knowledge of WSL2, so thanks for the additional information @dschwen :)\nThis answer would still apply for WSL1 users though.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-196686",
                          "updatedAt": "2023-03-20T06:52:53Z",
                          "publishedAt": "2020-12-11T18:27:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "The solution is to use WSL2 and access files through a virtual network share located at \\\\wsl$\\distribution\\path. I have gone through the effort of enabling autocompletion with native Atom on Windows with WSL2 based MOOSE installations.",
                  "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-196659",
                  "updatedAt": "2023-03-20T06:52:53Z",
                  "publishedAt": "2020-12-11T18:24:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-196662",
                          "updatedAt": "2023-03-20T06:52:53Z",
                          "publishedAt": "2020-12-11T18:26:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "From our FY 2020 report:\n\nWSL2 promised better performance and we investigated building MOOSE and MOOSE-based applications on this improved system. Besides having to build the MPI mpich2 from scratch, we were able to follow the Linux build instructions very closely and ended up with fully featured MOOSE app executables.\nTo improve the user experience, the MOOSE integration for autocompletion[2] in the Atom editor[3] was improved to work on Windows allowing the native Windows version of Atom to be used to edit files inside the WSL2 container. WSL2 files are made available in Windows through a virtual network share located at \\\\wsl$\\distribution\\path. The moose-autocomplete plugin for Atom obtains a description of valid application syntax by running a MOOSE app using the --json commandline switch. This causes the app to output JSON data describing all valid parameters for all available objects for the given app \u2014 rather than statically supplying a syntax description which would quickly go out of date as soon as objects in a MOOSE-based application are added or modified.\nThe MOOSE-autocomplete plugin detects whenever a file is located within a WSL2 container and uses the Windows wsl command to discover and execute a MOOSE app executable within the WSL2 container. The entire process is seamless to the user. Figure 6.2 shows a screenshot of a native Atom editor being used to edit a MOOSE inputfile within a WSL2 container with working autocompletion. We believe WSL2 to be a suitable avenue for making MOOSE available on Windows systems as it very closely maps to our current Linux based testing and development infrastructure.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-196768",
                          "updatedAt": "2023-03-20T06:52:53Z",
                          "publishedAt": "2020-12-11T18:27:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "We really should integrate this into our current documentation for Windows 10, especially since users can still choose WSL1 or WSL2.",
                          "url": "https://github.com/idaholab/moose/discussions/16459#discussioncomment-196875",
                          "updatedAt": "2023-03-20T06:54:05Z",
                          "publishedAt": "2020-12-11T18:41:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Some questions about grain_growth_3D.i",
          "author": {
            "login": "PengWei97"
          },
          "bodyText": "Dear MOOSE experts,\nRecently, I am studying the grain growth model in the phase field. Based on the input file grain_growth_3D.i, I have some questions and hope to get your guidance and corrections.\nThe following is my understanding and confusion,\nFirst of all, why is there no BCs block in grain_growth_3D.i?\nSecond, in AuxVariables and AuxKernels, apart from bnds,I do not understand what other auxiliary variables and kernels are used for? in other words:\n\nIn AuxVariables, what are the meanings of unique_grains, var_indices, ghost_regions, and halos and what are their functions?\nIn AuxKernels, what are the functions implemented by flood_counter = grain_tracker and flood_counter = voronoi? I did not find the relevant option in FeatureFloodCountAux.\nWhat does field_display = VARIABLE_COLORING mean in AuxKernels? Other options such as: What do VARIABLE_COLORING and GHOSTED_ENTITIES mean?\n[AuxKernels] [./var_indices] type = FeatureFloodCountAux variable = var_indices flood_counter = grain_tracker field_display = VARIABLE_COLORING execute_on = 'initial timestep_end' [../] ...\n\nFinally, the input file input is a *_out.e file, but the multiple input files output in grain_growth_2D_voronoi.i, what input code determines the extension of the .e result file input one or more?\nAny suggestions or recommendations to fix these problems would be greatly appreciated.\nThank you\nWei Peng",
          "url": "https://github.com/idaholab/moose/discussions/16473",
          "updatedAt": "2022-10-31T04:45:13Z",
          "publishedAt": "2020-12-12T14:10:33Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "For FEM, if boundary condition is not specified, it implies a homogeneous Neumann boundary condition, i.e. flux = 0.\n\n\nYour second question is related to grain tracker, and you can find more information on  https://mooseframework.inl.gov/source/postprocessors/GrainTracker.html#!\n\n\nThe input file should always be .i file, and *_out.e are the output file that can be visualized in Paraview or Peacock.",
                  "url": "https://github.com/idaholab/moose/discussions/16473#discussioncomment-200424",
                  "updatedAt": "2022-10-31T04:45:19Z",
                  "publishedAt": "2020-12-12T17:27:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Thank you for your answers. For the third question, I may not have made it clear. After the grain_growth_3D.i simulation is completed, only one out.e file is generated. However, grain_growth_2D_voronoi.i simulation generated hundreds of out.e files. So my question is what code in the input file affects the generation of one or more out.e files?",
                          "url": "https://github.com/idaholab/moose/discussions/16473#discussioncomment-202265",
                          "updatedAt": "2022-10-31T04:45:32Z",
                          "publishedAt": "2020-12-13T11:58:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SudiptaBiswas"
                          },
                          "bodyText": "Multiple output files are generated when the adaptive mesh is used. With adaptivity, every time the mesh is changed it creates a new output file.",
                          "url": "https://github.com/idaholab/moose/discussions/16473#discussioncomment-202939",
                          "updatedAt": "2022-10-31T04:45:32Z",
                          "publishedAt": "2020-12-13T18:26:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Ok,thanks for your answers.",
                          "url": "https://github.com/idaholab/moose/discussions/16473#discussioncomment-208372",
                          "updatedAt": "2022-10-31T04:45:36Z",
                          "publishedAt": "2020-12-15T13:13:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "permcody"
                          },
                          "bodyText": "Stacking lots of questions into a single post may mean you don't get satisfactory answers to every question. Let us know if you have others that weren't answered here.",
                          "url": "https://github.com/idaholab/moose/discussions/16473#discussioncomment-210645",
                          "updatedAt": "2022-10-31T04:45:42Z",
                          "publishedAt": "2020-12-15T17:41:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Moose verbosity for multiapp initialization and tranfer steps",
          "author": {
            "login": "helen-brooks"
          },
          "bodyText": "I've noticed that although it is possible to turn off console output for apps and sub apps, MOOSE is still pretty verbose when it comes to multiapps and transfers between them. It seems there is no control to turn this off, as the buffer stream first gets sent to FEProblemBase::_console (e.g. line 978 in FEProblemBase.C) whereafter it is forwarded to Moose::out via mooseConsole().  Am I correct in this conclusion? Is there a simple way to turn off this output?",
          "url": "https://github.com/idaholab/moose/discussions/16490",
          "updatedAt": "2022-10-18T18:37:20Z",
          "publishedAt": "2020-12-14T17:38:50Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "This is not intentional and is likely a bug. You can file an issue if you would like, but not sure if it will get fixed anytime soon. Is this having a negative impact on your simulations?",
                  "url": "https://github.com/idaholab/moose/discussions/16490#discussioncomment-206445",
                  "updatedAt": "2022-10-18T18:37:20Z",
                  "publishedAt": "2020-12-14T21:36:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "helen-brooks"
                          },
                          "bodyText": "Not sure yet, as my application is still in development and I haven't done much intensive testing yet; but from experience IO can slow things down so my instinct was to turn it off before moving onto some big runs. If I find it's an issue I can just put in a PR; I'm pretty sure it's just a handful of lines in FEProblemBase which could easily be wrapped in a if statement.",
                          "url": "https://github.com/idaholab/moose/discussions/16490#discussioncomment-207749",
                          "updatedAt": "2022-10-18T18:37:20Z",
                          "publishedAt": "2020-12-15T08:39:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "If the text is going is being streamed to _console then it shouldn't need an if statement. It should not appear with \"console = false\".",
                          "url": "https://github.com/idaholab/moose/discussions/16490#discussioncomment-209975",
                          "updatedAt": "2022-10-18T18:37:20Z",
                          "publishedAt": "2020-12-15T15:42:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "helen-brooks"
                  },
                  "bodyText": "Actually, I realised that I can reduce the output to almost nothing, if in addition to console=false I create my own console output object and simply set output_screen = false (and do this for for both the main and sub-app input files).\n[Outputs]\n  console = false\n  [my_console]\n    type = Console\n    output_screen = false\n  []\n[]\n\nIt seems a little circuitous, but it looks to me like I don't have access to the settings of the console object that is created by default.  The only remaining output I get is warnings, which I wouldn't want to get rid of anyway, and a single printout of the name of my subapp.",
                  "url": "https://github.com/idaholab/moose/discussions/16490#discussioncomment-208041",
                  "updatedAt": "2022-10-18T18:37:25Z",
                  "publishedAt": "2020-12-15T10:56:03Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "The options available at the top level are limited since they generally are shared by all objects in the [Outputs] block. It is normal to create sub-blocks like this for fine grained control.\nFor the snippet above you actually should not need the console = false, because if a Console object exists in a sub-block then the default object is not created. \n  \n    \n      moose/framework/src/actions/CommonOutputAction.C\n    \n    \n         Line 268\n      in\n      7fedabd\n    \n  \n  \n    \n\n        \n          \n           CommonOutputAction::hasConsole() \n        \n    \n  \n\n\nI am glad you found a work around. Could you please create an issue for the problem you are seeing and if possible include an input file that reproduces the problem. Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/16490#discussioncomment-210122",
                          "updatedAt": "2023-02-14T23:58:11Z",
                          "publishedAt": "2020-12-15T15:46:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}