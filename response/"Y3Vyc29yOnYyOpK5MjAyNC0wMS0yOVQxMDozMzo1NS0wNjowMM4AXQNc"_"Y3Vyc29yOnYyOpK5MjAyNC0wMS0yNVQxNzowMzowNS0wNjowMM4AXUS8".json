{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wMS0yNVQxNzowMzowNS0wNjowMM4AXUS8"
    },
    "edges": [
      {
        "node": {
          "title": "There is error when run  ./update_and_rebuild_petsc.sh",
          "author": {
            "login": "liuyong201811"
          },
          "bodyText": "When  I run ./update_and_rebuild_petsc.sh\nCannot use fblaslapack without Fortran, make sure you do NOT have --with-fc=0\n\nThank you.\n\n\nThere was an error. Exiting...\n\nTESTING: alternateConfigureLibrary from config.packages.szlib(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.zlib(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.zlib(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.tetgen(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.tetgen(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.tchem(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.tchem(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.saws(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.saws(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.libpng(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.libpng(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.combblas(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.combblas(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.Triangle(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.Triangle(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.metis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: checkDependencies from config.packages.metis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:872)\nTESTING: configureLibrary from config.packages.metis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/packages/metis.py:46)\n=============================================================================================\nTrying to download git://https://bitbucket.org/petsc/pkg-metis.git for METIS\n=============================================================================================\n                    =============================================================================================\n                          Configuring METIS with cmake; this may take several minutes\n                    =============================================================================================\n\n                    =============================================================================================\n                          Compiling and installing METIS; this may take several minutes\n                    =============================================================================================\n\nTESTING: check from config.libraries(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/libraries.py:157)\nTESTING: checkInclude from config.headers(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/headers.py:86)\nTESTING: checkInclude from config.headers(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/headers.py:86)\nTESTING: checkVersion from config.packages.metis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:1026)\nTESTING: checkSharedLibrary from config.packages.metis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:955)\nTESTING: consistencyChecks from config.packages.pragmatic(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.pragmatic(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.parmetis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: checkDependencies from config.packages.parmetis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:872)\nTESTING: configureLibrary from config.packages.parmetis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/packages/parmetis.py:41)\n=============================================================================================\nTrying to download git://https://bitbucket.org/petsc/pkg-parmetis.git for PARMETIS\n=============================================================================================\n                    =============================================================================================\n                          Configuring PARMETIS with cmake; this may take several minutes\n                    =============================================================================================\n\n                    =============================================================================================\n                          Compiling and installing PARMETIS; this may take several minutes\n                    =============================================================================================\n\nTESTING: check from config.libraries(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/libraries.py:157)\nTESTING: checkInclude from config.headers(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/headers.py:86)\nTESTING: checkInclude from config.headers(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/headers.py:86)\nTESTING: checkVersion from config.packages.parmetis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:1026)\nTESTING: checkSharedLibrary from config.packages.parmetis(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:955)\nTESTING: consistencyChecks from config.packages.Chaco(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.Chaco(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.hdf5(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.hdf5(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.med(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.med(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.cgns(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.cgns(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.ascem-io(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.ascem-io(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.pflotran(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.pflotran(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.alquimia(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.alquimia(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.SAMRAI(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.SAMRAI(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.ADIOS2(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.ADIOS2(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.pnetcdf(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.pnetcdf(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.netcdf(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.netcdf(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.exodusii(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\nTESTING: alternateConfigureLibrary from config.packages.exodusii(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:959)\nTESTING: consistencyChecks from config.packages.fblaslapack(/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py:963)\n\n     UNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\n\n\nCannot use fblaslapack without Fortran, make sure you do NOT have --with-fc=0\n\nThere was an error. Exiting...",
          "url": "https://github.com/idaholab/moose/discussions/19378",
          "updatedAt": "2024-01-29T14:19:15Z",
          "publishedAt": "2021-11-13T12:39:59Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhat compilers are you using? It says earlier in the log I think.\nYou can also query:\necho $CC $CXX $FC\n\nthen for good measure please report their version too\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1636591",
                  "updatedAt": "2022-07-22T20:43:55Z",
                  "publishedAt": "2021-11-13T17:16:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@liuyong201811 what does this return?",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1638794",
                          "updatedAt": "2022-07-22T20:44:00Z",
                          "publishedAt": "2021-11-14T07:37:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "liuyong201811"
                          },
                          "bodyText": "mpicc mpicxx mpif90",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1638864",
                          "updatedAt": "2022-07-22T20:44:01Z",
                          "publishedAt": "2021-11-14T08:17:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "and mpicc --version.\nI m expecting clang 10.0, but just checking",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1640626",
                          "updatedAt": "2022-07-22T20:44:01Z",
                          "publishedAt": "2021-11-14T17:05:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok checked the configure log and it confirms clang 10 is being used. There s still some references to the installed gcc version I find suspicious but maybe that's normal, like this one Selected GCC installation: /usr/lib/gcc/aarch64-redhat-linux/4.8.5\nYou are getting a bunch of fortran and BLAS errors at the end. Have you tried the solution they suggest in the script?",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642073",
                          "updatedAt": "2024-03-08T19:13:30Z",
                          "publishedAt": "2021-11-15T02:40:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "liuyong201811"
                          },
                          "bodyText": "mpicc --version\nBisheng Compiler 1.3.3.b023 clang version 10.0.1 (clang-e31092d4f8cd flang-3c92ea4b404f)\nTarget: aarch64-unknown-linux-gnu\nThread model: posix\nInstalledDir: /opt/compiler/bisheng-compiler-1.3.3-aarch64-linux/bin",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642157",
                          "updatedAt": "2022-09-03T15:29:52Z",
                          "publishedAt": "2021-11-15T03:16:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "liuyong201811"
                          },
                          "bodyText": "They did not give the method to solution a bunch of fortran and BLAS errors at the end. Or they give but I do not know to do it.thank you",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642162",
                          "updatedAt": "2022-09-03T15:29:59Z",
                          "publishedAt": "2021-11-15T03:18:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "open the update_and_rebuild_petsc.sh script in a text editor and change --download-fblaslapack=0 to --download-fblaslapack=1\nsee below.",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642223",
                          "updatedAt": "2022-09-03T15:29:59Z",
                          "publishedAt": "2021-11-15T03:46:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "You can just do:\n./scripts/update_and_rebuild_petsc.sh --download-fblaslapack=1\n\nArguments are passed to petsc configure.",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642225",
                          "updatedAt": "2022-09-03T15:29:59Z",
                          "publishedAt": "2021-11-15T03:48:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "liuyong201811"
                          },
                          "bodyText": "I try it but it did work.\nthen the wrong changed into\n\n     UNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\n\n\nError configuring STRUMPACK with cmake\n\nFile \"/path/to/MOOSE/moose/petsc/config/configure.py\", line 458, in petsc_configure\nframework.configure(out = sys.stdout)\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/framework.py\", line 1312, in configure\nself.processChildren()\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/framework.py\", line 1300, in processChildren\nself.serialEvaluation(self.childGraph)\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/framework.py\", line 1275, in serialEvaluation\nchild.configure()\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py\", line 1146, in configure\nself.executeTest(self.configureLibrary)\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/base.py\", line 138, in executeTest\nret = test(*args,**kargs)\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py\", line 904, in configureLibrary\nfor location, directory, lib, incl in self.generateGuesses():\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py\", line 478, in generateGuesses\nd = self.checkDownload()\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py\", line 612, in checkDownload\nreturn self.getInstallDir()\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py\", line 367, in getInstallDir\ninstallDir = self.Install()\nFile \"/path/to/MOOSE/moose/petsc/config/BuildSystem/config/package.py\", line 1792, in Install\nraise RuntimeError('Error configuring '+self.PACKAGE+' with cmake')\nFinishing configure run at Mon, 15 Nov 2021 11:39:30 +0800",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642247",
                          "updatedAt": "2022-09-03T15:30:07Z",
                          "publishedAt": "2021-11-15T04:02:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "liuyong201811"
                  },
                  "bodyText": "The wrong changed into\nUNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\nCould not find a functional BLAS. Run with --with-blas-lib= to indicate the library containing BLAS.\nOr --download-fblaslapack=1 to have one automatically downloaded and installed\nWhere can I set --with-blas-lib or --download-fblaslapack=1, thank you!",
                  "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1638646",
                  "updatedAt": "2022-07-22T20:44:04Z",
                  "publishedAt": "2021-11-14T05:38:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you can change those options inside the update_and_rebuild_petsc.sh script.\nThis is kind of an advanced use case though. There is likely another issue",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1638722",
                          "updatedAt": "2022-07-22T20:44:07Z",
                          "publishedAt": "2021-11-14T06:37:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "liuyong201811"
                          },
                          "bodyText": "configure.log\nthis is the configure.log, can you help me to see what is the issue,thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1638736",
                          "updatedAt": "2022-07-22T20:44:08Z",
                          "publishedAt": "2021-11-14T06:51:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is your gcc version 4.8?\nMinimum required is 5.1\nhttps://mooseframework.inl.gov/getting_started/installation/manual_installation_gcc.html",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1638764",
                          "updatedAt": "2022-07-22T20:44:08Z",
                          "publishedAt": "2021-11-14T07:19:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "liuyong201811"
                  },
                  "bodyText": "I use the clang to compile the program .\n[root@DC5-02-010 moose]# clang -v\nBisheng Compiler 1.3.3.b023 clang version 10.0.1 (clang-e31092d4f8cd flang-3c92ea4b404f)\nTarget: aarch64-unknown-linux-gnu\nThread model: posix\nInstalledDir: /opt/compiler/bisheng-compiler-1.3.3-aarch64-linux/bin\nFound candidate GCC installation: /usr/lib/gcc/aarch64-redhat-linux/4.8.2\nFound candidate GCC installation: /usr/lib/gcc/aarch64-redhat-linux/4.8.5\nSelected GCC installation: /usr/lib/gcc/aarch64-redhat-linux/4.8.5\nCandidate multilib: .;@m64\nSelected multilib: .;@m64",
                  "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1638773",
                  "updatedAt": "2022-07-22T20:44:15Z",
                  "publishedAt": "2021-11-14T07:25:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "liuyong201811"
                  },
                  "bodyText": "mpicc mpicxx mpif90\n\u2026\n------------------&nbsp;\u539f\u59cb\u90ae\u4ef6&nbsp;------------------\n\u53d1\u4ef6\u4eba:                                                                                                                        \"idaholab/moose\"                                                                                    ***@***.***&gt;;\n\u53d1\u9001\u65f6\u95f4:&nbsp;2021\u5e7411\u670814\u65e5(\u661f\u671f\u5929) \u4e0b\u53483:38\n***@***.***&gt;;\n***@***.******@***.***&gt;;\n\u4e3b\u9898:&nbsp;Re: [idaholab/moose] There is error when run  ./update_and_rebuild_petsc.sh (Discussion #19378)\n\n\n\n\n\n\n@liuyong201811 what does this return?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or unsubscribe.\nTriage notifications on the go with GitHub Mobile for iOS or Android.",
                  "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1638832",
                  "updatedAt": "2022-07-22T20:50:28Z",
                  "publishedAt": "2021-11-14T08:03:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "liuyong201811"
                          },
                          "bodyText": "mpicc --version\nBisheng Compiler 1.3.3.b023 clang version 10.0.1 (clang-e31092d4f8cd flang-3c92ea4b404f)\nTarget: aarch64-unknown-linux-gnu\nThread model: posix\nInstalledDir: /opt/compiler/bisheng-compiler-1.3.3-aarch64-linux/bin",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642163",
                          "updatedAt": "2022-07-22T20:50:28Z",
                          "publishedAt": "2021-11-15T03:18:46Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Which of our instruction pages are you using to setup your build environment?",
                  "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642250",
                  "updatedAt": "2022-07-22T20:50:28Z",
                  "publishedAt": "2021-11-15T04:05:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "liuyong201811"
                          },
                          "bodyText": "We want to install Moose in  ARM  machine and clang flang clang++, Can you give some advice to us, thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1642530",
                          "updatedAt": "2022-07-22T20:50:28Z",
                          "publishedAt": "2021-11-15T06:09:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "It is a straight forward process building on a Linux ARM machine (@dschwen used a Raspberry Pi3 as I recall, and I was on a Beaglebone, and one other successful attempt on a raspberry 4), but that was while using gcc, g++ and gfortran. Not the LLVM toolchain.\nFlang is a fairly new compiler. I don't think anyone our team will have much if any experience. Indeed, when I search the internet for BLAS and Flang, I don't get promising hits. I am genuinely curious if this works. It would be nice to have an entirely LLVM solution.",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-1645331",
                          "updatedAt": "2022-07-22T20:50:28Z",
                          "publishedAt": "2021-11-15T15:17:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ljeft"
                  },
                  "bodyText": "I installed moose in wsl for download and had the same problem when building PETSc.This is a problem I have not encountered before installing moose, I do not know how to solve it.\nMon Jan 29 21:29:55 CST 2024\nNo LSB modules are available.\n\nSystem Arch: Distributor ID: Ubuntu Description: Ubuntu 22.04.3 LTS Release: 22.04 Codename: jammy\n\nMOOSE Package Version: Custom Build\n\nCPU Count: 28\n\nMemory Free: 6164.730 MB\n\nVariable `which $CC` check:\n/usr/local/openmpi-4.1.6/bin/mpicc\n\n$CC --version:\ngcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nCopyright (C) 2021 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nMPICC:\nwhich mpicc:\n        /usr/local/openmpi-4.1.6/bin/mpicc\nmpicc -show:\n        gcc -I/usr/local/openmpi-4.1.6/include -L/usr/local/openmpi-4.1.6/lib -Wl,-rpath -Wl,/usr/local/openmpi-4.1.6/lib -Wl,--enable-new-dtags -lmpi\n\nCOMPILER gcc:\ngcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nCopyright (C) 2021 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nPython: NO PYTHON DETECTED\n\nMODULES NOT AVAILABLE\n\nPETSC_DIR not set\n\nENVIRONMENT:\nCC=mpicc\nCUDA_HOME=:/usr/local/cuda-11.8\nCXX=mpicxx\nDBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus\nDISPLAY=:0\nF77=mpif77\nF90=mpif90\nFC=mpif90\nHOME=/home/sohar\nHOSTTYPE=x86_64\nLANG=C.UTF-8\nLD_LIBRARY_PATH=:/usr/local/cuda-11.8/lib64\nLESSCLOSE=/usr/bin/lesspipe %s %s\nLESSOPEN=| /usr/bin/lesspipe %s\nLOGNAME=sohar\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:\nMETHODS=opt\nMOOSE_JOBS=6\nNAME=DESKTOP-RPC0OMG\nOLDPWD=/home/sohar\nPATH=/usr/local/openmpi-4.1.6/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/WindowsApps/CanonicalGroupLimited.Ubuntu22.04LTS_2204.3.63.0_x64__79rhkp1fndgsc:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/libnvvp:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Microsoft SQL Server/150/Tools/Binn/:/mnt/c/Program Files/Microsoft SQL Server/Client SDK/ODBC/170/Tools/Binn/:/mnt/e/Windows Kits/10/Windows Performance Toolkit/:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.3.0/:/mnt/e/Git/cmd:/mnt/c/Users/DZKD/AppData/Local/Microsoft/WindowsApps:/mnt/d/Users/DZKD/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin:/usr/local/cuda-11.8/bin\nPULSE_SERVER=unix:/mnt/wslg/PulseServer\nPWD=/home/sohar/projects/moose/scripts\nSHELL=/bin/bash\nSHLVL=1\nTERM=xterm-256color\nUSER=sohar\nWAYLAND_DISPLAY=wayland-0\nWSL2_GUI_APPS_ENABLED=1\nWSLENV=\nWSL_DISTRO_NAME=Ubuntu-22.04\nWSL_INTEROP=/run/WSL/656_interop\nXDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop\nXDG_RUNTIME_DIR=/run/user/1000/\n_=/usr/bin/env",
                  "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-8282760",
                  "updatedAt": "2024-01-29T14:13:56Z",
                  "publishedAt": "2024-01-29T13:36:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Please create a new Discussion thread. Your issue is not the same as the original posters running on a different architecture (aarch64).\nIn the new Discussion please also include the actual error you are receiving, along with the above diagnostics output.\nThanks!",
                          "url": "https://github.com/idaholab/moose/discussions/19378#discussioncomment-8283575",
                          "updatedAt": "2024-01-29T14:19:16Z",
                          "publishedAt": "2024-01-29T14:19:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "ADStressDivergenceRZTensors",
          "author": {
            "login": "hamedattariani"
          },
          "bodyText": "Hi,\nI am trying to model an axisymmetric problem in cylindrical coordinates via ADStressDivergenceRZTensors.\nSo, it seems that the x direction represents the radial direction and y is z direction of a cylinder. How can I access to hoop stress, sigma_tt, in this case?",
          "url": "https://github.com/idaholab/moose/discussions/26660",
          "updatedAt": "2024-01-29T04:12:53Z",
          "publishedAt": "2024-01-28T03:40:45Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou should be able to pass generate_output = 'hoop_stress' to the tensor mechanics master action to generate this output\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26660#discussioncomment-8276738",
                  "updatedAt": "2024-01-29T04:12:53Z",
                  "publishedAt": "2024-01-29T04:12:52Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Number of new grains at each time step",
          "author": {
            "login": "zahidhasan83"
          },
          "bodyText": "Dear all,\nI am doing recrystallization simulation using MOOSE. Next, I would like to know how many new grains are generated at each time step. Is it possible to get it as an output data in MOOSE?\nI would appreciate if you could manage time to reply.\nBest regards,\nZahid",
          "url": "https://github.com/idaholab/moose/discussions/26619",
          "updatedAt": "2024-01-28T18:18:37Z",
          "publishedAt": "2024-01-24T12:52:24Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Imposing a BC that includes a time derivative of the main variable",
          "author": {
            "login": "alimostafavi24"
          },
          "bodyText": "Dear MOOSE community,\nIs it possible to have a boundary condition that accounts for the time derivative of the main variable? I want to impose the following boundary condition (third equation in the following picture and the main variable is also phi). In the 2D problem, this condition would be on the bottom boundary which is a horizontal line. Is there any similar condition related to this specific problem in the framework?\n\nThanks,\nAli",
          "url": "https://github.com/idaholab/moose/discussions/26657",
          "updatedAt": "2024-01-28T00:59:50Z",
          "publishedAt": "2024-01-27T18:42:37Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes this should be doable. Use the routines from the coupleable interface (coupledDot) to get the contribution to the residual right.\nI think to get it completely right you ll want to also contribute to the \"time\" matrix and vectors. See the TimeKernel.C for how this is done (changing the tags).\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26657#discussioncomment-8268375",
                  "updatedAt": "2024-01-28T00:59:50Z",
                  "publishedAt": "2024-01-28T00:59:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Converge problem of ImplicitEuler time integrator",
          "author": {
            "login": "Bearunner"
          },
          "bodyText": "Dear all,\nAfter learning the Troubleshooting Failed Solves, Convergence criteria and Setting Appropriate Convergence Criteria, I have a question about the convergence in MOOSE.\n\n\nCan the default time integrator 'ImplicitEuler ' in MOOSE can solve any kernels/PDE?\n\n\nWhether the Courant\u2013Friedrichs\u2013Lewy condition still working for implicit (matrix) solvers?\nHow could we use it in MOOSE?\n\n\nBased on my limited experience, either an increased permeability, or increased injected mass rate at point source or decreased mesh size would require a smaller maximum dt compared to the initial case. How could we understand this?\nFor example, at the first 50 steps, the hydor-thermal problems in porous_flow can converge by meeting the relative or absolute\nnonlinear to 1e-8 in the increased permeability case of 3.5e-13 m2. However, it cannot converge at the Time Step 51, time = 547378, dt = 109476 s. The only reason for this non-convergence is the increased permeability from 1e-13 m2 to 3.5e-13 m2.\nTime Step 50, time = 280256, dt = 56051.9\n0 Nonlinear |R| =  [32m1.053181e-05\n1 Nonlinear |R| =  [32m3.028068e-08\n2 Nonlinear |R| =  [32m3.111575e-09\nSolve Converged!\nTime Step 51, time = 350321, dt = 70064.9\n0 Nonlinear |R| =  [32m1.037218e-02\n1 Nonlinear |R| =  [32m1.035678e-02\n2 Nonlinear |R| =  [32m1.023458e-02\n3 Nonlinear |R| =  [32m1.017689e-02\n4 Nonlinear |R| =  [32m1.004332e-02\n5 Nonlinear |R| =  [32m1.001222e-02\n6 Nonlinear |R| =  [32m1.001222e-02\n7 Nonlinear |R| =  [32m1.001222e-02\n8 Nonlinear |R| =  [32m1.001222e-02\n9 Nonlinear |R| =  [32m1.001222e-02\n10 Nonlinear |R| =  [32m1.001222e-02\nNonlinear solve did not converge due to DIVERGED_MAX_IT iterations 10\nSolve Did NOT Converge!\nThanks for your help.\nB.",
          "url": "https://github.com/idaholab/moose/discussions/26659",
          "updatedAt": "2024-01-30T23:46:36Z",
          "publishedAt": "2024-01-27T22:43:10Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes as long as there are no higher order (second, third etc) time derivatives in the PDE.\nThere can be some restrictions on the timestep but because it s implicit usually not.\nFor your convergence problem, did you try to let the timestepper cut the timestep and try again?",
                  "url": "https://github.com/idaholab/moose/discussions/26659#discussioncomment-8267978",
                  "updatedAt": "2024-01-27T22:48:20Z",
                  "publishedAt": "2024-01-27T22:48:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The CFL conditions depend on your PDE and on your time integration scheme. They can be derived from a von Neumann stability analysis of your equation iirc\nFor porous flow it s an advection - diffusion like problem right?\nI think the stability of the time integration scheme is not the only thing at play here. There is also the convergence of your Newton / pjfnk nonlinear solve. With a large timestep your initial guess is further from the solution. Unsing a predictor can help",
                          "url": "https://github.com/idaholab/moose/discussions/26659#discussioncomment-8267990",
                          "updatedAt": "2024-01-27T22:51:22Z",
                          "publishedAt": "2024-01-27T22:51:21Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Bearunner"
                          },
                          "bodyText": "Thanks for your reply.\n\nI am not sure I understand this sentence or not.\n\n\nThere can be some restrictions on the timestep but because it s  implicit usually not.\n\nDo you mean that 'If it is implicit scheme, for 1st order time derivative, there is no restrictions on the timestep.\nFor higher order time derivative, there are restrictions on the timestep.'. Is it right?\n\n\nWhat is the reason for the unconvergence in the above example since there should be no restriction on the time step beacause I use the implicit first order time derivative?\n\n\nIn addition, with implicit first order time derivative, I found that convergence is dependent on the grid size and flow velocity. For example, high flow velocity results in a small dt.  I am using Newton nonlinear solve and timestepper cutting the timestep.  After 3 steps, the dt increased close to 70064.9, it get cut again.\nBut from my understanding, any dt should work since I use implicit first order time derivative, which is unconditional stable.",
                          "url": "https://github.com/idaholab/moose/discussions/26659#discussioncomment-8268053",
                          "updatedAt": "2024-01-27T23:17:21Z",
                          "publishedAt": "2024-01-27T23:12:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I did not exactly mean that.\nI meant that higher order derivatives are not implemented for 1st order Implicit Euler in MOOSE. I think only the Centered time integrator and Newmark Beta have them implemented.\n\n\nIf it is implicit scheme, for 1st order time derivative, there is no restrictions on the timestep\n\nIt depends on the time integration scheme, there are more than one implicit scheme.\nThere are aoways restrictions on the timestep, because you need a certain level of accuracy and because the nonlinear problem solver cannot find a solution if the intiial guess is too far from the solution.\n@cpgr can you please comment on CFL conditions for porous flow?\nI dont think it's a classic advective problem right? Because of Darcy's law",
                          "url": "https://github.com/idaholab/moose/discussions/26659#discussioncomment-8268369",
                          "updatedAt": "2024-01-28T00:56:23Z",
                          "publishedAt": "2024-01-28T00:56:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "node numbers need shift in LinearNodalConstraint and Output by -1? Abaqus mesh related?",
          "author": {
            "login": "arndflatten"
          },
          "bodyText": "Dear Moose-Forum,\nI like to use Abaqus-meshes via the 'FileMeshGenerator'. However, we noticed when testing the 'LinearNodalConstraint' for a simple problem, that using the node labels for parameters primary and secondary_node_ids cannot be used as input in the mesh file.\nWe understand that abaqus meshes should have both node and element labels consecutively numbered starting from label 1 (actually starting with node label 0 is not valid any more, which makes sense).\nAlso, the flag  allow_renumbering=false was set.\nStill the node numbers that one needs to specify within LinearNodalConstraint need to be shifted by -1 to make the result be correct. If using the node labels that are input, the result is wrong.\nBelow is a screenshot of both versions.\n\nAlso, attached are the files to reconstruct this problem.\nIs this intended to shift nodes labels by -1, or is it a bug?\nThe user might end up with very unintended results if the mesh in more complex involving many more nodes.",
          "url": "https://github.com/idaholab/moose/discussions/26638",
          "updatedAt": "2024-01-29T13:18:59Z",
          "publishedAt": "2024-01-25T16:32:36Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe offset in the ids is expected. We have the same problem with paraview sometimes.\nallow_renumbering=false is for parallel / repartitioning renumbering, not the offset.\nIf this is really impacting your workflow I would recommend either:\n\nadding a parameter to the FileMG to number as you expect\ncreating a RenumberNode/ElementIDMG mesh generator object to perform this operation\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26638#discussioncomment-8247623",
                  "updatedAt": "2024-01-25T16:49:01Z",
                  "publishedAt": "2024-01-25T16:49:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "arndflatten"
                          },
                          "bodyText": "Hi GiudGiud, thanks for your reply.\nDo we understand correctly, that a Moose mesh internally always labels nodes from 0 to nNodes-1, but elements from 1 to nElems? Is this always the case, no matter which labels are defined in the input file that is fed to FileMeshGenerator? And will this convention remain or is this likely to be changed in some near future?\nSo, if read from an Abaqus *.inp mesh with consecutively numbered nodes and elements starting both from 1, all the nodes are relabelled internally by an offset of -1, but elementLabels remain unchanged - so any nodeLabel that is specified later in the inputfile (eg., to define constraints, outputs, etc) need to include this nodeNumber-shift?\nThanks a lot for clarifying,\nArnd",
                          "url": "https://github.com/idaholab/moose/discussions/26638#discussioncomment-8253906",
                          "updatedAt": "2024-01-26T08:28:40Z",
                          "publishedAt": "2024-01-26T08:28:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "in libMesh/libmesh#3640 we made sure that we went from the 1-based numbering of Abaqus for both nodes and elements to 0-based, so you are half-correct. We translate the Abaqus numbering by -1 for both elements and nodes",
                          "url": "https://github.com/idaholab/moose/discussions/26638#discussioncomment-8259548",
                          "updatedAt": "2024-01-26T16:50:11Z",
                          "publishedAt": "2024-01-26T16:50:10Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "NCG Convergence",
          "author": {
            "login": "marinsiebert"
          },
          "bodyText": "Hello,\nI am doing a NCG simulation of an isolated cylinder that is filled with unsaturated soil and has a fixed temperature at the center and at the wall. I encountered some issues with the massfraction being >1, so I switched to KT stabilization.\nIn my case, convergence with adaptive iteration is pretty bad, at first hovering back and forth between cutback and dt 200-300s, finally leading to dt < 1 s and failure.\nMaybe someone could have a look at my input and tell me what I am missing, or is the physical situation just too complex (I dont think so)? model.zip\nAn example of the terminal output until first failure is pasted below.\nWhat tends to happen is that the liquid phase (initial saturation of 32%) flows to the bottom of the mesh (image below), which logically would makes sense for a very permeable medium, however it happens within the first few 100's of seconds and for the modelled medium with a permeability of 1e-12 this just does not seem right.\nWhen setting the permeability to lower values, e.g. 1e-20, the model converges very well.\n\nFramework Information:\nMOOSE Version:           git commit 541c02534c on 2024-01-18\nLibMesh Version:\nPETSc Version:           3.20.1\nSLEPc Version:           3.20.0\nCurrent Time:            Fri Jan 26 10:02:59 2024\nExecutable Timestamp:    Mon Jan 22 10:55:45 2024\n\nParallelism:\n  Num Processors:          8\n  Num Threads:             2\n\nMesh:\n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:\n    Total:                 454\n    Local:                 69\n    Min/Max/Avg:           41/69/56\n  Elems:\n    Total:                 846\n    Local:                 105\n    Min/Max/Avg:           105/106/105\n  Num Subdomains:          1\n  Num Partitions:          8\n  Partitioner:             metis\n\nNonlinear System:\n  Num DOFs:                1362\n  Num Local DOFs:          207\n  Variables:               { \"temperature\" \"gaspressure\" \"z\" }\n  Finite Element Types:    \"LAGRANGE\"\n  Approximation Orders:    \"FIRST\"\n\nAuxiliary System:\n  Num DOFs:                21150\n  Num Local DOFs:          2625\n  Variables:               { \"gas_in_water\" \"vapor_in_gas\" \"density_water\" \"density_vapor\" \"wet_density\"\n                             ... \"PorousFlow_thermal_conductivity_qp_11\" \"PorousFlow_thermal_conductivity_qp_12\"\n                             \"PorousFlow_thermal_conductivity_qp_20\" \"PorousFlow_thermal_conductivity_qp_21\"\n                             \"PorousFlow_thermal_conductivity_qp_22\" }\n  Finite Element Types:    \"MONOMIAL\"\n  Approximation Orders:    \"CONSTANT\"\n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             IterationAdaptiveDT\n  TimeIntegrator:          ImplicitEuler\n  Solver Mode:             NEWTON\n  PETSc Preconditioner:    lu\n  MOOSE Preconditioner:    SMP\n\nLEGACY MODES ENABLED:\n This application uses the legacy material output option: material properties are output only on TIMESTEP_END, not INITIAL. To remove this message, set 'use_legacy_material_output' to false in this application. If there are gold output files that contain material property output for which output occurs on INITIAL, then these will generate diffs due to zero values being stored, and these tests should be re-golded.\n\nwater_tab: Reading tabulated properties from /home/marin/projects/models/verschaffel-drefke/water_tab.csv\nwater_tab: Reading tabulated properties from /home/marin/projects/models/verschaffel-drefke/water_tab.csv\nair_tab: Reading tabulated properties from /home/marin/projects/models/verschaffel-drefke/air_tab.csv\nair_tab: Reading tabulated properties from /home/marin/projects/models/verschaffel-drefke/air_tab.csv\n\nTime Step 0, time = 0\n\nTime Step 1, time = 1, dt = 1\n    |residual|_2 of individual variables:\n                temperature: 0.00488691\n                gaspressure: 0.0528557\n                z:           1.41996\n 0 Nonlinear |R| = 1.420953e+00\n      0 Linear |R| = 1.420953e+00\n      1 Linear |R| = 3.576350e-14\n    |residual|_2 of individual variables:\n                temperature: 0.000572385\n                gaspressure: 0.00302541\n                z:           0.230516\n 1 Nonlinear |R| = 2.305366e-01\n      0 Linear |R| = 2.305366e-01\n      1 Linear |R| = 2.345229e-16\n    |residual|_2 of individual variables:\n                temperature: 6.72613e-06\n                gaspressure: 1.46259e-05\n                z:           0.000108015\n 2 Nonlinear |R| = 1.092076e-04\n Solve Converged!\n\nOutlier Variable Residual Norms:\n  z: 1.080146e-04\n\nTime Step 2, time = 3, dt = 2\n    |residual|_2 of individual variables:\n                temperature: 0.00671979\n                gaspressure: 0.00469774\n                z:           1.82411\n 0 Nonlinear |R| = 1.824130e+00\n      0 Linear |R| = 1.824130e+00\n      1 Linear |R| = 7.307056e-15\n    |residual|_2 of individual variables:\n                temperature: 0.000479276\n                gaspressure: 0.000230662\n                z:           0.00612979\n 1 Nonlinear |R| = 6.152826e-03\n      0 Linear |R| = 6.152826e-03\n      1 Linear |R| = 1.084636e-17\n    |residual|_2 of individual variables:\n                temperature: 5.26382e-07\n                gaspressure: 1.26971e-06\n                z:           0.000102165\n 2 Nonlinear |R| = 1.021742e-04\n Solve Converged!\n\nOutlier Variable Residual Norms:\n  z: 1.021650e-04\n\nTime Step 3, time = 7, dt = 4\n    |residual|_2 of individual variables:\n                temperature: 0.00507421\n                gaspressure: 0.00303424\n                z:           0.0566877\n 0 Nonlinear |R| = 5.699517e-02\n      0 Linear |R| = 5.699517e-02\n      1 Linear |R| = 1.165156e-15\n    |residual|_2 of individual variables:\n                temperature: 1.34047e-05\n                gaspressure: 5.11747e-05\n                z:           0.00135536\n 1 Nonlinear |R| = 1.356390e-03\n      0 Linear |R| = 1.356390e-03\n      1 Linear |R| = 9.496948e-19\n    |residual|_2 of individual variables:\n                temperature: 2.27197e-07\n                gaspressure: 4.74344e-07\n                z:           3.13196e-07\n 2 Nonlinear |R| = 6.121376e-07\n Solve Converged!\n\nTime Step 4, time = 15, dt = 8\n    |residual|_2 of individual variables:\n                temperature: 0.00479041\n                gaspressure: 0.00280481\n                z:           0.0330317\n 0 Nonlinear |R| = 3.349485e-02\n      0 Linear |R| = 3.349485e-02\n      1 Linear |R| = 8.976356e-16\n    |residual|_2 of individual variables:\n                temperature: 1.26431e-05\n                gaspressure: 8.0432e-05\n                z:           0.000885305\n 1 Nonlinear |R| = 8.890411e-04\n      0 Linear |R| = 8.890411e-04\n      1 Linear |R| = 2.392676e-18\n    |residual|_2 of individual variables:\n                temperature: 5.24637e-07\n                gaspressure: 1.44952e-06\n                z:           1.05726e-06\n 2 Nonlinear |R| = 1.869263e-06\n Solve Converged!\n\nTime Step 5, time = 31, dt = 16\n    |residual|_2 of individual variables:\n                temperature: 0.00437315\n                gaspressure: 0.00245949\n                z:           0.0286461\n 0 Nonlinear |R| = 2.908215e-02\n      0 Linear |R| = 2.908215e-02\n      1 Linear |R| = 1.642499e-15\n    |residual|_2 of individual variables:\n                temperature: 4.83019e-05\n                gaspressure: 0.000110941\n                z:           0.00117104\n 1 Nonlinear |R| = 1.177272e-03\n      0 Linear |R| = 1.177272e-03\n      1 Linear |R| = 1.168293e-17\n    |residual|_2 of individual variables:\n                temperature: 1.48118e-05\n                gaspressure: 3.65721e-06\n                z:           3.2884e-06\n 2 Nonlinear |R| = 1.560698e-05\n      0 Linear |R| = 1.560698e-05\n      1 Linear |R| = 1.249529e-18\n    |residual|_2 of individual variables:\n                temperature: 1.55408e-06\n                gaspressure: 8.31864e-08\n                z:           1.68492e-08\n 3 Nonlinear |R| = 1.556395e-06\n Solve Converged!\n\nOutlier Variable Residual Norms:\n  temperature: 1.554079e-06\n\nTime Step 6, time = 63, dt = 32\n    |residual|_2 of individual variables:\n                temperature: 0.00379439\n                gaspressure: 0.00201362\n                z:           0.0231606\n 0 Nonlinear |R| = 2.355555e-02\n      0 Linear |R| = 2.355555e-02\n      1 Linear |R| = 2.816337e-15\n    |residual|_2 of individual variables:\n                temperature: 3.85222e-05\n                gaspressure: 0.000139356\n                z:           0.00136826\n 1 Nonlinear |R| = 1.375874e-03\n      0 Linear |R| = 1.375874e-03\n      1 Linear |R| = 4.287394e-17\n    |residual|_2 of individual variables:\n                temperature: 1.21258e-05\n                gaspressure: 7.75207e-06\n                z:           7.997e-06\n 2 Nonlinear |R| = 1.646456e-05\n      0 Linear |R| = 1.646456e-05\n      1 Linear |R| = 6.931871e-20\n    |residual|_2 of individual variables:\n                temperature: 3.11038e-06\n                gaspressure: 3.59497e-07\n                z:           7.59735e-08\n 3 Nonlinear |R| = 3.132009e-06\n      0 Linear |R| = 3.132009e-06\n      1 Linear |R| = 5.031390e-19\n    |residual|_2 of individual variables:\n                temperature: 1.21783e-07\n                gaspressure: 8.1624e-08\n                z:           1.47879e-08\n 4 Nonlinear |R| = 1.473508e-07\n Solve Converged!\n\nOutlier Variable Residual Norms:\n  temperature: 1.217829e-07\n\nTime Step 7, time = 127, dt = 64\n    |residual|_2 of individual variables:\n                temperature: 0.00312226\n                gaspressure: 0.00162029\n                z:           0.0184551\n 0 Nonlinear |R| = 1.878732e-02\n      0 Linear |R| = 1.878732e-02\n      1 Linear |R| = 3.989651e-15\n    |residual|_2 of individual variables:\n                temperature: 5.14117e-05\n                gaspressure: 0.000167202\n                z:           0.00181632\n 1 Nonlinear |R| = 1.824720e-03\n      0 Linear |R| = 1.824720e-03\n      1 Linear |R| = 8.829085e-17\n    |residual|_2 of individual variables:\n                temperature: 2.07334e-05\n                gaspressure: 3.53354e-05\n                z:           1.62603e-05\n 2 Nonlinear |R| = 4.407791e-05\n      0 Linear |R| = 4.407791e-05\n      1 Linear |R| = 5.936759e-18\n    |residual|_2 of individual variables:\n                temperature: 5.89003e-06\n                gaspressure: 4.15092e-06\n                z:           6.78929e-07\n 3 Nonlinear |R| = 7.237646e-06\n      0 Linear |R| = 7.237646e-06\n      1 Linear |R| = 5.176584e-19\n    |residual|_2 of individual variables:\n                temperature: 9.71425e-07\n                gaspressure: 5.29577e-07\n                z:           1.05863e-07\n 4 Nonlinear |R| = 1.111451e-06\n Solve Converged!\n\nOutlier Variable Residual Norms:\n  temperature: 9.714246e-07\n\nTime Step 8, time = 255, dt = 128\n    |residual|_2 of individual variables:\n                temperature: 0.00250602\n                gaspressure: 0.00140339\n                z:           0.0160988\n 0 Nonlinear |R| = 1.635299e-02\n      0 Linear |R| = 1.635299e-02\n      1 Linear |R| = 7.256092e-15\n    |residual|_2 of individual variables:\n                temperature: 0.000175665\n                gaspressure: 0.000282962\n                z:           0.00290896\n 1 Nonlinear |R| = 2.927962e-03\n      0 Linear |R| = 2.927962e-03\n      1 Linear |R| = 3.180183e-16\n    |residual|_2 of individual variables:\n                temperature: 0.000207451\n                gaspressure: 0.00015822\n                z:           7.44667e-05\n 2 Nonlinear |R| = 2.713202e-04\n      0 Linear |R| = 2.713202e-04\n      1 Linear |R| = 2.013864e-16\n    |residual|_2 of individual variables:\n                temperature: 2.64601e-05\n                gaspressure: 3.3569e-05\n                z:           4.67856e-06\n 3 Nonlinear |R| = 4.299884e-05\n      0 Linear |R| = 4.299884e-05\n      1 Linear |R| = 2.371471e-17\n    |residual|_2 of individual variables:\n                temperature: 1.29023e-05\n                gaspressure: 7.22292e-06\n                z:           1.73668e-06\n 4 Nonlinear |R| = 1.488815e-05\n      0 Linear |R| = 1.488815e-05\n      1 Linear |R| = 6.379653e-18\n    |residual|_2 of individual variables:\n                temperature: 1.56807e-06\n                gaspressure: 1.03456e-06\n                z:           2.62333e-07\n 5 Nonlinear |R| = 1.896830e-06\n      0 Linear |R| = 1.896830e-06\n      1 Linear |R| = 2.338181e-19\n    |residual|_2 of individual variables:\n                temperature: 5.53599e-07\n                gaspressure: 4.88695e-07\n                z:           1.05877e-07\n 6 Nonlinear |R| = 7.459921e-07\n Solve Converged!\n\nTime Step 9, time = 511, dt = 256\n    |residual|_2 of individual variables:\n                temperature: 0.00200678\n                gaspressure: 0.00126932\n                z:           0.014716\n 0 Nonlinear |R| = 1.490638e-02\n      0 Linear |R| = 1.490638e-02\n      1 Linear |R| = 1.144826e-14\n    |residual|_2 of individual variables:\n                temperature: 0.000706743\n                gaspressure: 0.000734152\n                z:           0.00681274\n 1 Nonlinear |R| = 6.888537e-03\n      0 Linear |R| = 6.888537e-03\n      1 Linear |R| = 3.688654e-15\nfluid_state: temperature 272.53 is outside range 273.16 K <= T <= 647.096 K\n\nA MooseException was raised during Auxiliary variable computation.\nThe next solve will fail, the timestep will be reduced, and we will try again.\n\nNonlinear solve did not converge due to DIVERGED_FNORM_NAN iterations 1\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nSolve failed, cutting timestep.",
          "url": "https://github.com/idaholab/moose/discussions/26631",
          "updatedAt": "2024-01-26T10:34:39Z",
          "publishedAt": "2024-01-25T11:42:42Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@cpgr",
                  "url": "https://github.com/idaholab/moose/discussions/26631#discussioncomment-8247224",
                  "updatedAt": "2024-01-25T16:11:14Z",
                  "publishedAt": "2024-01-25T16:11:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "marinsiebert"
                  },
                  "bodyText": "Never mind, turns out spelling your own mistakes makes you realize them.\nI had erroneously taken the hydraulic conductivity from my dataset, after converting it to permeability this yields value <1e-15 m\u00b2 and now everything converges fine.",
                  "url": "https://github.com/idaholab/moose/discussions/26631#discussioncomment-8255465",
                  "updatedAt": "2024-01-26T10:34:40Z",
                  "publishedAt": "2024-01-26T10:34:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Customised elements",
          "author": {
            "login": "zia-javanbakht"
          },
          "bodyText": "I am trying to derive the week form of three coupled equilibrium equations for a 3-layer plate. I can do the FE formulation using additional DoFs, which requires a new type of element. How can I do this? Thanks.",
          "url": "https://github.com/idaholab/moose/discussions/26618",
          "updatedAt": "2024-01-26T02:05:11Z",
          "publishedAt": "2024-01-24T10:41:08Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nMaking custom elements is more of a libmesh change than something we can do in MOOSE.\nWhat type of new element do you need?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8233055",
                  "updatedAt": "2024-01-24T14:03:47Z",
                  "publishedAt": "2024-01-24T14:03:46Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "zia-javanbakht"
                          },
                          "bodyText": "Hi,\nThank you for your reply. I am modelling a three-layer sandwich structure. The elements can be Lagrange ones, but I the DoFs are a combination of displacements and rotations of the three layers. For instance, the first DoF is the average of deflections of the top and bottom layers, the second DoF is the average of their rotations. I am not sure how to address this.\nAs a side question, I have used the principle of virtual work and obtained the virtual internal and external works. I am also struggling to take this form to the standard kernel form that MOOSE requires.\nThank you very much for your help.\nkind regards,\nZia",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8238327",
                          "updatedAt": "2024-01-24T22:24:46Z",
                          "publishedAt": "2024-01-24T22:24:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Could you use multiple variables to host each dof?\nWe for example can have X and Y components of the displacement in two variables, and then there are two DOFs at each node (one for X, one for Y)",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8238408",
                          "updatedAt": "2024-01-24T22:34:00Z",
                          "publishedAt": "2024-01-24T22:33:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "zia-javanbakht"
                  },
                  "bodyText": "first DoF = average of the first components of deformation for layers 1 and 3\nsecond DoF = average of the second components of deformation for layers 1 and 3\nthird Dof = difference of the first components of deformation for layers 1 and 3\n...",
                  "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8238474",
                  "updatedAt": "2024-01-24T22:43:48Z",
                  "publishedAt": "2024-01-24T22:43:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Should you make these averages variables that are only defined in layer 2 then?\nThese dofs are supposed to live on layer 2 right?",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8238568",
                          "updatedAt": "2024-01-24T22:57:27Z",
                          "publishedAt": "2024-01-24T22:57:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "zia-javanbakht"
                          },
                          "bodyText": "Basically, the three layers are modelled as one layer with all the DoFs on it. I can send you my paper if it helps.",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8238717",
                          "updatedAt": "2024-01-24T23:21:17Z",
                          "publishedAt": "2024-01-24T23:21:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think you could a one layer mesh with the 9 variables defined in a as in the figure above.\nWe can solve problems with multiple variables.\nIf some of the variables are simple averages , you can use auxiliary variables to take them out of the nonlinear solver",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8238731",
                          "updatedAt": "2024-01-24T23:24:23Z",
                          "publishedAt": "2024-01-24T23:24:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "zia-javanbakht"
                          },
                          "bodyText": "The virtual work formulation is based on these averages so the DoFs must be these variables. Is there any examples available for something like this? Also do you know how to reformulate the virtual work expression into weak form suitable for MOOSE? Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8238881",
                          "updatedAt": "2024-01-24T23:53:47Z",
                          "publishedAt": "2024-01-24T23:53:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont know about the virtual work. @gambka @cbolisetti  ?\nthe DoFs must be these variables seems like you should have a variable field for each of them.",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8238903",
                          "updatedAt": "2024-01-24T23:58:22Z",
                          "publishedAt": "2024-01-24T23:58:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "zia-javanbakht"
                          },
                          "bodyText": "Thank you very much for answering my questions. Do I need to do anything specific for a \"variable field\"?",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8251507",
                          "updatedAt": "2024-01-26T01:13:43Z",
                          "publishedAt": "2024-01-26T01:13:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "A variable in moose is a field that is defined over part or all of the mesh.\nThere are variables that have DoFS on nodes (for example Lagrange) and others that have dofs at various locations on elements (for example monomial or Bernstein)\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/26618#discussioncomment-8251707",
                          "updatedAt": "2024-01-26T02:05:13Z",
                          "publishedAt": "2024-01-26T02:05:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Mapping AuxVariable that is Monomial to a Lagrangian one....",
          "author": {
            "login": "makeclean"
          },
          "bodyText": "I've been playing with a problem where I have a populated monomial variable, I want to populate a material object with the contents of that variable. What is the right way to do this? I basically am I trying to use the gravity kernel from tensor mechanics, which requires density as a material object, my material density is currently variable contained within a monomial auxvariable.",
          "url": "https://github.com/idaholab/moose/discussions/26626",
          "updatedAt": "2024-01-25T23:41:53Z",
          "publishedAt": "2024-01-24T16:32:06Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe ParsedMaterial can convert a variable into a material property.\nIf you want to use AD (and density depends on a nonlinear variable), rewriting your density as a material property is the way forward instead of forwarding from an auxiliary variable\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26626#discussioncomment-8235746",
                  "updatedAt": "2024-01-24T17:23:05Z",
                  "publishedAt": "2024-01-24T17:23:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "makeclean"
                          },
                          "bodyText": "So, what im doing is trying to use topology optimisation on 'real' geometry where some bits can be modified and some can't. So for example, I have two blocks, the red (not being optimised) and white being optimised. With the toy problems i've fixed the ends, and I'm pulling down (gravity nodal kernel) on the bottom.\n\nHowever, I want to apply it to a real problem, and thus I'm building complexity by setting the density to be fixed in the red, and variable on the basis of the SIMP method. I would like to use the tensor mechanics gravity kernel to determine the gravitational forces.\nThe examples found in the optimisation folder of the installation, have  AuxVariables like\n  [Emin]\n    family = MONOMIAL\n    order = CONSTANT\n    initial_condition = ${Emin}\n    block = 'inner'\n  []\n  [power]\n    family = MONOMIAL\n    order = CONSTANT\n    initial_condition = ${power}\n    block = 'inner'      \n  []\n  [E0]\n    family = MONOMIAL\n    order = CONSTANT\n    initial_condition = ${E0}\n    block = 'inner'     \n  []\n  [Dc]\n    family = MONOMIAL\n    order = CONSTANT\n    initial_condition = -1.0\n    block = 'inner'\n  []\n  [mat_den]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n\nSo I was using the density here, and setting it block with;\n[ICs]\n  [block1]\n    type = ConstantIC\n    variable = mat_den\n    value = ${vol_frac}\n    block = 'inner'\n  []\n  [block2]\n    type = ConstantIC\n    variable = mat_den\n    value = 1.0\n    block = 'outer'\n  []\n[]\n\nI was then filling the nodal AuxVariable with the density, and then using\n[Materials]\n  [density]\n    type = GenericFunctionMaterial\n    prop_names = 'density'\n    prop_values = get_density\n  []\n[]\n\n[Functions]\n  [get_density]\n    type = ParsedFunction\n    expression = 'alpha'\n    symbol_names = 'alpha'\n    symbol_values = mat_den_nodal\n  []\n[]\n\nThis segfaults however;\n*** ERROR ***\nUnsupported order: 0\nStack frames: 18\n0: libMesh::print_trace(std::ostream&)\n1: libMesh::MacroFunctions::report_error(char const*, int, char const*, char const*, std::ostream&)\n2: /home/adavis/opt/moose/moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0(+0x787861) [0x7f1feb387861]\n3: libMesh::DofMap::reinit(libMesh::MeshBase&)\n4: libMesh::DofMap::distribute_dofs(libMesh::MeshBase&)\n5: libMesh::System::init_data()\n6: libMesh::System::init()\n7: libMesh::EquationSystems::init()\n8: FEProblemBase::init()\n9: Action::timedAct()\n10: ActionWarehouse::executeActionsWithAction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n11: ActionWarehouse::executeAllActions()\n12: MooseApp::runInputFile()\n13: MooseApp::run()\n14: main\n15: /lib64/libc.so.6(+0x27550) [0x7f1fe284a550]\n16: __libc_start_main\n17: /home/adavis/opt/moose/moose/modules/combined/combined-opt() [0x4044f5]\n[0] ../src/fe/fe_lagrange.C, line 777, compiled Nov  7 2023 at 15:03:29",
                          "url": "https://github.com/idaholab/moose/discussions/26626#discussioncomment-8236813",
                          "updatedAt": "2024-01-24T19:18:33Z",
                          "publishedAt": "2024-01-24T19:18:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "makeclean"
                          },
                          "bodyText": "So instead, you're saying I should set density via the material object, and instead use an AuxKernel to populate the AuxVariable, so MaterialRealAux to populate the AuxVariable. That would give the ability to set whats needed, but at the end of the timestep I would need to update that material object, would that be a PostProcessor?",
                          "url": "https://github.com/idaholab/moose/discussions/26626#discussioncomment-8236937",
                          "updatedAt": "2024-01-24T19:31:44Z",
                          "publishedAt": "2024-01-24T19:31:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what is mat_den_nodal ?\n[Functions]\n  [get_density]\n    type = ParsedFunction\n    expression = 'alpha'\n    symbol_names = 'alpha'\n    symbol_values = mat_den_nodal\n  []\n[]\n\nfunctions cant depend on variables.\nThe seg fault is concerning. We definitely would want your input or a reduced version of it to fix this.\nYou can use the MaterialRealAux  to populate the auxvariable indeed. The variable is only needed for output right? The material property is actually what is being used in the optimization ?",
                          "url": "https://github.com/idaholab/moose/discussions/26626#discussioncomment-8237704",
                          "updatedAt": "2024-01-24T21:11:56Z",
                          "publishedAt": "2024-01-24T21:11:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "makeclean"
                          },
                          "bodyText": "No, the material property isn't being used in the optimisation, I've modified https://github.com/idaholab/moose/blob/next/modules/combined/examples/optimization/2d_mbb.i to use the Gravity kernel, but the the density, mat_den is a monomial auxvariable since the element is either density greater than 0 (on) and 0 (off), that density is updated by a postprocessor on the basis of the SIMP compliance. I was trying to update to use the kernel, such that this is reflect in variable mass rather than a fixed mass in that example.",
                          "url": "https://github.com/idaholab/moose/discussions/26626#discussioncomment-8244191",
                          "updatedAt": "2024-01-25T11:50:45Z",
                          "publishedAt": "2024-01-25T11:50:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@lynnmunday",
                          "url": "https://github.com/idaholab/moose/discussions/26626#discussioncomment-8245613",
                          "updatedAt": "2024-01-25T14:18:31Z",
                          "publishedAt": "2024-01-25T14:18:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@somu15",
                          "url": "https://github.com/idaholab/moose/discussions/26626#discussioncomment-8247603",
                          "updatedAt": "2024-01-25T16:45:58Z",
                          "publishedAt": "2024-01-25T16:45:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "@maxnezdyur Has examples that limit the optimization to a specific block while not optimizing the other blocks for a fixed load.  Is the load you are applying a function of the density so as the optimization changes the density field, it also changes the load?  I don't know that I've seen an example of SIMP for a problem like that.  @maxnezdyur will know, he implemented all of this.",
                          "url": "https://github.com/idaholab/moose/discussions/26626#discussioncomment-8251040",
                          "updatedAt": "2024-01-25T23:42:20Z",
                          "publishedAt": "2024-01-25T23:41:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Does SUPG in INS momentum kernel automatically cover custom source (external force) terms?",
          "author": {
            "login": "Minjiang-Zhu"
          },
          "bodyText": "As stated, I defined some new source terms in INS momentum equation. I also noticed the SUPG option in INS momentum kernel. I wonder if custom source terms are automatically covered by this SUPG option; otherwise, I should implement SUPG to new source terms by myself.",
          "url": "https://github.com/idaholab/moose/discussions/26600",
          "updatedAt": "2024-01-25T23:03:07Z",
          "publishedAt": "2024-01-21T18:50:43Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNo if you want SUPG to be consistent with the new source term, you should modify the computation of the momentum equation strong residual in the INSADTauMaterial (see materials/INSADTauMaterial.h). You can see a lot of the terms there, for example Boussinesq or a coupled force strong residual.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26600#discussioncomment-8202621",
                  "updatedAt": "2024-01-22T00:10:22Z",
                  "publishedAt": "2024-01-22T00:10:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Minjiang-Zhu"
                          },
                          "bodyText": "Hi, thanks for clarifying. However, I use the INSMomentumTractionFormRZ, which seems not an AD kernel. Should I keep modifying residual in INSADTauMaterial?",
                          "url": "https://github.com/idaholab/moose/discussions/26600#discussioncomment-8211142",
                          "updatedAt": "2024-01-22T16:46:27Z",
                          "publishedAt": "2024-01-22T16:46:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "If your body force is described by a function, then you can use the forcing_func parameter in your INSMomentumTractionFormRZ block. This will be included consistently in the SUPG stabilization",
                          "url": "https://github.com/idaholab/moose/discussions/26600#discussioncomment-8212474",
                          "updatedAt": "2024-01-22T18:53:01Z",
                          "publishedAt": "2024-01-22T18:53:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Just be careful about the sign. _ffn is the forcing_func in the code\nReal\nINSMomentumBase::computeQpResidual()\n{\n  Real r = 0;\n\n  // viscous term                                                                                                     \n  r += computeQpResidualViscousPart();\n\n  // pressure term                                                                                                    \n  if (_integrate_p_by_parts)\n    r += _grad_test[_i][_qp](_component) * weakPressureTerm();\n  else\n    r += _test[_i][_qp] * strongPressureTerm()(_component);\n\n  // body force term                                                                                                  \n  r += _test[_i][_qp] * (gravityTerm()(_component) - _ffn.value(_t, _q_point[_qp]));",
                          "url": "https://github.com/idaholab/moose/discussions/26600#discussioncomment-8212494",
                          "updatedAt": "2024-01-22T18:54:26Z",
                          "publishedAt": "2024-01-22T18:54:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Minjiang-Zhu"
                          },
                          "bodyText": "Thanks for your support. However, the force term I need requires gradient calculation and variable coupling. Is function method capable of these?",
                          "url": "https://github.com/idaholab/moose/discussions/26600#discussioncomment-8238465",
                          "updatedAt": "2024-01-24T22:42:15Z",
                          "publishedAt": "2024-01-24T22:42:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Functions can only depend on space, time, and postprocessors.\nSo it cannot.",
                          "url": "https://github.com/idaholab/moose/discussions/26600#discussioncomment-8238558",
                          "updatedAt": "2024-01-24T22:56:24Z",
                          "publishedAt": "2024-01-24T22:56:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Minjiang-Zhu"
                          },
                          "bodyText": "I guess I need to modify the corresponding kernels you and @lindsayad mentioned before. Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/26600#discussioncomment-8238841",
                          "updatedAt": "2024-01-24T23:46:22Z",
                          "publishedAt": "2024-01-24T23:46:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Minjiang-Zhu"
                          },
                          "bodyText": "I finally managed to fix the issue. The simplest way I found is to modify the body force expressions in INSBase.C.",
                          "url": "https://github.com/idaholab/moose/discussions/26600#discussioncomment-8250851",
                          "updatedAt": "2024-01-25T23:03:05Z",
                          "publishedAt": "2024-01-25T23:03:04Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}