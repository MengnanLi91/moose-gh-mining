{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wOS0xOFQwMzozMDoyMi0wNTowMM4AVdoU"
    },
    "edges": [
      {
        "node": {
          "title": "volumetric locking correction for TET10",
          "author": {
            "login": "jmeier"
          },
          "bodyText": "Dear Moose Community,\nI have tried to activate the option \"volumetric_locking_correction\" (within [Modules/TensorMechanics/Master]) for a mesh that consists exclusively of TET10 elements. Here I get the following error message from Moose:\n\"Volumetric locking correction should not be used for higher-order elements.\"\nI would have assumed that TET10 elements are suitable for this correction. Do I have a misunderstanding?",
          "url": "https://github.com/idaholab/moose/discussions/25496",
          "updatedAt": "2023-09-19T17:32:45Z",
          "publishedAt": "2023-09-18T14:54:45Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "TET10 is second order (4 vertex nodes + 6 mid-edge nodes we use for the additional dofs)\n@recuero @roystgnr for the meat of the question",
                  "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7036414",
                  "updatedAt": "2023-09-18T15:33:42Z",
                  "publishedAt": "2023-09-18T15:33:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "I'm more of a fluids guy than an elasticity guy, but I'd have assumed that Tet10 elements were suitable for the correction - https://mooseframework.inl.gov/modules/tensor_mechanics/VolumetricLocking.html shows it being applied at the weak formulation level, so whatever sins it commits ought to be somewhat element-independent.  At least in the fluids world the best stabilization schemes don't actually hurt anything when they're used on spaces for which they're superfluous.  I'd guess it wasn't a necessary correction on Tet10 ... but http://solidmechanics.org/Text/Chapter8_6/Chapter8_6.php talks about using reduced integration (the other popular way to avoid locking here) on Tet10, so maybe I guessed wrong?",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7038387",
                          "updatedAt": "2023-09-18T19:08:52Z",
                          "publishedAt": "2023-09-18T19:08:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "I doubt there's volumetric locking for second order TETs (or TRI in 2D). But it's been a long time since I last looked this problem. There is a traditional Cook's membrane problem to verify whether there's locking: https://mooseframework.inl.gov/modules/tensor_mechanics/VolumetricLocking.html\nThe reason for the error \"Volumetric locking correction should not be used for higher-order elements.\" must be that someone tested higher-order elements and observed that no B-bar stabilization is needed. If you are interested, please feel free to try the Cook's membrane with second order TRI6. I am interested in your findings.",
                  "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7036469",
                  "updatedAt": "2023-09-18T15:38:25Z",
                  "publishedAt": "2023-09-18T15:38:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Shear locking though, is a different problem and we don't currently have a good way of stabilizing it.",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7036494",
                          "updatedAt": "2023-09-18T15:40:55Z",
                          "publishedAt": "2023-09-18T15:40:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jmeier"
                          },
                          "bodyText": "Dear @hugary1995, @GiudGiud, and @roystgnr,\nThank you for looking into this topic and your valued input.\n@hugary1995: As far as I know Moose currently has only rectangular 4-node shell elements (#23874). If there is a TET6 in Moose in the future, the Cook's membrane test for sure is an interesting test to run.",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7041578",
                          "updatedAt": "2023-09-19T04:45:11Z",
                          "publishedAt": "2023-09-19T04:45:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jmeier"
                          },
                          "bodyText": "Dear all,\nplease find below a small test model where two \"plates\" made of TET10 elements get bend by a point load. One plate is coarsly meshed. The other one consists of a very fine mesh. In case of PoissonsRatio=nu=0.3 the max displacement of both plates are in good agreement. For nu=0.49 the coarsly meshed plate reacts a lot stiffer.\nA screenshot for nu=0.3 of both \"plates\" made from TET10 (max disp z of both plates is ca. 1.6m - color scale 0.0 - 1.6):\n\nA screenshot for nu=0.49 of both \"plates\" made from TET10 (the coarsly meshed plate reacts stiffer - color scale 1.25-1.4):\n\nDisclaimer: I'm not sure if volumetric locking is causing this - or shear locking. It is currently unclear to me how to distinguish these two effects. The idea was to find out using the moose option mentioned above.\nThe corresponding mesh file (please remove the \".txt\")\nPlateBender - OnlyVolumes.msh.txt\nThe input file (for nu=0.49):\n# testing plate bending\n\n# Model Units\nmodelunit_length = 'm'\nmodelunit_time   = 's'\nmodelunit_mass = 'kg' # Mg = tons; Gg = kilotons\nmodelunit_force  = ${raw ${modelunit_mass} * ${modelunit_length} / ${modelunit_time} ^ 2}\nmodelunit_pressure = ${raw ${modelunit_force} / ${modelunit_length} ^ 2}\n#modelunit_acceleration = ${raw ${modelunit_length} / ${modelunit_time} ^ 2}\n#modelunit_density = ${raw ${modelunit_mass} / ${modelunit_length} ^ 3}\n\n[Mesh]\n  [File]\n    type = FileMeshGenerator\n    file = \"PlateBender-OnlyVolumes.msh\"\n    #show_info = true\n  []\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n  large_kinematics = false\n[]\n\n[Modules/TensorMechanics/Master]\n  [./all]\n    new_system = true                     # TRUE to use the new lagrangian kernel system\n    formulation = total                   # controlling if the UPDATED or TOTAL Lagrangian formulation is used (default is TOTAL)\n    strain = small                        # FINITE or SMALL kinematic formulations\n    #volumetric_locking_correction = true\n\n    add_variables = true\n\n    generate_output = 'stress_xx stress_xy stress_xz stress_yy stress_yz stress_zz '\n                      #'max_principal_stress mid_principal_stress min_principal_stress '\n  []\n[]\n\n# ===== Boundary Conditions =====\nXMinSurfaces = 'SrfVolumeL1_XMinA_1 SrfVolumeL1_XMinB_1 SrfVolumeL2_XMinA_1 SrfVolumeL2_XMinB_1'\n[BCs]\n\n  [./BoundaryZMin_DispX]\n    type = DirichletBC\n    boundary = ${XMinSurfaces}\n    variable = disp_x\n    value = 0\n  []\n\n  [./BoundaryZMin_DispY]\n    type = DirichletBC\n    boundary = ${XMinSurfaces}\n    variable = disp_y\n    value = 0\n  []\n\n  [./BoundaryZMin_DispZ]\n    type = DirichletBC\n    boundary = ${XMinSurfaces}\n    variable = disp_z\n    value = 0\n  []\n\n[]\n\npointLoad = ${units 100 kN -> ${modelunit_force}}\n\n[Functions]\n  [./PointLoad]\n    type = ParsedFunction\n    symbol_names  = 'pointLoad'\n    symbol_values = '${pointLoad}'\n    expression = 'pointLoad * t'\n  []\n[]\n\n[DiracKernels]\n\n  [./point_source1]\n    type = FunctionDiracSource\n    variable = disp_z\n    function = PointLoad\n    point = '+2.0 +0.0 +0.0'\n    #point_not_found_behavior = ERROR\n  []\n\n  [./point_source2]\n    type = FunctionDiracSource\n    variable = disp_z\n    function = PointLoad\n    point = '+2.0 -5.0 +0.0'\n    #point_not_found_behavior = ERROR\n  []\n\n[]\n\nvolPlates = 'VolVolumeL2A_1 VolVolumeL2B_1 VolVolumeL1A_1 VolVolumeL1B_1'\n[Materials]\n\n  [./volPlates_elasticity_tensor]\n    type = ComputeIsotropicElasticityTensor\n    block = ${volPlates}\n    youngs_modulus = ${units 1000E3 kN/m^2 -> ${modelunit_pressure}}\n    poissons_ratio = 0.49\n  []\n\n  [./volPlates_stress]\n    type = ComputeLagrangianWrappedStress\n    block = ${volPlates}\n  []\n\n  [./volPlates_stress_base]\n    type = ComputeLinearElasticStress\n    block = ${volPlates}\n  []\n\n[]\n\n[Executioner]\n  start_time = 0.0\n  end_time = 1.0\n  dt = 1.0\n\n  type = Transient\n  #automatic_scaling = true\n  #verbose = true\n  \n  solve_type = NEWTON\n  petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n  petsc_options_value = ' lu       mumps'\n  \n  nl_abs_tol = 1E-3\n  #nl_rel_tol = 1E-12\n  nl_max_its = 400\n  \n  l_tol = 1E-3\n  l_max_its = 200\n[]\n\n[Outputs]\n  perf_graph = true\n  exodus = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7042352",
                          "updatedAt": "2023-09-19T07:23:30Z",
                          "publishedAt": "2023-09-19T06:51:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I would try a coarse tet4 case with volumetric locking correction on and off and see if\n\nthe result with off is close to the tet10 result\nThe result with the correction is better and closer to the fine mesh",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7045316",
                          "updatedAt": "2023-09-19T11:50:36Z",
                          "publishedAt": "2023-09-19T11:50:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jmeier"
                          },
                          "bodyText": "Is there a way to exchange the TET10 with TET4 after reading it with the [Mesh][File]? Or do I have to replace the msh file?",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7045338",
                          "updatedAt": "2023-09-19T11:53:37Z",
                          "publishedAt": "2023-09-19T11:53:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You ll have to replace the file\nwe are interested in the contribution of an element order converter but we don\u2019t have it",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7045396",
                          "updatedAt": "2023-09-19T11:58:40Z",
                          "publishedAt": "2023-09-19T11:58:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jmeier"
                          },
                          "bodyText": "With the TET4 it gets extreme even for nu = 0.3 - but volumetric_locking_correction does not seem to have an effect. I'm doing something wrong?\n(all results are u_z in meters)\nFor nu=0.3\n\n\n\noption\ncoarsly meshed plate\ndensly meshed plate\n\n\n\n\nTET4, volumetric_locking_correction=false\n0.39\n1.31\n\n\nTET4, volumetric_locking_correction=true\n0.39\n1.31\n\n\n\nNow for nu=0.45:\n\n\n\noption\ncoarsly meshed plate\ndensly meshed plate\n\n\n\n\nTET4, volumetric_locking_correction=false\n0.25\n1.10\n\n\nTET4, volumetric_locking_correction=true\n0.25\n1.10\n\n\n\nThe MSH file I used:\nPlateBender-OnlyVolumes-TET4.msh.txt\nThe MSH file has actually all nodes of the TET10 elements. But only a fraction of these nodes are used by the TET4-elements. Moose writes its uses TET4 and does not complain about the \"floating\" nodes.",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7046981",
                          "updatedAt": "2023-09-19T14:13:59Z",
                          "publishedAt": "2023-09-19T14:13:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "volumetric_locking_correction has no effect on linear tets.",
                          "url": "https://github.com/idaholab/moose/discussions/25496#discussioncomment-7049159",
                          "updatedAt": "2023-09-19T17:32:46Z",
                          "publishedAt": "2023-09-19T17:32:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "New HPC MOOSE installation - Error detected in HDF5",
          "author": {
            "login": "ykvishal"
          },
          "bodyText": "Our HPC has new OS, so we have install HPC version of MOOSe again. I used following packages\nufrc mkl/2023.2.0 gcc/12.2.0 openmpi/4.1.5 python/3.11 cmake/3.26.4\npetsc and libmesh installation was smooth. I got couple of failures with run_tests with  moose test opt step\n relationship_managers/two_rm.evaluable_neighbors/distributed ................... [MESH_MODE!=DISTRIBUTED] SKIPrelationship_managers/two_rm.evaluable_neighbors/replicated .................... [--with-dof-id-bytes!=4] SKIPsamplers/distribute.scale/execute ....................................................... [no matplotlib] SKIPsamplers/distribute.scale/plot ....................................... [no matplotlib,skipped dependency] SKIPmeshgenerators/boundary_deletion_generator.boundary_deletion_test ......................... [no deepdiff] SKIPmeshgenerators/parsed_element_deletion_generator.volume_too_small ......................... [no deepdiff] SKIPmeshgenerators/parsed_element_deletion_generator.centroid_position ........................ [no deepdiff] SKIPminimal_app.minimal ........................................................................ [NO DISPLAY] SKIPreporters/nodal_reporter.nodal_stats ...................................................... [no deepdiff] SKIPreporters/accumulated_reporter.accumulate_reporter ........................................ [no deepdiff] SKIPreporters/element_reporter.elem_stats ..................................................... [no deepdiff] SKIPutils/libtorch_nn/torch_script.libtorch-torch-script ................................... [LIBTORCH!=TRUE] SKIPoutputs/hide_via_reporters_block.test ..................................................... [no deepdiff] SKIPoutputs/json/one_file_per_timestep.basic .................................................. [no deepdiff] SKIPoutputs/vpp_as_reporter.test .............................................................. [no deepdiff] SKIPoutputs/pp_as_reporter.test ............................................................... [no deepdiff] SKIPfvkernels/mms/skewness-correction/two_term_extrapol.skewcorrected ....................... [no matplotlib] SKIPfvkernels/mms/broken-domain.broken-domain ............................................... [no matplotlib] SKIPmisc/execute_on.test ...................................................................... [no deepdiff] SKIPmeshgenerators/map_extra_element_ids.map_ids_test ......................................... [no deepdiff] SKIPmisc/signal_handler.test_signal_recover ............................................ [skipped dependency] SKIPmisc/signal_handler.test_signal_parallel_recover ................................... [skipped dependency] SKIPmisc/signal_handler.test_signal .................................................... FAILED (TESTER EXCEPTION)misc/signal_handler.test_signal_parallel .............................. [min_cpus=3] FAILED (TESTER EXCEPTION)--------------------------------------------------------------------------------------------------------------Ran 3852 tests in 220.6 seconds. Average test time 0.9 seconds, maximum test time 25.6 seconds.3850 passed, 226 skipped, 0 pending, 2 FAILED\nPhase field module make and run test steps were without any problem.\nHowever, when I run simulations, I get following warning after completion of simulation\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\nHDF5-DIAG: Error detected in HDF5 (1.12.1) thread 0:\n  #000: H5P.c line 1490 in H5Pclose(): not a property list\n    major: Invalid arguments to routine\n    minor: Inappropriate type\nPropList::~PropList - H5Pclose failed\n\nHere is the output from moose/scripts/diagnostics.sh\nMon Sep 18 20:59:36 EDT 2023\n\nSystem Arch: LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch Distributor ID: RedHatEnterprise Description: Red Hat Enterprise Linux release 8.8 (Ootpa) Release: 8.8 Codename: Ootpa\n\nMOOSE Package Version: Custom Build\n\nCPU Count: 128\n\nMemory Free: 953308.004 MB\n\nVariable `which $CC` check:\n/apps/mpi/gcc/12.2.0/openmpi/4.1.5/bin/mpicc\n\n$CC --version:\ngcc (GCC) 12.2.0\nCopyright (C) 2022 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nMPICC:\nwhich mpicc:\n\t/apps/mpi/gcc/12.2.0/openmpi/4.1.5/bin/mpicc\nmpicc -show:\n\tgcc -I/apps/mpi/gcc/12.2.0/openmpi/4.1.5/include -pthread -L/apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib -L/opt/pmix/3.2.4/lib -L/opt/slurm/lib64 -Wl,-rpath -Wl,/apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib -Wl,-rpath -Wl,/opt/pmix/3.2.4/lib -Wl,-rpath -Wl,/opt/slurm/lib64 -Wl,--enable-new-dtags -lmpi\n\nCOMPILER gcc:\ngcc (GCC) 12.2.0\nCopyright (C) 2022 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nPython:\n\t/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/bin/python\n\tPython 3.11.5\n\nMODULES:\n\nCurrently Loaded Modules:\n  1) ufrc   2) mkl/2023.2.0   3) gcc/12.2.0   4) openmpi/4.1.5   5) python/3.11   6) cmake/3.26.4\n\n \n\nPETSC_DIR not set\n\nENVIRONMENT:\n { \n { \n { \n { \n { \n { \n { \n { \n { \n { \n };\n };\n };\n };\n };\n };\n };\n };\n };\n };\n}\n}\n}\n}\n}\n}\n}\n}\n}\n $strategy $host $port;\n $strategy $host $port;\nBASH_ENV=/apps/lmod/el8lmod/init/bash\nBASH_FUNC_create_passwd%%=() {  tr -cd 'a-zA-Z0-9' < /dev/urandom 2> /dev/null | head -c${1:-8}\nBASH_FUNC_find_port%%=() {  local host=\"${1:-localhost}\";\nBASH_FUNC_ml%%=() {  eval \"$($LMOD_DIR/ml_cmd \"$@\")\"\nBASH_FUNC_module%%=() {  eval \"$($LMOD_CMD bash \"$@\")\" && eval $(${LMOD_SETTARG_CMD:-:} -s sh)\nBASH_FUNC_port_used%%=() {  local port=\"${1#*:}\";\nBASH_FUNC_random_number%%=() {  shuf -i ${1}-${2} -n 1\nBASH_FUNC_source_helpers%%=() {  function random_number () \nBASH_FUNC_wait_until_port_used%%=() {  local port=\"${1}\";\nBASH_FUNC_which%%=() {  ( alias;\nCC=mpicc\n_CE_CONDA=\n_CE_M=\nCMAKE_LIBRARY_PATH=/apps/compilers/gcc/12.2/lib64\nCMAKE_PREFIX_PATH=/apps/compilers/gcc/12.2\nCOLORTERM=truecolor\nCONDA_EXE=/blue/michael.tonks/v.yadav/mambaforge3/bin/conda\nCONDA_PYTHON_EXE=/blue/michael.tonks/v.yadav/mambaforge3/bin/python\nCONDA_SHLVL=0\nCPATH=/apps/compilers/intel/2023/2.0.49397/mkl/latest/include\nCXX=mpicxx\nDBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-RIyS3Gw1XI,guid=7a4726bc4de0f8b9feec460d6508ae08\n ( : < /dev/tcp/$1/$2 ) > /dev/null 2>&1;\nDISPLAY=:2.0\n do\n do\n do\n do\n done;\n done;\n done;\n done;\n done;\n done;\n echo \"${port}\"\n echo \"${port}\"\n echo \"command options are lsof, nc, bash's /dev/tcp, or python (or python3) with socket lib.\";\n echo \"command options are lsof, nc, bash's /dev/tcp, or python (or python3) with socket lib.\";\n echo \"commands to find port were either not found or inaccessible.\";\n echo \"commands to find port were either not found or inaccessible.\";\n else\n else\n else\nENVIRONMENT=BATCH\n eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@\n export -f create_passwd\n export -f find_port;\n export -f port_used;\n export -f random_number;\n export -f wait_until_port_used;\nF77=mpif77\nF90=f95\nFC=mpif90\n fi\n fi;\n fi;\n fi;\n fi;\n fi;\n fi;\n for ((i=1; i<=time*2; i++))\n for ((i=1; i<=time*2; i++))\n for strategy in ${port_strategies[@]};\n for strategy in ${port_strategies[@]};\n function create_passwd () \n function find_port () \n function port_used () \n function port_used_bash () \n function port_used_lsof () \n function port_used_nc () \n function port_used_python () \n function port_used_python3 () \n function wait_until_port_used () \nHISTCONTROL=ignoredups\nHISTSIZE=1000\nHOME=/home/v.yadav\nhost=c0705a-s1.ufhpc\nHOSTNAME=c0705a-s1.ufhpc\nHPC_CMAKE_BIN=/apps/cmake/3.26.4/bin\nHPC_CMAKE_DIR=/apps/cmake/3.26.4\nHPC_CMAKE_DOC=/apps/cmake/3.26.4/doc/cmake-3.26\nHPC_COMPILER_FAMILY=gnu\nHPC_GCC_DIR=/apps/compilers/gcc/12.2\nHPC_GCC_PYTHON_DIR=/apps/compilers/gcc/12.2/share/gcc-12.2.0/python\nHPC_MKL_DIR=/apps/compilers/intel/2023/2.0.49397/mkl/latest\nHPC_MKL_INC=/apps/compilers/intel/2023/2.0.49397/mkl/latest/include\nHPC_MKL_LIB=/apps/compilers/intel/2023/2.0.49397/mkl/latest/lib/intel64\nHPC_OPENMPI_BIN=/apps/mpi/gcc/12.2.0/openmpi/4.1.5/bin\nHPC_OPENMPI_DIR=/apps/mpi/gcc/12.2.0/openmpi/4.1.5\nHPC_OPENMPI_DOC=/apps/mpi/gcc/12.2.0/openmpi/4.1.5/share/openmpi\nHPC_OPENMPI_INC=/apps/mpi/gcc/12.2.0/openmpi/4.1.5/include\nHPC_PMIX=pmix_v3\nHPC_PYTHON_BIN=/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/bin\nHPC_PYTHON_DIR=/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5\nHPC_PYTHON_INC=/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/include\nHPC_PYTHON_LIB=/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/lib\n if [ \"$bash_supported\" == \"/dev/tcp/*/*\" ]; then\n if [ \"$port_status\" == \"0\" ]; then\n if [ \"$port_status\" == \"0\" ]; then\n if [ \"$port_status\" == \"127\" ]; then\n if [ \"$port_status\" == \"127\" ]; then\n if [[ \"$status\" == \"0\" ]] || [[ \"$status\" == \"1\" ]]; then\n if [[ \"$status\" == \"0\" ]] || [[ \"$status\" == \"1\" ]]; then\nINFOPATH=/apps/mpi/gcc/12.2.0/openmpi/4.1.5/share/openmpi\n__Init_Default_Modules=1\nLANG=en_US.UTF-8\nLD_LIBRARY_PATH=/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/lib:/apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib64/openmpi:/apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib64:/opt/slurm/lib64:/apps/compilers/gcc/12.2/lib64:/apps/compilers/intel/2023/2.0.49397/mkl/latest/lib/intel64:/apps/compilers/intel/2023/2.0.49397/compiler/latest/linux/lib::\nLESSOPEN=||/usr/bin/lesspipe.sh %s\nLIBRARY_PATH=/apps/compilers/intel/2023/2.0.49397/mkl/latest/lib/intel64:/apps/compilers/intel/2023/2.0.49397/compiler/latest/linux/lib\n_LMFILES_=/apps/lmod/modulefiles/core/ufrc.lua:/apps/lmod/modulefiles/core/mkl/2023.2.0.lua:/apps/lmod/modulefiles/core/gcc/12.2.0.lua:/apps/lmod/modulefiles/compiler/gcc/12.2.0/openmpi/4.1.5.lua:/apps/lmod/modulefiles/mpi/gcc/12.2.0/openmpi/4.1.5/python/3.11.lua:/apps/lmod/modulefiles/core/cmake/3.26.4.lua\nLMOD_AVAIL_STYLE=ufrc:system\nLMOD_CMD=/apps/lmod/8.7.32/libexec/lmod\nLMOD_COLORIZE=yes\nLMOD_DIR=/apps/lmod/8.7.32/libexec\nLMOD_FAMILY_COMPILER=gcc\nLMOD_FAMILY_COMPILER_VERSION=12.2.0\nLMOD_FAMILY_MPI=openmpi\nLMOD_FAMILY_MPI_VERSION=4.1.5\nLMOD_FAMILY_PYTHON=python\nLMOD_FAMILY_PYTHON_VERSION=3.11\nLMOD_PACKAGE_PATH=/apps/lmod/conf\nLMOD_PKG=/apps/lmod/8.7.32\n__LMOD_REF_COUNT_CMAKE_LIBRARY_PATH=/apps/compilers/gcc/12.2/lib64:1\n__LMOD_REF_COUNT_CMAKE_PREFIX_PATH=/apps/compilers/gcc/12.2:1\n__LMOD_REF_COUNT_CPATH=/apps/compilers/intel/2023/2.0.49397/mkl/latest/include:1\n__LMOD_REF_COUNT_INFOPATH=/apps/mpi/gcc/12.2.0/openmpi/4.1.5/share/openmpi:1\n__LMOD_REF_COUNT_LD_LIBRARY_PATH=/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/lib:1;/apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib64/openmpi:1;/apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib64:1;/opt/slurm/lib64:4;/apps/compilers/gcc/12.2/lib64:1;/apps/compilers/intel/2023/2.0.49397/mkl/latest/lib/intel64:1;/apps/compilers/intel/2023/2.0.49397/compiler/latest/linux/lib:1;:1\n__LMOD_REF_COUNT_LIBRARY_PATH=/apps/compilers/intel/2023/2.0.49397/mkl/latest/lib/intel64:1;/apps/compilers/intel/2023/2.0.49397/compiler/latest/linux/lib:1\n__LMOD_REF_COUNT_MANPATH=/apps/cmake/3.26.4/share/man:1;/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/share/man:1;:1;/apps/mpi/gcc/12.2.0/openmpi/4.1.5/share/man:1;/apps/compilers/gcc/12.2/share/man:1;/apps/compilers/intel/2023/2.0.49397/compiler/2023.2.0/documentation/en/man/common:1;/apps/ufrc/share/man:1;/opt/slurm/share/man:3;/apps/lmod/el8lmod/share/man:1;/opt/puppetlabs/puppet/share/man:1\n__LMOD_REF_COUNT_MODULEPATH=/apps/lmod/modulefiles/mpi/gcc/12.2.0/openmpi/4.1.5:1;/apps/lmod/modulefiles/compiler/gcc/12.2.0:1;/apps/lmod/modulefiles/core:1\n__LMOD_REF_COUNT_NLSPATH=/apps/compilers/intel/2023/2.0.49397/mkl/latest/lib/intel64/locale/%l_%t/%N:1;/apps/compilers/intel/2023/2.0.49397/compiler/latest/linux/lib/intel64/locale/%l_%t/%N:1\n__LMOD_REF_COUNT_PATH=/apps/cmake/3.26.4/bin:1;/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/bin:1;/apps/mpi/gcc/12.2.0/openmpi/4.1.5/bin:1;/apps/compilers/gcc/12.2/bin:1;/apps/ufrc/bin:1;/opt/slurm/bin:3;/opt/TurboVNC/bin:1;/blue/michael.tonks/v.yadav/mambaforge3/condabin:1;/usr/local/bin:1;/usr/bin:1;/usr/local/sbin:1;/usr/sbin:1;/opt/puppetlabs/bin:1;/bin:1;/home/v.yadav/bin:2\n__LMOD_REF_COUNT_XDG_DATA_DIRS=/apps/compilers/gcc/12.2/share:1\nLMOD_ROOT=/apps/lmod\nLMOD_SETTARG_FULL_SUPPORT=no\nLMOD_sys=Linux\nLMOD_SYSTEM_DEFAULT_MODULES=ufrc\nLMOD_VERSION=8.7.32\nLOADEDMODULES=ufrc:mkl/2023.2.0:gcc/12.2.0:openmpi/4.1.5:python/3.11:cmake/3.26.4\n local bash_supported=$(strings /bin/bash 2>/dev/null | grep tcp);\n local host=\"${1:-localhost}\";\n local host=$((expr \"${1}\" : '\\(.*\\):' || echo \"localhost\") | awk 'END{print $NF}');\n local host=$((expr \"${1}\" : '\\(.*\\):' || echo \"localhost\") | awk 'END{print $NF}');\n local port=\"${1#*:}\";\n local port=\"${1}\";\n local port=$(random_number \"${2:-2000}\" \"${3:-65535}\");\n local port=$(random_number \"${2:-2000}\" \"${3:-65535}\");\n local port_strategies=(port_used_nc port_used_lsof port_used_bash port_used_python port_used_python3);\n local port_strategies=(port_used_nc port_used_lsof port_used_bash port_used_python port_used_python3);\n local time=\"${2:-30}\";\n local time=\"${2:-30}\";\nLOGNAME=v.yadav\n lsof -i :\"$2\" > /dev/null 2>&1\nMAIL=/var/spool/mail/v.yadav\nMANPATH=/apps/cmake/3.26.4/share/man:/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/share/man::/apps/mpi/gcc/12.2.0/openmpi/4.1.5/share/man:/apps/compilers/gcc/12.2/share/man:/apps/compilers/intel/2023/2.0.49397/compiler/2023.2.0/documentation/en/man/common:/apps/ufrc/share/man:/opt/slurm/share/man:/apps/lmod/el8lmod/share/man:/opt/puppetlabs/puppet/share/man\nMKLROOT=/apps/compilers/intel/2023/2.0.49397/mkl/latest\nMODULEPATH=/apps/lmod/modulefiles/mpi/gcc/12.2.0/openmpi/4.1.5:/apps/lmod/modulefiles/compiler/gcc/12.2.0:/apps/lmod/modulefiles/core\nMODULEPATH_ROOT=/apps/lmod/modulefiles\nMODULESHOME=/apps/lmod/8.7.32\n_ModuleTable001_=X01vZHVsZVRhYmxlXyA9IHsKTVR2ZXJzaW9uID0gMywKY19yZWJ1aWxkVGltZSA9IGZhbHNlLApjX3Nob3J0VGltZSA9IGZhbHNlLApkZXB0aFQgPSB7fSwKZmFtaWx5ID0gewpNUEkgPSAib3Blbm1waSIsCmNvbXBpbGVyID0gImdjYyIsCnB5dGhvbiA9ICJweXRob24iLAp9LAptVCA9IHsKY21ha2UgPSB7CmZuID0gIi9hcHBzL2xtb2QvbW9kdWxlZmlsZXMvY29yZS9jbWFrZS8zLjI2LjQubHVhIiwKZnVsbE5hbWUgPSAiY21ha2UvMy4yNi40IiwKbG9hZE9yZGVyID0gNiwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDAsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJjbWFrZS8zLjI2LjQiLAp3ViA9ICIwMDAwMDAwMDMuMDAwMDAwMDI2LjAwMDAwMDAwNC4qemZp\n_ModuleTable002_=bmFsIiwKfSwKZ2NjID0gewpmbiA9ICIvYXBwcy9sbW9kL21vZHVsZWZpbGVzL2NvcmUvZ2NjLzEyLjIuMC5sdWEiLApmdWxsTmFtZSA9ICJnY2MvMTIuMi4wIiwKbG9hZE9yZGVyID0gMywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDAsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJnY2MvMTIuMi4wIiwKd1YgPSAiMDAwMDAwMDEyLjAwMDAwMDAwMi4qemZpbmFsIiwKfSwKbWtsID0gewpmbiA9ICIvYXBwcy9sbW9kL21vZHVsZWZpbGVzL2NvcmUvbWtsLzIwMjMuMi4wLmx1YSIsCmZ1bGxOYW1lID0gIm1rbC8yMDIzLjIuMCIsCmxvYWRPcmRlciA9IDIsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibWts\n_ModuleTable003_=LzIwMjMuMi4wIiwKd1YgPSAiMDAwMDAyMDIzLjAwMDAwMDAwMi4qemZpbmFsIiwKfSwKb3Blbm1waSA9IHsKZm4gPSAiL2FwcHMvbG1vZC9tb2R1bGVmaWxlcy9jb21waWxlci9nY2MvMTIuMi4wL29wZW5tcGkvNC4xLjUubHVhIiwKZnVsbE5hbWUgPSAib3Blbm1waS80LjEuNSIsCmxvYWRPcmRlciA9IDQsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAib3Blbm1waS80LjEuNSIsCndWID0gIjAwMDAwMDAwNC4wMDAwMDAwMDEuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApweXRob24gPSB7CmZuID0gIi9hcHBzL2xtb2QvbW9kdWxlZmlsZXMvbXBpL2djYy8xMi4yLjAvb3Blbm1waS80LjEuNS9weXRob24vMy4xMS5sdWEi\n_ModuleTable004_=LApmdWxsTmFtZSA9ICJweXRob24vMy4xMSIsCmxvYWRPcmRlciA9IDUsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAicHl0aG9uLzMuMTEiLAp3ViA9ICIwMDAwMDAwMDMuMDAwMDAwMDExLip6ZmluYWwiLAp9LAp1ZnJjID0gewpmbiA9ICIvYXBwcy9sbW9kL21vZHVsZWZpbGVzL2NvcmUvdWZyYy5sdWEiLApmdWxsTmFtZSA9ICJ1ZnJjIiwKbG9hZE9yZGVyID0gMSwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDAsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJ1ZnJjIiwKd1YgPSAiTS4qemZpbmFsIiwKfSwKfSwKbXBhdGhBID0gewoiL2FwcHMvbG1vZC9tb2R1bGVmaWxlcy9tcGkvZ2NjLzEyLjIuMC9v\n_ModuleTable005_=cGVubXBpLzQuMS41IiwgIi9hcHBzL2xtb2QvbW9kdWxlZmlsZXMvY29tcGlsZXIvZ2NjLzEyLjIuMCIsICIvYXBwcy9sbW9kL21vZHVsZWZpbGVzL2NvcmUiLAp9LApzeXN0ZW1CYXNlTVBBVEggPSAiL2FwcHMvbG1vZC9tb2R1bGVmaWxlcy9jb3JlIiwKfQo=\n_ModuleTable_Sz_=5\n nc -w 2 \"$1\" \"$2\" < /dev/null > /dev/null 2>&1\nNLSPATH=/apps/compilers/intel/2023/2.0.49397/mkl/latest/lib/intel64/locale/%l_%t/%N:/apps/compilers/intel/2023/2.0.49397/compiler/latest/linux/lib/intel64/locale/%l_%t/%N\nOLDPWD=/home/v.yadav/ondemand/data/sys/dashboard/batch_connect/sys/bc_desktop/hipergator/output/97ee5758-ba3a-4387-81dd-5285f7a388bf\nPANEL_GDK_CORE_DEVICE_EVENTS=0\nPATH=/apps/cmake/3.26.4/bin:/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/bin:/apps/mpi/gcc/12.2.0/openmpi/4.1.5/bin:/apps/compilers/gcc/12.2/bin:/apps/ufrc/bin:/opt/slurm/bin:/opt/TurboVNC/bin:/blue/michael.tonks/v.yadav/mambaforge3/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/puppetlabs/bin:/bin:/home/v.yadav/bin\n port=$(random_number \"${2:-2000}\" \"${3:-65535}\");\n port=$(random_number \"${2:-2000}\" \"${3:-65535}\");\nport=5902\n port_status=$?;\n port_status=$?;\n port_used \"${port}\";\n port_used \"${port}\";\nPWD=/home/v.yadav\n python3 -c \"import socket; socket.socket().connect(('$1',$2))\" > /dev/null 2>&1\nPYTHON=/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5/bin/python3\n python -c \"import socket; socket.socket().connect(('$1',$2))\" > /dev/null 2>&1\nPYTHONHOME=/apps/gcc/12.2.0/openmpi/4.1.5/python/3.11.5\nRCSTORAGE_CONF=/apps/ufrc/conf/rcstorage.toml\n return $status;\n return $status;\n return 0;\n return 0;\n return 1\n return 1\n return 127\n return 127\n return 127;\n return 127;\n return 127;\nS_COLORS=auto\nSESSION_MANAGER=local/unix:@/tmp/.ICE-unix/3616890,unix/unix:/tmp/.ICE-unix/3616890\nSHELL=/bin/bash\nSHLVL=5\n shuf -i ${1}-${2} -n 1\n sleep 0.5;\n sleep 0.5;\nSLURM_CLUSTER_NAME=hipergator\nSLURM_CONF=/opt/slurm/etc/slurm.conf\nSLURM_CPUS_ON_NODE=64\nSLURM_CPUS_PER_TASK=1\nSLURMD_NODENAME=c0705a-s1\nSLURM_EXPORT_ENV=NONE\nSLURM_GET_USER_ENV=1\nSLURM_GTIDS=0\nSLURM_JOB_ACCOUNT=michael.tonks\nSLURM_JOB_CPUS_PER_NODE=64\nSLURM_JOB_GID=3742\nSLURM_JOB_ID=10176540\nSLURM_JOBID=10176540\nSLURM_JOB_NAME=sys/dashboard/sys/bc_desktop/hipergator\nSLURM_JOB_NODELIST=c0705a-s1\nSLURM_JOB_NUM_NODES=1\nSLURM_JOB_PARTITION=hpg-default\nSLURM_JOB_QOS=michael.tonks qos\nSLURM_JOB_UID=8600\nSLURM_JOB_USER=v.yadav\nSLURM_LOCALID=0\nSLURM_MEM_PER_NODE=262144\nSLURM_NNODES=1\nSLURM_NODE_ALIASES=(null)\nSLURM_NODEID=0\nSLURM_NODELIST=c0705a-s1\nSLURM_NPROCS=64\nSLURM_NTASKS=64\nSLURM_PRIO_PROCESS=0\nSLURM_PROCID=0\nSLURM_SUBMIT_DIR=/var/www/ood/apps/sys/dashboard\nSLURM_SUBMIT_HOST=ondemand1.ufhpc\nSLURM_TASK_PID=3616773\nSLURM_TASKS_PER_NODE=64\nSLURM_TMPDIR=/scratch/local/10176540\nSLURM_TOPOLOGY_ADDR=ibswt1-1.ibswt2-2.ibsw0704-s41.c0705a-s1\nSLURM_TOPOLOGY_ADDR_PATTERN=switch.switch.switch.node\nSLURM_WORKING_CLUSTER=hipergator:vslurm:6817:9472:109\n status=$?;\n status=$?;\nTERM=xterm-256color\nTMPDIR=/scratch/local/10176540\n tr -cd 'a-zA-Z0-9' < /dev/urandom 2> /dev/null | head -c${1:-8}\nUSER=v.yadav\n_=/usr/bin/env\nVTE_VERSION=5204\nWEBSOCKIFY_CMD=/usr/bin/websockify\nwhich_declare=declare -f\n while port_used \"${host}:${port}\"; do\n while port_used \"${host}:${port}\"; do\nWINDOWID=25209643\nXDG_DATA_DIRS=/apps/compilers/gcc/12.2/share\nXDG_SESSION_ID=c22",
          "url": "https://github.com/idaholab/moose/discussions/25506",
          "updatedAt": "2023-09-19T17:28:33Z",
          "publishedAt": "2023-09-19T01:11:13Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nthe skipped test are normal.\nThe 2 failures are from a brittle test that is likely pulling in a library you don\u2019t have. Do you mind looking for the actual log of the failed tests in the console output? It should be output while the tests are running.\nThe hdf5 failures are more serious.\nFirst you need to unload this mkl module. We don\u2019t support intel compilers.\nThen it s odd that there is no hdf5 flag in the environment. @cticenhour do we set those during the install?\nand you run \u2018ldd\u2019 on your executable please? That will tell us which hdf5 you\u2019re running\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7045489",
                  "updatedAt": "2023-09-19T12:07:46Z",
                  "publishedAt": "2023-09-19T12:07:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "@GiudGiud I just want to add that I installed moose without mkl module and I am still getting the same error.",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7049103",
                          "updatedAt": "2023-09-19T17:28:34Z",
                          "publishedAt": "2023-09-19T17:28:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "@GiudGiud - there is no HDF5 flag set in the environment if the PETSc update and install script is run. In that scenario, HDF5 is built alongside PETSc (using their installation procedure) and then used at the higher levels of the stack automatically. HDF5DIR, etc. is only set when conda is used, and I see conda available, but not used here.\n@ykvishal - The suggestion to run ldd on your executable is a good one. It will give us a complete list of the linked libraries, and may shed some light here. If HDF5 exists elsewhere on the machine and different libraries than what PETSc prefers is being used, then you might run into some unexpected behavior. If there was an error in the HDF5 build itself (via the PETSc script), then you may also run into issues, and a clean of the submodule and rebuild of PETSc would be appropriate.",
                  "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047195",
                  "updatedAt": "2023-09-19T14:34:14Z",
                  "publishedAt": "2023-09-19T14:33:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "Here is my output\n$ ldd /blue/michael.tonks/share/trgapp/gatorapp-opt\n\tlinux-vdso.so.1 (0x00007ffc5558a000)\n\tlibgatorapp_test-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/gatorapp/test/lib/libgatorapp_test-opt.so.0 (0x000014a2f08b7000)\n\tlibgatorapp-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/gatorapp/lib/libgatorapp-opt.so.0 (0x000014a2f06a7000)\n\tlibmodule_loader_with_cr_em_eps_fp_fet_gc_ls_ray_rdg_rct_rich_st_hc_sp_tm_ns_con_fsi_misc_opt_pd_pf_pflow_th_st_xfem_comb-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/module_loader/lib/libmodule_loader_with_cr_em_eps_fp_fet_gc_ls_ray_rdg_rct_rich_st_hc_sp_tm_ns_con_fsi_misc_opt_pd_pf_pflow_th_st_xfem_comb-opt.so.0 (0x000014a2f0495000)\n\tlibcombined-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/combined/lib/libcombined-opt.so.0 (0x000014a2f0285000)\n\tlibxfem-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/xfem/lib/libxfem-opt.so.0 (0x000014a2efd9b000)\n\tlibscalar_transport-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/scalar_transport/lib/libscalar_transport-opt.so.0 (0x000014a2efb1d000)\n\tlibthermal_hydraulics-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/thermal_hydraulics/lib/libthermal_hydraulics-opt.so.0 (0x000014a2eef8a000)\n\tlibporous_flow-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/porous_flow/lib/libporous_flow-opt.so.0 (0x000014a2ee77c000)\n\tlibphase_field-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/phase_field/lib/libphase_field-opt.so.0 (0x000014a2edc41000)\n\tlibperidynamics-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/peridynamics/lib/libperidynamics-opt.so.0 (0x000014a2ed7f0000)\n\tliboptimization-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/optimization/lib/liboptimization-opt.so.0 (0x000014a2ed47b000)\n\tlibmisc-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/misc/lib/libmisc-opt.so.0 (0x000014a2ed1e5000)\n\tlibfsi-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/fsi/lib/libfsi-opt.so.0 (0x000014a2ecf69000)\n\tlibcontact-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/contact/lib/libcontact-opt.so.0 (0x000014a2ecb30000)\n\tlibnavier_stokes-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/navier_stokes/lib/libnavier_stokes-opt.so.0 (0x000014a2ebf8d000)\n\tlibtensor_mechanics-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/tensor_mechanics/lib/libtensor_mechanics-opt.so.0 (0x000014a2eaeb9000)\n\tlibsolid_properties-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/solid_properties/lib/libsolid_properties-opt.so.0 (0x000014a2eabf0000)\n\tlibheat_conduction-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/heat_conduction/lib/libheat_conduction-opt.so.0 (0x000014a2ea5e9000)\n\tlibstochastic_tools-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/stochastic_tools/lib/libstochastic_tools-opt.so.0 (0x000014a2e9cd5000)\n\tlibrichards-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/richards/lib/librichards-opt.so.0 (0x000014a2e982a000)\n\tlibreactor-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/reactor/lib/libreactor-opt.so.0 (0x000014a2e946f000)\n\tlibrdg-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/rdg/lib/librdg-opt.so.0 (0x000014a2e91b1000)\n\tlibray_tracing-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/ray_tracing/lib/libray_tracing-opt.so.0 (0x000014a2e8d96000)\n\tliblevel_set-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/level_set/lib/liblevel_set-opt.so.0 (0x000014a2e8ac5000)\n\tlibgeochemistry-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/geochemistry/lib/libgeochemistry-opt.so.0 (0x000014a2e86fa000)\n\tlibfunctional_expansion_tools-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/functional_expansion_tools/lib/libfunctional_expansion_tools-opt.so.0 (0x000014a2e8429000)\n\tlibfluid_properties-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/fluid_properties/lib/libfluid_properties-opt.so.0 (0x000014a2e7f53000)\n\tlibexternal_petsc_solver-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/external_petsc_solver/lib/libexternal_petsc_solver-opt.so.0 (0x000014a2e7d15000)\n\tlibelectromagnetics-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/electromagnetics/lib/libelectromagnetics-opt.so.0 (0x000014a2e7a2c000)\n\tlibchemical_reactions-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/modules/chemical_reactions/lib/libchemical_reactions-opt.so.0 (0x000014a2e76f8000)\n\tlibmoose-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/framework/libmoose-opt.so.0 (0x000014a2e4b52000)\n\tlibpcre-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/framework/contrib/pcre/libpcre-opt.so.0 (0x000014a2e4926000)\n\tlibhit-opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/framework/contrib/hit/libhit-opt.so.0 (0x000014a2e46c7000)\n\tlibmesh_opt.so.0 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/scripts/../libmesh/installed/lib/libmesh_opt.so.0 (0x000014a2e2ec1000)\n\tlibnetcdf.so.13 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/scripts/../libmesh/installed/lib/libnetcdf.so.13 (0x000014a2e2bb0000)\n\tlibsz.so.2 => /lib64/libsz.so.2 (0x000014a2e29ad000)\n\tlibtimpi_opt.so.11 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/scripts/../libmesh/installed/lib/libtimpi_opt.so.11 (0x000014a2e279e000)\n\tlibhdf5_cpp.so.103 => /lib64/libhdf5_cpp.so.103 (0x000014a2e2520000)\n\tlibslepc.so.3.16 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libslepc.so.3.16 (0x000014a2e1f6a000)\n\tlibpetsc.so.3.16 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libpetsc.so.3.16 (0x000014a2e05c3000)\n\tlibHYPRE-2.23.0.so => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libHYPRE-2.23.0.so (0x000014a2dffab000)\n\tlibstrumpack.so => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libstrumpack.so (0x000014a2df4d8000)\n\tlibsuperlu_dist.so.7 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libsuperlu_dist.so.7 (0x000014a2df1d6000)\n\tlibhdf5_hl.so.200 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libhdf5_hl.so.200 (0x000014a2defb2000)\n\tlibhdf5.so.200 => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libhdf5.so.200 (0x000014a2de932000)\n\tlibparmetis.so => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libparmetis.so (0x000014a2de6f2000)\n\tlibmetis.so => /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/petsc/arch-moose/lib/libmetis.so (0x000014a2de48f000)\n\tlibX11.so.6 => /lib64/libX11.so.6 (0x000014a2de14c000)\n\tlibmpi_usempif08.so.40 => /apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib/libmpi_usempif08.so.40 (0x000014a2ddf0d000)\n\tlibmpi_usempi_ignore_tkr.so.40 => /apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib/libmpi_usempi_ignore_tkr.so.40 (0x000014a2ddd02000)\n\tlibmpi_mpifh.so.40 => /apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib/libmpi_mpifh.so.40 (0x000014a2dda96000)\n\tlibmpi.so.40 => /apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib/libmpi.so.40 (0x000014a2dd5ba000)\n\tliblustreapi.so.1 => /lib64/liblustreapi.so.1 (0x000014a2dd37a000)\n\tlibopen-rte.so.40 => /apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib/libopen-rte.so.40 (0x000014a2dd057000)\n\tlibopen-pal.so.40 => /apps/mpi/gcc/12.2.0/openmpi/4.1.5/lib/libopen-pal.so.40 (0x000014a2dcd5a000)\n\tlibucp.so.0 => /lib64/libucp.so.0 (0x000014a2dca7e000)\n\tlibuct.so.0 => /lib64/libuct.so.0 (0x000014a2dc842000)\n\tlibucm.so.0 => /lib64/libucm.so.0 (0x000014a2dc628000)\n\tlibucs.so.0 => /lib64/libucs.so.0 (0x000014a2dc283000)\n\tlibpmi2.so.1 => /opt/pmix/3.2.4/lib/libpmi2.so.1 (0x000014a2dbf3f000)\n\tlibpmi.so.1 => /opt/pmix/3.2.4/lib/libpmi.so.1 (0x000014a2dbbfb000)\n\tlibpmix.so.2 => /opt/pmix/3.2.4/lib/libpmix.so.2 (0x000014a2db8c6000)\n\tlibutil.so.1 => /lib64/libutil.so.1 (0x000014a2db6c2000)\n\tlibz.so.1 => /lib64/libz.so.1 (0x000014a2db4aa000)\n\tlibhwloc.so.15 => /lib64/libhwloc.so.15 (0x000014a2db25a000)\n\tlibevent_core-2.1.so.6 => /lib64/libevent_core-2.1.so.6 (0x000014a2db021000)\n\tlibevent_pthreads-2.1.so.6 => /lib64/libevent_pthreads-2.1.so.6 (0x000014a2dae1e000)\n\tlibgfortran.so.5 => /apps/compilers/gcc/12.2/lib64/libgfortran.so.5 (0x000014a2da951000)\n\tlibgcc_s.so.1 => /apps/compilers/gcc/12.2/lib64/libgcc_s.so.1 (0x000014a2da732000)\n\tlibpthread.so.0 => /lib64/libpthread.so.0 (0x000014a2da512000)\n\tlibrt.so.1 => /lib64/librt.so.1 (0x000014a2da30a000)\n\tlibquadmath.so.0 => /apps/compilers/gcc/12.2/lib64/libquadmath.so.0 (0x000014a2da0c5000)\n\tlibstdc++.so.6 => /apps/compilers/gcc/12.2/lib64/libstdc++.so.6 (0x000014a2d9c9f000)\n\tlibdl.so.2 => /lib64/libdl.so.2 (0x000014a2d9a9b000)\n\tlibtirpc.so.3 => /lib64/libtirpc.so.3 (0x000014a2d9867000)\n\tlibm.so.6 => /lib64/libm.so.6 (0x000014a2d94e5000)\n\tlibgomp.so.1 => /apps/compilers/gcc/12.2/lib64/libgomp.so.1 (0x000014a2d929e000)\n\tlibc.so.6 => /lib64/libc.so.6 (0x000014a2d8ed9000)\n\tlibaec.so.0 => /lib64/libaec.so.0 (0x000014a2d8cd1000)\n\tlibhdf5.so.103 => /lib64/libhdf5.so.103 (0x000014a2d8746000)\n\t/lib64/ld-linux-x86-64.so.2 (0x000014a2f0ac9000)\n\tlibxcb.so.1 => /lib64/libxcb.so.1 (0x000014a2d851d000)\n\tlibpmi2.so.0 => /opt/slurm/lib64/libpmi2.so.0 (0x000014a2d8305000)\n\tlibpmi.so.0 => /opt/slurm/lib64/libpmi.so.0 (0x000014a2d80ff000)\n\tlibjson-c.so.4 => /lib64/libjson-c.so.4 (0x000014a2d7eef000)\n\tliblnetconfig.so.4 => /lib64/liblnetconfig.so.4 (0x000014a2d7cca000)\n\tlibyaml-0.so.2 => /lib64/libyaml-0.so.2 (0x000014a2d7aaa000)\n\tlibreadline.so.7 => /lib64/libreadline.so.7 (0x000014a2d785b000)\n\tlibkeyutils.so.1 => /lib64/libkeyutils.so.1 (0x000014a2d7657000)\n\tlibcrypto.so.1.1 => /lib64/libcrypto.so.1.1 (0x000014a2d716d000)\n\tlibgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2 (0x000014a2d6f18000)\n\tlibkrb5.so.3 => /lib64/libkrb5.so.3 (0x000014a2d6c2d000)\n\tlibk5crypto.so.3 => /lib64/libk5crypto.so.3 (0x000014a2d6a16000)\n\tlibcom_err.so.2 => /lib64/libcom_err.so.2 (0x000014a2d6812000)\n\tlibXau.so.6 => /lib64/libXau.so.6 (0x000014a2d660e000)\n\tlibresolv.so.2 => /lib64/libresolv.so.2 (0x000014a2d63f6000)\n\tlibslurm_pmi.so => /opt/slurm/lib64/slurm/libslurm_pmi.so (0x000014a2d6026000)\n\tlibtinfo.so.6 => /lib64/libtinfo.so.6 (0x000014a2d5df9000)\n\tlibkrb5support.so.0 => /lib64/libkrb5support.so.0 (0x000014a2d5be8000)\n\tlibselinux.so.1 => /lib64/libselinux.so.1 (0x000014a2d59bd000)\n\tlibpcre2-8.so.0 => /lib64/libpcre2-8.so.0 (0x000014a2d5739000)",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047615",
                          "updatedAt": "2023-09-19T15:06:33Z",
                          "publishedAt": "2023-09-19T15:06:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I'm very curious what library is bringing in libhdf5_cpp. I would bet that is the problematic library because as a system library it may clash with the hdf5 libraries being built by petsc.",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047739",
                          "updatedAt": "2023-09-19T15:17:17Z",
                          "publishedAt": "2023-09-19T15:17:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "My hypothesis is that it is netcdf. @roystgnr what do you think?",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047760",
                          "updatedAt": "2023-09-19T15:19:18Z",
                          "publishedAt": "2023-09-19T15:19:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I changed my mind. hdf5.*cpp only appears in netcdf cmake files for Windows. I don't think it's netcdf. Looking at hdf5.m4 I believe it could be libMesh itself",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047787",
                          "updatedAt": "2023-09-19T15:22:15Z",
                          "publishedAt": "2023-09-19T15:22:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "This is in my own libMesh config.log. We have been bitten by arbitrarily tacking on system paths before and it looks like it is happening again\nHDF5_CFLAGS=''\nHDF5_CPPFLAGS=''\nHDF5_CXXLIBS='-L/lib -lhdf5_cpp -Wl,-rpath,/lib'\nHDF5_DIR=''\nHDF5_FLIBS='-L/lib -lhdf5_fortran -Wl,-rpath,/lib'\nHDF5_LIBS='-L/lib -lhdf5 -Wl,-rpath,/lib'\nHDF5_PREFIX=''",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047875",
                          "updatedAt": "2023-09-19T15:31:43Z",
                          "publishedAt": "2023-09-19T15:30:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "That seems like the problem indeed.\nWe need to build with a consistent HDF5 throughout, and\n\tlibhdf5_cpp.so.103 => /lib64/libhdf5_cpp.so.103 (0x000014a2e2520000)\n\nis not from the same location as the others that Pr Tonks pre-installed",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047880",
                          "updatedAt": "2023-09-19T15:31:18Z",
                          "publishedAt": "2023-09-19T15:31:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Although I wouldn't necessarily expect us to pick-up /lib64 ... That probably doesn't matter. I'm sure /lib64 is in the default search patch of the linker and so as long as we have -lhdf5_cpp we're doing to pick up the system library.\n@ykvishal can you share your config.log which should be in /blue/michael.tonks/v.yadav/MOOSEInstallation/moose/libmesh/build ? So I don't think we need this although it wouldn't hurt to have it",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047907",
                          "updatedAt": "2023-09-19T15:36:56Z",
                          "publishedAt": "2023-09-19T15:33:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "We're doing it at the libMesh level - git logs say @jwpeterson added those flags in libMesh/libmesh#913",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047910",
                          "updatedAt": "2023-09-19T15:34:06Z",
                          "publishedAt": "2023-09-19T15:34:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "I highly doubt we're using the hdf5_cxx API ourselves, but we have a bit of a tradition of detecting things to make it easy for other users to use our ifdefs to avoid having to write detection scripts themselves.",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7047925",
                          "updatedAt": "2023-09-19T15:35:14Z",
                          "publishedAt": "2023-09-19T15:35:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "Here is my config.log\n\nHDF5_CPPFLAGS=''\nHDF5_CXXLIBS='-L/lib -lhdf5_cpp -Wl,-rpath,/lib'\nHDF5_DIR=''\nHDF5_FLIBS='-L/lib -lhdf5_fortran -Wl,-rpath,/lib'\nHDF5_LIBS='-L/lib -lhdf5 -Wl,-rpath,/lib'\nHDF5_PREFIX=''",
                          "url": "https://github.com/idaholab/moose/discussions/25506#discussioncomment-7048022",
                          "updatedAt": "2023-09-19T15:44:21Z",
                          "publishedAt": "2023-09-19T15:43:04Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Print out the history of iteration number of nonlinear solver",
          "author": {
            "login": "tqcthai"
          },
          "bodyText": "Hello Moose community,\nDo you know how to print out the number of Newton iteration in nonlinear solver in a final report?\nFor instance,\nat time step 1, the solver is converged after m1 steps,\nat time step 2, the solver is converged after m2 steps,\n...\nat time step n, the solver is converged after mn steps.\nAnd I need to have the information of m1, m2,... and mn in an output report. I wonder how to do it?",
          "url": "https://github.com/idaholab/moose/discussions/25505",
          "updatedAt": "2023-09-18T23:10:54Z",
          "publishedAt": "2023-09-18T22:57:51Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "use this https://mooseframework.inl.gov/source/postprocessors/NumNonlinearIterations.html\nit will be available in a CSV file after",
                  "url": "https://github.com/idaholab/moose/discussions/25505#discussioncomment-7039830",
                  "updatedAt": "2023-09-18T23:06:33Z",
                  "publishedAt": "2023-09-18T23:06:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "tqcthai"
                          },
                          "bodyText": "It works well. Thank you so much.",
                          "url": "https://github.com/idaholab/moose/discussions/25505#discussioncomment-7039848",
                          "updatedAt": "2023-09-18T23:10:55Z",
                          "publishedAt": "2023-09-18T23:10:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to set up a updated boundary condition?",
          "author": {
            "login": "hhy2022"
          },
          "bodyText": "Hi there,\nI want to solve a species transport problem when the flow is a loop, which means there is not a traditional left and right boudnary conditions. Instead, the \"boundary\" conditions should update at each loop. Does there any case that I can learn from or do you have any idea on how to set up such a boundary conditions?\nThank you very much.",
          "url": "https://github.com/idaholab/moose/discussions/25442",
          "updatedAt": "2023-09-18T20:57:05Z",
          "publishedAt": "2023-09-11T20:59:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "How would you want the conditions to be updated?",
                  "url": "https://github.com/idaholab/moose/discussions/25442#discussioncomment-6972879",
                  "updatedAt": "2023-09-11T22:52:53Z",
                  "publishedAt": "2023-09-11T22:52:52Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think the best way to do a closed loop is to use a mesh that represents the loop. All the cells are connected naturally.\nThen you use a volume region to provide a momentum source, a sort of volumetric pump",
                          "url": "https://github.com/idaholab/moose/discussions/25442#discussioncomment-6973612",
                          "updatedAt": "2023-09-12T01:23:57Z",
                          "publishedAt": "2023-09-12T01:23:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hhy2022"
                          },
                          "bodyText": "I think there are two possible ways to do so:\n\nI have a left and right boundary condition but the boundary conditions should be updated at each time steps. The ith time steps output should be the (i+1)th time steps input. So I need a updated boundary conditions. I am not sure if this is possible in MOOSE setup.\nI have a naturally connect mesh loop. In this situation, I will not have a left and right boundary conditions. I only have an initail condition. Here I am not sure if this is going to work without boundary conditions in MOOSE.\nBesides, when you said a \"momentum source\", did you mean an instant input? It only work at the beginning of the running and then dispear. Does it mean \"initial condition\"?",
                          "url": "https://github.com/idaholab/moose/discussions/25442#discussioncomment-6974914",
                          "updatedAt": "2023-09-12T05:59:56Z",
                          "publishedAt": "2023-09-12T05:59:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I have a left and right boundary condition but the boundary conditions should be updated at each time steps. The ith time steps output should be the (i+1)th time steps input. So I need a updated boundary conditions. I am not sure if this is possible in MOOSE setup.\n\nThere are various ways to track older states in MOOSE. For instance there is slnOld on the variable classes. There are stateful material properties although those would only work with integrated boundary conditions. You can introduce time dependence through Function objects.",
                          "url": "https://github.com/idaholab/moose/discussions/25442#discussioncomment-6975953",
                          "updatedAt": "2023-09-12T08:01:21Z",
                          "publishedAt": "2023-09-12T08:01:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hhy2022"
                          },
                          "bodyText": "That makes sense. The only thing is I still don't know the expression of the boundary conditions at this time step since it depends on the former time steps. So the input (boundary condition) of this time steps should be the output of former time steps. In this case, it can be physically forming a loop. In this situation, is there any possible way to do so?",
                          "url": "https://github.com/idaholab/moose/discussions/25442#discussioncomment-6976002",
                          "updatedAt": "2023-09-12T08:07:04Z",
                          "publishedAt": "2023-09-12T08:07:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "To retrieve an old value of a variable, you can use:\n\ncoupledValueOld from the coupleable interface (used by most kernels & bcs)\nOR\nslnOld (different API, directly from the variable class)\nOR\nthe old state arguments, through the FunctorAPI\n\nAll of this can work, but I m thinking the big difficulty here is not getting the old state, but matching the two boundaries.\nCan you paste an image of your mesh? and highlight the two boundaries you are trying to match",
                          "url": "https://github.com/idaholab/moose/discussions/25442#discussioncomment-6978578",
                          "updatedAt": "2023-09-12T12:46:56Z",
                          "publishedAt": "2023-09-12T12:46:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hhy2022"
                          },
                          "bodyText": "I am on the progress of designing the meshes. I am considering designing a tube mesh and use the right boundary output as the input of  left boundary at nest time step. This means I will have to update the boundary conditions each time. I am not sure if this will work.",
                          "url": "https://github.com/idaholab/moose/discussions/25442#discussioncomment-7039158",
                          "updatedAt": "2023-09-18T20:57:06Z",
                          "publishedAt": "2023-09-18T20:57:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "ComputeFiniteStrainElasticStress and incremental strain",
          "author": {
            "login": "MusannaGalib"
          },
          "bodyText": "Does MOOSE use hypoelastic (incremental strain) formulation in their ComputeFiniteStrain kernel?\n\n\nRegarding implementing the ComputeFiniteStrainElasticStress kernel, which material model does it use (constitutive model)?\n\n\nHow does the frame of reference (Lagrangian/Eulerian) play a role in the incremental strain approach?\n\n\nIn the tensor mechanics module, is only the static equilibrium equation solved or the full dynamic equation solved?",
          "url": "https://github.com/idaholab/moose/discussions/25429",
          "updatedAt": "2023-09-18T17:46:56Z",
          "publishedAt": "2023-09-08T01:13:06Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "For the incremental formulation, MOOSE implementation follows this paper \" MM Rashid. Incremental kinematics for finite element applications. International Journal for Numerical Methods in Engineering, 36(23):3937\u20133956, 1993. \"\nMost of your questions can be answered by that paper. Here are some short answers:\n\n\nDoes MOOSE use hypoelastic (incremental strain) formulation in their ComputeFiniteStrain kernel?\nYes, incremental for hypoelastic.\n\n\n\n\nRegarding implementing the ComputeFiniteStrainElasticStress kernel, which material model does it use (constitutive model)?\nHypoElastic.\n\n\n\n\nHow does the frame of reference (Lagrangian/Eulerian) play a role in the incremental strain approach?\nEulerian.\n\n\n\n\nIn the tensor mechanics module, is only the static equilibrium equation solved or the full dynamic equation solved?\nBoth, depending on whether the mass and damping terms are included or not.\n\n\nThere is a newer implementation of total formulation. See",
                  "url": "https://github.com/idaholab/moose/discussions/25429#discussioncomment-6943113",
                  "updatedAt": "2023-09-08T01:36:40Z",
                  "publishedAt": "2023-09-08T01:36:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MusannaGalib"
                          },
                          "bodyText": "Thanks for the reply.\nCan you attach the link/documentation here for the implementation of the total formulation?",
                          "url": "https://github.com/idaholab/moose/discussions/25429#discussioncomment-6943214",
                          "updatedAt": "2023-09-08T01:50:56Z",
                          "publishedAt": "2023-09-08T01:50:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "@MusannaGalib  examples of input files for dynamics problems are here:\nhttps://mooseframework.inl.gov/modules/tensor_mechanics/Dynamics.html\nBasically using DynamicTensorMechanics instead of TensorMechanics\nand adding the inertia kernels, you can easily switch from a static\nto a dynamic simulation.",
                  "url": "https://github.com/idaholab/moose/discussions/25429#discussioncomment-7037824",
                  "updatedAt": "2023-09-18T17:46:57Z",
                  "publishedAt": "2023-09-18T17:46:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Failed Tests in outputs/ and meshgenerators/ and some warnings during compilation",
          "author": {
            "login": "smpeyres"
          },
          "bodyText": "Dear MOOSE Team, I updated my moose repository but when I re-compiled I got a set of warnings, which all seemed to revolve around my use of the M1 Mac. I usually ignore these warnings if all of the tests pass, but this time a handful within outputs/ and meshgenerators/ do fail, all with the error of EXODIFF. The full set of warnings and the details of the EXODIFF errors are too big to copy and pasted, so I attached a couple of .txt files with the entirety of the compilation and test results.\nAny advice?\nThanks!\ncompile_warnings.txt\ntest_results.txt",
          "url": "https://github.com/idaholab/moose/discussions/25488",
          "updatedAt": "2023-09-18T16:15:28Z",
          "publishedAt": "2023-09-17T18:48:11Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "The warnings at link time are normal. It's some issue with compilation visibility setttings that get reported by newer compilers.\nWe all get them. We haven't gotten to fixing that, there's always something more urgent to tackle.\nThe failures are all tied to Nemesis output\nmeshgenerators/output_intermediate_mesh.intermediate_mesh_output/nemesis \ufffd[90m.......\ufffd[0m \ufffd[33m[min_cpus=2]\ufffd[0m \ufffd[33mFAILED (EXODIFF)\ufffd[0m\noutputs/variables.nemesis_hide \ufffd[90m.................................................\ufffd[0m \ufffd[33m[min_cpus=2]\ufffd[0m \ufffd[33mFAILED (EXODIFF)\ufffd[0m\nmeshgenerators/distributed_rectilinear/dmg_displaced_mesh.pbc/adaptivity_nemesis \ufffd[33m[min_cpus=4]\ufffd[0m \ufffd[33mFAILED (EXODIFF)\ufffd[0m\noutputs/nemesis.nemesis_elemental_replicated \ufffd[90m...................................\ufffd[0m \ufffd[33m[min_cpus=4]\ufffd[0m \ufffd[33mFAILED (EXODIFF)\ufffd[0m\noutputs/nemesis.nemesis_scalar_replicated \ufffd[90m......................................\ufffd[0m \ufffd[33m[min_cpus=4]\ufffd[0m \ufffd[33mFAILED (EXODIFF)\ufffd[0m\n\nwe have JUST done a libmesh submodule update that changes the outcome of these tests. If you update MOOSE without updating libmesh you ll get those failures. If you update libmesh they will go away\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25488#discussioncomment-7028423",
                  "updatedAt": "2023-09-17T20:35:31Z",
                  "publishedAt": "2023-09-17T20:35:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "smpeyres"
                          },
                          "bodyText": "I ran 'mamba update --all' but the same tests still fail. Do I need to run something like 'git submodule update --init libmesh' in order to update libmesh? Update: I tried this as well, to no avail.",
                          "url": "https://github.com/idaholab/moose/discussions/25488#discussioncomment-7029078",
                          "updatedAt": "2023-09-18T00:47:31Z",
                          "publishedAt": "2023-09-18T00:24:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did you use conda/mamba to install moose?\nIf so then you should not use the libmesh submodule\nbtw the mamba update may be failing these days due to dependency resolution issues. See this post:\n#25358",
                          "url": "https://github.com/idaholab/moose/discussions/25488#discussioncomment-7029390",
                          "updatedAt": "2023-09-18T01:48:51Z",
                          "publishedAt": "2023-09-18T01:48:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "smpeyres"
                          },
                          "bodyText": "Yes I did use mamba to install moose (following the basic Linus/MacOS MOOSE Installation guide).\nDo you suggest I perform 'mamba install moose-dev=2023.08.29' for this?",
                          "url": "https://github.com/idaholab/moose/discussions/25488#discussioncomment-7035999",
                          "updatedAt": "2023-09-18T14:56:49Z",
                          "publishedAt": "2023-09-18T14:56:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "let's do this yes",
                          "url": "https://github.com/idaholab/moose/discussions/25488#discussioncomment-7036134",
                          "updatedAt": "2023-09-18T15:06:17Z",
                          "publishedAt": "2023-09-18T15:06:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "smpeyres"
                          },
                          "bodyText": "I made a fresh clone of MOOSE without the libmesh update and tried the old version of moose-dev, but the same five tests still fail.\nAny suggestions?",
                          "url": "https://github.com/idaholab/moose/discussions/25488#discussioncomment-7036779",
                          "updatedAt": "2023-09-18T16:06:22Z",
                          "publishedAt": "2023-09-18T16:06:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "new moose + old libmesh -> expect failure\nold moose (pre libmesh update) + new libmesh -> expect failure\nThese failures are understood and are only related to Nemesis output. Unless you are working with that, I would just move on and expect it to work again as expected the next time you update moose and libmesh",
                          "url": "https://github.com/idaholab/moose/discussions/25488#discussioncomment-7036820",
                          "updatedAt": "2023-09-18T16:10:47Z",
                          "publishedAt": "2023-09-18T16:10:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "smpeyres"
                          },
                          "bodyText": "I am not using Nemesis, so I'll move on for now... thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/25488#discussioncomment-7036874",
                          "updatedAt": "2023-09-18T16:15:28Z",
                          "publishedAt": "2023-09-18T16:15:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "P_hf in HeatTransferFromHeatStructure1Phase",
          "author": {
            "login": "Ethan-xj"
          },
          "bodyText": "Hello. @joshuahansel @GiudGiud\nI want to know what the P_hf's effect is. If I define a HeatStructureCylindrical connected with two FlowChannel1Phase. And I define two HeatTransferFromHeatStructure1Phase. When I set the P_hf to 1 in the first HeatTransfer and set the P_hf to 2 in the second. Will the power of the HeatStructureCylindrical be divided into two parts(1/3 and 2/3) for the two FlowChannel1Phase?\nI've tried to run a case but it seems the P_hf can't achieve the above things.\nEthan",
          "url": "https://github.com/idaholab/moose/discussions/25492",
          "updatedAt": "2023-09-18T15:50:23Z",
          "publishedAt": "2023-09-18T07:17:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nFrom the docs\nThe parameter [\"P_hf\"](https://mooseframework.inl.gov/source/components/HeatTransferFromHeatStructure1Phase.html#acf4cc4e-ab98-4ab4-8d55-6d003fbee4ff) is optional and specifies the heated perimeter \n\nif unspecified, this is computed from the cross-sectional area assuming a circular cross section.\n\nso basically the perimeter * the heat transfer coeff * the temperate delta gets you the heat flux.\nI think you cant just give an arbitrary value there, you need to get P_hf to be the size it should be for the flux you are trying to get\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7033955",
                  "updatedAt": "2023-09-18T12:07:22Z",
                  "publishedAt": "2023-09-18T12:07:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "It seems quite different than I thought. So if I want to build a model: a heat structure connected with two flow channels. How should I set the fraction of the power?",
                          "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7034310",
                          "updatedAt": "2023-09-18T12:34:38Z",
                          "publishedAt": "2023-09-18T12:34:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "for the fraction of heat flux you mentioned you can set Phf1 = 2 * Phf2 with :\n\nthe same heat transfer coefficient for both\nthe same temperature profiles in both\n\nbut the base value of Phf1 / the heat transfer coefficients have to be set to get the heat flux you want. Usually it s just:\n\nPhf1 is the real heated perimeter\nHw is the heat transfer coefficient from a correlation / closure\n\nCan you attach a heat structure to 2 channels btw? I've never done that",
                          "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7034368",
                          "updatedAt": "2023-09-18T12:41:21Z",
                          "publishedAt": "2023-09-18T12:40:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "Yes, I can. I set two HeatTransferFromHeatStructure1Phase whose hs is the same heat structure and flow_channel is different. But when I set like that, I think the Phf is not working right. When I set the total power and the heat structure, the volumetric heat source is defined. And the Phf*volumetric heat source should be the linear power density using in flow channel.\nBut I set the model: one hs and one flow channel. And I change the Phf, the rise of the temperature is not changing.",
                          "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7034817",
                          "updatedAt": "2023-09-18T13:22:07Z",
                          "publishedAt": "2023-09-18T13:22:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if the Phf is already large enough for all the heat to make its way into the channel, then raising it more will not change much",
                          "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7034845",
                          "updatedAt": "2023-09-18T13:24:38Z",
                          "publishedAt": "2023-09-18T13:24:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "But I set the model: one hs and one flow channel. And I change the Phf, the rise of the temperature is not changing.\n\nSo to be clear, you have issues with just a single HS/flow channel? The rate of heat transfer is proportional to it, with a given HTC and temperature difference. If you're seeing that the temperature distribution over the entire length of the channel is unaltered with the change, then there is definitely something wrong. If you're seeing just that the total temperature rise over the length of the channel is the same, then I'm guessing the channel temperature has approached the temperature of the HS by the time it exits. Which is it?",
                          "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7035317",
                          "updatedAt": "2023-09-18T14:07:24Z",
                          "publishedAt": "2023-09-18T14:07:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "then I'm guessing the channel temperature has approached the temperature of the HS by the time it exits\n\nI output the steady result.\nI check the result again. When I change the Phf, the temperature of flow channel is not changing. But the temperature of the HS is changing. So the heat flux changes indeed. But does this mean that Phf will not affect the amount of energy released into the flow channel? Or maybe I misunderstand sth?\nThe main question I care is I mentioned above:\n\nSo if I want to build a model: a heat structure connected with two flow channels. How should I set the fraction of the power?",
                          "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7035561",
                          "updatedAt": "2023-09-18T14:27:32Z",
                          "publishedAt": "2023-09-18T14:27:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "When I change the Phf, the temperature of flow channel is not changing. But the temperature of the HS is changing.\n\nWhen you say the temperature of the flow channel is not changing, do you mean absolutely not changing? Or is the temperature distribution just approximately the same? The statement you've made implied that there is a lack of energy conservation, but that's only if there is absolutely no difference. If the channel is moving fast or has a lot of thermal mass, you made not see much difference.\n\nSo if I want to build a model: a heat structure connected with two flow channels. How should I set the fraction of the power?\n\nYour only option with this setup is to do as you have been: you set the different heated perimeters for each channel. I wouldn't expect the split to be exactly 1/3 and 2/3, but I think it should be roughly this.\n\nPhf*volumetric heat source should be the linear power density\n\nThis isn't correct. This would give you some number W/m^2.",
                          "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7036242",
                          "updatedAt": "2023-09-18T15:16:21Z",
                          "publishedAt": "2023-09-18T15:16:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "It\u2018s approximately the same. OK. Maybe it\u2018s because the velocity I set is high.\nAnd I forgot the HS length. It should times the length of the HS to get the linear power density.\nI ask this question because the temperature of the flow channel is not correct in a 78-channels sodium came. And I will keep testing the question we discuss.",
                          "url": "https://github.com/idaholab/moose/discussions/25492#discussioncomment-7036580",
                          "updatedAt": "2023-09-18T15:50:24Z",
                          "publishedAt": "2023-09-18T15:50:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Nucleation works, but no change in phase field",
          "author": {
            "login": "mdh23rct"
          },
          "bodyText": "Dear Moose experts,\nHope you are doing great! I am currently simulating random nucleation using phase field approach.\nIn the nucleation simulation, I am forcing the concentration from 0.2 to 0.9, while the change in the phase field should also occur from 0 to 1 inside the nuclei. I have done this with the help of\n      type = DiscreteNucleation\n      property_name = Fn\n      op_names  = 'c psi'\n      op_values = '0.90 1.0'\n\nHowever, I am seeing a change in the concentration, but no change in the order parameter when nucleation occurs, although, the phase field and concentration are coupled variables in this simulation. Would you be kind to let me what I did wrong? I have attached the file for your convenience here. I would appreciate if you can manage time to reply.\n[Mesh]\n    type = GeneratedMesh\n    dim = 2\n    nx = 10\n    ny = 10\n    xmax = 500\n    ymax = 500\n    elem_type = QUAD\n  []\n  \n   [Modules]\n     [./PhaseField]\n       [./Conserved]\n         [./c]\n           free_energy = F\n           mobility = M\n           kappa = kappa_c\n           solve_type = REVERSE_SPLIT\n         [../]\n       [../]\n      [../]\n     [./PhaseField]\n       [./Nonconserved]\n        [./psi]\n          free_energy = F\n          mobility = L\n          kappa = kappa_c\n          coupled_variables = c\n        [../]\n       [../]\n      [../]\n    []\n\n  [ICs]\n    [./c_IC]\n      type = ConstantIC\n      variable = c\n      value = 0.2\n    [../]\n    [./psi_IC]\n      type = ConstantIC\n      variable = psi\n      value = 0\n    [../]\n  []\n  \n  [Materials]\n    [./pfmobility]\n      type = GenericConstantMaterial\n      prop_names  = 'M L kappa_c'\n      prop_values = '1 10 25'\n    [../]\n    [./chemical_free_energy]\n      # simple double well free energy\n      type = DerivativeParsedMaterial\n      property_name = Fc\n      coupled_variables = 'c'\n      constant_names       = 'barr_height  cv_eq'\n      constant_expressions = '0.1          0'\n      expression = 16*barr_height*c^2*(1-c)^2 # +0.01*(c*plog(c,0.005)+(1-c)*plog(1-c,0.005))\n      derivative_order = 2\n      outputs = exodus\n    [../]\n    [./probability]\n      # This is a made up toy nucleation rate it should be replaced by\n      # classical nucleation theory in a real simulation.\n      type = ParsedMaterial\n      property_name = P\n      coupled_variables = c\n      expression = 'if(c<0.21,c*1e-8,0)'\n      outputs = exodus\n    [../]\n    [./nucleation]\n      # The nucleation material is configured to insert nuclei into the free energy\n      # tht force the concentration to go to 0.95, and holds this enforcement for 500\n      # time units.\n      type = DiscreteNucleation\n      property_name = Fn\n      op_names  = 'c psi'\n      op_values = '0.90 1.0'\n      penalty = 5\n      penalty_mode = MIN\n      map = map\n      outputs = exodus\n    [../]\n    [./free_energy]\n      # add the chemical and nucleation free energy contributions together\n      type = DerivativeSumMaterial\n      derivative_order = 2\n      coupled_variables = 'c psi'\n      sum_materials = 'Fc Fn'\n    [../]\n  []\n  \n  [UserObjects]\n    [./inserter]\n      # The inserter runs at the end of each time step to add nucleation events\n      # that happened during the timestep (if it converged) to the list of nuclei\n      type = DiscreteNucleationInserter\n      hold_time = 50\n      probability = P\n      radius = 10\n    [../]\n    [./map]\n      # The map UO runs at the beginning of a timestep and generates a per-element/qp\n      # map of nucleus locations. The map is only regenerated if the mesh changed or\n      # the list of nuclei was modified.\n      # The map converts the nucleation points into finite area objects with a given radius.\n      type = DiscreteNucleationMap\n      periodic = c\n      inserter = inserter\n    [../]\n  []\n  \n  [Preconditioning]\n    [./SMP]\n      type = SMP\n      full = true\n    [../]\n  []\n  \n  [BCs]\n    [./Periodic]\n      [./all]\n        auto_direction = 'x y'\n      [../]\n    [../]\n  []\n  \n  [Postprocessors]\n    [./avg_psi]\n    type = ElementAverageValue\n    variable = psi\n    [../]\n    [./dt]\n    type = TimestepSize\n    [../]\n    [./ndof]\n      type = NumDOFs\n    [../]\n    [./rate]\n      type = DiscreteNucleationData\n      value = RATE\n      inserter = inserter\n    [../]\n    [./dtnuc]\n      type = DiscreteNucleationTimeStep\n      inserter = inserter\n      p2nucleus = 0.0005\n      dt_max = 10\n    [../]\n    [./update]\n      type = DiscreteNucleationData\n      value = UPDATE\n      inserter = inserter\n    [../]\n    [./count]\n      type = DiscreteNucleationData\n      value = COUNT\n      inserter = inserter\n    [../]\n  []\n  \n  [Adaptivity]\n    [./Indicators]\n      [./jump]\n        type = GradientJumpIndicator\n        variable = c\n      [../]\n    [../]\n    [./Markers]\n      [./nuc]\n        type = DiscreteNucleationMarker\n        map = map\n      [../]\n      [./grad]\n        type = ValueThresholdMarker\n        variable = jump\n        coarsen = 0.1\n        refine = 0.2\n      [../]\n      [./combo]\n        type = ComboMarker\n        markers = 'nuc grad'\n      [../]\n    [../]\n    marker = combo\n    cycles_per_step = 3\n    recompute_markers_during_cycles = true\n    max_h_level = 3\n  []\n  \n  [Executioner]\n    type = Transient\n    scheme = bdf2\n    solve_type = 'PJFNK'\n    petsc_options_iname = '-pc_type -sub_pc_type'\n    petsc_options_value = 'asm      lu          '\n  \n    nl_max_its = 100\n    l_tol = 1.0e-4\n    nl_rel_tol = 1.0e-9\n    nl_abs_tol = 1.0e-9\n    start_time = 0.0\n    num_steps = 200\n  \n    [./TimeStepper]\n      type = IterationAdaptiveDT\n      dt = 10\n      growth_factor = 1.5\n      cutback_factor = 0.5\n      optimal_iterations = 8\n      iteration_window = 2\n      timestep_limiting_postprocessor = dtnuc\n    [../]\n  []\n  \n  [Outputs]\n    exodus = true\n    csv = true\n    print_linear_residuals = false\n  []",
          "url": "https://github.com/idaholab/moose/discussions/25423",
          "updatedAt": "2023-09-18T12:02:09Z",
          "publishedAt": "2023-09-07T15:15:03Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@amjokisaari @laagesen",
                  "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-6938682",
                  "updatedAt": "2023-09-07T15:17:58Z",
                  "publishedAt": "2023-09-07T15:17:57Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Hi, thanks for your interest in the MOOSE framework! To answer your question, I think the problem is that you haven't specified any dependence of the free energy F on the order parameter psi.  The Cahn-Hilliard and Allen-Cahn equations are using the free energy F, which is created by the DerivativeSumMaterial (which gives a default property name of F, since you haven't supplied a name for the DerivativeSumMaterial it's going to default to F. For the free energy to have any coupling between c and psi, you would need to add some kind of psi dependence to F. Right now it only depends on c.\nTaking a step back from your immediate question, do you need a non-conserved order parameter in this system? If you have a two-phase system that only differs in composition between the phases, you might not need a separate order parameter. That would allow you to use the existing example moose/modules/phase_field/examples/nucleation/cahn_hilliard.i for instance.",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-6939767",
                          "updatedAt": "2023-09-07T17:04:59Z",
                          "publishedAt": "2023-09-07T17:04:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mdh23rct"
                          },
                          "bodyText": "Dear Dr. Larry Aagesen,\nI appreciate your reply. Your explanation has made my concept clear. Is there any tutorial in MOOSE that explains the way of making free energy dependent on non-conserved order parameter? Any particular expression or mathematical relation! I am also interested in some papers that maybe you would like to suggest me to solve such phase field problems! Best regards, Zahid",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-6940176",
                          "updatedAt": "2023-09-07T17:55:03Z",
                          "publishedAt": "2023-09-07T17:55:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Please see the section Multiple Phase Models on our Phase field module documentation page:\nhttps://mooseframework.inl.gov/modules/phase_field/index.html#multiple_phase_models",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-6951434",
                          "updatedAt": "2023-09-08T18:53:07Z",
                          "publishedAt": "2023-09-08T18:53:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mdh23rct"
                          },
                          "bodyText": "Dear Dr. Larry Aagesen,\nThank you for your kind help. As you suggested, I have made the chemical energy dependent on the non-conserved order parameter (psi).\nexpression = 16*barr_height*c^2*(1-c)^2*(psi-1)^2\n\nBesides, I have included all the kernels required to solve the terms of Allen-Kahn and Cahn-Hilliard equations. Now, the file is running, However, I am having sever convergence issue with the linear solver.\n\nThe linear solver is not converging due to diverged breakdown issue, although the non-linear solver is converging. Would you be kind to help me out identifying the source of this convergence problem!\nThough, a direct change in the concentration field due to nucleation is visible, but no change is happening in the non-conserved order parameter. Is there anything missing in the file, even though, concentration (c) and order parameter (psi) are coupled together.\n\nFor your convenience, I have attached the file here. I would appreciate your valuable suggestion.  Thanks.\n[Mesh]\n    type = GeneratedMesh\n    dim = 2\n    nx = 10\n    ny = 10\n    xmax = 500\n    ymax = 500\n    elem_type = QUAD\n  []\n  \n   [Modules]\n     [./PhaseField]\n       [./Conserved]\n         [./c]\n           free_energy = F\n           mobility = M\n           kappa = kappa_c\n           solve_type = REVERSE_SPLIT\n           coupled_variables = psi\n         [../]\n       [../]\n      [../]\n     [./PhaseField]\n       [./Nonconserved]\n        [./psi]\n          free_energy = F\n          mobility = L\n          kappa = kappa_c\n          coupled_variables = c\n        [../]\n       [../]\n      [../]\n    []\n\n [Variables]\n    [./w]\n      order = FIRST\n     family = LAGRANGE\n    [../]\n  []\n\n[Kernels]\n    [./c_res]\n      type = SplitCHParsed\n      variable = c\n      f_name = F\n      kappa_name = kappa_c\n      coupled_variables = psi\n      w = w\n    [../]\n    [./w_res]\n      type = SimpleSplitCHWRes\n      variable = w\n      mob_name = M\n    [../]\n    [./time]\n      type = CoupledTimeDerivative\n      variable = w\n      v = c\n    [../]\n    [./detadt]\n      type = TimeDerivative\n      variable = psi\n    [../]\n    [./ACBulk]\n      type = AllenCahn\n      variable = psi\n      f_name = F\n      coupled_variables = c\n    [../]\n    [./ACInterface]\n      type = ACInterface\n      variable = psi\n      kappa_name = kappa_c\n      variable_L = false\n    [../]\n    [./initialization_diffusion]\n      type = FunctionDiffusion\n      variable = psi\n      function = '100 * exp(-10 * t)'\n    [../]\n[]\n\n  [ICs]\n    [./c_IC]\n      type = ConstantIC\n      variable = c\n      value = 0.2\n    [../]\n    [./psi_IC]\n      type = ConstantIC\n      variable = psi\n      value = 0\n    [../]\n  []\n  \n  [Materials]\n    [./pfmobility]\n      type = GenericConstantMaterial\n      prop_names  = 'M L kappa_c'\n      prop_values = '1 10 25'\n    [../]\n    [./chemical_free_energy]\n      # simple double well free energy\n      type = DerivativeParsedMaterial\n      property_name = Fc\n      coupled_variables = 'c psi'\n      constant_names       = 'barr_height  cv_eq'\n      constant_expressions = '0.1          0'\n      #expression = 16*barr_height*c^2*(1-c)^2*psi^2*(psi-1)^2 #+0.01*(c*plog(c,0.005)+(1-c)*plog(1-c,0.005))\n      expression = 16*barr_height*c^2*(1-c)^2*(psi-1)^2 #+0.01*(c*plog(c,0.005)+(1-c)*plog(1-c,0.005))\n      derivative_order = 2\n      outputs = exodus\n    [../]\n    [./probability]\n      # This is a made up toy nucleation rate it should be replaced by\n      # classical nucleation theory in a real simulation.\n      type = ParsedMaterial\n      property_name = P\n      coupled_variables = 'c psi'\n      #coupled_variables = 'c'\n      #expression = 'if(c<0.21,c*1e-8,0)-if(psi<0.5,psi*0.3,0)'\n      expression = 'if(c<0.21,c*1e-8,0)'\n      outputs = exodus\n    [../]\n    [./nucleation]\n      # The nucleation material is configured to insert nuclei into the free energy\n      # tht force the concentration to go to 0.95, and holds this enforcement for 500\n      # time units.\n      type = DiscreteNucleation\n      property_name = Fn\n      op_names  = 'c psi'\n      op_values = '0.90 1.0'\n      penalty = 5\n      penalty_mode = MIN\n      map = map\n      outputs = exodus\n    [../]\n    [./free_energy]\n      # add the chemical and nucleation free energy contributions together\n      type = DerivativeSumMaterial\n      derivative_order = 2\n      coupled_variables = 'c psi'\n      sum_materials = 'Fc Fn'\n      property_name = F\n    [../]\n  []\n  \n  [UserObjects]\n    [./inserter]\n      # The inserter runs at the end of each time step to add nucleation events\n      # that happened during the timestep (if it converged) to the list of nuclei\n      type = DiscreteNucleationInserter\n      hold_time = 50\n      probability = P\n      radius = 1\n    [../]\n    [./map]\n      # The map UO runs at the beginning of a timestep and generates a per-element/qp\n      # map of nucleus locations. The map is only regenerated if the mesh changed or\n      # the list of nuclei was modified.\n      # The map converts the nucleation points into finite area objects with a given radius.\n      type = DiscreteNucleationMap\n      periodic = c\n      inserter = inserter\n    [../]\n  []\n  \n  [Preconditioning]\n    [./SMP]\n      type = SMP\n      full = true\n    [../]\n  []\n  \n  [BCs]\n    [./Periodic]\n      [./all]\n        auto_direction = 'x y'\n      [../]\n    [../]\n  []\n  \n  [Postprocessors]\n    [./avg_psi]\n    type = ElementAverageValue\n    variable = psi\n    [../]\n    [./dt]\n    type = TimestepSize\n    [../]\n    [./ndof]\n      type = NumDOFs\n    [../]\n    [./rate]\n      type = DiscreteNucleationData\n      value = RATE\n      inserter = inserter\n    [../]\n    [./dtnuc]\n      type = DiscreteNucleationTimeStep\n      inserter = inserter\n      p2nucleus = 0.05\n      dt_max = 10\n    [../]\n    [./update]\n      type = DiscreteNucleationData\n      value = UPDATE\n      inserter = inserter\n    [../]\n    [./count]\n      type = DiscreteNucleationData\n      value = COUNT\n      inserter = inserter\n    [../]\n  []\n  \n  [Adaptivity]\n    [./Indicators]\n      [./jump]\n        type = GradientJumpIndicator\n        variable = c\n      [../]\n    [../]\n    [./Markers]\n      [./nuc]\n        type = DiscreteNucleationMarker\n        map = map\n      [../]\n      [./grad]\n        type = ValueThresholdMarker\n        variable = jump\n        coarsen = 0.1\n        refine = 0.2\n      [../]\n      [./combo]\n        type = ComboMarker\n        markers = 'nuc grad'\n      [../]\n    [../]\n    marker = combo\n    cycles_per_step = 3\n    recompute_markers_during_cycles = true\n    max_h_level = 3\n  []\n  \n  [Executioner]\n    type = Transient\n    scheme = bdf2\n    solve_type = 'PJFNK'\n    petsc_options_iname = '-pc_type -sub_pc_type'\n    petsc_options_value = 'asm      lu          '\n    #petsc_options_iname = '-pc_type -ksp_grmres_restart -sub_ksp_type -sub_pc_type -pc_asm_overlap'\n    #petsc_options_value = 'asm      31                  preonly       lu           2'\n  \n    nl_max_its = 100\n    l_tol = 1.0e-4\n    nl_rel_tol = 1.0e-9\n    nl_abs_tol = 1.0e-9\n    start_time = 0.0\n    end_time = 2000\n  \n    [./TimeStepper]\n      type = IterationAdaptiveDT\n      dt = 10\n      growth_factor = 1.5\n      cutback_factor = 0.5\n      optimal_iterations = 8\n      iteration_window = 2\n      timestep_limiting_postprocessor = dtnuc\n    [../]\n  []\n  \n  [Outputs]\n    exodus = true\n    csv = true\n    print_linear_residuals = false\n  []",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-6971676",
                          "updatedAt": "2023-09-12T01:24:59Z",
                          "publishedAt": "2023-09-11T19:59:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Please see this page for troubleshooting linear & nonlinear solver failures\nwhy is probability not a DerivativeParsedMaterial?\nYou dont need the derivatives to help form the preconditioning matrix?",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-6973627",
                          "updatedAt": "2023-09-12T01:26:40Z",
                          "publishedAt": "2023-09-12T01:26:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mdh23rct"
                          },
                          "bodyText": "Dear Dr. Guillaume Giudicelli,\nI appreciate your reply and suggestion. As you advised, I have made the probability of nucleation a DerivativeParsedMaterial.\n    [./probability]\n      # This is a made up toy nucleation rate it should be replaced by\n      # classical nucleation theory in a real simulation.\n      #type = ParsedMaterial\n      type = DerivativeParsedMaterial\n      property_name = P\n      coupled_variables = 'c psi'\n      #coupled_variables = 'c'\n      expression = 'if(c<0.21,c*1e-8,0)-if(psi<0.5,psi*0.3,0)'\n      #expression = 'if(c<0.21,c*1e-8,0)'\n      outputs = exodus\n    [../]\n\nStill I am not seeing any change in the non-conserved order parameter at the point of nucleation, although the concentration field is increasing. As you can seen, I have made the conserved (concentration) and non-conserved order parameters (phase field) coupled with each other. And I think, I have defined the physics properly. Would you be kind to let me know what I can do next? I am a bit lost. Would you be kind to help me out! For your convenience, I have attached the new file here. Thanks.\n[Mesh]\n    type = GeneratedMesh\n    dim = 2\n    nx = 10\n    ny = 10\n    xmax = 500\n    ymax = 500\n    elem_type = QUAD\n  []\n  \n   [Modules]\n     [./PhaseField]\n       [./Conserved]\n         [./c]\n           free_energy = F\n           mobility = M\n           kappa = kappa_c\n           solve_type = REVERSE_SPLIT\n           coupled_variables = psi\n         [../]\n       [../]\n      [../]\n     [./PhaseField]\n       [./Nonconserved]\n        [./psi]\n          free_energy = F\n          mobility = L\n          kappa = kappa_c\n          coupled_variables = c\n        [../]\n       [../]\n      [../]\n    []\n\n [Variables]\n    [./w]\n      order = FIRST\n     family = LAGRANGE\n    [../]\n  []\n\n[Kernels]\n    [./c_res]\n      type = SplitCHParsed\n      variable = c\n      f_name = F\n      kappa_name = kappa_c\n      coupled_variables = psi\n      w = w\n    [../]\n    [./w_res]\n      type = SimpleSplitCHWRes\n      variable = w\n      mob_name = M\n    [../]\n    [./time]\n      type = CoupledTimeDerivative\n      variable = w\n      v = c\n    [../]\n    [./detadt]\n      type = TimeDerivative\n      variable = psi\n    [../]\n    [./ACBulk]\n      type = AllenCahn\n      variable = psi\n      f_name = F\n      coupled_variables = c\n    [../]\n    [./ACInterface]\n      type = ACInterface\n      variable = psi\n      kappa_name = kappa_c\n      variable_L = false\n    [../]\n    [./initialization_diffusion]\n      type = FunctionDiffusion\n      variable = psi\n      function = '100 * exp(-10 * t)'\n    [../]\n[]\n\n  [ICs]\n    [./c_IC]\n      type = ConstantIC\n      variable = c\n      value = 0.2\n    [../]\n    [./psi_IC]\n      type = ConstantIC\n      variable = psi\n      value = 0\n    [../]\n  []\n  \n  [Materials]\n    [./pfmobility]\n      type = GenericConstantMaterial\n      prop_names  = 'M L kappa_c'\n      prop_values = '1 10 25'\n    [../]\n    [./chemical_energy]\n      # simple double well free energy\n      type = DerivativeParsedMaterial\n      property_name = Fc\n      coupled_variables = 'c psi'\n      #constant_names       = 'w  cv_eq'\n      constant_names       = 'barr_height  cv_eq'\n      constant_expressions = '0.1          0'\n      #expression = 16*barr_height*c^2*(1-c)^2*psi^2*(psi-1)^2 #+0.01*(c*plog(c,0.005)+(1-c)*plog(1-c,0.005))\n      expression = 16*barr_height*c^2*(1-c)^2*(psi-1)^2 #+0.01*(c*plog(c,0.005)+(1-c)*plog(1-c,0.005))\n      #expression = 16*barr_height*c^2*(1-c)^2+((psi-1)^2*0.01*(c*log(c)+(1-c)*log(1-c))) #+0.01*(c*plog(c,0.005)+(1-c)*plog(1-c,0.005))\n      #expression = 16*w*c^2*(1-c)^2 #+0.01*(c*plog(c,0.005)+(1-c)*plog(1-c,0.005))\n      derivative_order = 2\n      outputs = exodus\n    [../]\n    [./probability]\n      # This is a made up toy nucleation rate it should be replaced by\n      # classical nucleation theory in a real simulation.\n      #type = ParsedMaterial\n      type = DerivativeParsedMaterial\n      property_name = P\n      coupled_variables = 'c psi'\n      #coupled_variables = 'c'\n      expression = 'if(c<0.21,c*1e-8,0)-if(psi<0.5,psi*0.3,0)'\n      #expression = 'if(c<0.21,c*1e-8,0)'\n      outputs = exodus\n    [../]\n    [./nucleation]\n      # The nucleation material is configured to insert nuclei into the free energy\n      # tht force the concentration to go to 0.95, and holds this enforcement for 500\n      # time units.\n      type = DiscreteNucleation\n      property_name = Fn\n      op_names  = 'c psi'\n      op_values = '0.90 1.0'\n      penalty = 5\n      penalty_mode = MIN\n      map = map\n      outputs = exodus\n    [../]\n    [./free_energy]\n      # add the chemical and nucleation free energy contributions together\n      type = DerivativeSumMaterial\n      derivative_order = 2\n      coupled_variables = 'c psi'\n      sum_materials = 'Fc Fn'\n      property_name = F\n    [../]\n        # h(eta)\n    [./h_eta]\n      type = SwitchingFunctionMaterial\n      h_order = HIGH\n      eta = psi\n      function_name = 'h'\n    [../]\n  \n    # g(eta)\n    [./g_eta]\n      type = BarrierFunctionMaterial\n      g_order = SIMPLE\n      eta = psi\n     function_name = 'g'\n    [../]\n  []\n  \n  [UserObjects]\n    [./inserter]\n      # The inserter runs at the end of each time step to add nucleation events\n      # that happened during the timestep (if it converged) to the list of nuclei\n      type = DiscreteNucleationInserter\n      hold_time = 50\n      probability = P\n      radius = 10\n    [../]\n    [./map]\n      # The map UO runs at the beginning of a timestep and generates a per-element/qp\n      # map of nucleus locations. The map is only regenerated if the mesh changed or\n      # the list of nuclei was modified.\n      # The map converts the nucleation points into finite area objects with a given radius.\n      type = DiscreteNucleationMap\n      periodic = c\n      inserter = inserter\n    [../]\n  []\n  \n  [Preconditioning]\n    [./SMP]\n      type = SMP\n      full = true\n    [../]\n  []\n  \n  [BCs]\n    [./Periodic]\n      [./all]\n        auto_direction = 'x y'\n      [../]\n    [../]\n  []\n  \n  [Postprocessors]\n    [./avg_psi]\n    type = ElementAverageValue\n    variable = psi\n    [../]\n    [./dt]\n    type = TimestepSize\n    [../]\n    [./ndof]\n      type = NumDOFs\n    [../]\n    [./rate]\n      type = DiscreteNucleationData\n      value = RATE\n      inserter = inserter\n    [../]\n    [./dtnuc]\n      type = DiscreteNucleationTimeStep\n      inserter = inserter\n      p2nucleus = 0.05\n      dt_max = 10\n    [../]\n    [./update]\n      type = DiscreteNucleationData\n      value = UPDATE\n      inserter = inserter\n    [../]\n    [./count]\n      type = DiscreteNucleationData\n      value = COUNT\n      inserter = inserter\n    [../]\n  []\n  \n  [Adaptivity]\n    [./Indicators]\n      [./jump]\n        type = GradientJumpIndicator\n        variable = c\n      [../]\n    [../]\n    [./Markers]\n      [./nuc]\n        type = DiscreteNucleationMarker\n        map = map\n      [../]\n      [./grad]\n        type = ValueThresholdMarker\n        variable = jump\n        coarsen = 0.1\n        refine = 0.2\n      [../]\n      [./combo]\n        type = ComboMarker\n        markers = 'nuc grad'\n      [../]\n    [../]\n    marker = combo\n    cycles_per_step = 3\n    recompute_markers_during_cycles = true\n    max_h_level = 3\n  []\n  \n  [Executioner]\n    type = Transient\n    scheme = bdf2\n    solve_type = 'PJFNK'\n    petsc_options_iname = '-pc_type -sub_pc_type'\n    petsc_options_value = 'asm      lu          '\n    #petsc_options_iname = '-pc_type -ksp_grmres_restart -sub_ksp_type -sub_pc_type -pc_asm_overlap'\n    #petsc_options_value = 'asm      31                  preonly       lu           2'\n  \n    nl_max_its = 100\n    l_tol = 1.0e-4\n    nl_rel_tol = 1.0e-9\n    nl_abs_tol = 1.0e-9\n    start_time = 0.0\n    end_time = 10000\n  \n    [./TimeStepper]\n      type = IterationAdaptiveDT\n      dt = 10\n      growth_factor = 1.5\n      cutback_factor = 0.5\n      optimal_iterations = 8\n      iteration_window = 2\n      timestep_limiting_postprocessor = dtnuc\n    [../]\n  []\n  \n  [Outputs]\n    exodus = true\n    csv = true\n    print_linear_residuals = false\n  []",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-6982235",
                          "updatedAt": "2023-09-12T19:28:14Z",
                          "publishedAt": "2023-09-12T18:44:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nPlease follow the instruction there\nhttps://mooseframework.inl.gov/moose/application_usage/failed_solves.html\nand paste a log of a failed simulation here so we can check on what is going wrong.\nI m on travel rn, I won't be able to run your case",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-6982535",
                          "updatedAt": "2023-09-12T19:29:22Z",
                          "publishedAt": "2023-09-12T19:29:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "I see that you've added phi-dependence to the free energy, but I'm not sure what physics you're wanting to implement based on how you've added it. What is the physical system you are trying to simulate? What do the order parameters you're using represent in that system?",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-7005474",
                          "updatedAt": "2023-09-14T18:30:42Z",
                          "publishedAt": "2023-09-14T18:30:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mdh23rct"
                          },
                          "bodyText": "Dear Dr. Aagesen,\nThank you for your reply. I am trying to simulate void formation in metals. When the vacancy concentration field reaches from 0.2 to 0.9, the voids start to form. To demarcate the void (supersaturated field) from the vacancy concentration in the matrix, I am using the non-conserved order parameter. Since the free energy is now a function of both vacancy concentration and non-conserved order parameter, I should get a change in the order parameter as well, but it is just not happening. Off course, I have not finalized the free energy formulation looking at the non-conserved order parameter. First, I am trying to bring the file to run in the simplest format. Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-7013253",
                          "updatedAt": "2023-09-15T11:53:13Z",
                          "publishedAt": "2023-09-15T11:53:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mdh23rct"
                          },
                          "bodyText": "Dear Dr. Larry Aagesen,\nI am glad to inform you that I have solved the problem. I actually wanted to identify the nucleation of voids with a jump in non-conserved order parameter, though it can be captured by using the concentration jump alone.\nThanks.",
                          "url": "https://github.com/idaholab/moose/discussions/25423#discussioncomment-7033911",
                          "updatedAt": "2023-09-18T12:02:10Z",
                          "publishedAt": "2023-09-18T12:02:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "About Mesh",
          "author": {
            "login": "wowodejiajia"
          },
          "bodyText": "Dear MOOSE experts,\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 14\n  ny = 14\n  xmax = 9\n  ymax = 9\n  uniform_refine = 3\n[]\n\nI don't understand what \"uniform_refine = 3\" means.  What is the effect on mesh establishment? What is the difference between uniform_refine = 3 and uniform_refine = 2?\nThank you.",
          "url": "https://github.com/idaholab/moose/discussions/25491",
          "updatedAt": "2023-09-18T12:00:04Z",
          "publishedAt": "2023-09-18T03:37:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "mangerij"
                  },
                  "bodyText": "If you have nx = 14, ny = 14 means you have 14 elements along the x direction and 14 elements along the y direction.\nUniform refine = 1 will make nx = 28, ny = 28\nUniform refine = 2 will make nx = 56, ny = 56\nUniform refine = 3 will make nx = 128, ny = 128\nThis happens at the mesh setup step.\nThis changes in 3D when the refinement also has another dimension to do",
                  "url": "https://github.com/idaholab/moose/discussions/25491#discussioncomment-7032894",
                  "updatedAt": "2023-09-18T10:17:06Z",
                  "publishedAt": "2023-09-18T10:17:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "wowodejiajia"
                          },
                          "bodyText": "I understand. Thank you very much",
                          "url": "https://github.com/idaholab/moose/discussions/25491#discussioncomment-7032931",
                          "updatedAt": "2023-09-18T10:21:22Z",
                          "publishedAt": "2023-09-18T10:21:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "I think that it should be  Uniform refine = 3 will make nx = 112, ny = 112 instead of  Uniform refine = 3 will make nx = 128, ny = 128 , The uniform refine = n option changes mesh by nx * 2^n",
                          "url": "https://github.com/idaholab/moose/discussions/25491#discussioncomment-7033895",
                          "updatedAt": "2023-09-18T12:00:04Z",
                          "publishedAt": "2023-09-18T12:00:04Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "restart with TensorMechanics (reloading stress state without interpolating)",
          "author": {
            "login": "Thomas-Ulrich"
          },
          "bodyText": "Hi,\nWe are running a simulation based on a (THM) moose application, which includes the tensor mechanics module.\nE.g., we have the following block in our input file:\n[Modules]\n  [./TensorMechanics]\n    [./Master]\n      [./all]\n      add_variables = true\n      strain = SMALL\n      incremental = true\n      eigenstrain_names = 'reduced_eigenstrain'\n      volumetric_locking_correction = true\n      additional_generate_output = 'stress_xx stress_xy stress_xz stress_yy stress_yz stress_zz'\n      [../]\n    [../]\n  [../]\n[]\n\nWhen we reach some critical state in the simulation, we want to extract the stresses from Moose, use them in another code, update the stresses and restart a new moose simulation. Let's forget about the update of the stress, but focus on the loading of the previous stress state in a new moose simulation. We are currently doing it using a SolutionUserObject reading the exodus output file from the first simulation.\n[UserObjects]\n  [./solution_loop]   \n    type = SolutionUserObject\n    mesh = output.e      # should be the name of output in first loop\n    timestep = LATEST\n  [../]\n[]\n[Functions]\n  [sxx_functionT]\n    type = SolutionFunction\n    from_variable = 'stress_xx'\n    solution = 'solution_loop'\n    execute_on = 'INITIAL'    \n []\n\nAnd we use sxx_functionT to initialize the new simulation. But this does not work perfectly. The new stress differs slightly (interpolation) from the last time step of the first simulation.\nOur mesh is 3D unstructured with lower dimensional elements (2D fault, and 1D wells).\nWe think it does not work perfectly because probably the SolutionUserObject interpolate stress_xx from the volume element\nonto the 2D fault, instead of loading the 2D data from the exodus file.\nTherefore, it would be better to load the stress from the exodus file using checkpointing rather than  SolutionUserObject (e.g. using initial_from_file_timestep = xx). But how can we do that, given that the variables stress_ij are not defined anywhere in our input file, except in the TensorMechanics block copied above?\nThanks in advance for your help,\nThomas Ulrich.",
          "url": "https://github.com/idaholab/moose/discussions/25460",
          "updatedAt": "2023-09-18T08:30:22Z",
          "publishedAt": "2023-09-14T08:29:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nTo use checkpoint you ll want the system to be exactly the same size before and after the restart.\nIf that is so, you can set \"restart_file_base\" in the Problem block, and it will restart everything it can.\nYou can also use a SolutionUO with a checkpoint file, but I think it will always interpolate\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25460#discussioncomment-7001249",
                  "updatedAt": "2023-09-14T12:38:24Z",
                  "publishedAt": "2023-09-14T12:38:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Thomas-Ulrich"
                          },
                          "bodyText": "thank you I will try",
                          "url": "https://github.com/idaholab/moose/discussions/25460#discussioncomment-7031574",
                          "updatedAt": "2023-09-18T08:30:23Z",
                          "publishedAt": "2023-09-18T08:30:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}