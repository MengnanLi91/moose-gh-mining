{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0xMS0wMVQxNjozMzowMC0wNTowMM4AN94F"
    },
    "edges": [
      {
        "node": {
          "title": "Errors appear when using 'make -j4'",
          "author": {
            "login": "xchengood"
          },
          "bodyText": "Hi Moose expert or user,\nI am studying how to create a Moose application following this page (https://mooseframework.inl.gov/getting_started/examples_and_tutorials/tutorial01_app_development/step01_moose_app.html). There are some errors appearing when I try 'make -j4' in the step of Compile the Application Executable.  Could anyone help me fix this issue? Thank you.\nerrors.txt",
          "url": "https://github.com/idaholab/moose/discussions/18574",
          "updatedAt": "2021-11-04T03:10:02Z",
          "publishedAt": "2021-08-10T18:26:55Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAre you using a mac?\nIf so look at the bottom of this page for the relevant fix (something about hostname)\nhttps://mooseframework.inl.gov/help/troubleshooting.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1155403",
                  "updatedAt": "2021-08-10T18:28:06Z",
                  "publishedAt": "2021-08-10T18:27:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "Hello\nAre you using a mac?\nIf so look at the bottom of this page for the relevant fix (something about hostname)\nhttps://mooseframework.inl.gov/help/troubleshooting.html\nGuillaume\n\nHi @GiudGiud. Yes, it is a mac. It doesn't work and still shows the same errors after trying the hostname solution according to suggestions.",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1155505",
                          "updatedAt": "2021-08-10T18:52:05Z",
                          "publishedAt": "2021-08-10T18:52:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "could you please paste the errors here",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1155512",
                          "updatedAt": "2021-08-10T18:54:19Z",
                          "publishedAt": "2021-08-10T18:54:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "could you please paste the errors here\n\nerrors.txt",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1155523",
                          "updatedAt": "2021-08-10T18:57:37Z",
                          "publishedAt": "2021-08-10T18:57:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so it compiles with make but not with make -j 4?\nDid you update anything?\nThis seems like xcode got updated, we dont support the latest version",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1155546",
                          "updatedAt": "2021-08-10T19:01:59Z",
                          "publishedAt": "2021-08-10T19:01:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "so it compiles with make but not with make -j 4?\nDid you update anything?\nThis seems like xcode got updated, we dont support the latest version\n\nIt shows the same errors when only using 'make'.\nI updated the system to Macox Big Sur 2 days ago. I noticed there will appear some errors with the newest Xcode. So I downgrade its version to 12.4 according to instructions in another post.\nI have no idea why those errors above occur.",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1155636",
                          "updatedAt": "2021-08-10T19:28:11Z",
                          "publishedAt": "2021-08-10T19:28:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so /usr/bin/xcodebuild -version returns 12.4?",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1155660",
                          "updatedAt": "2021-08-10T19:34:09Z",
                          "publishedAt": "2021-08-10T19:34:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "/usr/bin/xcodebuild -version\n\nIt does not. I got the following error. But there is indeed an Xcode with 12.4 in my mac.",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1156591",
                          "updatedAt": "2021-08-11T01:28:02Z",
                          "publishedAt": "2021-08-11T01:28:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ah ok let's get the version of xcode CLT to double check\nMaybe try\nxcode-select --version\nand\npkgutil --pkg-info=com.apple.pkg.CLTools_Executables and look under version as Daniel suggested",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1156991",
                          "updatedAt": "2021-08-11T05:39:35Z",
                          "publishedAt": "2021-08-11T05:39:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "Ah ok let's get the version of xcode CLT to double check\nMaybe try\nxcode-select --version\nand\npkgutil --pkg-info=com.apple.pkg.CLTools_Executables and look under version as Daniel suggested\n\nThank you. The issue has been resolved according to your and Daniel's suggestion. I appreciate it.",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1159062",
                          "updatedAt": "2021-08-11T14:25:40Z",
                          "publishedAt": "2021-08-11T14:25:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Did you maybe install (or accidentally upgrade to) a version of XCode CMD line tools other than 12.4?",
                  "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1156758",
                  "updatedAt": "2021-10-06T18:39:23Z",
                  "publishedAt": "2021-08-11T03:05:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Actually that is most definitely what happend to you, as it just happened to me as well. My mac decided to force that update on me \ud83d\udc40  and I'm seeing the exact same errors. Type\npkgutil --pkg-info=com.apple.pkg.CLTools_Executables\n\nI'm pretty sure you'll see the same thing under version:\npackage-id: com.apple.pkg.CLTools_Executables\nversion: 12.5.1.0.1.1623191612\nvolume: /\nlocation: /\ninstall-time: 1628330871\ngroups: com.apple.FindSystemFiles.pkg-group",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1156821",
                          "updatedAt": "2021-08-11T03:50:21Z",
                          "publishedAt": "2021-08-11T03:50:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Confirm your XCode CMD Line Tools path\n(moose) fn606041:test schwd$ xcode-select -p\n/Library/Developer/CommandLineTools\n\nDelete the whole directory:\n(moose) fn606041:test schwd$ sudo rm -rf /Library/Developer/CommandLineTools\nPassword:\n\nDownload version 12.4 (Command Line Tools for Xcode 12.4) from developer.apple.com and install it. Bam, fixed!",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1156840",
                          "updatedAt": "2021-08-11T03:59:09Z",
                          "publishedAt": "2021-08-11T03:59:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "Confirm your XCode CMD Line Tools path\n(moose) fn606041:test schwd$ xcode-select -p\n/Library/Developer/CommandLineTools\n\nDelete the whole directory:\n(moose) fn606041:test schwd$ sudo rm -rf /Library/Developer/CommandLineTools\nPassword:\n\nDownload version 12.4 (Command Line Tools for Xcode 12.4) from developer.apple.com and install it. Bam, fixed!\n\nThank you for your suggestion. The issue has been resolved well. Appreciate.",
                          "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1159069",
                          "updatedAt": "2021-08-11T14:26:42Z",
                          "publishedAt": "2021-08-11T14:26:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "For those who experience a similar issue in the future, I am re-answering this question now that MOOSE also supports Xcode 12.5, 13, and 13.1. Please update your conda packages to the newest versions by performing\nconda update --all\n\nwithin your MOOSE conda environment. See #19289 for more information.",
                  "url": "https://github.com/idaholab/moose/discussions/18574#discussioncomment-1586068",
                  "updatedAt": "2021-11-04T03:09:57Z",
                  "publishedAt": "2021-11-04T03:09:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Build Error - anaconda3 OSX + crash report",
          "author": {
            "login": "marmolRBG"
          },
          "bodyText": "Hello devs and community,\nI have a major build failure when going to run the tests for the MOOSE build in my conda moose env. This started the other while working with Github and doing a make clean then and attempting to make my MOOSE app which was previously working. I ran an update with Big Sur, then after updating conda, and recompiling moose, the failure occurs at:\ncd ~/projects/moose/test\nmake -j 4 # <--- build error\n./run_tests -j 4 \n\nI then went to the conda troubleshooting and failed to run the script:\ncd /tmp\ncat << EOF > hello.C\n# include ...\n\nThe failure also  prevented me from running make altogether for other cpp applications. I could not isolate the problem to Xcode, anaconda etc, so I did a factory reset and reinstalled Big Sur 11.3, dev tools etc and attempt to reinstall MOOSE.\nI then received the same failure messages after repeating the above steps. As per the MOOSE error output, I have attached the error and crash report here below.\nThank you very much in advance for any guidance,\nPaul\nmakeError.txt\nmooseEnvBuildTest.txt\npcrecpp-7ca045.cpp.txt\npcrecpp-7ca045.sh.txt",
          "url": "https://github.com/idaholab/moose/discussions/17722",
          "updatedAt": "2022-09-02T05:09:08Z",
          "publishedAt": "2021-05-02T02:07:18Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "This may be a new Xcode issue. I know a recent update occurred, but I have yet to test it. I'll do that now and report back.",
                  "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-687910",
                  "updatedAt": "2022-09-02T05:09:13Z",
                  "publishedAt": "2021-05-03T13:19:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I get the same error when running through the normal installation routine on latest BigSur (11.3). Prior to the update, things were working (aside from Peacock). The update included a bump to Xcode, and a large system update (11.2.3 --> 11.3).\nMost likely, the fix will involve downgrading Xcode. I'll begin there, and report back.",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-688237",
                          "updatedAt": "2021-05-03T14:25:32Z",
                          "publishedAt": "2021-05-03T14:25:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Downgrading Xcode to 12.4 solved my issue. But not without some strangeness beforehand.\nI already had Xcode 12.4 installed (according to Xcode, About). Seemingly there exists an update between this and 12.5?\nI began troubleshooting by installing 12.5. Received the same error as before. I then downgraded to 11.4, same error. Installed 12.4, error went away.\nDuring the mix of all this I had also tried installing Xcode CLT 11.4, 11.5, and 12.5. Which had no effect. Admittedly xcode-select -p continued to point to my installation of Xcode, so I doubt my system ever truly used my CLT installation(s).\nThe end result is that I removed Xcode CLT entirely:sudo rm -rf /Library/Developer/CommandLineTools, and installed Xcode 12.4.",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-688960",
                          "updatedAt": "2021-05-03T15:49:45Z",
                          "publishedAt": "2021-05-03T15:49:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pbalest"
                          },
                          "bodyText": "same here:\nIn file included from /Users/balep/projects/moose/framework/contrib/pcre/src/pcrecpp.cc:36: /Users/balep/opt/anaconda3/envs/moose00/bin/../include/c++/v1/stdlib.h:142:34: error: unknown type name 'ldiv_t' inline _LIBCPP_INLINE_VISIBILITY ldiv_t div(long __x, long __y) _NOEXCEPT {\nI'll try downgrading",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-693567",
                          "updatedAt": "2021-05-04T14:19:33Z",
                          "publishedAt": "2021-05-04T14:19:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pbalest"
                          },
                          "bodyText": "@milljm how you install previous version of Xcode and Xcode CLT?\nyou remove the new one sudo rm -rf /Library/Developer/CommandLineTools (and the app) download the previous version from apple install it and then point at it with sudo xcode-select -s /Applications/XcodeVersion.app/ ?",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-693628",
                          "updatedAt": "2021-05-04T14:31:43Z",
                          "publishedAt": "2021-05-04T14:31:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "marmolRBG"
                          },
                          "bodyText": "Hello Jason,\nThanks for investigating and confirming this. Strangeness for me as well, as the failure was not linked to the Big Sur update, and I had an older (<=v12.4) version of Xcode that was working previously. Sorry I can't provide more explicit troubleshooting results since I reset the system.\nUnfortunately it seems like that command to remove the command line tools will also mess up any other code/toolkit requiring to be built with Xcode, is that correct?\nI will also try the above steps  Paolo and you  mentioned.",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-693698",
                          "updatedAt": "2022-09-02T05:09:21Z",
                          "publishedAt": "2021-05-04T14:43:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Believe it or not, that is Apple's suggested means of removing Xcode CLT (Command Line Tools):\nhttps://developer.apple.com/library/archive/technotes/tn2339/_index.html#//apple_ref/doc/uid/DTS40014588-CH1-HOW_CAN_I_UNINSTALL_THE_COMMAND_LINE_TOOLS_\nwhich translates to:\nsudo rm -rf /Library/Developer/CommandLineTools\nInstalling any version of Xcode is a simple double-click on the Xcode.xip compressed file (Xcode.app is extracted), drag Xcode.app to /Applications, which will replace your current Xcode. After that, you run /Applications/Xcode which allows it to finalize anything it may need to do, and you are done.\nYou may need to adjust your xcode-select path, if you were strictly using CLT only:\nsudo xcode-select --switch /Applications/Xcode.app\nAlso, the reset feature might work best:\nsudo xcode-select --reset\n@marmolRBG Good to know, that you too had 12.4 to begin with. Very odd indeed, as that is the version I ended up with, which is what I began with... but now it works. Maybe Xcode needed to be... um, reinstalled?",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-693795",
                          "updatedAt": "2022-09-02T05:09:21Z",
                          "publishedAt": "2021-05-04T15:02:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pbalest"
                          },
                          "bodyText": "take soooooooooooooooooooo long to downlad Xcode\ud83d\ude06... I'll let you know if it works Thanks @milljm and @GiudGiud  to point me here.",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-693905",
                          "updatedAt": "2022-09-02T05:09:22Z",
                          "publishedAt": "2021-05-04T15:27:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pbalest"
                          },
                          "bodyText": "It worked! Thanks again!",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-694780",
                          "updatedAt": "2022-09-02T05:09:21Z",
                          "publishedAt": "2021-05-04T16:48:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nolmacdonald"
                          },
                          "bodyText": "Can confirm I had the same issue (XCode 12.5 on OS X) and downgraded to 12.4 w/ success.",
                          "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-813289",
                          "updatedAt": "2022-09-02T05:09:21Z",
                          "publishedAt": "2021-06-01T23:10:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "For those who experience a similar issue in the future, I am re-answering this question now that MOOSE also supports Xcode 12.5, 13, and 13.1. Please update your conda packages to the newest versions by performing\nconda update --all\n\nwithin your MOOSE conda environment. See #19289 for more information.",
                  "url": "https://github.com/idaholab/moose/discussions/17722#discussioncomment-1586064",
                  "updatedAt": "2022-09-02T05:09:21Z",
                  "publishedAt": "2021-11-04T03:07:37Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[FIXED] \u26a0\ufe0f Avoid macOS Big Sur system update to XCode CMD line tools 12.5 \u26a0\ufe0f",
          "author": {
            "login": "dschwen"
          },
          "bodyText": "The current macOS update will bump your XCode CMD line tools version to 12.5, which is unsupported by MOOSE at this time. Avoid this, or you will have to manually downgrade to 12.4.",
          "url": "https://github.com/idaholab/moose/discussions/18134",
          "updatedAt": "2022-07-10T06:18:24Z",
          "publishedAt": "2021-06-21T23:25:36Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lynnmunday"
                  },
                  "bodyText": "Is there an option when you upgrade to Big Sur not to upgrade the Xcode command line tools?",
                  "url": "https://github.com/idaholab/moose/discussions/18134#discussioncomment-1397603",
                  "updatedAt": "2022-07-10T06:18:24Z",
                  "publishedAt": "2021-09-28T17:13:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I am not aware that an upgrade to Big Sur upgrades XCode as well. Usually quite the opposite in my experience. I usually run into folks who upgraded their OS, but then fail to upgrade their XCode.\nEdit: Oh I see the issue. Perhaps they 'fixed' that by lumping both together. Traditionally you're supposed to update both. But in this case, yes... we need to stay away from 12.5 for the time being.\nIf you wish to upgrade to Big Sur, you should be able to do that via the App Store (search for Big Sur, and install).",
                          "url": "https://github.com/idaholab/moose/discussions/18134#discussioncomment-1397713",
                          "updatedAt": "2022-07-10T06:18:24Z",
                          "publishedAt": "2021-09-28T17:34:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "MOOSE now supports XCode 12.5, 13, and 13.1! See #19289 for more details and information about how to update.",
                  "url": "https://github.com/idaholab/moose/discussions/18134#discussioncomment-1586001",
                  "updatedAt": "2022-07-10T06:18:24Z",
                  "publishedAt": "2021-11-04T02:49:34Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "CoupledVarThresholdElementSubdomainModifier",
          "author": {
            "login": "am-tc01"
          },
          "bodyText": "Hi,\nI am trying to add a layer of a mesh block during the simulation using CoupledVarThresholdElementSubdomainModifier. My question is what values of the variables will be assigned to the elements that are added to the Subdomain. If it is the initial condition, then the IC from which Subdomain will be chosen, old one or the new one?",
          "url": "https://github.com/idaholab/moose/discussions/18733",
          "updatedAt": "2022-09-19T03:12:51Z",
          "publishedAt": "2021-08-30T21:12:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "You can choose whether to apply the initial condition.\n\nIf it is the initial condition, then the IC from which Subdomain will be chosen, old one or the new one?\n\nIf element subdomain is modified from A to B, then IC of subdomain B will be applied.",
                  "url": "https://github.com/idaholab/moose/discussions/18733#discussioncomment-1256503",
                  "updatedAt": "2022-09-19T03:12:51Z",
                  "publishedAt": "2021-08-30T22:15:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "am-tc01"
                          },
                          "bodyText": "Ok that's not exactly how it's happening in my case. The variable (u) is not defined in subdomain A, it's only defined in B, and when I change from A to B, it just assigns u=0 in B, which is not the IC in B. Can I choose to have a different value than the IC?",
                          "url": "https://github.com/idaholab/moose/discussions/18733#discussioncomment-1258152",
                          "updatedAt": "2023-03-23T16:15:17Z",
                          "publishedAt": "2021-08-31T08:04:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Can you paste the relevant blocks from the input file here, e.g. ICs and Userobjects? Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/18733#discussioncomment-1259227",
                          "updatedAt": "2022-09-19T03:12:52Z",
                          "publishedAt": "2021-08-31T11:40:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "am-tc01"
                          },
                          "bodyText": "[Mesh]\n   [gen_mesh] \n        type = GeneratedMeshGenerator\n        dim = 2\n        nx = 100\n        ny = 50\n        xmin = 0\n        ymin = 0\n        xmax = 2.5E-3\n        ymax = 1.2E-3\n   [] \n\n    [solid_domain]\n        input = gen_mesh\n        type = SubdomainBoundingBoxGenerator\n        bottom_left = '0 0 0'\n        top_right = ' 2.5E-3 0.5E-3 0'\n        block_id = 1\n    []\n\n    [powder_domain]\n        input = solid_domain\n        type = SubdomainBoundingBoxGenerator\n        bottom_left = '0 0.5E-3 0'\n        top_right = '2.5E-3 0.6E-3 0'\n        block_id = 2\n    []\n\n    [gas_domain]\n        input = powder_domain\n        type = SubdomainBoundingBoxGenerator\n        bottom_left = '0 0.6E-3 0'\n        top_right = '2.5E-3 1.2E-3 0'\n        block_id = 3\n    []\n\n\n    [sidesets_top]\n        input = gas_domain\n        type = SideSetsAroundSubdomainGenerator\n        normal = '0 1 0'\n        block = 2\n        new_boundary = 'top'\n    []\n[]\n\n[Variables]\n    [u]\n        initial_condition = -1e5     \n        family = LAGRANGE\n        block = '1 2'\n    []\n[]\n\n\n[UserObjects]\n    [activated_elem_sd2] \n        type = CoupledVarThresholdElementSubdomainModifier\n        coupled_var = path_var_sd2\n        criterion_type = ABOVE\n        threshold = 0\n        subdomain_id = 2\n        moving_boundary_name = top_powder\n        execute_on = 'INITIAL TIMESTEP_BEGIN '\n        apply_initial_conditions = true    \n    [] \n\n    [activated_elem_sd1]\n        type = CoupledVarThresholdElementSubdomainModifier\n        coupled_var = path_var_sd1\n        criterion_type = BELOW\n        threshold = 0\n        subdomain_id = 1\n        moving_boundary_name = front_powder\n        execute_on = 'INITIAL TIMESTEP_BEGIN'\n        apply_initial_conditions = true\n    []\n[]\n\n[AuxKernels]\n    [path_elem_sd2]\n        type = ParsedAux\n        variable = path_var_sd2\n        function = (y-0.7E-3)*(0.6E-3-y)*(t=0.01)\n        use_xyzt = true\n        execute_on ='TIMESTEP_BEGIN'\n    []   \n\n    [path_elem_sd1]\n        type = ParsedAux\n        variable = path_var_sd1\n        function = '(max( abs(x-0.5*t+0.05E-3), abs(y-0.5E-3) ) - 0.1E-3)'\n        use_xyzt = true\n        execute_on ='INITIAL LINEAR TIMESTEP_BEGIN'\n    [] \n[]\n\nEdited: Added AuxKernels also.",
                          "url": "https://github.com/idaholab/moose/discussions/18733#discussioncomment-1259918",
                          "updatedAt": "2022-09-19T03:12:53Z",
                          "publishedAt": "2021-08-31T14:02:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "am-tc01"
                          },
                          "bodyText": "@hugary1995 Hi, just wondering if you got the time to test this?",
                          "url": "https://github.com/idaholab/moose/discussions/18733#discussioncomment-1273956",
                          "updatedAt": "2022-09-19T03:13:11Z",
                          "publishedAt": "2021-09-02T20:00:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "I can reproduce this issue. I opened a ticket here #18765",
                          "url": "https://github.com/idaholab/moose/discussions/18733#discussioncomment-1274454",
                          "updatedAt": "2022-09-19T03:13:11Z",
                          "publishedAt": "2021-09-02T22:44:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "czadeh"
                          },
                          "bodyText": "Hi, I also ran into this issue.\nI found that in my case, I could get around it by setting the variable of interest to also exist in the inactive block (for you, this means set u to block = '1 2 3'). But just make sure that your kernels are only defined in blocks 1 and 2, so there is no activity in block 3 other than just holding the initial condition.\nPlease let me know if this works for you.",
                          "url": "https://github.com/idaholab/moose/discussions/18733#discussioncomment-1584841",
                          "updatedAt": "2022-09-19T03:13:12Z",
                          "publishedAt": "2021-11-03T20:53:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Errors from new version of MOOSE&SAM",
          "author": {
            "login": "Terryxixi2014"
          },
          "bodyText": "Any comments on the following errors and warnings?\n*** Warning, This code is deprecated and will be removed in future versions:\nThe parameter accept_on_max_picard_iteration is deprecated.\nTrue to treat reaching the maximum number of Picard iterations as converged.\nStack frames: 14\n0: libMesh::print_trace(std::ostream&)\n1: void moose::internal::mooseDeprecatedStream<libMesh::BasicOStreamProxy<char, std::char_traits >, char const (&) [15], std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, char const (&) [17], std::__cxx11::basic_string<char, std::char_traits, std::allocator >&>(libMesh::BasicOStreamProxy<char, std::char_traits >&, bool, char const (&) [15], std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, char const (&) [17], std::__cxx11::basic_string<char, std::char_traits, std::allocator >&)\n2: Parser::extractParams(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, InputParameters&)\n3: Parser::walkRaw(std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::__cxx11::basic_string<char, std::char_traits, std::allocator >, hit::Node*)\n4: Parser::walk(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, hit::Node*)\n5: hit::Node::walk(hit::Walker*, hit::NodeType)\n6: hit::Node::walk(hit::Walker*, hit::NodeType)\n7: Parser::parse(std::vector<std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::allocator<std::__cxx11::basic_string<char, std::char_traits, std::allocator > > > const&)\n8: MooseApp::setupOptions()\n9: SamApp::setupOptions()\n10: MooseApp::run()\n11: ./sam-opt(+0x5153) [0x55afe87de153]\n12: __libc_start_main\n13: ./sam-opt(+0x53dd) [0x55afe87de3dd]\nCreate mesh... OK\nBuild SAM Displaced Mesh... OK\nChecking system integrity... OK\nAdd Variables... OK\nInitialize Variable Values... OK\n*** ERROR ***\nbasic_string::substr: __pos (which is 18446744073709551615) > this->size() (which is 20)\nStack frames: 7\n0: libMesh::print_trace(std::ostream&)\n1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::__cxx11::basic_string<char, std::char_traits, std::allocator >)\n2: void mooseError<char const*>(char const*&&)\n3: /home/jwang/Projects/SAM00/moose/framework/libmoose-opt.so.0(+0x72a16d) [0x7f264bfc416d]\n4: ./sam-opt(+0x5153) [0x55afe87de153]\n5: __libc_start_main\n6: ./sam-opt(+0x53dd) [0x55afe87de3dd]\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor",
          "url": "https://github.com/idaholab/moose/discussions/19284",
          "updatedAt": "2023-03-09T10:41:49Z",
          "publishedAt": "2021-11-03T03:25:29Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe warning is because the parameter is now called accept_on_max_fixed_point_iteration.\nThe error is some out of bounds error. Please compile SAM in debug mode and get a full backtrace for the error. I have access to SAM I can have a look. If it s not obvious we ll tag some SAM developers in here.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19284#discussioncomment-1579869",
                  "updatedAt": "2023-03-09T10:41:52Z",
                  "publishedAt": "2021-11-03T04:17:28Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "please avoid posting source code btw. Just email me at guillaume.giudicelli@inl.gov",
                          "url": "https://github.com/idaholab/moose/discussions/19284#discussioncomment-1579974",
                          "updatedAt": "2023-03-09T10:41:54Z",
                          "publishedAt": "2021-11-03T05:33:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Plasticity models - General questions",
          "author": {
            "login": "Nuriacor"
          },
          "bodyText": "Dear MOOSE developers,\nI am relatively new in MOOSE and to modelling in general. I am sorry if this is too simple.\nI was looking to the inelastic documentation of TensorMechanics (https://mooseframework.inl.gov/source/materials/ComputeMultipleInelasticStress.html) which was really helpful, but I have some questions.\n\nIs there a difference between plastic and inelastic? Some objects are called PlasticBlabla.C and others InelasticBlabla.C\nLooks like in the MOOSE script (.i file) there are different way to apply plasticity: Using UserObjects and Materials or just using Materials. Why is that? Also what TensorMechanicsHardeningConstant function? It looks like is use to define the constant parameters of the inelastic laws but why these values cannot be assigned directly?\nWhen Multiple inelastic models are set, this means that different inelastic laws are applied to different blocks of the mesh?\nThanks and Im sorry if this is too simple!\nNuria",
          "url": "https://github.com/idaholab/moose/discussions/19232",
          "updatedAt": "2022-06-08T01:33:44Z",
          "publishedAt": "2021-10-28T09:23:57Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "recuero"
                  },
                  "bodyText": "Inelastic can be creep deformation, plastic deformation, or both. So \"inelastic\" is a general term for non-elastic behavior.\nDepends on the code design. Most of the constitutive equations use Materials. I believe crystal plasticity may use UserObjects too. User objects have a ton of applications and can serve many different purposes.\nMultiple inelastic models take care of multiple inelastic models within the same block. For example, you could think of a simulation with creep and plasticity. One needs to use a proper return mapping algorithm and, in addition, make the creep solution and the plasticity solution converge.",
                  "url": "https://github.com/idaholab/moose/discussions/19232#discussioncomment-1555164",
                  "updatedAt": "2022-06-08T01:34:34Z",
                  "publishedAt": "2021-10-28T19:48:27Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Nuriacor"
                          },
                          "bodyText": "Thanks!! This is really helpful!",
                          "url": "https://github.com/idaholab/moose/discussions/19232#discussioncomment-1577833",
                          "updatedAt": "2022-06-08T01:34:41Z",
                          "publishedAt": "2021-11-02T18:00:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Tests fail when adding some files to ADDITIONAL_APP_OBJECTS in the Makefile",
          "author": {
            "login": "thiloschmid"
          },
          "bodyText": "Dear moose community,\nI am running into an issue when trying to couple an external framework to moose. The additional files are added in the Makefile via\n# object files\nADDITIONAL_APP_OBJECTS += $(patsubst %.cpp, %.$(obj-suffix), $(additional_srcfiles))\n\n# dependencies \nADDITIONAL_APP_DEPS += $(patsubst %.cpp, %.$(obj-suffix).d, $(additional_srcfiles))\n\nBut after running make, the test fails with the following output.\n(moose) me@cluster:~/Projects/chamois$ ./run_tests \n<frozen importlib._bootstrap>:228: RuntimeWarning: compiletime version 3.8 of module 'hit' does not match runtime version 3.9\ntest:kernels/simple_diffusion.test: Working Directory: /local/home/schmithi/Projects/chamois/test/tests/kernels/simple_diffusion\ntest:kernels/simple_diffusion.test: Running command: /local/home/schmithi/Projects/chamois/chamois-opt -i simple_diffusion.i --no-gdb-backtrace\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Framework Information:\ntest:kernels/simple_diffusion.test: MOOSE Version:           git commit 4aee48977f on 2021-10-30\ntest:kernels/simple_diffusion.test: LibMesh Version:         \ntest:kernels/simple_diffusion.test: PETSc Version:           3.15.1\ntest:kernels/simple_diffusion.test: SLEPc Version:           3.15.1\ntest:kernels/simple_diffusion.test: Current Time:            Sat Oct 30 14:57:38 2021\ntest:kernels/simple_diffusion.test: Executable Timestamp:    Sat Oct 30 14:57:36 2021\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Parallelism:\ntest:kernels/simple_diffusion.test:   Num Processors:          1\ntest:kernels/simple_diffusion.test:   Num Threads:             1\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Mesh: \ntest:kernels/simple_diffusion.test:   Parallel Type:           replicated\ntest:kernels/simple_diffusion.test:   Mesh Dimension:          2\ntest:kernels/simple_diffusion.test:   Spatial Dimension:       2\ntest:kernels/simple_diffusion.test:   Nodes:                   121\ntest:kernels/simple_diffusion.test:   Elems:                   100\ntest:kernels/simple_diffusion.test:   Num Subdomains:          1\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Nonlinear System:\ntest:kernels/simple_diffusion.test:   Num DOFs:                121\ntest:kernels/simple_diffusion.test:   Num Local DOFs:          121\ntest:kernels/simple_diffusion.test:   Variables:               \"u\" \ntest:kernels/simple_diffusion.test:   Finite Element Types:    \"LAGRANGE\" \ntest:kernels/simple_diffusion.test:   Approximation Orders:    \"FIRST\" \ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Execution Information:\ntest:kernels/simple_diffusion.test:   Executioner:             Steady\ntest:kernels/simple_diffusion.test:   Solver Mode:             Preconditioned JFNK\ntest:kernels/simple_diffusion.test:   PETSc Preconditioner:    hypre boomeramg \ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test:  0 Nonlinear |R| = 3.082207e+00\ntest:kernels/simple_diffusion.test:       0 Linear |R| = 3.082207e+00\ntest:kernels/simple_diffusion.test:       1 Linear |R| = 1.034260e-01\ntest:kernels/simple_diffusion.test:       2 Linear |R| = 2.616261e-03\ntest:kernels/simple_diffusion.test:       3 Linear |R| = 9.194723e-05\ntest:kernels/simple_diffusion.test:       4 Linear |R| = 1.366911e-06\ntest:kernels/simple_diffusion.test:  1 Nonlinear |R| = 1.373820e-06\ntest:kernels/simple_diffusion.test:       0 Linear |R| = 1.373820e-06\ntest:kernels/simple_diffusion.test:       1 Linear |R| = 3.507042e-08\ntest:kernels/simple_diffusion.test:       2 Linear |R| = 4.049791e-10\ntest:kernels/simple_diffusion.test:       3 Linear |R| = 1.351613e-11\ntest:kernels/simple_diffusion.test:  2 Nonlinear |R| = 1.352021e-11\ntest:kernels/simple_diffusion.test:  Solve Converged!\ntest:kernels/simple_diffusion.test: double free or corruption (!prev)\ntest:kernels/simple_diffusion.test: Aborted\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Framework Information:\ntest:kernels/simple_diffusion.test: MOOSE Version:           git commit 4aee48977f on 2021-10-30\ntest:kernels/simple_diffusion.test: LibMesh Version:         \ntest:kernels/simple_diffusion.test: PETSc Version:           3.15.1\ntest:kernels/simple_diffusion.test: SLEPc Version:           3.15.1\ntest:kernels/simple_diffusion.test: Current Time:            Sat Oct 30 14:57:38 2021\ntest:kernels/simple_diffusion.test: Executable Timestamp:    Sat Oct 30 14:57:36 2021\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Parallelism:\ntest:kernels/simple_diffusion.test:   Num Processors:          1\ntest:kernels/simple_diffusion.test:   Num Threads:             1\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Mesh: \ntest:kernels/simple_diffusion.test:   Parallel Type:           replicated\ntest:kernels/simple_diffusion.test:   Mesh Dimension:          2\ntest:kernels/simple_diffusion.test:   Spatial Dimension:       2\ntest:kernels/simple_diffusion.test:   Nodes:                   121\ntest:kernels/simple_diffusion.test:   Elems:                   100\ntest:kernels/simple_diffusion.test:   Num Subdomains:          1\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Nonlinear System:\ntest:kernels/simple_diffusion.test:   Num DOFs:                121\ntest:kernels/simple_diffusion.test:   Num Local DOFs:          121\ntest:kernels/simple_diffusion.test:   Variables:               \"u\" \ntest:kernels/simple_diffusion.test:   Finite Element Types:    \"LAGRANGE\" \ntest:kernels/simple_diffusion.test:   Approximation Orders:    \"FIRST\" \ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Execution Information:\ntest:kernels/simple_diffusion.test:   Executioner:             Steady\ntest:kernels/simple_diffusion.test:   Solver Mode:             Preconditioned JFNK\ntest:kernels/simple_diffusion.test:   PETSc Preconditioner:    hypre boomeramg \ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test:  0 Nonlinear |R| = 3.082207e+00\ntest:kernels/simple_diffusion.test:       0 Linear |R| = 3.082207e+00\ntest:kernels/simple_diffusion.test:       1 Linear |R| = 1.034260e-01\ntest:kernels/simple_diffusion.test:       2 Linear |R| = 2.616261e-03\ntest:kernels/simple_diffusion.test:       3 Linear |R| = 9.194723e-05\ntest:kernels/simple_diffusion.test:       4 Linear |R| = 1.366911e-06\ntest:kernels/simple_diffusion.test:  1 Nonlinear |R| = 1.373820e-06\ntest:kernels/simple_diffusion.test:       0 Linear |R| = 1.373820e-06\ntest:kernels/simple_diffusion.test:       1 Linear |R| = 3.507042e-08\ntest:kernels/simple_diffusion.test:       2 Linear |R| = 4.049791e-10\ntest:kernels/simple_diffusion.test:       3 Linear |R| = 1.351613e-11\ntest:kernels/simple_diffusion.test:  2 Nonlinear |R| = 1.352021e-11\ntest:kernels/simple_diffusion.test:  Solve Converged!\ntest:kernels/simple_diffusion.test: double free or corruption (!prev)\ntest:kernels/simple_diffusion.test: Aborted\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test: Exit Code: 134\ntest:kernels/simple_diffusion.test: ################################################################################\ntest:kernels/simple_diffusion.test: Tester failed, reason: CRASH\ntest:kernels/simple_diffusion.test: \ntest:kernels/simple_diffusion.test ............................................................ FAILED (CRASH)\n\n\nFinal Test Results:\n--------------------------------------------------------------------------------------------------------------\ntest:kernels/simple_diffusion.test ............................................................ FAILED (CRASH)\n--------------------------------------------------------------------------------------------------------------\nRan 1 tests in 0.2 seconds. Average test time 0.1 seconds, maximum test time 0.1 seconds.\n0 passed, 0 skipped, 0 pending, 1 FAILED\n\nI am not too experienced with building more complex projects. Other input files lead to a similar result. They almost complete and lead to this double free or corruption (!prev) error somewhere after the solver converges. I have not been able to track down the problem with the debugger since the stack is corrupted.\nIt seems weird to me that the simple diffusion test fails even though it should not depend on the third-party library. Is there some moose function that is overloaded in some unintended way?\nI would appreciate any help toward resolving this issue.",
          "url": "https://github.com/idaholab/moose/discussions/19267",
          "updatedAt": "2022-09-16T07:25:16Z",
          "publishedAt": "2021-10-30T15:18:19Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you please build in debug mode and get us a backtrace in a debugger?\ninstructions are here: https://mooseframework.inl.gov/application_development/debugging.html#!\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19267#discussioncomment-1563780",
                  "updatedAt": "2023-05-26T15:25:35Z",
                  "publishedAt": "2021-10-30T18:31:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "thiloschmid"
                          },
                          "bodyText": "I was able to resolve the issue. My apologies, it had nothing to do with moose directly.",
                          "url": "https://github.com/idaholab/moose/discussions/19267#discussioncomment-1576625",
                          "updatedAt": "2023-05-26T15:25:38Z",
                          "publishedAt": "2021-11-02T14:56:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Piecewise constant material assignment given elemental centroid",
          "author": {
            "login": "aaelmeli"
          },
          "bodyText": "Hi\nI am trying to define the spatial distribution of material given the centroid of each element. The way I am thinking of is that, given the coordinate of the centroid of each element (x,y,z), and the value of the material at this point, each QP in this element will copy that value.\nI have tried to use the PiecewiseMulticonstant to achieve this, but obviously, it does some interpolation that I do not want.\nFor example, in the following picture, this is the output of a simple domain with 2-elements (in 2D). I wanted to assign a value of 1 for the first element, and 2 for the second element. But the results show that element one has a value of 1 and element 2 has a value of 1.5.\n\nThe part of the input file associated with this output is as below:\n\n[Mesh]\ntype = GeneratedMesh\ndim = 2\nxmin = 0\nxmax = 1\nymin = 0\nymax = 1.0\nnx = 2\nny = 1\n[]\n\n\n[material_distribution_function]\ntype = PiecewiseMulticonstant\ndata_file = material_distribution.data\ndirection = 'left right'\n[]\n\nwhere the data_file is as follows:\n\nAXIS X\n0.25 0.75\nAXIS Y\n0.5\nDATA\n1.00\n2.00\n\nAny hint regarding this?",
          "url": "https://github.com/idaholab/moose/discussions/19094",
          "updatedAt": "2022-07-14T13:54:30Z",
          "publishedAt": "2021-10-13T16:17:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "Hmm, I didn't think PiecewiseMulticonstant does any interpolation at all, so this is weird.\nYou are telling the function to read from the left for the x values, so if you replace your AXIS X data with 0 0.5 it should work as you expect.",
                  "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1473663",
                  "updatedAt": "2022-07-14T13:55:15Z",
                  "publishedAt": "2021-10-13T22:24:26Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aaelmeli"
                          },
                          "bodyText": "Thank you this fixes the problem. However, I saw an example that defines the material at the centroid of each element here although it uses the PiecewiseMultilinear, so that was the confusion, I guess.\nBut, I am still not sure why there is no function that sets the values based on the centroid of the elements though. In that case, specifying the direction for each axis will no longer be needed. And I believe it will be useful for non-structured mesh as well.\n@cpgr @GiudGiud Do you think we can work around this and add an option to make PiecewiseMulticonstant work without the need to specify the direction (given the centroid)",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1473894",
                          "updatedAt": "2022-07-14T13:55:16Z",
                          "publishedAt": "2021-10-13T23:43:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont see how to get rid of the direction. For elemental fields, the centroid of each element is compared to coordinates specified in data_file. We have to decide whether we get the value on the right or on the left.",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1474608",
                          "updatedAt": "2022-07-14T13:55:16Z",
                          "publishedAt": "2021-10-14T04:41:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "I wrote that example that you linked to. Looking at it again, it might be useful to replace PiecewiseMultilinear with PiecewiseMulticonstant in the example as it is really setting a constant property in each material.\nWhat you are suggesting with a function that sets a value based on element centroid seems like a specialisation of PiecewiseMulticonstant that would be better as a separate function.",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1474682",
                          "updatedAt": "2022-07-14T13:55:16Z",
                          "publishedAt": "2021-10-14T05:10:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "oh are you talking about using some sort of nearest point/neighbor scheme to determine the value?",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1474691",
                          "updatedAt": "2022-08-15T22:36:23Z",
                          "publishedAt": "2021-10-14T05:14:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aaelmeli"
                          },
                          "bodyText": "oh are you talking about using some sort of nearest point/neighbor scheme to determine the value?\n\nYes, so for example, a user provides the centroid of the element and the value. Then, within each element, instead of comparing the centroid to the coordinates of the mesh as you mentioned, we can compare it to the centroids provided by users. So, in this case, no need to specify the directions. This is just a suggestion, I am not aware of other moose's concerns that may arise /be there.",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1477499",
                          "updatedAt": "2022-08-15T22:36:23Z",
                          "publishedAt": "2021-10-14T14:32:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Then you would provide a value for every element? Or interpolate in between.",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1477698",
                          "updatedAt": "2022-08-15T22:36:23Z",
                          "publishedAt": "2021-10-14T15:07:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aaelmeli"
                          },
                          "bodyText": "Then you would provide a value for every element? Or interpolate in between.\n\nFor the PiecewiseMulticonstant I would provide value for each element if it is one-to-one mapping, Yes. And, if it is not one-to-one, or when mesh refinement is needed, we can always compare the centroids of the finite elements with the centroids provided by the users as well.",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1477777",
                          "updatedAt": "2022-08-15T22:36:23Z",
                          "publishedAt": "2021-10-14T15:21:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok i ll look into this.\nI think someone had started implementing this, with values coming from CSV as well",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1477919",
                          "updatedAt": "2022-08-15T22:36:34Z",
                          "publishedAt": "2021-10-14T15:47:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok so ElementPropertyFileReader already does all we would want, but:\n\nit's in tensor mechanics\nit's a UO rather than a function\nI ll make a PR soon to move it to the framework & add a function",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1478407",
                          "updatedAt": "2022-08-15T22:36:39Z",
                          "publishedAt": "2021-10-14T17:15:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aaelmeli"
                          },
                          "bodyText": "ok so ElementPropertyFileReader already does all we would want, but:\n\nit's in tensor mechanics\nit's a UO rather than a function\nI ll make a PR soon to move it to the framework & add a function\n\n\nThat would be great, thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/19094#discussioncomment-1478458",
                          "updatedAt": "2022-08-15T22:37:05Z",
                          "publishedAt": "2021-10-14T17:25:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "LibMesh Update",
          "author": {
            "login": "cticenhour"
          },
          "bodyText": "A new libMesh has made its way to the MOOSE master branch. For those using the conda packages, please perform\nconda update --all\n\nin your MOOSE conda environment. For those using the the libMesh submodule, please run in the moose/scripts directory\n./update_and_rebuild_libmesh.sh\n\nafter updating your copy of MOOSE.\nMore details on the content of this update can be found in the October 2021 Newsletter.",
          "url": "https://github.com/idaholab/moose/discussions/19270",
          "updatedAt": "2021-11-01T23:02:55Z",
          "publishedAt": "2021-11-01T21:29:40Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "October 2021 Newsletter",
          "author": {
            "login": "cticenhour"
          },
          "bodyText": "The October 2021 MOOSE Newsletter has been released! A summary of the content is below:\n\nmoosetools Repository Removed\nSupport Ended for PETSc < 3.5\nNew Reactor Module\nNew Functor System\n3D Mortar Contraints\nlibMesh Update Summary",
          "url": "https://github.com/idaholab/moose/discussions/19271",
          "updatedAt": "2022-06-02T07:05:06Z",
          "publishedAt": "2021-11-01T21:33:00Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": []
          }
        }
      }
    ]
  }
}