{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0wNC0xNFQxMzowMzo1My0wNTowMM4AMpdP"
    },
    "edges": [
      {
        "node": {
          "title": "No Abaqus->LibMesh mapping information for ElemType QUAD8!",
          "author": {
            "login": "etauq"
          },
          "bodyText": "Hi,\nI was planning to manually generate a mesh in ABAQUS mesh format. The elements should be second order elements, like CPE8 in ABAQUS (QUAD8 In libmesh). However, when I ran the simulation, there was an error \"No Abaqus->LibMesh mapping information for ElemType QUAD8!\". Does anyone know how to generate mesh with second order elements that MOOSE can read? Or does anyone know how to use 3x3 quadrature rule for CPE4 (QUAD4) elements in MOOSE?\nThanks,\nJack",
          "url": "https://github.com/idaholab/moose/discussions/17639",
          "updatedAt": "2023-03-04T14:52:03Z",
          "publishedAt": "2021-04-19T03:22:28Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GregVernon"
                  },
                  "bodyText": "There should be a QUAD9 in libMesh, but I don't think Abaqus supports QUAD9.  If you're in a pinch, however, Cubit can export QUAD9 elements via Exodus which should be supported by libMesh.  You could test with the free non-commercial license of Coreform Cubit: https://coreform.com/products/coreform-cubit/free-meshing-software/\nThat being said, it certainly seems like the QUAD8 should be supported, so this seems like a bug.  But generally speaking, I think you can expect Exodus files to have better support in libMesh than Abaqus files (@permcody, true statement?).",
                  "url": "https://github.com/idaholab/moose/discussions/17639#discussioncomment-629089",
                  "updatedAt": "2023-03-04T14:52:03Z",
                  "publishedAt": "2021-04-19T08:37:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "etauq"
                          },
                          "bodyText": "Thanks, I used Cubit to create the Exodus mesh. It works great!",
                          "url": "https://github.com/idaholab/moose/discussions/17639#discussioncomment-631712",
                          "updatedAt": "2023-03-04T14:52:30Z",
                          "publishedAt": "2021-04-19T18:39:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "where is the old wiki?",
          "author": {
            "login": "WilkAndy"
          },
          "bodyText": "I wanted to point @Traiwit to some plasticity documentation on there, but can't find it",
          "url": "https://github.com/idaholab/moose/discussions/17614",
          "updatedAt": "2024-04-29T14:40:55Z",
          "publishedAt": "2021-04-15T06:09:28Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "It is dead, we don't have the resources to host it any longer, see  #15932",
                  "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-616224",
                  "updatedAt": "2024-04-29T14:40:55Z",
                  "publishedAt": "2021-04-15T15:29:52Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "What specific information were you looking for? It might be somewhere in the new docs. If it is not, we should migrate them over.",
                  "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-616832",
                  "updatedAt": "2024-04-29T14:40:55Z",
                  "publishedAt": "2021-04-15T17:22:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "@WilkAndy\nI turned it back on... So very temporary though:\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/",
                  "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-617317",
                  "updatedAt": "2024-04-29T14:41:27Z",
                  "publishedAt": "2021-04-15T19:16:06Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Thank you @milljm and @aeslaughter .   This was very useful, and i just wanted to confirm that we got all the required doco.",
                          "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-627750",
                          "updatedAt": "2024-04-29T14:41:27Z",
                          "publishedAt": "2021-04-18T22:58:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "\ud83d\udc4d\nI have shut down the AWS server...",
                          "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-631173",
                          "updatedAt": "2024-04-29T14:41:27Z",
                          "publishedAt": "2021-04-19T16:21:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "@milljm Re-enabled the old wiki. It will be up until the end of the day on Friday (4-16-2021). If you want something please grab the content and either submit a PR or paste the content into #15932. The content is very old, out-of-date, and it ends up costing personal money to host the site. After this, it is gone and whatever was \"needed\" should be replaced with new content.",
                  "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-617348",
                  "updatedAt": "2024-04-29T14:41:26Z",
                  "publishedAt": "2021-04-15T19:24:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Thanks for this @aeslaughter and @milljm",
                          "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-617785",
                          "updatedAt": "2024-04-29T14:41:26Z",
                          "publishedAt": "2021-04-15T21:21:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Oh, i see that last year i put my request into #15932 .   Did anyone ever action those requests (i didn't) ?",
                          "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-617884",
                          "updatedAt": "2024-04-29T14:41:26Z",
                          "publishedAt": "2021-04-15T21:52:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "I've downloaded everything i need, thank you @milljm .  It'd be appreciated if you could keep the AWS going for a few more hours to give @Traiwit a chance to download.",
                          "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-618060",
                          "updatedAt": "2024-04-29T14:41:14Z",
                          "publishedAt": "2021-04-15T22:55:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "@Traiwit - i suggest you grab the following pages:\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/HardSoft/\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/ReturnMap/ (i think this is in the current doco too)\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/CTO/\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/WeakPlaneTensile/\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/WeakPlaneShear/\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/Tensile/\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/MC/\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/DP/\nhttps://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/TensorMechanicsBasics/PoroMechanics/",
                  "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-617932",
                  "updatedAt": "2024-04-29T14:41:14Z",
                  "publishedAt": "2021-04-15T22:08:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @WilkAndy thank you much appreciated! I will go through them today :)",
                          "url": "https://github.com/idaholab/moose/discussions/17614#discussioncomment-618153",
                          "updatedAt": "2024-04-29T14:41:14Z",
                          "publishedAt": "2021-04-15T23:41:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Phase Field Fracture model with shell elements?",
          "author": {
            "login": "MartimSalgado"
          },
          "bodyText": "I am modeling the fracture of a long fiber reinforced composite material and would like to use shell elements (each layer is one shell element).\nAs anything like that been done with MOOSE? I've been searching through the examples in \"combined\" for TesnorMechnics +PhaseField stuff but haven't found anything.\nIt is also unclear to me how we can choose either plane tress or plane strain, or other types of elements.\nThanks for the assistance!\nMartim",
          "url": "https://github.com/idaholab/moose/discussions/17537",
          "updatedAt": "2022-07-07T14:47:07Z",
          "publishedAt": "2021-04-07T20:05:50Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "We have not implemented phase field fracture model for shell elements.  As for now,  maybe you have to consider to use solid elements.",
                  "url": "https://github.com/idaholab/moose/discussions/17537#discussioncomment-622985",
                  "updatedAt": "2022-07-07T14:47:08Z",
                  "publishedAt": "2021-04-17T01:58:20Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Ramp Function",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "I am using the NS module to solve the transient problem of a cylinder in a flow channel. I will need to model a parabolic velocity profile at the inlet, but the velocity needs to ramp up gradually in a period of time to its steady state value. Is there a way to define a ramping function in moose?",
          "url": "https://github.com/idaholab/moose/discussions/17619",
          "updatedAt": "2021-04-16T16:50:46Z",
          "publishedAt": "2021-04-15T23:27:23Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "I was able to determine the easiest usable method was to define the following function:\n[Functions]\n[./exact_fn]\ntype = ParsedFunction\nvalue = 'if(t < 0.05, 0, 1e-4*(1.2-y)*y)'\n[../]\n[]\nIt appears to have worked well for my application.",
                  "url": "https://github.com/idaholab/moose/discussions/17619#discussioncomment-621447",
                  "updatedAt": "2021-04-16T16:50:46Z",
                  "publishedAt": "2021-04-16T16:50:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to impement plastic strain-softening with DP/MC model + quick question on dilatant angle",
          "author": {
            "login": "Traiwit"
          },
          "bodyText": "Hi MOOSE user,\nQ1\nI've just started to implement DP/MC (nonlinear) to my mine simulation.\nI'm currently trying to work on strain-softening, in theory, coh and/or friction angle should be a function of the accumulated plastic strain, is there a way to implement this with moose.\nso far I got DP/CM to work, but yet cannot implement softening. is there any suggestion?\nNote that, we do not want to use cosserat/capped model at this stage.\nQ2\nAlso another quick question regarding dilatant angle: when I implement initial_stress into the model, it gives out an error during the excavation step when I set the dilatant angle to be relatively low, for example, less than 10 degree, but the simulation works fine with it is around 20 degree. is this because the geometry is too soft and cannot handle the initial stress?\n  [./ini_xx]\n    type = ParsedFunction\n    value = '-2*9.81*2700*(1000-z)'\n  [../]\n  [./ini_yy]\n    type = ParsedFunction\n    value = '-2*9.81*2700*(1000-z)'\n  [../]\n  [./ini_zz]\n    type = ParsedFunction\n    value = '-9.81*2700*(1000-z)'\n  [../]\n\n++++++++++++++++++++++++\nChecking the derivatives\n++++++++++++++++++++++++\nDebug Parameters are as follows\nstress = \n\n\n*** ERROR ***\nThe debug parameters have the wrong size\n\n\nThank you very much.\nKind regards,\nTraiwit\n@WilkAndy",
          "url": "https://github.com/idaholab/moose/discussions/17613",
          "updatedAt": "2022-06-19T14:54:42Z",
          "publishedAt": "2021-04-15T04:51:15Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Well done for getting plasticity to work with your model.  Honestly, with caving as well it is a very difficult numerical problem.  To implement strain softening, use another TensorMechanicsHardening object, such as TensorMechanicsHardeningCubic or Exponential or CutExponential.\nYou are almost definitely correct about the small angle not being able to support the initial stress.",
                  "url": "https://github.com/idaholab/moose/discussions/17613#discussioncomment-613438",
                  "updatedAt": "2022-06-19T14:55:31Z",
                  "publishedAt": "2021-04-15T04:58:20Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "By the way, although these hardening/softening functions haven't been documented in the \"new\" system (actually years and years old), there is documentation at, for instance\ntest/tests/mohr_coulomb/hard_cubic.xlsx\ntest/tests/mohr_coulomb/hard1_2.xlsx\nand other \".xlsx\" files in the tensor_mechanics directory",
                          "url": "https://github.com/idaholab/moose/discussions/17613#discussioncomment-613493",
                          "updatedAt": "2022-06-19T14:55:31Z",
                          "publishedAt": "2021-04-15T05:25:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @WilkAndy,\nThank you! this defs helps a lot! I really wish MOOSE documentation is friendlier for new users.\njust a quick question, what would be the value of 'internal parameter' in this case? is it plastic stain, or do I have to manually define it? I see the example defines it as shown below, not sure if it related.\n  [./mc_int_auxk]\n    type = MaterialStdVectorAux\n    index = 0\n    property = plastic_internal_parameter\n    variable = mc_int\n  [../]\n\nKind regards,\nTraiwit",
                          "url": "https://github.com/idaholab/moose/discussions/17613#discussioncomment-613512",
                          "updatedAt": "2022-06-19T14:55:31Z",
                          "publishedAt": "2021-04-15T05:37:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "It's kind of my fault that the doco is not great, sorry.  When i initially developed all these plasticity models, MOOSE was using a different doco system, and although the doco is quite good, i haven't had the time to translate it across.\nYou don't need to define the internal param - your plasticity model (MC/DP) will do that for you.   Look at, eg\n./test/tests/capped_mohr_coulomb/capped_mohr_coulomb.pdf\n\nThere is stuff on the \"old wiki\" but i can't get to that now.",
                          "url": "https://github.com/idaholab/moose/discussions/17613#discussioncomment-613533",
                          "updatedAt": "2022-06-19T14:55:33Z",
                          "publishedAt": "2021-04-15T05:50:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Thank you @WilkAndy! I kinda get the idea now, I'll let you know if it works on my mine simulation\nKind regards,\nTraiwit",
                          "url": "https://github.com/idaholab/moose/discussions/17613#discussioncomment-613590",
                          "updatedAt": "2022-07-07T12:12:48Z",
                          "publishedAt": "2021-04-15T06:13:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @WilkAndy, softening can be added to my simulation with no problem.\nI have a quick question here: what is 'plastic_internal_parameter', how does moose calculate this parameter, I guess it's associated with plastic_strain, but couldn't find its definition anywhere.\nnot sure if it's the 'increment in total strain' from the docco from oldwiki (https://ec2-18-237-134-137.us-west-2.compute.amazonaws.com/wiki/PhysicsModules/TensorMechanics/ReturnMap/)\nKind regards,\nTraiwit",
                          "url": "https://github.com/idaholab/moose/discussions/17613#discussioncomment-618652",
                          "updatedAt": "2022-07-07T12:12:48Z",
                          "publishedAt": "2021-04-16T04:19:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Generally, the \"plastic_internal_parameter\" is called q in the documentation.  For instance, about halfway down the MohrCoulomb doco you can see\nThe hardening law is defined through\nh = \u22121 . so that q = qold + \u03b3, so that q is the accumulated sum of \u03b3 over all \"time steps\".\n\nThe general case is written about 1/3rd of the way down the 2nd page of \"Plasticity and the Return-Mapping Algorithm\":\nthe increment in plastic strain is defined to be\npN\u03b1\u03b1 \u03b5 \u0307 = \u2211 \u03b3 r . ij ij\n\u03b1=1 This is the flow rule for plastic strain.  Similarly, the increment in the internal variables is\nN\u03b1\u03b1 q \u0307 = \u2212 \u2211 \u03b3 h .\naa \u03b1=1\nThese are the flow rules for the internal parameters.\n\n(the fonts are screwed up here - you can see the original on the webpage).\nSo, to figure out how an \"internal variable\" increases at a timestep, you use \"h\", and that relates the increase to \"gamma\".  In the MC case, \\dot{q} = gamma.  Then, to figure out \"gamma\", you use the flow rule.  In the MC case this is epsilon_plastic = gamma * df/dsigma = \\dot{q} * df/dsigma.   This gives physical meaning to the term \"plastic strain\".  In the MC case, df/dsigma is a horrible function that you can work out using the \"Identities\" webpage, but the \"internal variable\" is just telling you the magnitude of this plastic strain.\nRoughly speaking, for MC, the size of the plastic strain and hence the \"internal variable\" is just what you'd intuitively think of as the plastic shear strain.",
                          "url": "https://github.com/idaholab/moose/discussions/17613#discussioncomment-618860",
                          "updatedAt": "2022-07-07T12:12:48Z",
                          "publishedAt": "2021-04-16T06:03:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "perfect! That makes sense!\nThanks again @WilkAndy\nmy next step would be either adding discontinuity (fault) into the model OR moving to explicit method to improve the computation time (we try to replicate Abaqus explicit solver for mining simulation)",
                          "url": "https://github.com/idaholab/moose/discussions/17613#discussioncomment-618998",
                          "updatedAt": "2022-07-07T12:12:50Z",
                          "publishedAt": "2021-04-16T06:58:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "unused options?",
          "author": {
            "login": "dealmeidavf"
          },
          "bodyText": "Hello,\nWould anyone know what this warning is about? The input.hit file has not changed but I did update and recompile MOOSE completely.\n\nWARNING! There are options you set that were not used!\nWARNING! could be spelling mistake, etc!\nThere is one unused database option. It is:\nOption left: name:-i value: engy5310p1/input.hit\n\nThere is also this:\n\nThe .pvtu extension should be used when writing VTK files in libMesh.\n\nwhich I do not know how to turn off.\nInputs appreciated.\nThanks,\nValmor",
          "url": "https://github.com/idaholab/moose/discussions/17571",
          "updatedAt": "2023-11-03T11:01:24Z",
          "publishedAt": "2021-04-11T20:33:49Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "What command are you running?",
                  "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-600248",
                  "updatedAt": "2023-11-03T11:01:30Z",
                  "publishedAt": "2021-04-12T14:27:40Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dealmeidavf"
                          },
                          "bodyText": "moose-executable -i input.hit\nFramework Information:\nMOOSE Version:           git commit 52562be492 on 2021-04-09\nLibMesh Version:         27141d18f3137f77e33cdb3d565fd38ebfbfc46f\nPETSc Version:           3.15.0\nSLEPc Version:           3.14.2\nCurrent Time:            Mon Apr 12 10:05:24 2021\nExecutable Timestamp:    Sun Apr 11 14:44:08 2021\n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   \n    Total:                 5876\n    Local:                 5876\n  Elems:                   \n    Total:                 5625\n    Local:                 5625\n  Num Subdomains:          1\n  Num Partitions:          1\n\nNonlinear System:\n  Num DOFs:                5876\n  Num Local DOFs:          5876\n  Variables:               \"u\" \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                22500\n  Num Local DOFs:          22500\n  Variables:               \"diffFluxU\" { \"diffFluxU_x\" \"diffFluxU_y\" } \n  Finite Element Types:    \"MONOMIAL_VEC\" \"MONOMIAL\" \n  Approximation Orders:    \"CONSTANT\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Steady\n  Solver Mode:             Preconditioned JFNK\n  PETSc Preconditioner:    hypre boomeramg \n\n\nPostprocessor Values:\n+----------------+----------------+\n| time           | bulk-energy    |\n+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+\n\n 0 Nonlinear |R| = 1.042455e+05\n      0 Linear |R| = 1.042455e+05\n      1 Linear |R| = 1.989452e+03\n      2 Linear |R| = 5.869162e+01\n      3 Linear |R| = 1.187599e+00\n      4 Linear |R| = 4.156166e-02\n 1 Nonlinear |R| = 7.129880e-01\n      0 Linear |R| = 7.129880e-01\n      1 Linear |R| = 4.575783e-03\n      2 Linear |R| = 1.632349e-04\n      3 Linear |R| = 4.449145e-06\n 2 Nonlinear |R| = 1.366984e-05\n Solve Converged!\n\nPostprocessor Values:\n+----------------+----------------+\n| time           | bulk-energy    |\n+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |\n|   1.000000e+00 |  -3.395251e+10 |\n+----------------+----------------+\n\nThe .pvtu extension should be used when writing VTK files in libMesh.\nFINAL:\n\nPostprocessor Values:\n+----------------+----------------+\n| time           | bulk-energy    |\n+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |\n|   1.000000e+00 |  -3.395251e+10 |\n|   2.000000e+00 |  -3.395251e+10 |\n+----------------+----------------+\n\nWARNING! There are options you set that were not used!\nWARNING! could be spelling mistake, etc!\nThere is one unused database option. It is:\nOption left: name:-i value: engy5310p1/input.hit",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-600514",
                          "updatedAt": "2023-11-03T11:01:32Z",
                          "publishedAt": "2021-04-12T15:11:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "I am guessing that in this input file you have some options being passed to PETSc that at not correct.",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-601763",
                          "updatedAt": "2023-11-03T11:01:43Z",
                          "publishedAt": "2021-04-12T19:30:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dealmeidavf"
                          },
                          "bodyText": "Just about anything I run gives me that warning...\n->  ./engy5310p1-opt --check-input -i input.hit\n\nSyntax OK\nWARNING! There are options you set that were not used!\nWARNING! could be spelling mistake, etc!\nThere are 2 unused database options. They are:\nOption left: name:--check-input (no value)\nOption left: name:-i value: input.hit\n\nThe solver section is:\n[Executioner]\n  type = Steady\n  solve_type = 'PJFNK'\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-602041",
                          "updatedAt": "2023-11-03T11:01:44Z",
                          "publishedAt": "2021-04-12T20:30:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "Try naming the file to \"input.i\", perhaps we are not expecting .hit.",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-602066",
                          "updatedAt": "2023-11-03T11:01:47Z",
                          "publishedAt": "2021-04-12T20:36:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dealmeidavf"
                          },
                          "bodyText": "I get the same output.\nI don't seem to find the warnings in the MOOSE framework source code.\nThanks.",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-613411",
                          "updatedAt": "2023-11-03T11:01:30Z",
                          "publishedAt": "2021-04-15T04:44:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "You are right, @dealmeidavf : this warning does not come from MOOSE or libmesh.  Perhaps it comes from your VTK writer?",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-614231",
                          "updatedAt": "2023-11-03T11:01:30Z",
                          "publishedAt": "2021-04-15T08:51:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "I think it is coming from PETSc, but I am not sure why.",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-616191",
                          "updatedAt": "2023-11-03T11:01:30Z",
                          "publishedAt": "2021-04-15T15:26:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "permcody"
                          },
                          "bodyText": "I believe you have your PETSc compiled in debug mode where this check is automatically enabled. You can safely ignore it.",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-617943",
                          "updatedAt": "2023-11-03T11:01:57Z",
                          "publishedAt": "2021-04-15T22:12:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dealmeidavf"
                          },
                          "bodyText": "@permcody got it. I did recompile PETSc with the debug option enabled on my recent MOOSE upgrade.\nThank you all for solving this mystery.\nValmor",
                          "url": "https://github.com/idaholab/moose/discussions/17571#discussioncomment-618689",
                          "updatedAt": "2023-11-03T11:01:57Z",
                          "publishedAt": "2021-04-16T04:41:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "No such file or directory",
          "author": {
            "login": "kwarteng10"
          },
          "bodyText": "Hi, I got MOOSE installed and i tried creating an application with the command: cd ~/projects\nHowever, i got an error message saying: bash: cd: /root/projects: No such file or directory\nI checked the MOOSE folder and there is a file named projects\nAny help as to how to get this solved?\nThank you",
          "url": "https://github.com/idaholab/moose/discussions/17611",
          "updatedAt": "2022-08-03T21:39:38Z",
          "publishedAt": "2021-04-15T02:54:50Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\ncd ~/projects means change directory to projects in the home (~) directory.\nExcept you created the projects directory in the moose directory instead of the home directory.\nYou could restart the tutorial from the beginning to correct that.\nWe recommend the directory structure to be something like:\n(moose) guillaume@ubuntu1:~/projects$ pwd\n/home/guillaume/projects\n(moose) guillaume@ubuntu1:~/projects$ ll\ntotal 136\ndrwxrwxr-x 18 guillaume guillaume  4096 Apr 13 18:54 ./\ndrwxr-xr-x 29 guillaume guillaume  4096 Apr 14 22:47 ../\ndrwxrwxr-x 20 guillaume guillaume  4096 Apr 13 19:03 moose/\ndrwxrwxr-x 20 guillaume guillaume  4096 Apr 13 19:03 your_application/\n\nwith moose and your application in the projects folder under the home directory.\nThis is not a moose issue, you will find more help on linux help forums.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/17611#discussioncomment-616307",
                  "updatedAt": "2022-08-03T21:39:48Z",
                  "publishedAt": "2021-04-15T15:50:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "friedmud"
                  },
                  "bodyText": "There seems to be a bigger issue than that... @kwarteng10 are you using the root user?  It's really not a good idea.  I would suggest adding a \"regular\" user and logging in with that.",
                  "url": "https://github.com/idaholab/moose/discussions/17611#discussioncomment-616330",
                  "updatedAt": "2022-08-03T21:40:17Z",
                  "publishedAt": "2021-04-15T15:54:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "kwarteng10"
                          },
                          "bodyText": "How do I add a regular user\nSorry I am new to Ubuntu, so I seem to be lost",
                          "url": "https://github.com/idaholab/moose/discussions/17611#discussioncomment-616471",
                          "updatedAt": "2022-08-03T21:40:18Z",
                          "publishedAt": "2021-04-15T16:22:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "kwarteng10"
                  },
                  "bodyText": "I am running ubuntu on windows sir\n\u2026\nOn Thu, 15 Apr 2021 at 23:54, Derek Gaston ***@***.***> wrote:\n There seems to be a bigger issue than that... @kwarteng10\n <https://github.com/kwarteng10> are you using the root user? It's really\n not a good idea. I would suggest adding a \"regular\" user and logging in\n with that.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#17611 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AORERKHJGLZ3QCM5ZSWDCKDTI4D5FANCNFSM426RZLBA>\n .",
                  "url": "https://github.com/idaholab/moose/discussions/17611#discussioncomment-616425",
                  "updatedAt": "2022-08-03T21:40:19Z",
                  "publishedAt": "2021-04-15T16:15:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "kwarteng10"
                  },
                  "bodyText": "You mean I am running from a wrong directory?\n\u2026\nOn Thu, 15 Apr 2021 at 23:50, Guillaume Giudicelli ***@***.***> wrote:\n Hello\n\n cd ~/projects means change directory to projects in the home (~)\n directory.\n Except you created the projects directory in the moose directory instead\n of the home directory.\n\n You could restart the tutorial from the beginning to correct that.\n We recommend the directory structure to be something like:\n\n (moose) ***@***.***:~/projects$ pwd\n /home/guillaume/projects\n (moose) ***@***.***:~/projects$ ll\n total 136\n drwxrwxr-x 18 guillaume guillaume  4096 Apr 13 18:54 ./\n drwxr-xr-x 29 guillaume guillaume  4096 Apr 14 22:47 ../\n drwxrwxr-x 20 guillaume guillaume  4096 Apr 13 19:03 moose/\n drwxrwxr-x 20 guillaume guillaume  4096 Apr 13 19:03 your_application/\n\n with moose and your application in the projects folder under the home\n directory.\n\n This is not a moose issue, you will find more help on linux help forums.\n\n Guillaume\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#17611 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AORERKGCWGK3F4GZDTK3E6TTI4DNZANCNFSM426RZLBA>\n .",
                  "url": "https://github.com/idaholab/moose/discussions/17611#discussioncomment-616454",
                  "updatedAt": "2022-08-03T21:40:26Z",
                  "publishedAt": "2021-04-15T16:20:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "kwarteng10"
                          },
                          "bodyText": "I got it now\nIt is working just fine",
                          "url": "https://github.com/idaholab/moose/discussions/17611#discussioncomment-616667",
                          "updatedAt": "2022-08-03T21:40:27Z",
                          "publishedAt": "2021-04-15T16:51:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "About --recover option",
          "author": {
            "login": "ykvishal"
          },
          "bodyText": "I am having 2 issues with --recovery option:\n\n--recover option works nicely from Time-step=2  (ie recovering and restarting simulation with Time-step=1 data) onward. But, it does not work for Time-step=1 (ie restarting simulation with Time-step=0 data).  It gives me following error:\n\n\n*** ERROR ***\nInternal error in Transient executioner: _t_step is equal to 0 while recovering in init().\n\nI think that this is coming from Transient.C\nif (_app.isRecovering()) // Recover case\n  {\n    if (_t_step == 0)\n      mooseError(\"Internal error in Transient executioner: _t_step is equal to 0 while recovering \"\n                 \"in init().\");\n\n    _dt_old = _dt;\n  }\n\nFor my large scale grain growth simulations, it takes several hours (with 560 cores) to reach to Time-step=0. I am hoping that there will be some solution to this issue. Otherwise, I will to have repeat everything again for several hours. I tried to use --restart but it repeats most of the steps from initialization.\n\nI am using Nemesis to write output after every 20 time-steps. Due to some issue, I need to restart simulation many times and I use --recover option to restart simulation. And, nemesis does not append the previous nemesis output files and writes new output over old data. I don't have any issue with csv output.\n\nIf you have any suggestions then please let me know. Thank you.",
          "url": "https://github.com/idaholab/moose/discussions/17595",
          "updatedAt": "2022-06-14T02:38:43Z",
          "publishedAt": "2021-04-13T21:19:00Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSo you are trying to recover after just the initialization? Or after the first solve?\nRegarding your second issue, I m not sure I understand it very well.\nIf you want to have a nemesis file for each restart attempt, you can use the append_date option to keep the old ones.\nIf you want to examine multiple time steps in a single file, nemesis files should already contain the outputs at each time step.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/17595#discussioncomment-610642",
                  "updatedAt": "2022-06-14T02:40:56Z",
                  "publishedAt": "2021-04-14T15:20:34Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "Hi Guillaume,\nThank you for your response.\nSo you are trying to recover after just the initialization? \nYes, just after initialization. I am trying to run a 3D grain growth simulations with 10K-20K grains. I managed to run a 3D simulations with 6K grains. But, data does not look good as mesh is not that refined. So I increased mesh size and I am also using adaptivity option. It takes almost 28 hrs to reach to initialization step and it fails for Time-step =1 calculation due to memory issue. So I want to use recover option for same number of cores and increase memory using pmem option. However, this is not possible with --recover option. I have to go through 28 hrs of initialization step every time if I change something.\nIf you want to examine multiple time steps in a single file, nemesis files should already contain the outputs at each time step.\nYes, I want to do write and append after every 20 interval. But, somehow nemesis with --recover option rewrites on previous output files. Without --recover option, I don't have this issue. My nemesis block is like this\n\n[./nemesis]\ntype = Nemesis\ninterval = 20\n[../]\n\nThank you very much.\nVishal",
                          "url": "https://github.com/idaholab/moose/discussions/17595#discussioncomment-611044",
                          "updatedAt": "2022-06-14T02:40:58Z",
                          "publishedAt": "2021-04-14T16:47:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok thanks for making these two issues clear.\nI don't think anyone is planning to add these features to --recover right now. You can create a feature request as a separate github Issue for each.\nI suspect both would not be too much work if you want to add the capability yourself. We would gladly welcome a PR.",
                          "url": "https://github.com/idaholab/moose/discussions/17595#discussioncomment-612533",
                          "updatedAt": "2022-06-14T02:41:06Z",
                          "publishedAt": "2021-04-14T22:16:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "Thank you  @GiudGiud . Following you suggestions, I already fixed 1st problem and I figured out solution for 2nd issue. I will do more testing and if everything works then I will also follow your last suggestion.",
                          "url": "https://github.com/idaholab/moose/discussions/17595#discussioncomment-615020",
                          "updatedAt": "2022-06-14T02:41:08Z",
                          "publishedAt": "2021-04-15T11:51:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "J2 plastic simulation problem",
          "author": {
            "login": "PengWei97"
          },
          "bodyText": "Dear MOOSE experts,\nI have recently been studying the j2 plasticity model in tensor mechanics modulus. Based on the input file tensor_mechanics_j2plasticity.i, I have some questions and hope to get your guidance and corrections.\nThe following is my understanding and confusion:\n\nKernels: What are the functions implemented?  My understanding is that in this example, the following code means to call TensorMechanicsAction to use \"StressDivergenceTensors\" to calculate the balance equation.  I don\u2019t know if I understand right?  Also, does TensorMechanicsAction need to call other kernels to complete this simulation?\n\n[Kernels] \u00a0\u00a0[./TensorMechanics] \u00a0\u00a0\u00a0\u00a0displacements\u00a0=\u00a0'x_disp\u00a0y_disp\u00a0z_disp' \u00a0\u00a0\u00a0\u00a0use_displaced_mesh\u00a0=\u00a0true \u00a0\u00a0[../] []\nFor the Materials and AuxKernels modules, my understanding is as follows. If I understand wrongly, I hope to criticize and correct them.\n\n\nMaterials: Provide strain, elastic tensor, and plastic yield strength for the kernel.\n\n\nAuxKernels: Calculate physical quantities based on the variables calculated in the kernel for post-processing\n\n\nAny suggestions or recommendations to fix these problems would be greatly appreciated.\nThanks\nWei Peng",
          "url": "https://github.com/idaholab/moose/discussions/16417",
          "updatedAt": "2022-06-10T13:20:56Z",
          "publishedAt": "2020-12-08T09:40:50Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Kernels.  Yes the most basic solid mechanics simulation will only use StressDivergenceTensors.  However, as your simulation gets more complicated, more Kernels will be needed.  For instance, if your simulation has gravity, then a Kernel (such as BodyForce) will be needed.  Or, if your simulation has dynamics, then DynamicStressDivergenceTensors will be needed.  Or, if you simulation couples with heat transfer, then Kernels for the heat equation will be needed.\nMaterials.  Yes, you've got the basic idea.  For solid mechanics simulations, the Materials compute the strain, elasticity tensor, and plastic things, such as plastic strains (for perfect plasticity, plastic yield strength is a real number user input, but for hardening/softening it will be computed by MOOSE based on the plastic strain).\nAuxKernels: yes, you've got the general idea correct.  However, for general MOOSE models, these are often used as inputs to other things such as Materials or Kernels, not just for postprocessing.",
                  "url": "https://github.com/idaholab/moose/discussions/16417#discussioncomment-163047",
                  "updatedAt": "2022-06-10T13:20:59Z",
                  "publishedAt": "2020-12-08T10:46:43Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Thank you for your quick reply, I got it.",
                          "url": "https://github.com/idaholab/moose/discussions/16417#discussioncomment-163162",
                          "updatedAt": "2022-06-10T13:21:00Z",
                          "publishedAt": "2020-12-08T13:12:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @WilkAndy,\nI'm trying to work on strain-softening, in theory, coh and/or friction angle should be a function of the accumulated plastic strain, is there a way to implement this with moose.\nso far I got DP/CM to work, but yet cannot implement softening.\n\n[UserObjects]\n  [./mc_coh]\n    type = TensorMechanicsHardeningConstant\n    value = 5e6\n  [../]\n  [./mc_phi]\n    type = TensorMechanicsHardeningConstant\n    value = 25\n    convert_to_radians = true\n  [../]\n  [./mc_psi]\n    type = TensorMechanicsHardeningConstant\n    value = 20\n    convert_to_radians = true\n  [../]\n\n ####### Mohr Coulomb\n [./mc]\n   type = TensorMechanicsPlasticMohrCoulomb\n   cohesion = mc_coh\n   friction_angle = mc_phi\n   dilation_angle = mc_psi\n   yield_function_tolerance = 1E-3\n   internal_constraint_tolerance = 1E-4\n   mc_tip_smoother = 5e5\n   mc_edge_smoother = 20\n [../]\n[]\n\n\nKind regards,\nTraiwit",
                          "url": "https://github.com/idaholab/moose/discussions/16417#discussioncomment-613358",
                          "updatedAt": "2022-06-10T13:21:00Z",
                          "publishedAt": "2021-04-15T04:16:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Hi @Traiwit - i suggest creating a new Discussion and i'll answer there.",
                          "url": "https://github.com/idaholab/moose/discussions/16417#discussioncomment-613401",
                          "updatedAt": "2022-06-10T13:21:09Z",
                          "publishedAt": "2021-04-15T04:39:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[Cluster][Update moose][Error in app]",
          "author": {
            "login": "coskrrb2002"
          },
          "bodyText": "Dear moose users,\nI am using a linux cluster and recently I have updated a moose in the cluster.\nBut, eventually it shows an error while I am compiling my app after updating the moose.\nI updated the moose in the following steps.\nI updated both libmesh and petsc.\nThen, I updated moose with git fetch.\nAfter that I recompile my app with\nmake clobberall\nmake -j20\nBut in make command, I got the following error.\n\nI guess this error is related with library...\nBut I don't know which library should I have to update.\nKind regards",
          "url": "https://github.com/idaholab/moose/discussions/17568",
          "updatedAt": "2022-06-22T06:50:38Z",
          "publishedAt": "2021-04-11T04:24:02Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDid you only run git fetch to update moose? fetching isnt enough, you need to git pull as well.\nAlternatively you can check out the latest commit with git checkout origin master.\nJust to be sure, which moose commit are you currently using?\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-595372",
                  "updatedAt": "2022-06-22T06:50:51Z",
                  "publishedAt": "2021-04-11T04:58:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "coskrrb2002"
                          },
                          "bodyText": "I did the git pull as well, but it didn't work.\nI did git checkout origin master and got the following result:\n\nIts very ridiculous, cause in my personal computer, my app works fine with moose after the updating.",
                          "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-598015",
                          "updatedAt": "2022-06-22T06:51:02Z",
                          "publishedAt": "2021-04-12T05:04:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok this is the correct commit for the latest moose.\nThe git pull did not work, or you got the error pasted initially with git fetch/pull ?\nTagging @loganharbour, he will know what's up with this error in building the ray tracing module",
                          "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-598082",
                          "updatedAt": "2022-06-22T06:51:02Z",
                          "publishedAt": "2021-04-12T05:36:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "coskrrb2002"
                          },
                          "bodyText": "Thank you,\ngit pull said everything is up to date.\nSo, I guess my moose is the lastest version one.\nExcept the ray tracing module, other modules works fine.",
                          "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-598101",
                          "updatedAt": "2022-06-22T06:51:03Z",
                          "publishedAt": "2021-04-12T05:41:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "@loganharbour asked me to take a look, and at first glance it looks like somehow C++14-specific code is in that module, but you're trying to compile using a C++11-only compiler.  (a ten year old standard, but one which we're still trying to support! no idea how our CI let C++14-requiring code in!)\nHe's now trying to rewrite that code in a C++11-compatible way, which I hope will be possible but which might take some serious work, so in the meantime you might see if you can upgrade your compiler as a workaround?  And if you can't easily get your hands on a compiler to handle this, then I'd love to know about it: I was hoping to update the libMesh C++ requirements, possibly jumping straight to C++17, late this year, but I can hit the brakes on that plan if there are still a number of downstream users stuck with too-old compilers.\nBTW, in the future, could you paste compiler error/warning messages\nlike this,\n\nwhich in Github markdown can be formatted\n``` \nlike this,\n``` \n\nrather than using screenshots?  Screenshots don't make it into search engines and so aren't as helpful if future users hit similar problems.",
                          "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-600418",
                          "updatedAt": "2022-10-21T11:51:01Z",
                          "publishedAt": "2021-04-12T14:52:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "This issue will be resolved in #17582. See an explanation in #17568 (reply in thread).\nHowever, we've discussed in the past that we loosely require c++14. #17581 enforces that requirement - we'll see if we can get it in or not.\n@coskrrb2002 I'm happy to help you with getting MOOSE compiling in the interim, before either of the PRs that I mentioned above ar merged. We're in the middle of some system downtime, so they won't be merged quickly. Are you using conda for MOOSE, or did you compile libMesh on your own using scripts/update_and_rebuild_libmesh.sh?",
                  "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-601085",
                  "updatedAt": "2022-06-22T06:51:13Z",
                  "publishedAt": "2021-04-12T16:57:45Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "coskrrb2002"
                          },
                          "bodyText": "Dear @loganharbour,\nI am not using conda for MOOSE in my cluster. So, I just compiled libMesh by ./scripts/update_and_rebuild_libmesh.sh\nThank you for your explanation!",
                          "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-602985",
                          "updatedAt": "2022-06-22T06:51:13Z",
                          "publishedAt": "2021-04-13T03:20:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "So we need C++14.  Just for our education, can you explain (or point to doco/stackexchange) the relevant change in C++14 ?",
                  "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-602301",
                  "updatedAt": "2022-06-22T06:51:14Z",
                  "publishedAt": "2021-04-12T21:28:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "Take a look at the restrictions on constexpr functions in the bullet points tagged \"until C++14\" about a quarter of the way down this page.  You basically only get to have a single statement, your return statement; any function that you can't write as a one-liner can't be constexpr.\nThat said, I'm pretty sure the capability here can be written in terms of constexpr one-liners, so I wouldn't say we \"need\" C++14 so much as we \"really really want\" C++14; the rewrite won't be impossible, it'll just be a big pain in the neck.\nPlus, this is just the latest addition to the list of reasons users have had for wanting to upgrade.  INL folks started asking me about support last year.  I've been using C++14 in a few small projects since before it was an official standard; for anybody trying to use expression template classes there's just no decent substitute for C++14-or-better auto return type deduction.",
                          "url": "https://github.com/idaholab/moose/discussions/17568#discussioncomment-611357",
                          "updatedAt": "2022-06-22T06:51:41Z",
                          "publishedAt": "2021-04-14T18:03:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}