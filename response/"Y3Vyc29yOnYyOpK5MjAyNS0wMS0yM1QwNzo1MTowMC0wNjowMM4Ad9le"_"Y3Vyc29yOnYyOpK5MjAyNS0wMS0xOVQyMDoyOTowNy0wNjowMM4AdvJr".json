{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNS0wMS0xOVQyMDoyOTowNy0wNjowMM4AdvJr"
    },
    "edges": [
      {
        "node": {
          "title": "General Implementation of Generalized-alpha time integration method",
          "author": {
            "login": "Silverwing747"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello Everyone,\nI have recently attempted to implement the Generalized-alpha time integration method for a first-order system (reference: DOI: 10.1016/S0045-7825(00)00203-6).\nI noticed that MOOSE already includes the HHT-alpha method for solid mechanics. However, this implementation is not general and requires modifications to the Kernel object, which is not ideal for broader applications.\nTo address this, I am trying to develop a more general version of these alpha-methods in MOOSE. The implementation is structured as follows:\n\nFor a general implementation, I believe the presolve and postsolve functions from TimeIntegrator.h need to be utilized. Specifically:\n\u2022\tIn presolve, the alpha-stage vector can be computed and passed to the solver.\n\u2022\tIn postsolve, the actual solution (_solution) can be updated using the alpha-stage vector.\nI have two questions regarding this approach:\n1.\tCan the _solution be updated in the TimeIntegrator object? I noticed that it is cast as const, const NumericVector<Number> * const & _solution;. What is the reasoning behind this design choice?\n2.\tAre there any existing examples of how to utilize the presolve and postsolve functions? I imagine the implementation might be similar to that in PETSc, but I couldn\u2019t find any examples in MOOSE.\nThank you for your help!",
          "url": "https://github.com/idaholab/moose/discussions/29683",
          "updatedAt": "2025-01-22T21:47:03Z",
          "publishedAt": "2025-01-13T15:39:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\n\nCan the _solution be updated in the TimeIntegrator object? I noticed that it is cast as const, const NumericVector * const & _solution;. What is the reasoning behind this design choice?\n\n\nThe original idea for modifying the solution would be to do in a Predictor object (before taking the step), or a Corrector user object (after)\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/29683#discussioncomment-11821779",
                  "updatedAt": "2025-01-13T16:03:09Z",
                  "publishedAt": "2025-01-13T16:03:08Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Silverwing747"
                          },
                          "bodyText": "Hello Guillaume,\nI have implemented generalized alpha under my NSCH code. The implementation uses presolve and postsolve functions in the timeintegrator object, instead of using the predictor and corrector object you mentioned. The convergence test shows my implementation is second order. However, since I am very new to MOOSE framework, I am not completely sure if this is the right way to go. Let me know if you have any comments.",
                          "url": "https://github.com/idaholab/moose/discussions/29683#discussioncomment-11922140",
                          "updatedAt": "2025-01-22T21:44:40Z",
                          "publishedAt": "2025-01-22T21:44:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Checking the order of convergence is a great verification step.\nNext you should verify against analytical solutions if there are any available for your problem.",
                          "url": "https://github.com/idaholab/moose/discussions/29683#discussioncomment-11922161",
                          "updatedAt": "2025-01-22T21:47:04Z",
                          "publishedAt": "2025-01-22T21:47:03Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "how to model inlet and outlet in a flow channel",
          "author": {
            "login": "waaizhaq"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A Navier Stokes is the most appropriate category for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (avoid screenshots if possible, triple back quotes before/after pasted text, etc)\n\nQuestion\nHi, I'm trying to model natural convection flow between two heated walls (representing heated fuel rods) entering from the bottom (inlet) and exiting out the top (outlet). But whenever I run the input, it stops converging after a few timesteps. By viewing the output in Paraview, it seems that the flow turns back around near the top boundary. This would also explain why my fluid temperatures are so high when my simulation stops converging (~1e3 Kelvin).\nI'm not sure if there's a specific way to set an inlet and outlet channel, but I just have a DirichletBC for the bottom boundary and 0 flow initial condition since it's natural convection.\nInput:\nbundle_flow.txt\nAdditional information\nMesh size and type:\nReynolds number:\nDiscretization (finite element CG/DG, finite volume, etc):\nModels (turbulence, porous media, etc):\nSolver method (fully coupled, segregated, multiapps, etc):\nBase input you started from:",
          "url": "https://github.com/idaholab/moose/discussions/29715",
          "updatedAt": "2025-01-22T17:47:45Z",
          "publishedAt": "2025-01-20T22:42:49Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\n\n0 flow initial condition\n\nyou'll want a small initial velocity to avoid the v = 0 point in the energy advection equation\n\nDirichletBC for the bottom boundary\n\nyou ll want to use noslip or free-slip bcs for velocity and dirichlet or heat flux for temperature",
                  "url": "https://github.com/idaholab/moose/discussions/29715#discussioncomment-11919187",
                  "updatedAt": "2025-01-22T16:52:07Z",
                  "publishedAt": "2025-01-22T16:52:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "waaizhaq"
                          },
                          "bodyText": "I see, I was actually able to resolve the issue by using a MomentumOutflowBC at the exit, heat fluxes and no-slip bcs at the left and right walls, and temperature DirichletBC at the inlet. I forgot to include no-slip at the inlet.\nI also didn't realize that including a small initial velocity would be a factor. Do you think 1e-4 is a good value?",
                          "url": "https://github.com/idaholab/moose/discussions/29715#discussioncomment-11919438",
                          "updatedAt": "2025-01-22T17:12:18Z",
                          "publishedAt": "2025-01-22T17:12:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I forgot to include no-slip at the inlet.\n\ninlet should not be no-slip. There are inlet BCs.\n1e-4 is fine. we use 1e-10",
                          "url": "https://github.com/idaholab/moose/discussions/29715#discussioncomment-11919555",
                          "updatedAt": "2025-01-22T17:23:23Z",
                          "publishedAt": "2025-01-22T17:23:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "waaizhaq"
                          },
                          "bodyText": "Gotcha, like an inlet velocity BC?",
                          "url": "https://github.com/idaholab/moose/discussions/29715#discussioncomment-11919644",
                          "updatedAt": "2025-01-22T17:32:36Z",
                          "publishedAt": "2025-01-22T17:32:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "for example, if you know the inlet velocity",
                          "url": "https://github.com/idaholab/moose/discussions/29715#discussioncomment-11919768",
                          "updatedAt": "2025-01-22T17:44:29Z",
                          "publishedAt": "2025-01-22T17:44:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "waaizhaq"
                          },
                          "bodyText": "Got it, thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/29715#discussioncomment-11919793",
                          "updatedAt": "2025-01-22T17:47:45Z",
                          "publishedAt": "2025-01-22T17:47:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Mesh local refinement and restart",
          "author": {
            "login": "PEI0214"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello.\nI carried out local refinement of some meshes in the calculation.\n[Mesh]\n  [mesh]\n    type = FileMeshGenerator\n    file = mesh.msh\n  []\n\n  [refine]\n    type = RefineBlockGenerator\n    input = mesh\n    block = '118  158'\n    refinement = '1  1'\n  []\n\n  add_subdomain_ids = '${new_domain_blocks}'\n[]\n\nHowever, when I used restart to continue the calculation. The extra constraints on hanging nodes seem to disappear. Is there any good solution?",
          "url": "https://github.com/idaholab/moose/discussions/29726",
          "updatedAt": "2025-01-22T16:52:31Z",
          "publishedAt": "2025-01-22T15:03:19Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "when I used restart to continue the calculation.\n\nhow did you set up the restart? It needs to be with checkpoints not exodus",
                  "url": "https://github.com/idaholab/moose/discussions/29726#discussioncomment-11918047",
                  "updatedAt": "2025-01-22T15:14:41Z",
                  "publishedAt": "2025-01-22T15:14:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "PEI0214"
                          },
                          "bodyText": "I use the checkpoint to restart.\n[Problem]\n  kernel_coverage_check = false\n  material_coverage_check = false\n  boundary_restricted_node_integrity_check = false\n\n  restart_file_base = test1_out_cp/LATEST\n  force_restart = true\n  allow_initial_conditions_with_restart = true\n[]\n\n\n[Mesh]\n  file = test1_out_cp/0032-mesh.cpa.gz\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/29726#discussioncomment-11918152",
                          "updatedAt": "2025-01-22T15:23:07Z",
                          "publishedAt": "2025-01-22T15:23:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PEI0214"
                          },
                          "bodyText": "Is that right? Do you know how to solve this problem?",
                          "url": "https://github.com/idaholab/moose/discussions/29726#discussioncomment-11918753",
                          "updatedAt": "2025-01-22T16:12:48Z",
                          "publishedAt": "2025-01-22T16:12:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this should work yes. Let's make a minimal example showing the problem",
                          "url": "https://github.com/idaholab/moose/discussions/29726#discussioncomment-11919196",
                          "updatedAt": "2025-01-22T16:52:32Z",
                          "publishedAt": "2025-01-22T16:52:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "CFD simulation of a converging diverging nozzle using argon",
          "author": {
            "login": "arsadCFD"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHi\nI am new beginner in MOOSE and looking for help. Can somebody help me in the input file setup for simulation argon flow in cd nozzle. I generated .msh file and struggling to make input file. Can somebody give me input file?",
          "url": "https://github.com/idaholab/moose/discussions/29692",
          "updatedAt": "2025-01-22T14:15:16Z",
          "publishedAt": "2025-01-15T15:30:28Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou'll want to follow the documentation in the Navier Stokes module.\nhttps://mooseframework.inl.gov/modules/navier_stokes/index.html\nThere are examples in the modules/navier_stokes/examples folder, and many of the tests in modules/navier_stokes/test/tests/finite_volume are helpful as well\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/29692#discussioncomment-11849248",
                  "updatedAt": "2025-01-16T01:12:24Z",
                  "publishedAt": "2025-01-16T01:12:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "arsadCFD"
                          },
                          "bodyText": "Hi Guillaume\nThank you so much. /home/arsad/projects/moose/modules/navier_stokes/test/tests/finite_volume/cns\nI found one folder 'stagnation_inlet' and simulated cd nozzle. But, I'm still not sure what gas is being simulated as the input file doesn't provide any information about it.\n\nI generated my own cd nozzle using gmsh with the file name 'nozzle.msh' with the boundaries labeled as INFLOW,OUTFLOW and WALL. This geometry shows lots of error even after correcting BCs section.\n\nhere is the input file\nstagnation_pressure = 101325.0\nstagnation_temperature = 300.0\n\n[GlobalParams]\n  fp = fp\n[]\n\n[Debug]\n   show_material_props = true\n[]\n\n[Mesh]\n  [file]\n    type = FileMeshGenerator\n    file = nozzle.msh\n  []\n[]\n\n[FluidProperties]\n  [fp]\n    type = IdealGasFluidProperties\n    gamma = 1.4\n    molar_mass = 0.02897024320557491\n  []\n[]\n\n[Variables]\n  [rho]\n    family = MONOMIAL\n    order = CONSTANT\n    fv = true\n    initial_condition = 0.0034\n  []\n\n  [rho_u]\n    family = MONOMIAL\n    order = CONSTANT\n    fv = true\n    initial_condition = 1e-4\n    outputs = none\n  []\n\n  [rho_v]\n    family = MONOMIAL\n    order = CONSTANT\n    fv = true\n    outputs = none\n  []\n\n  [rho_E]\n    family = MONOMIAL\n    order = CONSTANT\n    fv = true\n    initial_condition = 2.5\n  []\n[]\n\n[FVKernels]\n  # Mass conservation\n  [mass_time]\n    type = FVTimeKernel\n    variable = rho\n  []\n\n  [mass_advection]\n    type = CNSFVMassHLLC\n    variable = rho\n  []\n\n  # Momentum x conservation\n  [momentum_x_time]\n    type = FVTimeKernel\n    variable = rho_u\n  []\n\n  [momentum_x_advection]\n    type = CNSFVMomentumHLLC\n    variable = rho_u\n    momentum_component = x\n  []\n\n  # Momentum y conservation\n  [momentum_y_time]\n    type = FVTimeKernel\n    variable = rho_v\n  []\n\n  [momentum_y_advection]\n    type = CNSFVMomentumHLLC\n    variable = rho_v\n    momentum_component = y\n  []\n\n  # Fluid energy conservation\n  [fluid_energy_time]\n    type = FVTimeKernel\n    variable = rho_E\n  []\n\n  [fluid_energy_advection]\n    type = CNSFVFluidEnergyHLLC\n    variable = rho_E\n  []\n[]\n\n[FVBCs]\n  ## inflow stagnation boundaries\n  [mass_stagnation_inflow]\n    type = CNSFVHLLCMassStagnationInletBC\n    variable = rho\n    stagnation_pressure = ${stagnation_pressure}\n    stagnation_temperature = ${stagnation_temperature}\n    boundary = INFLOW\n  []\n\n  [momentum_x_stagnation_inflow]\n    type = CNSFVHLLCMomentumStagnationInletBC\n    variable = rho_u\n    momentum_component = x\n    stagnation_pressure = ${stagnation_pressure}\n    stagnation_temperature = ${stagnation_temperature}\n    boundary = INFLOW\n  []\n\n  [momentum_y_stagnation_inflow]\n    type = CNSFVHLLCMomentumStagnationInletBC\n    variable = rho_v\n    momentum_component = y\n    stagnation_pressure = ${stagnation_pressure}\n    stagnation_temperature = ${stagnation_temperature}\n    boundary = INFLOW\n  [../]\n\n  [fluid_energy_stagnation_inflow]\n    type = CNSFVHLLCFluidEnergyStagnationInletBC\n    variable = rho_E\n    stagnation_pressure = ${stagnation_pressure}\n    stagnation_temperature = ${stagnation_temperature}\n    boundary = INFLOW\n  []\n\n  ## outflow implicit conditions\n  [mass_outflow]\n    type = CNSFVHLLCMassImplicitBC\n    variable = rho\n    boundary = OUTFLOW\n  []\n\n  [momentum_x_outflow]\n    type = CNSFVHLLCMomentumImplicitBC\n    variable = rho_u\n    momentum_component = x\n    boundary = OUTFLOW\n  []\n\n  [momentum_y_outflow]\n    type = CNSFVHLLCMomentumImplicitBC\n    variable = rho_v\n    momentum_component = y\n    boundary = OUTFLOW\n  []\n\n  [fluid_energy_outflow]\n    type = CNSFVHLLCFluidEnergyImplicitBC\n    variable = rho_E\n    boundary = OUTFLOW\n  []\n\n  # wall conditions\n  [momentum_x_pressure_wall]\n    type = CNSFVMomImplicitPressureBC\n    variable = rho_u\n    momentum_component = x\n    boundary = WALL\n  []\n\n  [momentum_y_pressure_wall]\n    type = CNSFVMomImplicitPressureBC\n    variable = rho_v\n    momentum_component = y\n    boundary = WALL\n  []\n[]\n\n[AuxVariables]\n  [Ma]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [p]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [Ma_layered]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [T_fluid]\n    family = MONOMIAL\n    order = CONSTANT\n  []  \n[]\n\n[UserObjects]\n  [layered_Ma_UO]\n    type = LayeredAverage\n    variable = Ma\n    num_layers = 100\n    direction = x\n  []\n[]\n\n[AuxKernels]\n  [Ma_aux]\n    type = NSMachAux\n    variable = Ma\n    fluid_properties = fp\n    use_material_properties = true\n  []\n  [p_aux]\n    type = ADMaterialRealAux\n    variable = p\n    property = pressure\n  []\n  [Ma_layered_aux]\n    type = SpatialUserObjectAux\n    variable = Ma_layered\n    user_object = layered_Ma_UO\n  []\n  [T_fluid]\n    type = ADMaterialRealAux\n    variable = T_fluid\n    property = T_fluid\n  []  \n[]\n\n[Materials]\n  [var_mat]\n    type = ConservedVarValuesMaterial\n    rho = rho\n    rhou = rho_u\n    rhov = rho_v\n    rho_et = rho_E\n  []\n\n  [fluid_props]\n    type = GeneralFluidProps\n    porosity = 1\n    characteristic_length = 1\n  []\n\n  [sound_speed]\n    type = SoundspeedMat\n    fp = fp\n  []\n[]\n\n[Postprocessors]\n  [cfl_dt]\n    type = ADCFLTimeStepSize\n    c_names = 'sound_speed'\n    vel_names = 'speed'\n    CFL = 0.1\n  []\n\n  [outflow_Ma]\n    type = SideAverageValue\n    variable = Ma\n    boundary = OUTFLOW\n  []\n    [outflow_pressure]\n    type = SideAverageValue\n    variable = p\n    boundary = OUTFLOW\n  []\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n    petsc_options_iname = '-pc_type'\n    petsc_options_value = 'lu'\n  []\n[]\n\n[Executioner]\n  type = Transient\n  end_time = 200.0\n\n  [TimeIntegrator]\n    type = ExplicitSSPRungeKutta\n    order = 2\n  []\n  l_tol = 1e-8\n\n  [TimeStepper]\n    type = PostprocessorDT\n    postprocessor = cfl_dt\n  []\n[]\n\n[VectorPostprocessors]\n  [Ma_layered]\n    type = LineValueSampler\n    variable = Ma_layered\n    start_point = '0 0 0'\n    end_point = '10 0 0'\n    num_points = 100\n    sort_by = x\n  []\n[]\n\n[Outputs]\n  exodus = true\n[]\n\nI wanna simulate argon flow using my nozzle. plz help",
                          "url": "https://github.com/idaholab/moose/discussions/29692#discussioncomment-11903938",
                          "updatedAt": "2025-01-22T02:26:39Z",
                          "publishedAt": "2025-01-21T15:25:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So does the problem you are looking at involve significant depressurization / pressure & density changes?\nThe compressible formulation of the NS equations is a lot slower than our incompressible branch, so I just want to double check",
                          "url": "https://github.com/idaholab/moose/discussions/29692#discussioncomment-11910024",
                          "updatedAt": "2025-01-22T02:28:00Z",
                          "publishedAt": "2025-01-22T02:27:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "arsadCFD"
                  },
                  "bodyText": "Hi Guillaume\nThank you so much for the response.\nIt's a simple converging-diverging nozzle of area ratio 6.89 and overall length 7.3 inches, throat radii 0.8 inches, exit radii 2.1 inches and inlet radii 2.5 inches.Assuming isentropic flow, the exit mach no. should be 3.5 for air and 4.2 for argon and it would definitely involve significant pressure/density changes. I chose this nozzle just for validation and next step is to simulate straight cylinder and similar other geometries where the flow would be driven predominatly by pressure differences involving slight density changes/weakly compressible or incompressible flows\na) /home/arsad/projects/moose/modules/navier_stokes/test/tests/finite_volume/cns/stagnation_inlet. Using the input file shown above, I wanna simulate my own cd nozzle 'nozzle.msh' for AIR and Argon. The nozzle boundaries are labeled as INFLOW, OUTFLOW and WALL. Do I have option of simulating only half geometry (axisymmetric  nozzle). Also, I wanna impose pressure inlet 1mT and in another case flow rate inlet 10 sccm. How can I do it? The relevant tutorials didn't help.\nb) Then simulate straight cylinder for above cases.\nIf could answer both the question, that would be much appreciated!",
                  "url": "https://github.com/idaholab/moose/discussions/29692#discussioncomment-11914913",
                  "updatedAt": "2025-01-22T10:51:31Z",
                  "publishedAt": "2025-01-22T10:51:30Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Do I have option of simulating only half geometry (axisymmetric nozzle).\n\nMOOSE does support symmetric boundary conditions. If the problem is already being solved in RZ coordinates (set this in the Mesh block), you just need to have 0 flux boundary conditions.\n\n, I wanna impose pressure inlet\n\nThis is the fixed pressure BC (and liquid at rest in a tank connected to the domain)\nhttps://mooseframework.inl.gov/source/fvbcs/CNSFVHLLCMassStagnationInletBC.html\nhttps://mooseframework.inl.gov/source/fvbcs/CNSFVHLLCMomentumStagnationInletBC.html\nsame for energy\n\ncase flow rate inlet 10 sccm\n\nThis one for fixed mass flow rate\nhttps://mooseframework.inl.gov/source/fvbcs/CNSFVHLLCMassBC.html\nhttps://mooseframework.inl.gov/source/fvbcs/CNSFVHLLCMomentumBC.html\nsame for energy\n\nvb) Then simulate straight cylinder for above cases.\n\nProbably best to start with that before going to the nozzle.\n\ngenerated my own cd nozzle using gmsh with the file name 'nozzle.msh' with the boundaries labeled as INFLOW,OUTFLOW and WALL. This geometry shows lots of error even after correcting BCs section.\n\nYou ll need to sort these out.\nI think you can start by removing CNSFVMomImplicitPressureBC from the walls. I think implicit BCs are meant for outlets but I am not 100% sure",
                          "url": "https://github.com/idaholab/moose/discussions/29692#discussioncomment-11917321",
                          "updatedAt": "2025-01-22T14:15:17Z",
                          "publishedAt": "2025-01-22T14:15:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "arsadCFD"
                  },
                  "bodyText": "Here is the cd nozzle I wanna simulate for validation",
                  "url": "https://github.com/idaholab/moose/discussions/29692#discussioncomment-11915355",
                  "updatedAt": "2025-01-22T11:29:55Z",
                  "publishedAt": "2025-01-22T11:29:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "thanks.\nJust a note in case it ends up mattering,\nYou can probably generate a more regular mesh using Cubit and its sweeping algorithms, or using MOOSE with a GeneratedMeshGenerator and a ParsedNodeTransformation encoding the curve (might be tricky).",
                          "url": "https://github.com/idaholab/moose/discussions/29692#discussioncomment-11917243",
                          "updatedAt": "2025-01-22T14:08:21Z",
                          "publishedAt": "2025-01-22T14:08:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PorousFlowMassVolumetricExpansion is not working with Solid mechanics",
          "author": {
            "login": "clariu25"
          },
          "bodyText": "Hello, I'm trying to couple mechanics to a Hydraulic problem.  The model has 3 layers and I'm trying to reach the steady state before I run a reservoir simulation. I ran the TH model without any problems, but when I added the M component, it did not converge anymore. Now I reduced the problem to HM.\nCurrently, if I remove the PorousFlowMassVolumetricExpansion kernel, the simulation runs but I don't understand why or if it makes sense. As far as I understand, this kernel lumps the mass component (that is in the quadrature point) into the nodes right? And that is necessary for the computation of the Time derivatives (mass in this case) as they are evaluated in the nodes, therefore, the mass calculations might not be correct.\nCan somebody help me? Thank you very much\ndensity_overburden = 2420\n\n[Mesh]\n  allow_renumbering = true\n  [main]\n    type = FileMeshGenerator\n    file = mesh/3lyrs-PF-18km-Ldisks_sq1.msh\n  []\n[]\n\n[GlobalParams]\n  PorousFlowDictator = dictator\n  fp = the_simple_fluid\n  displacements = 'disp_x disp_y disp_z'\n[]\n\n[Variables]\n  [porepressure]\n  []\n  [disp_x]\n  []\n  [disp_y]\n  []\n  [disp_z]\n  []\n[]\n\n[ICs]\n  [Pressure]\n    type = FunctionIC\n    variable = porepressure\n    function = 'hydrostaticP'\n  []\n[]\n\n[BCs]\n  [Pore_Pressure_BC]\n    type = FunctionDirichletBC\n    variable = porepressure\n    boundary = 'Top Bottom Left Back Right Front'\n    function = 'hydrostaticP'\n  []\n  [Disp_x]\n    type = DirichletBC\n    variable = disp_x\n    boundary = 'Back Front'\n    value = 0\n  []\n  [Disp_y]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'Left Right'\n    value = 0\n  []\n  [Disp_z]\n    type = DirichletBC\n    variable = disp_z\n    boundary = 'Bottom'\n    value = 0\n  []\n  [litho_stress_zz]\n    type = Pressure\n    boundary = 'Top'\n    variable = disp_z\n    function = 'lithost_zz_BC' #Lithostatic pressure\n  []\n[]\n\n[Functions]\n  [hydrostaticP]\n    type = ParsedFunction\n    expression = '1000*9.8*(-z)+1e5'\n  []\n  [dts]\n    type = PiecewiseLinear\n    x = '0 3600 86400 864000 15768000\n          15768001 15854400 16632000 31536000'\n    y = '1 1800 43200 172800 864000\n         3600 43200 86400 864000'\n  []\n  [lithost_zz_BC]\n    type = ParsedFunction\n    expression = '${density_overburden}*9.81*(-z)'\n  []\n[]\n\n[FluidProperties]\n  [the_simple_fluid]\n    type = SimpleFluidProperties\n    bulk_modulus = 2e9\n    viscosity = 0.00026383\n    thermal_expansion = 0\n  []\n[]\n\n[Kernels]\n  ##### Hydraulics #####\n  [mass_dot]\n    type = PorousFlowFullySaturatedMassTimeDerivative\n    variable = porepressure\n  []\n  [advection]\n    type = PorousFlowFullySaturatedAdvectiveFlux\n    fluid_component = 0\n    variable = porepressure\n    gravity = '0 0 -9.81'\n  []\n  ####### Mechanics ########\n  [gravity]\n    type = Gravity\n    use_displaced_mesh = false\n    variable = disp_z\n    value = -9.81 # MPa\n    density = ${density_overburden}\n  []\n  [vol_strain_rate_water]\n    type = PorousFlowMassVolumetricExpansion\n    fluid_component = 0\n    variable = porepressure\n  []\n  [grad_stress_x]\n    type = StressDivergenceTensors\n    variable = disp_x\n    use_displaced_mesh = false\n    component = 0\n  []\n  [poro_x]\n    type = PorousFlowEffectiveStressCoupling\n    variable = disp_x\n    use_displaced_mesh = false\n    component = 0\n  []\n  [grad_stress_y]\n    type = StressDivergenceTensors\n    variable = disp_y\n    use_displaced_mesh = false\n    component = 1\n  []\n  [poro_y]\n    type = PorousFlowEffectiveStressCoupling\n    variable = disp_y\n    use_displaced_mesh = false\n    component = 1\n  []\n  [grad_stress_z]\n    type = StressDivergenceTensors\n    variable = disp_z\n    use_displaced_mesh = false\n    component = 2\n  []\n  [poro_z]\n    type = PorousFlowEffectiveStressCoupling\n    variable = disp_z\n    use_displaced_mesh = false\n    component = 2\n  []\n[]\n\n[UserObjects]\n  [dictator]\n    type = PorousFlowDictator\n    porous_flow_vars = 'porepressure disp_x disp_y disp_z'\n    number_fluid_phases = 1\n    number_fluid_components = 1\n  []\n  [fluid_mass_prod]\n    type = PorousFlowSumQuantity\n  []\n[]\n\n[Materials]\n  [undrained_density]\n    type = PorousFlowTotalGravitationalDensityFullySaturatedFromPorosity\n    rho_s = 3000 ## (por=15%, pf=1000, pb=2700)\n    output_properties = density\n    outputs = 'exodus'\n  []\n  [biot_modulus]\n    type = PorousFlowConstantBiotModulus\n    biot_coefficient = 1\n    fluid_bulk_modulus = 2e9 #Keep it consistant with the FluidProperties\n  []\n  [saturation_calculator]\n    type = PorousFlow1PhaseFullySaturated\n    porepressure = porepressure\n  []\n  [massfrac]\n    type = PorousFlowMassFraction\n  []\n  [water]\n    type = PorousFlowSingleComponentFluid\n    phase = 0\n  []\n  [porosity_const]\n    type = PorousFlowPorosityConst\n    porosity = 0.15\n  []\n  [permeability_res]\n    type = PorousFlowPermeabilityConst\n    permeability = '2.5e-14 0 0  0 2.5e-14 0  0 0 2.5e-14'\n  []\n  [relperm]\n    type = PorousFlowRelativePermeabilityCorey\n    n = 2\n    phase = 0\n  []\n  [eff_fluid_pressure]\n    # Used by variant porosity\n    type = PorousFlowEffectiveFluidPressure\n  []\n  [temperature]\n    type = PorousFlowTemperature\n    # temperature = temperature\n  []\n  ######## Mechanics ########\n  [elasticity_tensor_res]\n    type = ComputeIsotropicElasticityTensor\n    bulk_modulus = 55e9\n    shear_modulus = 32.59e9\n  []\n  [strain]\n    type = ComputeSmallStrain\n  []\n  [stress]\n    type = ComputeLinearElasticStress\n  []\n  [volumetric_strain]\n    type = PorousFlowVolumetricStrain\n  []\n[]\n\n[Preconditioning]\n  active = 'HM'\n  [smp]\n    type = SMP\n    full = true\n  []\n  [superlu]\n    type = SMP\n    full = true\n    petsc_options = '-ksp_diagonal_scale -ksp_diagonal_scale_fix'\n    petsc_options_iname = '-ksp_type -pc_type -pc_factor_mat_solver_package'\n    petsc_options_value = 'gmres lu superlu_dist'\n  []\n  [HM]\n    type = SMP\n    full = true\n    petsc_options_iname = '-pc_type -pc_hypre_type -pc_hypre_boomeramg_strong_threshold -pc_hypre_boomeramg_agg_nl  -pc_hypre_boomeramg_agg_num_paths -pc_hypre_boomeramg_max_levels  -pc_hypre_boomeramg_coarsen_type   -pc_hypre_boomeramg_interp_type -pc_hypre_boomeramg_P_max -pc_hypre_boomeramg_truncfactor'\n    petsc_options_value = 'hypre    boomeramg 0.7 4 5 25 HMIS  ext+i 2 0.3'\n  []\n[]\n\n[Executioner]\n  type = Transient\n  end_time = 31536000 #1 year (365 days)\n  [TimeStepper]\n    type = FunctionDT\n    function = dts\n  []\n  dtmin = 1\n  nl_rel_tol = 1e-8\n  nl_rel_step_tol = 1e-8\n  l_tol = 1e-8\n  automatic_scaling = true\n  compute_scaling_once = true\n  solve_type = NEWTON\n  start_time = 0\n  steady_state_detection = true\n  steady_state_tolerance = 1e-09\n[]\n\n[Outputs]\n  console = true\n  csv = false\n  exodus = true\n  print_linear_residuals = false\n[]\n\n[Debug]\n  show_var_residual_norms = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/29682",
          "updatedAt": "2025-01-27T09:02:12Z",
          "publishedAt": "2025-01-13T15:18:42Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nI ran the TH model without any problems\n\ndid you have the volumetric_expansion set to 0 then?\nhow big is the mesh?\nThere are instructions on troubleshooting convergence issues there\nhttps://mooseframework.inl.gov//application_usage/failed_solves.html",
                  "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11822034",
                  "updatedAt": "2025-01-13T16:26:01Z",
                  "publishedAt": "2025-01-13T16:26:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "clariu25"
                          },
                          "bodyText": "I did not have this kernel then. I added the expansion one only when coupling with mechanics\nThe mesh has 586.998 elements and covers 18km x 18km x 1km. It has very different sizes as my interest area is only 10m thick but over a huge area. Therefore, I need a lot of detail there but not so much in the other layers. I should have enough elements in the transition between fine and coarse. It is definitely not an ideal mesh so I will test again with a different mesh\nThanks for the link!",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11830572",
                          "updatedAt": "2025-01-14T11:18:16Z",
                          "publishedAt": "2025-01-14T11:18:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "But you have volumetric expansion set to 0 in this version of the input file?",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11903096",
                          "updatedAt": "2025-01-21T14:16:35Z",
                          "publishedAt": "2025-01-21T14:16:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Does it solve if you are solving both TH and mechanics, but with 0 expansion so they are effectively decoupled?",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11903103",
                          "updatedAt": "2025-01-21T14:17:04Z",
                          "publishedAt": "2025-01-21T14:17:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "clariu25"
                          },
                          "bodyText": "No, it still had the same convergence issue.\nSo far if I remove the Top BC for porepressure it converges. But if I change the fluid properties, I get the same problem so it is not really fixed",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11903219",
                          "updatedAt": "2025-01-21T14:29:01Z",
                          "publishedAt": "2025-01-21T14:29:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "josebastiase"
                  },
                  "bodyText": "Hi,\nI dont see any issues with the kernels... Have you tried a simple mesh? I think maybe the issue is with your BCs. For overburden, I typically use NeumannBC.",
                  "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11829362",
                  "updatedAt": "2025-01-14T08:57:46Z",
                  "publishedAt": "2025-01-14T08:57:45Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "clariu25"
                          },
                          "bodyText": "Not really.. As the Hydraulic simulation worked on this mesh and the issue is with pressure I did not think about changing the mesh. Maybe I should, Guillaume also asked about the mesh. Thanks\nRegarding the BC, I checked with both NeumannBC and Pressure and the results were the same",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11830173",
                          "updatedAt": "2025-01-14T10:28:06Z",
                          "publishedAt": "2025-01-14T10:28:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "clariu25"
                          },
                          "bodyText": "Hello,\nI did some tests with the BC, and so far removing the hydrostatic pressure at the Top boundary allows the simulation to converge. The results look fine, the pressure still reaches the expected values. But this solution only applies in the case where I use SimpleFluidProperties. For something more complex like Water97Properties it doesn't. Meaning that the problem is not solved yet\n[Pore_Pressure_BC]\n    type = FunctionDirichletBC\n    variable = porepressure\n    ## boundary = 'Top Bottom Left Back Right Front'\n    boundary = 'Bottom Left Back Right Front'\n    function = 'hydrostaticP'\n  []\nThis is the current file: https://github.com/clariu25/PF_tests/blob/main/HM_5km_SF.i\nAnd the mesh: https://github.com/clariu25/PF_tests/blob/main/5km_mesh.msh",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11903156",
                          "updatedAt": "2025-01-21T14:22:06Z",
                          "publishedAt": "2025-01-21T14:22:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Seems odd to me to impose pressure boundary conditions everywhere?\nUsually in flow simulations, you set a pressure BC somewhere (even a single node!) and let the equations dictate the pressure elsewhere.\nSometimes you set pressure in two locations, and the pressure gradient creates the flow. But pressure everywhere?",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11909518",
                          "updatedAt": "2025-01-22T01:24:06Z",
                          "publishedAt": "2025-01-22T01:24:06Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "clariu25"
                          },
                          "bodyText": "Ooook. I always set them fully as, in the underground, the pressure should remain constant at the borders if I'm injecting in the center of my domain. But indeed, by applying the IC with a gradient, it will reach the actual pressure value, due to the gradient and the stress effect. Maybe I had a problem of concept. Thanks and sorry for my dumb mistake.",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11914982",
                          "updatedAt": "2025-01-22T10:56:15Z",
                          "publishedAt": "2025-01-22T10:56:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "It's kind of hard to know what is the culprit. Can you make a simple generated mesh that is similar so that we can try and run it?",
                  "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11849160",
                  "updatedAt": "2025-01-16T00:57:50Z",
                  "publishedAt": "2025-01-16T00:57:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "clariu25"
                          },
                          "bodyText": "Hello, sure. I was trying to solve it on my own. Sorry, thanks for the help. Here I attached both the mesh and the input file\nHM_problem.zip\nI tested with this mesh but the convergence behavior was very similar as before",
                          "url": "https://github.com/idaholab/moose/discussions/29682#discussioncomment-11854987",
                          "updatedAt": "2025-01-16T13:48:54Z",
                          "publishedAt": "2025-01-16T13:31:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to use MOOSE to deeply couple an external thermal program with an external neutronics program",
          "author": {
            "login": "lvkas521424"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello,\nI want to use MOOSE to couple with existing programs, but I cannot use the existing physical modules, and I have to couple with external programs directly, which makes me confused. Based on your recommendation, I downloaded and studied Cardinal which is a coupling process between OpenMC and NekRs in MOOSE, so I have the following questions:\n\nMy neutronics program is different from OpenMC in that it is a deterministic method. Does this mean that I also need to create a MOOSE grid, and then map the MOOSE grid to the physical and thermal grids before I can call the internal modules of MOOSE, such as transfer\nIf the above behavior is really needed, how can I perform the grid mapping work?",
          "url": "https://github.com/idaholab/moose/discussions/29722",
          "updatedAt": "2025-01-22T02:30:05Z",
          "publishedAt": "2025-01-22T02:10:59Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nDoes this mean that I also need to create a MOOSE grid, and then map the MOOSE grid to the physical and thermal grids before I can call the internal modules of MOOSE, such as transfer\n\nYes, you will need a mesh in MOOSE to solve for any equations in moose using its modules\n\nIf the above behavior is really needed, how can I perform the grid mapping work?\n\nCardinal is a good example.\nThis will mostly depend on the APIs that you have in MOOSE and your external program. MOOSE (/libMesh) has routines for projecting onto MOOSE variables (see the GeneralField Transfers or ProjectionTransfer or NearestLocation Transfer for an example)\nYour code should have something similar to set a field from a MOOSE field (there are routines in MOOSE to get the value at a certain position)",
                  "url": "https://github.com/idaholab/moose/discussions/29722#discussioncomment-11910006",
                  "updatedAt": "2025-01-22T02:26:13Z",
                  "publishedAt": "2025-01-22T02:26:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lvkas521424"
                          },
                          "bodyText": "Thanks,\nAfter confirming that this idea is correct, I really need to study Cardinal's code and the modules it calls in more depth.\nThanks again for your reply",
                          "url": "https://github.com/idaholab/moose/discussions/29722#discussioncomment-11910037",
                          "updatedAt": "2025-01-22T02:30:06Z",
                          "publishedAt": "2025-01-22T02:30:04Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Performing the setup tests I reach max failures, all by timout",
          "author": {
            "login": "tfmartn"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n I have consulted the Posting Guidelines.\n I have searched the Discussions Forum and MOOSE Framework Troubleshooting and have not found what I was looking for\n Q&A Getting Started is the most appropriate category for my question (trouble installing, beginner user, ...)\n\nIssue or question about MOOSE\nI am running a fresh install of ubuntu 20.04.6 through wsl2, my PC only has 6 cores and 32 GB of RAM. When I run the setup tests (./runtests -j (integer)) I always reach the max failure threshold with all the failures from timeout. I've tired values from 4-8 and they all reach the max failure threshold. Is my computer simply not fast enough and the tests are cutting off after some limit or is there a more significant problem?\n(Optional) code in question / simulation log / errors\nlinearfvkernels/advection.mms-1d-upwind ..................................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/diffusion.mms-diffusion-1d-cd ............................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/diffusion-reaction-advection.mms-adr-1d-dirichlet ........... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/harmonic_interpolation.average/tris ........................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/block-restriction.mms-diffusion ............................. [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/skewness-correction/adv-diff-react.average .................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/anisotropic-diffusion.mms-anisotropic-diffusion-2d-orthogonal [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/skewness-correction/diffusion.average ......................... [FINISHED] FAILED (TIMEOUT)\nmortar/convergence-studies/fv-gap-conductance.fv/first_order ................ [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/skewness-correction/two_term_extrapol.skewcorrected ........... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/broken-domain.broken-domain ................................... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/advective-outflow.outflow/average ............................. [FINISHED] FAILED (TIMEOUT)\nhdgkernels/diffusion.mms/tri ................................................ [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/advection.mms-1d-linear ..................................... [FINISHED] FAILED (TIMEOUT)\ntime_integrators/multiple-integrators.test_accuracy ......................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/diffusion.mms-diffusion-2d-orthogonal ....................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/diffusion-reaction-advection.mms-adr-1d-outflow ............. [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/harmonic_interpolation.average/quads .......................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/block-restriction.mms-adr ................................... [FINISHED] FAILED (TIMEOUT)\nsamplers/distribute.scale/plot .............................................. [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/skewness-correction/adv-diff-react.skewcorrected .............. [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/anisotropic-diffusion.mms-anisotropic-diffusion-2d-nonorthogonal [FI...] FAILED (TIMEOUT)\nfvkernels/mms/skewness-correction/diffusion.skewcorrected ................... [FINISHED] FAILED (TIMEOUT)\nmortar/convergence-studies/fv-gap-conductance.fv/second_order ............... [FINISHED] FAILED (TIMEOUT)\nhdgkernels/diffusion.mms/quad ............................................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/advection.mms-2d-upwind ..................................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/diffusion.mms-diffusion-2d-nonorthogonal .................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/diffusion-reaction-advection.mms-adr-2d-dirichlet ........... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/harmonic_interpolation.harmonic/tris .......................... [FINISHED] FAILED (TIMEOUT)\nfviks/one-var-diffusion.first_order_convergence/with-ik ..................... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/skewness-correction/adv-diff-react.skewcorrected-advection .... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/mass-mom-mat-advection-diffusion.mms ............... [FINISHED,min_cpus=2] FAILED (TIMEOUT)\nhdgkernels/diffusion.rt_mms/tri ............................................. [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/diffusion.mms-diffusion-2d-rz ............................... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/harmonic_interpolation.harmonic/quads ......................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/diffusion-reaction-advection.mms-adr-2d-outflow ............. [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/advection.mms-2d-linear ..................................... [FINISHED] FAILED (TIMEOUT)\nfviks/one-var-diffusion.first_order_convergence/without-ik .................. [FINISHED] FAILED (TIMEOUT)\nhdgkernels/diffusion.rt_mms/quad ............................................ [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/advective-outflow.outflow/minmod ................... [FINISHED,min_cpus=2] FAILED (TIMEOUT)\nfviks/one-var-diffusion.harmonic ............................................ [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/advection.mms-2d-upwind-tris ................................ [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/advective-outflow.extrapolate ................................. [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/advection.mms-2d-linear-tris ................................ [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/advective-outflow.UpwindLimiter ............................... [FINISHED] FAILED (TIMEOUT)\nlinearfvkernels/advection.mms-2d-rz ......................................... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/advective-outflow.CentralDifferenceLimiter .................... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/advective-outflow.VanLeerLimiter .............................. [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/advective-outflow.MinModLimiter ............................... [FINISHED] FAILED (TIMEOUT)\nfvkernels/mms/advective-outflow.SOULimiter .................................. [FINISHED] FAILED (TIMEOUT)\n---------------------------------------------------------------------------------------------------------\nRan 4578 tests in 4761.3 seconds. Average test time 7.5 seconds, maximum test time 4042.1 seconds.\n4528 passed, 111 skipped, 50 FAILED\nMAX FAILURES REACHED\nEncountering Errors? Please include diagnostic output\n####################################################################################################\nInfluential Environment Variables\n\nCC=mpicc\nCC_FOR_BUILD=/home/cocoa/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-cc\nCFLAGS=   -fPIC -fstack-protector-strong -fno-plt  -ffunction-sections -pipe -isystem /home/cocoa/miniforge3/envs/moose/include\nCONDA_BUILD_SYSROOT=/home/cocoa/miniforge3/envs/moose/x86_64-conda-linux-gnu/sysroot\nCONDA_CHANNEL=https://conda.software.inl.gov/public\nCONDA_DEFAULT_ENV=moose\nCONDA_EXE=/home/cocoa/miniforge3/bin/conda\nCONDA_PREFIX=/home/cocoa/miniforge3/envs/moose\nCONDA_PREFIX_1=/home/cocoa/miniforge3\nCONDA_PROMPT_MODIFIER=(moose)\nCONDA_PYTHON_EXE=/home/cocoa/miniforge3/bin/python\nCONDA_SHLVL=2\nCONDA_TOOLCHAIN_BUILD=x86_64-conda-linux-gnu\nCONDA_TOOLCHAIN_HOST=x86_64-conda-linux-gnu\nCPP=/home/cocoa/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-cpp\nCPPFLAGS=   -isystem /home/cocoa/miniforge3/envs/moose/include\nCURL_CA_BUNDLE=\nCXX=mpicxx\nCXXFILT=/home/cocoa/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-c++filt\nCXXFLAGS=-fvisibility-inlines-hidden -fmessage-length=0    -fPIC -fstack-protector-strong -fno-plt  -ffunction-sections -pipe -isystem /home/cocoa/miniforge3/envs/moose/include  -std=c++17\nCXX_FOR_BUILD=/home/cocoa/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-c++\nF77=mpif77\nF90=mpif90\nF95=/home/cocoa/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-f95\nFC=mpif90\nFC_FOR_BUILD=/home/cocoa/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-gfortran\nFFLAGS=   -fPIC -fstack-protector-strong -fno-plt  -ffunction-sections -pipe -isystem /home/cocoa/miniforge3/envs/moose/include\nFI_PROVIDER=tcp\nHDF5_DIR=/home/cocoa/miniforge3/envs/moose\nLD=/home/cocoa/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-ld\nLDFLAGS=-Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/home/cocoa/miniforge3/envs/moose/lib -Wl,-rpath-link,/home/cocoa/miniforge3/envs/moose/lib -L/home/cocoa/miniforge3/envs/moose/lib\nLD_GOLD=/home/cocoa/miniforge3/envs/moose/bin/x86_64-conda-linux-gnu-ld.gold\nLIBMESH_DIR=/home/cocoa/miniforge3/envs/moose/libmesh\nMOOSE_JOBS=6\nMOOSE_NO_CODESIGN=true\nPATH=/home/cocoa/miniforge3/envs/moose/bin:/home/cocoa/miniforge3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/WindowsApps/CanonicalGroupLimited.Ubuntu20.04LTS_2004.6.16.0_x64__79rhkp1fndgsc:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/java8path:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0:/mnt/c/Windows/System32/OpenSSH:/mnt/c/Program Files (x86)/Intel/Intel(R) Management Engine Components/DAL:/mnt/c/Program Files/Intel/Intel(R) Management Engine Components/DAL:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/dotnet:/mnt/c/Program Files/Wolfram Research/WolframScript:/mnt/c/Users/Trystin/AppData/Local/Microsoft/WindowsApps:/snap/bin:/home/cocoa/miniforge3/envs/moose/wasp/bin:/home/cocoa/miniforge3/envs/moose/wasp/bin\nPETSC_DIR=/home/cocoa/miniforge3/envs/moose/petsc\nREQUESTS_CA_BUNDLE=\nSSL_CERT_FILE=\nWASP_DIR=/home/cocoa/miniforge3/envs/moose/wasp\n####################################################################################################\nCompiler(s) (CC CXX FC F77 F90):\n\nwhich $CC; /home/cocoa/miniforge3/envs/moose/bin/mpicc\n$CC --version; x86_64-conda-linux-gnu-cc (conda-forge gcc 12.3.0-7) 12.3.0\n$CC -show; x86_64-conda-linux-gnu-cc -I/home/cocoa/miniforge3/envs/moose/include -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -Wl,-rpath,/home/cocoa/miniforge3/envs/moose/lib -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -Wl,-rpath -Wl,/home/cocoa/miniforge3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nwhich $CXX; /home/cocoa/miniforge3/envs/moose/bin/mpicxx\n$CXX --version; x86_64-conda-linux-gnu-c++ (conda-forge gcc 12.3.0-7) 12.3.0\n$CXX -show; x86_64-conda-linux-gnu-c++ -I/home/cocoa/miniforge3/envs/moose/include -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -Wl,-rpath,/home/cocoa/miniforge3/envs/moose/lib -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -lmpicxx -Wl,-rpath -Wl,/home/cocoa/miniforge3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nwhich $FC; /home/cocoa/miniforge3/envs/moose/bin/mpif90\n$FC --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$FC -show; x86_64-conda-linux-gnu-gfortran -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -Wl,-rpath,/home/cocoa/miniforge3/envs/moose/lib -I/home/cocoa/miniforge3/envs/moose/include -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/home/cocoa/miniforge3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nwhich $F77; /home/cocoa/miniforge3/envs/moose/bin/mpif77\n$F77 --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$F77 -show; x86_64-conda-linux-gnu-gfortran -I/home/cocoa/miniforge3/envs/moose/include -fallow-argument-mismatch -L/home/cocoa/miniforge3/envs/moose/lib -Wl,-rpath,/home/cocoa/miniforge3/envs/moose/lib -I/home/cocoa/miniforge3/envs/moose/include -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/home/cocoa/miniforge3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nwhich $F90; /home/cocoa/miniforge3/envs/moose/bin/mpif90\n$F90 --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$F90 -show; x86_64-conda-linux-gnu-gfortran -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -Wl,-rpath,/home/cocoa/miniforge3/envs/moose/lib -I/home/cocoa/miniforge3/envs/moose/include -I/home/cocoa/miniforge3/envs/moose/include -L/home/cocoa/miniforge3/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/home/cocoa/miniforge3/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nOK\n####################################################################################################\nPython Sanity Checks\n\n/usr/bin/env python3 --version; (reporting as: Python 3.11.8) matches\nwhich python3 python;\n\n/home/cocoa/miniforge3/envs/moose/bin/python3 --version; == Python 3.11.8\n/home/cocoa/miniforge3/envs/moose/bin/python --version; == Python 3.11.8\n\nOK\n####################################################################################################\nPython Modules (TestHarness, run-ability)\n\nOK\n####################################################################################################\nMOOSE Repository/Conda Version Checks\n\n              Installed     Required\nmoose-dev     2024.12.23              == 2024.12.23\nmoose-libmesh 2024.12.02              == 2024.12.02\nmoose-wasp    2024.12.23              == 2024.12.23\nmoose-mpi     2024.12.23              == 2024.12.23\n\nOK\n\nchecks PASSED",
          "url": "https://github.com/idaholab/moose/discussions/29716",
          "updatedAt": "2025-01-21T05:52:22Z",
          "publishedAt": "2025-01-21T05:05:56Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou have the right cause. The PC is too slow to run these tests in the allotted time. You can modify the max time if you want but it will just take a very long time to get them all to pass\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/29716#discussioncomment-11898206",
                  "updatedAt": "2025-01-21T05:50:39Z",
                  "publishedAt": "2025-01-21T05:50:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "tfmartn"
                          },
                          "bodyText": "Thank you",
                          "url": "https://github.com/idaholab/moose/discussions/29716#discussioncomment-11898213",
                          "updatedAt": "2025-01-21T05:52:11Z",
                          "publishedAt": "2025-01-21T05:52:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to turn off Jacobian check?",
          "author": {
            "login": "PEI0214"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello.\nThere are some degenerate elements in my grid. There was an error in the calculation.\nElem Information\n   id()=4769, unique_id()=33014, subdomain_id()=20, processor_id()=3\n   type()=HEX8\n   dim()=3\n   n_nodes()=8\n   mapping=LAGRANGE_MAP\n    0  Node id()=5709, processor_id()=3, Point=(x,y,z)=(   173.4,     -234,   2803.8)\n    DoFs=\n    1  Node id()=5711, processor_id()=3, Point=(x,y,z)=(   173.4,  -216.45,   2806.9)\n    DoFs=\n    2  Node id()=5711, processor_id()=3, Point=(x,y,z)=(   173.4,  -216.45,   2806.9)\n    DoFs=\n    3  Node id()=5710, processor_id()=3, Point=(x,y,z)=(   173.4,     -231,   2804.3)\n    DoFs=\n    4  Node id()=4945, processor_id()=3, Point=(x,y,z)=(   188.4,     -234,   2789.7)\n    DoFs=\n    5  Node id()=4947, processor_id()=3, Point=(x,y,z)=(   188.4,  -216.45,     2793)\n    DoFs=\n    6  Node id()=4947, processor_id()=3, Point=(x,y,z)=(   188.4,  -216.45,     2793)\n    DoFs=\n    7  Node id()=5712, processor_id()=3, Point=(x,y,z)=(   188.4,     -231,   2790.3)\n    DoFs=\n   n_sides()=6\n    neighbor(0)=nullptr\n    neighbor(1)=nullptr\n    neighbor(2)=nullptr\n    neighbor(3)=5415\n    neighbor(4)=4771\n    neighbor(5)=4772\n   hmin()=0, hmax()=28.7896\n   volume()=0.401469\n   active()=1, ancestor()=0, subactive()=0, has_children()=0\n   parent()=nullptr\n   level()=0, p_level()=0\n   refinement_flag()=DO_NOTHING\n   p_refinement_flag()=DO_NOTHING\n   DoFs=(1/0/71352) (1/1/71353) (1/2/71354) (1/3/71355) (1/4/71356) (1/5/71357) (1/6/71358) (1/7/71359) (1/8/71360) \nlibMesh terminating:\nERROR: negative Jacobian -0.414386 at point (x,y,z)=(  176.57, -229.791,  2801.57) in element 4769\n\nIs there a good way to solve this? Can I turn off Jacobian's check?",
          "url": "https://github.com/idaholab/moose/discussions/29712",
          "updatedAt": "2025-01-20T15:26:34Z",
          "publishedAt": "2025-01-20T15:19:18Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNo you have to fix your mesh. Turning off the check would just lead to a failed solve\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/29712#discussioncomment-11891898",
                  "updatedAt": "2025-01-20T15:26:35Z",
                  "publishedAt": "2025-01-20T15:26:34Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Assigning multiple material properties to diffused interfaces",
          "author": {
            "login": "MinMorsh"
          },
          "bodyText": "I am using Voronoi tessellation (PolycrytalVoronoi) to create a 64 grain model (op_num = 20) in 3D and then assigning the electrical conductivities (bulk and interface) using bnds variable (BndsCalcAux). Here, when bnds>0.9, I am assigning bulk property and interfacial property to the rest.\nHere is the Materials block of the current model that I have.\n[Materials]\n  [./ecCond] #The equation defining the electrical conductivity is defined here, using two ifs\n      type = ParsedMaterial\n      block = 0\n      constant_names = 'length_scale k_b k_int'  # b = bulk, int = interface\n      constant_expressions = '1 4.9758e-7 6.63e-5'\n      function = 'sk_b:= length_scale*k_b; sk_int:= length_scale*k_int; if(bnds>0.90,sk_b,sk_int)'\n      outputs = exodus\n      property_name = ecC\n      coupled_variables= 'bnds'\n    [../]\n[]\n\nI need to assign multiple materials to the interface so that some part of the interface should have one type of interfacial material (less conductive, denoted as sk_int1), and other part of the interface should have another type (more conductive, denoted as sk_int2). Any idea how to achieve that?",
          "url": "https://github.com/idaholab/moose/discussions/29610",
          "updatedAt": "2025-01-20T02:34:10Z",
          "publishedAt": "2024-12-23T23:06:24Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "so that some part of the interface has one type of interfacial material (less conductive, denoted as sk_int1), and other part of the interface has another type (more conductive, denoted as sk_int2).\n\nhow is the interface defined? Is it a sideset in the mesh? Is it a subdomain?\nIs there a criterion already for selecting between the types?",
                  "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11654023",
                  "updatedAt": "2024-12-23T23:36:55Z",
                  "publishedAt": "2024-12-23T23:36:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MinMorsh"
                          },
                          "bodyText": "The diffused interface is defined using the int_width parameter in the PolycrystalVoronoi user object. The bnds variable takes a value of 1 at the grains and less than 1 at the diffused interfaces. This setup is used to assign two properties\u2014grains (e.g., Si) and interfaces (e.g., Al\u2082O\u2083). In my case, I need to assign one material (e.g., Si) to the grains and two different materials (e.g., Al\u2082O\u2083 and ZrO\u2082) to the interfaces, but at specific locations within the interfaces.",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11654206",
                          "updatedAt": "2024-12-24T00:12:36Z",
                          "publishedAt": "2024-12-24T00:12:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "but at specific locations within the interfaces.\n\nhow do you determine those? Using the bnds field? Using a separate subdomain?",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11654299",
                          "updatedAt": "2024-12-24T00:37:36Z",
                          "publishedAt": "2024-12-24T00:37:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MinMorsh"
                          },
                          "bodyText": "That's what I am looking for here. Can I make separate subdomains of the interfaces so that I can assign different properties to them?",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11654444",
                          "updatedAt": "2024-12-24T01:02:51Z",
                          "publishedAt": "2024-12-24T01:02:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if the mesh is fine enough to resolve them, sure. You can use this object to modify the subdomains based on a variable value:\nhttps://mooseframework.inl.gov/source/meshmodifiers/CoupledVarThresholdElementSubdomainModifier.html",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11654472",
                          "updatedAt": "2024-12-24T01:08:27Z",
                          "publishedAt": "2024-12-24T01:08:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MinMorsh"
                          },
                          "bodyText": "I have been using similar technique here function = 'sk_b:= length_scale*k_b; sk_int:= length_scale*k_int; if(bnds>0.90,sk_b,sk_int)' (using if statement) to assign properties to grains and interfaces. Now I am looking for something that will enable me to assign multiple properties to the interfaces/GBs (illustrated below).",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11654625",
                          "updatedAt": "2024-12-24T01:36:22Z",
                          "publishedAt": "2024-12-24T01:36:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MinMorsh"
                          },
                          "bodyText": "Yes, the mesh is quite refined at the interfaces. Below is the current mesh I am using, generated with Adaptive Mesh Refinement (AMR).",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11654643",
                          "updatedAt": "2024-12-24T01:39:50Z",
                          "publishedAt": "2024-12-24T01:39:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If length scale is enough to describe the interfaces then your approach works?\nYou can change all the properties using such if statement, one by one.\nLength scale could also be used with object I mentioned to create a new subdomain, and use new Materials that are block restricted to this new subdomain",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11657483",
                          "updatedAt": "2024-12-24T11:07:03Z",
                          "publishedAt": "2024-12-24T11:06:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MinMorsh"
                          },
                          "bodyText": "If length scale is enough to describe the interfaces then your approach works?\n\nI don't think that will help as all the interfaces have similar range of bnds value (0-0.99).\n\nYou can change all the properties using such if statement, one by one.\n\nI tried that before. It doesn't help to access interfaces at different locations. I tried something like this:\n[Materials]\n  [./ecCond] \n      type = ParsedMaterial\n      block = 0\n      constant_names = 'length_scale k_b k_int1 k_int2'\n      constant_expressions = '1 2.84e5 3e6 5e6' # electrical conductivity of Si at 300K (S/m)\n      expression = 'sk_b:= length_scale*k_b; sk_int1:= length_scale*k_int1; sk_int2:= length_scale*k_int2; if(bnds>0.9,sk_b,if(0.001<bnds<0.3,sk_int2,sk_int1))'\n      outputs = exodus\n      property_name = ecC\n      coupled_variables = 'bnds'\n    [../]\n[]\n\nIs there any other way to access the interfaces selectively? I can share my input file if that helps.",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11662320",
                          "updatedAt": "2024-12-25T07:43:19Z",
                          "publishedAt": "2024-12-25T07:43:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "how do you plan to distinguish the interfaces between each other then?\nDo you mean to split them by grain type on both sides?\nDo you want every single one to be different / accessible uniquely?",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11663568",
                          "updatedAt": "2024-12-25T12:25:30Z",
                          "publishedAt": "2024-12-25T12:25:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MinMorsh"
                          },
                          "bodyText": "how do you plan to distinguish the interfaces between each other then?\n\nIs it possible to use 'volume fraction' such that I can say '40% of the interface should be SiO2 and the rest is AlO2'? I can't change the length scale cause I need a fixed number and size of grains (in my case it is 64 and 20 nm respectively).\n\nDo you mean to split them by grain type on both sides?\n\nIf I can, then yes.\n\nDo you want every single one to be different / accessible uniquely?\n\nThat would be the best case scenario.",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11753383",
                          "updatedAt": "2025-01-06T20:12:37Z",
                          "publishedAt": "2025-01-06T20:11:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "PengWei97"
                  },
                  "bodyText": "Hi @MinMorsh, you could potentially achieve this by utilizing a method to differentiate the interface from the bulk based on the number of activate order parameters at each integration point [_op]. Here's a suggestion on how to implement this:\n\n\nUse GrainTracker: The GrainTracker can be used to track the grains and interfaces. In your case, you could define an interface as a region where more than one order parameter is active, indicating the presence of two grains in contact.\n\n\nDefine Interface vs. Bulk: You can set up logic to distinguish between the bulk and the interface based on the number of active order parameters at a given integration point. If only one order parameter is active, it indicates a bulk point, and if multiple order parameters are active, it indicates an interface.\n\n\nAssign Material Properties: Once you have identified the bulk and interface regions, you can assign different material properties based on this classification.\n\n\nLet me know if you need more details or specific examples for your setup!\nWei",
                  "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11767572",
                  "updatedAt": "2025-01-08T01:55:41Z",
                  "publishedAt": "2025-01-08T01:55:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MinMorsh"
                          },
                          "bodyText": "Hi @PengWei97. Thanks for the suggestion. Does this method allow to apply multiple interfacial properties? I would love to discuss the details.",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11791103",
                          "updatedAt": "2025-01-09T20:48:34Z",
                          "publishedAt": "2025-01-09T20:48:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "I think it is possible to apply multiple interface properties, but you need to be clear about the criteria you use to define different interfaces. Meanwhile, GBAnisotropyMisori.C is a class I built based on the above ideas, you can have a look.",
                          "url": "https://github.com/idaholab/moose/discussions/29610#discussioncomment-11885694",
                          "updatedAt": "2025-01-20T02:34:11Z",
                          "publishedAt": "2025-01-20T02:34:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Optimizing input file for faster 3d D phase-field simulation",
          "author": {
            "login": "PengWei97"
          },
          "bodyText": "Dear Moose Community,\nI am currently trying to reproduce the simulation results from the paper \"Verma, M., & Mukherjee, R. (2021). Grain growth stagnation in solid state thin films: A phase-field study. Journal of Applied Physics, 130(2).\" In this study, I am modeling a 3D bicrystal simulation (\nsurf_circular_matrix_gg_3d_split.txt), as shown below.\n\nHowever, I am experiencing significantly slower computation times for the 3D simulation compared to the 2D case. Specifically, when running the simulation for a time step t=1, it takes around 4021.53s on my server for the 3D case. On the other hand, when I reduce the problem to 2D, the same simulation step only takes 27.78s.\nGiven this, I would like to know what aspects of my input file I should focus on optimizing to improve the computational efficiency of the 3D simulation. Any suggestions on specific parameters, solvers, or techniques that could help speed up the calculation would be greatly appreciated.\nThank you in advance for your insights!\nBest regards,\nWei",
          "url": "https://github.com/idaholab/moose/discussions/29658",
          "updatedAt": "2025-01-20T02:29:14Z",
          "publishedAt": "2025-01-08T01:36:12Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nMesh and time discretizations are big factors on the computing time. Making sure they are optimal helps.\nA concern often when using adaptivity is that the initial partitioning is not great once the mesh is refined. Re partitioning is expensive so it can be a good idea to use a prior simulation mesh (using the checkpoint system, not using exodus) as the starting point.\nHere you only have two crystals right? So not very many order parameters. That's usually impactful but not here.\nSolver wise PJFNK with block jacobi is probably a weak option. Try to look into Newton if you have enough memory and a perfect Jacobian, and try to use a different preconditioner\nWhy are you using vinewton for the snes type? Do you have constraints?",
                  "url": "https://github.com/idaholab/moose/discussions/29658#discussioncomment-11772033",
                  "updatedAt": "2025-01-08T10:57:31Z",
                  "publishedAt": "2025-01-08T10:57:30Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Hi @GiudGiud, based on your suggestions, I have made the necessary modifications and attached the results. I look forward to your next advice.\n\nA concern often when using adaptivity is that the initial partitioning is not great once the mesh is refined.\n\n[Mesh]\n  type = GeneratedMesh\n  dim = 3\n  nx = 50\n  ny = 50\n  nz = 20\n  xmin = 0\n  xmax = 100\n  ymin = 0\n  ymax = 100\n  zmin = 0\n  zmax = 40\n  elem_type = HEX8\n\n  parallel_type = distributed\n[]\nNot using mesh adaptivity indeed accelerated the computation time, but it is still slow. (Even when calculating up to t=0.01, it takes 115.82s, and the output to the terminal is\uff1a 02_3d_split_noAdaptivity.txt\n. Moreover, using mesh adaptivity, the time consumption is 426.74s.\n\nRe partitioning is expensive so it can be a good idea to use a prior simulation mesh (using the checkpoint system, not using exodus) as the starting point.\n\nSorry, I don\u2019t quite understand using the checkpoint system, not using exodus. I didn\u2019t output the checkpoint file for recovery in [Outputs], but only the Nemesis-type file.\n\nHere you only have two crystals right? So not very many order parameters. That's usually impactful but not here.\n\nYes, there are only two order parameters here, as well as two conservative field variables cv (to distinguish vapor and bulk) and w. This case is a very simple bicrystal model, used to verify the reliability and efficiency of the model.\n\nSolver wise PJFNK with block jacobi is probably a weak option.\n\nWhy is using the PJFNK solver with block Jacobi considered a weak option? Apologies for my lack of experience and theoretical knowledge regarding the [Executioner] module settings. If there are good practical summaries or learning materials on this, I would appreciate it if you could share them with me.\n\nTry to look into Newton if you have enough memory and a perfect Jacobian, and try to use a different preconditioner.\n\nGot it. Based on your suggestion, I set the solve type to Newton, and indeed, this method is faster, taking only 86.6s. Additionally, I noticed that there are several options in the Preconditioning System such as Split, FDP, PSP, PBP, SMP, and VCP. I will try these further tomorrow. Thanks for your advice on this.\n\nWhy are you using vinewton for the snes type? Do you have constraints?\n\nActually, I just copied an example from Moose, although I don\u2019t fully understand what it means. Maybe I should add some knowledge about PETCs. Do you have any other advice on this?\nFinally, I greatly appreciate your valuable suggestions. I will further understand and try the adjustments based on your responses, and I hope you can provide further guidance.\nWei\nLet me know if you'd like to adjust anything!",
                          "url": "https://github.com/idaholab/moose/discussions/29658#discussioncomment-11773647",
                          "updatedAt": "2025-01-08T13:37:40Z",
                          "publishedAt": "2025-01-08T13:37:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Nemesis and exodus files don't keep track of the levels of refinement for each element, which means we cannot use them for restarting simulations after APR has been used.\nOn the other hand, checkpoints and their associated mesh files keep the refinement information.",
                          "url": "https://github.com/idaholab/moose/discussions/29658#discussioncomment-11775865",
                          "updatedAt": "2025-01-08T16:36:41Z",
                          "publishedAt": "2025-01-08T16:36:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The petsc manual will describe this preconditioning better than I can, but block Jacobi, from what I recall, is essentially just scaling rows of the system matrix (or its action in PJFNK) with a processor-dependent factor (from the diagonal? I would need to check the manual)\nAs such it's not effective for all problems. As the calculation gets larger you'll want to look for better scaling approaches such as algebraic multi-grid.",
                          "url": "https://github.com/idaholab/moose/discussions/29658#discussioncomment-11775915",
                          "updatedAt": "2025-01-08T16:40:45Z",
                          "publishedAt": "2025-01-08T16:40:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this is the petsc manual page for block jacobi\nhttps://petsc.org/release/manualpages/PC/PCBJACOBI/",
                          "url": "https://github.com/idaholab/moose/discussions/29658#discussioncomment-11780950",
                          "updatedAt": "2025-01-09T00:56:10Z",
                          "publishedAt": "2025-01-09T00:56:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Thanks a lot, I will learn how to optimize my execution module based on the suggestions you shared.",
                          "url": "https://github.com/idaholab/moose/discussions/29658#discussioncomment-11885668",
                          "updatedAt": "2025-01-20T02:29:08Z",
                          "publishedAt": "2025-01-20T02:29:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}