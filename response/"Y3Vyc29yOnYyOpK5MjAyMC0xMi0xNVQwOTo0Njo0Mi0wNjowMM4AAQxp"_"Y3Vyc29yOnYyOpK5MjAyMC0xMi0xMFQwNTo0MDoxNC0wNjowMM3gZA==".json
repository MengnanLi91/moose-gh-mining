{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMC0xMi0xMFQwNTo0MDoxNC0wNjowMM3gZA=="
    },
    "edges": [
      {
        "node": {
          "title": "How to couple an outer existing code into MOOSE framework",
          "author": {
            "login": "LagrangeW"
          },
          "bodyText": "Dear MOOSE Experts,\nI've read some articles about coupling an existing code into MOOSE framework , but they all mention less about the process of  the wrapping of the outer code . And I can't find any useful Doc in the MOOSE page.\nSo would you please tell me some useful docs or pages I can refer to about how to couple an outer code into MOOSE framework?\nThank you so much!\nWayne Wang",
          "url": "https://github.com/idaholab/moose/discussions/16438",
          "updatedAt": "2022-08-10T03:09:06Z",
          "publishedAt": "2020-12-09T07:01:17Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Here is our documentation: https://mooseframework.inl.gov/application_development/moose_wrapped_apps.html",
                  "url": "https://github.com/idaholab/moose/discussions/16438#discussioncomment-179244",
                  "updatedAt": "2022-08-10T03:09:13Z",
                  "publishedAt": "2020-12-09T15:27:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LagrangeW"
                          },
                          "bodyText": "Thanks so much for your patience! I've seen this before, but I think It's just not that detailed\uff0c it just give some information about wrapping interface ,but not mention the detail about how the external code should be departed or something else...It's just my thought. Thanks for your patience again!",
                          "url": "https://github.com/idaholab/moose/discussions/16438#discussioncomment-182813",
                          "updatedAt": "2022-08-10T03:09:13Z",
                          "publishedAt": "2020-12-10T00:57:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "Unfortunately, that is the best we have at the moment. It is very difficult to write documentation on wrapping applications. The structure of the application being wrapped as well as the problem(s) to be solved are completely unknown. If you have a specific application in mind and want some guidance I suggest starting a new Discussion. If you can't share then please reach out to us via email.",
                          "url": "https://github.com/idaholab/moose/discussions/16438#discussioncomment-182818",
                          "updatedAt": "2022-08-10T03:09:13Z",
                          "publishedAt": "2020-12-10T01:01:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LagrangeW"
                          },
                          "bodyText": "Got it, thank you for your support! I'll learn more about it",
                          "url": "https://github.com/idaholab/moose/discussions/16438#discussioncomment-182874",
                          "updatedAt": "2022-08-10T03:09:14Z",
                          "publishedAt": "2020-12-10T01:12:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "module \"petsc_external_solver\" is the simplest example we have.  There are already several successful applications that followed the example.",
                          "url": "https://github.com/idaholab/moose/discussions/16438#discussioncomment-190739",
                          "updatedAt": "2022-08-10T03:09:18Z",
                          "publishedAt": "2020-12-11T05:00:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LagrangeW"
                          },
                          "bodyText": "Thank you so much ! But actually I don't know where to find it ,  will you please to be more specific?  I'd appreciate i t!",
                          "url": "https://github.com/idaholab/moose/discussions/16438#discussioncomment-191134",
                          "updatedAt": "2022-08-10T03:09:18Z",
                          "publishedAt": "2020-12-11T07:19:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "https://github.com/idaholab/moose/tree/next/modules/external_petsc_solver",
                          "url": "https://github.com/idaholab/moose/discussions/16438#discussioncomment-194175",
                          "updatedAt": "2022-08-10T03:09:26Z",
                          "publishedAt": "2020-12-11T15:40:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LagrangeW"
                          },
                          "bodyText": "Got it ! Thank you so much !",
                          "url": "https://github.com/idaholab/moose/discussions/16438#discussioncomment-198909",
                          "updatedAt": "2022-08-10T03:09:26Z",
                          "publishedAt": "2020-12-12T08:30:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PostProcessor based execution stop",
          "author": {
            "login": "srinath-chakravarthy"
          },
          "bodyText": "Hello all,\nIs there a way to stop program execution based on a postprocessor value or any other value ?\nCheers\nSrinath",
          "url": "https://github.com/idaholab/moose/discussions/16456",
          "updatedAt": "2024-02-22T01:19:36Z",
          "publishedAt": "2020-12-10T19:52:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Yes, you need to use the Terminator!  It doesn't have documentation yet, but the tests should help you figure out how to use it.\nhttps://mooseframework.inl.gov/source/userobject/Terminator.html",
                  "url": "https://github.com/idaholab/moose/discussions/16456#discussioncomment-188469",
                  "updatedAt": "2024-02-22T01:20:03Z",
                  "publishedAt": "2020-12-10T19:56:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "srinath-chakravarthy"
                  },
                  "bodyText": "Thanks andrew that works for me.\nCheers\nSrinath",
                  "url": "https://github.com/idaholab/moose/discussions/16456#discussioncomment-197840",
                  "updatedAt": "2024-02-22T01:20:02Z",
                  "publishedAt": "2020-12-11T22:50:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Is there an electrostatics module?",
          "author": {
            "login": "adamdwexler"
          },
          "bodyText": "Hi All,\nI'm new to the MOOSE environment and trying to get the lay of the land. I am working on modeling an electrohydrodynamic multiphase flow with heat exchange. Can anyone suggest a good module to build the EHD forces in? Tensor mechanics perhaps?\nThanks for the assistance!\nAdam",
          "url": "https://github.com/idaholab/moose/discussions/16436",
          "updatedAt": "2022-10-24T23:40:38Z",
          "publishedAt": "2020-12-09T03:51:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "If you want to understand how to develop an application, then I suggest you follow our tutorial: https://mooseframework.inl.gov/getting_started/examples_and_tutorials/tutorial01_app_development/index.html. It is a work-in-progress, but there is enough there to help you understand the big picture in creating an application.\nThe modules pages also have a lot of information that could help you understand our current capabilities: https://mooseframework.inl.gov/modules/index.html",
                  "url": "https://github.com/idaholab/moose/discussions/16436#discussioncomment-179262",
                  "updatedAt": "2022-10-24T23:40:55Z",
                  "publishedAt": "2020-12-09T15:31:47Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "adamdwexler"
                          },
                          "bodyText": "Thank you Andrew for directing me towards these tutorials. This is a tremendous ecosystem to get started in and I just discovered the summer workshop. Excited to learn!",
                          "url": "https://github.com/idaholab/moose/discussions/16436#discussioncomment-194092",
                          "updatedAt": "2022-10-24T23:40:56Z",
                          "publishedAt": "2020-12-11T15:16:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "mangerij"
                  },
                  "bodyText": "Yeah, setting up a Poisson problem in MOOSE is pretty straightforward and I think it's an excellent exercise for a beginner. We solve the magnetostatic/electrostatic Poisson problems in Ferret ( https://mangerij.github.io/ferret/ ). Since magnetic/electric charge density on the RHS of the Poisson equation can be different depending on your physics, it probably makes sense for you to make your own app.\nI gave a cursory glance at EHD models and it seems the Navier-Stokes module could be useful for you as well so I would suggest for you to take a look there: moose/modules/navier_stokes",
                  "url": "https://github.com/idaholab/moose/discussions/16436#discussioncomment-184875",
                  "updatedAt": "2022-10-24T23:41:11Z",
                  "publishedAt": "2020-12-10T09:50:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "adamdwexler"
                          },
                          "bodyText": "Hi John,\nThank you for the encouraging comment. Your work on ferroic nanostructure seems really interesting! Good call on including Navier-Stokes and I think I will take a look at Ferret for inspiration.",
                          "url": "https://github.com/idaholab/moose/discussions/16436#discussioncomment-194126",
                          "updatedAt": "2022-10-24T23:41:11Z",
                          "publishedAt": "2020-12-11T15:26:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "./run_tests error - Python 2",
          "author": {
            "login": "Bala-1005"
          },
          "bodyText": "Hello everyone,\nI was creating a new app on moose and was able to create the object file that I needed. But once I did the ./run_tests -j4 command, I got the following error.\nTraceback (most recent call last):\nFile \"./run_tests\", line 11, in \nfrom TestHarness import TestHarness\nFile \"/home/gnanasbr/temp_projects/moose/python/TestHarness/init.py\", line 10, in \nfrom .TestHarness import TestHarness\nFile \"/home/gnanasbr/temp_projects/moose/python/TestHarness/TestHarness.py\", line 17, in \nfrom FactorySystem.Factory import Factory\nFile \"/home/gnanasbr/temp_projects/moose/python/FactorySystem/init.py\", line 13, in \nfrom .Parser import Parser\nFile \"/home/gnanasbr/temp_projects/moose/python/FactorySystem/Parser.py\", line 17\nprint('failed to import pyhit - try running \"make hit\" in the $MOOSE_DIR/test directory.', file=sys.stderr)\n^\nSyntaxError: invalid syntax\nWhat seems to be the problem here?\nThanks,\nBala",
          "url": "https://github.com/idaholab/moose/discussions/16433",
          "updatedAt": "2023-04-03T14:34:58Z",
          "publishedAt": "2020-12-09T02:35:53Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis is odd. Is it a Python2 error with print() ? Can you tell us what 'which python' returns ?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-172821",
                  "updatedAt": "2023-04-03T14:34:59Z",
                  "publishedAt": "2020-12-09T03:39:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Bala-1005"
                  },
                  "bodyText": "which python returns\n/usr/bin/python.\nwhich python\n/usr/bin/python\nThanks,\nBala",
                  "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-173494",
                  "updatedAt": "2023-04-03T14:35:00Z",
                  "publishedAt": "2020-12-09T04:26:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "and what does python --version return?\nThis is not the python from conda",
                  "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-174330",
                  "updatedAt": "2023-04-03T14:35:00Z",
                  "publishedAt": "2020-12-09T05:45:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Bala-1005"
                          },
                          "bodyText": "Hello,\npython --version returns Python 2.7.5\nThanks,\nBala",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-174357",
                          "updatedAt": "2020-12-09T05:48:10Z",
                          "publishedAt": "2020-12-09T05:48:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok so the issue is that you are using your system's python, instead of the conda python.\nwhich means that both\n\nit wont work because python 2 is no longer supported\nall the python libraries which we had you install are not accessible to that python.\n\nDid you restart your terminal since you installed conda? (is it initialized is what I'm trying to get to) If not, do that.\nIf you did and it still does not work:\n-What does which python3 return?\n-Can you add the path to the conda python to the beginning of $PATH and try again?",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-174639",
                          "updatedAt": "2020-12-09T06:04:13Z",
                          "publishedAt": "2020-12-09T06:04:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Bala-1005"
                          },
                          "bodyText": "I see. But I am using a terminal on an HPC. I have other apps that seemed to have worked before. I just wanted to create a new application. I have to talk to my system administrator about conda since I have no idea how to go about it.\npython3 gives the following result\nPython 3.6.8 (default, Apr  2 2020, 13:34:55)\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-39)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nThanks,\nBala",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-180152",
                          "updatedAt": "2020-12-09T16:44:35Z",
                          "publishedAt": "2020-12-09T16:44:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So how did you install moose? Did you just load a module installed by your HPC team?\nOur default installation process involves using conda, which comes with its own python(3).",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-180210",
                          "updatedAt": "2020-12-09T16:52:04Z",
                          "publishedAt": "2020-12-09T16:52:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Bala-1005"
                          },
                          "bodyText": "I used the following webpage for installation on HPC a while ago.\nhttps://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html\nThanks,\nBala",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-180258",
                          "updatedAt": "2023-04-03T14:35:01Z",
                          "publishedAt": "2020-12-09T16:59:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok did you make sure to have the Python 3.x Development libraries installed?",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-180289",
                          "updatedAt": "2023-04-03T14:35:01Z",
                          "publishedAt": "2020-12-09T17:02:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If they are already installed on the cluster for Python 3, then you can use that. If not you will need to either ask your administrator to install them, or install your own python locally (using conda is fairly easy)",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-180296",
                          "updatedAt": "2023-04-03T14:35:01Z",
                          "publishedAt": "2020-12-09T17:05:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "You could use module av to check what python modules are available on HPC. And then you could module load a python3 package.  Most of HPC systems should have such a package",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-190754",
                          "updatedAt": "2023-04-03T14:35:01Z",
                          "publishedAt": "2020-12-11T05:07:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Bala-1005"
                          },
                          "bodyText": "Thank you Fande and Guillaume. I couldnt find any python module available on our HPC. I am in communication with our system administrator about it. And hopefully I should be able to sort it out.\nThanks,\nBala",
                          "url": "https://github.com/idaholab/moose/discussions/16433#discussioncomment-194014",
                          "updatedAt": "2023-04-03T14:35:01Z",
                          "publishedAt": "2020-12-11T14:58:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Different results with different computer",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello,\nA good guy sent me his codes which could run well in his computer WSL and Ubuntu, but there is the converge problem in my computer Ubuntu.  I doubt whether there is a problem in the system setting, but examples provided by moose could converge well. Do you know why the same code couldn't run well in my computer???\nThe information is in the following:\n*** Warning, This code is deprecated and will be removed in future versions:\nThe parameter D_name is deprecated.\nThis parameter has been renamed to 'diffusivity', which is more mnemonic and more conducive to passing a number literal\n\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\nWarning: unable to write derivative cache file.\n\nFramework Information:\nMOOSE Version:           git commit bed0701af5 on 2020-10-02\nLibMesh Version:         a7ec74f58812bb1a26fda6340e920480ca5f3008\nPETSc Version:           3.13.3\nSLEPc Version:           3.13.3\nCurrent Time:            Fri Dec 11 09:16:23 2020\nExecutable Timestamp:    Fri Dec 11 09:15:40 2020\n\nParallelism:\n  Num Processors:          12\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   \n    Total:                 441\n    Local:                 49\n  Elems:                   \n    Total:                 400\n    Local:                 34\n  Num Subdomains:          1\n  Num Partitions:          12\n  Partitioner:             metis\n\nNonlinear System:\n  Num DOFs:                4410\n  Num Local DOFs:          490\n  Variables:               { \"c\" \"w\" \"c_cu\" \"c_imc\" \"c_sn\" \"eta_cu\" \"eta_imc1\" \"eta_imc2\" \"eta_sn\" \"pot\" \n                             } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                1241\n  Num Local DOFs:          117\n  Variables:               { \"f_density\" \"f_int\" } \"s\" \n  Finite Element Types:    \"MONOMIAL\" \"LAGRANGE\" \n  Approximation Orders:    \"CONSTANT\" \"FIRST\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             IterationAdaptiveDT\n  Solver Mode:             Preconditioned JFNK\n  MOOSE Preconditioner:    SMP\n\nLEGACY MODES ENABLED:\n This application uses the legacy material output option: material properties are output only on TIMESTEP_END, not INITIAL. To remove this message, set 'use_legacy_material_output' to false in this application. If there are gold output files that contain material property output for which output occurs on INITIAL, then these will generate diffs due to zero values being stored, and these tests should be re-golded.\n\n\n\n*** Warning ***\n/home/l/projects/anil/Anil2.i:387: unused parameter 'Kernels/CHBulk/cb'\n/home/l/projects/anil/Anil2.i:389: unused parameter 'Kernels/CHBulk/fb_name'\n/home/l/projects/anil/Anil2.i:391: unused parameter 'Kernels/CHBulk/h_name'\n\n\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+\n| time           | cu_area_h      | imc_area_h     | sn_area_h      | total_energy   |\n+----------------+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   3.009411e+04 |   1.243743e+04 |   4.746846e+04 |  -1.089891e+06 |\n+----------------+----------------+----------------+----------------+----------------+\n\n\nTime Step 1, time = 10000, dt = 10000\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\n  Linear solve did not converge due to DIVERGED_ITS iterations 50\nNonlinear solve did not converge due to DIVERGED_MAX_IT iterations 20\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nSolve failed, cutting timestep.",
          "url": "https://github.com/idaholab/moose/discussions/16464",
          "updatedAt": "2022-08-26T14:22:35Z",
          "publishedAt": "2020-12-11T01:33:02Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDid he send you the binaries or did you recompile on your computer?\nWas he using the same number of processors? Pre-conditioners can be less efficient with more processors.\nThose would be my guesses\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-190140",
                  "updatedAt": "2022-08-26T14:22:45Z",
                  "publishedAt": "2020-12-11T01:42:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "I have tried kinds of ways. Created a new application and recompile. Use different number of processors.\nHe sent me his .i file. Is this the binaries you mean?",
                          "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-190213",
                          "updatedAt": "2022-08-26T14:22:44Z",
                          "publishedAt": "2020-12-11T02:38:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Either way, running such a tiny problem on 12 cores is totally counterproductive. We recommend to keep the number of local DOFs at least at 20k.\nNonlinear System:\n  Num DOFs:                4410\n  Num Local DOFs:          490",
                          "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-190219",
                          "updatedAt": "2022-08-26T14:22:45Z",
                          "publishedAt": "2020-12-11T02:40:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Hello Daniel,\nI change the mesh from 20*20 to 200*200.\nDo you know what the problem is??? I tried create a new application, recompile, different cores....",
                          "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-190248",
                          "updatedAt": "2022-08-26T14:23:20Z",
                          "publishedAt": "2020-12-11T02:59:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The binaries are the executables and the shared libraries. They rarely transfer well from one system to another, without extra precautions.\nTransferring the input file should not be an issue.\nAs dschwen recommends, you should only be using a single processor for this problem.\nAre you using the same moose commit as your colleague?\nWhich application is this? Is it one of the examples?\nI am not familiar with this warning : \"Warning: unable to write derivative cache file.\"",
                          "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-190249",
                          "updatedAt": "2022-08-26T14:23:41Z",
                          "publishedAt": "2020-12-11T02:59:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Yeah, that warning comes from code that I wrote related to derivative parsed materials... I'll investigate. It should not influence the results, though.",
                          "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-190912",
                          "updatedAt": "2022-08-26T14:24:07Z",
                          "publishedAt": "2020-12-11T05:36:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Only the input file was transferred.\nIt still couldn't converge even using a single processor.\nI create a new application, -opt. And also try it with the input file from ex01 example. It run well except for some waring:\nLEGACY MODES ENABLED:\n This application uses the legacy material output option: material properties are output only on TIMESTEP_END, not INITIAL. To remove this message, set 'use_legacy_material_output' to false in this application. If there are gold output files that contain material property output for which output occurs on INITIAL, then these will generate diffs due to zero values being stored, and these tests should be re-golded.\n\n*** Warning ***\n/home/l/projects/anil/ex01_inputfile/ex01.i:40: unused parameter 'Executioner/file_base'",
                          "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-191018",
                          "updatedAt": "2022-08-26T14:24:19Z",
                          "publishedAt": "2020-12-11T06:27:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fdkong"
                  },
                  "bodyText": "@LiuPengPeter As @GiudGiud asked earlier, did you (and the good guy) used the same number of processors. The number of processors has a non-negligible  impact on the simulation convergence",
                  "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-190728",
                  "updatedAt": "2022-08-26T14:23:38Z",
                  "publishedAt": "2020-12-11T04:55:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "I will ask him. But I have tried 1, 3 5 and 12 processors.\nI add the linux command \"mpirun -np Y \" (Y is the number of processors) to run with multi processors.",
                          "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-191020",
                          "updatedAt": "2022-08-26T14:24:31Z",
                          "publishedAt": "2020-12-11T06:28:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "I recently ran into a similar issue on the hpc. I removed all the jit caches and it worked.",
                  "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-190961",
                  "updatedAt": "2022-08-26T14:24:31Z",
                  "publishedAt": "2020-12-11T06:01:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "I removed all the caches. But it still couldn't converge.",
                          "url": "https://github.com/idaholab/moose/discussions/16464#discussioncomment-191086",
                          "updatedAt": "2022-08-26T14:24:31Z",
                          "publishedAt": "2020-12-11T06:48:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Porous media sinks",
          "author": {
            "login": "MatiasCastilloH"
          },
          "bodyText": "Dear MOOSE,\nI am trying to perform a numerical model of groundwater extraction. I have a set up with several extraction wells and a river. The idea is to asses the interference between the wells (overlapping of well cones) and the interaction that they have with the river. Also, at some point, the level of the river increases and a contaminant is injected in it. Here, the objective is to asses whether the contaminant get into the pumped water by the wells.\nIs possible to perform such models with MOOSE?\nIf so, is it a correct/realistic description of the wells the \"point source sink\"? As, for example, the Theis example displayed on the groundwater models example page? Seems the most reasonable approach to simulate a cone and I also have external data on pumping rates so I can combine it with PorousFlowPointSourceFromPostprocessor.\nThanks and sorry for the simple question, I am new with MOOSE\nMatias Castillo",
          "url": "https://github.com/idaholab/moose/discussions/16423",
          "updatedAt": "2022-08-16T02:53:50Z",
          "publishedAt": "2020-12-08T16:51:41Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "permcody"
                  },
                  "bodyText": "Tag @WilkAndy",
                  "url": "https://github.com/idaholab/moose/discussions/16423#discussioncomment-163962",
                  "updatedAt": "2022-08-16T02:53:50Z",
                  "publishedAt": "2020-12-08T17:08:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "josebastiase"
                  },
                  "bodyText": "Hi Matias,\nSounds like a cool simulation! I think that is possible to simulate that with MOOSE. I\u2019m not sure if there are examples for contaminant transport though. Probably Andy can comment on that.\nRegarding your extraction well set up, as Maelle and Andy nicely demonstrated at the end of the 'groundwater examples'  is always better to use boreholes. Plus, is often good to document a Theis example since is useful as verification of a well-known problem, but be aware that in that case the aquifer is saturated so is not really a \u2018cone drawdown\u2019.\nSetting up a borehole in Porous Flow is quite simple, I suggest you to take a look at bh02.i and bh03.i tests here. Just be aware that you will have to set porepressure instead of fluxes in your MOOSE input file.\nCheers!\nJose",
                  "url": "https://github.com/idaholab/moose/discussions/16423#discussioncomment-166497",
                  "updatedAt": "2022-08-16T02:54:03Z",
                  "publishedAt": "2020-12-08T19:46:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Hi Matias,\nYes, this is exactly the sort of thing that can be done with PorousFlow.  I've run almost exactly this sort of simulation in the past (for me, the boreholes were pumping the contaminant, and the stream was receiving it).  As mentioned in the groundwater doco, setting up your mesh will turn out to be the most difficult thing.\nWhether you use just a single point for your well depends on the resolution of your problem.  You clearly don't need more than 1 point per finite element, since the finite element size dictates the resolution of the problem, but if your wells span multiple finite elements you'll probably want to model them using multiple points (just include more points in the borehole's geometry file).\nYes, you can simply use PorousFlowPointSourceFromPostprocessor and prescribe a pumping rate.  The only thing you have to be careful with is prescribing an unrealistically high pumping rate (compared with the aquifer hydraulic conductivity) and then the hydraulic heads or porepressures become unrealistically negative (corresponding to desaturation of the aquifer).\nYes, you can include contaminants: you will utilize the mass_fraction_vars input if you are using one of the PorousFlow Actions.  I suggest you start by reading this tutorial page:  https://mooseframework.inl.gov/modules/porous_flow/tutorial_06.html .    Then, you need to read the \"numerical diffusion\" page: https://mooseframework.inl.gov/modules/porous_flow/numerical_diffusion.html  .   Perhaps you don't need to understand everything on that page, but you certainly need to appreciate the concept of numerical diffusion, because it is likely to impact your \"break-through\" times and your interpretation of your results.  That knowledge will be valuable, even if you judge that no stabilization is needed for your problem (I would start with no stabilization and see if your results are adequate, since that's the easiest).\nRegarding the contaminants, if you issue this command in the moose/porous_flow directory\nfind . -name \"*.i\" | xargs grep mass_fraction_vars\n\nyou will see a lot of tests that you can follow, in addition to the ones mentioned in the above doco pages.\nFinally, are you willing to share your results?  It's hard to tell, but they might be a useful addition to the \"Groundwater Modelling\" page that Maelle and I wrote.\nandy",
                  "url": "https://github.com/idaholab/moose/discussions/16423#discussioncomment-182010",
                  "updatedAt": "2022-08-16T02:54:03Z",
                  "publishedAt": "2020-12-09T21:24:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "MatiasCastilloH"
                  },
                  "bodyText": "Hi,\n@josebastiase\nThanks for your reply and for pointing out that a cone drawdown doesn't occur (I'm still getting use to the concept of porepressure). Thanks also for the borehole examples, that's really helpful! Saludos \ud83d\udc4d\n@WilkAndy\nI would be happy to share the results plus the model with the community once is finished. I still need to generate a realistic mesh, but for now I just have a quadratic one with three layers, that makes the job.\nThe first step would be running a steady state simulation with the pumps and the river and asses the interaction among them. As I understand, there are two options to set the wells:\n1.- PorousFlowPointSourceFromPostprocessor - I can set up flows from external file but is not as realistic as a borehole. Further, it has to be set at a node of the mesh.\n2.- PorousFlowPeacemanBorehole - More realistic and it can be propositioned anywhere in the mesh. However, there is not direct way to control the pumped flow. This has to be tuned by setting a 'bottom' porepressure.\nIs that correct?\nTo asses the interaction among wells, how can I obtain the capture zone of the wells (streamlines)?\nThanks for the quick replies!\nMatias Castillo",
                  "url": "https://github.com/idaholab/moose/discussions/16423#discussioncomment-185464",
                  "updatedAt": "2022-08-16T02:54:43Z",
                  "publishedAt": "2020-12-10T11:50:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "What you write about PorousFlowPeacemanBorehole is correct.\nWhat you write about PorousFlowPointSourceFromPostprocessor is not really correct.  You may position it anywhere in the mesh, and it withdraws the amount of water specified in the postprocessor.  You just must be careful with interpreting the results.  Let's say you position the borehole points so they lie directly in the middle of finite elements.  Then the water withdrawal will occur equally from the water at each of the nodes of those finite elements: it's as if you had an enormous element-sized borehole that abstracts water.  This is not wrong - it's just a reflection of the fact that your resolution in a finite-element model is set by the element size.  On the other hand, if you position the borehole points so they lie exactly on nodes then the water withdrawal will occur from those nodes only.  This does not make your simulation significantly more accurate, since your resolution is still set by the element size - it's just easier to convince yourself that the results are actually more accurate!\nRegarding the streamlines - you could use a PorousFlowDarcyVelocityComponent AuxVariable and plot the flow directions in paraview.",
                  "url": "https://github.com/idaholab/moose/discussions/16423#discussioncomment-188985",
                  "updatedAt": "2022-08-16T02:54:44Z",
                  "publishedAt": "2020-12-10T21:19:22Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error of ~/anaconda3/envs/moose/libmesh/contrib/bin/libtool: 1: /usr/bin/sed: not found",
          "author": {
            "login": "yw5aj"
          },
          "bodyText": "Dear all,\nSorry about this naive question...\nEverything was working fine until earlier today that I updated MOOSE based on this page. I made sure that moose-libmesh is up-to-date, re-pulled the github repo of moose, and then tried to run make cloberrall.\nBut then I got the message of /anaconda3/envs/moose/libmesh/contrib/bin/libtool: 1: /usr/bin/sed: not found. Could anyone please help me out a bit?\nBest,\nShawn",
          "url": "https://github.com/idaholab/moose/discussions/16123",
          "updatedAt": "2022-08-03T23:44:33Z",
          "publishedAt": "2020-11-09T19:51:13Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jessecarterMOOSE"
                  },
                  "bodyText": "Glad to hear I'm not the only one with this problem! @lindsayad @milljm did you ever figure out what was going on? I ended up just making a soft link.",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-125277",
                  "updatedAt": "2022-08-29T20:30:47Z",
                  "publishedAt": "2020-11-09T20:16:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "No I don't have much of a clue on this one",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-125286",
                          "updatedAt": "2022-08-29T20:31:05Z",
                          "publishedAt": "2020-11-09T20:30:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I am not sure why libtool would hard code a path to sed like that. If it's Anaconda, that would be even stranger (implying that it would go about mucking with packages like this). I don't think it's libMesh's fault as well, as this is a 'contrib'. The other thing is, this wasn't an issue until recently. The Conda recipes creating moose-libmesh have not changed since it's inception.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-125872",
                          "updatedAt": "2022-08-29T20:31:05Z",
                          "publishedAt": "2020-11-10T17:30:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "@cticenhour reported this error happening on a few of our build machines (but then stopped). I suspect it occurred when that build machine found an issue with conda, and attempted to build the environment from scratch (such as what would happen with a new-user install).\nI'll take some time today and try and reproduce the issue.\nEdit: I can replicate this error... I'll look into it.",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128779",
                  "updatedAt": "2022-08-29T20:31:07Z",
                  "publishedAt": "2020-11-13T15:26:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "It's definitely still happening....I just haven't been able to get back to this (too many meetings!). Let me know how I can help (or provide another box to test something on)",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128813",
                          "updatedAt": "2022-08-29T20:31:09Z",
                          "publishedAt": "2020-11-13T16:19:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Last data point I have was 10 hours ago on mobuild31 for Freya.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128814",
                          "updatedAt": "2022-08-29T20:31:09Z",
                          "publishedAt": "2020-11-13T16:20:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "It looks like libmesh/contrib/bin/libtool is generated during ./configure. And so is recording where it found sed at the time. Unfortunately, not all machines have sed in the same place. Not exactly sure why we didn't see this error immediately after the first version of moose-libmesh rolled out the door.\nWhat I think we need to do, is include sed as a requirement when building/running libMesh. That way when moose-libmesh is installed, the dependency sed will also be installed, and hopefully be available in the same location as it was during build. Conda does some magical things when it prepares a package... hopefully it corrects more than just link lines (libtool is a script, and I am not sure Conda sniffs out paths inside scripts when it corrects/prepares them for redistribution)",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128905",
                  "updatedAt": "2022-08-29T20:31:10Z",
                  "publishedAt": "2020-11-13T18:44:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "laumiulun"
                  },
                  "bodyText": "softlink kind of bandage solve the problem, but it keep showing the message:\n'libtool:   error: ignoring unknown tag CXX'\nIt still finishes compiling and the test run fine.",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128922",
                  "updatedAt": "2022-08-29T20:31:12Z",
                  "publishedAt": "2020-11-13T19:27:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "When I build moose-libmesh and set a dependency on sed, it works. So I will commit a change to moose/conda/libmesh/meta.yaml, unless @lindsayad has a better idea,",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128939",
                  "updatedAt": "2022-08-29T20:31:16Z",
                  "publishedAt": "2020-11-13T20:02:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "scratch that. It works. But I am spammed by a new message:\nlibtool:   error: ignoring unknown tag CXX\n\nStill investigating.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128941",
                          "updatedAt": "2022-08-29T20:31:17Z",
                          "publishedAt": "2020-11-13T20:08:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I would like to try using a conda/system provided libtool per the slack discussion, but that would require some changes in the MOOSE makefiles",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128958",
                          "updatedAt": "2022-08-29T20:31:17Z",
                          "publishedAt": "2020-11-13T20:49:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laumiulun"
                          },
                          "bodyText": "I didn't encounter this issue if I started from scratch in a VM, only when I am updating moose & conda. Nuking the conda environment didn't help either.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-128967",
                          "updatedAt": "2022-08-29T20:31:18Z",
                          "publishedAt": "2020-11-13T20:58:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "A couple of work-arounds:\nDowngrade to the previous version of moose-libmesh:\nconda install moose-libmesh=2020.10.05\nOr build your own libMesh:\nconda deactivate\nconda create -n mylibmesh moose-petsc moose-tools\nconda activate mylibmesh # use this instead of 'moose' for now...\ncd moose\nexport MOOSE_JOBS=8   # what ever core count you use\nscripts/update_and_rebuild_libmesh.sh",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-131882",
                  "updatedAt": "2022-08-29T20:31:18Z",
                  "publishedAt": "2020-11-17T18:52:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "After downgrading libmesh, would one need to downgrade moose accordingly? If so what hash?",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-131897",
                          "updatedAt": "2023-08-10T13:43:38Z",
                          "publishedAt": "2020-11-17T19:09:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I can't really provide a specific hash. As it all depends on what branch you are operating on. What I can say is that if you restricted your checkouts to within the same time frame of 2020-10-05 through 2020-11-03 (the dates for which the previous moose-libmesh package was vetted for) you should be safe.\nThe ideal work-around is to build libMesh yourself however, thus always marching forward.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-131975",
                          "updatedAt": "2023-08-10T13:43:38Z",
                          "publishedAt": "2020-11-17T20:35:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Yeah I figured. I just wasn't sure if the newest moose works with an older libmesh.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-132026",
                          "updatedAt": "2023-08-10T13:44:01Z",
                          "publishedAt": "2020-11-17T21:24:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Hard to say. Our MOOSE-libMesh integration is typically pretty tight. My only way of knowing would be to go try it. I'd put it at about 50% odds of being successful. Sometimes I'm aware of backwards incompatible changes in libMesh...and I think we had one of those not this libMesh update but the one prior. So you might be good to go...",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-132045",
                          "updatedAt": "2022-08-29T20:31:25Z",
                          "publishedAt": "2020-11-17T21:49:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Hi,\nFYI ...\nYesterday I found that manual installation (petsc and libmesh) worked in the end --> this was my \"easy\" work-around after a full half day of trying.\nI'm currently testing the second work-around as per @milljm post (my bad not having read it before). One thing I noticed is that in order to compile libmesh (despite activating petsc and the moose utils from the env in conda), I must set all CPPFLAGS, CXXFLAGS, CFLAGS, FFLAGS. Before I was having errors related to the metaphysicl package.\nSo far configuring libmesh seems to run (not yet finished though) and will see if moose also compiles fine.\nThanks again for the support,\nMauro",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-132368",
                          "updatedAt": "2022-08-29T20:31:39Z",
                          "publishedAt": "2020-11-18T09:52:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "quick update, it did not work. Will investigate it further",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-132415",
                          "updatedAt": "2022-08-29T20:31:58Z",
                          "publishedAt": "2020-11-18T10:25:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "solved the issue (conflicting boost libraries). Moose compiled fine by configuring libmesh only as well.\nSorry for the multiple posts.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-132452",
                          "updatedAt": "2022-08-29T20:31:58Z",
                          "publishedAt": "2020-11-18T11:48:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "That was interesting that you had to set all those CFLAGS... Apologies about the delayed response. I think my GitHub account and email notifications are now set correctly.\nCan you post the error which occurred during your attempt to build libMesh?",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-137601",
                          "updatedAt": "2022-08-29T20:32:02Z",
                          "publishedAt": "2020-11-24T14:41:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Ok I've opened an issue for this at #16232",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-132197",
                  "updatedAt": "2022-08-29T20:32:02Z",
                  "publishedAt": "2020-11-18T03:24:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "I built moose-libmesh manually and have made it available on Anaconda. Please remove moose-libmesh (if you're using it) and re-install the environment (after clearing your download cache to make sure you get the latest version from anaconda).\nconda deactivate   # make sure you are not using moose\nconda env remove -n moose --yes\nconda clean --all --yes\nconda create -n moose moose-libmesh moose-tools\nEdit: When I originally posted this, it didn't work. I have since corrected that error (verified on Ubuntu 18)",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-153952",
                  "updatedAt": "2022-08-29T20:32:03Z",
                  "publishedAt": "2020-12-07T17:07:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "tfc1992"
                          },
                          "bodyText": "I built moose-libmesh manually and have made it available on Anaconda. Please remove moose-libmesh (if you're using it) and re-install the environment (after clearing your download cache to make sure you get the latest version from anaconda).\nconda deactivate   # make sure you are not using moose\nconda env remove -n moose --yes\nconda clean --all --yes\nconda create -n moose moose-libmesh moose-tools\n\nI tried these commands, but still failed to compile. what am I missing?",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162872",
                          "updatedAt": "2020-12-08T06:04:32Z",
                          "publishedAt": "2020-12-08T06:04:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Compiling moose I assume. Same error message as up top?",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162883",
                          "updatedAt": "2020-12-08T06:26:57Z",
                          "publishedAt": "2020-12-08T06:26:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tfc1992"
                          },
                          "bodyText": "Compiling moose I assume. Same error message as up top?\nyes, the same error message.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162885",
                          "updatedAt": "2020-12-08T06:29:10Z",
                          "publishedAt": "2020-12-08T06:29:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tfc1992"
                          },
                          "bodyText": "Any suggestions to solve this issue?",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162886",
                          "updatedAt": "2020-12-08T06:32:32Z",
                          "publishedAt": "2020-12-08T06:32:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Go for the build your own libmesh solution for now. It wont stop you from going back the next time we update moose's version of libmesh",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162893",
                          "updatedAt": "2020-12-08T06:43:30Z",
                          "publishedAt": "2020-12-08T06:43:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tfc1992"
                          },
                          "bodyText": "Ok, thanks a lot.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162897",
                          "updatedAt": "2022-08-29T20:32:06Z",
                          "publishedAt": "2020-12-08T06:50:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "@tfc1992 What make and version of Linux are you using by chance?",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162923",
                          "updatedAt": "2022-08-29T20:32:06Z",
                          "publishedAt": "2020-12-08T07:54:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tfc1992"
                          },
                          "bodyText": "@milljm  make v 4.1 and ubuntu 18.01",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162925",
                          "updatedAt": "2022-08-29T20:32:07Z",
                          "publishedAt": "2020-12-08T08:00:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162926",
                          "updatedAt": "2022-08-29T20:32:07Z",
                          "publishedAt": "2020-12-08T08:04:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I am building another version of moose-libmesh at the moment. I am going to just hack my way through it as suggested by @dschwen. I'll post again when it's complete.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162931",
                          "updatedAt": "2022-08-29T20:32:09Z",
                          "publishedAt": "2020-12-08T08:23:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "tfc1992"
                  },
                  "bodyText": "Many thanks. I am a new moose user.",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162944",
                  "updatedAt": "2022-08-29T20:32:09Z",
                  "publishedAt": "2020-12-08T08:39:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "okay, finished... if you would perform the following and try again:\nconda update --all\nThis is assuming you have not already build your own version of libMesh as suggested by @GiudGiud.",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-162955",
                          "updatedAt": "2022-08-29T20:32:10Z",
                          "publishedAt": "2020-12-08T08:58:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tfc1992"
                          },
                          "bodyText": "Wow, great, the compilation was successful, thank you very much! @milljm",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-163129",
                          "updatedAt": "2022-08-29T20:32:10Z",
                          "publishedAt": "2020-12-08T12:25:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Welcome!",
                          "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-163374",
                          "updatedAt": "2022-08-29T20:32:11Z",
                          "publishedAt": "2020-12-08T14:29:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "For those still receiving this error, please perform an update to get the latest moose-libmesh package:\nconda update --all",
                  "url": "https://github.com/idaholab/moose/discussions/16123#discussioncomment-163381",
                  "updatedAt": "2022-08-29T20:32:12Z",
                  "publishedAt": "2020-12-08T14:33:12Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Applying nodal forcing function",
          "author": {
            "login": "nathan-miller-LANL"
          },
          "bodyText": "Hi All,\nI have a forcing function that I know at the nodes but not at the quadrature points. I've tried to apply this function by using a NodalKernal but it appears that the value I've set gets added for as many elements are associated with any given node. Are there any examples of adding values directly to the residual at a given node without this duplication?\nThanks,\nNathan",
          "url": "https://github.com/idaholab/moose/discussions/16227",
          "updatedAt": "2022-09-20T14:01:02Z",
          "publishedAt": "2020-11-17T18:38:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "@lindsayad Can you help with this?",
                  "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-132830",
                  "updatedAt": "2022-09-20T14:01:03Z",
                  "publishedAt": "2020-11-18T16:44:57Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "nathan-miller-LANL"
                          },
                          "bodyText": "I really need some help on this one since the inability to apply forces (this is in the concept of a solid mechanics simulation) to nodes is a showstopper.",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-133071",
                          "updatedAt": "2022-09-20T14:01:03Z",
                          "publishedAt": "2020-11-18T20:36:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "the value I've set gets added for as many elements are associated with any given node\n\nthis would definitely be unexpected behavior. Your residual from your NodalKernel should just sum straight into the residual for the Lagrange DOF at the node (presuming you're using a Lagrange basis). See this code:\nvoid\nNodalKernel::computeResidual()\n{\n  if (_var.isNodalDefined())\n  {\n    const dof_id_type & dof_idx = _var.nodalDofIndex();\n    _qp = 0;\n    Real res = computeQpResidual();\n    res *= _var.scalingFactor();\n    _assembly.cacheResidual(dof_idx, res, _vector_tags);\nNo association with element connectivity there. If you can show us a minimal working example with this buggy behavior, then we would definitely fix it.",
                  "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-133184",
                  "updatedAt": "2022-09-20T14:01:12Z",
                  "publishedAt": "2020-11-18T23:25:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "nathan-miller-LANL"
                          },
                          "bodyText": "I'm trying to figure out the process for me to send out a minimum example (the rules here can be a bit arcane) but I have found what I believe to be two bugs in MOOSE.\n\nWhen I use a simple NodalKernel on a mesh that MOOSE generates there is no problem but when I use an Exodus mesh that has several different blocks defined and then apply the NodalKernel over the entire domain the NodalKernel values are duplicated on nodes that are shared between the different blocks.\nI have a 3D stress-strain problem. When I use a NodalKernel in the 3 (Z) direction and also define a preset DirichletBC to be zero on some of the faces (to define a uniaxial stress problem) the residuals reported on the X and Y faces don't go to zero even though the problem converges and the non-DirichletBC faces do go to zero as expected. I've noticed this both with TensorMechanics and with my own kernels in Tardigrade.",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-134829",
                          "updatedAt": "2022-09-20T14:01:39Z",
                          "publishedAt": "2020-11-20T16:20:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "These more specific issues I could definitely believe. We have limited money allocated for general user support, unfortunately, so if you can send those inputs that would be fantastic. I could definitely draw up an input myself for testing 1. but that'll take some of that allotment.",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-134877",
                          "updatedAt": "2022-09-20T14:01:38Z",
                          "publishedAt": "2020-11-20T17:14:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Oh wow ok it took me under 30 seconds to see that we would duplicate NodalKernel computation on nodes shared between multiple subdomains:\n  const std::set<SubdomainID> & block_ids = _aux_sys.mesh().getNodeBlockIds(*node);\n  for (const auto & block : block_ids)\n    if (_nkernel_warehouse->hasActiveBlockObjects(block, _tid))\n    {\n      std::set<TagID> needed_fe_var_vector_tags;\n      _nkernel_warehouse->updateBlockFEVariableCoupledVectorTagDependency(\n          block, needed_fe_var_vector_tags, _tid);\n      _fe_problem.setActiveFEVariableCoupleableVectorTags(needed_fe_var_vector_tags, _tid);\n\n      const auto & objects = _nkernel_warehouse->getActiveBlockObjects(block, _tid);\n      for (const auto & nodal_kernel : objects)\n        nodal_kernel->computeResidual();\n    }\nOk you don't have to worry about sending an input for 1. I'll draw up a test and fix that one today",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-134884",
                          "updatedAt": "2022-09-20T14:01:39Z",
                          "publishedAt": "2020-11-20T17:17:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Issue opened here: #16265",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-134891",
                          "updatedAt": "2022-09-20T14:01:45Z",
                          "publishedAt": "2020-11-20T17:22:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nathan-miller-LANL"
                          },
                          "bodyText": "@lindsayad Great! I'll try to get the second minimal example out as soon as I can.",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-134913",
                          "updatedAt": "2022-09-20T14:01:45Z",
                          "publishedAt": "2020-11-20T17:46:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "hopefully closed by #16269",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-135073",
                          "updatedAt": "2022-09-20T14:01:45Z",
                          "publishedAt": "2020-11-20T20:50:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nathan-miller-LANL"
                          },
                          "bodyText": "Just so this doesn't fall off the table, I'm working to get approval to send out the example for the second bug. I hope to have that early next week due to the holiday.\n@lindsayad Do you have an idea for when the fix for the first issue will be incorporated into MOOSE?",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-138660",
                          "updatedAt": "2022-09-20T14:01:46Z",
                          "publishedAt": "2020-11-25T14:54:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Potentially today",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-138777",
                          "updatedAt": "2022-09-20T14:01:46Z",
                          "publishedAt": "2020-11-25T16:56:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Ok yea #16269 just got merged",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-139250",
                          "updatedAt": "2022-09-20T14:01:46Z",
                          "publishedAt": "2020-11-26T08:37:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nathan-miller-LANL"
                          },
                          "bodyText": "@lindsayad Okay, I've attached the files which replicate the second error on my system. For the record, I updated libmesh and MOOSE this morning and I'm running on master. I did notice that the duplicate problem seems to be gone (thanks for that) but I still notice the error in residual calculation for the nodes which have a preset DirichletBC when a forcing function is being applied to the residual.\nI'm using a uniaxial stress example only so that I can be sure of what the answer should be. I don't think this is a problem with tensor mechanics since I have observed this behavior with my own kernels in similar situations. The errors can be observed for any node on the x, y, or z=0 face. I expect to see the value of zero for the applied force (AppliedForce) in the x and y directions (FInternal_1 and FInternal_2) on every node and equal to the negative force in the z direction (FInternal_3) but this is not the case for the BC nodes. It seems like the residual is not updating for nodes on the boundaries?\nMinimumExample.zip",
                          "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-148036",
                          "updatedAt": "2022-09-20T14:01:18Z",
                          "publishedAt": "2020-12-05T23:12:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Going to consider #16269 to be the answer here",
                  "url": "https://github.com/idaholab/moose/discussions/16227#discussioncomment-187223",
                  "updatedAt": "2022-09-20T14:01:55Z",
                  "publishedAt": "2020-12-10T16:26:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "XFEM Paraview Plugin installation",
          "author": {
            "login": "rksin8"
          },
          "bodyText": "Hi,\nDo we still need to install the \"XFEM Paraview Plugin\" manually along with Paraview source code? As per discussion here, it seems the plugin is now part of ParaView.\nThanks,\nRegards,\nRanjeet",
          "url": "https://github.com/idaholab/moose/discussions/16426",
          "updatedAt": "2023-11-09T09:31:12Z",
          "publishedAt": "2020-12-08T22:54:34Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "Yes, you are correct. The plugin is part of Paraview, but you need to Load MooseXfemClip plugin in the Plugin Manager.",
                  "url": "https://github.com/idaholab/moose/discussions/16426#discussioncomment-179967",
                  "updatedAt": "2023-11-09T09:31:12Z",
                  "publishedAt": "2020-12-09T16:25:34Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "rksin8"
                          },
                          "bodyText": "Thank you for your reply!  Successfully loaded MooseXfemClip plugin.",
                          "url": "https://github.com/idaholab/moose/discussions/16426#discussioncomment-186530",
                          "updatedAt": "2023-11-09T09:31:12Z",
                          "publishedAt": "2020-12-10T14:42:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Syntax of the input files",
          "author": {
            "login": "EtienneSwerim"
          },
          "bodyText": "Hi!\nSorry for this (almost embarrassing) beginner question: in the input files, why are sometimes variables (and kernels) simply -like in the workshop- declared as:\n[Variables]\n[myVar]\n[]\nand sometimes as:\n[Variables]\n[./myVar]\n[../]\n[]\nThanks!\nEtienne",
          "url": "https://github.com/idaholab/moose/discussions/16451",
          "updatedAt": "2020-12-10T15:17:07Z",
          "publishedAt": "2020-12-10T10:25:06Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Hi Etienne, and welcome to MOOSE.   Good question.  Either way is fine.  The first way the modern syntax, while the second way is old-fashioned.\nandy",
                  "url": "https://github.com/idaholab/moose/discussions/16451#discussioncomment-185019",
                  "updatedAt": "2020-12-10T10:36:41Z",
                  "publishedAt": "2020-12-10T10:36:26Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "EtienneSwerim"
                  },
                  "bodyText": "Hi Andy,\nThank you! OK, so the two ways are completely identical. I thought there was something about under-directories that I had missed, but no. Good to know!\nEtienne",
                  "url": "https://github.com/idaholab/moose/discussions/16451#discussioncomment-185361",
                  "updatedAt": "2020-12-10T11:40:29Z",
                  "publishedAt": "2020-12-10T11:40:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}