{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wNS0xM1QxNDo0NzozNS0wNTowMM4ATjcs"
    },
    "edges": [
      {
        "node": {
          "title": "Why not convergence",
          "author": {
            "login": "Nuwanted"
          },
          "bodyText": "Dear MOOSE expert,\nRecently I have been studying the effect of grain orientation on pore drift in polycrystals. In the simulation, when the grain boundary migration coefficient Mgb is 0, the calculation can converge, but when it is not 0, the calculation cannot converge in the first step. As for the grain orientation, I modified it according to kobyashi's file. The following is my code. I would like to know whether this is a problem set in the anisotropic module part.\n1.txt",
          "url": "https://github.com/idaholab/moose/discussions/24386",
          "updatedAt": "2023-05-16T13:21:15Z",
          "publishedAt": "2023-05-16T13:21:15Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "PorousFlow: Convergence problem",
          "author": {
            "login": "sinaomrani96"
          },
          "bodyText": "Dear all,\nHope you are doing well.\nI wanted to convert an example of flow through fractured media from 1-phase (water+tracer) into a 2-phase (water+CO2) problem. Unfortunately, I have convergence issue in linear solver. I followed various instructions and changing the preconditioning but still no improvement. Here is the log of convergence with options below which is advised on PETSc website for determining condition number of the matrix:\n-pc_type none -ksp_type gmres -ksp_monitor_singular_value -ksp_gmres_restart 1000\n\nSo it seems it is a ill-condition matrix but do not know why and nothing seems to help. I appreciate your help on this.\nAlso here is the input file based on the example:\nhttps://github.com/sinaomrani96/Fracture/tree/main\nTime Step 0, time = 0\n\nTime Step 1, time = 1, dt = 1\n 0 Nonlinear |R| = 3.480331e-07\n    |residual|_2 of individual variables:\n                        pp:  1.00779e-13\n                        sat: 3.48033e-07\n      0 Linear |R| = 3.480331e-07\n    0 KSP Residual norm 3.480331261471e-07 % max 1.000000000000e+00 min 1.000000000000e+00 max/min 1.000000000000e+00\n      1 Linear |R| = 3.480331e-07\n    1 KSP Residual norm 3.480331261471e-07 % max 1.052019939202e+08 min 1.052019939202e+08 max/min 1.000000000000e+00\n      2 Linear |R| = 3.480331e-07\n    2 KSP Residual norm 3.480331261471e-07 % max 1.052019939202e+08 min 8.568223196557e-05 max/min 1.227815750206e+12\n      3 Linear |R| = 3.480331e-07\n    3 KSP Residual norm 3.480331261471e-07 % max 1.052019939202e+08 min 8.423199255803e-05 max/min 1.248955304574e+12\n      4 Linear |R| = 3.480331e-07\n    4 KSP Residual norm 3.480331261463e-07 % max 1.052019939202e+08 min 5.622449586431e-06 max/min 1.871106042001e+13\n      5 Linear |R| = 3.480331e-07\n    5 KSP Residual norm 3.480331261463e-07 % max 1.052019939202e+08 min 5.598175091163e-06 max/min 1.879219427885e+13\n      6 Linear |R| = 3.480331e-07\n    6 KSP Residual norm 3.480331256075e-07 % max 1.052019939202e+08 min 2.129195344834e-07 max/min 4.940927293280e+14\n      7 Linear |R| = 3.480331e-07\n    7 KSP Residual norm 3.480331250125e-07 % max 1.052019939202e+08 min 1.468415489804e-07 max/min 7.164320633407e+14\n      8 Linear |R| = 3.480331e-07\n    8 KSP Residual norm 3.480331233139e-07 % max 1.052019939202e+08 min 9.292115168725e-08 max/min 1.132164119901e+15\n      9 Linear |R| = 3.480323e-07\n    9 KSP Residual norm 3.480323148637e-07 % max 1.052019939202e+08 min 5.491093059080e-09 max/min 1.915866163408e+16\n     10 Linear |R| = 3.480323e-07\n   10 KSP Residual norm 3.480323075004e-07 % max 1.052019939202e+08 min 5.466339135247e-09 max/min 1.924542025610e+16\n     11 Linear |R| = 3.475345e-07\n   11 KSP Residual norm 3.475345177108e-07 % max 1.052019939202e+08 min 2.215740374049e-10 max/min 4.747938664308e+17\n     12 Linear |R| = 3.455605e-07\n   12 KSP Residual norm 3.455604508601e-07 % max 1.052019939202e+08 min 9.963964860885e-11 max/min 1.055824617900e+18\n     13 Linear |R| = 3.450964e-07\n   13 KSP Residual norm 3.450963848848e-07 % max 1.052019939202e+08 min 9.145936460488e-11 max/min 1.150259400715e+18\n     14 Linear |R| = 2.942476e-07\n   14 KSP Residual norm 2.942475764518e-07 % max 1.052019939202e+08 min 2.220102672717e-11 max/min 4.738609399151e+18\n     15 Linear |R| = 2.821310e-07\n   15 KSP Residual norm 2.821309547099e-07 % max 1.052019939202e+08 min 2.024844007557e-11 max/min 5.195560424779e+18\n     16 Linear |R| = 2.631171e-07\n   16 KSP Residual norm 2.631170500106e-07 % max 1.052019939202e+08 min 1.811337162382e-11 max/min 5.807974136732e+18\n     17 Linear |R| = 2.403752e-07\n   17 KSP Residual norm 2.403751953924e-07 % max 1.052019939202e+08 min 1.639478966905e-11 max/min 6.416794362345e+18\n     18 Linear |R| = 2.361593e-07\n   18 KSP Residual norm 2.361593061440e-07 % max 1.052019939202e+08 min 1.614083907036e-11 max/min 6.517752482483e+18\n     19 Linear |R| = 2.229293e-07\n   19 KSP Residual norm 2.229292657910e-07 % max 1.052019939202e+08 min 1.543935301054e-11 max/min 6.813886167920e+18\n     20 Linear |R| = 2.089479e-07\n   20 KSP Residual norm 2.089478676019e-07 % max 1.052019939202e+08 min 1.482543412833e-11 max/min 7.096048116336e+18\n     21 Linear |R| = 1.986148e-07\n   21 KSP Residual norm 1.986148265740e-07 % max 1.052019939202e+08 min 1.443817999279e-11 max/min 7.286375012135e+18\n     22 Linear |R| = 1.942826e-07\n   22 KSP Residual norm 1.942825645143e-07 % max 1.052019939202e+08 min 1.429005660374e-11 max/min 7.361901834078e+18\n     23 Linear |R| = 1.893130e-07\n   23 KSP Residual norm 1.893130489736e-07 % max 1.052019939202e+08 min 1.412944882795e-11 max/min 7.445583702605e+18\n     24 Linear |R| = 1.819915e-07\n   24 KSP Residual norm 1.819914936107e-07 % max 1.052019939202e+08 min 1.390950774479e-11 max/min 7.563315384729e+18\n     25 Linear |R| = 1.751653e-07\n   25 KSP Residual norm 1.751652821219e-07 % max 1.052019939202e+08 min 1.372075132798e-11 max/min 7.667363936963e+18\n     26 Linear |R| = 1.690068e-07\n   26 KSP Residual norm 1.690068401710e-07 % max 1.052019939202e+08 min 1.356275087219e-11 max/min 7.756685565600e+18\n     27 Linear |R| = 1.634555e-07\n   27 KSP Residual norm 1.634554988184e-07 % max 1.052019939202e+08 min 1.342952778340e-11 max/min 7.833633141608e+18\n     28 Linear |R| = 1.584115e-07\n   28 KSP Residual norm 1.584115343163e-07 % max 1.052019939202e+08 min 1.331552540388e-11 max/min 7.900701679372e+18\n     29 Linear |R| = 1.538102e-07\n   29 KSP Residual norm 1.538101580565e-07 % max 1.052019939202e+08 min 1.321703103762e-11 max/min 7.959578336520e+18\n     30 Linear |R| = 1.495844e-07\n   30 KSP Residual norm 1.495844222762e-07 % max 1.052019939202e+08 min 1.313095062651e-11 max/min 8.011757633735e+18\n     31 Linear |R| = 1.456900e-07\n   31 KSP Residual norm 1.456900336137e-07 % max 1.052019939202e+08 min 1.305517021770e-11 max/min 8.058262907792e+18\n     32 Linear |R| = 1.420838e-07\n   32 KSP Residual norm 1.420837586463e-07 % max 1.052019939202e+08 min 1.298789211280e-11 max/min 8.100005220744e+18\n     33 Linear |R| = 1.387331e-07\n   33 KSP Residual norm 1.387330571799e-07 % max 1.052019939202e+08 min 1.292776663663e-11 max/min 8.137677363549e+18\n     34 Linear |R| = 1.356085e-07\n   34 KSP Residual norm 1.356085388741e-07 % max 1.052019939202e+08 min 1.287373005831e-11 max/min 8.171834693103e+18\n     35 Linear |R| = 1.326861e-07\n   35 KSP Residual norm 1.326861288213e-07 % max 1.052019939202e+08 min 1.282487326967e-11 max/min 8.202965573858e+18\n     36 Linear |R| = 1.299448e-07\n   36 KSP Residual norm 1.299448272386e-07 % max 1.052019939202e+08 min 1.278050597202e-11 max/min 8.231442021972e+18\n     37 Linear |R| = 1.273667e-07\n   37 KSP Residual norm 1.273667131232e-07 % max 1.052019939202e+08 min 1.274002922569e-11 max/min 8.257594394528e+18\n     38 Linear |R| = 1.249362e-07\n   38 KSP Residual norm 1.249361969260e-07 % max 1.052019939202e+08 min 1.270295508808e-11 max/min 8.281694549870e+18\n     39 Linear |R| = 1.226397e-07\n   39 KSP Residual norm 1.226397177586e-07 % max 1.052019939202e+08 min 1.266888440699e-11 max/min 8.303966674615e+18\n     40 Linear |R| = 1.204654e-07\n   40 KSP Residual norm 1.204653903992e-07 % max 1.052019939202e+08 min 1.263742815208e-11 max/min 8.324636362254e+18\n     41 Linear |R| = 1.184028e-07\n   41 KSP Residual norm 1.184027567925e-07 % max 1.052019939202e+08 min 1.260831797368e-11 max/min 8.343856344656e+18\n     42 Linear |R| = 1.164426e-07\n   42 KSP Residual norm 1.164425702770e-07 % max 1.052019939202e+08 min 1.258131693098e-11 max/min 8.361763279417e+18\n     43 Linear |R| = 1.145766e-07\n   43 KSP Residual norm 1.145766217681e-07 % max 1.052019939202e+08 min 1.255619414055e-11 max/min 8.378493733258e+18\n     44 Linear |R| = 1.127976e-07\n   44 KSP Residual norm 1.127975944751e-07 % max 1.052019939202e+08 min 1.253274803786e-11 max/min 8.394168110809e+18\n     45 Linear |R| = 1.110989e-07\n   45 KSP Residual norm 1.110989430166e-07 % max 1.052019939202e+08 min 1.251081069586e-11 max/min 8.408887039992e+18\n     46 Linear |R| = 1.094748e-07\n   46 KSP Residual norm 1.094747918913e-07 % max 1.052019939202e+08 min 1.249027546781e-11 max/min 8.422712068383e+18\n     47 Linear |R| = 1.079198e-07\n   47 KSP Residual norm 1.079198498374e-07 % max 1.052019939202e+08 min 1.247096890817e-11 max/min 8.435751439591e+18\n     48 Linear |R| = 1.064293e-07\n   48 KSP Residual norm 1.064293371996e-07 % max 1.052019939202e+08 min 1.245279419754e-11 max/min 8.448063322281e+18\n     49 Linear |R| = 1.049989e-07\n   49 KSP Residual norm 1.049989240369e-07 % max 1.052019939202e+08 min 1.243568796192e-11 max/min 8.459684276600e+18\n     50 Linear |R| = 1.036247e-07\n   50 KSP Residual norm 1.036246771427e-07 % max 1.052019939202e+08 min 1.241953909730e-11 max/min 8.470684225559e+18\n     51 Linear |R| = 1.023030e-07\n   51 KSP Residual norm 1.023030144985e-07 % max 1.052019939202e+08 min 1.240427326182e-11 max/min 8.481109025871e+18\n     52 Linear |R| = 1.010307e-07\n   52 KSP Residual norm 1.010306659600e-07 % max 1.052019939202e+08 min 1.238977216344e-11 max/min 8.491035390514e+18\n     53 Linear |R| = 9.980464e-08\n   53 KSP Residual norm 9.980463919170e-08 % max 1.052019939202e+08 min 1.237605479203e-11 max/min 8.500446684183e+18\n     54 Linear |R| = 9.862219e-08\n   54 KSP Residual norm 9.862219004107e-08 % max 1.052019939202e+08 min 1.236300200628e-11 max/min 8.509421406445e+18\n     55 Linear |R| = 9.748080e-08\n   55 KSP Residual norm 9.748079668566e-08 % max 1.052019939202e+08 min 1.235060705919e-11 max/min 8.517961377603e+18\n     56 Linear |R| = 9.637814e-08\n   56 KSP Residual norm 9.637813699667e-08 % max 1.052019939202e+08 min 1.233879618688e-11 max/min 8.526114892150e+18\n     57 Linear |R| = 9.531207e-08\n   57 KSP Residual norm 9.531206865746e-08 % max 1.052019939202e+08 min 1.232752788570e-11 max/min 8.533908411778e+18\n     58 Linear |R| = 9.428061e-08\n   58 KSP Residual norm 9.428061164890e-08 % max 1.052019939202e+08 min 1.231678701662e-11 max/min 8.541350416972e+18\n     59 Linear |R| = 9.328193e-08\n   59 KSP Residual norm 9.328193277567e-08 % max 1.052019939202e+08 min 1.230656544002e-11 max/min 8.548444684495e+18\n     60 Linear |R| = 9.231433e-08\n   60 KSP Residual norm 9.231433195847e-08 % max 1.052019939202e+08 min 1.229668347730e-11 max/min 8.555314456486e+18\n     61 Linear |R| = 9.137623e-08\n   61 KSP Residual norm 9.137623005843e-08 % max 1.052019939202e+08 min 1.228731583746e-11 max/min 8.561836882179e+18\n     62 Linear |R| = 9.046616e-08\n   62 KSP Residual norm 9.046615803577e-08 % max 1.052019939202e+08 min 1.227830905398e-11 max/min 8.568117438454e+18\n     63 Linear |R| = 8.958275e-08\n   63 KSP Residual norm 8.958274727292e-08 % max 1.052019939202e+08 min 1.226967254363e-11 max/min 8.574148458005e+18\n     64 Linear |R| = 8.872472e-08\n   64 KSP Residual norm 8.872472091740e-08 % max 1.052019939202e+08 min 1.226134609676e-11 max/min 8.579970999103e+18\n     65 Linear |R| = 8.789089e-08\n   65 KSP Residual norm 8.789088611959e-08 % max 1.052019939202e+08 min 1.225340722088e-11 max/min 8.585529887628e+18\n     66 Linear |R| = 8.708013e-08\n   66 KSP Residual norm 8.708012705833e-08 % max 1.052019939202e+08 min 1.224578711645e-11 max/min 8.590872348161e+18\n     67 Linear |R| = 8.629140e-08\n   67 KSP Residual norm 8.629139866136e-08 % max 1.052019939202e+08 min 1.223841137631e-11 max/min 8.596049820958e+18\n     68 Linear |R| = 8.552372e-08\n   68 KSP Residual norm 8.552372094033e-08 % max 1.052019939202e+08 min 1.223132027028e-11 max/min 8.601033379508e+18\n     69 Linear |R| = 8.477617e-08\n   69 KSP Residual norm 8.477617387060e-08 % max 1.052019939202e+08 min 1.222444760603e-11 max/min 8.605868936627e+18\n     70 Linear |R| = 8.404789e-08\n   70 KSP Residual norm 8.404789275481e-08 % max 1.052019939202e+08 min 1.221790192615e-11 max/min 8.610479487890e+18\n     71 Linear |R| = 8.333806e-08\n   71 KSP Residual norm 8.333806401728e-08 % max 1.052019939202e+08 min 1.221149381462e-11 max/min 8.614997928770e+18\n     72 Linear |R| = 8.264592e-08\n   72 KSP Residual norm 8.264592138263e-08 % max 1.052019939202e+08 min 1.220540664833e-11 max/min 8.619294461162e+18\n     73 Linear |R| = 8.197074e-08\n   73 KSP Residual norm 8.197074239781e-08 % max 1.052019939202e+08 min 1.219944388848e-11 max/min 8.623507340322e+18\n     74 Linear |R| = 8.131185e-08\n   74 KSP Residual norm 8.131184526167e-08 % max 1.052019939202e+08 min 1.219368775293e-11 max/min 8.627578141395e+18\n     75 Linear |R| = 8.066859e-08\n   75 KSP Residual norm 8.066858593050e-08 % max 1.052019939202e+08 min 1.218819311214e-11 max/min 8.631467597551e+18\n     76 Linear |R| = 8.004036e-08\n   76 KSP Residual norm 8.004035547145e-08 % max 1.052019939202e+08 min 1.218282565327e-11 max/min 8.635270413800e+18\n     77 Linear |R| = 7.942658e-08\n   77 KSP Residual norm 7.942657763926e-08 % max 1.052019939202e+08 min 1.217760627519e-11 max/min 8.638971530430e+18\n     78 Linear |R| = 7.882671e-08\n   78 KSP Residual norm 7.882670665430e-08 % max 1.052019939202e+08 min 1.217257970767e-11 max/min 8.642538923273e+18\n     79 Linear |R| = 7.824023e-08\n   79 KSP Residual norm 7.824022516251e-08 % max 1.052019939202e+08 min 1.216771100207e-11 max/min 8.645997090351e+18\n     80 Linear |R| = 7.766664e-08\n   80 KSP Residual norm 7.766664235977e-08 % max 1.052019939202e+08 min 1.216299184243e-11 max/min 8.649351679507e+18\n     81 Linear |R| = 7.710549e-08\n   81 KSP Residual norm 7.710549226545e-08 % max 1.052019939202e+08 min 1.215843067851e-11 max/min 8.652596433037e+18\n     82 Linear |R| = 7.655633e-08\n   82 KSP Residual norm 7.655633213115e-08 % max 1.052019939202e+08 min 1.215391536899e-11 max/min 8.655810965130e+18\n     83 Linear |R| = 7.601874e-08\n   83 KSP Residual norm 7.601874097239e-08 % max 1.052019939202e+08 min 1.214962195032e-11 max/min 8.658869745112e+18\n     84 Linear |R| = 7.549232e-08\n   84 KSP Residual norm 7.549231821215e-08 % max 1.052019939202e+08 min 1.214539613228e-11 max/min 8.661882475825e+18\n     85 Linear |R| = 7.497668e-08\n   85 KSP Residual norm 7.497668242632e-08 % max 1.052019939202e+08 min 1.214137702139e-11 max/min 8.664749783725e+18\n     86 Linear |R| = 7.447147e-08\n   86 KSP Residual norm 7.447147018216e-08 % max 1.052019939202e+08 min 1.213738567562e-11 max/min 8.667599162762e+18\n     87 Linear |R| = 7.397633e-08\n   87 KSP Residual norm 7.397633496168e-08 % max 1.052019939202e+08 min 1.213352618873e-11 max/min 8.670356191910e+18\n     88 Linear |R| = 7.349095e-08\n   88 KSP Residual norm 7.349094616278e-08 % max 1.052019939202e+08 min 1.212978765635e-11 max/min 8.673028489920e+18\n     89 Linear |R| = 7.301499e-08\n   89 KSP Residual norm 7.301498817148e-08 % max 1.052019939202e+08 min 1.212612255821e-11 max/min 8.675649896754e+18\n     90 Linear |R| = 7.254816e-08\n   90 KSP Residual norm 7.254815949949e-08 % max 1.052019939202e+08 min 1.212257393369e-11 max/min 8.678189507903e+18\n     91 Linear |R| = 7.209017e-08\n   91 KSP Residual norm 7.209017198158e-08 % max 1.052019939202e+08 min 1.211909235024e-11 max/min 8.680682585776e+18\n     92 Linear |R| = 7.164075e-08\n   92 KSP Residual norm 7.164075002807e-08 % max 1.052019939202e+08 min 1.211572585930e-11 max/min 8.683094611243e+18\n     93 Linear |R| = 7.119963e-08\n   93 KSP Residual norm 7.119962992791e-08 % max 1.052019939202e+08 min 1.211238638429e-11 max/min 8.685488605004e+18\n     94 Linear |R| = 7.076656e-08\n   94 KSP Residual norm 7.076655919837e-08 % max 1.052019939202e+08 min 1.210917344331e-11 max/min 8.687793135734e+18\n     95 Linear |R| = 7.034130e-08\n   95 KSP Residual norm 7.034129597781e-08 % max 1.052019939202e+08 min 1.210611868461e-11 max/min 8.689985342200e+18\n     96 Linear |R| = 6.992361e-08\n   96 KSP Residual norm 6.992360845799e-08 % max 1.052019939202e+08 min 1.210307287193e-11 max/min 8.692172230423e+18\n     97 Linear |R| = 6.951327e-08\n   97 KSP Residual norm 6.951327435311e-08 % max 1.052019939202e+08 min 1.210009093031e-11 max/min 8.694314325907e+18\n     98 Linear |R| = 6.911008e-08\n   98 KSP Residual norm 6.911008040273e-08 % max 1.052019939202e+08 min 1.209715310293e-11 max/min 8.696425764396e+18\n     99 Linear |R| = 6.871382e-08\n   99 KSP Residual norm 6.871382190599e-08 % max 1.052019939202e+08 min 1.209430563797e-11 max/min 8.698473237674e+18\n    100 Linear |R| = 6.832430e-08\n  100 KSP Residual norm 6.832430228489e-08 % max 1.052019939202e+08 min 1.209152607025e-11 max/min 8.700472819475e+18\n  Linear solve did not converge due to DIVERGED_ITS iterations 100\n 1 Nonlinear |R| = 3.480331e-07\n    |residual|_2 of individual variables:\n                        pp:  2.5294e-13\n                        sat: 3.48033e-07\n      0 Linear |R| = 3.480331e-07\n    0 KSP Residual norm 3.480331261470e-07 % max 1.000000000000e+00 min 1.000000000000e+00 max/min 1.000000000000e+00\n  Linear solve did not converge due to DIVERGED_NANORINF iterations 0\nNonlinear solve did not converge due to DIVERGED_LINEAR_SOLVE iterations 1\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nSolve failed, cutting timestep.",
          "url": "https://github.com/idaholab/moose/discussions/24327",
          "updatedAt": "2023-06-24T22:38:23Z",
          "publishedAt": "2023-05-11T11:12:01Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nOne thing that can help with conditioning is using scaling for your equations.\nYou could try: scaling = 1e6 for the porepressure variable, it will even out the residuals for both variables.\nHow many dofs do you have in the problem?\nUsing the ksp_monitor to compute the ratio of eigenvalues helps but is only approximating the condition number.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5873981",
                  "updatedAt": "2023-05-11T14:26:39Z",
                  "publishedAt": "2023-05-11T14:26:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sinaomrani96"
                          },
                          "bodyText": "Hi @GiudGiud,\nThanks for the tip. This is the DOFs in this example:\nFramework Information:\nMOOSE Version:           git commit a344e45df7 on 2023-04-20\nLibMesh Version:         \nPETSc Version:           3.16.6\nSLEPc Version:           3.16.2\nCurrent Time:            Thu May 11 16:00:40 2023\nExecutable Timestamp:    Tue May  2 17:37:13 2023\n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   451\n  Elems:                   440\n  Num Subdomains:          3\n\nNonlinear System:\n  Num DOFs:                902\n  Num Local DOFs:          902\n  Variables:               { \"pp\" \"sat\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                880\n  Num Local DOFs:          880\n  Variables:               { \"massfrac1\" \"massfrac2\" } \n  Finite Element Types:    \"MONOMIAL\" \n  Approximation Orders:    \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             IterationAdaptiveDT\n  TimeIntegrator:          ImplicitEuler\n  Solver Mode:             NEWTON\n  MOOSE Preconditioner:    SMP (auto)\n\nThanks.\nBest regards,\nSina",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5874409",
                          "updatedAt": "2023-05-11T15:30:39Z",
                          "publishedAt": "2023-05-11T15:02:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "900 is reasonable. you could just use pc_type lu to solve this",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5874800",
                          "updatedAt": "2023-05-11T15:30:55Z",
                          "publishedAt": "2023-05-11T15:30:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sinaomrani96"
                          },
                          "bodyText": "Dear @GiudGiud,\nI have tried different preconditioning and below are some of them:\n[Preconditioning]\nactive = 'preferred'\n[andy]\ntype = SMP\nfull = true\npetsc_options = '-snes_converged_reason -ksp_diagonal_scale -ksp_diagonal_scale_fix -ksp_gmres_modifiedgramschmidt -snes_linesearch_monitor'\npetsc_options_iname = '-ksp_type -pc_type -sub_pc_type -sub_pc_factor_shift_type -pc_asm_overlap -snes_atol -snes_rtol -snes_max_it'\npetsc_options_value = 'gmres     asm       ilu           NONZERO                   2               1E-20      1E-19      10000'\n[]\n[basic]\ntype = SMP\nfull = true\npetsc_options = '-snes_converged_reason -ksp_diagonal_scale -ksp_diagonal_scale_fix -ksp_gmres_modifiedgramschmidt -snes_linesearch_monitor'\npetsc_options_iname = '-ksp_type -pc_type -sub_pc_type -sub_pc_factor_shift_type -pc_asm_overlap'\npetsc_options_value = 'gmres asm lu NONZERO 2'\n[]\n[preferred]\ntype = SMP\nfull = true\npetsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\npetsc_options_value = 'lu mumps'\n[]\n[]\nstill I can't get results from very beginning. I tried convergence criteria suggestions i.e. using simple fluid, changing BCs, using PP instead of PS method in PorousFlow (as @WilkAndy suggested before in #24235) but none of them worked. I do not know how I can understand where is the problem. Here is the result for when \"preferred\" is active:\nTime Step 0, time = 0\nTime Step 1, time = 1, dt = 1\n0 Nonlinear |R| = 1.033048e-06\n|residual|_2 of individual variables:\npp:  9.72656e-07\nsat: 3.48033e-07\n0 Linear |R| = 1.033048e-06\n0 KSP Residual norm 1.033047689164e-06\n1 Linear |R| = 5.554038e-07\n1 KSP Residual norm 5.554038062355e-07\n2 Linear |R| = 3.997493e-08\n2 KSP Residual norm 3.997492583117e-08\n3 Linear |R| = 6.821240e-10\n3 KSP Residual norm 6.821239899350e-10\n4 Linear |R| = 4.480871e-12\n4 KSP Residual norm 4.480871191574e-12\n1 Nonlinear |R| = 1.028771e-06\n|residual|_2 of individual variables:\npp:  9.68113e-07\nsat: 3.48033e-07\n0 Linear |R| = 1.028771e-06\n0 KSP Residual norm 1.028771270060e-06\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to FACTOR_NUMERIC_ZEROPIVOT\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\nSolve Did NOT Converge!\nAborting as solve did not converge\nSolve failed, cutting timestep.\nTime Step 1, time = 0.5, dt = 0.5\n0 Nonlinear |R| = 1.033048e-06\n|residual|_2 of individual variables:\npp:  9.72656e-07\nsat: 3.48033e-07\n0 Linear |R| = 1.033048e-06\n0 KSP Residual norm 1.033047689164e-06\n1 Linear |R| = 1.031716e-06\n1 KSP Residual norm 1.031715617885e-06\n2 Linear |R| = 3.448307e-07\n2 KSP Residual norm 3.448306613117e-07\n3 Linear |R| = 3.862457e-09\n3 KSP Residual norm 3.862456922560e-09\n4 Linear |R| = 1.363942e-11\n4 KSP Residual norm 1.363941925042e-11\n5 Linear |R| = 1.052338e-13\n5 KSP Residual norm 1.052338243574e-13\n1 Nonlinear |R| = 1.028771e-06\n|residual|_2 of individual variables:\npp:  9.68113e-07\nsat: 3.48033e-07\n0 Linear |R| = 1.028771e-06\n0 KSP Residual norm 1.028771270060e-06\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to FACTOR_NUMERIC_ZEROPIVOT\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\nSolve Did NOT Converge!\nAborting as solve did not converge\nSolve failed, cutting timestep.\nThanks for your time,\nBest regards,\nSina",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5874991",
                          "updatedAt": "2023-05-11T15:45:40Z",
                          "publishedAt": "2023-05-11T15:45:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "for  FACTOR_NUMERIC_ZEROPIVOT with LU you can use a -pc_factor_shift of NONZERO to avoid the zero pivot",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5875006",
                          "updatedAt": "2023-05-11T15:47:31Z",
                          "publishedAt": "2023-05-11T15:47:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sinaomrani96"
                          },
                          "bodyText": "I have tried that too. It does not work with -sub_pc_factor_shift either.\nTime Step 1, time = 1, dt = 1\n 0 Nonlinear |R| = 1.039583e-06\n    |residual|_2 of individual variables:\n                        pp:  9.79594e-07\n                        sat: 3.48033e-07\n      0 Linear |R| = 1.039583e-06\n    0 KSP Residual norm 1.039582588754e-06 \n      1 Linear |R| = 8.001024e-07\n    1 KSP Residual norm 8.001023741984e-07 \n      2 Linear |R| = 3.090084e-08\n    2 KSP Residual norm 3.090083746363e-08 \n      3 Linear |R| = 1.659801e-11\n    3 KSP Residual norm 1.659800617289e-11 \n      4 Linear |R| = 3.427233e-13\n    4 KSP Residual norm 3.427232684124e-13 \n 1 Nonlinear |R| = 1.036498e-06\n    |residual|_2 of individual variables:\n                        pp:  9.7632e-07\n                        sat: 3.48033e-07\n      0 Linear |R| = 1.036498e-06\n    0 KSP Residual norm 1.036498154102e-06 \n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_NUMERIC_ZEROPIVOT \nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nif I change my solve type from Newton to other ones like JFNK or PJFNK the error of  FACTOR_NUMERIC_ZEROPIVOT disappear but linear solver do not converge and reaches its iteration limit.",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5875136",
                          "updatedAt": "2023-05-11T16:04:06Z",
                          "publishedAt": "2023-05-11T16:00:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if I change my solve type from Newton to other ones like JFNK or PJFNK the error of FACTOR_NUMERIC_ZEROPIVOT disappear but linear solver do not converge and reaches its iteration limit.\n\nThat's interesting. Did you try a direct solve with PJFNK?\nDId you check your Jacobian was correct? (with the finite differencing tool)",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5875187",
                          "updatedAt": "2023-05-11T16:04:53Z",
                          "publishedAt": "2023-05-11T16:04:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sinaomrani96"
                  },
                  "bodyText": "Sorry I did not get your first advice but I did not check the Jacobian as well. I will check it. Thanks.",
                  "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5875229",
                  "updatedAt": "2023-05-11T16:09:03Z",
                  "publishedAt": "2023-05-11T16:09:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sinaomrani96"
                  },
                  "bodyText": "Dear @GiudGiud,\nHope you are well.\nI am not sure if this is exactly what you suggested, but I used analyze_jacobian.py tool to check the Jacobian and this is the result:\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is questionable (off by 15.17 %)\n(0,1) Off-diagonal Jacobian for variable 'sat' is slightly off (by 0.011359 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is wrong (off by 100.0 %)\n(0,1) Off-diagonal Jacobian for variable 'sat' is slightly off (by 0.011522 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is inexact (off by 2.611 %)\n(0,1) Off-diagonal Jacobian for variable 'sat' should just return  zero\nKernel for variable 'sat':\n(1,1) On-diagonal Jacobian is slightly off (by 0.696295 %)\nIt seems that the jacobian is not right but I do not know where is the problem in the input file. I appreciate your help. Thanks.\nBest regards,\nSina",
                  "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5903341",
                  "updatedAt": "2023-05-15T09:45:40Z",
                  "publishedAt": "2023-05-15T09:45:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nindeed it seems there are a lot of errors.\nThis wont be fixable from the input file, something is up with the kernels for 'pp'.\n@cpgr can you please have a look at\nhttps://github.com/sinaomrani96/Fracture/blob/main/test\nfor issues?\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5904184",
                          "updatedAt": "2023-05-15T11:31:45Z",
                          "publishedAt": "2023-05-15T11:31:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "@sinaomrani96 - can you upload your coarse.e mesh to that branch so I can try and run it?",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5904498",
                          "updatedAt": "2023-05-15T12:11:12Z",
                          "publishedAt": "2023-05-15T12:11:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sinaomrani96"
                          },
                          "bodyText": "Hi @cpgr, it is the same mesh in the porous flow example in folder \"flow_through_fractured_media\". However, I uploaded it.\nhttps://github.com/sinaomrani96/Fracture\nThanks.",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5904553",
                          "updatedAt": "2023-05-15T12:15:55Z",
                          "publishedAt": "2023-05-15T12:15:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "Oh, I didn't read that! I'll take a look tomorrow morning.",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5904576",
                          "updatedAt": "2023-05-15T12:18:25Z",
                          "publishedAt": "2023-05-15T12:18:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sinaomrani96"
                          },
                          "bodyText": "That would be great. Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5904581",
                          "updatedAt": "2023-05-15T12:18:57Z",
                          "publishedAt": "2023-05-15T12:18:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "I'm guessing that you want to model CO2 coming in from the left of the fracture to the right like this:\n\nI made a couple of changes to your input file to make it run (reduced the time as this happens quickly, loosened the tolerances as they are too tight, simplified the kernels so that it is quicker, etc). One thing that causes a lot of issues is setting sg=1 at the left - this sends Pc off to a high value. If you want to do this, you might need to have no capillary pressure. Otherwise, you need sg < 1 at the left boundary in order to get convergence.\nI also added a small pressure gradient so that there is flow from left to right to make convergence a bit better.",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5910423",
                          "updatedAt": "2023-05-16T00:01:48Z",
                          "publishedAt": "2023-05-16T00:01:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "[Mesh]\n  type = FileMesh\n  file = 'coarse.e'\n  block_id = '1 2 3'\n  block_name = 'fracture matrix1 matrix2'\n\n  boundary_id = '1 2'\n  boundary_name = 'bottom top'\n[]\n\n[GlobalParams]\n  PorousFlowDictator = dictator\n  gravity = '0 0 0'\n[]\n\n[Variables]\n  [pp]\n    initial_condition = 1e6\n    # scaling = 1e7\n  []\n  [sat]\n    initial_condition = 0\n    # scaling = 1e-8\n  []\n[]\n\n[AuxVariables]\n\n  [massfrac1]\n    # family = MONOMIAL\n    # order = CONSTANT\n    initial_condition = 1\n  []\n  [massfrac2]\n    # family = MONOMIAL\n    # order = CONSTANT\n    initial_condition = 0\n  []\n[]\n\n[BCs]\n  [co2_injection1]\n    type = DirichletBC\n    boundary = bottom\n    variable = sat\n    value = 1\n  []\n  [rp]\n    type = DirichletBC\n    value = 1e6\n    variable = pp\n    boundary = top\n  []\n  [lp]\n    type = DirichletBC\n    value = 1.01e6\n    variable = pp\n    boundary = bottom\n  []\n  [topco2]\n    type = DirichletBC\n    boundary = top\n    variable = sat\n    value = 0\n  []\n[]\n\n[Kernels]\n  [mass0]\n    type = PorousFlowMassTimeDerivative\n    fluid_component = 0\n    variable = pp\n  []\n  [adv0]\n    # type = PorousFlowFluxLimitedTVDAdvection\n    # advective_flux_calculator = advective_flux_calculator_0\n    type = PorousFlowAdvectiveFlux\n    fluid_component = 0\n    variable = pp\n  []\n  [mass1]\n    type = PorousFlowMassTimeDerivative\n    fluid_component = 1\n    variable = sat\n  []\n  [adv1]\n    # type = PorousFlowFluxLimitedTVDAdvection\n    # advective_flux_calculator = advective_flux_calculator_1\n    type = PorousFlowAdvectiveFlux\n    fluid_component = 1\n    variable = sat\n  []\n[]\n\n[UserObjects]\n  [dictator]\n    type = PorousFlowDictator\n    porous_flow_vars = 'pp sat'\n    number_fluid_phases = 2\n    number_fluid_components = 2\n  []\n  [pc]\n    # type = PorousFlowCapillaryPressureBC\n    # pe = 1e4\n    # lambda = 2\n    type = PorousFlowCapillaryPressureConst\n  []\n  # [advective_flux_calculator_0]\n  #   type = PorousFlowAdvectiveFluxCalculatorUnsaturatedMultiComponent\n  #   flux_limiter_type = VanLeer\n  #   fluid_component = 0\n  #   phase = 0\n  # []\n  # [advective_flux_calculator_1]\n  #   type = PorousFlowAdvectiveFluxCalculatorUnsaturatedMultiComponent\n  #   flux_limiter_type = VanLeer\n  #   fluid_component = 1\n  #   phase = 1\n  # []\n[]\n\n[FluidProperties]\n  # [true_water]\n  #   type = Water97FluidProperties\n  # []\n  # [tabulated_water]\n  #   type = TabulatedFluidProperties\n  #   fp = true_water\n  #   temperature_min = 275\n  #   pressure_max = 1E8\n  #   interpolated_properties = 'density viscosity enthalpy internal_energy'\n  #   fluid_property_file = water97_tabulated_11.csv\n  # []\n  # [true_co2]\n  #   type = CO2FluidProperties\n  # []\n  # [tabulated_co2]\n  #   type = TabulatedFluidProperties\n  #   fp = true_co2\n  #   temperature_min = 275\n  #   pressure_max = 1E8\n  #   interpolated_properties = 'density viscosity enthalpy internal_energy'\n  #   fluid_property_file = co2_tabulated_11.csv\n  # []\n  [simple_fluid1]\n    type = SimpleFluidProperties\n    bulk_modulus = 2e9\n    density0 = 1000\n    thermal_expansion = 0\n    viscosity = 1e-3\n  []\n  [simple_fluid2]\n    type = SimpleFluidProperties\n    bulk_modulus = 2e9\n    density0 = 700\n    thermal_expansion = 0\n    viscosity = 1e-5\n  []\n[]\n\n[Materials]\n  [permeability_fracture]\n    type = PorousFlowPermeabilityConst\n    permeability = '1.8e-11 0 0 0 1.8e-11 0 0 0 1.8e-11' # 1.8e-11 = a * kf\n    block = 'fracture'\n  []\n  [permeability_matrix]\n    type = PorousFlowPermeabilityConst\n    permeability = '1e-20 0 0 0 1e-20 0 0 0 1e-20'\n    block = 'matrix1 matrix2'\n  []\n  [poro_fracture]\n    type = PorousFlowPorosityConst\n    porosity = 6e-4 # = a * phif\n    block = 'fracture'\n  []\n  [poro_matrix]\n    type = PorousFlowPorosityConst\n    porosity = 0.1\n    block = 'matrix1 matrix2'\n  []\n  [temperature]\n    type = PorousFlowTemperature\n    temperature = 323.15\n  []\n  [saturation_calculator]\n    type = PorousFlow2PhasePS\n    phase0_porepressure = pp\n    phase1_saturation = sat\n    capillary_pressure = pc\n  []\n  [massfrac1]\n    type = PorousFlowMassFraction\n    mass_fraction_vars = 'massfrac1 massfrac2'\n  []\n  [simple_fluid_qpw]\n    type = PorousFlowSingleComponentFluid\n    fp = simple_fluid1\n    phase = 0\n  []\n  [simple_fluid_qp]\n    type = PorousFlowSingleComponentFluid\n    fp = simple_fluid2\n    phase = 1\n  []\n  [relperm_water]\n    type = PorousFlowRelativePermeabilityCorey\n    n = 1\n    phase = 0\n    s_res = 0.1\n    sum_s_res = 0.1\n  []\n\n  [relperm_gas]\n    type = PorousFlowRelativePermeabilityCorey\n    n = 1\n    s_res = 0\n    sum_s_res = 0.1\n    phase = 1\n  []\n\n[]\n\n[Debug]\n  show_var_residual_norms = true\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = NEWTON\n  # petsc_options_iname = '-pc_type -ksp_type  -ksp_gmres_restart'\n  # petsc_options_value = 'none gmres 1000'\n  end_time = 10\n  dtmax = 1\n  [TimeStepper]\n    type = IterationAdaptiveDT\n    dt = 1e-2\n  []\n  l_max_its = 100\n  l_abs_tol = 1e-12\n  nl_max_its = 40\n  nl_rel_tol = 1e-8\n  nl_abs_tol = 1e-10\n[]\n\n[Outputs]\n  [out]\n    type = Exodus\n    execute_on = 'initial timestep_end'\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5910433",
                          "updatedAt": "2023-05-16T00:02:40Z",
                          "publishedAt": "2023-05-16T00:02:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sinaomrani96"
                          },
                          "bodyText": "Dear @cpgr,\nThank you so much for your time and help. I did test it with no capillary pressure before but it didn't work. I guess the change here that led to convergence was commenting mass fraction family and order type. Can I ask why did you do this and how it helped the convergence?",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5914699",
                          "updatedAt": "2023-05-16T10:07:26Z",
                          "publishedAt": "2023-05-16T10:07:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "I did this because it sometimes causes an assertion for a reason that I haven't worked out when I run it locally in devel mode rather than opt mode (I pretty much troubleshoot in devel only https://mooseframework.inl.gov/moose/application_development/build_system.html). I wonder if this causes problems in opt. Could you check whether changing them back to CONSTANT MONOMIAL but keeping everything else the same?",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5914754",
                          "updatedAt": "2023-05-16T10:13:25Z",
                          "publishedAt": "2023-05-16T10:13:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sinaomrani96"
                          },
                          "bodyText": "Oh, I see. Thanks for your clarification and great help. Yes, I checked your modified version of input file and found that changing it back to CONSTANT MONOMIAL will fail the convergence.",
                          "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5914814",
                          "updatedAt": "2023-05-16T10:20:17Z",
                          "publishedAt": "2023-05-16T10:20:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sinaomrani96"
                  },
                  "bodyText": "Sure. This is the output when I don't use constant monomial and it converges:\nNo errors detected. :-)\nNo errors detected. :-)\nNo errors detected. :-)\nNo errors detected. :-)\nNo errors detected. :-)\nNo errors detected. :-)\nNo errors detected. :-)\nNo errors detected. :-)\nNo errors detected. :-)\nthis is when I use it and convergence fails:\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)\nKernel for variable 'pp':\n(0,0) On-diagonal Jacobian is slightly off (by 0.000000 %)\nKernel for variable 'sat':\n(1,0) Off-diagonal Jacobian for variable 'pp' is slightly off (by 0.000000 %)",
                  "url": "https://github.com/idaholab/moose/discussions/24327#discussioncomment-5915052",
                  "updatedAt": "2023-05-16T10:44:51Z",
                  "publishedAt": "2023-05-16T10:44:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Reactor meshing workshop May 16",
          "author": {
            "login": "GiudGiud"
          },
          "bodyText": "Hello\nA MOOSE Reactor Module Training will be held virtually next month on Tuesday, May 16 (10AM - 5PM ET).\nIt is free, but registration is required.\nRegistration deadline for U.S. citizens is May 9 at 5:00pm CT.\nRegistration deadline for foreign nationals is April 25 at 5:00pm CT.\nTopics: Meshing workflow, extra element IDs, common mesh generators & examples, how to use with Griffin, the Reactor Geometry Mesh Builder routines and examples, and advanced meshing tool intro\nRegister online here.\nBest,\nGuillaume for the Reactor Module team",
          "url": "https://github.com/idaholab/moose/discussions/24112",
          "updatedAt": "2023-05-16T06:20:10Z",
          "publishedAt": "2023-04-18T15:11:43Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Hi Guillaume ! @GiudGiud\nI registered for it using the link but I did not get any confirmation email (I actually tried it two times !). Will the meeting details be shared only close to the workshop ?\n-Kamal",
                  "url": "https://github.com/idaholab/moose/discussions/24112#discussioncomment-5691186",
                  "updatedAt": "2023-04-22T02:02:27Z",
                  "publishedAt": "2023-04-22T02:02:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@eshemon",
                          "url": "https://github.com/idaholab/moose/discussions/24112#discussioncomment-5691199",
                          "updatedAt": "2023-04-22T02:06:53Z",
                          "publishedAt": "2023-04-22T02:06:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "eshemon"
                          },
                          "bodyText": "@KamalnathOSU Hi there, yes, sorry about that. We will share the meeting agenda and link a week before the workshop! It will be 10-5:30ET May 16.",
                          "url": "https://github.com/idaholab/moose/discussions/24112#discussioncomment-5708072",
                          "updatedAt": "2023-04-24T13:06:27Z",
                          "publishedAt": "2023-04-24T13:06:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ravi-srs"
                          },
                          "bodyText": "Is their a mailing list we can register, would like to receive notification of such future event, missed it this time.",
                          "url": "https://github.com/idaholab/moose/discussions/24112#discussioncomment-5901009",
                          "updatedAt": "2023-05-15T04:56:34Z",
                          "publishedAt": "2023-05-15T04:56:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nWe've transitioned to using Github discussions for newsletters & announcements.\nThis might be a little too high volume.\nWe'll talk about reviving the mailing list and let you know\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/24112#discussioncomment-5904158",
                          "updatedAt": "2023-05-15T11:29:26Z",
                          "publishedAt": "2023-05-15T11:29:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ravi-srs"
                          },
                          "bodyText": "Is there a remote chance to still register or access link to recording?",
                          "url": "https://github.com/idaholab/moose/discussions/24112#discussioncomment-5912580",
                          "updatedAt": "2023-05-16T06:20:11Z",
                          "publishedAt": "2023-05-16T06:20:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Speed up reading mesh file?",
          "author": {
            "login": "reed-lfh"
          },
          "bodyText": "Hi everyone,\nRecently, I have been trying to let the MOOSE read a pretty big .msh file (about 1.2 Gb). The MOOSE needs plenty of hours (>30hrs) to finish constructing the mesh as shown below. For this mesh file, there are different blocks that show different Euler angles. I am wondering why this is happening and whether there is a more efficient way of handling the mesh like this.\nThanks.\nMesh
          "url": "https://github.com/idaholab/moose/discussions/24360",
          "updatedAt": "2023-06-24T22:37:59Z",
          "publishedAt": "2023-05-14T23:44:33Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAre you reading this in serial?\nDid you ever get it to completion?\nDo you have the option to convert it to another supported mesh format?\nhttps://mooseframework.inl.gov/source/meshgenerators/FileMeshGenerator.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24360#discussioncomment-5899621",
                  "updatedAt": "2023-05-15T00:30:55Z",
                  "publishedAt": "2023-05-15T00:30:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "reed-lfh"
                          },
                          "bodyText": "Hi Guillaume,\nI am using mpi in sending this job. But I am not sure whether the MOOSE is reading it in parallel. Because you are right, I find I can hardly make it completed.\nI think it can be saved in another format. But I am not sure which one can be optimal.\nReed",
                          "url": "https://github.com/idaholab/moose/discussions/24360#discussioncomment-5907350",
                          "updatedAt": "2023-05-15T16:26:57Z",
                          "publishedAt": "2023-05-15T16:26:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Have you had it read in serial once?",
                          "url": "https://github.com/idaholab/moose/discussions/24360#discussioncomment-5907705",
                          "updatedAt": "2023-05-15T17:06:49Z",
                          "publishedAt": "2023-05-15T17:06:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you have, you can save it to exodus from MOOSE. Reading exodus should pose no issue at all and be quite fast",
                          "url": "https://github.com/idaholab/moose/discussions/24360#discussioncomment-5908156",
                          "updatedAt": "2023-05-15T17:53:49Z",
                          "publishedAt": "2023-05-15T17:53:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "reed-lfh"
                          },
                          "bodyText": "I believe I knew what happened. I just tried to run it in serial and I found it looks like I requested just so limited memory in reading this mesh file. But for some reason, the console still shows it was dealing with the mesh. Maybe there is something that can be improved here.\nThanks for the help!",
                          "url": "https://github.com/idaholab/moose/discussions/24360#discussioncomment-5909123",
                          "updatedAt": "2023-05-15T19:53:25Z",
                          "publishedAt": "2023-05-15T19:53:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Field split for scalar variables",
          "author": {
            "login": "ttruster"
          },
          "bodyText": "Regarding the field split preconditioner:\nI noticed in Split.C that there is a guard against scalar variables:\nif (!_fe_problem.hasVariable(var))\nHowever, lower in the code (PetscDMMoose.C) it actually does allow for scalar variables. When I commented the line above and ran a test case combining a regular and scalar variable with field splitting, the iterative solvers ran fine.\nIs this guard intentional or an oversight? If nothing else prevents changing it to\nif (!_fe_problem.hasVariable(var) && !_fe_problem.hasScalarVariable(var))\nthen I can do that, add a test input file, and also fix a typo I had in one of my doc files in a previous pull request.",
          "url": "https://github.com/idaholab/moose/discussions/24356",
          "updatedAt": "2023-05-17T01:07:44Z",
          "publishedAt": "2023-05-14T01:41:27Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhich syntax are you using for the field split? There's two\nI think it got enabled recently for the [Preconditioning] type=FSP syntax, that may be why it s disallowed in your case.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24356#discussioncomment-5899700",
                  "updatedAt": "2023-05-15T00:49:49Z",
                  "publishedAt": "2023-05-15T00:49:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ttruster"
                          },
                          "bodyText": "I am using the [Preconditioning]  active = 'FSP' syntax, not the one that Contact Split is based off of. However, I'm using the source code from 4/7/2023. But when I look in the current github source, the Split.C file looks the same. I can try the [Splits] syntax, but when I skim the source it looks like both syntaxes will pass through that same source file.\nLet me know if you want me to attach the input file.",
                          "url": "https://github.com/idaholab/moose/discussions/24356#discussioncomment-5908606",
                          "updatedAt": "2023-05-15T18:47:53Z",
                          "publishedAt": "2023-05-15T18:47:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I would open a PR with a test case so we can review. Sounds like a possible oversight",
                          "url": "https://github.com/idaholab/moose/discussions/24356#discussioncomment-5908971",
                          "updatedAt": "2023-05-15T19:34:22Z",
                          "publishedAt": "2023-05-15T19:34:22Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Dynamics of an object",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "Is there an example code that models the the Newtonian motion of an object where there can be an initial condition that accelerates the object, and the following trajectory of the object is influenced by gravity and the initial condition?",
          "url": "https://github.com/idaholab/moose/discussions/24343",
          "updatedAt": "2023-06-24T22:37:45Z",
          "publishedAt": "2023-05-12T18:39:46Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@jiangwen84 @recuero",
                  "url": "https://github.com/idaholab/moose/discussions/24343#discussioncomment-5888104",
                  "updatedAt": "2023-05-12T19:00:02Z",
                  "publishedAt": "2023-05-12T19:00:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@Strawberrybrother answer might matter to you too",
                          "url": "https://github.com/idaholab/moose/discussions/24343#discussioncomment-5888108",
                          "updatedAt": "2023-05-12T19:00:43Z",
                          "publishedAt": "2023-05-12T19:00:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "I cannot find such an example now. But I have played with a similar setup using the Newmark integrator. You can using gravity and initial conditions on the variables (including auxiliary velocity and acceleration) to achieve what you describe. Note that you shouldn't use mass damping if you want to get physical results, as it will damp out rigid body motion.",
                          "url": "https://github.com/idaholab/moose/discussions/24343#discussioncomment-5906158",
                          "updatedAt": "2023-05-15T14:41:33Z",
                          "publishedAt": "2023-05-15T14:41:32Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Issue using cuda and openmpi",
          "author": {
            "login": "SakshamPande"
          },
          "bodyText": "Hi all,\nI have the following issue when trying to execute a simulation file on a gpu hpc cluster.\nThe following error.\n._____________________________________________________________________________________\n|\n| Initial checks...\n| All good.\n|_____________________________________________________________________________________\n[gpu008:162305] OPAL ERROR: Not initialized in file pmix3x_client.c at line 112\n--------------------------------------------------------------------------\nThe application appears to have been direct launched using \"srun\",\nbut OMPI was not built with SLURM's PMI support and therefore cannot\nexecute. There are several options for building PMI support under\nSLURM, depending upon the SLURM version you are using:\n\n  version 16.05 or later: you can use SLURM's PMIx support. This\n  requires that you configure and build SLURM --with-pmix.\n\n  Versions earlier than 16.05: you must use either SLURM's PMI-1 or\n  PMI-2 support. SLURM builds PMI-1 by default, or you can manually\n  install PMI-2. You must then build Open MPI using --with-pmi pointing\n  to the SLURM PMI library location.\n\nPlease configure as appropriate and try again.\n--------------------------------------------------------------------------\n*** An error occurred in MPI_Init\n*** on a NULL communicator\n*** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,\n***    and potentially your MPI job)\n[gpu008:162305] Local abort before MPI_INIT completed completed successfully, but am not able to aggregate error messages, and not able to guarantee that all other processes were killed!\n\npreviously i was using the loaded module of openmpi4.1.1, but after finding that one existed in /usr/mpi/gcc/openmpi4.0.1a1, i editted the $Path and $ldlibrarypath based on the outputs of ldd , but am still getting the same error.\nI am using loaded modules of gcc/10.2 and cuda/11.1\nIs there anything I missed, or any suggestion would be great.\nThanks",
          "url": "https://github.com/idaholab/moose/discussions/24365",
          "updatedAt": "2023-06-24T22:37:38Z",
          "publishedAt": "2023-05-15T10:26:44Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you print the output of the diagnostics script in moose/scripts ?\nThis will likely be a case of inconsistent MPI between various phases of installation\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24365#discussioncomment-5904121",
                  "updatedAt": "2023-05-15T11:26:01Z",
                  "publishedAt": "2023-05-15T11:26:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SakshamPande"
                          },
                          "bodyText": "by different phases of installation you mean compilation and execution ?",
                          "url": "https://github.com/idaholab/moose/discussions/24365#discussioncomment-5904574",
                          "updatedAt": "2023-05-15T12:18:15Z",
                          "publishedAt": "2023-05-15T12:18:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "which page did you follow for installation?\nThere's also different phases of installation, depending on which page you followed",
                          "url": "https://github.com/idaholab/moose/discussions/24365#discussioncomment-5904589",
                          "updatedAt": "2023-05-15T12:19:09Z",
                          "publishedAt": "2023-05-15T12:19:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Binary KKS model + tensor mechanics + Discrete Nucleation",
          "author": {
            "login": "yaddss"
          },
          "bodyText": "Hello!\nI am in the process of constructing a KKS model for studying the evolution of a two-phase (\u237a/\u03b4) binary system (H-Zr). The tensor mechanics module is used to account for the eigenstrain of precipitate during formation and their contribution to the global free energy.\nQuestions:\nI am now trying to implement nucleation by using the Discrete Nucleation System. I track the H concentration of the \u03b4-precipitate and \u237a-matrix (i.e., c = c_\u03b4 + c_\u237a) in this KKS model. But I am not quite sure what I should do for the \"DiscreteNucleation\" material and the \"op_names\" input: Should it be 'c_\u03b4 c_\u237a' or just 'c'?  Do both the \u03b4-precipitate and the \u237a-matrix have a Discrete Nucleation material? like fn_\u03b4= p(c_\u03b4-c_\u03b4^eq)^2 and  fn_\u237a= p(c_\u237a-c_\u237a^eq)^2 ?\nThank you!\n-Cloris",
          "url": "https://github.com/idaholab/moose/discussions/24364",
          "updatedAt": "2023-05-15T10:15:59Z",
          "publishedAt": "2023-05-15T10:15:58Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Install in a workstation",
          "author": {
            "login": "wangzhaohao"
          },
          "bodyText": "Hello, although i install many times in my pc, i meet a problem in a offline workstation. I did the flowing steps.\n\ncreat a same with pc username.\ninstall in pc(online)\ncopy the mambaconfig3 files into the workstation\nmake the test\nthere is no problem in make, but when i test it fail.\n\nIs due to my gcc is too old?",
          "url": "https://github.com/idaholab/moose/discussions/24362",
          "updatedAt": "2023-05-15T03:17:24Z",
          "publishedAt": "2023-05-15T01:29:17Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "What's your version of gcc?",
                  "url": "https://github.com/idaholab/moose/discussions/24362#discussioncomment-5900089",
                  "updatedAt": "2023-05-15T02:18:53Z",
                  "publishedAt": "2023-05-15T02:18:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "oh copying over the folder wont work",
                          "url": "https://github.com/idaholab/moose/discussions/24362#discussioncomment-5900114",
                          "updatedAt": "2023-05-15T02:23:32Z",
                          "publishedAt": "2023-05-15T02:23:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "please follow these instructions instead\nhttps://mooseframework.inl.gov/getting_started/installation/offline_installation.html",
                          "url": "https://github.com/idaholab/moose/discussions/24362#discussioncomment-5900119",
                          "updatedAt": "2023-05-15T02:24:16Z",
                          "publishedAt": "2023-05-15T02:24:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "oh copying over the folder wont work\n\nthe copy is work, i solve this problem because my GNULIBC is 2.17, but moose need is at least 2.22. i update and it works",
                          "url": "https://github.com/idaholab/moose/discussions/24362#discussioncomment-5900332",
                          "updatedAt": "2023-05-15T03:17:16Z",
                          "publishedAt": "2023-05-15T03:17:15Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "A general question about the optimal number of processors and threads",
          "author": {
            "login": "alimostafavi24"
          },
          "bodyText": "Hello everyone,\nI am solving a 2D model. The 2D mesh is 30*25 with 5 levels of refinement. My first question is how can I get the number of elements and DOFs with the refined mesh? I am asking this because I think the numbers I got at the output are based on unrefined mesh.\nI also want to know how can I speed up the simulation process. Herein I run the simulation with 94 CPUs, but it is not as fast as I wanted it to be. Moreover, my advisor has a COMSOL model of this simulation which took it like 2 hours to produce results, but mine took me like 15 hours. Based on this and MOOSE parallelism framework, I think there should be a way that I can increase the speed of my simulation! Especially I want to do it also in 3D which is much more time-consuming, so finding a way to speed up the 2D model is essential for me. I would appreciate suggestions by MOOSE experts in this manner. I also attached some information about my model.\nThanks,\nAli\nMOOSE Version:           git commit cb1ac8f on 2023-04-10\nLibMesh Version:         80494219d2293e467392189814d30330c4f87a25\nPETSc Version:           3.16.6\nSLEPc Version:           3.16.2\nCurrent Time:            Sat Apr 22 11:12:53 2023\nExecutable Timestamp:    Sat Apr 22 10:44:09 2023\n\nParallelism:\n  Num Processors:          94\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:                   \n    Total:                 806\n    Local:                 15\n    Min/Max/Avg:           0/17/8\n  Elems:                   \n    Total:                 750\n    Local:                 8\n    Min/Max/Avg:           7/8/7\n  Num Subdomains:          1\n  Num Partitions:          94\n  Partitioner:             metis\n\nNonlinear System:\n  Num DOFs:                4030\n  Num Local DOFs:          75\n  Variables:               { \"vel_x\" \"vel_y\" \"p\" \"c\" \"w\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                5362\n  Num Local DOFs:          70\n  Variables:               { \"x_coor\" \"y_coor\" } { \"jump\" \"error\" \"F\" \"mu\" \"rho\" } \n  Finite Element Types:    \"LAGRANGE\" \"MONOMIAL\" \n  Approximation Orders:    \"FIRST\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             ConstantDT\n  TimeIntegrator:          ImplicitEuler\n  Solver Mode:             NEWTON\n  PETSc Preconditioner:    asm \n  MOOSE Preconditioner:    SMP",
          "url": "https://github.com/idaholab/moose/discussions/24169",
          "updatedAt": "2023-05-13T19:47:35Z",
          "publishedAt": "2023-04-24T18:00:56Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "This doesn\u2019t look refined 5 times\nhow are you refining?",
                  "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5711417",
                  "updatedAt": "2023-04-24T18:05:29Z",
                  "publishedAt": "2023-04-24T18:05:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "[Adaptivity]\n  initial_steps = 5\n  steps = 1\n  marker = error\n  [Indicators]\n    [jump]\n      type = GradientJumpIndicator\n      variable = c\n    []\n  []\n  [Markers]\n    [error]\n      type = ErrorFractionMarker\n      coarsen = 0.95\n      refine = 0.9\n      indicator = jump\n    []\n  []\n  max_h_level = 5\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5711509",
                          "updatedAt": "2023-04-24T18:16:14Z",
                          "publishedAt": "2023-04-24T18:16:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok this looks fine. It s just not uniform refinement which would have been reported correctly in the summary.\nSo there is a NumElems Postprocessor you can use to report on the number of elements",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5711537",
                          "updatedAt": "2023-04-24T18:20:04Z",
                          "publishedAt": "2023-04-24T18:20:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "[Adaptivity]\n  initial_steps = 5\n  steps = 1\n  marker = error\n  [Indicators]\n    [jump]\n      type = GradientJumpIndicator\n      variable = c\n    []\n  []\n  [Markers]\n    [error]\n      type = ErrorFractionMarker\n      coarsen = 0.95\n      refine = 0.9\n      indicator = jump\n    []\n  []\n  max_h_level = 5\n[]\n\n\n\nCan you tell me for this kind of mesh which is extremely fine in 1 region, and it is coarse elsewhere, what kind of partitioner is useful?\nThanks,\nAli",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713297",
                          "updatedAt": "2023-04-24T22:19:51Z",
                          "publishedAt": "2023-04-24T22:19:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "metis will do fine.\nthis mesh is stored in an exodus file now right?\nUse the filemeshgenerator to read it, then the partitioner should act on it when running in parallel\nTo look at the action of the partitioner, see the show_domain option in the Debug block\nhttps://mooseframework.inl.gov/source/actions/SetupDebugAction.html",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713380",
                          "updatedAt": "2023-04-24T22:39:37Z",
                          "publishedAt": "2023-04-24T22:39:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "I am generating the mesh with \"GeneratedMeshGenerator\" and use \"GradientJumpIndicator\" for mesh adaptivity (I am not using and saving any exodus file for mesh). Besides it is a transient problem and mesh will be changed in each time step. So there is a way that I can generate the mesh and store it and then read it in each time step?\nI also tried show_domain in the debug, nothing appeared there and I didn't see it in the documentation either!",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713483",
                          "updatedAt": "2023-04-24T23:06:11Z",
                          "publishedAt": "2023-04-24T23:06:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it adds the partitioning to the exodus output so you can look at it",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713633",
                          "updatedAt": "2023-04-24T23:51:09Z",
                          "publishedAt": "2023-04-24T23:51:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I know it s not ideal to use a FileMeshGenerator. i d like you to try loading the refined mesh so we can see what the impact of re-partitioning would be on performance",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713638",
                          "updatedAt": "2023-04-24T23:51:48Z",
                          "publishedAt": "2023-04-24T23:51:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Ok, so can you tell me what should I add to save the mesh in exodus format and then use \"FileMeshGenerator\" to read it?",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713667",
                          "updatedAt": "2023-04-24T23:58:11Z",
                          "publishedAt": "2023-04-24T23:58:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "[Outputs]\n  exodus = true\n[]\n\nin the first simulation\nthen in the second use this\nhttps://mooseframework.inl.gov/source/meshgenerators/FileMeshGenerator.html",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713683",
                          "updatedAt": "2023-04-24T23:59:52Z",
                          "publishedAt": "2023-04-24T23:59:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "also it s show_process_domains I think for the boolean in Debug. Please check the parameters",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713784",
                          "updatedAt": "2023-04-25T00:10:24Z",
                          "publishedAt": "2023-04-25T00:10:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "With regards to performance, one thing we need here is a step of repartitioning as the initial partitioning is not great or adapted to the non-uniform refinement\n  Nodes:                   \n    Total:                 806\n    Local:                 15\n    Min/Max/Avg:           0/17/8\n\nI dont know how, but one domain seems to own 0 nodes!\nTo try this, I would generate the mesh in a simulation, then load it using a FileMeshGenerator. This will ensure better partitioning",
                  "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5711634",
                  "updatedAt": "2023-04-24T18:32:06Z",
                  "publishedAt": "2023-04-24T18:32:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "I do not know how to implement this in my input file. Is there any example for mesh generation in simulation and loading it with FileMesh Generator? I am also wondering about the partitioner. I think the default one is metis as I did not define anything for that in my mesh. Could it affect the performance? I also attached all of the parts related to the mesh in my input file!\n[Mesh]\n[gen]\n  type = GeneratedMeshGenerator\n  dim = 2\n  nx = 25\n  ny = 30\n  nz = 0\n  xmin = 0\n  ymin = 0\n  zmin = 0\n  xmax = 0.5\n  ymax = 0.6\n  zmax = 0\n  elem_type = QUAD4\n[]\n[]\n\n[Adaptivity]\n  initial_steps = 5\n  steps = 1\n  marker = error\n  [Indicators]\n    [jump]\n      type = GradientJumpIndicator\n      variable = c\n    []\n  []\n  [Markers]\n    [error]\n      type = ErrorFractionMarker\n      coarsen = 0.95\n      refine = 0.9\n      indicator = jump\n    []\n  []\n  max_h_level = 5\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5711828",
                          "updatedAt": "2023-04-24T18:58:29Z",
                          "publishedAt": "2023-04-24T18:58:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Another major potential slowdown is insufficient work on each processor. How many elements do you have in total now?\nWe operate better with 20k element per process",
                  "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713642",
                  "updatedAt": "2023-04-24T23:52:30Z",
                  "publishedAt": "2023-04-24T23:52:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "DOF is around 120,000. It means that number of CPUs should be 6. But increasing number of CPUs speed up the simulation in my problem!",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713821",
                          "updatedAt": "2023-04-25T00:19:44Z",
                          "publishedAt": "2023-04-25T00:19:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok but 90 is well beyond our \"good scaling\" expectation.\n20k dofs/processor is not a uniform rule. you should try several numbers of processes, see what works best",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5713851",
                          "updatedAt": "2023-04-25T00:26:32Z",
                          "publishedAt": "2023-04-25T00:26:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "All right. Now I tried to simulate my model in 3d, having 1 cpu per 20,000 DOFs, this would lead to 50 CPUs in my problem, so I run on 84. But just 1 time step took me like 2 hours! I think something is wrong here and I can't figure it out.\nFramework Information:\nMOOSE Version:           git commit cb1ac8f on 2023-04-10\nLibMesh Version:         80494219d2293e467392189814d30330c4f87a25\nPETSc Version:           3.16.6\nSLEPc Version:           3.16.2\nCurrent Time:            Thu Apr 27 15:32:11 2023\nExecutable Timestamp:    Fri Apr 21 15:36:07 2023\n\nParallelism:\n  Num Processors:          84\n  Num Threads:             1\n\nMesh: \n  Parallel Type:           replicated\n  Mesh Dimension:          3\n  Spatial Dimension:       3\n  Nodes:                   \n    Total:                 29791\n    Local:                 499\n    Min/Max/Avg:           212/512/354\n  Elems:                   \n    Total:                 27000\n    Local:                 325\n    Min/Max/Avg:           312/331/321\n  Num Subdomains:          1\n  Num Partitions:          84\n  Partitioner:             metis\n\nNonlinear System:\n  Num DOFs:                178746\n  Num Local DOFs:          2994\n  Variables:               { \"vel_x\" \"vel_y\" \"vel_z\" \"p\" \"c\" \"w\" } \n  Finite Element Types:    \"LAGRANGE\" \n  Approximation Orders:    \"FIRST\" \n\nAuxiliary System:\n  Num DOFs:                251373\n  Num Local DOFs:          3447\n  Variables:               { \"x_coor\" \"y_coor\" \"z_coor\" } { \"jump\" \"error\" \"F\" \"mu\" \"rho\" \"pid\" } \n  Finite Element Types:    \"LAGRANGE\" \"MONOMIAL\" \n  Approximation Orders:    \"FIRST\" \"CONSTANT\" \n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             ConstantDT\n  TimeIntegrator:          ImplicitEuler\n  Solver Mode:             NEWTON\n  PETSc Preconditioner:    asm \n  MOOSE Preconditioner:    SMP\n\nCurrently Executing\n  Performing Initial Setup\n    Finished Performing Initial Adaptivity                                               [\ufffd[33m 10.79 s\ufffd[39m] [\ufffd[33m  279 MB\ufffd[39m]\n  Finished Performing Initial Setup                                                      [\ufffd[33m 13.21 s\ufffd[39m] [\ufffd[33m  279 MB\ufffd[39m]\n\n\ufffd[33m\n*** Warning ***\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:16: unused parameter 'U'\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:17: unused parameter 'R'\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:18: unused parameter 'R2'\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:19: unused parameter 'b'\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:20: unused parameter 'a'\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:24: unused parameter 'elem'\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:219: unused parameter 'Kernels/x_momentum_space/pspg'\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:244: unused parameter 'Kernels/y_momentum_space/pspg'\n/home/u17/alimostafavi/projects/moose/3d/2d_axisymm_CH_NS_Test.i:269: unused parameter 'Kernels/z_momentum_space/pspg'\n\ufffd[39m\n\nTime Step 0, time = 0\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+----------------+\n| time           | dofs           | elements       | nodes          | residuals      | total_solute   |\n+----------------+----------------+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+----------------+----------------+----------------+\n\n\n\nConsumed Material Properties:\n      Object: AuxKernel::free_energyF\n  Properties: F\n\n      Object: AuxKernel::mumu\n  Properties: mu\n\n      Object: AuxKernel::rhorho\n  Properties: rho\n\n      Object: Kernel::c_res\n  Properties: dF/dc, d^2F/dc^2, kappa_c\n\n      Object: Kernel::mass\n  Properties: mu, rho\n\n      Object: Kernel::w_res\n  Properties: M\n\n      Object: Kernel::x_momentum_space\n  Properties: mu, rho\n\n      Object: Kernel::x_momentum_time\n  Properties: rho\n\n      Object: Kernel::y_momentum_space\n  Properties: mu, rho\n\n      Object: Kernel::y_momentum_time\n  Properties: rho\n\n      Object: Kernel::z_momentum_space\n  Properties: mu, rho\n\n      Object: Kernel::z_momentum_time\n  Properties: rho\n\n\n\nTime Step 1, time = 1e-06, dt = 1e-06\n\nPerforming automatic scaling calculation\n\n 0 Nonlinear |R| = \ufffd[32m5.251215e+02\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 0\n                      vel_y: 0.11868\n                      vel_z: 0\n                      p:     481.755\n                      c:     0.109541\n                      w:     208.961\n      0 Linear |R| = \ufffd[32m5.251215e+02\ufffd[39m\n      1 Linear |R| = \ufffd[33m5.250363e+02\ufffd[39m\n      2 Linear |R| = \ufffd[33m5.229189e+02\ufffd[39m\n      3 Linear |R| = \ufffd[32m4.225270e+02\ufffd[39m\n      4 Linear |R| = \ufffd[32m2.217867e+02\ufffd[39m\n      5 Linear |R| = \ufffd[32m4.090702e+01\ufffd[39m\n      6 Linear |R| = \ufffd[32m2.276448e+01\ufffd[39m\n      7 Linear |R| = \ufffd[32m7.800293e+00\ufffd[39m\n      8 Linear |R| = \ufffd[32m2.051112e+00\ufffd[39m\n      9 Linear |R| = \ufffd[32m6.973517e-01\ufffd[39m\n     10 Linear |R| = \ufffd[32m3.821824e-01\ufffd[39m\n     11 Linear |R| = \ufffd[32m1.319073e-01\ufffd[39m\n     12 Linear |R| = \ufffd[32m4.179116e-02\ufffd[39m\n     13 Linear |R| = \ufffd[32m1.127722e-02\ufffd[39m\n     14 Linear |R| = \ufffd[32m4.302021e-03\ufffd[39m\n 1 Nonlinear |R| = \ufffd[32m3.408780e+02\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 0.148183\n                      vel_y: 0.122392\n                      vel_z: 0.148821\n                      p:     315.951\n                      c:     0.0658403\n                      w:     127.955\n      0 Linear |R| = \ufffd[32m3.408780e+02\ufffd[39m\n      1 Linear |R| = \ufffd[33m3.408010e+02\ufffd[39m\n      2 Linear |R| = \ufffd[33m3.386770e+02\ufffd[39m\n      3 Linear |R| = \ufffd[32m2.611792e+02\ufffd[39m\n      4 Linear |R| = \ufffd[32m1.041136e+02\ufffd[39m\n      5 Linear |R| = \ufffd[32m2.540034e+01\ufffd[39m\n      6 Linear |R| = \ufffd[32m1.401158e+01\ufffd[39m\n      7 Linear |R| = \ufffd[32m4.769046e+00\ufffd[39m\n      8 Linear |R| = \ufffd[32m1.090550e+00\ufffd[39m\n      9 Linear |R| = \ufffd[32m4.301588e-01\ufffd[39m\n     10 Linear |R| = \ufffd[32m2.346901e-01\ufffd[39m\n     11 Linear |R| = \ufffd[32m7.416193e-02\ufffd[39m\n     12 Linear |R| = \ufffd[32m2.247402e-02\ufffd[39m\n     13 Linear |R| = \ufffd[32m6.366757e-03\ufffd[39m\n     14 Linear |R| = \ufffd[32m2.333147e-03\ufffd[39m\n 2 Nonlinear |R| = \ufffd[32m2.626079e+02\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 0.207081\n                      vel_y: 0.193407\n                      vel_z: 0.207919\n                      p:     251.75\n                      c:     0.0378792\n                      w:     74.7301\n      0 Linear |R| = \ufffd[32m2.626079e+02\ufffd[39m\n      1 Linear |R| = \ufffd[33m2.625024e+02\ufffd[39m\n      2 Linear |R| = \ufffd[33m2.593623e+02\ufffd[39m\n      3 Linear |R| = \ufffd[32m1.721531e+02\ufffd[39m\n      4 Linear |R| = \ufffd[32m5.116094e+01\ufffd[39m\n      5 Linear |R| = \ufffd[32m1.412025e+01\ufffd[39m\n      6 Linear |R| = \ufffd[32m6.872445e+00\ufffd[39m\n      7 Linear |R| = \ufffd[32m2.557571e+00\ufffd[39m\n      8 Linear |R| = \ufffd[32m5.086186e-01\ufffd[39m\n      9 Linear |R| = \ufffd[32m2.264455e-01\ufffd[39m\n     10 Linear |R| = \ufffd[32m1.170667e-01\ufffd[39m\n     11 Linear |R| = \ufffd[32m3.893915e-02\ufffd[39m\n     12 Linear |R| = \ufffd[32m1.159481e-02\ufffd[39m\n     13 Linear |R| = \ufffd[32m3.471751e-03\ufffd[39m\n     14 Linear |R| = \ufffd[32m1.207862e-03\ufffd[39m\n 3 Nonlinear |R| = \ufffd[32m2.045053e+02\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 0.219744\n                      vel_y: 0.234886\n                      vel_z: 0.220283\n                      p:     204.365\n                      c:     0.00141873\n                      w:     7.56066\n      0 Linear |R| = \ufffd[32m2.045053e+02\ufffd[39m\n      1 Linear |R| = \ufffd[33m2.026790e+02\ufffd[39m\n      2 Linear |R| = \ufffd[32m1.529735e+02\ufffd[39m\n      3 Linear |R| = \ufffd[32m1.801882e+01\ufffd[39m\n      4 Linear |R| = \ufffd[32m3.863420e+00\ufffd[39m\n      5 Linear |R| = \ufffd[32m1.410361e+00\ufffd[39m\n      6 Linear |R| = \ufffd[32m4.115384e-01\ufffd[39m\n      7 Linear |R| = \ufffd[32m2.051518e-01\ufffd[39m\n      8 Linear |R| = \ufffd[32m5.408075e-02\ufffd[39m\n      9 Linear |R| = \ufffd[32m2.797067e-02\ufffd[39m\n     10 Linear |R| = \ufffd[32m1.119572e-02\ufffd[39m\n     11 Linear |R| = \ufffd[32m3.285788e-03\ufffd[39m\n     12 Linear |R| = \ufffd[32m8.597604e-04\ufffd[39m\n 4 Nonlinear |R| = \ufffd[32m4.790622e+01\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 0.0301401\n                      vel_y: 0.0316882\n                      vel_z: 0.0303124\n                      p:     47.9049\n                      c:     0.000170282\n                      w:     0.352219\n      0 Linear |R| = \ufffd[32m4.790622e+01\ufffd[39m\n      1 Linear |R| = \ufffd[33m4.691438e+01\ufffd[39m\n      2 Linear |R| = \ufffd[32m3.162242e+01\ufffd[39m\n      3 Linear |R| = \ufffd[32m2.100806e+00\ufffd[39m\n      4 Linear |R| = \ufffd[32m9.929145e-01\ufffd[39m\n      5 Linear |R| = \ufffd[32m3.968592e-01\ufffd[39m\n      6 Linear |R| = \ufffd[32m7.981769e-02\ufffd[39m\n      7 Linear |R| = \ufffd[32m3.766383e-02\ufffd[39m\n      8 Linear |R| = \ufffd[32m1.151284e-02\ufffd[39m\n      9 Linear |R| = \ufffd[32m6.089727e-03\ufffd[39m\n     10 Linear |R| = \ufffd[32m2.386011e-03\ufffd[39m\n     11 Linear |R| = \ufffd[32m6.026330e-04\ufffd[39m\n     12 Linear |R| = \ufffd[32m1.705930e-04\ufffd[39m\n 5 Nonlinear |R| = \ufffd[32m1.193129e+01\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 0.00593485\n                      vel_y: 0.00604548\n                      vel_z: 0.00597527\n                      p:     11.9313\n                      c:     3.46275e-05\n                      w:     0.0150688\n      0 Linear |R| = \ufffd[32m1.193129e+01\ufffd[39m\n      1 Linear |R| = \ufffd[33m1.154913e+01\ufffd[39m\n      2 Linear |R| = \ufffd[32m6.948667e+00\ufffd[39m\n      3 Linear |R| = \ufffd[32m4.613387e-01\ufffd[39m\n      4 Linear |R| = \ufffd[32m2.187525e-01\ufffd[39m\n      5 Linear |R| = \ufffd[32m8.691637e-02\ufffd[39m\n      6 Linear |R| = \ufffd[32m1.810962e-02\ufffd[39m\n      7 Linear |R| = \ufffd[32m8.349004e-03\ufffd[39m\n      8 Linear |R| = \ufffd[32m2.594652e-03\ufffd[39m\n      9 Linear |R| = \ufffd[32m1.359788e-03\ufffd[39m\n     10 Linear |R| = \ufffd[32m5.382640e-04\ufffd[39m\n     11 Linear |R| = \ufffd[32m1.382148e-04\ufffd[39m\n     12 Linear |R| = \ufffd[32m4.060905e-05\ufffd[39m\n 6 Nonlinear |R| = \ufffd[32m2.874734e+00\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 0.00120065\n                      vel_y: 0.00120177\n                      vel_z: 0.00120991\n                      p:     2.87473\n                      c:     6.29486e-06\n                      w:     0.00092179\n      0 Linear |R| = \ufffd[32m2.874734e+00\ufffd[39m\n      1 Linear |R| = \ufffd[33m2.779477e+00\ufffd[39m\n      2 Linear |R| = \ufffd[32m1.708136e+00\ufffd[39m\n      3 Linear |R| = \ufffd[32m1.127607e-01\ufffd[39m\n      4 Linear |R| = \ufffd[32m4.369007e-02\ufffd[39m\n      5 Linear |R| = \ufffd[32m1.991438e-02\ufffd[39m\n      6 Linear |R| = \ufffd[32m4.008677e-03\ufffd[39m\n      7 Linear |R| = \ufffd[32m1.837450e-03\ufffd[39m\n      8 Linear |R| = \ufffd[32m5.624973e-04\ufffd[39m\n      9 Linear |R| = \ufffd[32m2.900756e-04\ufffd[39m\n     10 Linear |R| = \ufffd[32m1.189274e-04\ufffd[39m\n     11 Linear |R| = \ufffd[32m3.339295e-05\ufffd[39m\n     12 Linear |R| = \ufffd[32m9.420306e-06\ufffd[39m\n 7 Nonlinear |R| = \ufffd[32m6.975636e-01\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 0.000259558\n                      vel_y: 0.000257544\n                      vel_z: 0.000261893\n                      p:     0.697563\n                      c:     1.33255e-06\n                      w:     5.40817e-05\n      0 Linear |R| = \ufffd[32m6.975636e-01\ufffd[39m\n      1 Linear |R| = \ufffd[33m6.747996e-01\ufffd[39m\n      2 Linear |R| = \ufffd[32m4.107674e-01\ufffd[39m\n      3 Linear |R| = \ufffd[32m2.760411e-02\ufffd[39m\n      4 Linear |R| = \ufffd[32m9.131819e-03\ufffd[39m\n      5 Linear |R| = \ufffd[32m4.495345e-03\ufffd[39m\n      6 Linear |R| = \ufffd[32m9.090704e-04\ufffd[39m\n      7 Linear |R| = \ufffd[32m4.103327e-04\ufffd[39m\n      8 Linear |R| = \ufffd[32m1.268142e-04\ufffd[39m\n      9 Linear |R| = \ufffd[32m6.415661e-05\ufffd[39m\n     10 Linear |R| = \ufffd[32m2.696218e-05\ufffd[39m\n     11 Linear |R| = \ufffd[32m8.195100e-06\ufffd[39m\n     12 Linear |R| = \ufffd[32m2.214596e-06\ufffd[39m\n 8 Nonlinear |R| = \ufffd[32m1.724991e-01\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 5.83662e-05\n                      vel_y: 5.79519e-05\n                      vel_z: 5.89786e-05\n                      p:     0.172499\n                      c:     2.89374e-07\n                      w:     3.52665e-06\n      0 Linear |R| = \ufffd[32m1.724991e-01\ufffd[39m\n      1 Linear |R| = \ufffd[33m1.671546e-01\ufffd[39m\n      2 Linear |R| = \ufffd[32m1.006136e-01\ufffd[39m\n      3 Linear |R| = \ufffd[32m6.914874e-03\ufffd[39m\n      4 Linear |R| = \ufffd[32m1.937371e-03\ufffd[39m\n      5 Linear |R| = \ufffd[32m1.018222e-03\ufffd[39m\n      6 Linear |R| = \ufffd[32m2.113528e-04\ufffd[39m\n      7 Linear |R| = \ufffd[32m9.337702e-05\ufffd[39m\n      8 Linear |R| = \ufffd[32m2.924640e-05\ufffd[39m\n      9 Linear |R| = \ufffd[32m1.438858e-05\ufffd[39m\n     10 Linear |R| = \ufffd[32m6.201293e-06\ufffd[39m\n     11 Linear |R| = \ufffd[32m2.042340e-06\ufffd[39m\n     12 Linear |R| = \ufffd[32m5.344214e-07\ufffd[39m\n 9 Nonlinear |R| = \ufffd[32m4.345410e-02\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 1.35959e-05\n                      vel_y: 1.36115e-05\n                      vel_z: 1.3761e-05\n                      p:     0.0434541\n                      c:     5.59934e-08\n                      w:     2.42327e-07\n  Finished Solving                                                                       [\ufffd[33m7942.55 s\ufffd[39m] [\ufffd[33m  450 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n\nOutlier Variable Residual Norms:\n  p: \ufffd[31m4.345409e-02\ufffd[39m\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+----------------+\n| time           | dofs           | elements       | nodes          | residuals      | total_solute   |\n+----------------+----------------+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   1.000000e-06 |   1.261131e+06 |   7.562200e+04 |   8.971100e+04 |   1.300000e+01 |  -1.231443e-01 |\n+----------------+----------------+----------------+----------------+----------------+----------------+\n\n  Finished Adapting Mesh                                                                 [\ufffd[33m  5.72 s\ufffd[39m] [\ufffd[33m  428 MB\ufffd[39m]\n\nTime Step 2, time = 2e-06, dt = 1e-06\n 0 Nonlinear |R| = \ufffd[32m3.315732e+03\ufffd[39m\n    |residual|_2 of individual variables:\n                      vel_x: 3.57909\n                      vel_y: 4.28178\n                      vel_z: 4.11804\n                      p:     3192.45\n                      c:     0.0348707\n                      w:     895.717\n      0 Linear |R| = \ufffd[32m3.315732e+03\ufffd[39m",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5748928",
                          "updatedAt": "2023-04-28T01:03:53Z",
                          "publishedAt": "2023-04-28T01:03:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Num Local DOFs:          2994\nthis is still concerning with regards to partitioning\nThe solve method might be a little simplistic still, asm-lu\nYou may want to write a field split.\nthere's a good example here\nhttps://github.com/idaholab/moose/blob/next/modules/navier_stokes/test/tests/finite_volume/ins/channel-flow/2d-rc-no-slip.i",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5749348",
                          "updatedAt": "2023-04-28T02:14:19Z",
                          "publishedAt": "2023-04-28T02:14:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "I think that number for local DOFs is incorrect, since from the first step mesh adaptivity exists, which makes that number underestimated!",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5749446",
                          "updatedAt": "2023-04-28T02:34:49Z",
                          "publishedAt": "2023-04-28T02:34:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "How much changing the time integrator could change the performance? Maybe it is the implicit scheme that makes it too long. I am also running my 2D model with euler explicit scheme.",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5749472",
                          "updatedAt": "2023-04-28T02:39:52Z",
                          "publishedAt": "2023-04-28T02:39:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "well there's a trade off. It s likely the implicit scheme is letting you take longer time steps than the explicit one.\nWe indeed do support explicit schemes if you want to use that",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5749758",
                          "updatedAt": "2023-04-28T03:47:34Z",
                          "publishedAt": "2023-04-28T03:47:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "alimostafavi24"
                  },
                  "bodyText": "Is there something seriously wrong in performance graph for 2D model ? (This is for small amount of time steps)\nPerformance Graph:\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n|                                 Section                                | Calls |   Self(s)  |   Avg(s)   |    %   | Mem(MB) |  Total(s)  |   Avg(s)   |    %   | Mem(MB) |\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| CombinedTestApp (main)                                                 |     1 |      0.033 |      0.033 |   0.01 |       5 |    273.895 |    273.895 | 100.00 |     129 |\n|   RankMap::construct                                                   |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|   MooseApp::setup                                                      |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.273 |      0.273 |   0.10 |      31 |\n|     Action::SetupMeshAction::Mesh::SetupMeshAction::act::setup_mesh    |     1 |      0.001 |      0.001 |   0.00 |       0 |      0.001 |      0.001 |   0.00 |       0 |\n|     Action::SetupMeshAction::Mesh::SetupMeshAction::act::set_mesh_base |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       MeshGeneratorMesh::init                                          |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|     Action::SetupMeshCompleteAction::Mesh::completeSetupUndisplaced    |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.001 |      0.001 |   0.00 |       0 |\n|       MeshGeneratorMesh::prepare                                       |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.001 |      0.001 |   0.00 |       0 |\n|     Action::SetupMeshCompleteAction::Mesh::uniformRefine               |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|     Action::SetupMeshCompleteAction::Mesh::deleteRemoteElems           |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|     MeshGeneratorSystem::createMeshGeneratorOrder                      |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|     FEProblem::init                                                    |     1 |      0.001 |      0.001 |   0.00 |       0 |      0.035 |      0.035 |   0.01 |       6 |\n|       FEProblem::EquationSystems::Init                                 |     1 |      0.032 |      0.032 |   0.01 |       6 |      0.032 |      0.032 |   0.01 |       6 |\n|   MooseApp::execute                                                    |     1 |      0.000 |      0.000 |   0.00 |       0 |    273.589 |    273.589 |  99.89 |      93 |\n|     FEProblem::computeUserObjects                                      |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|     FEProblem::initialSetup                                            |     1 |      0.003 |      0.003 |   0.00 |       0 |      3.285 |      3.285 |   1.20 |      39 |\n|       FEProblem::computeUserObjects                                    |     3 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       FEProblem::projectSolution                                       |     1 |      0.039 |      0.039 |   0.01 |       0 |      0.039 |      0.039 |   0.01 |       0 |\n|       FEProblem::initialAdaptMesh                                      |     1 |      0.004 |      0.004 |   0.00 |       0 |      3.143 |      3.143 |   1.15 |      39 |\n|         FEProblem::projectSolution                                     |     5 |      0.345 |      0.069 |   0.13 |       0 |      0.345 |      0.069 |   0.13 |       0 |\n|         FEProblem::computeIndicators                                   |     5 |      0.848 |      0.170 |   0.31 |       0 |      0.848 |      0.170 |   0.31 |       0 |\n|         FEProblem::computeMarkers                                      |     5 |      0.080 |      0.016 |   0.03 |       0 |      0.084 |      0.017 |   0.03 |       0 |\n|       NonlinearSystemBase::nlInitialSetup                              |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|         NonlinearSystemBase::kernelsInitialSetup                       |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|         NonlinearSystemBase::mortarSetup                               |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       FEProblem::initialSetupTransfers                                 |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|     FEProblem::computeIndicators                                       |     4 |      1.071 |      0.268 |   0.39 |       0 |      1.071 |      0.268 |   0.39 |       0 |\n|     FEProblem::computeMarkers                                          |     4 |      0.116 |      0.029 |   0.04 |       0 |      0.126 |      0.031 |   0.05 |       0 |\n|     FEProblem::outputStep                                              |     5 |      0.003 |      0.001 |   0.00 |       0 |      0.547 |      0.109 |   0.20 |       0 |\n|       CSV::outputStep                                                  |    11 |      0.081 |      0.007 |   0.03 |       0 |      0.081 |      0.007 |   0.03 |       0 |\n|       Exodus::outputStep                                               |     5 |      0.331 |      0.066 |   0.12 |       0 |      0.331 |      0.066 |   0.12 |       0 |\n|       Checkpoint::outputStep                                           |     1 |      0.130 |      0.130 |   0.05 |       0 |      0.130 |      0.130 |   0.05 |       0 |\n|     FEProblem::onTimestepBegin                                         |     5 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|     Transient::PicardSolve                                             |     5 |      0.008 |      0.002 |   0.00 |       0 |    266.436 |     53.287 |  97.28 |     168 |\n|       FEProblem::computeUserObjects                                    |    36 |      0.105 |      0.003 |   0.04 |       0 |      0.105 |      0.003 |   0.04 |       0 |\n|       FEProblem::outputStep                                            |    15 |      0.002 |      0.000 |   0.00 |       0 |      0.002 |      0.000 |   0.00 |       0 |\n|         CSV::outputStep                                                |     6 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       FEProblem::solve                                                 |     5 |    147.064 |     29.413 |  53.69 |     135 |    266.145 |     53.229 |  97.17 |     168 |\n|         CSV::outputStep                                                |  1299 |      2.208 |      0.002 |   0.81 |       0 |      2.208 |      0.002 |   0.81 |       0 |\n|         FEProblem::computeResidualInternal                             |     5 |      0.000 |      0.000 |   0.00 |       0 |      1.069 |      0.214 |   0.39 |       0 |\n|           FEProblem::computeUserObjects                                |    10 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|         FEProblem::computeResidualInternal                             |   196 |      0.047 |      0.000 |   0.02 |       0 |     43.644 |      0.223 |  15.93 |       0 |\n|           FEProblem::computeUserObjects                                |   392 |      0.005 |      0.000 |   0.00 |       0 |      0.005 |      0.000 |   0.00 |       0 |\n|         NonlinearSystemBase::initialBCs                                |     5 |      0.001 |      0.000 |   0.00 |       0 |      0.001 |      0.000 |   0.00 |       0 |\n|         FEProblem::computeJacobianInternal                             |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.343 |      0.343 |   0.13 |       0 |\n|           FEProblem::computeUserObjects                                |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|         FEProblem::computeJacobianInternal                             |    70 |      0.003 |      0.000 |   0.00 |       0 |     71.806 |      1.026 |  26.22 |      33 |\n|           FEProblem::computeUserObjects                                |   140 |      0.002 |      0.000 |   0.00 |       0 |      0.002 |      0.000 |   0.00 |       0 |\n|     Transient::final                                                   |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       FEProblem::computeUserObjects                                    |     2 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|       FEProblem::outputStep                                            |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n|         CSV::outputStep                                                |     1 |      0.000 |      0.000 |   0.00 |       0 |      0.000 |      0.000 |   0.00 |       0 |\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
                  "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5757830",
                  "updatedAt": "2023-04-28T19:16:48Z",
                  "publishedAt": "2023-04-28T19:16:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "no it should be working. What s the trouble?",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5757850",
                          "updatedAt": "2023-04-28T19:19:29Z",
                          "publishedAt": "2023-04-28T19:19:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "My 2D model takes like 2 days to run. It produces pretty good results, but my advisor has a comsol model for my problem that took like 3 hours with a finer mesh.\nMy 3D MOOSE model takes like 1 day just for 10 time steps with a course grid and around 1e6 DOFs.",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5757905",
                          "updatedAt": "2023-04-28T19:31:25Z",
                          "publishedAt": "2023-04-28T19:31:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If you want COMSOL-like performance you ll need to take a deep dive into the numerics.\nYou need to be using an optimized numerical scheme, with the right preconditioning and sometimes segregation between variables and so on.\nJust throwing asm at all the variables alltogether is not a fast way to solve a problem.\nPlease explore the field split preconditioning option at least, though I could see a segregated scheme make sense here between the fluid and c-w",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5757953",
                          "updatedAt": "2023-04-28T19:38:53Z",
                          "publishedAt": "2023-04-28T19:38:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Thank you for the helpful suggestions!\nI am working on field split preconditioning to get faster results. Is segregated solver supported in MOOSE?",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5758057",
                          "updatedAt": "2023-04-28T19:56:34Z",
                          "publishedAt": "2023-04-28T19:56:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "We support multiple non linear system, and we will roll out a segregated solver for Navier Stokes in the coming month.\nFor an easy user interface from the input file, probably next year. For now, will have to be done on the C++ side for the general case",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5758182",
                          "updatedAt": "2023-04-28T20:15:32Z",
                          "publishedAt": "2023-04-28T20:15:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "I could speed up the simulation with some modification in the solver. It has a much better speed in the 3d case. However, at the time step number 185, it does not progress and it stucks in computing Jacobian. Do you know what can cause this and how I can fix it?\nThanks,\nAli\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+\n| time           | dofs           | residuals      | total_solute   |\n+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   5.000000e-05 |   1.326828e+06 |   2.150000e+02 |  -9.259220e-02 |\n|   1.000000e-04 |   1.332486e+06 |   4.190000e+02 |  -9.262917e-02 |\n|   1.500000e-04 |   1.330950e+06 |   6.330000e+02 |  -9.268219e-02 |\n+----------------+----------------+----------------+----------------+\n\n  Finished Adapting Mesh                                                                 [\ufffd[33m  6.99 s\ufffd[39m] [\ufffd[33m  455 MB\ufffd[39m]\n\nTime Step 151, time = 0.000151, dt = 1e-06\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m 10.31 s\ufffd[39m] [\ufffd[33m  504 MB\ufffd[39m]\n  Finished Adapting Mesh                                                                 [\ufffd[33m  6.90 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 152, time = 0.000152, dt = 1e-06\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Solving                                                                       [\ufffd[33m 10.24 s\ufffd[39m] [\ufffd[33m  507 MB\ufffd[39m]\n  Finished Adapting Mesh                                                                 [\ufffd[33m  6.97 s\ufffd[39m] [\ufffd[33m  453 MB\ufffd[39m]\n\nTime Step 153, time = 0.000153, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.41 s\ufffd[39m] [\ufffd[33m  491 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.28 s\ufffd[39m] [\ufffd[33m  491 MB\ufffd[39m]\n\nTime Step 154, time = 0.000154, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.58 s\ufffd[39m] [\ufffd[33m  508 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.17 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 155, time = 0.000155, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.19 s\ufffd[39m] [\ufffd[33m  506 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.07 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 156, time = 0.000156, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.53 s\ufffd[39m] [\ufffd[33m  491 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  6.91 s\ufffd[39m] [\ufffd[33m  491 MB\ufffd[39m]\n\nTime Step 157, time = 0.000157, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.32 s\ufffd[39m] [\ufffd[33m  492 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.08 s\ufffd[39m] [\ufffd[33m  492 MB\ufffd[39m]\n\nTime Step 158, time = 0.000158, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.29 s\ufffd[39m] [\ufffd[33m  515 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.06 s\ufffd[39m] [\ufffd[33m  457 MB\ufffd[39m]\n\nTime Step 159, time = 0.000159, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.21 s\ufffd[39m] [\ufffd[33m  514 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.03 s\ufffd[39m] [\ufffd[33m  485 MB\ufffd[39m]\n\nTime Step 160, time = 0.00016, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.34 s\ufffd[39m] [\ufffd[33m  511 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.07 s\ufffd[39m] [\ufffd[33m  458 MB\ufffd[39m]\n\nTime Step 161, time = 0.000161, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.20 s\ufffd[39m] [\ufffd[33m  511 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.08 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 162, time = 0.000162, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.24 s\ufffd[39m] [\ufffd[33m  508 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.00 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 163, time = 0.000163, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.35 s\ufffd[39m] [\ufffd[33m  506 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.15 s\ufffd[39m] [\ufffd[33m  458 MB\ufffd[39m]\n\nTime Step 164, time = 0.000164, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.51 s\ufffd[39m] [\ufffd[33m  511 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.16 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 165, time = 0.000165, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.60 s\ufffd[39m] [\ufffd[33m  506 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  6.97 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 166, time = 0.000166, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.37 s\ufffd[39m] [\ufffd[33m  513 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  6.98 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 167, time = 0.000167, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.35 s\ufffd[39m] [\ufffd[33m  515 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.03 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 168, time = 0.000168, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.41 s\ufffd[39m] [\ufffd[33m  470 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.10 s\ufffd[39m] [\ufffd[33m  493 MB\ufffd[39m]\n\nTime Step 169, time = 0.000169, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.37 s\ufffd[39m] [\ufffd[33m  509 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.15 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 170, time = 0.00017, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.62 s\ufffd[39m] [\ufffd[33m  506 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.14 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 171, time = 0.000171, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.16 s\ufffd[39m] [\ufffd[33m  517 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.21 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 172, time = 0.000172, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.49 s\ufffd[39m] [\ufffd[33m  506 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.09 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 173, time = 0.000173, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.18 s\ufffd[39m] [\ufffd[33m  514 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.11 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 174, time = 0.000174, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.38 s\ufffd[39m] [\ufffd[33m  512 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.16 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 175, time = 0.000175, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.10 s\ufffd[39m] [\ufffd[33m  515 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.04 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 176, time = 0.000176, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.23 s\ufffd[39m] [\ufffd[33m  510 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.06 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 177, time = 0.000177, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.07 s\ufffd[39m] [\ufffd[33m  513 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.14 s\ufffd[39m] [\ufffd[33m  452 MB\ufffd[39m]\n\nTime Step 178, time = 0.000178, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.33 s\ufffd[39m] [\ufffd[33m  489 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  6.98 s\ufffd[39m] [\ufffd[33m  489 MB\ufffd[39m]\n\nTime Step 179, time = 0.000179, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.08 s\ufffd[39m] [\ufffd[33m  516 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.15 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 180, time = 0.00018, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.19 s\ufffd[39m] [\ufffd[33m  509 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.22 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 181, time = 0.000181, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.28 s\ufffd[39m] [\ufffd[33m  512 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.15 s\ufffd[39m] [\ufffd[33m  456 MB\ufffd[39m]\n\nTime Step 182, time = 0.000182, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.18 s\ufffd[39m] [\ufffd[33m  519 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.14 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 183, time = 0.000183, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.15 s\ufffd[39m] [\ufffd[33m  515 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.05 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 184, time = 0.000184, dt = 1e-06\n  Finished Solving                                                                       [\ufffd[33m 10.17 s\ufffd[39m] [\ufffd[33m  511 MB\ufffd[39m]\n\ufffd[32m Solve Converged!\ufffd[39m\n  Finished Adapting Mesh                                                                 [\ufffd[33m  7.19 s\ufffd[39m] [\ufffd[33m  454 MB\ufffd[39m]\n\nTime Step 185, time = 0.000185, dt = 1e-06\n\n    Computing Jacobian...............................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5762944",
                          "updatedAt": "2023-04-29T17:52:29Z",
                          "publishedAt": "2023-04-29T17:52:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is this on a cluster or on your local machine?\nHow many MPI ranks?",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5762979",
                          "updatedAt": "2023-04-29T17:59:16Z",
                          "publishedAt": "2023-04-29T17:59:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "It is on cluster with 84 processors and 1.5e6 DOF. How can I get the number for MPI ranks?",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5763016",
                          "updatedAt": "2023-04-29T18:12:09Z",
                          "publishedAt": "2023-04-29T18:12:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok please run your job then use this script\nhttps://github.com/idaholab/moose/blob/next/framework/scripts/find_hung_process.py\nit will tell us which process is getting stuck and where",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5763023",
                          "updatedAt": "2023-04-29T18:14:00Z",
                          "publishedAt": "2023-04-29T18:13:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "This is what I got.\n~/projects/moose/framework/scripts/find_hung_process.py -s 5 -f 1886620 ~/projects/moose/3d2/combined-opt \nUnique Stack Traces\n\n~/projects/moose/framework/scripts/find_hung_process.py -s 10 -f 1886620 ~/projects/moose/3d2/combined-opt \nUnique Stack Traces",
                          "url": "https://github.com/idaholab/moose/discussions/24169#discussioncomment-5763166",
                          "updatedAt": "2023-04-29T18:56:45Z",
                          "publishedAt": "2023-04-29T18:56:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}