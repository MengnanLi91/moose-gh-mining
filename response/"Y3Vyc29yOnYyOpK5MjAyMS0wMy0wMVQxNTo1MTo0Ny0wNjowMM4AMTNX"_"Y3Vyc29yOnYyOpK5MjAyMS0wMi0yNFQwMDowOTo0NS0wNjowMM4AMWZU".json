{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0wMi0yNFQwMDowOTo0NS0wNjowMM4AMWZU"
    },
    "edges": [
      {
        "node": {
          "title": "moose compiling issue on HPC",
          "author": {
            "login": "rui-hu"
          },
          "bodyText": "Because of the c++17 requirements, I'm trying to use miniconda moose environment to compile moose and a moose-based app on a Linux cluster.\nThe code compiling went fine, but cannot run, with the error:\nsymbol lookup error: /home/cluster2/rhu/miniconda3/envs/moose/lib/./libmpifort.so.12: undefined symbol: MPII_F_TRUE\nHas anyone run into similar issues before? It seems MPI related.",
          "url": "https://github.com/idaholab/moose/discussions/17146",
          "updatedAt": "2022-11-16T09:40:08Z",
          "publishedAt": "2021-02-26T20:08:21Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "It sounds like MPI supplied by miniconda is in conflict with MPI being made available elsewhere (system modules). Can you report the libraries your binary linked to?\nldd <binary>-opt\nThis might help us determine where the offending link is coming from.",
                  "url": "https://github.com/idaholab/moose/discussions/17146#discussioncomment-418060",
                  "updatedAt": "2022-11-16T09:40:08Z",
                  "publishedAt": "2021-03-01T13:57:45Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ngrilli"
                          },
                          "bodyText": "Dear @rui-hu\nWhat is the operating system?\nI suggest you try the manual installation GCC/MPICH\nwhich has always been successful on our CentOS 7\nBest Regards,\nNicol\u00f2 Grilli\nNational University of Singapore",
                          "url": "https://github.com/idaholab/moose/discussions/17146#discussioncomment-418340",
                          "updatedAt": "2022-11-16T09:40:18Z",
                          "publishedAt": "2021-03-01T15:01:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rui-hu"
                          },
                          "bodyText": "Thank you both. It is indeed an issue that miniconda is in conflict with the mpi loaded by the system.\n\"module unload\" the system mpi solved the problem.\nFor those interested, the cluster is on CentOS.",
                          "url": "https://github.com/idaholab/moose/discussions/17146#discussioncomment-419766",
                          "updatedAt": "2022-11-16T09:40:18Z",
                          "publishedAt": "2021-03-01T21:35:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Question about Rattlesnake capabilities",
          "author": {
            "login": "robfairh"
          },
          "bodyText": "Hi everyone,\nI have the following question: Does rattlesnake solve the PN or the SPN equations?\nThanks!\nP.S.: In case of being capable of solving both, are both options available to the users? Because I haven't seen anything about SPN on the theory/user manuals.",
          "url": "https://github.com/idaholab/moose/discussions/17167",
          "updatedAt": "2024-12-04T19:01:34Z",
          "publishedAt": "2021-03-01T14:29:07Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "YaqiWang"
                  },
                  "bodyText": "No SPN is supported by Rattlesnake. And we do not have plan to support it soon. Currently only PN or SN, diffusion are available to the users.",
                  "url": "https://github.com/idaholab/moose/discussions/17167#discussioncomment-418712",
                  "updatedAt": "2024-12-04T19:01:25Z",
                  "publishedAt": "2021-03-01T16:44:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "robfairh"
                          },
                          "bodyText": "Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/17167#discussioncomment-418910",
                          "updatedAt": "2024-12-04T19:01:32Z",
                          "publishedAt": "2021-03-01T17:31:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Access a mesh variable from within a Function object",
          "author": {
            "login": "bielsnohr"
          },
          "bodyText": "I am just starting to develop my own MooseApp, and I am trying to determine if it possible to access and return the value of a mesh variable at a given Point from within a Function object. The Doxygen documentation would seem to suggest not, but I am not yet very familiar with this expansive framework. I have seen an example where the mesh variable has been obtained by going through a UserObject, which is then accessed by the Function, but this strikes me as a bit roundabout.\nFor some context, my use case is to apply this Function within a ADNeumannFunctionBC. The mesh variable that the Function will pick up are heat flux values that will be coming from a subapp that calls an external program.\nIn case a diagram makes this a bit more clear (arrows are loosely the flow of data I would like):",
          "url": "https://github.com/idaholab/moose/discussions/17107",
          "updatedAt": "2022-09-28T23:05:58Z",
          "publishedAt": "2021-02-23T17:27:06Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "What problem are you trying to solve? Are your main/sub-app meshes on the same scale? How is the \"heat_flux\" defined in the sub-application?\nTypically this type of value would be computed as an AuxVariable, if this is the case then you transfer the variable directly from the sub-app to the main using the MultiAppCopyTransfer (if your two problems are on the same mesh).",
                  "url": "https://github.com/idaholab/moose/discussions/17107#discussioncomment-398574",
                  "updatedAt": "2022-09-28T23:05:59Z",
                  "publishedAt": "2021-02-23T17:58:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "bielsnohr"
                          },
                          "bodyText": "What problem are you trying to solve?\n\nStandard transient heat conduction problem for a material (steel at this point). I'm using the HeatConduction module. The heat fluxes are coming from the fast ions emitted by a plasma. These are the values that will be returned by the external program.\n\nAre your main/sub-app meshes on the same scale?\n\nSpatial scale, yes. Time scale is still in the process of being determined. It is likely that the external program will run through a number of its own internal, smaller time steps and then return the heat flux at the end of the longer \"global\" time step for the MultiApp.\n\nHow is the \"heat_flux\" defined in the sub-application?\n\nNot sure of this because I have not actually had access to the external program yet. I appreciate that probably limits the advice you can give, but basically I have been trying to do as much on the MOOSE side of things while I wait for access.\n\nTypically this type of value would be computed as an AuxVariable, if this is the case then you transfer the variable directly from the sub-app to the main using the MultiAppCopyTransfer (if your two problems are on the same mesh).\n\nIt is quite likely the meshes will not be the same, but again, I need to see what the external program capabilities are and how it accepts a mesh. Presumably, I can design my MOOSE application such that it passes a mesh which is compatible with the external program, and therefore they will be on the same mesh.\nOnce I have the AuxVariable, how can that be used in a Neumann BC?\nMany thanks for the reply!",
                          "url": "https://github.com/idaholab/moose/discussions/17107#discussioncomment-400721",
                          "updatedAt": "2022-09-28T23:05:59Z",
                          "publishedAt": "2021-02-24T10:28:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bielsnohr"
                          },
                          "bodyText": "Once I have the AuxVariable, how can that be used in a Neumann BC?\n\nAh, looks like I might have found it: CoupledVarNeumannBC seems like it would do the trick.",
                          "url": "https://github.com/idaholab/moose/discussions/17107#discussioncomment-400820",
                          "updatedAt": "2023-02-02T01:45:12Z",
                          "publishedAt": "2021-02-24T11:11:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "bielsnohr"
                          },
                          "bodyText": "Although I will need to confirm meshing, this largely solves my use-case for the present time:\nheat fluxes generated by external program -> MultiAppCopyTransfer -> AuxVariable -> CoupleVarNeumannBC\nIf the meshes are not identical for the Main and sub-app, then I believe all that will change is a custom Transfer will be needed.",
                          "url": "https://github.com/idaholab/moose/discussions/17107#discussioncomment-418741",
                          "updatedAt": "2023-02-02T01:45:14Z",
                          "publishedAt": "2021-03-01T16:51:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Possible bug stork.sh script",
          "author": {
            "login": "sahu07"
          },
          "bodyText": "Dear MOOSE team,\nI tried to create a new MOOSE app called \"Test\" using the stork script and added an action called \"CustomAction\".\n./moose/scripts/stork.sh Test\nI added the action to my app using the method registerAll(Factory & f, ActionFactory & af, Syntax & s) as discussed in MOOSE-workshop slides.\nvoid\nTestApp::registerAll(Factory & f, ActionFactory & af, Syntax & s)\n{\n  ModulesApp::registerAll(f, af, s);\n  Registry::registerObjectsTo(f, {\"TestApp\"});\n  Registry::registerActionsTo(af, {\"TestApp\"});\n\n  /* register custom execute flags, action syntax, etc. here */\n registerSyntax(\"CustomAction\",\"TestCustom\");\n}\nBut it gives me the following error\nRebuilding symlinks in /users/PAS1784/sarita/projects/test/build/header_symlinks\nCompiling C++ with suffix (in opt mode) /users/PAS1784/sarita/projects/moose/modules/module_loader/src/ModulesApp.C...\nCompiling C++ (in opt mode) /users/PAS1784/sarita/projects/test/src/base/TestApp.C...\nCompiling C++ (in opt mode) /users/PAS1784/sarita/projects/test/src/main.C...\nCompiling C++ (in opt mode) /users/PAS1784/sarita/projects/test/test/src/base/TestTestApp.C...\nIn file included from /users/PAS1784/sarita/projects/moose/framework/build/header_symlinks/MooseApp.h:17,\n                 from /users/PAS1784/sarita/projects/test/build/header_symlinks/TestApp.h:12,\n                 from /users/PAS1784/sarita/projects/test/src/base/TestApp.C:1:\n/users/PAS1784/sarita/projects/test/src/base/TestApp.C: In static member function 'static void TestApp::registerAll(Factory&, ActionFactory&, Syntax&)':\n/users/PAS1784/sarita/projects/moose/framework/build/header_symlinks/ActionFactory.h:28:3: error: invalid use of member function 'Syntax& MooseApp::syntax()' (did you forget the '()' ?)\n   syntax.registerActionSyntax(action, action_syntax, \"\", __FILE__, __LINE__)\n   ^~~~~~\n/users/PAS1784/sarita/projects/test/src/base/TestApp.C:33:3: note: in expansion of macro 'registerSyntax'\n   registerSyntax(\"CustomAction\",\"TestCustom\");\n   ^~~~~~~~~~~~~~\nmake: *** [/users/PAS1784/sarita/projects/moose/framework/build.mk:118: /users/PAS1784/sarita/projects/test/src/base/TestApp.x86_64-pc-linux-gnu.opt.lo] Error 1\nmake: *** Waiting for unfinished jobs....\n\nBut if I change the name of the third argument to registerAll to \"syntax\" then it works fine as shown below.\nvoid\nTestApp::registerAll(Factory & f, ActionFactory & af, Syntax & syntax)\n{\n  ModulesApp::registerAll(f, af, syntax);\n  Registry::registerObjectsTo(f, {\"TestApp\"});\n  Registry::registerActionsTo(af, {\"TestApp\"});\n\n  /* register custom execute flags, action syntax, etc. here */\n  registerSyntax(\"CustomAction\",\"TestCustom\");\n}\nI think the name of the third argument should be \"syntax\". What do you think ?\nRegards,\nSarita",
          "url": "https://github.com/idaholab/moose/discussions/17152",
          "updatedAt": "2022-08-27T08:52:03Z",
          "publishedAt": "2021-02-28T03:53:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "registerSyntax is a function-like macro, and you can see its definition here:\n\n  \n    \n      moose/framework/include/actions/ActionFactory.h\n    \n    \n        Lines 27 to 28\n      in\n      6437ec8\n    \n  \n  \n    \n\n        \n          \n           #define registerSyntax(action, action_syntax)                                                      \\ \n        \n\n        \n          \n             syntax.registerActionSyntax(action, action_syntax, \"\", __FILE__, __LINE__) \n        \n    \n  \n\n\nThis is why changing s to syntax worked, since the macro definition holds a Syntax object called syntax. By looking at the definition above, it suggests that you could also leave the s and do this:\nvoid\nTestApp::registerAll(Factory & f, ActionFactory & af, Syntax & s)\n{\n  ModulesApp::registerAll(f, af, s);\n  Registry::registerObjectsTo(f, {\"TestApp\"});\n  Registry::registerActionsTo(af, {\"TestApp\"});\n\n  /* register custom execute flags, action syntax, etc. here */\n  s.registerActionSyntax(\"CustomAction\", \"TestCustom\");\n}\nwhich should be equivalent. I can see how this is confusing, judging from the usage of this particular macro in MOOSE examples. I will make a PR to change this piece of stork source code, so that users can properly use this macro by default. Thank you!",
                  "url": "https://github.com/idaholab/moose/discussions/17152#discussioncomment-414172",
                  "updatedAt": "2022-08-27T08:53:07Z",
                  "publishedAt": "2021-02-28T05:07:07Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "PR is #17154",
                          "url": "https://github.com/idaholab/moose/discussions/17152#discussioncomment-414201",
                          "updatedAt": "2022-08-27T08:53:15Z",
                          "publishedAt": "2021-02-28T05:38:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Mobile Particle",
          "author": {
            "login": "mnabilbhuiyan"
          },
          "bodyText": "Hello MOOSE users,\nAccept my warm greetings. I am trying to simulate grain coarsening with mobile particles. I am following this slide. I badly need some guidance how to make these particles mobile. We want to see during coarsening if these particles change their positions how the micro structure will be changed.\n.\nmy kernel as following:\n[Kernels]\n# Kernel block, where the kernels defining the residual equations are set up.\n[./PolycrystalKernel]\nc = c\n# Custom action creating all necessary kernels for grain growth.  All input parameters are up in GlobalParams\n[../]\n[]\n[AuxVariables]\n[./c]\n[./InitialCondition]\ntype = MultiSmoothCircleIC\nvariable = c\ninvalue = 1.0\noutvalue = 0.0001\nbubspac = 30.0 # This spacing is from bubble center to bubble center\nnumbub = 25\nradius = 20.0\nint_width = 1.0\nradius_variation = 0.2\nradius_variation_type = uniform\n[../]\n[../]\nBest Regards,\nNabil",
          "url": "https://github.com/idaholab/moose/discussions/17095",
          "updatedAt": "2022-10-23T02:34:20Z",
          "publishedAt": "2021-02-22T20:45:20Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "SudiptaBiswas"
                  },
                  "bodyText": "First, you might consider using PolycrystalVoronoiVoidIC to set up the initial conditions. Next, you need to include the Cahn-Hilliard equation in the system to capture the evolution of the particles/bubbles. The mobility corresponding to the CH equations would dictate the movement of these particles.",
                  "url": "https://github.com/idaholab/moose/discussions/17095#discussioncomment-398483",
                  "updatedAt": "2022-10-23T02:34:22Z",
                  "publishedAt": "2021-02-23T17:33:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mnabilbhuiyan"
                          },
                          "bodyText": "Thank you",
                          "url": "https://github.com/idaholab/moose/discussions/17095#discussioncomment-413270",
                          "updatedAt": "2022-10-23T02:34:22Z",
                          "publishedAt": "2021-02-27T19:46:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Dear Nabeel ( @mnabilbhuiyan ) ,\nI am also interested in studying grain growth phenomena. Is the slide which you shared, open for public ? If so, can you share the link for the slides ?\n.Regards,\nKamal",
                  "url": "https://github.com/idaholab/moose/discussions/17095#discussioncomment-413584",
                  "updatedAt": "2022-10-23T02:34:22Z",
                  "publishedAt": "2021-02-27T22:33:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to read spatial-dependent Young's modulus into Materials?",
          "author": {
            "login": "zhang-rite"
          },
          "bodyText": "Hi\nCould anyone tell me how to read spatial dependent Young's modulus values from a file into materials?\nAs referring to an example in Porous media module, I know how to read values for permeability field to materials through\nPiecewiseMultilinear  ->  FunctionAux -> PorousFlowPermeabilityConstFromVar\nBut doing the same for Young's modulus seems does not work using ComputeVariableIsotropicElasticityTensor.  Any example (code)?\nThank you.",
          "url": "https://github.com/idaholab/moose/discussions/17150",
          "updatedAt": "2022-06-26T08:38:27Z",
          "publishedAt": "2021-02-27T14:32:37Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "zhang-rite"
                  },
                  "bodyText": "Oh, after posting this question, I just become lucky!\nTo solve the problem,  one may just add a ParsedMaterial to bridge the FunctionAux  to Materials.\nPerhaps there is a better solution?",
                  "url": "https://github.com/idaholab/moose/discussions/17150#discussioncomment-412588",
                  "updatedAt": "2022-06-26T08:38:27Z",
                  "publishedAt": "2021-02-27T15:09:03Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MOOSE Compile Problem",
          "author": {
            "login": "joe61vette"
          },
          "bodyText": "Hello:  this is a first.  I have never had MOOSE fail to compile before.\nSystem is a MacBook Pro running 10.14.6\nXcode version 10.2.1\nFirst, I updated my moose environment via conda.\nI cloned moose into ~/projects/moose\nI only needed the NS app, so:\n(moose) joe$ cd /Users/joe/projects/moose/modules/navier_stokes\n(moose) joe$ make -j6\nIt ran for a while but then I get an error:\nIn file included from /Users/joe/projects/moose/framework/build/unity_src/mesh_Unity.C:9:\n/Users/joe/projects/moose/framework/src/mesh/MooseMesh.C:2491:12: error: no member named 'set_isnt_prepared' in 'libMesh::MeshBase'\n_mesh->set_isnt_prepared();\n~~~~~  ^\n/Users/joe/projects/moose/framework/src/mesh/MooseMesh.C:2797:28: error: too many arguments to function call, expected at most single argument 'os', have 2 arguments\ngetMesh().print_info(os, verbosity);\n/Users/jmkelly/miniconda3/envs/moose/libmesh/include/libmesh/mesh_base.h:1193:3: note: 'print_info' declared here\nvoid print_info (std::ostream & os=libMesh::out) const;\n^\n2 errors generated.\nmake: *** [/Users/joe/projects/moose/framework/build/unity_src/mesh_Unity.x86_64-apple-darwin19.5.0.opt.lo] Error 1\nmake: *** Waiting for unfinished jobs....\n\nAny suggestions?  The entire terminal output is attached.  Thanks,\nJoe Kelly\n[compile_error.txt](https://github.com/idaholab/moose/files/6039126/compile_error.txt)",
          "url": "https://github.com/idaholab/moose/discussions/17127",
          "updatedAt": "2022-06-29T15:59:06Z",
          "publishedAt": "2021-02-24T22:05:55Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "This is probably due to an old copy of libmesh, caused by a failure of conda to update past a certain version.\nWhat is the version number for moose-libmesh when you perform the command conda list? If that version number leads with 2020.12.xx then we need to force the update to the newest version. In your moose environment, run the command conda install moose-libmesh=2021.02.15 which will force an update to the newest version of libmesh. Then perform a clean (make clobberall) and try to make again.\nTL;DR on the thread below:\nThis ended up being three main things...\n(1) An out-of-date moose-libmesh package causing the original compile issue\n(2) An out-of-date conda channel (https://mooseframework.org/conda/moose) which needed to be updated to idaholab\n(3) root user ownership of ~/.conda, which needs to be owned by the regular user in order to manipulate environments.\nAs a general reminder to all users - do not use sudo while making changes or updates to conda if it is installed in your home directory! It can cause permissions issues that can lead to a broken or partially-broken conda installation.",
                  "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403335",
                  "updatedAt": "2022-06-29T15:59:17Z",
                  "publishedAt": "2021-02-24T22:18:09Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "joe61vette"
                          },
                          "bodyText": "That does appear to be a problem.  I got:\nmoose-libmesh             2020.10.05\nSo, I'll go ahead and try to force it to update.  Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403353",
                          "updatedAt": "2022-06-29T16:00:14Z",
                          "publishedAt": "2021-02-24T22:24:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sapitts"
                          },
                          "bodyText": "FWIW, this procedure helped me solve a similar issue this morning",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403379",
                          "updatedAt": "2022-06-29T16:00:15Z",
                          "publishedAt": "2021-02-24T22:31:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joe61vette"
                          },
                          "bodyText": "Unfortunately, the Conda command didn't work.  I got:\n(base) JMKs-MBP:~ jmkelly$ conda activate moose\n(moose) JMKs-MBP:~ jmkelly$ conda install moose-libmesh=2021.02.15\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\nSolving environment: failed with repodata from current_repodata.json, will retry with next repodata source.\nCollecting package metadata (repodata.json): done\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\nSolving environment: | failed\nCondaError: KeyboardInterrupt\nI say there forever, so I finally killed it.",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403389",
                          "updatedAt": "2022-06-29T16:00:15Z",
                          "publishedAt": "2021-02-24T22:35:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "OK - so in that case, I would create another environment if the database is confused or corrupted. You can do that by performing:\nconda remove -n moose --all\nand then\nconda create -n moose moose-libmesh moose-tools\nto get back to a basic moose environment.",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403397",
                          "updatedAt": "2022-06-29T16:00:17Z",
                          "publishedAt": "2021-02-24T22:37:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Conda might complain if you try to remove the moose environment without deactivating first. So if it does, do conda deactivate to get back to the base environment.",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403405",
                          "updatedAt": "2022-06-29T16:00:17Z",
                          "publishedAt": "2021-02-24T22:39:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joe61vette"
                          },
                          "bodyText": "Something must really be messed up.  I did:\nconda deactivate\nconda remove -n moose --all\nit listed packages to be removed and I replied y.  Then:\nProceed ([y]/n)? y\nPreparing transaction: done\nVerifying transaction: - WARNING conda.core.path_actions:verify(963): Unable to create environments file. Path not writable.\nenvironment location: /Users/jmkelly/.conda/environments.txt\ndone\nExecuting transaction: \\ WARNING conda.core.envs_manager:register_env(52): Unable to register environment. Path not writable or missing.\nenvironment location: /Users/jmkelly/miniconda3/envs/moose\nregistry file: /Users/jmkelly/.conda/environments.txt\ndone\n(base) JMKs-MBP:~ jmkelly$ conda create -n moose moose-libmesh moose-tools\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with repodata from current_repodata.json, will retry with next repodata source.\nCollecting package metadata (repodata.json): done\nSolving environment: / failed\nCondaError: KeyboardInterrupt\nAgain, I had to kill it.",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403416",
                          "updatedAt": "2022-08-16T02:07:29Z",
                          "publishedAt": "2021-02-24T22:44:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Could you perform a conda env list and post the output? I'm wondering if it fully deleted your MOOSE environment.",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403421",
                          "updatedAt": "2022-08-16T02:07:51Z",
                          "publishedAt": "2021-02-24T22:46:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joe61vette"
                          },
                          "bodyText": "Here it is:\n(base) JMKs-MBP:~ jmkelly$ conda env list\nconda environments:\n\nbase                  *  /Users/jmkelly/miniconda3",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403427",
                          "updatedAt": "2022-08-16T02:07:51Z",
                          "publishedAt": "2021-02-24T22:48:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "OK so it looks like it was removed properly. One more thing to check ls ~/miniconda3/envs\nIf you don't see moose there, then I would try conda create -n moose moose-libmesh moose-tools again. It can take some time (several minutes or more) to do that \"Solving Environment\" step, especially if it has to do some extra work (since it failed the first time it tried).",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403431",
                          "updatedAt": "2022-08-16T02:07:51Z",
                          "publishedAt": "2021-02-24T22:50:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joe61vette"
                          },
                          "bodyText": "I just tried to update Conda (just to make sure that wasn't contributing to the problem).  I got the same warning about being unable to register the environment.  Here it is:\nI used:   conda update -n base -c defaults conda\nand the warning was:\nDownloading and Extracting Packages\nca-certificates-2021 | 121 KB    | ######################################################################################## | 100%\nlibedit-3.1.20191231 | 96 KB     | ######################################################################################## | 100%\ncertifi-2020.12.5    | 140 KB    | ######################################################################################## | 100%\nurllib3-1.26.3       | 105 KB    | ######################################################################################## | 100%\nopenssl-1.1.1j       | 2.2 MB    | ######################################################################################## | 100%\npysocks-1.7.1        | 31 KB     | ######################################################################################## | 100%\nsqlite-3.33.0        | 1.3 MB    | ######################################################################################## | 100%\nconda-4.9.2          | 2.9 MB    | ######################################################################################## | 100%\nidna-2.10            | 52 KB     | ######################################################################################## | 100%\ncffi-1.14.5          | 214 KB    | ######################################################################################## | 100%\nlibffi-3.3           | 44 KB     | ######################################################################################## | 100%\nruamel_yaml-0.15.87  | 235 KB    | ######################################################################################## | 100%\nbrotlipy-0.7.0       | 333 KB    | ######################################################################################## | 100%\ncryptography-3.3.1   | 559 KB    | ######################################################################################## | 100%\npycosat-0.6.3        | 86 KB     | ######################################################################################## | 100%\npycparser-2.20       | 94 KB     | ######################################################################################## | 100%\ntqdm-4.56.0          | 80 KB     | ######################################################################################## | 100%\nyaml-0.2.5           | 72 KB     | ######################################################################################## | 100%\nchardet-4.0.0        | 194 KB    | ######################################################################################## | 100%\nconda-package-handli | 1.5 MB    | ######################################################################################## | 100%\nrequests-2.25.1      | 52 KB     | ######################################################################################## | 100%\ntk-8.6.10            | 3.0 MB    | ######################################################################################## | 100%\nsetuptools-52.0.0    | 721 KB    | ######################################################################################## | 100%\npyopenssl-20.0.1     | 49 KB     | ######################################################################################## | 100%\nsix-1.15.0           | 27 KB     | ######################################################################################## | 100%\nreadline-8.1         | 333 KB    | ######################################################################################## | 100%\nPreparing transaction: done\nVerifying transaction: / WARNING conda.core.path_actions:verify(963): Unable to create environments file. Path not writable.\nenvironment location: /Users/jmkelly/.conda/environments.txt\ndone\nExecuting transaction: \\ WARNING conda.core.envs_manager:register_env(52): Unable to register environment. Path not writable or missing.\nenvironment location: /Users/jmkelly/miniconda3\nregistry file: /Users/jmkelly/.conda/environments.txt\ndone",
                          "url": "https://github.com/idaholab/moose/discussions/17127#discussioncomment-403445",
                          "updatedAt": "2022-06-29T16:00:19Z",
                          "publishedAt": "2021-02-24T22:56:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Solving Tangent linear System",
          "author": {
            "login": "nikhilgv91"
          },
          "bodyText": "Hello,\nMy goal is to perform PDE-constrained optimization, and I am using MOOSE to perform the simulations. In addition to the simulation result, I would like to compute the solution of the 'Tangent Linear System' using MOOSE. A short explanation for what I would like to do:\nMy PDE: F (T,v) = 0\nT : state variable\nv : control variable (real number)\nTangent linear system: [dF(T,v) / dT] * x = - [dF(T,v) / dv] ; linear solve for x\nThe matrix dF(T,v) / dT is the jacobian of the original PDE. I would like to know if I can modify the executioner (or other appropriate object) so that the tangent linear system can be solved right after the \"original\" MOOSE solve in a single run of the simulation.\nI am aware that MOOSE can perform matrix-free solves, but for my problem I am using a NEWTON solve.\nThanks in advance!\nKind regards,\nNikhil",
          "url": "https://github.com/idaholab/moose/discussions/16934",
          "updatedAt": "2023-06-28T10:23:13Z",
          "publishedAt": "2021-02-09T16:23:56Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "YaqiWang"
                  },
                  "bodyText": "Yes. You can modify executioners in whatever way. Once you have [dF(T,v) / dT] and [dF(T,v) / dv], you can directly use PETSc to solve for x. If dF(T,v) / dT is fixed in this solve, you do not have to use MOOSE's PJFNK machinery which could be messy with your \"original\" system. I feel you can evaluate dF(T,v) / dv pretty easily with MOOSE residual evaluation and Control for v. Just my suggestions.",
                  "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-353746",
                  "updatedAt": "2023-06-28T10:23:28Z",
                  "publishedAt": "2021-02-09T16:58:31Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "nikhilgv91"
                          },
                          "bodyText": "Thanks for  your reply!\nI went through to code to try and figure out how the MOOSE performs the solves. I realized that the snes solve routines are called by the petsc_nonlinear_solver object in libmesh. I am not sure where (or if) the jacobian is constructed. Could you please give me some hint?",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-355758",
                          "updatedAt": "2024-04-22T21:05:03Z",
                          "publishedAt": "2021-02-10T08:35:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "The jacobian or matrix is stored here: SparseMatrix<Number> * FEProblem::getNonlinearSystem()::sys()::matrix. It is probably constructed by SNES wrapped in the petsc_nonlinear_solver during solve. The Jacobian or matrix in the nonlinear implicit system is a PetscMatrix<Real>  which has a member function mat() to return a raw PETSc matrix pointer in type of Mat. But MOOSE allows you to construct a matrix by yourself with the function Moose::compute_jacobian in NonlinearSystem.C. This is my understanding.",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-357094",
                          "updatedAt": "2024-04-22T21:05:04Z",
                          "publishedAt": "2021-02-10T16:05:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nikhilgv91"
                          },
                          "bodyText": "I was able to access the jacobian as a SparseMatrix object. You mentioned in your earlier message that a vector can be computed using MOOSE residual evaluation. Could you please give more info about that? I see that there is a computeResidual function in NonlinearSystem class. Can this function be triggered through a kernel with a specific tag defined in the input file?",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-359649",
                          "updatedAt": "2024-04-22T21:05:03Z",
                          "publishedAt": "2021-02-11T14:12:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "There is a tagging system: https://mooseframework.inl.gov/framework_development/tagging.html",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-359994",
                          "updatedAt": "2023-06-28T10:23:28Z",
                          "publishedAt": "2021-02-11T16:00:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nikhilgv91"
                          },
                          "bodyText": "Thanks for this hint. Are there more detailed tutorials on the use of tagging? I looked at some input files in the module tests that uses tagging, but I don't understand it very well.",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-360553",
                          "updatedAt": "2023-06-28T10:23:28Z",
                          "publishedAt": "2021-02-11T19:12:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "I was thinking to use two residual evaluations to evaluate that one with v another with v+epsilon. Then take the difference of the two divided by epsilon.",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-360642",
                          "updatedAt": "2023-06-28T10:23:28Z",
                          "publishedAt": "2021-02-11T19:43:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nikhilgv91"
                          },
                          "bodyText": "The analytical derivative is trivial to compute, so I would prefer to assemble the residual using the analytical expression.",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-360738",
                          "updatedAt": "2023-06-28T10:23:31Z",
                          "publishedAt": "2021-02-11T20:21:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nikhilgv91"
                          },
                          "bodyText": "@aeslaughter and @YaqiWang thanks for your respective suggestions! I was able to solve the Tangent Linear System. I will mark this thread as the solution to my query.",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-401223",
                          "updatedAt": "2023-06-28T10:23:31Z",
                          "publishedAt": "2021-02-24T13:15:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "@zachmprince @lynnmunday How does this relate to your optimization work?",
                  "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-355541",
                  "updatedAt": "2023-06-28T10:23:31Z",
                  "publishedAt": "2021-02-10T06:42:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "zachmprince"
                          },
                          "bodyText": "This is somewhat related. @lynnmunday could speak more to it. Basically we are approximating  [dF(T,v) / dv]  using an adjoint equation evaluation, at least that is my understanding.",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-360423",
                          "updatedAt": "2023-06-28T10:23:32Z",
                          "publishedAt": "2021-02-11T18:21:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nikhilgv91"
                          },
                          "bodyText": "Is PDE-constrained optimization already already part of the modules?",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-360933",
                          "updatedAt": "2023-06-28T10:23:32Z",
                          "publishedAt": "2021-02-11T21:14:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lynnmunday"
                          },
                          "bodyText": "We have an app that is doing pde constrained optimization but it needs cleaned up with better testing before we can merge it into moose.  I think we would have it merged in by the end of March.  We are use TAO to do the optimization and we are providing it with a forward and gradient solve.  The gradient solve is computed from the adjoint which we get by just solving the system a second time with the adjoint loads and bcs.  We do this with the multiapp system.",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-387029",
                          "updatedAt": "2023-06-28T10:23:32Z",
                          "publishedAt": "2021-02-19T21:32:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nikhilgv91"
                          },
                          "bodyText": "@lynnmunday Thanks for the detailed reply!",
                          "url": "https://github.com/idaholab/moose/discussions/16934#discussioncomment-398258",
                          "updatedAt": "2023-06-28T10:23:32Z",
                          "publishedAt": "2021-02-23T16:35:39Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Thermodynamic Properties of CO2 - R.Span and W.Wagner",
          "author": {
            "login": "andreubernadserra"
          },
          "bodyText": "The values for _a4 and _gamma3 in header file CO2FluidProperties.h differ slightly from those reported in the original reference:\n\nThe last value of the  _a4 array is 3.000 (instead of the implemented 3.500) according to Table 31 of the cited reference.\nThe last value of the  _gamma3 array is 1.22 (instead of the implemented 1.25) according to mentioned table.\n\nWere these values modified on purpose? Nevertheless, this should have no impact on the calculations.\nThanks in advance and have a nice day!",
          "url": "https://github.com/idaholab/moose/discussions/17104",
          "updatedAt": "2022-06-14T07:21:11Z",
          "publishedAt": "2021-02-23T09:54:29Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "@cpgr ?",
                  "url": "https://github.com/idaholab/moose/discussions/17104#discussioncomment-396837",
                  "updatedAt": "2022-06-14T07:21:16Z",
                  "publishedAt": "2021-02-23T10:21:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "I would assume these are simply typos I made when I was writing it! It probably (hopefully) won't affect the calculations appreciably as you say, but should be fixed up. Thanks for spotting it!",
                  "url": "https://github.com/idaholab/moose/discussions/17104#discussioncomment-396916",
                  "updatedAt": "2022-06-14T07:21:10Z",
                  "publishedAt": "2021-02-23T10:49:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "I've fixed this in #17119. Thanks again for spotting this!",
                  "url": "https://github.com/idaholab/moose/discussions/17104#discussioncomment-399799",
                  "updatedAt": "2022-06-14T07:21:32Z",
                  "publishedAt": "2021-02-24T02:09:08Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "andreubernadserra"
                          },
                          "bodyText": "Thank you for the prompt response. Greetings from Barcelona!",
                          "url": "https://github.com/idaholab/moose/discussions/17104#discussioncomment-400684",
                          "updatedAt": "2022-06-14T07:21:32Z",
                          "publishedAt": "2021-02-24T10:18:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to display displacement?",
          "author": {
            "login": "zhang-rite"
          },
          "bodyText": "Hi\nHere is a native question. My problem has primary variables \"disp_r disp_z\". In default output exodus file, there shows a variable of \"disp_\". Now I want to see the differential displacement of each step to a special time (_initial).\nThe questions are\n\nHow to make \"disp_r\" and \"disp_z\" can be visualized separately by exodus file?\nhow can I define \"disp_r_initial\" in auxkernel or in kernel or in some other ways then I can calculate the difference?\n\nI know the way for strain and stress. I just don't know how to do this for primary variables. Thank you.",
          "url": "https://github.com/idaholab/moose/discussions/17122",
          "updatedAt": "2024-10-31T21:05:46Z",
          "publishedAt": "2021-02-24T04:44:50Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Seems like i'm your personal assistant!  :-)\n\n\nThis is a paraview question.  Look up the top of the paraview window.  You should see a box containing a list of variables you can display.  One of them will be \"disp_\" as you have noticed already.  Click it.  Then look to the right of this box, and you should see a box with \"Magnitude; x; y; z\" in it.  Choose your desired component (your disp_r will be called \"x\" by paraview)\n\n\nUse ParsedAux and execute on initial.  Eg\n\n\n [disp_r_initial]\n    type = ParsedAux\n    args = disp_r\n    function = disp_r\n    variable = disp_r_initial\n    execute_on = initial\n  []\n\nYou can also define\n [disp_r_change]\n    type = ParsedAux\n    args = 'disp_r disp_r_initial'\n    function = 'disp_r - disp_r_initial'\n    variable = disp_r_change\n []",
                  "url": "https://github.com/idaholab/moose/discussions/17122#discussioncomment-400061",
                  "updatedAt": "2024-10-31T21:05:46Z",
                  "publishedAt": "2021-02-24T05:19:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "zhang-rite"
                          },
                          "bodyText": "Wow, Andy, thanks again and again \ud83d\ude04 !",
                          "url": "https://github.com/idaholab/moose/discussions/17122#discussioncomment-400117",
                          "updatedAt": "2024-10-31T21:06:02Z",
                          "publishedAt": "2021-02-24T06:09:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}