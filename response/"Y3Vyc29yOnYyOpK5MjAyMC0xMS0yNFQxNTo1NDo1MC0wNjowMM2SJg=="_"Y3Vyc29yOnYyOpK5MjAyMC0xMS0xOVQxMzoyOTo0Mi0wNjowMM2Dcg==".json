{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMC0xMS0xOVQxMzoyOTo0Mi0wNjowMM2Dcg=="
    },
    "edges": [
      {
        "node": {
          "title": "Solving ODE in each node",
          "author": {
            "login": "rogeraubert"
          },
          "bodyText": "Hello,\nI am trying to figure out, how to solve a diffusion-reaction PDE, that is coupling a diffusion kernel with an ODE for each point in space. Do you have a short example for something similar? I think, the Crane application is doing this, but they don't use advanced ODE solvers, they rather integrate the reaction into the PDE, which is not optimal for stiff reactions.\nAt first glance I thought that this example would demonstrate such a coupling:\nhttps://mooseframework.inl.gov/getting_started/examples_and_tutorials/examples/ex18_scalar_kernel.html\nBut apparently the example solves an ODE for two scalar variables x(t) and y(t) independent from solving the PDE for the field \"diffused\". Am I wrong?\nThis brings me to another question. I am confused what is meant by a SCALAR variable in MOOSE. To my understanding, there is the general notion of either scalar or vector fields (having a one-dimensional or three-dimensional value in each point in space). MOOSE seems to use SCALAR for a single value (not a field). This is absolutely correct, of course, but I wonder if scalar fields can also be defined as SCALAR variables in MOOSE? The difference was not quite obvious to me when I went through various tutorials and workshop slides.\nThanks\nRoger",
          "url": "https://github.com/idaholab/moose/discussions/16219",
          "updatedAt": "2022-07-26T17:11:54Z",
          "publishedAt": "2020-11-17T07:41:22Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "SCALAR is a variable type that does not live on the mesh. Think of a \"global\" quantity. For ODEs at each node look up NodalKernel.",
                  "url": "https://github.com/idaholab/moose/discussions/16219#discussioncomment-131677",
                  "updatedAt": "2022-07-26T17:11:55Z",
                  "publishedAt": "2020-11-17T15:07:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Btw. asking two questions in one post is not really suitable for GitHub discussions. If multiple people address different questions in your post. We rely on the asker to mark an answer so that the discussion isn't listed as \"unanswered\" in the overview.",
                          "url": "https://github.com/idaholab/moose/discussions/16219#discussioncomment-135780",
                          "updatedAt": "2022-07-26T17:11:55Z",
                          "publishedAt": "2020-11-22T16:16:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rogeraubert"
                          },
                          "bodyText": "Sorry for that. I wanted to mark my question as answered when somebody replies that CVODE can be used to implement a TimeIntegrator for MOOSE, or why it cannot or should not be used.",
                          "url": "https://github.com/idaholab/moose/discussions/16219#discussioncomment-136042",
                          "updatedAt": "2022-07-26T17:11:55Z",
                          "publishedAt": "2020-11-23T07:08:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "rogeraubert"
                  },
                  "bodyText": "Thank you. As far as I see, the ReactionNodalKernel is just adding a term -k*u, and the time integration is still performed by low-order methods like CrankNicolson or ImplicitEuler. Shouldn't one use variable-order variable-timestep methods like CVODE for integrating systems of stiff reactions?\n(The other question about SCALAR is now very clear)\nThanks\nRoger",
                  "url": "https://github.com/idaholab/moose/discussions/16219#discussioncomment-131900",
                  "updatedAt": "2022-07-26T17:11:55Z",
                  "publishedAt": "2020-11-17T19:11:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "keniley1"
                  },
                  "bodyText": "I'm the developer of Crane, which you mentioned in your original post. You're right about what Crane is doing - when run as part of a set of diffusion-reaction equations in 1D-3D, the reaction terms are integrated into the full PDE and thus use the same time integration schemes as the diffusion terms.  I've used Crane (coupled to Zapdos) pretty extensively for systems of several hundred reactions in plasma physics problems without issue, though I haven't actually measured the stiffness of my system of equations.\nI'm willing to look into alternative formulations if they exist though! Do you have any examples of what you're looking for? Correct me if I'm wrong, but I think what you're trying to do is first solving the diffusion equation with finite elements for a given timestep, and then solving a set of ODEs at each node using more complex time integration schemes over the same timestep, and then iterating back and forth until the simulation completes -- is this correct? I think there might be a way to do something like this with the external_petsc_problem example in MOOSE. Not sure if it's possible, but maybe I can run PETSc as a MultiApp like in that example to handle the ODEs at each node? Maybe someone on the MOOSE/PETSc team can chime in with advice here -- I've never done something like this myself. I know that CVODE specifically is lumped into TS in PETSc, and last I checked the TS library is not accessible to MOOSE applications.",
                  "url": "https://github.com/idaholab/moose/discussions/16219#discussioncomment-133685",
                  "updatedAt": "2022-07-26T17:11:58Z",
                  "publishedAt": "2020-11-19T14:25:57Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "rogeraubert"
                  },
                  "bodyText": "Dear Shane,\nyour reply helped me very much to think about how to proceed. I don't have a solution, but I am only exploring the options.\nWhat you describe as solving the FE diffusion time step separately from the (stiff) reaction ODEs and iterating, where only the reaction ODEs make use of advanced time integrators for stiff systems, is very close to the OpenFoam approach:\nhttps://develop.openfoam.com/Development/openfoam/-/tree/master/applications/solvers/combustion/reactingFoam and https://develop.openfoam.com/Development/openfoam/-/blob/master/applications/solvers/combustion/reactingFoam/YEqn.H\nLine #13 of YEqn.H updates the reaction rate (using Seulex or other integrators) and line #29 adds the rate to the transport equation.\nOpenFoam seems to be successful with this approach although there may be situations where decoupling the diffusion from the reaction is not optimal.\nI think the MOOSE framework can be even more efficient by solving the system fully implicitly with AD Jacobians. https://github.com/LLNL/sundials/blob/master/doc/cvode/cv_examples.pdf includes some examples how CVODE can integrate a discretized PDE, although I didn't find a stiff PDE in those examples. But I think it should be possible to add CVODE as TimeIntegrator to Moose and explore the advantages or disadvantages for solving reaction-diffusion PDEs fully implicitly, or are there clear reasons not to try this?\nOf course, also BDF2 in MOOSE can integrate stiff systems without stability issues, but it is missing the linked order/timestep adaptivity from CVODE. The question is, which type of reactions in relation to which mesh sizes benefit most from the variable order schemes of CVODE. I'd like to have the choice of more time integrators than those currently available in MOOSE.\nThanks\nRoger",
                  "url": "https://github.com/idaholab/moose/discussions/16219#discussioncomment-134552",
                  "updatedAt": "2022-07-26T17:11:59Z",
                  "publishedAt": "2020-11-20T08:40:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "rogeraubert"
                  },
                  "bodyText": "I understand the previous answers such that MOOSE doesn't allow the implementation of variable-order variable-timestep TimeIntegrators that are suitable for efficient integration of stiff reaction-diffusion systems. Nothing more efficient that BDF2 seems to be possible.",
                  "url": "https://github.com/idaholab/moose/discussions/16219#discussioncomment-137893",
                  "updatedAt": "2022-07-26T17:12:00Z",
                  "publishedAt": "2020-11-24T19:16:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "time_tolerance and sync_times",
          "author": {
            "login": "hsheldon"
          },
          "bodyText": "Does time_tolerance apply to sync_times, or is it only used at the beginning and end of  the simulation? I'm having trouble with the solver not reaching sync_times exactly, then trying to take a tiny step to reach the next sync_time and failing to converge. Setting time_tolerance doesn't seem to make any difference.",
          "url": "https://github.com/idaholab/moose/discussions/16285",
          "updatedAt": "2023-08-16T13:41:54Z",
          "publishedAt": "2020-11-23T23:49:17Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Yes, it it applied in the TimeStepper object. The \"timestep_tolerence\" in the Executioner is applied to the TimeStepper here: \n  \n    \n      moose/framework/src/timesteppers/TimeStepper.C\n    \n    \n         Line 130\n      in\n      ee00f87\n    \n  \n  \n    \n\n        \n          \n           if (!_sync_times.empty() && _time + dt + _timestep_tolerance >= (*_sync_times.begin()))",
                  "url": "https://github.com/idaholab/moose/discussions/16285#discussioncomment-137081",
                  "updatedAt": "2023-08-16T13:41:54Z",
                  "publishedAt": "2020-11-24T00:04:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hsheldon"
                          },
                          "bodyText": "Ah, I needed timestep_tolerance, not time_tolerance! Thanks. It works now.\n@WilkAndy",
                          "url": "https://github.com/idaholab/moose/discussions/16285#discussioncomment-137083",
                          "updatedAt": "2023-08-16T13:41:54Z",
                          "publishedAt": "2020-11-24T00:17:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Ah, I needed timestep_tolerance, not time_tolerance! Thanks. It works now.\n@WilkAndy\n\nOoops, sorry for setting you wrong @hsheldon",
                          "url": "https://github.com/idaholab/moose/discussions/16285#discussioncomment-137093",
                          "updatedAt": "2023-08-16T13:42:11Z",
                          "publishedAt": "2020-11-24T00:44:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "Glad it works, I didn't even notice the difference between your question and what I found. \ud83d\ude04",
                          "url": "https://github.com/idaholab/moose/discussions/16285#discussioncomment-137686",
                          "updatedAt": "2023-08-16T13:42:11Z",
                          "publishedAt": "2020-11-24T15:41:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Phase field crack",
          "author": {
            "login": "caoductoan379"
          },
          "bodyText": "my input file is  for phase field crack. I got an error below. Could you please let me know what is problem by using  \"MeshModifiers\" ?\nThe error i got as follow:\n*** ERROR ***\nCyclic_2D_S1.i:8: section 'MeshModifiers' does not have an associated \"Action\".\nDid you misspell it?\nCyclic_2D_S1.i:9: section 'MeshModifiers/noncrackBottom2' does not have an associated \"Action\".\nDid you misspell it?\nCyclic_2D_S1.i:15: section 'MeshModifiers/noncrackBottom1' does not have an associated \"Action\".\nDid you misspell it?\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n0x00007fbd1d1c0457 in __GI___waitpid (pid=4544, stat_loc=stat_loc@entry=0x7ffc63617da8, options=options@entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30\n#0  0x00007fbd1d1c0457 in __GI___waitpid (pid=4544, stat_loc=stat_loc@entry=0x7ffc63617da8, options=options@entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30\n#1  0x00007fbd1d12b177 in do_system (line=) at ../sysdeps/posix/system.c:149\n#2  0x00007fbd1de9b6ac in libMesh::print_trace(std::ostream&) () from /home/user/miniconda3/envs/moose/libmesh/lib/libmesh_opt.so.0\n#3  0x00007fbd20290833 in moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits, std::allocator >, std::__cxx11::basic_string<char, std::char_traits, std::allocator >) () from /projects/moose/framework/libmoose-opt.so.0\n#4  0x00007fbd1fe33050 in void mooseError<std::__cxx11::basic_string<char, std::char_traits, std::allocator >&>(std::__cxx11::basic_string<char, std::char_traits, std::allocator >&) () from /projects/moose/framework/libmoose-opt.so.0\n#5  0x00007fbd1ff29baf in Parser::parse(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&) () from /projects/moose/framework/libmoose-opt.so.0\n#6  0x00007fbd202c2139 in MooseApp::setupOptions() () from /projects/moose/framework/libmoose-opt.so.0\n#7  0x00007fbd2029e539 in MooseApp::run() () from /projects/moose/framework/libmoose-opt.so.0\n#8  0x00005631cff7b1ec in main ()\n[Inferior 1 (process 4543) detached]\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\nIf you can help me for that, I really appreciate your help .\nKind regards,\nToan D Cao\nUniversity of Alabama\nDepartment of Mechanical Engineering",
          "url": "https://github.com/idaholab/moose/discussions/16282",
          "updatedAt": "2022-07-26T16:21:35Z",
          "publishedAt": "2020-11-23T20:45:26Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi\nMeshModifiers are now deprecated. Please use MeshGenerators instead.\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16282#discussioncomment-136960",
                  "updatedAt": "2022-07-26T16:21:39Z",
                  "publishedAt": "2020-11-23T20:54:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "caoductoan379"
                          },
                          "bodyText": "Hi Guillaume\nThanks for your help. if i have this code, what i can change in this code ?\n[Mesh]\ntype = EBSDMesh\nfilename = Syn2_2D.txt\ndisplacements = 'disp_x disp_y'\n[]\n[MeshModifiers]\n[./noncrackBottom2]\ntype = BoundingBoxNodeSet\nnew_boundary = noncrackBottom2\nbottom_left = '0 0 0'\ntop_right = '1 0 0'\n[../]\n[./noncrackBottom1]\ntype = BoundingBoxNodeSet\nnew_boundary = noncrackBottom1\nbottom_left = '9.5 0 0'\ntop_right = '10 0 0'\n[../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/16282#discussioncomment-136966",
                          "updatedAt": "2022-07-26T16:21:39Z",
                          "publishedAt": "2020-11-23T20:57:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "MeshModifiers have been removed, so this will no longer run with current MOOSE.",
                          "url": "https://github.com/idaholab/moose/discussions/16282#discussioncomment-136974",
                          "updatedAt": "2022-07-26T16:21:42Z",
                          "publishedAt": "2020-11-23T21:04:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "caoductoan379"
                          },
                          "bodyText": "Hi\nThanks for your feedback.",
                          "url": "https://github.com/idaholab/moose/discussions/16282#discussioncomment-136978",
                          "updatedAt": "2022-07-26T16:21:42Z",
                          "publishedAt": "2020-11-23T21:07:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "caoductoan379"
                  },
                  "bodyText": "Thanks, I solved this problem by using MeshGenerators.",
                  "url": "https://github.com/idaholab/moose/discussions/16282#discussioncomment-137627",
                  "updatedAt": "2022-07-26T16:21:45Z",
                  "publishedAt": "2020-11-24T15:02:22Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Changing the length scale of a mesh",
          "author": {
            "login": "mangerij"
          },
          "bodyText": "Hi,\nI am wondering if something is possible.\nSay I have a mesh, whose solution has some length scale that is on the order of nanometers. So let's say the mesh is 3.0x3.0x3.0 nanometers with element size of 1 nm.\nIf I wanted to load this solution into a new calculation but rescale the lengths of the mesh to micrometers, 0.003x0.003x0.003 \u00b5m with an element size of 0.001 \u00b5m, is there an easy way of doing this?\nJohn",
          "url": "https://github.com/idaholab/moose/discussions/16251",
          "updatedAt": "2022-07-07T20:58:59Z",
          "publishedAt": "2020-11-19T14:08:20Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "mangerij"
                  },
                  "bodyText": "(besides rescaling my units in my equations by the way )",
                  "url": "https://github.com/idaholab/moose/discussions/16251#discussioncomment-133732",
                  "updatedAt": "2022-07-07T20:58:59Z",
                  "publishedAt": "2020-11-19T15:23:36Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "How do you load the solution?",
                          "url": "https://github.com/idaholab/moose/discussions/16251#discussioncomment-133763",
                          "updatedAt": "2022-07-07T20:58:56Z",
                          "publishedAt": "2020-11-19T15:55:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "mangerij"
                  },
                  "bodyText": "Just as an initial condition: file = out.e in [Mesh] and then initial_from_file_var = var as an initial condition.\n\nWould be great if there was something like rescale = 0.001 in [Mesh] to redefine the length coordinates in the out file but keeping solution variables. Thought i'd check if something like that existed\n\u2026\n________________________________\nFrom: Yaqi <notifications@github.com>\nSent: Thursday, November 19, 2020 4:56 PM\nTo: idaholab/moose <moose@noreply.github.com>\nCc: Mangeri, John <john.mangeri@uconn.edu>; Author <author@noreply.github.com>\nSubject: Re: [idaholab/moose] Changing the length scale of a mesh (#16251)\n\n\n*Message sent from a system outside of UConn.*\n\n\nHow do you load the solution?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fidaholab%2Fmoose%2Fdiscussions%2F16251%23discussioncomment-133763&data=04%7C01%7Cjohn.mangeri%40uconn.edu%7Cba28f5f11672485a904008d88ca3a2ab%7C17f1a87e2a254eaab9df9d439034b080%7C0%7C0%7C637413981721930034%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=yk28si%2FzwgC8%2Bu0Ugb6ueHEsqJ5zlCSBCjZ%2B2%2B5AeCM%3D&reserved=0>, or unsubscribe<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FABZ65FBRT3RFD3NWKVE4HUTSQU5ZVANCNFSM4T3OHQNA&data=04%7C01%7Cjohn.mangeri%40uconn.edu%7Cba28f5f11672485a904008d88ca3a2ab%7C17f1a87e2a254eaab9df9d439034b080%7C0%7C0%7C637413981721940029%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=fmkH7kHW8bPyNKl6tsPewI6DedsKRXg5lO6p6YYfdyw%3D&reserved=0>.",
                  "url": "https://github.com/idaholab/moose/discussions/16251#discussioncomment-133774",
                  "updatedAt": "2022-07-07T20:58:56Z",
                  "publishedAt": "2020-11-19T15:59:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "I think this can do what you need: https://mooseframework.inl.gov/source/meshgenerators/TransformGenerator.html\ntest/tests/meshgenerators/transform_generator/rotate_and_scale.i",
                          "url": "https://github.com/idaholab/moose/discussions/16251#discussioncomment-134106",
                          "updatedAt": "2022-07-07T20:59:11Z",
                          "publishedAt": "2020-11-19T18:53:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "Maybe do this initial_from_file_var to a different variable and then add an IC to use that variable to initialize the target variable with a scaling factor in the input?",
                          "url": "https://github.com/idaholab/moose/discussions/16251#discussioncomment-134109",
                          "updatedAt": "2022-07-07T20:59:11Z",
                          "publishedAt": "2020-11-19T18:56:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Another thing to try is the SolutionUserObject, it has a scale option as well. This can be used with SolutionFunction for the IC I believe. It might take both the TransformGenerator and the SolutionUserObject. Good luck.",
                  "url": "https://github.com/idaholab/moose/discussions/16251#discussioncomment-134124",
                  "updatedAt": "2022-07-07T20:59:13Z",
                  "publishedAt": "2020-11-19T19:05:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "mangerij"
                  },
                  "bodyText": "TransfromGenerator looks to be it. Thanks! This might be very helpful in the near term.",
                  "url": "https://github.com/idaholab/moose/discussions/16251#discussioncomment-134258",
                  "updatedAt": "2022-07-07T20:59:17Z",
                  "publishedAt": "2020-11-19T21:02:20Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "vincentlaboure"
                  },
                  "bodyText": "I am guessing this approach would not be enough if the field you are trying to restart has units that contain length (e.g., a flux).",
                  "url": "https://github.com/idaholab/moose/discussions/16251#discussioncomment-137051",
                  "updatedAt": "2022-07-07T20:59:17Z",
                  "publishedAt": "2020-11-23T22:46:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "ISSUE- Compile and Test MOOSE",
          "author": {
            "login": "hyeom-wisc"
          },
          "bodyText": "Hello,\nI am a new user for MOOSE frame code and have followed the instructions to install the code. After cloning MOOSE, I tried to compile and test it but it kept saying Command 'make' not found. I did the instruction shown in the Troubeshooting for \"Build Isses\" but it still doesn't work. I would appreciate if you guide me to move forward.\n**(moose) hyeom@ERB914-7920:~/projects/moose/test$ make -j 4\nCommand 'make' not found, but can be installed with:\nsudo apt install make        # version 4.2.1-1.2, or\nsudo apt install make-guile  # version 4.2.1-1.2**",
          "url": "https://github.com/idaholab/moose/discussions/16279",
          "updatedAt": "2020-11-23T22:24:32Z",
          "publishedAt": "2020-11-23T17:23:29Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDo you have 'make' installed? What does 'which make' return?\nIf not you should follow the prompt, as it is required to install MOOSE\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16279#discussioncomment-136962",
                  "updatedAt": "2020-11-23T20:56:00Z",
                  "publishedAt": "2020-11-23T20:55:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "Thank you. The issue was resolved after install the build-essential package. Sung",
                          "url": "https://github.com/idaholab/moose/discussions/16279#discussioncomment-137022",
                          "updatedAt": "2020-11-23T22:04:56Z",
                          "publishedAt": "2020-11-23T22:04:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "You probably need to install the build-essential package for Ubuntu:\nsudo apt install build-essential\nWhile we're on the subject of Ubuntu and installation packages, you should also install libquadmath:\nsudo apt install libquadmath0\nOnce the above has completed, then try to build MOOSE.",
                  "url": "https://github.com/idaholab/moose/discussions/16279#discussioncomment-136980",
                  "updatedAt": "2020-11-23T21:11:39Z",
                  "publishedAt": "2020-11-23T21:11:39Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hyeom-wisc"
                          },
                          "bodyText": "Dear milljm,\nThank you so much. The test MOOSE was successful after following your instruction. Thanks. Sung",
                          "url": "https://github.com/idaholab/moose/discussions/16279#discussioncomment-137021",
                          "updatedAt": "2020-11-23T22:04:02Z",
                          "publishedAt": "2020-11-23T22:04:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Moosedocs gallery and cards broken",
          "author": {
            "login": "hugary1995"
          },
          "bodyText": "I updated my moose and conda environment just now. The doc website for my app looks different from before.\nIt looks like this before:\n\nHowever, after the update, it looks like some padding are added before the gif in the card:\n\nBy the way, I think there should be a Q&A Moosedocs category.",
          "url": "https://github.com/idaholab/moose/discussions/16275",
          "updatedAt": "2023-01-11T12:47:50Z",
          "publishedAt": "2020-11-22T02:27:53Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "What App?\nFYI, the \"Q&A Tools\" is for this sort of thing.",
                  "url": "https://github.com/idaholab/moose/discussions/16275#discussioncomment-136781",
                  "updatedAt": "2023-01-11T12:47:50Z",
                  "publishedAt": "2020-11-23T17:49:19Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Here is the corresponding markdown file:\nhttps://github.com/hugary1995/raccoon/blob/master/doc/content/index.md",
                          "url": "https://github.com/idaholab/moose/discussions/16275#discussioncomment-136825",
                          "updatedAt": "2023-01-11T12:47:50Z",
                          "publishedAt": "2020-11-23T18:24:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "This should fix it: #16281",
                  "url": "https://github.com/idaholab/moose/discussions/16275#discussioncomment-136899",
                  "updatedAt": "2023-01-11T12:47:51Z",
                  "publishedAt": "2020-11-23T19:36:07Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Large Deformation Convergence Issue",
          "author": {
            "login": "ABallisat"
          },
          "bodyText": "Hello all,\nI am trying to get a model of compression moulding up and running which will involve large plastic deformation. I am using the Tensor Mechanics module (eventually I will couple in thermal as well for temperature varying material properties) and set up a simple example. I have attached the input file (side not: GitHub won't allow .i files to be uploaded so I had to change extension to .txt).\nThe model will not converge, no matter the time step, after about 5.7 seconds. I cannot work out why, I have spent the last couple of days reading around the mailing list for ideas and trying many things but it just will not solve. Up until that point it solves in only a couple of non linear iterations per time step, then just explodes. I have tried letting the solver iteratively reduce the time step but even when it is down below e-10 it still breaks.\nAm I missing something obvious here? Any help would be greatly appreciated!\nThanks,\nAlex\nLargeDeformation.txt",
          "url": "https://github.com/idaholab/moose/discussions/16153",
          "updatedAt": "2022-07-08T03:16:59Z",
          "publishedAt": "2020-11-11T17:43:39Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "Could you draw a picture and let us know what are you trying to model?\nI quickly checked your BC names in Paraview, and there are some inconsistencies of the name definition. In addition, you do not need to set 'use_displaced_mesh' for mechanics related materials as they should be correctly set by the TensorMechanics Action.",
                  "url": "https://github.com/idaholab/moose/discussions/16153#discussioncomment-128857",
                  "updatedAt": "2022-07-07T08:57:00Z",
                  "publishedAt": "2020-11-13T17:17:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ABallisat"
                          },
                          "bodyText": "See attached. The basic idea is that the charge is heated (red boundary condition) and compressed into a mould (modelled with Dirichlet displacement BCs) so expands outwards to the right. The other block is effectively the side of the mould so will prevent the charge (if it is large enough) spreading out the side. It is a simplified representation of a block of thermoplastic being compression moulded in a heated mould.\n\nThe side set issue is caused by using the CombinerGeneration - this does not seem to maintain the side sets so after the merge I have to re-define the side sets. I suspect this is a bug, the redefinition is to get around this.\nI've made some progress with understanding the issue. If I just use Tensor Mechanics, so no temperature coupling, then the model will converge. When I couple in a temperature variation, and thus the extra eigenstrain that introduces, the model does not converge. I suspect it is due to the thermal expansion causing the top right corner of the charge, for lack of a better description, to start sagging over the edge. I have attached an image of it, below. I have come across this problem before but never managed to solve it.\n\nI am going to try different solver types tomorrow to see if anything works but any suggestions are greatly appreciated!",
                          "url": "https://github.com/idaholab/moose/discussions/16153#discussioncomment-130973",
                          "updatedAt": "2022-07-07T08:56:58Z",
                          "publishedAt": "2020-11-16T18:56:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "I ran your previous input file and did not get it converged. The previous input doesn't  have temperature variable. Could you let me know how did you make it work?",
                          "url": "https://github.com/idaholab/moose/discussions/16153#discussioncomment-131796",
                          "updatedAt": "2022-07-07T08:56:58Z",
                          "publishedAt": "2020-11-17T17:15:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ABallisat"
                          },
                          "bodyText": "Apologies, attached is my most current input file which has temperature coupling. I effectively disabled the temperature by setting the temperature function BC to be a constant of 0. This model will converge if I do that, otherwise even a temperature increase of 2 degrees per second causes it to not converge.\nThanks for all your help!\nThermalPlasticDeformation.txt",
                          "url": "https://github.com/idaholab/moose/discussions/16153#discussioncomment-131817",
                          "updatedAt": "2022-07-07T08:56:58Z",
                          "publishedAt": "2020-11-17T17:35:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ABallisat"
                  },
                  "bodyText": "If it ever helps anyone, I eventually used use_displaced_mesh=true in Kernels, UserObjects, BCs and Materials as appropriate and increased the exponent in the plastic hardening to 0.6 (or greater) and it will converge.",
                  "url": "https://github.com/idaholab/moose/discussions/16153#discussioncomment-136575",
                  "updatedAt": "2022-07-07T08:58:07Z",
                  "publishedAt": "2020-11-23T14:58:43Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Installing MOOSE - libquadmath",
          "author": {
            "login": "sinaheidari22"
          },
          "bodyText": "Hello everyone,\nI had MOOSE installed on ubuntu 16.04 version. Working perfect, I updated the MOOSE, it does not work anymore. I changed ubuntu to 20.04 version, up to make -j 4 it seems everything is going well , once I came to ./run_tests I could not have successful test passing.\nThe error:\ndgkernels/ad_dg_convection.exo: Working Directory: /home/projects/moose/test/tests/dgkernels/ad_dg_convection\ndgkernels/ad_dg_convection.exo: Running command: /home/projects/moose/test/moose_test-opt -i ad_dg_convection.i Outputs/exodus=false -snes_test_jacobian -snes_force_iteration --error --error-unused --error-override --no-gdb-backtrace\ndgkernels/ad_dg_convection.exo: /home/projects/moose/test/moose_test-opt: error while loading shared libraries: libquadmath.so.0: cannot open shared object file: No such file or directory\ndgkernels/ad_dg_convection.exo: \ndgkernels/ad_dg_convection.exo: ################################################################################\ndgkernels/ad_dg_convection.exo: Tester failed, reason: EXPECTED OUTPUT NOT FOUND\ndgkernels/ad_dg_convection.exo: \ndgkernels/ad_dg_convection.exo ............................................ FAILED (EXPECTED OUTPUT NOT FOUND)\n\nMy question is what is the suitable version of ubuntu for current MOOSE package.\nAlthough maybe nothing to do with ubuntu version. Maybe problem is elsewhere.\nThank you in advance.",
          "url": "https://github.com/idaholab/moose/discussions/16238",
          "updatedAt": "2023-07-04T09:39:45Z",
          "publishedAt": "2020-11-18T17:43:20Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nUbuntu 20.04 should work well with moose. With the conda install, libquadmath.so should be present in conda/lib.\nIf you used that way of installing:\nif the shared library is present in that directory, I'd say try to run ldconfig on that directory and try again.\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16238#discussioncomment-134270",
                  "updatedAt": "2023-07-04T09:39:47Z",
                  "publishedAt": "2020-11-19T21:18:46Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sinaheidari22"
                          },
                          "bodyText": "Thank you for your reply, I think it was the problem with libmesh. Now is solved.",
                          "url": "https://github.com/idaholab/moose/discussions/16238#discussioncomment-135903",
                          "updatedAt": "2023-07-04T09:39:47Z",
                          "publishedAt": "2020-11-22T21:52:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok thanks for letting us know @sinaheidari22 .\nI updated the title to make it easier to search for this particular problem.",
                          "url": "https://github.com/idaholab/moose/discussions/16238#discussioncomment-136013",
                          "updatedAt": "2023-07-04T09:39:48Z",
                          "publishedAt": "2020-11-23T04:52:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "sudo apt-get install libquadmath0",
                  "url": "https://github.com/idaholab/moose/discussions/16238#discussioncomment-135783",
                  "updatedAt": "2023-07-04T09:39:49Z",
                  "publishedAt": "2020-11-22T16:23:09Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sinaheidari22"
                          },
                          "bodyText": "Thank you for your reply.",
                          "url": "https://github.com/idaholab/moose/discussions/16238#discussioncomment-135904",
                          "updatedAt": "2023-07-04T09:39:49Z",
                          "publishedAt": "2020-11-22T21:53:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "change fracture criterion in XFEM",
          "author": {
            "login": "wsfsz123"
          },
          "bodyText": "Dear all,\nI am trying to embed anisotropic fracture toughness property into XFEM, the crack direction is determined by the maximum energy release rate criterion (max(G(\u03b8)/Gc(\u03b8)), have anyone tried this? The current examples in XFEM modules are using maximal principle stress, can anyone help me to change the criterion?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/16186",
          "updatedAt": "2022-11-17T23:37:43Z",
          "publishedAt": "2020-11-14T12:31:47Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "Are you planning to use a domain integral to compute the energy release rate G?",
                  "url": "https://github.com/idaholab/moose/discussions/16186#discussioncomment-130248",
                  "updatedAt": "2022-11-17T23:37:45Z",
                  "publishedAt": "2020-11-16T03:12:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "wsfsz123"
                  },
                  "bodyText": "Yes, the main purpose is to introduce the anisotropic fracture energy (Gc), then compare it to G to predict the crack direction. Thus I need to compute the instant integral firstly.\nThanks,\nShizhe",
                  "url": "https://github.com/idaholab/moose/discussions/16186#discussioncomment-130249",
                  "updatedAt": "2022-11-17T23:37:45Z",
                  "publishedAt": "2020-11-16T03:19:43Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "We have published a paper before using K as the criterion for crack propagation. https://www.sciencedirect.com/science/article/pii/S0013794419307568\nHowever, the codes have not merged into the MOOSE yet. We have post processor to compute K/J, and what is missing is to hook the post processor to XFEM crack cut object.\nIf we can find some time, I am very interested to add such capability in MOOSE.",
                          "url": "https://github.com/idaholab/moose/discussions/16186#discussioncomment-131774",
                          "updatedAt": "2022-11-17T23:37:45Z",
                          "publishedAt": "2020-11-17T16:51:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "wsfsz123"
                  },
                  "bodyText": "Thank you for your attention. I have read your paper and see the examples on MOOSE. It would be grateful if you could take time to do it, then we can use it with anisotropic fracture energy of material, up to now, there are rare investigations about it, and a good simulation tool with suitable criterion is required.\nThanks,\nShizhe",
                  "url": "https://github.com/idaholab/moose/discussions/16186#discussioncomment-133312",
                  "updatedAt": "2022-11-17T23:37:48Z",
                  "publishedAt": "2020-11-19T05:44:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "Are you primarily interested in 2D or 3D? single crack or multiple cracks?",
                          "url": "https://github.com/idaholab/moose/discussions/16186#discussioncomment-134825",
                          "updatedAt": "2022-11-17T23:37:48Z",
                          "publishedAt": "2020-11-20T16:14:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "wsfsz123"
                  },
                  "bodyText": "2D primarily, and a single crack is enough for now, but we are also interested in the dynamic crack in the future. Is it possible to input Gc as a function of theta (the format of anisotropic fracture energy)?",
                  "url": "https://github.com/idaholab/moose/discussions/16186#discussioncomment-135982",
                  "updatedAt": "2022-11-17T23:37:48Z",
                  "publishedAt": "2020-11-23T01:52:30Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "using another test's gold file",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "What's the \"right\" way to have two (or more) tests share a gold file? The tests could all be in the same directory and therefore have different input and output filenames. I've been using soft (symbolic) links to make gold files for the other output files names that link to the first but that seems hacky and I'm not sure if that plays nicely with git.",
          "url": "https://github.com/idaholab/moose/discussions/16253",
          "updatedAt": "2022-08-26T20:29:14Z",
          "publishedAt": "2020-11-19T16:35:45Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "They can just have the same output name.\nWe now serialize all tests within the same directory to ensure that there are no race conditions.",
                  "url": "https://github.com/idaholab/moose/discussions/16253#discussioncomment-133912",
                  "updatedAt": "2022-08-26T20:29:14Z",
                  "publishedAt": "2020-11-19T16:38:40Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "So are you suggesting changing Outputs/file_base in all the input files to the same string?",
                          "url": "https://github.com/idaholab/moose/discussions/16253#discussioncomment-133927",
                          "updatedAt": "2022-08-26T20:29:14Z",
                          "publishedAt": "2020-11-19T16:54:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "Yes, it is typical to do this in the cli_args of the test specification",
                          "url": "https://github.com/idaholab/moose/discussions/16253#discussioncomment-134105",
                          "updatedAt": "2022-08-26T20:29:14Z",
                          "publishedAt": "2020-11-19T18:51:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "\ud83d\udc4d",
                          "url": "https://github.com/idaholab/moose/discussions/16253#discussioncomment-134156",
                          "updatedAt": "2022-08-26T20:29:14Z",
                          "publishedAt": "2020-11-19T19:29:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}