{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0wNi0yN1QxMTo0NDo0MC0wNTowMM4ANEuq"
    },
    "edges": [
      {
        "node": {
          "title": "PETSc update to 3.15",
          "author": {
            "login": "fdkong"
          },
          "bodyText": "We have a PETSc update via PR #18128\nNow we officially support PETSc-3.15 for the MOOSE community. Here is a complete list of PETSc-3.15 changes https://www.mcs.anl.gov/petsc/documentation/changes/315.html\nThe update is transparent for MOOSE users. The changes should not affect your simulation except that you might see performance gains for large-scale parallel runs. If you run into trouble with the updated PETSc, please let us know.\nTo access the updated PETSc, conda users could do a conda update (\"conda update --all\"). For source code users, you could rerun PETSc and libMesh update scripts (./scripts/update_and_rebuild_petsc.sh and ./scripts/update_and_rebuild_libmesh.sh). Just like any other dependency updates, you might run \"make clobberall\" to remove old links before you rebuild MOOSE.\nIf you have any questions, please let us know.\nThanks for your support, as always.\nThe MOOSE Team",
          "url": "https://github.com/idaholab/moose/discussions/18193",
          "updatedAt": "2021-06-30T00:13:37Z",
          "publishedAt": "2021-06-28T18:47:14Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "PorousFlow - Storage units",
          "author": {
            "login": "MatiasAllay"
          },
          "bodyText": "Dear MOOSE,\nI got a simple question. In the GW examples the relation between Specific Storage in Pa^-1 and in m^-1 is simply represented by eq. 11?\nThanks!\nMatias",
          "url": "https://github.com/idaholab/moose/discussions/18200",
          "updatedAt": "2021-06-29T09:24:10Z",
          "publishedAt": "2021-06-29T07:07:57Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Yes, that is correct.  Remember that, although that equation is written with an equals-sign (=) there are various approximations needed to derive it (hence the preceding \"To reasonable accuracy\").",
                  "url": "https://github.com/idaholab/moose/discussions/18200#discussioncomment-936554",
                  "updatedAt": "2021-06-29T07:14:08Z",
                  "publishedAt": "2021-06-29T07:13:58Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MatiasAllay"
                          },
                          "bodyText": "Thanks Andy!",
                          "url": "https://github.com/idaholab/moose/discussions/18200#discussioncomment-937230",
                          "updatedAt": "2021-06-29T09:24:01Z",
                          "publishedAt": "2021-06-29T09:24:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Stochastics - Steady to Transient",
          "author": {
            "login": "MatiasAllay"
          },
          "bodyText": "Dear MOOSE,\nMy simulation consists of two scripts. First a script that runs steady state and second a transient state script that uses the output of the steady simulation as ICs. I was wondering of there is a way to run one script after the other one with the stochastic module to perform a sensitivity analysis.\nThanks in advance!\nMatias",
          "url": "https://github.com/idaholab/moose/discussions/18184",
          "updatedAt": "2024-02-03T16:02:17Z",
          "publishedAt": "2021-06-27T12:25:41Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "This should be possible. The main input file will need to use the Transient executioner with two time steps. At the first timestep you will run the steady solves, using a full solve multiapp that runs the input file for the steady. The second step will run a different full solve multiapp that runs the transient input file.\nYou will need to use the TimePeriod object in the main input to dictate with multiapp will run.\nI would start by getting the main input file to run the steady solve, when you get that figured out work on adding the second part.",
                  "url": "https://github.com/idaholab/moose/discussions/18184#discussioncomment-933885",
                  "updatedAt": "2024-02-03T16:02:17Z",
                  "publishedAt": "2021-06-28T17:16:47Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "MatiasAllay"
                          },
                          "bodyText": "Thanks @aeslaughter I will let you know how it goes.",
                          "url": "https://github.com/idaholab/moose/discussions/18184#discussioncomment-936453",
                          "updatedAt": "2024-02-03T16:02:17Z",
                          "publishedAt": "2021-06-29T06:38:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Does MOOSE have 'drainage-only flow' BCs like Abaqus",
          "author": {
            "login": "Traiwit"
          },
          "bodyText": "Hi guys,\nI'm wondering if MOOSE has 'drainage-only flow BCs similar to Abaqus?\nLINK\nwhere we control fluid_vel at the boundary instead of specifying pore pressure at the boundary (Dirichlet BCs)\n\nKind regards,\nTraiwit",
          "url": "https://github.com/idaholab/moose/discussions/18198",
          "updatedAt": "2022-07-13T01:42:01Z",
          "publishedAt": "2021-06-29T04:15:21Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Yes, look at https://mooseframework.inl.gov/modules/porous_flow/boundaries.html and https://mooseframework.inl.gov/source/bcs/NeumannBC.html",
                  "url": "https://github.com/idaholab/moose/discussions/18198#discussioncomment-936201",
                  "updatedAt": "2022-07-13T01:42:01Z",
                  "publishedAt": "2021-06-29T04:20:43Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Awesome @WilkAndy\nif I understand correctly, this is what I am looking for, right?",
                          "url": "https://github.com/idaholab/moose/discussions/18198#discussioncomment-936220",
                          "updatedAt": "2022-07-13T01:42:01Z",
                          "publishedAt": "2021-06-29T04:33:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "you got it!   You can also utilise use_* things to make the slope of that graph a meaningful number (also documented on that page)",
                          "url": "https://github.com/idaholab/moose/discussions/18198#discussioncomment-936224",
                          "updatedAt": "2022-07-13T01:42:01Z",
                          "publishedAt": "2021-06-29T04:36:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "awesome, thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/18198#discussioncomment-936227",
                          "updatedAt": "2023-02-23T14:20:20Z",
                          "publishedAt": "2021-06-29T04:37:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to set the non-penetrating wall condition?",
          "author": {
            "login": "YuhangNIU"
          },
          "bodyText": "Hi all,\nCan anybody kindly tell me how to set the non-penetrating wall condition in one-dimensional flow?\nJust let v=0 at the boundary?\nThank you!\nYuhang",
          "url": "https://github.com/idaholab/moose/discussions/18188",
          "updatedAt": "2022-06-28T11:34:58Z",
          "publishedAt": "2021-06-28T01:49:57Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Yuhang\nWhere is the wall in your 1D system? One of the edges?\nWhich formulation are you using? Finite element or finite volume? Incompressible or compressible?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-930102",
                  "updatedAt": "2022-06-28T11:34:57Z",
                  "publishedAt": "2021-06-28T02:27:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "YuhangNIU"
                          },
                          "bodyText": "Hi Guillaume,\nThank you for your reply.\nThe walls are on both edges. The finite element formulation is used in the compressible problem (Sedimentation problem of two-phase fluid).",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-930194",
                          "updatedAt": "2022-06-28T11:34:59Z",
                          "publishedAt": "2021-06-28T03:27:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think this one\nhttps://mooseframework.inl.gov/source/bcs/NSImposedVelocityBC.html\nis the right one for FE and compressible.\nIt might depend on your formulation as well. Which variables are you using, conservative or primitive ? (rho, rho u, rho E) or (P, u, T) ?\nEDIT: this is for single phase problems btw.\n@lindsayad will know better either way",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-930219",
                          "updatedAt": "2022-06-28T11:34:59Z",
                          "publishedAt": "2021-06-28T03:38:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "You mentioned sedimentation: does this mean you're using PorousFlow?   Please ignore if this just causes confusion.",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-930239",
                          "updatedAt": "2022-06-28T11:35:03Z",
                          "publishedAt": "2021-06-28T03:46:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "YuhangNIU"
                          },
                          "bodyText": "The two-fluid two-phase model (six-equation) was built in MOOSE, in which the variables I used are (p, ul, ug,\u03b1, Tl, Tg). And I did not use the NS  or PorousFlow module in MOOSE, all the system was developed in my own APP based on MOOSE.",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-931263",
                          "updatedAt": "2023-05-19T22:07:17Z",
                          "publishedAt": "2021-06-28T07:17:15Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "The answer to this depends on a couple things. Are you using finite elements or finite volumes? Are you integrating the continuity equation by parts/are you applying the divergence theorem? If yes, then a natural boundary condition on the mass equation will already have you most of the way there for a non-penetrating condition. If you also want a zero tangential velocity (which it seems like you do) then we'll have to do more than for just a non-penetrating condition.",
                  "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-933277",
                  "updatedAt": "2022-06-28T11:35:03Z",
                  "publishedAt": "2021-06-28T14:56:30Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It's finite element, and it's a 1D system so they're only trying to get 0 normal velocity.\nBy natural BC do you mean a BC that mimics the action of the kernel? Or a 0-residual BC? I think the latter, just making sure",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-933411",
                          "updatedAt": "2022-06-28T11:35:03Z",
                          "publishedAt": "2021-06-28T15:26:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I should read better",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-934066",
                          "updatedAt": "2022-06-28T11:35:04Z",
                          "publishedAt": "2021-06-28T18:14:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "DirichletBCs with value = 0 for the velocities would definitely do the trick.",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-934075",
                          "updatedAt": "2022-06-28T11:35:04Z",
                          "publishedAt": "2021-06-28T18:16:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Or a 0-residual BC?\n\nYes I was referring to this for natural BC",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-934088",
                          "updatedAt": "2023-12-26T06:23:56Z",
                          "publishedAt": "2021-06-28T18:17:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "YuhangNIU"
                          },
                          "bodyText": "Thanks for the help. Much appreciated!",
                          "url": "https://github.com/idaholab/moose/discussions/18188#discussioncomment-935675",
                          "updatedAt": "2023-12-26T06:23:56Z",
                          "publishedAt": "2021-06-29T00:02:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Miniconda download permission denied",
          "author": {
            "login": "jbair34"
          },
          "bodyText": "Hi All,\nI am trying to figure out how to install moose on a Windows machine and was able to get everything to work until it says to go to the Conda install. When I try to download miniconda I get the error below:\njbair34@DESKTOP-UHJNGJR:/mnt/c/Windows/system32$ sudo curl -L -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n[sudo] password for jbair34:\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\nDload  Upload   Total   Spent    Left  Speed\n0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0Warning: Failed to create the file Miniconda3-latest-Linux-x86_64.sh:\nWarning: Permission denied\n0 89.8M    0   900    0     0   2795      0  9:21:55 --:--:--  9:21:55  2795\ncurl: (23) Failed writing body (0 != 900)\nI tried it without the sudo command as well with the same result. Any idea why it won't download?\nThanks,\nJake",
          "url": "https://github.com/idaholab/moose/discussions/18196",
          "updatedAt": "2021-07-08T00:52:02Z",
          "publishedAt": "2021-06-28T23:15:29Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "MOOSE is not natively supported on windows right now, you should try using the Windows Subsystem for Linux (WSL).\nSee the instructions there\nhttps://mooseframework.inl.gov/getting_started/installation/windows10.html\nRegardless,\nI doubt you want to install conda in system32. You can install conda in like programs or your home directory.",
                  "url": "https://github.com/idaholab/moose/discussions/18196#discussioncomment-935573",
                  "updatedAt": "2021-06-28T23:39:05Z",
                  "publishedAt": "2021-06-28T23:38:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jbair34"
                  },
                  "bodyText": "Wasn't even paying attention to what folder i was in... That System 32 thing was the issue. Thanks I got it going in WSL.\nJake",
                  "url": "https://github.com/idaholab/moose/discussions/18196#discussioncomment-935647",
                  "updatedAt": "2021-06-28T23:47:10Z",
                  "publishedAt": "2021-06-28T23:47:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Update MOOSE in HPC",
          "author": {
            "login": "hokonkim"
          },
          "bodyText": "I used the previous MOOSE in HPC, so far.\nIn the HPC, MOOSE was installed as module (e.g. moose/11Oct2019).\nAlso, moose repository exists in my account (e.g. ~/myaccount/projects/moose).\nRecently, I requested to install the latest version of MOOSE and now it was installed (moose/27Jun2021).\nI think I need to update the moose repository, too.\nBut, I didn't update MOOSE and work in HPC so long, I forgot to how to do properly.\nI checked the MOOSE website, and I think running the following commands under my account will be needed.\nmkdir ~/projects\ncd ~/projects\ngit clone https://github.com/idaholab/moose.git\ncd moose\ngit checkout master\nAlso, in the website, it told me how to Compile PETSc and Compile libMesh.\nI didn't remember I did compile PETSc and libMesh under my account.\nI thought cloning MOOSE under my account would be enough.\nAs far as I know, for using the latest MOOSE, I have to....\n\n\nload modules (module load gnu/9.3.0 openmpi/4.0.4_gnu9.3 moose/27Jun2021)\n-> there is not anaconda/2.7 anymore compared to previous MOOSE.\n\n\nUpdate MOOSE repository under my account.\n-> use above \"git clone\" command.\n\n\nMake application with new MOOSE, again??\n\n\nI didn't run the commands, yet.\nPlease tell me what did I miss or what should I do to update properly.\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/18192",
          "updatedAt": "2023-06-04T22:17:35Z",
          "publishedAt": "2021-06-28T18:03:16Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "If your HPC people install libmesh and petsc as part of the moose module, it should be ok, and you should be able to skip step 2, unless you need a newer version.\nAre $LIBMESH_DIR and $PETSC_DIR set by the moose module?",
                  "url": "https://github.com/idaholab/moose/discussions/18192#discussioncomment-934048",
                  "updatedAt": "2023-06-04T22:18:02Z",
                  "publishedAt": "2021-06-28T18:12:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hokonkim"
                          },
                          "bodyText": "I don't know if $LIBMESH_DIR and $PETSC_DIR set by the moose module.\nActually, I didn't remember I did run the command related to PETSc and libMesh for previous version.\nDoes MOOSE module in HPC work as if MOOSE repository?\nI mean, under loading MOOSE module, I can recompile an application that I made.\nBut I don't know if it's because the MOOSE repository itself is in my account, or if it's because I've loaded the MOOSE module.",
                          "url": "https://github.com/idaholab/moose/discussions/18192#discussioncomment-934775",
                          "updatedAt": "2023-08-24T20:38:07Z",
                          "publishedAt": "2021-06-28T18:47:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It depends how the module was created. Is this INL HPC? If so yes.\nYou can examine environement variables using echo.\nSo echo $MOOSE_DIR will show you if there s a moose that your application can find to built itself with\nPlease run this for LIBMESH_DIR and PETSC_DIR so we can see if they need to be installed. I suspect they would be part of the module though",
                          "url": "https://github.com/idaholab/moose/discussions/18192#discussioncomment-934819",
                          "updatedAt": "2023-08-24T20:38:07Z",
                          "publishedAt": "2021-06-28T19:00:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hokonkim"
                          },
                          "bodyText": "I examine the environment like you told.\n\nAbove image is a result after I typed several commands.",
                          "url": "https://github.com/idaholab/moose/discussions/18192#discussioncomment-934863",
                          "updatedAt": "2023-06-04T22:18:03Z",
                          "publishedAt": "2021-06-28T19:14:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The petsc is brought in from the openmpi module.\nIf there is a different one in the moose module, you will need to export that environment variable.\nYou need both MOOSE_DIR and LIBMESH_DIR set properly. Please try to locate the corresponding folders in your moose module. If you cant find them, you will need to re-install libmesh and moose yourself.",
                          "url": "https://github.com/idaholab/moose/discussions/18192#discussioncomment-934928",
                          "updatedAt": "2023-06-04T22:18:06Z",
                          "publishedAt": "2021-06-28T19:34:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hokonkim"
                          },
                          "bodyText": "I can run the MOOSE application with above given environment(old MOOSE), even I cannot locate $MOOSE_DIR or $LIBMESH_DIR.\nIs this due to MOOSE repository under my account like below?",
                          "url": "https://github.com/idaholab/moose/discussions/18192#discussioncomment-935070",
                          "updatedAt": "2023-06-04T22:18:06Z",
                          "publishedAt": "2021-06-28T20:26:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hokonkim"
                          },
                          "bodyText": "I summarized what I will do.\nI found a previous discussion that I wrote a while ago (https://groups.google.com/g/moose-users/c/mtbblVWFRqY/m/2DQC89tgBgAJ).\nIt looks like I tried to compile PETSc and libMesh after cloning MOOSE in HPC, but failed (perhaps.. I didn't load module???)\nJust for safety and stability....\n\n\n(present) ermine and moose folder ->  change name as \"ermine_old\" and \"moose_old\"\n\n\nload modules that I need (module load gnu/9.3.0 openmpi/4.0.4_gnu9.3 moose/27Jun2021)\n\n\ncloning MOOSE under my account\n\n\nI think I can skip compiling PETSc because it can be brought from which module I load.\n\n\nCompile libMesh\n\n\nCompile and Test MOOSE\n\n\nWhat do you think? Will it work properly?",
                          "url": "https://github.com/idaholab/moose/discussions/18192#discussioncomment-935212",
                          "updatedAt": "2023-06-04T22:18:10Z",
                          "publishedAt": "2021-06-28T21:07:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If you are importing a moose module, you should not need to clone. You should have access to a moose somewhere, and can just set MOOSE_DIR.\nIf you clone, you will have a local version of moose, and do not need a moose module UNLESS the moose module is providing you with PETSC (careful with the openmpi version then!) and libmesh.\nIf this is still unclear, you should just follow the HPC instructions below and not use the moose/Jun module.\nhttps://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html",
                          "url": "https://github.com/idaholab/moose/discussions/18192#discussioncomment-935406",
                          "updatedAt": "2023-06-04T22:18:15Z",
                          "publishedAt": "2021-06-28T22:17:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Tensor contractions",
          "author": {
            "login": "matthiasneuner"
          },
          "bodyText": "Hi,\nI just saw pull request  #18174  which introduces new higher order tensor contractions.\nI thought it would be useful to promote the existence of Fastor (https://github.com/romeric/Fastor), which is a templated, header only, vectorized Tensor library aiming at similar functionality as MOOSE's 2nd, 3rd and 4th order tensor implementations.\nHowever, its mighty Einstein summation functionality allows to write tensor operations in a  convenient and readable way.\nI make use of Fastor in a lot of projects (including MOOSE applications, e.g.  https://github.com/matthiasneuner/chamois/blob/08ce1819ef6931539b9c2e3a6d1bfa4f32d95e8c/src/materials/ComputeMarmotMaterialGradientEnhancedMicropolar.C#L222)\nBest regards, Matthias",
          "url": "https://github.com/idaholab/moose/discussions/18194",
          "updatedAt": "2022-07-12T16:12:14Z",
          "publishedAt": "2021-06-28T19:07:06Z",
          "category": {
            "name": "Show and tell"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Could you leave a comment in that PR? I'm very supportive of adding an Einstein summation method. Manually adding all the contractions wouldn't be tractable in the long run and is very difficult to maintain.",
                  "url": "https://github.com/idaholab/moose/discussions/18194#discussioncomment-935063",
                  "updatedAt": "2022-07-12T16:12:14Z",
                  "publishedAt": "2021-06-28T20:22:45Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Thanks Matthias, this is a great pointer. We could probably use TensorMap on our existing data structures.",
                  "url": "https://github.com/idaholab/moose/discussions/18194#discussioncomment-935312",
                  "updatedAt": "2022-07-12T16:12:14Z",
                  "publishedAt": "2021-06-28T21:44:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "An old application isn't working with the new version of MOOSE",
          "author": {
            "login": "ahmad681"
          },
          "bodyText": "Hi, I am new to the MOOSE environment and a senior graduate student in our group has developed a code in tensor mechanics based off of the older version of MOOSE, 3 years older. With the newer version, there seems to be newer classes that have been deleted or altered and we are afraid of rewriting the code again because there might undermining problems as the MOOSE code is huge. Can you please help me with this issue?",
          "url": "https://github.com/idaholab/moose/discussions/18058",
          "updatedAt": "2022-08-23T14:31:48Z",
          "publishedAt": "2021-06-10T20:00:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Can you share the repository with us (if not public, sharing it privately is okay). I can take a quick look to gauge the amount of support needed here.",
                  "url": "https://github.com/idaholab/moose/discussions/18058#discussioncomment-855485",
                  "updatedAt": "2022-08-23T14:31:48Z",
                  "publishedAt": "2021-06-10T20:28:25Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Any news on this?\nI would just try compiling it and going through the error messages one by one. There's been a lot of changes, but hopefully a lot of APIs were stabilized already by then.",
                  "url": "https://github.com/idaholab/moose/discussions/18058#discussioncomment-899783",
                  "updatedAt": "2022-08-23T14:32:14Z",
                  "publishedAt": "2021-06-21T20:18:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ahmad681"
                  },
                  "bodyText": "Sorry for the late reply Logan and Giud, Yes we figured it out. we went through every single error messege and corrected for it. Thank you",
                  "url": "https://github.com/idaholab/moose/discussions/18058#discussioncomment-934756",
                  "updatedAt": "2022-08-23T14:32:16Z",
                  "publishedAt": "2021-06-28T18:42:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Accessing The Mesh Block IDs From Within A Kernel/Material",
          "author": {
            "login": "pharshaad"
          },
          "bodyText": "Hi All,\nI was wondering how I'd be able to access different mesh block IDs inside a custom kernel or a material. I have a microstructure mesh file (.msh) in which the grains are treated as subdomains/blocks. What I'd like to do is to able to get block IDs and apply the Euler angles to them. Any insight into this is greatly appreciated!\nCheers,\nLeon",
          "url": "https://github.com/idaholab/moose/discussions/18155",
          "updatedAt": "2022-06-28T14:55:51Z",
          "publishedAt": "2021-06-23T19:35:24Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Leon\nYou can get the mesh block id from the element the kernel is currently working on with _current_elem->subdomain_id().\nFor the material it should be the same thing, looking briefly at the source code, though I have never used that.\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18155#discussioncomment-911998",
                  "updatedAt": "2022-06-28T14:56:06Z",
                  "publishedAt": "2021-06-23T20:09:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "pharshaad"
                          },
                          "bodyText": "Thanks for the help, Guillaume. Much appreciated!",
                          "url": "https://github.com/idaholab/moose/discussions/18155#discussioncomment-928757",
                          "updatedAt": "2022-06-28T14:56:07Z",
                          "publishedAt": "2021-06-27T16:44:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}