{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wNi0yM1QwMzo1NDozMy0wNTowMM4AP1sN"
    },
    "edges": [
      {
        "node": {
          "title": "Using binary = false checkpoint files.",
          "author": {
            "login": "Edward-Eth"
          },
          "bodyText": "Hi, I'm working through a seg fault issue when trying to load from checkpoint files, and am attempting to use the binary = false setting in the checkpoint block of my output. This is working sucessfully, and is leading to .cpa and .xda files instead of the normal .cpr and .xdr files. Setting file = xxxx.cpa in mesh is working and the restart is loading the mesh in, however I can't find info on how to tell the problem to search for restart files in the .xda format instead of .xdr, which leads to lots of \"unable to find file xxx.xdr\" errors when I run. I've tried setting binary = false in problem to mirror the argument given to the checkpoint output, but that doesn't seem to help. Any advice would be appreciated.",
          "url": "https://github.com/idaholab/moose/discussions/21334",
          "updatedAt": "2022-07-21T23:44:39Z",
          "publishedAt": "2022-06-17T10:35:38Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI ll have a look into this\nIn the mean time you can use a SolutionUO\nhttps://mooseframework.inl.gov/source/userobject/SolutionUserObject.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21334#discussioncomment-2972848",
                  "updatedAt": "2022-06-17T15:56:15Z",
                  "publishedAt": "2022-06-17T15:56:15Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Edward-Eth"
                          },
                          "bodyText": "I'm not sure how well/if that would work when using plasticity, as simply loading displacements in won't correctly recreate the previous state surely?",
                          "url": "https://github.com/idaholab/moose/discussions/21334#discussioncomment-2972855",
                          "updatedAt": "2022-06-17T15:57:47Z",
                          "publishedAt": "2022-06-17T15:57:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "not sure.\nloading from xda should work, the code is there and it's been done by others/\nCould you please paste your Problem block here\nAnd also the name of the restart folder and its content",
                          "url": "https://github.com/idaholab/moose/discussions/21334#discussioncomment-2972952",
                          "updatedAt": "2022-06-17T16:15:07Z",
                          "publishedAt": "2022-06-17T16:15:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Any news on this?",
                          "url": "https://github.com/idaholab/moose/discussions/21334#discussioncomment-3021460",
                          "updatedAt": "2022-06-25T05:45:02Z",
                          "publishedAt": "2022-06-25T05:45:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Can MOOSE be used to simulate wave equations",
          "author": {
            "login": "suqingji"
          },
          "bodyText": "Hi, everyone\nI wonder if MOOSE can be used to simulate wave equations.\n\nIn the above picture, the first equation is easy to solve, but the second equation makes me confused as I do not how to solve the term of the second time derivatives of a variable.",
          "url": "https://github.com/idaholab/moose/discussions/21344",
          "updatedAt": "2022-07-21T23:44:24Z",
          "publishedAt": "2022-06-18T05:58:56Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYes we do support the computation of double derivatives.\nin the code you can retrieve them using the Coupleable interface, and in particular the coupledDotDot routine.\nIn this recent topic someone worked on a wave equation btw\n#20925\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21344#discussioncomment-2978293",
                  "updatedAt": "2022-06-18T22:10:24Z",
                  "publishedAt": "2022-06-18T22:10:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "suqingji"
                          },
                          "bodyText": "Thank you for your help",
                          "url": "https://github.com/idaholab/moose/discussions/21344#discussioncomment-3020834",
                          "updatedAt": "2022-06-25T01:21:39Z",
                          "publishedAt": "2022-06-25T01:21:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MeshSideSetGenerator is gone?",
          "author": {
            "login": "styyokuda"
          },
          "bodyText": "MOOSE Team,\n\"MeshSideSetGenerator\" seems to be gone from the updated MOOSE.\nIf so, please let me know an alternative app.\nS. Thomas",
          "url": "https://github.com/idaholab/moose/discussions/21343",
          "updatedAt": "2022-06-24T20:22:33Z",
          "publishedAt": "2022-06-17T22:40:02Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWe removed it as it was redundant with the LowerDBlockFromSideSetGenerator\nhttps://mooseframework.inl.gov/source/meshgenerators/LowerDBlockFromSidesetGenerator.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21343#discussioncomment-2978338",
                  "updatedAt": "2022-06-18T22:37:32Z",
                  "publishedAt": "2022-06-18T22:37:31Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "styyokuda"
                          },
                          "bodyText": "Thank you Guillaume,\nI am studying LowerDBlockFromSidesetGenerator.  It seems that elements generated by LowerDBlockFromSidesetGenerator do not have shape functions.\nWe have been using MeshSideSetGenerator to generate one-dimension-lower finite elements where we assign the diffusion equations with source terms.\nWe need MeshSideSetGenerator for our model we have been developing for years.\nCould you please put MeshSideSetGenerator back into MOOSE?\nS. Thomas",
                          "url": "https://github.com/idaholab/moose/discussions/21343#discussioncomment-2981430",
                          "updatedAt": "2022-06-19T19:49:53Z",
                          "publishedAt": "2022-06-19T19:49:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nWhat do you mean they do not have shape functions?\nLooking at the code, the lowerDBlockFromSidesetGenerator does the same thing but it works for distributed mesh when the other one doesnt.\nIt should work as is for your case. What errors are you getting?\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21343#discussioncomment-2981492",
                          "updatedAt": "2022-06-19T20:14:40Z",
                          "publishedAt": "2022-06-19T20:14:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "styyokuda"
                          },
                          "bodyText": "Guillaume,\nI got confused by the documentation.\nI replaced MeshSideSetGenerator with LowerDBlockFromSidesetGenerator and it seems working. :)\nIt was too simple to believe.\nI would like to thank you for your time and help.\nThomas",
                          "url": "https://github.com/idaholab/moose/discussions/21343#discussioncomment-3019994",
                          "updatedAt": "2022-06-24T20:22:11Z",
                          "publishedAt": "2022-06-24T20:22:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "A 'AdvectionBC' is not a registered object.",
          "author": {
            "login": "hhy2022"
          },
          "bodyText": "Hi, I am trying to develop my own app(name Myself) using MOOSE. I found one bc object called \"AdvectionBC\" under [(modules/navier_stokes] module (https://mooseframework.inl.gov/source/bcs/AdvectionBC.html#fef0c6df-6c16-4af7-a474-58cc8577c10a). So I copied this one AdvectionBC.h & AdvectionBC.C and changed the register code in AdvectionBC.C file:\nregisterMooseObject(\"MyselfAPP\", AdvectionBC);\nThis is the only line I changed to the source code. I put the .h file in the include file and .c file in the src file. I could compile the app but when I am trying to running the input file, it gave me a message that A 'AdvectionBC' is not a registered object..\nI am kind of confused since I thought I had registered this object. Is there any other reason that make the registration of object fail?\nThank you so much for any kind of help.",
          "url": "https://github.com/idaholab/moose/discussions/21401",
          "updatedAt": "2022-06-24T18:08:39Z",
          "publishedAt": "2022-06-23T20:03:03Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nSo first, you dont need to move code over to use these objects. You just need to enable NAVIER_STOKES in the makefile of your application.\nSecondly, is your called MyselfApp or myselfApp ? The case is important. you can check the name in src/base/MyselfApp.C.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21401#discussioncomment-3013654",
                  "updatedAt": "2022-06-23T21:39:31Z",
                  "publishedAt": "2022-06-23T21:39:30Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hhy2022"
                          },
                          "bodyText": "Yes. I understood I can use the module by enabling it. I just want to build my own application and this is the necessary part.\nMy application is called MyselfAPP. I saw the \"MyselfAPP.C\" file in my src file.",
                          "url": "https://github.com/idaholab/moose/discussions/21401#discussioncomment-3013744",
                          "updatedAt": "2022-06-23T22:00:14Z",
                          "publishedAt": "2022-06-23T22:00:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "then it needs to be registered to MyselfAPP not MyselfApp but that seems weird to me\nJust be careful with the case.\nIf you paste the myselfApp.C file here I can check the app name",
                          "url": "https://github.com/idaholab/moose/discussions/21401#discussioncomment-3013842",
                          "updatedAt": "2022-06-23T22:32:52Z",
                          "publishedAt": "2022-06-23T22:32:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hhy2022"
                          },
                          "bodyText": "I see. I didn't even notice about the case difference. Thank you so much. I changed the name to make sure it was exactly the same as my application name and it worked well now.\nThank you so much for your help.",
                          "url": "https://github.com/idaholab/moose/discussions/21401#discussioncomment-3019351",
                          "updatedAt": "2022-06-24T18:08:33Z",
                          "publishedAt": "2022-06-24T18:08:32Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Compile libMesh failed using HPC Cluster",
          "author": {
            "login": "PengWei97"
          },
          "bodyText": "Dear MOOSE experts,\nRecently I wanted to link libmesh directly to moose, and completed the installation of PESTs according to HPC Cluster, the results are as follows,\n\nBut when compiling libmesh, ./scripts/update_and_rebuild_libmesh.sh, the following error occurs,\n-- Done configuring core library features ---\n---------------------------------------------\n---------------------------------------------\n----- Configuring for optional packages -----\n---------------------------------------------\nchecking for built-in XDR support... yes\nchecking for boostlib >= 1.57.0... configure: We could not detect the boost libraries (version 1.57 or higher). If you have a staged boost library (still not installed) please specify $BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.\n<<< External boost installation *not* found... will try to configure for libmesh's internal boost >>>\nchecking for boostlib >= 1.57.0... yes\n<<< Using libmesh-provided boost in ./contrib >>>\nchecking for boost::movelib::unique_ptr support... yes\nnote: Checking /lib and /include for MPI\nnote: Could not find /lib/libmpi(.a/.so/.dylib)\nmpicxx -std=gnu++17 Compiler Supports MPI \n<<< Found PETSc 3.16.5 installation in /home/pengwei/projects/libmesh/moose/petsc ... >>>\nchecking whether we can compile a trivial PETSc program... yes\nchecking for TAO support via PETSc... yes\nconfigure: error: *** PETSc with Hypre was not found, but --enable-petsc-hypre-required was specified.\nRunning make -j 1...\nmake: *** No targets specified and no makefile found.  Stop.\n\nAny suggestions or recommendations to fix the problem would be greatly appreciated.\nThank you\nWei",
          "url": "https://github.com/idaholab/moose/discussions/21388",
          "updatedAt": "2022-06-24T15:43:50Z",
          "publishedAt": "2022-06-23T09:07:36Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "MOOSE requires libMesh and PETSc. But also that PETSc to be built with HYPRE support (--download-hypre=1 during PETSc configure). You can see the options MOOSE requires or recommends in the moose/scripts/configure_petsc.sh script:\ncat moose/scripts/configure_petsc.sh\n<trimmed>\n  python ./configure --download-hypre=1 \\\n      --with-shared-libraries=$SHARED \\\n      \"$HDF5_STR\" \\\n      \"$HDF5_FORTRAN_STR\" \\\n      \"$MAKE_NP_STR\" \\\n      --with-debugging=no \\\n      --download-fblaslapack=1 \\\n      --download-metis=1 \\\n      --download-ptscotch=1 \\\n      --download-parmetis=1 \\\n      --download-superlu_dist=1 \\\n      --download-mumps=1 \\\n      --download-strumpack=1 \\\n      --download-scalapack=1 \\\n      --download-slepc=1 \\\n      --with-mpi=1 \\\n      --with-openmp=1 \\\n      --with-cxx-dialect=C++11 \\\n      --with-fortran-bindings=0 \\\n      --with-sowing=0 \\\n      --with-64-bit-indices \\\n      \"$@\"",
                  "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3010330",
                  "updatedAt": "2022-06-23T13:07:56Z",
                  "publishedAt": "2022-06-23T13:07:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Oh! Didn't quite catch you used ./update_and_rebuild_petsc.sh script.\nCan you attach the libmesh_diagnostic.log that was generated? It should be located at moose/scripts/libmesh_diagnostic.log",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3010362",
                          "updatedAt": "2022-06-23T13:12:32Z",
                          "publishedAt": "2022-06-23T13:12:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Yes, I used the update_and_rebuild_petsc.sh script to complete the installation of PETSc.\n\nCan you attach the libmesh_diagnostic.log that was generated? It should be located at moose/scripts/libmesh_diagnostic.log\n\nlibmesh_diagnostic.log",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3010423",
                          "updatedAt": "2022-06-23T13:22:27Z",
                          "publishedAt": "2022-06-23T13:22:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "The environment does not seem sane to me at the moment. I see references to two different mamba environments (libmesh and moose):\nPATH=/home/pengwei/mambaforge3/envs/libmesh/bin\n                               ^^^^ (libmesh)\nCONDA_BACKUP*=/home/pengwei/mambaforge3/envs/moose\n                                        ^^^^ (moose)\n\nAlso, having mambaforge3 installed and active, yet:\nPython:\n\t/usr/bin/python\n\tPython 2.7.18\n\nis really odd. FYI, after we get PETSc/libMesh sorted, you will need to make Python 3 available. As 2.7 is EOL, and will not work with MOOSE.\nCan you perform the following and report back:\nmamba deactivate\nmamba deactivate    # again because you can activate one, and install from that one (which might bring in\n                    # stuff from the previous creation)\nenv\nmamba activate libmesh  # I am assuming this is what you wanted as this is the last environment you were in?\nmamba list              # Curious what is installed, as it looks like you are using /usr/bin/mpich,\n                        # but have created/used our Conda install instructions at one point\nOnce I see this, we can try to proceed!",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3010532",
                          "updatedAt": "2022-06-23T13:39:32Z",
                          "publishedAt": "2022-06-23T13:39:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "I changed the default python to python3 and executed ./scripts/update_and_rebuild_libmesh.sh, the output is as follows,\nlibmesh_diagnostic.log\nAnd the last displayed information is as follows\n-------------------------------------------------------------------------------\nConfigure complete, now type 'make' and then 'make install'.\n\n---------------------------------------------\n--------- Done Configuring libMesh ----------\n---------------------------------------------\nI'm not sure whether libmesh was installed successfully, so I executed make -j4 in the test path, but the display is as follows,\n(libmesh) pengwei@pengwei-virtual-machine: (next)\n~/projects/libmesh/moose/test\n$ make -j4\nmake: python-config: Command not found\nmake: python-config: Command not found\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/build/unity_src/geomsearch_Unity.C...\nCreating Unity /home/pengwei/projects/libmesh/moose/framework/build/unity_src/splits_Unity.C\nCreating Unity /home/pengwei/projects/libmesh/moose/framework/build/unity_src/functions_Unity.C\nCreating Unity /home/pengwei/projects/libmesh/moose/framework/build/unity_src/vectorpostprocessors_Unity.C\nCreating Unity /home/pengwei/projects/libmesh/moose/framework/build/unity_src/partitioner_Unity.C\nCreating Unity /home/pengwei/projects/libmesh/moose/framework/build/unity_src/actions_Unity.C\n...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/hit/parse.cc...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/hit/lex.cc...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/hit/braceexpr.cc...\nBuilding and linking /home/pengwei/projects/libmesh/moose/framework/contrib/hit/hit.so...\n/home/pengwei/projects/libmesh/moose/framework/contrib/hit/hit.cpp:4:10: fatal error: Python.h: No such file or directory\n    4 | #include \"Python.h\"\n      |          ^~~~~~~~~~\ncompilation terminated.\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/ED_SystemInterface.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/create_file.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/stringx.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/exo_block.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/node_set.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/util.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/add_to_log.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/Tolerance.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/STRINGLIB_tokenize.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/map.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/check.C...\nCompiling C++ (in opt mode) /home/pengwei/projects/libmesh/moose/framework/contrib/exodiff/SL_tokenize.C...\nmake: *** [/home/pengwei/projects/libmesh/moose/framework/moose.mk:124: /home/pengwei/projects/libmesh/moose/framework/contrib/hit/hit.so] Error 1\nmake: *** Waiting for unfinished jobs....\n\nThis may also be a problem with the python settings.\n\nCan you perform the following and report back: ...\n\nIt is displayed as follows,\n(libmesh) pengwei@pengwei-virtual-machine: (next)\n~/projects/libmesh/moose/test\n$ mamba list \n# packages in environment at /home/pengwei/mambaforge3/envs/libmesh:\n#\n# Name                    Version                   Build  Channel\\",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3011605",
                          "updatedAt": "2022-06-23T15:57:21Z",
                          "publishedAt": "2022-06-23T15:57:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "It looks like you started with these instructions: https://mooseframework.inl.gov/getting_started/installation/conda.html\nand then went with these: https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html\nIs this correct?",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3012107",
                          "updatedAt": "2022-06-23T17:02:40Z",
                          "publishedAt": "2022-06-23T17:02:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Yes, I used https://mooseframework.inl.gov/getting_started/installation/conda.html first, then created a folder ./projects/libmesh/moose to clone the moose repository, and then based on https:/ /mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html to install.",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3015009",
                          "updatedAt": "2022-06-24T04:38:23Z",
                          "publishedAt": "2022-06-24T04:38:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I think you followed one too many instructions, based on what I am seeing in the libmesh_diagnostic.log. Was there a reason to try and perform the HPC instructions? The Conda instructions are best used for single workstations/laptops (which I think you have).\nThe HPC instructions are for those wishing to use a high performance job scheduling capable environment. Where typically you need optimized binaries designed to work specifically with that system's MPI infrastructure.\nIf following the HPC instructions was an accident, I believe the only steps left for you to do is:\nmamba activate moose\nmamba install moose-libmesh moose-tools\nmamba deactivate\nmamba activate moose\ncd ~/projects/libmesh/moose/test\nmake clobber all       # to clean up any previous build\nmake -j 6\n./run_tests -j 6",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3017612",
                          "updatedAt": "2022-06-24T13:13:39Z",
                          "publishedAt": "2022-06-24T13:12:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Was there a reason to try and perform the HPC instructions?\n\nMy purpose is to be able to link libmesh directly, so that I can have a deeper understanding of moose, considering that I need to create my own model, this is related to mesh data.\nI think my libmesh has been installed, but when I execute the following code,\ncd ~/projects/moose/test\nmake -j4\nIt shows make: python-config: Command not found, how to solve this?\nCompiling C++ (in opt mode) /home/pengwei/projects/moose/framework/build/unity_src/mesh_Unity.C...\nBuilding and linking /home/pengwei/projects/moose/framework/contrib/hit/hit.so...\n/home/pengwei/projects/moose/framework/contrib/hit/hit.cpp:4:10: fatal error: Python.h: No such file or directory\n    4 | #include \"Python.h\"\n      |          ^~~~~~~~~~\ncompilation terminated.\nCompiling C++ (in opt mode) /home/pengwei/projects/moose/framework/contrib/exodiff/exodiff.C...\nmake: *** [/home/pengwei/projects/moose/framework/moose.mk:124: /home/pengwei/projects/moose/framework/contrib/hit/hit.so] Error 1\nmake: *** Waiting for unfinished jobs....",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3017921",
                          "updatedAt": "2022-06-24T14:06:47Z",
                          "publishedAt": "2022-06-24T14:03:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Woohoo!! It works using sudo apt-get install python3-dev",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3018234",
                          "updatedAt": "2022-06-24T14:53:50Z",
                          "publishedAt": "2022-06-24T14:53:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "\ud83c\udf89  Nice! Looks like you got it sorted!\nFYI, you can still use Conda instead of the manual install (if you choose). You simply install only the things that moose-libmesh requires. Which I admit, is not documented. But that package install would look something like:\nmamba create -n just-petsc moose-petsc\nmamba activate just-petsc\ncd moose/scripts\nexport METHODS=oprof MOOSE_JOBS=6   # build profile method, using 6 cores\n./update_and_rebuild_libmesh.sh\nexport METHOD=oprof                 # build moose using same method as libMesh\ncd ../test\nmake -j 6\n./run_tests --oprof                 # run tests using the moose_test-oprof binary\nThere are several 'METHOD(S)' available, FYI; oprof, opt, devel, dbg\nThe description of what each means can be found here: https://mooseframework.inl.gov/moose/application_development/build_system.html",
                          "url": "https://github.com/idaholab/moose/discussions/21388#discussioncomment-3018566",
                          "updatedAt": "2022-06-24T15:47:15Z",
                          "publishedAt": "2022-06-24T15:43:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Postprocessor Output",
          "author": {
            "login": "Flolaffel"
          },
          "bodyText": "Hello,\nI have a calculation with 10.000 timesteps in the course of 10 seconds. I want to output data with a Postprocessor but only at certain times (0, 0.2, 0.6, 1, 2, 3, 4, 6, 10 seconds) and not at every timestep because that would result in a huge amount of irrelevant .csv documents. Is there a way to do this in MOOSE?",
          "url": "https://github.com/idaholab/moose/discussions/21404",
          "updatedAt": "2022-06-24T12:20:47Z",
          "publishedAt": "2022-06-24T10:02:03Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Flolaffel"
                  },
                  "bodyText": "I found the solution. In the Outputs-Block use\n[csv]\n  type = CSV\n  sync_times = '0.2 0.6 ...'\n  sync_only = true\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/21404#discussioncomment-3016711",
                  "updatedAt": "2022-06-24T10:24:39Z",
                  "publishedAt": "2022-06-24T10:24:37Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "useful!",
                          "url": "https://github.com/idaholab/moose/discussions/21404#discussioncomment-3017303",
                          "updatedAt": "2022-06-24T12:20:47Z",
                          "publishedAt": "2022-06-24T12:20:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Orientation of AbaqusUMATStress",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "If my UMAT has an anisotropic material, is there a way to re-orient it and/or the inputs going into it?\ntagging @dschwen (sorry for another UMAT question)",
          "url": "https://github.com/idaholab/moose/discussions/21376",
          "updatedAt": "2022-07-21T23:44:04Z",
          "publishedAt": "2022-06-21T20:24:50Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "recuero"
                  },
                  "bodyText": "What is it in particular that you want to rotate/reorient?",
                  "url": "https://github.com/idaholab/moose/discussions/21376#discussioncomment-2997424",
                  "updatedAt": "2022-06-21T21:46:25Z",
                  "publishedAt": "2022-06-21T21:46:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "For my application I'd like to orient the material model a certain way. An example would be two grains that are the same material but are oriented differently in the global coordinate system. Ideally I'd use the same UMAT for both materials but MOOSE would handle the rotations somehow.",
                          "url": "https://github.com/idaholab/moose/discussions/21376#discussioncomment-2997506",
                          "updatedAt": "2022-06-21T22:08:22Z",
                          "publishedAt": "2022-06-21T22:08:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "Doing that will most likely require some development around UMAT. MOOSE does have grain tracking capabilities that could probably be leveraged for your use case.",
                          "url": "https://github.com/idaholab/moose/discussions/21376#discussioncomment-2997769",
                          "updatedAt": "2022-06-21T23:24:08Z",
                          "publishedAt": "2022-06-21T23:24:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Are there any existing MOOSE capabilities that could be strung together currently to do what I need? Doesn't have to be grains (that was just an example).",
                          "url": "https://github.com/idaholab/moose/discussions/21376#discussioncomment-2997783",
                          "updatedAt": "2022-06-21T23:30:40Z",
                          "publishedAt": "2022-06-21T23:30:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "As far as I can see, code development will be required to allow the UMAT interface to correctly interpret local element/grain orientations. I assume you could potentially do what you want to do from the UMAT routines if you want to give it a try. But I understand that having it in the interface would be optimal.",
                          "url": "https://github.com/idaholab/moose/discussions/21376#discussioncomment-3014204",
                          "updatedAt": "2022-06-24T00:18:15Z",
                          "publishedAt": "2022-06-24T00:18:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Does it make sense to apply a rotation to the stress/strain tensors before/after the call to the UMAT to represent some arbitrary orientation?\nUnfortunately I can't touch the UMAT source code. Abaqus allows the user to specify an orientation to material models in the input file, which like you say is pretty convenient.",
                          "url": "https://github.com/idaholab/moose/discussions/21376#discussioncomment-3014284",
                          "updatedAt": "2022-06-24T00:43:32Z",
                          "publishedAt": "2022-06-24T00:43:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PorousFlow : Error in Kozeny Carman Equation",
          "author": {
            "login": "srinath-chakravarthy"
          },
          "bodyText": "For the kozeny carman equation with option poreperm = kozeny_carman_phi0, the implemented form results in a constant permeability = k0 * k_anisotropy.\nRationale :\n$k_{ij} = A * k_{ij}^0 \\frac{\\phi^n}{(1-\\phi)^m}$\n$ A = k0 * (1 - \\phi0)^m / \\phi0n$\nSubstituting for $A$ back into the first equation\n$k_{ij} = k_0 * k_{ij}^0$\nI checked the implementation and the relevant lines are seen below\nCalculation of factor A\n_A = _k0 * std::pow(1.0 - _phi0, _m) / std::pow(_phi0, _n);\nPermability calc\n _permeability_qp[_qp] = _k_anisotropy * _A * std::pow(_porosity_qp[_qp], _n) / std::pow(1.0 - _porosity_qp[_qp], _m);",
          "url": "https://github.com/idaholab/moose/discussions/21396",
          "updatedAt": "2022-07-21T23:43:47Z",
          "publishedAt": "2022-06-23T16:24:16Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Hang on, the _A depends on _phi0 (note the \"zero\"), while _permeability_qp[_qp] depends on _porosity_qp[_qp], which may not be _phi0.   I feel like i'm missing something obvious, sorry!",
                  "url": "https://github.com/idaholab/moose/discussions/21396#discussioncomment-3013335",
                  "updatedAt": "2022-06-23T20:34:03Z",
                  "publishedAt": "2022-06-23T20:33:57Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "srinath-chakravarthy"
                          },
                          "bodyText": "right if the porosity does not change, then _porosity[_qp] is equal to phi0 which means that the permeability will be just one. Also do you have a reference to this equation. Even if there is a porosity change, it seems strange to me, to be multiplying by the inverse of the power term.",
                          "url": "https://github.com/idaholab/moose/discussions/21396#discussioncomment-3013365",
                          "updatedAt": "2022-06-23T20:40:19Z",
                          "publishedAt": "2022-06-23T20:40:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "@hsheldon - can you answer @srinath-chakravarthy 's question about the reference?   @srinath-chakravarthy - the equation seems reasonable to me: as porosity->0 only the numerator survives, and perm = por^n, but as porosity->1, the denominator starts to dominate, and perm = 1/(1-por)^m.  For n and m positive, this seems like the correct type of behaviour.",
                          "url": "https://github.com/idaholab/moose/discussions/21396#discussioncomment-3013391",
                          "updatedAt": "2022-06-23T20:44:46Z",
                          "publishedAt": "2022-06-23T20:44:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hsheldon"
                          },
                          "bodyText": "@srinath-chakravarthy it looks fine to me; when phi = phi0 you have k = k0 * anisotropy, but when phi != phi0 you have a different value of k (increasing with phi). As phi increases, the numerator increases and the denominator decreases so k increases. Regarding a reference, this equation is essentially the Kozeny-Carman equation; there is a nice explanation of the derivation in this paper (p. 140 in particular):\nOelkers, E.H., 1996, Physical and chemical properties of rocks and fluids for chemical mass\ntransport calculations, in Lichtner, P.C., Steefel, C.I. et al., Reactive transport in porous media, Reviews in Mineralogy, v. 34: Washington, Mineralogical Society of America, 131-192.",
                          "url": "https://github.com/idaholab/moose/discussions/21396#discussioncomment-3014157",
                          "updatedAt": "2022-06-24T00:02:31Z",
                          "publishedAt": "2022-06-24T00:02:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Compilation failing",
          "author": {
            "login": "j-bowhay"
          },
          "bodyText": "",
          "url": "https://github.com/idaholab/moose/discussions/21390",
          "updatedAt": "2022-06-23T12:48:27Z",
          "publishedAt": "2022-06-23T10:24:08Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "j-bowhay"
                  },
                  "bodyText": "Turns out by mamba install was broken, now fixed",
                  "url": "https://github.com/idaholab/moose/discussions/21390#discussioncomment-3009663",
                  "updatedAt": "2022-06-23T11:29:29Z",
                  "publishedAt": "2022-06-23T11:29:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Material with temperature question",
          "author": {
            "login": "wangzhaohao"
          },
          "bodyText": "Hello, everyone!. I want to set a expression about temperature, and i public ComputeThermalExpansionEigenstrainBaseTemp, the .C\nis this\n 45          auto temp = _temperature[_qp];\n  \n 46         Real thermal_expansion = 1e-6;\n 47         if ( temp> 0 && temp < 923 )\n 48             thermal_expansion = 9.828e-6 -6.39e-10 * temp + 1.33e-12 * temp * temp -1.757\n 49         else if ( temp>=923 && temp<= 3120 )\n 50             thermal_expansion = 1.1833e-5 -5.103e-9 * temp + 3.756e-12 * temp * temp -6.1\n 51         else\n 52             thermal_expansion = 1.08e-5;\n 53 \n 54         return thermal_expansion * (_temperature[_qp] - _stress_free_temperature[_qp]);\n\nI know thermal_expansion is not Real, but i cannot find a type to declare it. what should i do? Thanks for your help.",
          "url": "https://github.com/idaholab/moose/discussions/21331",
          "updatedAt": "2022-06-25T05:58:25Z",
          "publishedAt": "2022-06-17T03:43:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "wangzhaohao"
                  },
                  "bodyText": "I know this can use a Function part, to do this work, but i want to use this at one .C. i put the whole\ncode\n  template <bool is_ad>\n 40 ValueAndDerivative<is_ad>\n 41 ComputeMoxThermalExpansionEigenstrainTempl<is_ad>::computeThermalStrain()\n 42 {\n 43     /* for(unsigned int qp(0); qp < _qrule->n_points(); ++qp) */\n 44     /* { */   \n 45         Function thermal_expansion; \n 46         auto temp = _temperature[_qp];\n 47 \n 48         if ( temp> 0 && temp < 923 )\n 49             thermal_expansion = 9.828e-6 -6.39e-10 * temp + 1.33e-12 * temp * temp -1.757e-17 * pow(temp,3);\n 50         else if ( temp>=923 && temp<= 3120 )\n 51             thermal_expansion = 1.1833e-5 -5.103e-9 * temp + 3.756e-12 * temp * temp -6.125e-17 * pow(temp,3);\n 52         else\n 53             thermal_expansion = 1.08e-5;\n 54 \n 55         return thermal_expansion * (_temperature[_qp] - _stress_free_temperature[_qp]);\n 56     /* } */    \n 57 }",
                  "url": "https://github.com/idaholab/moose/discussions/21331#discussioncomment-2970222",
                  "updatedAt": "2022-06-17T09:22:51Z",
                  "publishedAt": "2022-06-17T09:22:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nFunction arent declared inline like this. Look at other materials like GenericFunctionMaterial to see how functions are called if you want to use a Function.\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21331#discussioncomment-2972889",
                          "updatedAt": "2022-06-17T16:03:55Z",
                          "publishedAt": "2022-06-17T16:03:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "wangzhaohao"
                  },
                  "bodyText": "thanks! I got it.",
                  "url": "https://github.com/idaholab/moose/discussions/21331#discussioncomment-3008576",
                  "updatedAt": "2022-06-23T08:54:33Z",
                  "publishedAt": "2022-06-23T08:54:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}