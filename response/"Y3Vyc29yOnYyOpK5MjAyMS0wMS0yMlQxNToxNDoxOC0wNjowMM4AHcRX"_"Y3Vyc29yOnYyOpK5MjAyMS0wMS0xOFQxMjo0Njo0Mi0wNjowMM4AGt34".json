{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0wMS0xOFQxMjo0Njo0Mi0wNjowMM4AGt34"
    },
    "edges": [
      {
        "node": {
          "title": "KKS+Tensor Mechanics ; Solution not converging",
          "author": {
            "login": "KamalnathOSU"
          },
          "bodyText": "Accidently Posted. Let me add my question in the response.",
          "url": "https://github.com/idaholab/moose/discussions/16712",
          "updatedAt": "2022-06-16T22:08:49Z",
          "publishedAt": "2021-01-15T21:26:43Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Dear MOOSE team,\nI am trying to simulate the equilibrium shape of a precipitate in a infinite matrix (stress-free boundaries).  I systematically built up the input scripts as suggested in the MOOSE workshop. But after I added tensor mechanics in the input script, my solution is not converging on my supercomputer. But it is converging in my laptop where I have conda-based MOOSE installation.\nStep:1) single precipitate without elasticity\nkks_example_base.i.txt\nSolution converges for this input script.\nStep:2) single precipitate with elasticity added. But the elastic energy was not coupled with Allen-Cahn equation.\nkks_example_base_tensor.i.txt\nSolution does not converge for this input script in the supercomputer. But it converges on my laptop.\nStep:3) Fully coupled Allen-Cahn + Tensor mechanics.\nkks_example_base_tensor_couple.i.txt\nSolution does not converge for this input script in the supercomputer. But it converges on my laptop.\nRegards,\nKamal",
                  "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-285615",
                  "updatedAt": "2022-06-16T22:08:49Z",
                  "publishedAt": "2021-01-15T22:26:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Framework Information on my supercomputer:\nMOOSE Version:           git commit 83d3ca6f6f on 2020-10-28\nLibMesh Version:         f33331f6ebb0f31dff7526106268ca0c4300049e\nPETSc Version:           3.13.3\nSLEPc Version:           3.13.3\nCurrent Time:            Fri Jan 15 17:29:31 2021\nExecutable Timestamp:    Fri Jan 15 12:22:16 2021\n\nFramework Information on my laptop:\nMOOSE Version:           git commit 34fb8fa on 2020-08-05\nLibMesh Version:         d9738bf11cd8180e0f3e7889a10fbde13409a254\nPETSc Version:           3.13.3\nSLEPc Version:           3.13.3\nCurrent Time:            Fri Jan 15 17:31:23 2021\nExecutable Timestamp:    Sun Dec 27 10:34:23 2020",
                  "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-285628",
                  "updatedAt": "2022-06-27T18:49:19Z",
                  "publishedAt": "2021-01-15T22:32:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "Some solvers' behavior might depend on the number of MPI processors, so try to modify the solver option.\npetsc_options_iname = '-pc_type -sub_pc_type -pc_asm_overlap -sub_pc_factor_shift_type'\npetsc_options_value = 'asm      lu     2     nonzero'\nI believe @fdkong will give you better suggestions here.",
                  "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-289059",
                  "updatedAt": "2022-06-27T18:49:23Z",
                  "publishedAt": "2021-01-17T17:03:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Hi Wen,\nAs after the making the changes also, the simulation did not work, I tried to run it without MPI. Even then, the solution did not converge. So, I think the problem may not be with MPI.\nI am just curious whether my input scripts for Step:2 and Step:3 converged for other people. In my end, the solution failed to converge at the very first time step. Did the solution converge for you ?",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-291886",
                          "updatedAt": "2022-06-27T18:49:23Z",
                          "publishedAt": "2021-01-18T21:46:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "Sorry I did not get a chance to run your problem. Just to be clear: with the old solver setup, it converges on your laptop but not on hpc, is this correct? And for the new solver, it does not converge on neither your laptop nor the hpc.",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-294763",
                          "updatedAt": "2022-06-27T18:49:24Z",
                          "publishedAt": "2021-01-20T00:05:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Hi Wen,\nI am not sure whether you saw my other comment. Hence, reposting it as a reply.\nI am using the same solver ( by which I mean same version of PetSc in both cases). But in my laptop, the solution converges. In HPC, the solution does not converge. This is the case for Step2 and Step3 scripts. My Step1 script converges in both my laptop and in HPC",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-298911",
                          "updatedAt": "2022-06-27T18:49:25Z",
                          "publishedAt": "2021-01-21T13:02:06Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Thank you Wen. But this change does not fix the problem. My solution still does not converge.\n-Kamal\n\u2026\n________________________________\nFrom: Wen Jiang <notifications@github.com>\nSent: Sunday, January 17, 2021 12:03 PM\nTo: idaholab/moose <moose@noreply.github.com>\nCc: Kadirvel, Kamal <kadirvel.1@buckeyemail.osu.edu>; Author <author@noreply.github.com>\nSubject: Re: [idaholab/moose] KKS+Tensor Mechanics ; Solution not converging (#16712)\n\n\nSome solvers' behavior might depend on the number of MPI processors, so try to modify the solver option.\n\npetsc_options_iname = '-pc_type -sub_pc_type -pc_asm_overlap -sub_pc_factor_shift_type'\npetsc_options_value = 'asm lu 2 nonzero'\n\nI believe @fdkong<https://urldefense.com/v3/__https://github.com/fdkong__;!!KGKeukY!nsz8JpM-Sw4pRifvKcs0gggbQKt5jDqgYTsozSjrcTCsSQVjtCEb8BEzp06WQjfFigmQl_Pbh9w$> will give you better suggestions here.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://urldefense.com/v3/__https://github.com/idaholab/moose/discussions/16712*discussioncomment-289059__;Iw!!KGKeukY!nsz8JpM-Sw4pRifvKcs0gggbQKt5jDqgYTsozSjrcTCsSQVjtCEb8BEzp06WQjfFigmQtYGBc5I$>, or unsubscribe<https://urldefense.com/v3/__https://github.com/notifications/unsubscribe-auth/AIUJ4LPE7OAFN4DIYU6O7NLS2MJ63ANCNFSM4WEUDQBA__;!!KGKeukY!nsz8JpM-Sw4pRifvKcs0gggbQKt5jDqgYTsozSjrcTCsSQVjtCEb8BEzp06WQjfFigmQzevlwps$>.",
                  "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-289908",
                  "updatedAt": "2022-06-27T18:49:24Z",
                  "publishedAt": "2021-01-18T03:58:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "Hi Wen,\n\nI am using the same solver ( by which I mean same version of PetSc in both cases). But in my laptop, the solution converges. In HPC, the solution does not converge. This is the case for Step2 and Step3 scripts. My Step1 script converges in both my laptop and in HPC\n\u2026\n-Kamal\n________________________________\nFrom: Wen Jiang <notifications@github.com>\nSent: Tuesday, January 19, 2021 7:05 PM\nTo: idaholab/moose <moose@noreply.github.com>\nCc: Kadirvel, Kamal <kadirvel.1@buckeyemail.osu.edu>; Author <author@noreply.github.com>\nSubject: Re: [idaholab/moose] KKS+Tensor Mechanics ; Solution not converging (#16712)\n\n\nSorry I did not get a chance to run your problem. Just to be clear: with the old solver setup, it converges on your laptop but not on hpc, is this correct? And for the new solver, it does not converge on neither your laptop nor the hpc.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://urldefense.com/v3/__https://github.com/idaholab/moose/discussions/16712*discussioncomment-294763__;Iw!!KGKeukY!k60CjHa2RPwP_oPobpMRG5xKRigFIyg4Np5SGZUwhxIGjQoLfFchk6nj_46F66GCviEOm3bA6uA$>, or unsubscribe<https://urldefense.com/v3/__https://github.com/notifications/unsubscribe-auth/AIUJ4LLJC43ZAAL6HXZ2C7DS2YM3ZANCNFSM4WEUDQBA__;!!KGKeukY!k60CjHa2RPwP_oPobpMRG5xKRigFIyg4Np5SGZUwhxIGjQoLfFchk6nj_46F66GCviEO4HMOxzI$>.",
                  "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-296486",
                  "updatedAt": "2022-06-27T18:49:26Z",
                  "publishedAt": "2021-01-20T15:49:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "Could you show me the console output for the non-convergence case?",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-299216",
                          "updatedAt": "2022-08-10T18:15:44Z",
                          "publishedAt": "2021-01-21T14:40:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Sure. The following is the output from https://github.com/idaholab/moose/files/5823057/kks_example_base_tensor.i.txt\n./owens_bull-opt -i kks_example_base_tensor.i\n\n\nFramework Information:\nMOOSE Version:           git commit 83d3ca6f6f on 2020-10-28\nLibMesh Version:         f33331f6ebb0f31dff7526106268ca0c4300049e\nPETSc Version:           3.13.3\nSLEPc Version:           3.13.3\nCurrent Time:            Thu Jan 21 09:43:59 2021\nExecutable Timestamp:    Fri Jan 15 12:22:16 2021\n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh:\n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:\n    Total:                 4225\n    Local:                 4225\n  Elems:\n    Total:                 4096\n    Local:                 4096\n  Num Subdomains:          1\n  Num Partitions:          1\n\nNonlinear System:\n  Num DOFs:                29575\n  Num Local DOFs:          29575\n  Variables:               { \"eta\" \"c\" \"w\" \"cl\" \"cs\" \"disp_x\" \"disp_y\" }\n  Finite Element Types:    \"LAGRANGE\"\n  Approximation Orders:    \"FIRST\"\n\nAuxiliary System:\n  Num DOFs:                32768\n  Num Local DOFs:          32768\n  Variables:               { \"Fglobal\" \"stress_vm\" \"stress_xx\" \"stress_yy\" \"stress_xy\" \"elastic_strain_xx\"\n                             \"elastic_strain_yy\" \"elastic_strain_xy\" }\n  Finite Element Types:    \"MONOMIAL\"\n  Approximation Orders:    \"CONSTANT\"\n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             ConstantDT\n  Solver Mode:             Preconditioned JFNK\n  MOOSE Preconditioner:    SMP\n\nLEGACY MODES ENABLED:\n This application uses the legacy material output option: material properties are output only on TIMESTEP_END, not INITIAL. To remove this message, set 'use_legacy_material_output' to false in this application. If there are gold output files that contain material property output for which output occurs on INITIAL, then these will generate diffs due to zero values being stored, and these tests should be re-golded.\n\n\n\n*** Warning ***\n/users/PAS0167/osu7935/projects/bull/problems/NiAl_ppt/NiAl_2D_ppt_el/kks_template_moose/kks_example_base_tensor.i:25: unused parameter 'GlobalParams/end_point'\n/users/PAS0167/osu7935/projects/bull/problems/NiAl_ppt/NiAl_2D_ppt_el/kks_template_moose/kks_example_base_tensor.i:26: unused parameter 'GlobalParams/start_point'\n/users/PAS0167/osu7935/projects/bull/problems/NiAl_ppt/NiAl_2D_ppt_el/kks_template_moose/kks_example_base_tensor.i:29: unused parameter 'GlobalParams/use_legacy_material_output'\n\n\nTime Step 0, time = 0\n\nTime Step 1, time = 0.1, dt = 0.1\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 4.848403e+00\n      2 Linear |R| = 3.157574e+00\n      3 Linear |R| = 2.285403e+00\n      4 Linear |R| = 1.727349e+00\n      5 Linear |R| = 1.266865e+00\n      6 Linear |R| = 9.427700e-01\n      7 Linear |R| = 7.375685e-01\n      8 Linear |R| = 5.584492e-01\n      9 Linear |R| = 4.275105e-01\n     10 Linear |R| = 2.870150e-01\n     11 Linear |R| = 1.963131e-01\n     12 Linear |R| = 1.391827e-01\n     13 Linear |R| = 9.024055e-02\n     14 Linear |R| = 6.006009e-02\n     15 Linear |R| = 4.364791e-02\n     16 Linear |R| = 3.445497e-02\n     17 Linear |R| = 2.784422e-02\n     18 Linear |R| = 2.254395e-02\n     19 Linear |R| = 1.820692e-02\n     20 Linear |R| = 1.506764e-02\n     21 Linear |R| = 1.269192e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 1.258796e-01\n      0 Linear |R| = 1.258796e-01\n      1 Linear |R| = 2.630945e-02\n      2 Linear |R| = 1.158866e-02\n      3 Linear |R| = 1.105947e-02\n      4 Linear |R| = 9.852439e-03\n      5 Linear |R| = 8.772977e-03\n      6 Linear |R| = 7.189621e-03\n      7 Linear |R| = 5.726267e-03\n      8 Linear |R| = 4.541548e-03\n      9 Linear |R| = 3.332832e-03\n     10 Linear |R| = 2.414585e-03\n     11 Linear |R| = 1.907398e-03\n     12 Linear |R| = 1.622184e-03\n     13 Linear |R| = 1.380938e-03\n     14 Linear |R| = 1.089349e-03\n     15 Linear |R| = 6.931278e-04\n     16 Linear |R| = 5.325188e-04\n     17 Linear |R| = 4.229696e-04\n     18 Linear |R| = 3.227408e-04\n     19 Linear |R| = 2.352508e-04\n     20 Linear |R| = 1.631233e-04\n     21 Linear |R| = 1.181683e-04\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 2 Nonlinear |R| = 2.017938e-04\n      0 Linear |R| = 2.017938e-04\n      1 Linear |R| = 1.046881e-04\n      2 Linear |R| = 9.420003e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 2\n 3 Nonlinear |R| = 9.420098e-05\n      0 Linear |R| = 9.420098e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.05, dt = 0.05\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 4.825926e+00\n      2 Linear |R| = 3.143791e+00\n      3 Linear |R| = 2.282109e+00\n      4 Linear |R| = 1.722738e+00\n      5 Linear |R| = 1.258578e+00\n      6 Linear |R| = 9.395407e-01\n      7 Linear |R| = 7.355656e-01\n      8 Linear |R| = 5.562460e-01\n      9 Linear |R| = 4.260581e-01\n     10 Linear |R| = 2.863854e-01\n     11 Linear |R| = 1.949937e-01\n     12 Linear |R| = 1.385911e-01\n     13 Linear |R| = 8.968729e-02\n     14 Linear |R| = 5.963059e-02\n     15 Linear |R| = 4.350602e-02\n     16 Linear |R| = 3.437685e-02\n     17 Linear |R| = 2.779852e-02\n     18 Linear |R| = 2.250140e-02\n     19 Linear |R| = 1.815511e-02\n     20 Linear |R| = 1.503136e-02\n     21 Linear |R| = 1.266689e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 1.120320e-01\n      0 Linear |R| = 1.120320e-01\n      1 Linear |R| = 1.582184e-02\n      2 Linear |R| = 1.149630e-02\n      3 Linear |R| = 1.074795e-02\n      4 Linear |R| = 9.610948e-03\n      5 Linear |R| = 8.090518e-03\n      6 Linear |R| = 6.385417e-03\n      7 Linear |R| = 5.000091e-03\n      8 Linear |R| = 3.622930e-03\n      9 Linear |R| = 2.587483e-03\n     10 Linear |R| = 2.013267e-03\n     11 Linear |R| = 1.623424e-03\n     12 Linear |R| = 1.377264e-03\n     13 Linear |R| = 1.039400e-03\n     14 Linear |R| = 6.713797e-04\n     15 Linear |R| = 5.099690e-04\n     16 Linear |R| = 3.810089e-04\n     17 Linear |R| = 2.797329e-04\n     18 Linear |R| = 1.950266e-04\n     19 Linear |R| = 1.350167e-04\n     20 Linear |R| = 1.040764e-04\n  Linear solve converged due to CONVERGED_RTOL iterations 20\n 2 Nonlinear |R| = 1.552503e-04\n      0 Linear |R| = 1.552503e-04\n      1 Linear |R| = 9.310039e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 1\n 3 Nonlinear |R| = 9.310042e-05\n      0 Linear |R| = 9.310042e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.025, dt = 0.025\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 4.809641e+00\n      2 Linear |R| = 3.134219e+00\n      3 Linear |R| = 2.279900e+00\n      4 Linear |R| = 1.719434e+00\n      5 Linear |R| = 1.252606e+00\n      6 Linear |R| = 9.371930e-01\n      7 Linear |R| = 7.342059e-01\n      8 Linear |R| = 5.546645e-01\n      9 Linear |R| = 4.250174e-01\n     10 Linear |R| = 2.860228e-01\n     11 Linear |R| = 1.939640e-01\n     12 Linear |R| = 1.381360e-01\n     13 Linear |R| = 8.932090e-02\n     14 Linear |R| = 5.930451e-02\n     15 Linear |R| = 4.340084e-02\n     16 Linear |R| = 3.433003e-02\n     17 Linear |R| = 2.776289e-02\n     18 Linear |R| = 2.247183e-02\n     19 Linear |R| = 1.812185e-02\n     20 Linear |R| = 1.500250e-02\n     21 Linear |R| = 1.264943e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 1.569451e-01\n      0 Linear |R| = 1.569451e-01\n      1 Linear |R| = 1.251093e-02\n      2 Linear |R| = 1.143348e-02\n      3 Linear |R| = 1.048700e-02\n      4 Linear |R| = 9.461858e-03\n      5 Linear |R| = 7.629538e-03\n      6 Linear |R| = 6.121730e-03\n      7 Linear |R| = 4.720671e-03\n      8 Linear |R| = 3.307096e-03\n      9 Linear |R| = 2.474826e-03\n     10 Linear |R| = 1.915090e-03\n     11 Linear |R| = 1.577574e-03\n     12 Linear |R| = 1.302992e-03\n     13 Linear |R| = 9.399887e-04\n     14 Linear |R| = 6.366749e-04\n     15 Linear |R| = 4.825227e-04\n     16 Linear |R| = 3.634995e-04\n     17 Linear |R| = 2.609183e-04\n     18 Linear |R| = 1.813650e-04\n     19 Linear |R| = 1.273033e-04\n  Linear solve converged due to CONVERGED_RTOL iterations 19\n 2 Nonlinear |R| = 1.581492e-04\n      0 Linear |R| = 1.581492e-04\n      1 Linear |R| = 1.103011e-04\n      2 Linear |R| = 9.086666e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 2\n 3 Nonlinear |R| = 9.086657e-05\n      0 Linear |R| = 9.086657e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.0125, dt = 0.0125\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 4.799522e+00\n      2 Linear |R| = 3.128496e+00\n      3 Linear |R| = 2.278557e+00\n      4 Linear |R| = 1.717311e+00\n      5 Linear |R| = 1.248692e+00\n      6 Linear |R| = 9.355997e-01\n      7 Linear |R| = 7.333261e-01\n      8 Linear |R| = 5.536402e-01\n      9 Linear |R| = 4.242797e-01\n     10 Linear |R| = 2.858126e-01\n     11 Linear |R| = 1.932239e-01\n     12 Linear |R| = 1.377802e-01\n     13 Linear |R| = 8.909474e-02\n     14 Linear |R| = 5.908263e-02\n     15 Linear |R| = 4.331766e-02\n     16 Linear |R| = 3.430094e-02\n     17 Linear |R| = 2.773738e-02\n     18 Linear |R| = 2.244735e-02\n     19 Linear |R| = 1.810337e-02\n     20 Linear |R| = 1.498089e-02\n     21 Linear |R| = 1.263475e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 3.171484e-01\n      0 Linear |R| = 3.171484e-01\n      1 Linear |R| = 1.193571e-02\n      2 Linear |R| = 1.124125e-02\n      3 Linear |R| = 1.040635e-02\n      4 Linear |R| = 9.266298e-03\n      5 Linear |R| = 7.375881e-03\n      6 Linear |R| = 5.754019e-03\n      7 Linear |R| = 4.564127e-03\n      8 Linear |R| = 3.119969e-03\n      9 Linear |R| = 2.395973e-03\n     10 Linear |R| = 1.829778e-03\n     11 Linear |R| = 1.537223e-03\n     12 Linear |R| = 1.249528e-03\n     13 Linear |R| = 8.703952e-04\n     14 Linear |R| = 6.109209e-04\n     15 Linear |R| = 4.601980e-04\n     16 Linear |R| = 3.479043e-04\n     17 Linear |R| = 2.474033e-04\n  Linear solve converged due to CONVERGED_RTOL iterations 17\n 2 Nonlinear |R| = 2.557507e-04\n      0 Linear |R| = 2.557507e-04\n      1 Linear |R| = 2.002773e-04\n      2 Linear |R| = 1.582957e-04\n      3 Linear |R| = 1.307864e-04\n      4 Linear |R| = 1.019632e-04\n      5 Linear |R| = 7.861740e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 5\n 3 Nonlinear |R| = 7.861721e-05\n      0 Linear |R| = 7.861721e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.00625, dt = 0.00625\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 4.796838e+00\n      2 Linear |R| = 3.129464e+00\n      3 Linear |R| = 2.278469e+00\n      4 Linear |R| = 1.716397e+00\n      5 Linear |R| = 1.249119e+00\n      6 Linear |R| = 9.364293e-01\n      7 Linear |R| = 7.333722e-01\n      8 Linear |R| = 5.534388e-01\n      9 Linear |R| = 4.249954e-01\n     10 Linear |R| = 2.860108e-01\n     11 Linear |R| = 1.935552e-01\n     12 Linear |R| = 1.380387e-01\n     13 Linear |R| = 8.902122e-02\n     14 Linear |R| = 5.906012e-02\n     15 Linear |R| = 4.338414e-02\n     16 Linear |R| = 3.431639e-02\n     17 Linear |R| = 2.774185e-02\n     18 Linear |R| = 2.247880e-02\n     19 Linear |R| = 1.809860e-02\n     20 Linear |R| = 1.498024e-02\n     21 Linear |R| = 1.264820e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 5.752292e-01\n      0 Linear |R| = 5.752292e-01\n      1 Linear |R| = 1.188247e-02\n      2 Linear |R| = 1.104920e-02\n      3 Linear |R| = 1.039260e-02\n      4 Linear |R| = 8.868986e-03\n      5 Linear |R| = 7.199131e-03\n      6 Linear |R| = 5.639260e-03\n      7 Linear |R| = 4.358153e-03\n      8 Linear |R| = 3.052248e-03\n      9 Linear |R| = 2.292970e-03\n     10 Linear |R| = 1.801038e-03\n     11 Linear |R| = 1.501032e-03\n     12 Linear |R| = 1.208062e-03\n     13 Linear |R| = 8.333947e-04\n     14 Linear |R| = 5.902583e-04\n     15 Linear |R| = 4.511195e-04\n  Linear solve converged due to CONVERGED_RTOL iterations 15\n 2 Nonlinear |R| = 4.525455e-04\n      0 Linear |R| = 4.525455e-04\n      1 Linear |R| = 3.854891e-04\n      2 Linear |R| = 3.137415e-04\n      3 Linear |R| = 2.187537e-04\n      4 Linear |R| = 1.605692e-04\n      5 Linear |R| = 1.296568e-04\n      6 Linear |R| = 1.048753e-04\n      7 Linear |R| = 8.662911e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 7\n 3 Nonlinear |R| = 8.662948e-05\n      0 Linear |R| = 8.662948e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.003125, dt = 0.003125\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 4.813841e+00\n      2 Linear |R| = 3.147190e+00\n      3 Linear |R| = 2.281312e+00\n      4 Linear |R| = 1.717582e+00\n      5 Linear |R| = 1.257303e+00\n      6 Linear |R| = 9.419954e-01\n      7 Linear |R| = 7.347650e-01\n      8 Linear |R| = 5.543943e-01\n      9 Linear |R| = 4.280506e-01\n     10 Linear |R| = 2.868222e-01\n     11 Linear |R| = 1.953689e-01\n     12 Linear |R| = 1.390147e-01\n     13 Linear |R| = 8.914928e-02\n     14 Linear |R| = 5.926405e-02\n     15 Linear |R| = 4.359975e-02\n     16 Linear |R| = 3.438379e-02\n     17 Linear |R| = 2.778013e-02\n     18 Linear |R| = 2.256401e-02\n     19 Linear |R| = 1.811743e-02\n     20 Linear |R| = 1.499989e-02\n     21 Linear |R| = 1.268147e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 1.316725e+00\n      0 Linear |R| = 1.316725e+00\n      1 Linear |R| = 1.190257e-02\n      2 Linear |R| = 1.103308e-02\n      3 Linear |R| = 1.040918e-02\n      4 Linear |R| = 8.747046e-03\n      5 Linear |R| = 7.071522e-03\n      6 Linear |R| = 5.658422e-03\n      7 Linear |R| = 4.097425e-03\n      8 Linear |R| = 3.013191e-03\n      9 Linear |R| = 2.246361e-03\n     10 Linear |R| = 1.766374e-03\n     11 Linear |R| = 1.490286e-03\n     12 Linear |R| = 1.185926e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 12\n 2 Nonlinear |R| = 1.186157e-03\n      0 Linear |R| = 1.186157e-03\n      1 Linear |R| = 1.009506e-03\n      2 Linear |R| = 8.423236e-04\n      3 Linear |R| = 6.533621e-04\n      4 Linear |R| = 4.914054e-04\n      5 Linear |R| = 3.880167e-04\n      6 Linear |R| = 2.968883e-04\n      7 Linear |R| = 2.452710e-04\n      8 Linear |R| = 2.121004e-04\n      9 Linear |R| = 1.802399e-04\n     10 Linear |R| = 1.643117e-04\n     11 Linear |R| = 1.403247e-04\n     12 Linear |R| = 1.148422e-04\n     13 Linear |R| = 8.949307e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 13\n 3 Nonlinear |R| = 8.950878e-05\n      0 Linear |R| = 8.950878e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.0015625, dt = 0.0015625\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 4.895163e+00\n      2 Linear |R| = 3.227491e+00\n      3 Linear |R| = 2.292079e+00\n      4 Linear |R| = 1.723805e+00\n      5 Linear |R| = 1.284719e+00\n      6 Linear |R| = 9.549208e-01\n      7 Linear |R| = 7.399699e-01\n      8 Linear |R| = 5.581410e-01\n      9 Linear |R| = 4.330718e-01\n     10 Linear |R| = 2.900812e-01\n     11 Linear |R| = 1.985872e-01\n     12 Linear |R| = 1.404291e-01\n     13 Linear |R| = 9.077136e-02\n     14 Linear |R| = 6.033336e-02\n     15 Linear |R| = 4.383818e-02\n     16 Linear |R| = 3.465757e-02\n     17 Linear |R| = 2.796520e-02\n     18 Linear |R| = 2.266598e-02\n     19 Linear |R| = 1.831681e-02\n     20 Linear |R| = 1.508924e-02\n     21 Linear |R| = 1.271254e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 2.430056e+00\n      0 Linear |R| = 2.430056e+00\n      1 Linear |R| = 1.192696e-02\n      2 Linear |R| = 1.105338e-02\n      3 Linear |R| = 1.042745e-02\n      4 Linear |R| = 8.760412e-03\n      5 Linear |R| = 7.091769e-03\n      6 Linear |R| = 5.695269e-03\n      7 Linear |R| = 4.052732e-03\n      8 Linear |R| = 3.006494e-03\n      9 Linear |R| = 2.234636e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 9\n 2 Nonlinear |R| = 2.234676e-03\n      0 Linear |R| = 2.234676e-03\n      1 Linear |R| = 1.920282e-03\n      2 Linear |R| = 1.650239e-03\n      3 Linear |R| = 1.411663e-03\n      4 Linear |R| = 1.053384e-03\n      5 Linear |R| = 7.888967e-04\n      6 Linear |R| = 6.343838e-04\n      7 Linear |R| = 5.395175e-04\n      8 Linear |R| = 4.704895e-04\n      9 Linear |R| = 3.946959e-04\n     10 Linear |R| = 3.468998e-04\n     11 Linear |R| = 3.139681e-04\n     12 Linear |R| = 2.601345e-04\n     13 Linear |R| = 2.117960e-04\n     14 Linear |R| = 1.753096e-04\n     15 Linear |R| = 1.298600e-04\n     16 Linear |R| = 1.016847e-04\n     17 Linear |R| = 8.267372e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 17\n 3 Nonlinear |R| = 8.278963e-05\n      0 Linear |R| = 8.278963e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.00078125, dt = 0.00078125\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 5.198231e+00\n      2 Linear |R| = 3.359650e+00\n      3 Linear |R| = 2.309048e+00\n      4 Linear |R| = 1.764422e+00\n      5 Linear |R| = 1.322473e+00\n      6 Linear |R| = 9.655104e-01\n      7 Linear |R| = 7.572431e-01\n      8 Linear |R| = 5.685132e-01\n      9 Linear |R| = 4.359128e-01\n     10 Linear |R| = 2.995421e-01\n     11 Linear |R| = 2.021524e-01\n     12 Linear |R| = 1.419596e-01\n     13 Linear |R| = 9.485595e-02\n     14 Linear |R| = 6.193886e-02\n     15 Linear |R| = 4.431732e-02\n     16 Linear |R| = 3.511099e-02\n     17 Linear |R| = 2.818433e-02\n     18 Linear |R| = 2.292963e-02\n     19 Linear |R| = 1.851199e-02\n     20 Linear |R| = 1.524160e-02\n     21 Linear |R| = 1.284549e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 5.082988e+00\n      0 Linear |R| = 5.082988e+00\n      1 Linear |R| = 1.203531e-02\n      2 Linear |R| = 1.113829e-02\n      3 Linear |R| = 1.051513e-02\n      4 Linear |R| = 8.858920e-03\n      5 Linear |R| = 7.194656e-03\n      6 Linear |R| = 5.842942e-03\n      7 Linear |R| = 4.103382e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 7\n 2 Nonlinear |R| = 4.103090e-03\n      0 Linear |R| = 4.103090e-03\n      1 Linear |R| = 3.361862e-03\n      2 Linear |R| = 2.811144e-03\n      3 Linear |R| = 2.349446e-03\n      4 Linear |R| = 1.988221e-03\n      5 Linear |R| = 1.698363e-03\n      6 Linear |R| = 1.480315e-03\n      7 Linear |R| = 1.319019e-03\n      8 Linear |R| = 1.082220e-03\n      9 Linear |R| = 8.938715e-04\n     10 Linear |R| = 7.733930e-04\n     11 Linear |R| = 6.349409e-04\n     12 Linear |R| = 5.258939e-04\n     13 Linear |R| = 4.074693e-04\n     14 Linear |R| = 3.255599e-04\n     15 Linear |R| = 2.498021e-04\n     16 Linear |R| = 1.620177e-04\n     17 Linear |R| = 1.093445e-04\n     18 Linear |R| = 8.531281e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 18\n 3 Nonlinear |R| = 8.582464e-05\n      0 Linear |R| = 8.582464e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.000390625, dt = 0.000390625\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 5.903739e+00\n      2 Linear |R| = 3.555526e+00\n      3 Linear |R| = 2.414329e+00\n      4 Linear |R| = 1.897194e+00\n      5 Linear |R| = 1.364520e+00\n      6 Linear |R| = 9.881495e-01\n      7 Linear |R| = 7.817008e-01\n      8 Linear |R| = 5.880734e-01\n      9 Linear |R| = 4.503926e-01\n     10 Linear |R| = 3.103062e-01\n     11 Linear |R| = 2.135397e-01\n     12 Linear |R| = 1.475991e-01\n     13 Linear |R| = 9.878746e-02\n     14 Linear |R| = 6.535668e-02\n     15 Linear |R| = 4.690900e-02\n     16 Linear |R| = 3.605104e-02\n     17 Linear |R| = 2.876990e-02\n     18 Linear |R| = 2.352727e-02\n     19 Linear |R| = 1.898764e-02\n     20 Linear |R| = 1.563521e-02\n     21 Linear |R| = 1.305600e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 9.014809e+00\n      0 Linear |R| = 9.014809e+00\n      1 Linear |R| = 1.221615e-02\n      2 Linear |R| = 1.129813e-02\n      3 Linear |R| = 1.064463e-02\n      4 Linear |R| = 9.028407e-03\n      5 Linear |R| = 7.468411e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 5\n 2 Nonlinear |R| = 7.468880e-03\n      0 Linear |R| = 7.468880e-03\n      1 Linear |R| = 6.713086e-03\n      2 Linear |R| = 6.013461e-03\n      3 Linear |R| = 5.347824e-03\n      4 Linear |R| = 4.853095e-03\n      5 Linear |R| = 4.096532e-03\n      6 Linear |R| = 3.290625e-03\n      7 Linear |R| = 2.245735e-03\n      8 Linear |R| = 1.407166e-03\n      9 Linear |R| = 9.333725e-04\n     10 Linear |R| = 6.535687e-04\n     11 Linear |R| = 4.703478e-04\n     12 Linear |R| = 3.158538e-04\n     13 Linear |R| = 1.905063e-04\n     14 Linear |R| = 1.456748e-04\n     15 Linear |R| = 1.122614e-04\n     16 Linear |R| = 8.333351e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 16\n 3 Nonlinear |R| = 8.500385e-05\n      0 Linear |R| = 8.500385e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 3\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.000195313, dt = 0.000195313\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 7.845985e+00\n      2 Linear |R| = 3.858096e+00\n      3 Linear |R| = 2.863225e+00\n      4 Linear |R| = 1.958691e+00\n      5 Linear |R| = 1.523060e+00\n      6 Linear |R| = 1.071010e+00\n      7 Linear |R| = 8.261516e-01\n      8 Linear |R| = 6.501298e-01\n      9 Linear |R| = 4.727067e-01\n     10 Linear |R| = 3.352232e-01\n     11 Linear |R| = 2.329786e-01\n     12 Linear |R| = 1.551754e-01\n     13 Linear |R| = 1.107535e-01\n     14 Linear |R| = 7.244538e-02\n     15 Linear |R| = 5.105369e-02\n     16 Linear |R| = 3.770178e-02\n     17 Linear |R| = 3.033026e-02\n     18 Linear |R| = 2.469786e-02\n     19 Linear |R| = 1.981976e-02\n     20 Linear |R| = 1.642553e-02\n     21 Linear |R| = 1.380697e-02\n     22 Linear |R| = 1.169124e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 22\n 1 Nonlinear |R| = 1.047078e+01\n      0 Linear |R| = 1.047078e+01\n      1 Linear |R| = 4.942709e+00\n      2 Linear |R| = 2.300843e+00\n      3 Linear |R| = 1.664340e+00\n      4 Linear |R| = 1.206978e+00\n      5 Linear |R| = 8.733745e-01\n      6 Linear |R| = 6.432453e-01\n      7 Linear |R| = 4.968506e-01\n      8 Linear |R| = 3.771886e-01\n      9 Linear |R| = 2.915704e-01\n     10 Linear |R| = 1.996642e-01\n     11 Linear |R| = 1.385197e-01\n     12 Linear |R| = 9.465292e-02\n     13 Linear |R| = 6.522802e-02\n     14 Linear |R| = 4.262902e-02\n     15 Linear |R| = 3.029438e-02\n     16 Linear |R| = 2.357086e-02\n     17 Linear |R| = 1.897478e-02\n     18 Linear |R| = 1.548740e-02\n     19 Linear |R| = 1.287120e-02\n     20 Linear |R| = 1.060359e-02\n     21 Linear |R| = 8.942226e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 2 Nonlinear |R| = 7.833318e+00\n      0 Linear |R| = 7.833318e+00\n      1 Linear |R| = 8.364989e-03\n      2 Linear |R| = 7.740912e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 2\n 3 Nonlinear |R| = 7.742309e-03\n      0 Linear |R| = 7.742309e-03\n      1 Linear |R| = 7.514173e-03\n      2 Linear |R| = 6.548616e-03\n      3 Linear |R| = 5.131182e-03\n      4 Linear |R| = 4.197055e-03\n      5 Linear |R| = 3.312334e-03\n      6 Linear |R| = 2.317693e-03\n      7 Linear |R| = 1.516019e-03\n      8 Linear |R| = 1.198301e-03\n      9 Linear |R| = 1.034415e-03\n     10 Linear |R| = 7.988748e-04\n     11 Linear |R| = 5.904699e-04\n     12 Linear |R| = 4.410363e-04\n     13 Linear |R| = 3.187068e-04\n     14 Linear |R| = 2.317397e-04\n     15 Linear |R| = 1.635597e-04\n     16 Linear |R| = 1.080794e-04\n     17 Linear |R| = 7.907430e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 17\n 4 Nonlinear |R| = 8.137486e-05\n      0 Linear |R| = 8.137486e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 4\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 9.76563e-05, dt = 9.76563e-05\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 1.063370e+01\n      2 Linear |R| = 5.012293e+00\n      3 Linear |R| = 3.502692e+00\n      4 Linear |R| = 2.246833e+00\n      5 Linear |R| = 1.663488e+00\n      6 Linear |R| = 1.363167e+00\n      7 Linear |R| = 9.227677e-01\n      8 Linear |R| = 7.325793e-01\n      9 Linear |R| = 5.645546e-01\n     10 Linear |R| = 3.957447e-01\n     11 Linear |R| = 2.818753e-01\n     12 Linear |R| = 1.720786e-01\n     13 Linear |R| = 1.303447e-01\n     14 Linear |R| = 8.558937e-02\n     15 Linear |R| = 5.649844e-02\n     16 Linear |R| = 4.214454e-02\n     17 Linear |R| = 3.319023e-02\n     18 Linear |R| = 2.691618e-02\n     19 Linear |R| = 2.105471e-02\n     20 Linear |R| = 1.753942e-02\n     21 Linear |R| = 1.462755e-02\n     22 Linear |R| = 1.232287e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 22\n 1 Nonlinear |R| = 1.232229e+01\n      0 Linear |R| = 1.232229e+01\n      1 Linear |R| = 9.267011e+00\n      2 Linear |R| = 3.337574e+00\n      3 Linear |R| = 2.883021e+00\n      4 Linear |R| = 1.706286e+00\n      5 Linear |R| = 1.430757e+00\n      6 Linear |R| = 9.743770e-01\n      7 Linear |R| = 7.418085e-01\n      8 Linear |R| = 6.029825e-01\n      9 Linear |R| = 4.297731e-01\n     10 Linear |R| = 3.090445e-01\n     11 Linear |R| = 2.095976e-01\n     12 Linear |R| = 1.423990e-01\n     13 Linear |R| = 1.016769e-01\n     14 Linear |R| = 6.675234e-02\n     15 Linear |R| = 4.728168e-02\n     16 Linear |R| = 3.476990e-02\n     17 Linear |R| = 2.752686e-02\n     18 Linear |R| = 2.196875e-02\n     19 Linear |R| = 1.795378e-02\n     20 Linear |R| = 1.478438e-02\n     21 Linear |R| = 1.249625e-02\n     22 Linear |R| = 1.054942e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 22\n 2 Nonlinear |R| = 1.110482e+01\n      0 Linear |R| = 1.110482e+01\n      1 Linear |R| = 8.066730e+00\n      2 Linear |R| = 2.666710e+00\n      3 Linear |R| = 2.252141e+00\n      4 Linear |R| = 1.407022e+00\n      5 Linear |R| = 1.104544e+00\n      6 Linear |R| = 7.848966e-01\n      7 Linear |R| = 5.903897e-01\n      8 Linear |R| = 4.641372e-01\n      9 Linear |R| = 3.345393e-01\n     10 Linear |R| = 2.396913e-01\n     11 Linear |R| = 1.671674e-01\n     12 Linear |R| = 1.107184e-01\n     13 Linear |R| = 7.896349e-02\n     14 Linear |R| = 5.308515e-02\n     15 Linear |R| = 3.694994e-02\n     16 Linear |R| = 2.714980e-02\n     17 Linear |R| = 2.207840e-02\n     18 Linear |R| = 1.772063e-02\n     19 Linear |R| = 1.451252e-02\n     20 Linear |R| = 1.207834e-02\n     21 Linear |R| = 1.018377e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 3 Nonlinear |R| = 9.809731e+00\n      0 Linear |R| = 9.809731e+00\n      1 Linear |R| = 6.812641e+00\n      2 Linear |R| = 2.054215e+00\n      3 Linear |R| = 1.658729e+00\n      4 Linear |R| = 1.042434e+00\n      5 Linear |R| = 8.115119e-01\n      6 Linear |R| = 5.815671e-01\n      7 Linear |R| = 4.345540e-01\n      8 Linear |R| = 3.457677e-01\n      9 Linear |R| = 2.520776e-01\n     10 Linear |R| = 1.787551e-01\n     11 Linear |R| = 1.243387e-01\n     12 Linear |R| = 8.290688e-02\n     13 Linear |R| = 5.992934e-02\n     14 Linear |R| = 3.927285e-02\n     15 Linear |R| = 2.817729e-02\n     16 Linear |R| = 2.088970e-02\n     17 Linear |R| = 1.701120e-02\n     18 Linear |R| = 1.410997e-02\n     19 Linear |R| = 1.137427e-02\n     20 Linear |R| = 9.570660e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 20\n 4 Nonlinear |R| = 7.983932e+00\n      0 Linear |R| = 7.983932e+00\n      1 Linear |R| = 4.177475e+00\n      2 Linear |R| = 1.356313e+00\n      3 Linear |R| = 1.089304e+00\n      4 Linear |R| = 7.339766e-01\n      5 Linear |R| = 5.380107e-01\n      6 Linear |R| = 4.020198e-01\n      7 Linear |R| = 2.985608e-01\n      8 Linear |R| = 2.340070e-01\n      9 Linear |R| = 1.765401e-01\n     10 Linear |R| = 1.219476e-01\n     11 Linear |R| = 8.593831e-02\n     12 Linear |R| = 5.718256e-02\n     13 Linear |R| = 4.163426e-02\n     14 Linear |R| = 2.662878e-02\n     15 Linear |R| = 1.913276e-02\n     16 Linear |R| = 1.485672e-02\n     17 Linear |R| = 1.195069e-02\n     18 Linear |R| = 9.965031e-03\n     19 Linear |R| = 8.361432e-03\n     20 Linear |R| = 6.947238e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 20\n 5 Nonlinear |R| = 7.174538e+00\n      0 Linear |R| = 7.174538e+00\n      1 Linear |R| = 6.468772e-03\n  Linear solve converged due to CONVERGED_RTOL iterations 1\n 6 Nonlinear |R| = 6.468813e-03\n      0 Linear |R| = 6.468813e-03\n      1 Linear |R| = 5.942179e-03\n      2 Linear |R| = 5.418883e-03\n      3 Linear |R| = 4.720387e-03\n      4 Linear |R| = 4.215712e-03\n      5 Linear |R| = 3.390552e-03\n      6 Linear |R| = 2.276011e-03\n      7 Linear |R| = 1.694037e-03\n      8 Linear |R| = 1.308795e-03\n      9 Linear |R| = 1.008568e-03\n     10 Linear |R| = 7.831245e-04\n     11 Linear |R| = 6.263493e-04\n     12 Linear |R| = 4.828746e-04\n     13 Linear |R| = 3.594723e-04\n     14 Linear |R| = 2.795301e-04\n     15 Linear |R| = 1.968352e-04\n     16 Linear |R| = 1.161170e-04\n     17 Linear |R| = 7.190917e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 17\n 7 Nonlinear |R| = 7.955866e-05\n      0 Linear |R| = 7.955866e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 7\n Solve Did NOT Converge!\nAborting as solve did not converge",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-299245",
                          "updatedAt": "2022-08-10T18:15:49Z",
                          "publishedAt": "2021-01-21T14:50:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Also, the following is the output for the converging case, for your comparison,\n\nFramework Information:\nMOOSE Version:           unknown\nLibMesh Version:         d9738bf11cd8180e0f3e7889a10fbde13409a254\nPETSc Version:           3.13.3\nSLEPc Version:           3.13.3\nCurrent Time:            Thu Jan 21 10:00:27 2021\nExecutable Timestamp:    Thu Jan 21 07:53:36 2021\n\nParallelism:\n  Num Processors:          1\n  Num Threads:             1\n\nMesh:\n  Parallel Type:           replicated\n  Mesh Dimension:          2\n  Spatial Dimension:       2\n  Nodes:\n    Total:                 4225\n    Local:                 4225\n  Elems:\n    Total:                 4096\n    Local:                 4096\n  Num Subdomains:          1\n  Num Partitions:          1\n\nNonlinear System:\n  Num DOFs:                29575\n  Num Local DOFs:          29575\n  Variables:               { \"eta\" \"c\" \"w\" \"cl\" \"cs\" \"disp_x\" \"disp_y\" }\n  Finite Element Types:    \"LAGRANGE\"\n  Approximation Orders:    \"FIRST\"\n\nAuxiliary System:\n  Num DOFs:                32768\n  Num Local DOFs:          32768\n  Variables:               { \"Fglobal\" \"stress_vm\" \"stress_xx\" \"stress_yy\" \"stre                                               ss_xy\" \"elastic_strain_xx\"\n                             \"elastic_strain_yy\" \"elastic_strain_xy\" }\n  Finite Element Types:    \"MONOMIAL\"\n  Approximation Orders:    \"CONSTANT\"\n\nExecution Information:\n  Executioner:             Transient\n  TimeStepper:             ConstantDT\n  Solver Mode:             Preconditioned JFNK\n  MOOSE Preconditioner:    SMP\n\n\n\n*** Warning ***\n/home/kadirvel.1/MOOSE_projects/bull/problems/NiAl_ppt/NiAl_2D_ppt_el/kks_templa                                               te_moose/kks_example_base_tensor.i:25: unused parameter 'GlobalParams/end_point'\n/home/kadirvel.1/MOOSE_projects/bull/problems/NiAl_ppt/NiAl_2D_ppt_el/kks_templa                                               te_moose/kks_example_base_tensor.i:26: unused parameter 'GlobalParams/start_poin                                               t'\n/home/kadirvel.1/MOOSE_projects/bull/problems/NiAl_ppt/NiAl_2D_ppt_el/kks_templa                                               te_moose/kks_example_base_tensor.i:29: unused parameter 'GlobalParams/use_legacy                                               _material_output'\n\n\nTime Step 0, time = 0\n\nTime Step 1, time = 0.1, dt = 0.1\n 0 Nonlinear |R| = 1.328937e+01\n      0 Linear |R| = 1.328937e+01\n      1 Linear |R| = 4.848403e+00\n      2 Linear |R| = 3.157574e+00\n      3 Linear |R| = 2.285403e+00\n      4 Linear |R| = 1.727349e+00\n      5 Linear |R| = 1.266865e+00\n      6 Linear |R| = 9.427700e-01\n      7 Linear |R| = 7.375685e-01\n      8 Linear |R| = 5.584492e-01\n      9 Linear |R| = 4.275105e-01\n     10 Linear |R| = 2.870150e-01\n     11 Linear |R| = 1.963131e-01\n     12 Linear |R| = 1.391827e-01\n     13 Linear |R| = 9.024055e-02\n     14 Linear |R| = 6.006009e-02\n     15 Linear |R| = 4.364791e-02\n     16 Linear |R| = 3.445497e-02\n     17 Linear |R| = 2.784422e-02\n     18 Linear |R| = 2.254395e-02\n     19 Linear |R| = 1.820692e-02\n     20 Linear |R| = 1.506764e-02\n     21 Linear |R| = 1.269192e-02\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 1 Nonlinear |R| = 1.258796e-01\n      0 Linear |R| = 1.258796e-01\n      1 Linear |R| = 2.630945e-02\n      2 Linear |R| = 1.158866e-02\n      3 Linear |R| = 1.105947e-02\n      4 Linear |R| = 9.852439e-03\n      5 Linear |R| = 8.772977e-03\n      6 Linear |R| = 7.189621e-03\n      7 Linear |R| = 5.726267e-03\n      8 Linear |R| = 4.541548e-03\n      9 Linear |R| = 3.332832e-03\n     10 Linear |R| = 2.414585e-03\n     11 Linear |R| = 1.907398e-03\n     12 Linear |R| = 1.622184e-03\n     13 Linear |R| = 1.380938e-03\n     14 Linear |R| = 1.089349e-03\n     15 Linear |R| = 6.931278e-04\n     16 Linear |R| = 5.325188e-04\n     17 Linear |R| = 4.229696e-04\n     18 Linear |R| = 3.227408e-04\n     19 Linear |R| = 2.352508e-04\n     20 Linear |R| = 1.631233e-04\n     21 Linear |R| = 1.181683e-04\n  Linear solve converged due to CONVERGED_RTOL iterations 21\n 2 Nonlinear |R| = 2.017938e-04\n      0 Linear |R| = 2.017938e-04\n      1 Linear |R| = 1.046881e-04\n      2 Linear |R| = 9.420003e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 2\n 3 Nonlinear |R| = 9.420098e-05\n      0 Linear |R| = 9.420098e-05\n  Linear solve converged due to CONVERGED_ATOL iterations 0\nNonlinear solve converged due to CONVERGED_SNORM_RELATIVE iterations 3\n Solve Converged!\n\nOutlier Variable Residual Norms:\n  disp_x: 6.899429e-05\n  disp_y: 5.986839e-05",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-299299",
                          "updatedAt": "2022-10-14T12:38:06Z",
                          "publishedAt": "2021-01-21T15:04:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Seems you ran different codes on different machines. That is,  the converged simulation and the diverged simulation use different hashes:\nNot converged,\nMOOSE Version:           git commit 83d3ca6f6f on 2020-10-28\nLibMesh Version:         f33331f6ebb0f31dff7526106268ca0c4300049e\n\nConverged case,\nMOOSE Version:           unknown\nLibMesh Version:         d9738bf11cd8180e0f3e7889a10fbde13409a254\n\nCould you please run the same code on two platforms? And let us know how is going.",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-300696",
                          "updatedAt": "2022-10-27T16:02:26Z",
                          "publishedAt": "2021-01-21T20:48:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Hi Wen,\nThe MOOSE Version:           git commit 83d3ca6f6f on 2020-10-28 is installed on my HPC by directly compiling and installing PETSc and Libmesh. This version has convergence issue.\nThe MOOSE Version:           unknown is installed on my linux workstation using Conda.\nOn my HPC,  I don't have conda installation. So, I won't be able do a comparison like you prefer. Is there any other input script which you would like me to run on my HPC ?",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-301358",
                          "updatedAt": "2022-10-27T16:02:26Z",
                          "publishedAt": "2021-01-22T05:35:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Yes, you should be  on the same hash when you are doing comparisons.\nHere are HPC install  instructions  https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-302752",
                          "updatedAt": "2022-10-27T16:02:30Z",
                          "publishedAt": "2021-01-22T16:12:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "On my HPC, I don't have conda installation.\n\nCheckout the same hash should work",
                          "url": "https://github.com/idaholab/moose/discussions/16712#discussioncomment-302754",
                          "updatedAt": "2022-10-27T16:02:30Z",
                          "publishedAt": "2021-01-22T16:13:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adaptive mesh and InversePowerMethod compatibility",
          "author": {
            "login": "smpark7"
          },
          "bodyText": "Hi,\nCan we run a InversePowerMethod solve with adaptive meshing? The documentation implies that adaptive meshing is only compatible with Transient and Steady solves. I also tried to apply adaptive meshing to my problem both under Executioner and under a separate Adaptivity action but it did not work. MOOSE didn't indicate that the parameters in Adaptivity were unused but no adaptive meshing occurred and the final result is exactly the same as my previous results.\nThanks,\nSunMyung",
          "url": "https://github.com/idaholab/moose/discussions/16708",
          "updatedAt": "2022-09-16T20:31:56Z",
          "publishedAt": "2021-01-15T08:39:46Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "SunMyung,\nThe InversePowerMethod executioner for eigenvalue problems is soon to be deprecated.\nPlease take a look at the Eigenvalue executioner. You should have no issue with adaptivity with:\n[Executioner]\n  type = Eigenvalue\n  solve_type = NONLINEAR_POWER\n[]\n\nUnfortunately, we're still missing some documentation for this new executioner (but @fdkong should have it up in the future!). Take a look at the tests that use this executioner at the bottom of the page: https://mooseframework.inl.gov/source/executioners/Eigenvalue.html#!",
                  "url": "https://github.com/idaholab/moose/discussions/16708#discussioncomment-291218",
                  "updatedAt": "2022-09-16T20:34:39Z",
                  "publishedAt": "2021-01-18T16:12:36Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "From my understanding, mesh adaptivity does not work with new eigenvalue solvers either. The reason is that nobody asked for this feature  before. You are the first one who asked for this. But it would be straight forward to add this support.\nYou are welcome to come up with a PR, and I am happy to review and merge the PR. If you do not have resources to do so, you could go ahead to create a ticket. I will add this capability  once I can. Unfortunately, I can not guarantee when I am able to handle the ticket, but I will try the best I can",
                          "url": "https://github.com/idaholab/moose/discussions/16708#discussioncomment-291244",
                          "updatedAt": "2022-09-16T20:34:40Z",
                          "publishedAt": "2021-01-18T16:22:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "smpark7"
                          },
                          "bodyText": "Thank you both for your replies. I'll have a look at the Eigenvalue executioner and see if I can tackle this.",
                          "url": "https://github.com/idaholab/moose/discussions/16708#discussioncomment-302577",
                          "updatedAt": "2022-09-16T20:35:21Z",
                          "publishedAt": "2021-01-22T15:11:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[Boundary condition][Reaction rate]",
          "author": {
            "login": "coskrrb2002"
          },
          "bodyText": "Good afternoon guys,\nI am interested in corrosion science, hence I am making an electrochemical module that includes chemical kinetics.\nRecently, I am trying to apply some electrochemical boundary conditions.\nSo, in order to do that, I guess I need some reaction rate boundary conditions.\nBut, I am not that familiar to deal with boundary conditions.\nIf you can suggest to me some proper boundary conditions files (.C) in moose, it would be greatly helpful for me!\nHave a good day!\nKind regards,\nNakkyu",
          "url": "https://github.com/idaholab/moose/discussions/16786",
          "updatedAt": "2022-08-24T02:04:39Z",
          "publishedAt": "2021-01-22T05:00:46Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "coskrrb2002"
                  },
                  "bodyText": "I am thinking about this.\nI guess I can start with Neumann boundary conditions!",
                  "url": "https://github.com/idaholab/moose/discussions/16786#discussioncomment-301387",
                  "updatedAt": "2022-08-24T02:04:41Z",
                  "publishedAt": "2021-01-22T05:58:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Multiple materials in same geometry (from GMSH)",
          "author": {
            "login": "ndaman"
          },
          "bodyText": "I am trying to assign to different material properties to named blocks (using the Tensor Mechanics module). I have no trouble defining the two different blocks in GMSH, but if I do not add \"coherence\" in GMSH, then the two blocks are not joined together in MOOSE. When I do add \"coherence\" then MOOSE gives this error: \"I don't believe that we can specify multiple subdomain or boundary ids for a given geometric entity\"\nWhat is the correct way to give sub-sections of the same mesh different material properties?",
          "url": "https://github.com/idaholab/moose/discussions/16247",
          "updatedAt": "2022-06-18T18:50:23Z",
          "publishedAt": "2020-11-19T03:25:01Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ndaman"
                  },
                  "bodyText": "I thought I would try going about this another way, by removing the \"coherence\" (union) in GMSH the two geometric entities are separate, I thought that I could then apply an EqualValueEmbeddedConstraint on the displacements, but the input processor now states that it cannot add a constraint for that variable, since it is not a nonlinear variable.\nWhat is the correct way to perfectly bond multiple materials together in MOOSE (as in a composite, for example)?",
                  "url": "https://github.com/idaholab/moose/discussions/16247#discussioncomment-134174",
                  "updatedAt": "2022-06-18T18:50:23Z",
                  "publishedAt": "2020-11-19T19:43:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ndaman"
                  },
                  "bodyText": "Well I guess I was just using the wrong constraint, I think I have what I was looking for using an EqualValueBoundaryConstraint, but I'm curious how this is different from a TiedValueConstraint in this case.",
                  "url": "https://github.com/idaholab/moose/discussions/16247#discussioncomment-134214",
                  "updatedAt": "2022-06-18T18:50:34Z",
                  "publishedAt": "2020-11-19T20:03:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "coskrrb2002"
                  },
                  "bodyText": "I guess you should use Fragments to combine and eliminate any overlapped between two bodies.\nI had similar troubles before.\nIf you use BooleanFragments, then there will be no issues!",
                  "url": "https://github.com/idaholab/moose/discussions/16247#discussioncomment-301314",
                  "updatedAt": "2022-06-18T18:50:35Z",
                  "publishedAt": "2021-01-22T04:53:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Peacock -->vtk=7.1.1.opengl - PackagesNotFoundError",
          "author": {
            "login": "abarun22"
          },
          "bodyText": "Dear all,\nI recently switched to a new HPC environment and was trying to configure peacock there. I went though whole process of installing miniconda (https://mooseframework.inl.gov/getting_started/installation/manual_miniconda.html) and other required packages, before invoking peacock and the following rendering issue.\nAs a cure, i tried to installl vtk version 7.1.1 in a new conda environment, but returned with an error saying that the concerned package is not available in idaholab channel. Any advise on fixing this issue would be highly appreciated.\nKind regards,\nArun\n2021-01-20 18:22:52.934 (   3.566s) [        8A2DC380]vtkOpenGLRenderWindow.c:582    ERR| vtkXOpenGLRenderWindow (0x5628f55060f0): Unable to find a valid OpenGL 3.2 or later implementation. Please update your video card driver to the latest version. If you are using Mesa please make sure you have version 11.2 or later and make sure your driver in Mesa supports OpenGL 3.2 such as llvmpipe or openswr. If you are on windows and using Microsoft remote desktop note that it only supports OpenGL 3.2 with nvidia quadro cards. You can use other remoting software such as nomachine to avoid this issue.\n2021-01-20 18:22:52.936 (   3.568s) [        8A2DC380]     vtkOpenGLState.cxx:1380  WARN| Hardware does not support the number of textures defined.\n2021-01-20 18:22:52.937 (   3.569s) [        8A2DC380]     vtkOpenGLState.cxx:1380  WARN| Hardware does not support the number of textures defined.\nERROR: In /vtk/src/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx, line 582\nvtkXOpenGLRenderWindow (0x5628f55060f0): Unable to find a valid OpenGL 3.2 or later implementation. Please update your video card driver to the latest version. If you are using Mesa please make sure you have version 11.2 or later and make sure your driver in Mesa supports OpenGL 3.2 such as llvmpipe or openswr. If you are on windows and using Microsoft remote desktop note that it only supports OpenGL 3.2 with nvidia quadro cards. You can use other remoting software such as nomachine to avoid this issue.\nCouldn't show a VTK window.\nThis is most likely caused by outdated Mesa drivers.\nYou can try upgrading to Mesa version 10.6.5 or later or update your video card driver.\nIf you are running in a virtual machine, you can try turning OFF 3D acceleration.\nYou can also try to use an alternative VTK package in a conda environment.\nYou can create a new conda environment by doing (with the miniconda module loaded):\n    conda create --clone root -n <env_name>\n    source activate <env_name>\n    conda install -c idaholab vtk=7.1.1.opengl\n\nThen you can try running peacock again.\nNote that this VTK package may have various rendering problems and some peacock tests will fail.\n(Arun_conda_env) [ir-bala2@login-e-13 peacock]$ source activate Arun_conda_env\n(Arun_conda_env) [ir-bala2@login-e-13 peacock]$ conda install -c idaholab vtk=7.1.1.opengl\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\nCollecting package metadata (repodata.json): done\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\nPackagesNotFoundError: The following packages are not available from current channels:\n\nvtk=7.1.1.opengl\n\nCurrent channels:\n\nhttps://conda.anaconda.org/idaholab/linux-64\nhttps://conda.anaconda.org/idaholab/noarch\nhttps://repo.anaconda.com/pkgs/main/linux-64\nhttps://repo.anaconda.com/pkgs/main/noarch\nhttps://repo.anaconda.com/pkgs/r/linux-64\nhttps://repo.anaconda.com/pkgs/r/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\nhttps://anaconda.org\n\nand use the search bar at the top of the page.",
          "url": "https://github.com/idaholab/moose/discussions/16761",
          "updatedAt": "2022-06-16T15:35:15Z",
          "publishedAt": "2021-01-20T18:41:48Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "VTK8.2 from conda-forge should work. @milljm Correct me if I am wrong, but we do not have the VTK7 in the idaholab channel any more.\n@abarun22 Did you see VTK7.1 in the directions somewhere?",
                  "url": "https://github.com/idaholab/moose/discussions/16761#discussioncomment-297143",
                  "updatedAt": "2022-07-04T09:41:34Z",
                  "publishedAt": "2021-01-20T19:59:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "Hi Andrew, I did find other packages for VTK through pip installations in conda environment. But none of them are opengl compatible, which would bring back the same rendering problem. Versions 7.1.1 in conda-forge clashes with the native python version (3.7.4) and are not installing. The subsequent >8.0.0 versions contains many other installations which overwrite my python and pyqt5 installations and pose much more difficulties. I remember in my previous HPC i used the one (7.1.1) from idaholab which install VTK ok and enabled peacock to open successfully. It would be helpful if you could point me to vtk packages that are render compatible. The following are available packages in various channels in my conda environment.\n(Arun_conda_env) [ir-bala2@login-e-14 peacock]$ conda search -c conda-forge | grep -i 'vtk'\npyevtk                         1.1.1    pyh24bf2e0_0  conda-forge\npyevtk                         1.1.2    pyh24bf2e0_0  conda-forge\npyvtk                         0.5.18          py27_0  conda-forge\npyvtk                         0.5.18          py35_0  conda-forge\npyvtk                         0.5.18          py36_0  conda-forge\nvtk                            7.0.0          py27_0  conda-forge\nvtk                            7.0.0          py27_1  conda-forge\nvtk                            7.0.0          py27_2  conda-forge\nvtk                            7.0.0          py35_0  conda-forge\nvtk                            7.0.0          py35_1  conda-forge\nvtk                            7.0.0          py35_2  conda-forge\nvtk                            7.1.0          py27_0  conda-forge\nvtk                            7.1.0          py27_1  conda-forge\nvtk                            7.1.0          py27_2  conda-forge\nvtk                            7.1.0          py27_3  conda-forge\nvtk                            7.1.0          py27_4  conda-forge\nvtk                            7.1.0          py27_5  conda-forge\nvtk                            7.1.0          py35_0  conda-forge\nvtk                            7.1.0          py35_1  conda-forge\nvtk                            7.1.0          py35_2  conda-forge\nvtk                            7.1.0          py35_3  conda-forge\nvtk                            7.1.0          py35_4  conda-forge\nvtk                            7.1.0          py36_3  conda-forge\nvtk                            7.1.0          py36_4  conda-forge\nvtk                            7.1.1          py27_0  conda-forge\nvtk                            7.1.1          py27_1  conda-forge\nvtk                            7.1.1        py27_201  conda-forge\nvtk                            7.1.1        py27_202  conda-forge\nvtk                            7.1.1  py27_mesalib_1  conda-forge\nvtk                            7.1.1  py27_mesalib_2  conda-forge\nvtk                            7.1.1          py35_0  conda-forge\nvtk                            7.1.1          py35_1  conda-forge\nvtk                            7.1.1        py35_201  conda-forge\nvtk                            7.1.1        py35_202  conda-forge\nvtk                            7.1.1  py35_mesalib_1  conda-forge\nvtk                            7.1.1  py35_mesalib_2  conda-forge\nvtk                            7.1.1          py36_0  conda-forge\nvtk                            7.1.1          py36_1  conda-forge\nvtk                            7.1.1        py36_201  conda-forge\nvtk                            7.1.1        py36_202  conda-forge\nvtk                            7.1.1  py36_mesalib_1  conda-forge\nvtk                            7.1.1  py36_mesalib_2  conda-forge\nvtk                            8.0.1        py27_200  conda-forge\nvtk                            8.0.1  py27_mesalib_0  conda-forge\nvtk                            8.0.1        py35_200  conda-forge\nvtk                            8.0.1  py35_mesalib_0  conda-forge\nvtk                            8.0.1        py36_200  conda-forge\nvtk                            8.0.1  py36_mesalib_0  conda-forge\nvtk                            8.1.0        py27_200  conda-forge\nvtk                            8.1.0        py27_201  conda-forge\nvtk                            8.1.0        py27_202  conda-forge\nvtk                            8.1.0  py27_mesalib_0  conda-forge\nvtk                            8.1.0  py27_mesalib_1  conda-forge\nvtk                            8.1.0  py27_mesalib_2  conda-forge\nvtk                            8.1.0 py27_mesalibh9c317cf_4  conda-forge\nvtk                            8.1.0 py27_mesalibh9c317cf_5  conda-forge\nvtk                            8.1.0 py27_mesalibhc26a1c2_3  conda-forge\nvtk                            8.1.0 py27_mesalibhd4c0a90_2  conda-forge\nvtk                            8.1.0 py27h3f2a929_203  conda-forge\nvtk                            8.1.0 py27h9686630_201  pkgs/main\nvtk                            8.1.0 py27h969b564_201  pkgs/main\nvtk                            8.1.0 py27h99a48a5_204  conda-forge\nvtk                            8.1.0 py27h99a48a5_205  conda-forge\nvtk                            8.1.0 py27he461554_202  conda-forge\nvtk                            8.1.0        py35_200  conda-forge\nvtk                            8.1.0        py35_201  conda-forge\nvtk                            8.1.0        py35_202  conda-forge\nvtk                            8.1.0  py35_mesalib_0  conda-forge\nvtk                            8.1.0  py35_mesalib_1  conda-forge\nvtk                            8.1.0  py35_mesalib_2  conda-forge\nvtk                            8.1.0 py35_mesalibh9c317cf_4  conda-forge\nvtk                            8.1.0 py35_mesalibh9c317cf_5  conda-forge\nvtk                            8.1.0 py35_mesalibhc26a1c2_3  conda-forge\nvtk                            8.1.0 py35_mesalibhd4c0a90_2  conda-forge\nvtk                            8.1.0 py35h3f2a929_203  conda-forge\nvtk                            8.1.0 py35h9686630_201  pkgs/main\nvtk                            8.1.0 py35h969b564_201  pkgs/main\nvtk                            8.1.0 py35h99a48a5_204  conda-forge\nvtk                            8.1.0 py35h99a48a5_205  conda-forge\nvtk                            8.1.0 py35he461554_202  conda-forge\nvtk                            8.1.0        py36_200  conda-forge\nvtk                            8.1.0        py36_201  conda-forge\nvtk                            8.1.0        py36_202  conda-forge\nvtk                            8.1.0  py36_mesalib_0  conda-forge\nvtk                            8.1.0  py36_mesalib_1  conda-forge\nvtk                            8.1.0  py36_mesalib_2  conda-forge\nvtk                            8.1.0 py36_mesalibh9c317cf_4  conda-forge\nvtk                            8.1.0 py36_mesalibh9c317cf_5  conda-forge\nvtk                            8.1.0 py36_mesalibhc26a1c2_3  conda-forge\nvtk                            8.1.0 py36_mesalibhd4c0a90_2  conda-forge\nvtk                            8.1.0 py36h3f2a929_203  conda-forge\nvtk                            8.1.0 py36h9686630_201  pkgs/main\nvtk                            8.1.0 py36h969b564_201  pkgs/main\nvtk                            8.1.0 py36h99a48a5_204  conda-forge\nvtk                            8.1.0 py36h99a48a5_205  conda-forge\nvtk                            8.1.0 py36he461554_202  conda-forge\nvtk                            8.1.1 py27_mesalibh9c317cf_0  conda-forge\nvtk                            8.1.1 py27_mesalibhed38e9a_4  conda-forge\nvtk                            8.1.1 py27_mesalibhf80e44b_1  conda-forge\nvtk                            8.1.1 py27_mesalibhf884bf3_2  conda-forge\nvtk                            8.1.1 py27_mesalibhf884bf3_3  conda-forge\nvtk                            8.1.1 py27h4f1983a_204  pkgs/main\nvtk                            8.1.1 py27h8649a91_204  conda-forge\nvtk                            8.1.1 py27h881b6ac_204  pkgs/main\nvtk                            8.1.1 py27h99a48a5_200  conda-forge\nvtk                            8.1.1 py27hdceb404_201  conda-forge\nvtk                            8.1.1 py27hdfe3907_202  conda-forge\nvtk                            8.1.1 py27hdfe3907_203  conda-forge\nvtk                            8.1.1 py35_mesalibh9c317cf_0  conda-forge\nvtk                            8.1.1 py35_mesalibhed38e9a_4  conda-forge\nvtk                            8.1.1 py35_mesalibhf80e44b_1  conda-forge\nvtk                            8.1.1 py35_mesalibhf884bf3_2  conda-forge\nvtk                            8.1.1 py35_mesalibhf884bf3_3  conda-forge\nvtk                            8.1.1 py35h8649a91_204  conda-forge\nvtk                            8.1.1 py35h99a48a5_200  conda-forge\nvtk                            8.1.1 py35hdceb404_201  conda-forge\nvtk                            8.1.1 py35hdfe3907_202  conda-forge\nvtk                            8.1.1 py35hdfe3907_203  conda-forge\nvtk                            8.1.1 py36_mesalibh9c317cf_0  conda-forge\nvtk                            8.1.1 py36_mesalibhed38e9a_4  conda-forge\nvtk                            8.1.1 py36_mesalibhf80e44b_1  conda-forge\nvtk                            8.1.1 py36_mesalibhf884bf3_2  conda-forge\nvtk                            8.1.1 py36_mesalibhf884bf3_3  conda-forge\nvtk                            8.1.1 py36h4f1983a_204  pkgs/main\nvtk                            8.1.1 py36h8649a91_204  conda-forge\nvtk                            8.1.1 py36h881b6ac_204  pkgs/main\nvtk                            8.1.1 py36h99a48a5_200  conda-forge\nvtk                            8.1.1 py36hdceb404_201  conda-forge\nvtk                            8.1.1 py36hdfe3907_202  conda-forge\nvtk                            8.1.1 py36hdfe3907_203  conda-forge\nvtk                            8.1.2 py27h8cc7ba1_1200  conda-forge\nvtk                            8.1.2 py36h8cc7ba1_1200  conda-forge\nvtk                            8.1.2 py37h8cc7ba1_1200  conda-forge\nvtk                            8.2.0 py27h01fbe97_209  conda-forge\nvtk                            8.2.0 py27h06adf98_210  conda-forge\nvtk                            8.2.0 py27h3196ccb_208  conda-forge\nvtk                            8.2.0 py27h4804ed4_200  conda-forge\nvtk                            8.2.0 py27h4a8345c_204  conda-forge\nvtk                            8.2.0 py27h9286700_207  conda-forge\nvtk                            8.2.0 py27ha8e561a_201  conda-forge\nvtk                            8.2.0 py27ha8e561a_202  conda-forge\nvtk                            8.2.0 py27haa4764d_200  pkgs/main\nvtk                            8.2.0 py27hd1c59f8_205  conda-forge\nvtk                            8.2.0 py27hd1c59f8_206  conda-forge\nvtk                            8.2.0 py27hfdee58b_203  conda-forge\nvtk                            8.2.0 py36h00504ea_210  conda-forge\nvtk                            8.2.0 py36h00504ea_211  conda-forge\nvtk                            8.2.0 py36h06fa586_215  conda-forge\nvtk                            8.2.0 py36h06fa586_216  conda-forge\nvtk                            8.2.0 py36h06fa586_217  conda-forge\nvtk                            8.2.0 py36h06fa586_218  conda-forge\nvtk                            8.2.0 py36h3196ccb_208  conda-forge\nvtk                            8.2.0 py36h4804ed4_200  conda-forge\nvtk                            8.2.0 py36h4a8345c_204  conda-forge\nvtk                            8.2.0 py36h5457cd2_212  conda-forge\nvtk                            8.2.0 py36h5457cd2_213  conda-forge\nvtk                            8.2.0 py36h863d835_214  conda-forge\nvtk                            8.2.0 py36h9286700_207  conda-forge\nvtk                            8.2.0 py36ha8e561a_201  conda-forge\nvtk                            8.2.0 py36ha8e561a_202  conda-forge\nvtk                            8.2.0 py36haa4764d_200  pkgs/main\nvtk                            8.2.0 py36hd1c59f8_205  conda-forge\nvtk                            8.2.0 py36hd1c59f8_206  conda-forge\nvtk                            8.2.0 py36hfd09df2_209  conda-forge\nvtk                            8.2.0 py36hfdee58b_203  conda-forge\nvtk                            8.2.0 py37h2bd422c_215  conda-forge\nvtk                            8.2.0 py37h2bd422c_216  conda-forge\nvtk                            8.2.0 py37h2bd422c_217  conda-forge\nvtk                            8.2.0 py37h2bd422c_218  conda-forge\nvtk                            8.2.0 py37h3196ccb_208  conda-forge\nvtk                            8.2.0 py37h351a6da_214  conda-forge\nvtk                            8.2.0 py37h4804ed4_200  conda-forge\nvtk                            8.2.0 py37h4a8345c_204  conda-forge\nvtk                            8.2.0 py37h55fc74f_212  conda-forge\nvtk                            8.2.0 py37h55fc74f_213  conda-forge\nvtk                            8.2.0 py37h9286700_207  conda-forge\nvtk                            8.2.0 py37ha8e561a_201  conda-forge\nvtk                            8.2.0 py37ha8e561a_202  conda-forge\nvtk                            8.2.0 py37haa4764d_200  pkgs/main\nvtk                            8.2.0 py37hbd17b0a_210  conda-forge\nvtk                            8.2.0 py37hbd17b0a_211  conda-forge\nvtk                            8.2.0 py37hc9f1d74_209  conda-forge\nvtk                            8.2.0 py37hd1c59f8_205  conda-forge\nvtk                            8.2.0 py37hd1c59f8_206  conda-forge\nvtk                            8.2.0 py37hfdee58b_203  conda-forge\nvtk                            8.2.0 py38h1e82295_210  conda-forge\nvtk                            8.2.0 py38h1e82295_211  conda-forge\nvtk                            8.2.0 py38h3196ccb_208  conda-forge\nvtk                            8.2.0 py38h4a8345c_204  conda-forge\nvtk                            8.2.0 py38h667666d_212  conda-forge\nvtk                            8.2.0 py38h667666d_213  conda-forge\nvtk                            8.2.0 py38h9286700_207  conda-forge\nvtk                            8.2.0 py38hb756a82_209  conda-forge\nvtk                            8.2.0 py38hd1c59f8_205  conda-forge\nvtk                            8.2.0 py38hd1c59f8_206  conda-forge\nvtk                            8.2.0 py38hd6830a8_214  conda-forge\nvtk                            8.2.0 py38hf2e56f5_215  conda-forge\nvtk                            8.2.0 py38hf2e56f5_216  conda-forge\nvtk                            8.2.0 py38hf2e56f5_217  conda-forge\nvtk                            8.2.0 py38hf2e56f5_218  conda-forge\nvtk                            9.0.0 no_osmesa_py36h1d9199b_100  conda-forge\nvtk                            9.0.0 no_osmesa_py36h1d9199b_101  conda-forge\nvtk                            9.0.0 no_osmesa_py36h77cafce_102  conda-forge\nvtk                            9.0.0 no_osmesa_py37h51040a7_100  conda-forge\nvtk                            9.0.0 no_osmesa_py37h51040a7_101  conda-forge\nvtk                            9.0.0 no_osmesa_py37h53e2506_102  conda-forge\nvtk                            9.0.0 no_osmesa_py38hc86227b_100  conda-forge\nvtk                            9.0.0 no_osmesa_py38hc86227b_101  conda-forge\nvtk                            9.0.1 no_osmesa_py36h0d9dc2d_102  conda-forge\nvtk                            9.0.1 no_osmesa_py36h4e529f2_101  conda-forge\nvtk                            9.0.1 no_osmesa_py36h4e529f2_102  conda-forge\nvtk                            9.0.1 no_osmesa_py36h77cafce_100  conda-forge\nvtk                            9.0.1 no_osmesa_py37h53e2506_100  conda-forge\nvtk                            9.0.1 no_osmesa_py37h8af0cc8_101  conda-forge\nvtk                            9.0.1 no_osmesa_py37h8af0cc8_102  conda-forge\nvtk                            9.0.1 no_osmesa_py37haba06c1_102  conda-forge\nvtk                            9.0.1 no_osmesa_py38h31de780_101  conda-forge\nvtk                            9.0.1 no_osmesa_py38h31de780_102  conda-forge\nvtk                            9.0.1 no_osmesa_py38h87d9d97_102  conda-forge\nvtk                            9.0.1 no_osmesa_py38he0bb71e_100  conda-forge\nvtk                            9.0.1 no_osmesa_py39h9ad716d_102  conda-forge\nvtk                            9.0.1 no_osmesa_py39hd84e346_101  conda-forge\nvtk                            9.0.1 no_osmesa_py39hd84e346_102  conda-forge\n(Arun_conda_env) [ir-bala2@login-e-14 peacock]$ conda search vtk\nLoading channels: done\nName                       Version           Build  Channel\nvtk                            8.1.0 py27h9686630_201  pkgs/main\nvtk                            8.1.0 py27h969b564_201  pkgs/main\nvtk                            8.1.0 py35h9686630_201  pkgs/main\nvtk                            8.1.0 py35h969b564_201  pkgs/main\nvtk                            8.1.0 py36h9686630_201  pkgs/main\nvtk                            8.1.0 py36h969b564_201  pkgs/main\nvtk                            8.1.1 py27h4f1983a_204  pkgs/main\nvtk                            8.1.1 py27h881b6ac_204  pkgs/main\nvtk                            8.1.1 py36h4f1983a_204  pkgs/main\nvtk                            8.1.1 py36h881b6ac_204  pkgs/main\nvtk                            8.2.0 py27haa4764d_200  pkgs/main\nvtk                            8.2.0 py36haa4764d_200  pkgs/main\nvtk                            8.2.0 py37haa4764d_200  pkgs/main\nKind regards,\nArun",
                          "url": "https://github.com/idaholab/moose/discussions/16761#discussioncomment-298777",
                          "updatedAt": "2022-07-04T09:41:38Z",
                          "publishedAt": "2021-01-21T12:07:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "You might try installing mesalib with VTK:\nconda create -n vtk-mesa mesalib vtk",
                          "url": "https://github.com/idaholab/moose/discussions/16761#discussioncomment-299278",
                          "updatedAt": "2022-07-08T14:35:19Z",
                          "publishedAt": "2021-01-21T14:58:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "@aeslaughter Correct. We use conda-forge's VTK. The only VTK we distribute ourselves is for use by libMesh's VTK support (moose-libmesh-vtk).\n@abarun22 Conda does not distribute OpenGL, or mesa (not the mesa we're all thinking. Mesa3d is the product of that error). Conda's VTK simply uses whats available on the machine. If the version available on the machine is too old, you may see a message like that. You are correct in trying to get an older version.\nUnfortunately after digging a little, I'm afraid VTK 7.1.1 was only ever built with PyQt 4 (while Peacock requires 5). The errors you are receiving I believe are due to that machine needing a newer implementation of OpenGL and/or Mesa just as the VTK error suggests...",
                          "url": "https://github.com/idaholab/moose/discussions/16761#discussioncomment-299431",
                          "updatedAt": "2022-07-08T14:35:18Z",
                          "publishedAt": "2021-01-21T15:42:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Maximizing Performance on HPC Falcon",
          "author": {
            "login": "crswong888"
          },
          "bodyText": "Hello, I am trying to understand how mpiexec -n <num_procs> and --n-threads=<num_threads> are translated when submitting jobs on INL HPC through the PBS system.\nOne thing is clear to me: num_procs is set by -l select=<num_nodes>:ncpus=<num_cores>:mpiprocs=<num_procs>.\nHowever, I'm not sure how shared memory works on Falcon. Particularly, what the OMP_NUM_THREADS environment variable does. If I don't set it, than the default is num_cores, which I think implies 1 thread/core, which is generally what I want. However, the MOOSE job script example on the HPC website (https://hpcweb.hpc.inl.gov/software/open_speedshop/) sets OMP_NUM_THREADS=1 even though ncpus=24:mpiprocs=8, so this confuses me.\nOne other thing I'm concerned about is the MV2_ENABLE_AFFINITY environment variable. If this variable is enabled (default), I get a warning about slow performance when OMP_NUM_THREADS is non-zero (meanwhile zero isn't even a valid input). I read online that you generally want to disable affinity when hyper-threading so that you don't accidentally send too many threads to any one proc. But I also read that enabling affinity is great for single-threaded processes, which again, is generally what I want.\nI guess my question is the following: How should I set the OMP_NUM_THREADS and MV2_ENABLE_AFFINITY environment variables if I don't want to use shared memory, i.e., if I want --n-threads=1, when running a MOOSE app on Falcon cluster? My guess is OMP_NUM_THREADS=<num_procs> and MV2_ENABLE_AFFINITY=0",
          "url": "https://github.com/idaholab/moose/discussions/16768",
          "updatedAt": "2022-06-14T16:50:12Z",
          "publishedAt": "2021-01-21T01:44:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "For full MPI and no shared memory parallelism (1 thread), I would do OMP_NUM_THREADS=1 (does not matter though, --n-threads should have the final say on the number of threads, and 1 is the default anyway) and MV2_ENABLE_AFFINITY=1, which is recommended for single threaded applications.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16768#discussioncomment-297870",
                  "updatedAt": "2022-06-14T16:51:09Z",
                  "publishedAt": "2021-01-21T01:54:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "crswong888"
                          },
                          "bodyText": "Okay, I will do this then. Thank you. So if MV2_ENABLE_AFFINITY=1, then I always get a warning. But you're saying it's fine, so it should be safe to turn the warning off, yes?\nAlso, OMP_NUM_THREADS=1 is not the default. The default is the number of cores that are available, which is however many you request.",
                          "url": "https://github.com/idaholab/moose/discussions/16768#discussioncomment-297878",
                          "updatedAt": "2022-06-14T16:51:10Z",
                          "publishedAt": "2021-01-21T01:57:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "But MOOSE does not use OMP_NUM_THREADS to determine its number of threads right?\nThe warning probably comes from Falcon, which detects the two environment variables that are somewhat incompatible.\nOr does it come from MOOSE?",
                          "url": "https://github.com/idaholab/moose/discussions/16768#discussioncomment-297883",
                          "updatedAt": "2022-06-14T16:51:11Z",
                          "publishedAt": "2021-01-21T02:01:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "crswong888"
                          },
                          "bodyText": "No it definitely comes from Falcon, but I just want to be sure that everything I'm setting maximizes performance (hard to test since I have to wait in line every time I change something).\nAnd yes, OMP_NUM_THREADS doesn't seem to set --n-threads, as indicated by the terminal printout at the beginning of the solve. But I'm just concerned that it still has an effect on performance. Anyways, I'll just go with your original suggestion. It seems like the right way to go.",
                          "url": "https://github.com/idaholab/moose/discussions/16768#discussioncomment-297892",
                          "updatedAt": "2022-06-14T16:51:29Z",
                          "publishedAt": "2021-01-21T02:07:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "multiphase filed and polycrystalline",
          "author": {
            "login": "Ali-toghraee"
          },
          "bodyText": "Hi all,\n-I have a multiphase  field model (metal, hydride, fluid) which uses Allen-Cahn + Cahn-Hillard + TensorMech. I want to extend that model to a poly crystalline one. I dont have grain growth i.e. my grain boundaries dont move, but my hydride phase will grow. Is there any example that I can use as initial step?\nI have looked at \"ACGrGrPoly\" but it seems it does not accept any F= total-energy\n\nIf I reduce the model to a bi-crystaline (two metal grains + hydride+ fluid) , what is the best approach to model that? 4 order parameters for  two metal grains + hydride+ fluid ?\n\nBest,",
          "url": "https://github.com/idaholab/moose/discussions/16626",
          "updatedAt": "2022-11-02T16:44:35Z",
          "publishedAt": "2021-01-07T05:46:06Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "Ali-toghraee"
                  },
                  "bodyText": "Hi again,\nAny suggestion/help on this topic?\nThanks,",
                  "url": "https://github.com/idaholab/moose/discussions/16626#discussioncomment-283515",
                  "updatedAt": "2022-11-02T16:44:35Z",
                  "publishedAt": "2021-01-15T04:37:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "@karim-E-ahmed Could you provide some suggestions?",
                          "url": "https://github.com/idaholab/moose/discussions/16626#discussioncomment-289114",
                          "updatedAt": "2022-11-02T16:44:51Z",
                          "publishedAt": "2021-01-17T17:32:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "karim-E-ahmed"
                  },
                  "bodyText": "If you have the model, you can directly implement it using Allen-cahn and cahn-hilliard kernels with proving the free energy as a derivative parsed material as function of your 4 or more variables. I also suggest you to look at the grand-potential formulation (see the paper, Grand-potential-based phase-field model for multiple phases, grains, and chemical components) a few examples related to that paper are implemented in moose.",
                  "url": "https://github.com/idaholab/moose/discussions/16626#discussioncomment-289927",
                  "updatedAt": "2022-11-02T16:44:52Z",
                  "publishedAt": "2021-01-18T04:08:27Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Ali-toghraee"
                          },
                          "bodyText": "Thank you for the help Karim. I look into the grand intentional examples.",
                          "url": "https://github.com/idaholab/moose/discussions/16626#discussioncomment-294805",
                          "updatedAt": "2022-11-02T16:44:55Z",
                          "publishedAt": "2021-01-20T00:51:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Enforcing periodic boundary conditions",
          "author": {
            "login": "tairoon1"
          },
          "bodyText": "Hi everyone,\nI would like to enforce that the displacement of two nodes on opposite sides of my mesh to have not the same value, but actually a value that I would like to pass along, i.e. u^2 - u^1 = A, with u^2 and u^1 the values of opposite nodes and A is the value I want to give. Is it possible to use the Constraints System (https://mooseframework.inl.gov/syntax/Constraints/index.html) for that? Or how would I enforce such a constraint?\nI have also seen the Global Strain System, but I am not too sure how to use it...\nThanks for your help.",
          "url": "https://github.com/idaholab/moose/discussions/16419",
          "updatedAt": "2022-06-10T18:47:51Z",
          "publishedAt": "2020-12-08T12:33:22Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "crswong888"
                  },
                  "bodyText": "See the section on \"Function Transform Periodic Boundaries\" on the AddPeriodicBCAction page. Will something like this work for you? I think you could just make u^1 your primary boundary and define the transform to the u^2 secondary boundary like: u^2 = A + u^1.",
                  "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-169430",
                  "updatedAt": "2022-06-10T18:47:52Z",
                  "publishedAt": "2020-12-08T22:00:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "tairoon1"
                          },
                          "bodyText": "Thank you for the suggestion, but I don't seem to be able to make it run with that.",
                          "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-187757",
                          "updatedAt": "2022-06-10T18:47:52Z",
                          "publishedAt": "2020-12-10T18:06:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "crswong888"
                          },
                          "bodyText": "You\u2019re right. It\u2019s not designed to solve your type of problem. Please see my comment below.",
                          "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-190153",
                          "updatedAt": "2022-06-10T18:47:52Z",
                          "publishedAt": "2020-12-11T01:56:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "@SudiptaBiswas",
                  "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-187144",
                  "updatedAt": "2022-06-10T18:47:52Z",
                  "publishedAt": "2020-12-10T16:09:35Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "crswong888"
                  },
                  "bodyText": "@tairoon1 I whipped up a little something for you on my MOOSE app. I basically copy and pasted the code for LinearNodalConstraint and modified it to solve the residual: R = u1 - u2 + A. You can find the source code here:\nEqualValuePlusConstant.h\nEqualValuePlusConstant.C\nTo use EqualValuePlusConstant (lack of a better name), just copy and paste these files into your own MOOSE app and be sure to change registerMooseObject(\"YourAppName\", EqualValuePlusConstant); to reflect \"YourAppName\" in the .C file.\nThe object works pretty well, but proceed at your own risk. I didn't put very much effort into writing the code - just wanted to demonstrate how you, yourself, could begin to solve your problem with MOOSE. I'm not sure what sort of physics you are working with, but I created two fairly simple tests: one that solves a diffusion problem and another that solves a solid mechanics problem.\n\n\nThe diffusion problem: tairoon1_diffusion_constraint.i, models a square domain with a scalar field, u, such that u = 0 on the left and u = 1 on the right by enforcing u_left = 0 and the constraint R = u_left - u_right + 1.\n\n\nThe mechanics problem: tairoon1_mechanical_constraint.i, models a 12\" x 12\" x 12\" steel cube that is fixed at the bottom. A displacement of 0.5\" is applied in the x-direction to the nodes along the top left side of the cube, and one of 0.6\" to the nodes along the top right side, by enforcing u_left = 0.5 and the constraint R = u_left - u_right + 0.1.\n\n\nYou can basically use my code as a template and create a more formal MooseObject for this simple multi-freedom constraint problem. Perhaps you even consider developing it in the Framework and opening a pull request :)",
                  "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-190141",
                  "updatedAt": "2022-06-10T18:48:13Z",
                  "publishedAt": "2020-12-11T01:42:51Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "tairoon1"
                          },
                          "bodyText": "Thanks! This looks pretty good on first sight! I will take a look later today.",
                          "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-191272",
                          "updatedAt": "2022-06-10T18:48:19Z",
                          "publishedAt": "2020-12-11T07:53:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tairoon1"
                          },
                          "bodyText": "Just two questions: 1. Would it also be possible, to make the constant not a constant but a parsed function? Such that I can put Ax or Ay for example to make the displacement vary with coordinates?\n2. I see that the constraint is enforced by a penalty approach. Would there also be any way of using Lagrange Multipliers in MOOSE? Has it been implemented in MOOSE?",
                          "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-191334",
                          "updatedAt": "2022-06-10T18:48:18Z",
                          "publishedAt": "2020-12-11T08:10:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "crswong888"
                          },
                          "bodyText": "@Tairoon changing A to be a function would be fairly simple. You just have to modify that _constant variable I created to be set by a function object that you can sample. Other than that the residual will be very much the same just slightly different syntax. You\u2019ll want to create an input parameter with params.addParam<FunctionName>() and getFunction() and then sample it by pointing to its value(). There are plenty demonstrations of how this works on the repository.\nI used a penalty formulation because that\u2019s what I am most familiar with. I actually don\u2019t really know how Lagrange multipliers work exactly, but I know there are examples of them in MOOSE. If you want to use Lagrange multipliers, you\u2019ll have to figure out what the residual is and then just dig around the source code and look for a good example of Lagrange constraints.",
                          "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-198463",
                          "updatedAt": "2022-06-10T18:48:19Z",
                          "publishedAt": "2020-12-12T02:25:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tairoon1"
                          },
                          "bodyText": "Ok, thanks very much for all your help!",
                          "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-204387",
                          "updatedAt": "2022-08-31T10:41:27Z",
                          "publishedAt": "2020-12-14T10:21:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tairoon1"
                          },
                          "bodyText": "@crswong888 I followed your steps and tried to work it out for my problem. Some problems that I noticed so far are: it only ever seems to converge using PJFNK and not at all using Newton. Also there seems to be some problems whenever there are many constraints.\nCould you please take a look at my code? There are the constraint files .h .C, and a mesh + input file. The example I am trying to compute is a simple shear of a unit cell with a stiff fiber inside. A displacement in x direction is applied on the top surface using constraints [topedge_x, topedge_y], while the right and left edge are constrained to be equal. However, the right and left edges behave overly stiff and the simulation does not look right. When I remove the constraints [rightedge_x, rightedge_y], the simulation result looks fine.\nThank you!",
                          "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-292875",
                          "updatedAt": "2022-08-31T10:41:27Z",
                          "publishedAt": "2021-01-19T10:16:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "SudiptaBiswas"
                  },
                  "bodyText": "If you are after periodic strain, you can check this out, https://mooseframework.inl.gov/moose/syntax/Modules/TensorMechanics/GlobalStrain/\nThere are some examples here, https://github.com/idaholab/moose/tree/next/modules/combined/examples/periodic_strain on how to set this up.",
                  "url": "https://github.com/idaholab/moose/discussions/16419#discussioncomment-198607",
                  "updatedAt": "2022-06-10T18:48:18Z",
                  "publishedAt": "2020-12-12T05:05:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Possible to access MultiApp parameters from a sub-app?",
          "author": {
            "login": "aprilnovak"
          },
          "bodyText": "Hi all,\nFirst, thanks for the responsiveness with all my questions related to wrapped apps recently, I appreciate it!\nPer a previous discussion (#16680), I would like to only send a heat flux from a master app into a nekRS multi app if on the first time step of that subcycled nekRS app. We need to do a global communication and CPU->GPU copy on the nekRS end, so skipping that when interpolate_transfers = false will be helpful. Basically, what I'd like to do in syncSolutions is something like this:\nneks_multi_app = somehowGetMultiappInMasterFile();\n\nif (!neks_multi_app->firstStep() && !nekrs_multi_app->interpolateTransfers())\n  return;\n\nwhere I would add those functions to TransientMultiApp, such as:\nbool TransientMultiApp::firstStep() { return _first; }\n\nMy master app input file looks like\n[MultiApps]\n  [nek]\n    type = TransientMultiApp\n    app_type = NekApp\n    input_files = 'nek.i'\n    interpolate_transfers = false # how to get this in NekApp?\n  []\n[]\n\nIs it possible to access the TransientMultiApp from within NekProblem? Nothing in FEProblemBase or MooseApp stood out to me as allowing you to access a MultiApp not \"below you.\" Maybe that's part of the design of MOOSE, for sub-apps to run with minimal knowledge of \"where\" they are in a tree to keep things agnostic.",
          "url": "https://github.com/idaholab/moose/discussions/16714",
          "updatedAt": "2022-08-30T21:54:06Z",
          "publishedAt": "2021-01-15T22:08:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "April,\nI do this a bit with MOC + DSA. You're correct with:\n\nMaybe that's part of the design of MOOSE, for sub-apps to run with minimal knowledge of \"where\" they are in a tree to keep things agnostic.\n\nI do it a bit dirty, in which that information can be passed within a transfer. Within my master application problem, I've got some additional checking that attempts to cast all of the transfers to my transfer of choice. If it is found - I've then got an interface to the other MultiApps. You could also have this transfer as an input to the problem.\nI'm not sure that this is the best behavior, but with the idea of keeping all of the applications truly separate and only connecting them through transfers, I couldn't find a better solution.",
                  "url": "https://github.com/idaholab/moose/discussions/16714#discussioncomment-291234",
                  "updatedAt": "2022-08-30T21:54:12Z",
                  "publishedAt": "2021-01-18T16:17:51Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "Actually - disregard all of this. This the wrong direction \ud83d\ude06 (master seeing child), I believe you want child seeing master.",
                          "url": "https://github.com/idaholab/moose/discussions/16714#discussioncomment-291239",
                          "updatedAt": "2022-08-30T21:54:15Z",
                          "publishedAt": "2021-01-18T16:20:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aprilnovak"
                          },
                          "bodyText": "Well I think a transfer could still be done into the child, like into a postprocessor or something? Like a Receiver, that receives \"true\" every time I'm at the transfers into nekRS at TIMESTEP_END, so then I could grab a postprocessor value from within NekProblem to get the information I need.\nIt definitely feels hacky, but I think it could work for my needs. But I feel that as the ExternalProblem interface sees more use in the future, that other users might run into similar barriers where they want the external problem synchronization (i.e. syncSolutions) to be more tied to the transfer of data than the solution of the external app. That might require some significant code design changes, though.",
                          "url": "https://github.com/idaholab/moose/discussions/16714#discussioncomment-291492",
                          "updatedAt": "2022-08-30T21:54:15Z",
                          "publishedAt": "2021-01-18T17:47:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aprilnovak"
                          },
                          "bodyText": "FYI this ended up working, thanks for the inspiration! I ended up just having a Receiver (default = 1) postprocessor sent from master to child on timestep_end (which is when I run nekRS), that nekRS then overwrites internally with something like\nif (_transfer_in_pp == true)\n  setPostprocessorValueByName(\"transfer_in\", false, 0);\nelse\n  return;\n\n// send heat flux in...",
                          "url": "https://github.com/idaholab/moose/discussions/16714#discussioncomment-292009",
                          "updatedAt": "2022-08-30T21:54:16Z",
                          "publishedAt": "2021-01-18T22:54:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "Heh - glad to send you down the right path at least.\n\nBut I feel that as the ExternalProblem interface sees more use in the future, that other users might run into similar barriers where they want the external problem synchronization (i.e. syncSolutions) to be more tied to the transfer of data than the solution of the external app.\n\nI definitely agree with this. I like the simplicity that comes with using Transfers for the overwhelming majority of synchronization between applications, but there probably needs to be some framework at the lower level like you need.",
                          "url": "https://github.com/idaholab/moose/discussions/16714#discussioncomment-292332",
                          "updatedAt": "2022-08-30T21:54:17Z",
                          "publishedAt": "2021-01-19T04:06:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Issues using mpirun",
          "author": {
            "login": "TheGreatCid"
          },
          "bodyText": "Hi,\nI am having issues with using mpirun on Ubuntu\nThe command I am using is this following\nmpirun -n 16 <my-application-executable> -i <my input file>\nThis gives the following chain of errors\nerrorex.txt\nWhen running mpirun -n 2 echo 'hello world' I get the intended output of two echos of hello world.\nThe gethostbyname error made me believe the issue was with my /etc/hosts/ file. However, despite modifications, I have the same error.\nThe file currently looks like this\nhost.txt\nThe det12 is my username. I have also tried using the hostname for my computer.\nI have tried replacing the det12 with det12.local, <my-computer-hostname>, and <my-computer-hostname>.local\nNothing seems to have worked. Everything has been done in the moose environment.\nAny insight into this would be much appreciated.",
          "url": "https://github.com/idaholab/moose/discussions/16677",
          "updatedAt": "2022-07-14T22:30:07Z",
          "publishedAt": "2021-01-13T15:19:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "You should add an entry in your hosts file for the host that appears in the failed MPI run:\nMPID_nem_tcp_init(373).............: gethostbyname failed, pse-jdolbow-hp8rq53 (errno 0)\n\nIn this case, you should add\n127.0.0.1 pse-jdolbow-hp8rq53",
                  "url": "https://github.com/idaholab/moose/discussions/16677#discussioncomment-279654",
                  "updatedAt": "2022-07-14T22:30:10Z",
                  "publishedAt": "2021-01-13T16:56:07Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "I've tried that as well, with this host file. The same error message displays after using mpirun\nhost.txt",
                          "url": "https://github.com/idaholab/moose/discussions/16677#discussioncomment-279666",
                          "updatedAt": "2022-07-14T22:30:10Z",
                          "publishedAt": "2021-01-13T16:59:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Searching this and specifically Linux, yielded this result:\nhttps://ubuntuforums.org/showthread.php?t=1921181 (last response). The important bits:\n127.0.0.1\tlocalhost\n127.0.0.1\tzip.chem.rochester.edu\n127.0.1.1\tzip\n127.0.1.1\t128.151.187.109\n128.151.187.109 zip\n128.151.187.109 zip.chem.rochester.edu\n  \n# The following lines are desirable for IPv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\nff02::3 ip6-allhosts\n\nSupposedly, you should list all possible addresses (not just localhost of 127.0.0.1). Why you might have to do this is a mystery. I've never seen this issue occur on a Linux machine myself.",
                          "url": "https://github.com/idaholab/moose/discussions/16677#discussioncomment-291422",
                          "updatedAt": "2022-07-14T22:30:19Z",
                          "publishedAt": "2021-01-18T17:07:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "That is really odd.\nEven odder was that the issue was fixed when I connected my computer to the internet. Really doesn't make sense considering that everything is local, but I'm not complaining.\nStill thank you for the additional advice.",
                          "url": "https://github.com/idaholab/moose/discussions/16677#discussioncomment-291602",
                          "updatedAt": "2022-08-31T20:20:58Z",
                          "publishedAt": "2021-01-18T18:46:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}