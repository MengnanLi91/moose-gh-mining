{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wMi0wN1QxMjozMDo1MS0wNjowMM4AP0jl"
    },
    "edges": [
      {
        "node": {
          "title": "How to integrate 'equivalent_slip_increment'",
          "author": {
            "login": "pshen20127"
          },
          "bodyText": "Hello All\nI am trying to integrate 'equivalent_slip_increment' in the file 'CrystalPlasticityStressUpdateBaseAddStateVars.C'. I added several lines as below:\n106   equivalent_slip_increment(declareProperty<RankTwoTensor>(\"equivalent_slip_increment\")),\n107   equivalent_slip_increment_old(getMaterialPropertyOld<RankTwoTensor>(\"equivalent_slip_increment\")),\n\n501   equivalent_slip_increment += equivalent_slip_increment_old;\n\nBut it met an error like this:\n\nWhat's wrong with it and how to fix it? Here is may codes:https://github.com/pshen20127/IN625.git\nThanks\nPengfei",
          "url": "https://github.com/idaholab/moose/discussions/23365",
          "updatedAt": "2023-02-23T21:35:28Z",
          "publishedAt": "2023-02-07T18:20:02Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ajacquey"
                  },
                  "bodyText": "Try:\nequivalent_slip_increment[_qp] += equivalent_slip_increment_old[_qp];",
                  "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4897576",
                  "updatedAt": "2023-02-07T20:15:48Z",
                  "publishedAt": "2023-02-07T20:15:46Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "Thank you for your reply. I have tried and it doesn't work. This is error message.",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4898092",
                          "updatedAt": "2023-02-07T21:16:31Z",
                          "publishedAt": "2023-02-07T21:16:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "You probably are overriding equivalent_slip_increment locally... try\nequivalent_slip_increment += equivalent_slip_increment_old[_qp];\n\nwhich should work but indicate something else you are doing is wrong.",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4898220",
                          "updatedAt": "2023-02-07T21:28:07Z",
                          "publishedAt": "2023-02-07T21:28:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ajacquey"
                          },
                          "bodyText": "There are a number of things which are incorrect in your files:\n\nThe material property equivalent_slip_increment is declared as a stateful property (you need the old value) but is not initialized in initQpStatefulProperties()\nThe function where the the operation equivalent_slip_increment[_qp] += equivalent_slip_increment_old[_qp]; takes place has equivalent_slip_increment as argument. I am not sure what you are doing because I did not find where and how this function is called in your file. In principle, equivalent_slip_increment += equivalent_slip_increment_old[_qp];  should work but it's confusing. I advise renaming your material property _equivalent_slip_increment to differentiate between local variable and material property.",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4898256",
                          "updatedAt": "2023-02-07T21:31:22Z",
                          "publishedAt": "2023-02-07T21:31:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "I tried equivalent_slip_increment += equivalent_slip_increment_old[_qp]; and it works. Could you please explain why the former equivalent_slip_increment doesn't need [_qp] but the latter one needs?",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4899104",
                          "updatedAt": "2023-02-07T23:38:17Z",
                          "publishedAt": "2023-02-07T23:38:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "You are adding a rank two tensor to another. The LHS is a rank two tensor, the RHS also has to be a rank two tensor. Your equivalent_slip_increment_old is an array, hence the [] accessor to retrieve the rank two tensor inside.\nPlease follow @ajacquey 's suggestions above.",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4899897",
                          "updatedAt": "2023-02-08T01:53:24Z",
                          "publishedAt": "2023-02-08T01:53:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "Thanks, will do. I also declare equivalent_slip_increment_old as a rank two tensor like below.\nequivalent_slip_increment_old(getMaterialPropertyOld<RankTwoTensor>(\"equivalent_slip_increment\")),\n\nWhy do you say it is array?",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4908084",
                          "updatedAt": "2023-02-08T17:58:52Z",
                          "publishedAt": "2023-02-08T17:58:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "getMaterialPropertyOld<RankTwoTensor>(\"equivalent_slip_increment\") returns a const MaterialProperty<RankTwoTensor> &. A MaterialProperty<T> is essentially a MooseArray<T> at its core, and MooseArray is our implementation of resizable array.",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4908746",
                          "updatedAt": "2023-02-08T19:16:54Z",
                          "publishedAt": "2023-02-08T19:16:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sapitts"
                  },
                  "bodyText": "As an aside, I would recommend caution in adding an old equivalent slip increment to the current slip increment: the current slip increment value is used in ComputeMultipleCrystalPlasticityStress to calculate the plastic deformation gradient, see \n  \n    \n      moose/modules/tensor_mechanics/src/materials/crystal_plasticity/ComputeMultipleCrystalPlasticityStress.C\n    \n    \n        Lines 507 to 514\n      in\n      198b8ca\n    \n  \n  \n    \n\n        \n          \n             _models[i]->calculateEquivalentSlipIncrement(equivalent_slip_increment_per_model); \n        \n\n        \n          \n             equivalent_slip_increment += equivalent_slip_increment_per_model; \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           RankTwoTensor residual_equivalent_slip_increment = \n        \n\n        \n          \n               RankTwoTensor::Identity() - equivalent_slip_increment; \n        \n\n        \n          \n           _inverse_plastic_deformation_grad = \n        \n\n        \n          \n               _inverse_plastic_deformation_grad_old * residual_equivalent_slip_increment; \n        \n    \n  \n\n\nOne of the beauties of open source code is that you can make whatever change you like :-) In this case you might want to consider the downstream implications as you make your changes",
                  "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4899949",
                  "updatedAt": "2023-02-08T02:01:20Z",
                  "publishedAt": "2023-02-08T02:01:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "Thanks, get it. I will create another variable assigned the value of equivalent slip increment.",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4908110",
                          "updatedAt": "2023-02-08T18:00:49Z",
                          "publishedAt": "2023-02-08T18:00:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "Hello\nAs you suggested, I add some new variables and codes. The main calculation I want to do is from line 505 as below.\n505   equivalent_shearstrain = equivalent_slip_increment;\n506   equivalent_shearstrain += equivalent_shearstrain_old;\n507   equivalent_plastic_strain = sqrt(pow(equivalent_shearstrain(0,0),2)+pow(equivalent_shearstrain(0,1),2)+pow(equivalent_shearstrain(0,2),2)\n508                                  +pow(equivalent_shearstrain(1,0),2)+pow(equivalent_shearstrain(1,1),2)+pow(equivalent_shearstrain(1,2),2)\n509                                  +pow(equivalent_shearstrain(2,0),2)+pow(equivalent_shearstrain(2,1),2)+pow(equivalent_shearstrain(2,2),2));\n\nThe equation from line 507 to 509 is\n\nWhen I compiled the codes, I met many errors:\n\nCould you please tell me how to fix it? Here is my codes : https://github.com/pshen20127/IN625.git",
                          "url": "https://github.com/idaholab/moose/discussions/23365#discussioncomment-4911274",
                          "updatedAt": "2023-02-09T00:16:36Z",
                          "publishedAt": "2023-02-09T00:16:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Dirac Kernels for INSAD",
          "author": {
            "login": "maxnezdyur"
          },
          "bodyText": "Is there a simple way to have DiracKernels work with Vector Variables? Not sure if there is a way to apply it component-wise. Thanks!",
          "url": "https://github.com/idaholab/moose/discussions/23378",
          "updatedAt": "2023-02-15T12:29:04Z",
          "publishedAt": "2023-02-08T11:52:06Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "I think the answer is no. This is the first request for this kind of capability. Would you want to take a stab at a VectorDiracKernel? Otherwise you can convert this to an issue (well we should do that anyway) and we can try to tackle it when someone has time!",
                  "url": "https://github.com/idaholab/moose/discussions/23378#discussioncomment-4908739",
                  "updatedAt": "2023-02-08T19:16:00Z",
                  "publishedAt": "2023-02-08T19:15:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "maxnezdyur"
                          },
                          "bodyText": "I can take a crack at it. I'm assuming modeling it like ADKernel, templating it for VectorVariable?",
                          "url": "https://github.com/idaholab/moose/discussions/23378#discussioncomment-4909328",
                          "updatedAt": "2023-02-08T20:29:35Z",
                          "publishedAt": "2023-02-08T20:29:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "That would be the most ideal",
                          "url": "https://github.com/idaholab/moose/discussions/23378#discussioncomment-4911138",
                          "updatedAt": "2023-02-08T23:58:14Z",
                          "publishedAt": "2023-02-08T23:58:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Transferring material property to variable",
          "author": {
            "login": "avtarsinghh1991"
          },
          "bodyText": "Hello MOOSE experts,\nI am trying to transfer a material property value to a variable using the following\nVariable\n[./pressure]\n[../]\n\nKernel\n[./value]\n    type = MaterialPropertyValue\n    prop_name = hydrostatic_stress\n    variable = pressure\n  [../]\n\nMaterials\n [./stress_pressure]\n    type = RankTwoInvariant\n    rank_two_tensor = stress\n    property_name = hydrostatic_stress\n    invariant = Hydrostatic\n  [../]\n\nI am getting the following error.\nTime Step 0, time = 0\n\nTime Step 1, time = 1, dt = 1\n\nPerforming automatic scaling calculation\n\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.5, dt = 0.5\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 1\n Solve Did NOT Converge!\nAborting as solve did not converge\n\n\n*** ERROR ***\nThe following error occurred in the object \"TimeStepper\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n\n\n*** ERROR ***\nThe following error occurred in the object \"TimeStepper\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 1\n\n\n*** ERROR ***\nThe following error occurred in the object \"TimeStepper\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 2\n\n\n*** ERROR ***\nThe following error occurred in the object \"TimeStepper\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 3\n\n\n*** ERROR ***\nThe following error occurred in the object \"TimeStepper\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 4\n\n\n*** ERROR ***\nThe following error occurred in the object \"TimeStepper\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 5\n\n\n*** ERROR ***\nThe following error occurred in the object \"TimeStepper\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 6\n\n\n*** ERROR ***\nThe following error occurred in the object \"TimeStepper\", of type \"ConstantDT\".\n\nSolve failed and timestep already at or below dtmin, cannot continue!\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 7\n\nWithout it my simulation is coverging fine. I have tried decreasing the time step but still the same error is there.\nCan you please suggest any solution?\nThanks,\nAvtar",
          "url": "https://github.com/idaholab/moose/discussions/23381",
          "updatedAt": "2023-06-24T19:40:51Z",
          "publishedAt": "2023-02-08T17:37:05Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Make pressure an AuxVariable, and use an AuxKernel to perform the projection:\n[AuxVariables]\n  [pressure]\n    order = FIRST # or CONSTANT\n    family = MONOMIAL\n    [AuxKernel]\n      type = MaterialRealAux\n      property = hydrostatic_stress\n    []\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/23381#discussioncomment-4907891",
                  "updatedAt": "2023-02-08T17:42:57Z",
                  "publishedAt": "2023-02-08T17:42:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Can I use this variable to couple with other variable?\nI was following the following discussion\n#22910\nThanks,\nAvtar",
                          "url": "https://github.com/idaholab/moose/discussions/23381#discussioncomment-4908051",
                          "updatedAt": "2023-02-08T17:56:13Z",
                          "publishedAt": "2023-02-08T17:56:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Yes you can. But you lose the derivative information by projecting an AD material property onto an aux variable. However, if you are already using non-AD kernels and materials, you don't lose any derivative information -- it's still up to you how to compute the relevant derivatives for a good Jacobian (and preconditioner).",
                          "url": "https://github.com/idaholab/moose/discussions/23381#discussioncomment-4908771",
                          "updatedAt": "2023-02-08T19:19:24Z",
                          "publishedAt": "2023-02-08T19:19:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Output the radial stresses in spherical cordinates",
          "author": {
            "login": "avtarsinghh1991"
          },
          "bodyText": "Hello MOOSE experts,\nI am using the following module to calculate the stresses in the spherical coordinates.\nhttps://mooseframework.inl.gov/source/kernels/StressDivergenceRSphericalTensors.html\nCan you please suggest, how to get the output of stresses in spherical coordinate system? Is there any relevant examples?\nThanks,\nAvtar",
          "url": "https://github.com/idaholab/moose/discussions/23376",
          "updatedAt": "2023-02-08T17:32:41Z",
          "publishedAt": "2023-02-08T06:54:26Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "IIRC, if you use the axisymmetric RZ coordinate system in tensor mechanics, the strain and stress definitions are already in that coordinate system. The convention is\n[ rr rz rt\n  zr zz zt\n  tr tz tt]\n\nI suspect if you grab the corresponding component the same way as if you are in Cartesian, it will just work. But I agree this is a bit counter-intuitive, so hopefully there is a better way or it's been documented somewhere.",
                  "url": "https://github.com/idaholab/moose/discussions/23376#discussioncomment-4905599",
                  "updatedAt": "2023-02-08T14:09:48Z",
                  "publishedAt": "2023-02-08T14:09:13Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sapitts"
                          },
                          "bodyText": "In addition to the page you linked, there is the spherical strain documentation page with a bit more information https://mooseframework.inl.gov/source/materials/ADComputeRSphericalFiniteStrain.html. Note this formulation does assume a 1D problem",
                          "url": "https://github.com/idaholab/moose/discussions/23376#discussioncomment-4906561",
                          "updatedAt": "2023-02-08T15:41:56Z",
                          "publishedAt": "2023-02-08T15:41:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "The new TM kernel system has a dedicated page for all that: https://mooseframework.inl.gov/source/interfaces/GradientOperator.html#2D_axisymmetric_cylindrical\nNow that I look at it again, it is also somewhat incomplete...",
                          "url": "https://github.com/idaholab/moose/discussions/23376#discussioncomment-4907168",
                          "updatedAt": "2023-02-08T16:39:56Z",
                          "publishedAt": "2023-02-08T16:38:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "avtarsinghh1991"
                          },
                          "bodyText": "Thanks. Its done.",
                          "url": "https://github.com/idaholab/moose/discussions/23376#discussioncomment-4907785",
                          "updatedAt": "2023-02-08T17:32:41Z",
                          "publishedAt": "2023-02-08T17:32:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PETSC test failure",
          "author": {
            "login": "BoZeng1997"
          },
          "bodyText": "Hi,\nI am trying to compile petsc either as external packages or moose submodule on HPC. Either way returned the same error when during testing. Here is the error I received. Any idea on what might caused this?\nRunning check examples to verify correct installation\nUsing PETSC_DIR=/qscratch/bzeng/moose-compilers/petsc-3.16.5 and PETSC_ARCH=linux-opt\n*******************Error detected during compile or link!*******************\nSee http://www.mcs.anl.gov/petsc/documentation/faq.html\n/qscratch/bzeng/petsc_dir/petsc/src/snes/tutorials ex19\n*********************************************************************************\nmpicc -fopenmp -fopenmp   -fPIC -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -Wno-misleading-indentation -Wno-stringop-overflow -fstack-protector -fvisibility=hidden -g -O -fopenmp  -fPIC -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -Wno-misleading-indentation -Wno-stringop-overflow -fstack-protector -fvisibility=hidden -g -O -fopenmp    -I/qscratch/bzeng/moose-compilers/petsc-3.16.5/include     ex19.c  -Wl,-rpath,/qscratch/bzeng/moose-compilers/petsc-3.16.5/lib -L/qscratch/bzeng/moose-compilers/petsc-3.16.5/lib -Wl,-rpath,/qscratch/bzeng/moose-compilers/petsc-3.16.5/lib -L/qscratch/bzeng/moose-compilers/petsc-3.16.5/lib -Wl,-rpath,/opt/openmpi/4.1/gnu/lib -L/opt/openmpi/4.1/gnu/lib -Wl,-rpath,/projects/netpub/gnu/11.3.0-toss3/lib/gcc/x86_64-pc-linux-gnu/11.3.0 -L/projects/netpub/gnu/11.3.0-toss3/lib/gcc/x86_64-pc-linux-gnu/11.3.0 -Wl,-rpath,/projects/netpub/gnu/11.3.0-toss3/lib64 -L/projects/netpub/gnu/11.3.0-toss3/lib64 -Wl,-rpath,/projects/netpub/gnu/11.3.0-toss3/lib -L/projects/netpub/gnu/11.3.0-toss3/lib -lpetsc -lHYPRE -lcmumps -ldmumps -lsmumps -lzmumps -lmumps_common -lpord -lscalapack -lsuperlu_dist -lflapack -lfblas -lptesmumps -lptscotchparmetis -lptscotch -lptscotcherr -lesmumps -lscotch -lscotcherr -lhdf5_hl -lhdf5 -lparmetis -lmetis -lm -lX11 -lstdc++ -ldl -lmpi_usempi -lmpi_mpifh -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lpthread -lrt -lquadmath -lstdc++ -ldl -o ex19\n/usr/bin/ld: warning: libgfortran.so.3, needed by /opt/openmpi/4.1/gnu/lib/libmpi_usempi.so, may conflict with libgfortran.so.5\n/usr/bin/ld: warning: libgfortran.so.3, needed by /opt/openmpi/4.1/gnu/lib/libmpi_usempi.so, may conflict with libgfortran.so.5\nPossible error running C/C++ src/snes/tutorials/ex19 with 1 MPI process\nSee http://www.mcs.anl.gov/petsc/documentation/faq.html\nsolo-login2.223205map_hfi_mem: mmap of rcvhdr_bufbase (0xdabbad0004030000) size 262144 failed: Resource temporarily unavailable\nsolo-login2.223205ex19: An unrecoverable error occurred while communicating with the driver\n[solo-login2:223205] *** Process received signal ***\n[solo-login2:223205] Signal: Aborted (6)\n[solo-login2:223205] Signal code:  (-6)\n[solo-login2:223205] [ 0] /lib64/libpthread.so.0(+0xf630)[0x7ffff2f51630]\n[solo-login2:223205] [ 1] /lib64/libc.so.6(gsignal+0x37)[0x7ffff2761387]\n[solo-login2:223205] [ 2] /lib64/libc.so.6(abort+0x148)[0x7ffff2762a78]\n[solo-login2:223205] [ 3] /lib64/libpsm2.so.2(+0x486e8)[0x7fffe49246e8]\n[solo-login2:223205] [ 4] /lib64/libpsm2.so.2(+0xedf5)[0x7fffe48eadf5]\n[solo-login2:223205] [ 5] /lib64/libpsm2.so.2(+0xffc1)[0x7fffe48ebfc1]\n[solo-login2:223205] [ 6] /lib64/libpsm2.so.2(+0x12b99)[0x7fffe48eeb99]\n[solo-login2:223205] [ 7] /lib64/libpsm2.so.2(psm2_ep_open+0x367)[0x7fffe48efc77]\n[solo-login2:223205] [ 8] /opt/openmpi/4.1/gnu/lib/openmpi/mca_mtl_psm2.so(ompi_mtl_psm2_module_init+0x161)[0x7fffe5fa81c1]\n[solo-login2:223205] [ 9] /opt/openmpi/4.1/gnu/lib/openmpi/mca_mtl_psm2.so(+0x35df)[0x7fffe5fa85df]\n[solo-login2:223205] [10] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(ompi_mtl_base_select+0xa3)[0x7ffff3b1b533]\n[solo-login2:223205] [11] /opt/openmpi/4.1/gnu/lib/openmpi/mca_pml_cm.so(+0x5c4c)[0x7fffe69cdc4c]\n[solo-login2:223205] [12] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(mca_pml_base_select+0x1c3)[0x7ffff3b24233]\n[solo-login2:223205] [13] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(ompi_mpi_init+0x749)[0x7ffff3b2ff69]\n[solo-login2:223205] [14] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(PMPI_Init_thread+0x95)[0x7ffff3add4b5]\n[solo-login2:223205] [15] /qscratch/bzeng/moose-compilers/petsc-3.16.5/lib/libpetsc.so.3.16(PetscInitialize+0xad)[0x7ffff657ee32]\n[solo-login2:223205] [16] ./ex19[0x403642]\n[solo-login2:223205] [17] /lib64/libc.so.6(__libc_start_main+0xf5)[0x7ffff274d555]\n[solo-login2:223205] [18] ./ex19[0x401629]\n[solo-login2:223205] *** End of error message ***\n--------------------------------------------------------------------------\nPrimary job  terminated normally, but 1 process returned\na non-zero exit code. Per user-direction, the job has been aborted.\n--------------------------------------------------------------------------\n--------------------------------------------------------------------------\nmpiexec noticed that process rank 0 with PID 0 on node solo-login2 exited on signal 6 (Aborted).\n--------------------------------------------------------------------------\nC/C++ example src/snes/tutorials/ex19 run successfully with 2 MPI processes\nC/C++ example src/snes/tutorials/ex19 run successfully with hypre\nC/C++ example src/snes/tutorials/ex19 run successfully with mumps\n1,2c1,32\n< lid velocity = 0.0025, prandtl # = 1., grashof # = 1.\n< Number of SNES iterations = 2\n---\n> solo-login2.223344map_hfi_mem: mmap of rcvhdr_bufbase (0xdabbad0004030000) size 262144 failed: Resource temporarily unavailable\n> solo-login2.223344ex19: An unrecoverable error occurred while communicating with the driver\n> [solo-login2:223344] *** Process received signal ***\n> [solo-login2:223344] Signal: Aborted (6)\n> [solo-login2:223344] Signal code:  (-6)\n> [solo-login2:223344] [ 0] /lib64/libpthread.so.0(+0xf630)[0x7ffff2f51630]\n> [solo-login2:223344] [ 1] /lib64/libc.so.6(gsignal+0x37)[0x7ffff2761387]\n> [solo-login2:223344] [ 2] /lib64/libc.so.6(abort+0x148)[0x7ffff2762a78]\n> [solo-login2:223344] [ 3] /lib64/libpsm2.so.2(+0x486e8)[0x7fffe49246e8]\n> [solo-login2:223344] [ 4] /lib64/libpsm2.so.2(+0xedf5)[0x7fffe48eadf5]\n> [solo-login2:223344] [ 5] /lib64/libpsm2.so.2(+0xffc1)[0x7fffe48ebfc1]\n> [solo-login2:223344] [ 6] /lib64/libpsm2.so.2(+0x12b99)[0x7fffe48eeb99]\n> [solo-login2:223344] [ 7] /lib64/libpsm2.so.2(psm2_ep_open+0x367)[0x7fffe48efc77]\n> [solo-login2:223344] [ 8] /opt/openmpi/4.1/gnu/lib/openmpi/mca_mtl_psm2.so(ompi_mtl_psm2_module_init+0x161)[0x7fffe5fa81c1]\n> [solo-login2:223344] [ 9] /opt/openmpi/4.1/gnu/lib/openmpi/mca_mtl_psm2.so(+0x35df)[0x7fffe5fa85df]\n> [solo-login2:223344] [10] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(ompi_mtl_base_select+0xa3)[0x7ffff3b1b533]\n> [solo-login2:223344] [11] /opt/openmpi/4.1/gnu/lib/openmpi/mca_pml_cm.so(+0x5c4c)[0x7fffe69cdc4c]\n> [solo-login2:223344] [12] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(mca_pml_base_select+0x1c3)[0x7ffff3b24233]\n> [solo-login2:223344] [13] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(ompi_mpi_init+0x749)[0x7ffff3b2ff69]\n> [solo-login2:223344] [14] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(PMPI_Init_thread+0x95)[0x7ffff3add4b5]\n> [solo-login2:223344] [15] /qscratch/bzeng/moose-compilers/petsc-3.16.5/lib/libpetsc.so.3.16(PetscInitialize+0xad)[0x7ffff657ee32]\n> [solo-login2:223344] [16] ./ex19[0x403642]\n> [solo-login2:223344] [17] /lib64/libc.so.6(__libc_start_main+0xf5)[0x7ffff274d555]\n> [solo-login2:223344] [18] ./ex19[0x401629]\n> [solo-login2:223344] *** End of error message ***\n> --------------------------------------------------------------------------\n> Primary job  terminated normally, but 1 process returned\n> a non-zero exit code. Per user-direction, the job has been aborted.\n> --------------------------------------------------------------------------\n> --------------------------------------------------------------------------\n> mpiexec noticed that process rank 0 with PID 0 on node solo-login2 exited on signal 6 (Aborted).\n> --------------------------------------------------------------------------\n/qscratch/bzeng/petsc_dir/petsc/src/snes/tutorials\nPossible problem with ex19 running with superlu_dist, diffs above\n=========================================\n0a1,32\n> solo-login2.223448map_hfi_mem: mmap of rcvhdr_bufbase (0xdabbad0004030000) size 262144 failed: Resource temporarily unavailable\n> solo-login2.223448ex47: An unrecoverable error occurred while communicating with the driver\n> [solo-login2:223448] *** Process received signal ***\n> [solo-login2:223448] Signal: Aborted (6)\n> [solo-login2:223448] Signal code:  (-6)\n> [solo-login2:223448] [ 0] /lib64/libpthread.so.0(+0xf630)[0x7ffff2f51630]\n> [solo-login2:223448] [ 1] /lib64/libc.so.6(gsignal+0x37)[0x7ffff2761387]\n> [solo-login2:223448] [ 2] /lib64/libc.so.6(abort+0x148)[0x7ffff2762a78]\n> [solo-login2:223448] [ 3] /lib64/libpsm2.so.2(+0x486e8)[0x7fffe49246e8]\n> [solo-login2:223448] [ 4] /lib64/libpsm2.so.2(+0xedf5)[0x7fffe48eadf5]\n> [solo-login2:223448] [ 5] /lib64/libpsm2.so.2(+0xffc1)[0x7fffe48ebfc1]\n> [solo-login2:223448] [ 6] /lib64/libpsm2.so.2(+0x12b99)[0x7fffe48eeb99]\n> [solo-login2:223448] [ 7] /lib64/libpsm2.so.2(psm2_ep_open+0x367)[0x7fffe48efc77]\n> [solo-login2:223448] [ 8] /opt/openmpi/4.1/gnu/lib/openmpi/mca_mtl_psm2.so(ompi_mtl_psm2_module_init+0x161)[0x7fffe5fa81c1]\n> [solo-login2:223448] [ 9] /opt/openmpi/4.1/gnu/lib/openmpi/mca_mtl_psm2.so(+0x35df)[0x7fffe5fa85df]\n> [solo-login2:223448] [10] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(ompi_mtl_base_select+0xa3)[0x7ffff3b1b533]\n> [solo-login2:223448] [11] /opt/openmpi/4.1/gnu/lib/openmpi/mca_pml_cm.so(+0x5c4c)[0x7fffe69cdc4c]\n> [solo-login2:223448] [12] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(mca_pml_base_select+0x1c3)[0x7ffff3b24233]\n> [solo-login2:223448] [13] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(ompi_mpi_init+0x749)[0x7ffff3b2ff69]\n> [solo-login2:223448] [14] /opt/openmpi/4.1/gnu/lib/libmpi.so.40(PMPI_Init_thread+0x95)[0x7ffff3add4b5]\n> [solo-login2:223448] [15] /qscratch/bzeng/moose-compilers/petsc-3.16.5/lib/libpetsc.so.3.16(PetscInitialize+0xad)[0x7ffff657ee32]\n> [solo-login2:223448] [16] ./ex47[0x400f8d]\n> [solo-login2:223448] [17] /lib64/libc.so.6(__libc_start_main+0xf5)[0x7ffff274d555]\n> [solo-login2:223448] [18] ./ex47[0x400ea9]\n> [solo-login2:223448] *** End of error message ***\n> --------------------------------------------------------------------------\n> Primary job  terminated normally, but 1 process returned\n> a non-zero exit code. Per user-direction, the job has been aborted.\n> --------------------------------------------------------------------------\n> --------------------------------------------------------------------------\n> mpiexec noticed that process rank 0 with PID 0 on node solo-login2 exited on signal 6 (Aborted).\n> --------------------------------------------------------------------------\n/qscratch/bzeng/petsc_dir/petsc/src/vec/vec/tests\nPossible problem with ex47 running with hdf5, diffs above\n=========================================\nCompleted test examples",
          "url": "https://github.com/idaholab/moose/discussions/23374",
          "updatedAt": "2023-02-08T21:35:34Z",
          "publishedAt": "2023-02-08T00:55:36Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "BoZeng1997"
                  },
                  "bodyText": "Here is my settings\nmodule purge\nsource /projects/netpub/gnu/gccvars.sh 11.3.0\nmodule load cmake/3.22.3 openmpi-gnu/4.1 anaconda3/2022.05 \nexport PATH=/qscratch/bzeng/moose-compilers/mambaforge3/bin:$PATH\nexport CC=mpicc\nexport CXX=mpicxx\nexport F90=mpif90\nexport F77=mpif77\nexport FC=mpif90\nsource $HOME/.moose_profile\n\nand my configuration when compile PETSC as external package\n./configure CC=$CC CXX=$CXX F77=$F77 F90=$F90 FC=$FC --force \\\n--prefix=$PACKAGES_DIR/petsc-3.16.5 \\\n--with-debugging=0 \\\n--with-ssl=0 \\\n--with-pic=1 \\\n--with-openmp=1 \\\n--with-mpi=1 \\\n--with-shared-libraries=1 \\\n--with-cxx-dialect=C++11 \\\n--with-fortran-bindings=0 \\\n--with-sowing=0 \\\n--download-hypre=1 \\\n--download-fblaslapack=1 \\\n--download-metis=1 \\\n--download-ptscotch=1 \\\n--download-parmetis=1 \\\n--download-superlu_dist=1 \\\n--download-scalapack=1 \\\n--download-mumps=1 \\\n--download-slepc=1 \\\n--download-hdf5=1 \\\nPETSC_DIR=`pwd` PETSC_ARCH=linux-opt\n\nwhen compiling PETSC as moose submodule, I simply ran update_and_rebuild_petsc.sh\nThe error message I got from both ways are the same.",
                  "url": "https://github.com/idaholab/moose/discussions/23374#discussioncomment-4899546",
                  "updatedAt": "2023-02-08T01:00:04Z",
                  "publishedAt": "2023-02-08T01:00:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Seems like it ran out of memory. Are you building petsc in parallel? If so, try building it with fewer processors. If possible, grab a compute node with more memory to compile petsc.",
                  "url": "https://github.com/idaholab/moose/discussions/23374#discussioncomment-4899833",
                  "updatedAt": "2023-02-08T01:44:52Z",
                  "publishedAt": "2023-02-08T01:44:51Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "BoZeng1997"
                  },
                  "bodyText": "I guess this means it is correctly installed\nRunning check examples to verify correct installation\nUsing PETSC_DIR=/qscratch/bzeng/moose-compilers/petsc-3.16.5 and PETSC_ARCH=linux-opt\n*******************Error detected during compile or link!*******************\nSee http://www.mcs.anl.gov/petsc/documentation/faq.html\n/qscratch/bzeng/petsc_dir/petsc/src/snes/tutorials ex19\n*********************************************************************************\nmpicc -fopenmp -fopenmp   -fPIC -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -Wno-misleading-indentation -Wno-stringop-overflow -fstack-protector -fvisibility=hidden -g -O -fopenmp  -fPIC -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -Wno-misleading-indentation -Wno-stringop-overflow -fstack-protector -fvisibility=hidden -g -O -fopenmp    -I/qscratch/bzeng/moose-compilers/petsc-3.16.5/include     ex19.c  -Wl,-rpath,/qscratch/bzeng/moose-compilers/petsc-3.16.5/lib -L/qscratch/bzeng/moose-compilers/petsc-3.16.5/lib -Wl,-rpath,/qscratch/bzeng/moose-compilers/petsc-3.16.5/lib -L/qscratch/bzeng/moose-compilers/petsc-3.16.5/lib -Wl,-rpath,/opt/openmpi/4.1/gnu/lib -L/opt/openmpi/4.1/gnu/lib -Wl,-rpath,/projects/netpub/gnu/11.3.0-toss3/lib/gcc/x86_64-pc-linux-gnu/11.3.0 -L/projects/netpub/gnu/11.3.0-toss3/lib/gcc/x86_64-pc-linux-gnu/11.3.0 -Wl,-rpath,/projects/netpub/gnu/11.3.0-toss3/lib64 -L/projects/netpub/gnu/11.3.0-toss3/lib64 -Wl,-rpath,/projects/netpub/gnu/11.3.0-toss3/lib -L/projects/netpub/gnu/11.3.0-toss3/lib -lpetsc -lHYPRE -lcmumps -ldmumps -lsmumps -lzmumps -lmumps_common -lpord -lscalapack -lsuperlu_dist -lflapack -lfblas -lptesmumps -lptscotchparmetis -lptscotch -lptscotcherr -lesmumps -lscotch -lscotcherr -lhdf5_hl -lhdf5 -lparmetis -lmetis -lm -lX11 -lstdc++ -ldl -lmpi_usempi -lmpi_mpifh -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lpthread -lrt -lquadmath -lstdc++ -ldl -o ex19\n/usr/bin/ld: warning: libgfortran.so.3, needed by /opt/openmpi/4.1/gnu/lib/libmpi_usempi.so, may conflict with libgfortran.so.5\n/usr/bin/ld: warning: libgfortran.so.3, needed by /opt/openmpi/4.1/gnu/lib/libmpi_usempi.so, may conflict with libgfortran.so.5\nC/C++ example src/snes/tutorials/ex19 run successfully with 1 MPI process\nC/C++ example src/snes/tutorials/ex19 run successfully with 2 MPI processes\nC/C++ example src/snes/tutorials/ex19 run successfully with hypre\nC/C++ example src/snes/tutorials/ex19 run successfully with mumps\nC/C++ example src/snes/tutorials/ex19 run successfully with superlu_dist\nC/C++ example src/vec/vec/tests/ex47 run successfully with hdf5\nCompleted test examples",
                  "url": "https://github.com/idaholab/moose/discussions/23374#discussioncomment-4907069",
                  "updatedAt": "2023-02-08T16:29:37Z",
                  "publishedAt": "2023-02-08T16:29:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "yep",
                          "url": "https://github.com/idaholab/moose/discussions/23374#discussioncomment-4907110",
                          "updatedAt": "2023-02-08T16:34:23Z",
                          "publishedAt": "2023-02-08T16:34:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "missing some kernels when run",
          "author": {
            "login": "wangzhaohao"
          },
          "bodyText": "Hello, everyone. I meet a  quite strange \"bug\"\nwhen i run this simple test.\n#test the SideDiffusiveFluxAverage or SideFluxAverage\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  ymax = 2\n[]\n\n[Variables/temp]\n  initial_condition = 300\n[]\n\n[Kernels]\n  [diff_temp]\n    type = Diffusion\n    variable = temp\n  []\n  [Body_temp]\n    type = Reaction\n    variable = temp\n    rate = 2\n  []\n[]\n\n[BCs]\n  [left]\n    type = DirichletBC\n    variable = temp\n    value = 0\n    boundary = left\n  []\n\n  [right]\n    type = DirichletBC\n    variable = temp\n    value = 2\n    boundary = right\n  []\n[]\n\n[Postprocessors]\n  [sdfa]\n   type = SideDiffusiveFluxAverage\n   variable = temp\n   boundary = bottom\n   diffusivity = 1\n  []\n[]\n\n[Executioner]\n  type = Steady\n\n  solve_type = PJFNK\n[]\n\n[Outputs]\n  exodus = true\n[]\n\nthere seem the BodyForce kernel is no effect. and no error.\nwhat should I do to check out the kernel?",
          "url": "https://github.com/idaholab/moose/discussions/23362",
          "updatedAt": "2023-02-08T01:08:56Z",
          "publishedAt": "2023-02-07T08:52:45Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "wangzhaohao"
                  },
                  "bodyText": "my system is\n  Model Name:\tMacBook Air\n  Model Identifier:\tMacBookAir10,1\n  Model Number:\tMGN63CH/A\n  Chip:\tApple M1\n  Total Number of Cores:\t8 (4 performance and 4 efficiency)\n  Memory:\t8 GB\n  System Firmware Version:\t8419.60.44\n  OS Loader Version:\t8419.60.44\n  Serial Number (system):\tFVFJ382FQ6L4\n  Hardware UUID:\t280938EB-9B01-50FC-A54E-9D077E872938\n  Provisioning UDID:\t00008103-000E54501420801E\n  Activation Lock Status:\tDisabled",
                  "url": "https://github.com/idaholab/moose/discussions/23362#discussioncomment-4891210",
                  "updatedAt": "2023-02-07T08:58:19Z",
                  "publishedAt": "2023-02-07T08:58:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Add more elements and try again.",
                  "url": "https://github.com/idaholab/moose/discussions/23362#discussioncomment-4898268",
                  "updatedAt": "2023-02-07T21:32:35Z",
                  "publishedAt": "2023-02-07T21:32:34Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "wangzhaohao"
                          },
                          "bodyText": "Thanks, I did not think it was for this reason.",
                          "url": "https://github.com/idaholab/moose/discussions/23362#discussioncomment-4899593",
                          "updatedAt": "2023-02-08T01:08:57Z",
                          "publishedAt": "2023-02-08T01:08:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Where to find loading direction in source codes",
          "author": {
            "login": "pshen20127"
          },
          "bodyText": "Hello All\nI need to add some lines in source codes to calculate schmid factor and need loading direction. Do you know which variable in the source codes is loading direction? The files I need to modify are 'CrystalPlasticityKalidindiUpdate.C' and 'CrystalPlasticityStressUpdateBase.C'.\nThanks\nPengfei",
          "url": "https://github.com/idaholab/moose/discussions/23341",
          "updatedAt": "2023-02-08T18:01:22Z",
          "publishedAt": "2023-02-04T00:02:17Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@sapitts",
                  "url": "https://github.com/idaholab/moose/discussions/23341#discussioncomment-4867882",
                  "updatedAt": "2023-02-04T05:44:48Z",
                  "publishedAt": "2023-02-04T05:44:47Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "sapitts"
                  },
                  "bodyText": "There is not a way to extract the loading direction from the current material properties in CrystalPlasticityStressUpdateBase.C. When we calculate the applied shear stress for each slip system, we use full PK2 stress tensor which includes the loading information in the component magnitudes. The rotation tensor calculated from the Euler angles, _crysrot[_qp] does not include enough unique information to determine the loading direction, so it is not possible to calculate the scalar Schmid factor from the double contraction of the _crysrot and _flow_direction tensors. @dewenyushu for a double check here please.\nIn order to calculate the scalar Schmid factor, I would recommend the following steps:\n\nprovide the loading direction via an input parameter, making sure that the loading direction is provided in the same crystal sample system in which the slip system directions and plane normals are provided\nnormalize the loading direction vector, see \n  \n    \n      moose/modules/tensor_mechanics/src/materials/crystal_plasticity/CrystalPlasticityStressUpdateBase.C\n    \n    \n         Line 180\n      in\n      11b3877\n    \n  \n  \n    \n\n        \n          \n           _slip_plane_normal[i] /= _slip_plane_normal[i].norm(); \n        \n    \n  \n\n\n\nImplement the expression $M = (\\hat{n} * \\hat{d}) * (\\hat{m} * \\hat{d})$ where $\\hat{d}$ is the normalized loading direction vector to calculate the initial Schmid factor\nIf the updated Schmid factor values throughout the system are desired, multiply each of the $\\hat{m}$, $\\hat{d}$, and $\\hat{m}$ vectors by the _crysrot tensor, in the manner shown here \n  \n    \n      moose/modules/tensor_mechanics/src/materials/crystal_plasticity/CrystalPlasticityStressUpdateBase.C\n    \n    \n        Lines 382 to 396\n      in\n      11b3877\n    \n  \n  \n    \n\n        \n          \n           // Update slip direction and normal with crystal orientation \n        \n\n        \n          \n           for (const auto i : make_range(_number_slip_systems)) \n        \n\n        \n          \n           { \n        \n\n        \n          \n             local_direction_vector[i].zero(); \n        \n\n        \n          \n             local_plane_normal[i].zero(); \n        \n\n        \n          \n            \n        \n\n        \n          \n             for (const auto j : make_range(LIBMESH_DIM)) \n        \n\n        \n          \n               for (const auto k : make_range(LIBMESH_DIM)) \n        \n\n        \n          \n               { \n        \n\n        \n          \n                 local_direction_vector[i](j) = \n        \n\n        \n          \n                     local_direction_vector[i](j) + crysrot(j, k) * direction_vector[i](k); \n        \n\n        \n          \n            \n        \n\n        \n          \n                 local_plane_normal[i](j) = \n        \n\n        \n          \n                     local_plane_normal[i](j) + crysrot(j, k) * plane_normal_vector[i](k); \n        \n\n        \n          \n               } \n        \n    \n  \n\n\n\nCalculate the updated Schmid factor using the updated $\\hat{m}$, $\\hat{d}$, and $\\hat{m}$ vectors in the expression from step 3 above\nI would recommend saving each of the slip system Schmid factors in a material property vector of size _number_slip_systems so that you can then use the same postprocessors that we use for other slip system material properties like the applied stress\n\nFinally, if you are not planning to make a pull request to MOSOE with these changes, I woudl recommend implementing these changes in a child class that inherits from CrystalPlasticityKalidindiUpdate.C. Using this implementation approach will enable you to stay up-to-date with MOOSE by rebasing with upstream/devel often.\nHope this helps,\nStephanie",
                  "url": "https://github.com/idaholab/moose/discussions/23341#discussioncomment-4888407",
                  "updatedAt": "2023-02-07T01:28:04Z",
                  "publishedAt": "2023-02-07T01:28:03Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dewenyushu"
                          },
                          "bodyText": "I agree with @sapitts\nThe loading direction is not defined in the materials classes. On the contrary, the materials models response to the different load directions (and conditions) and initial orientations you may specify in your input file\nAdding the loading direction as an input parameter sounds reasonable if you will need it in calculating the Schmid factor",
                          "url": "https://github.com/idaholab/moose/discussions/23341#discussioncomment-4896661",
                          "updatedAt": "2023-02-07T18:24:08Z",
                          "publishedAt": "2023-02-07T18:22:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "If you are looking at an RVE, just homogenize the cauchy stress -- that's the \"load\" you use to compute the CRSS with Schmid.",
                          "url": "https://github.com/idaholab/moose/discussions/23341#discussioncomment-4898294",
                          "updatedAt": "2023-02-07T21:35:50Z",
                          "publishedAt": "2023-02-07T21:35:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pshen20127"
                          },
                          "bodyText": "Thank you for so detailed reply. How to provide the loading direction via an input parameter?",
                          "url": "https://github.com/idaholab/moose/discussions/23341#discussioncomment-4898309",
                          "updatedAt": "2023-02-07T21:36:42Z",
                          "publishedAt": "2023-02-07T21:36:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "https://mooseframework.inl.gov/getting_started/examples_and_tutorials/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/23341#discussioncomment-4898835",
                          "updatedAt": "2023-02-07T22:52:42Z",
                          "publishedAt": "2023-02-07T22:52:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to set periodic BC?",
          "author": {
            "login": "abc-hy"
          },
          "bodyText": "Hi everyone,\nI want to set the top and bottom boundary as periodic BC and left and right boundary as Neumann BC. The following shows how I set the BC, however, I found the phenomenon I got indicate that the BC setting is not correct. Can anyone give me some advice?\n\nThank you very much,\nBest",
          "url": "https://github.com/idaholab/moose/discussions/23322",
          "updatedAt": "2023-06-24T19:42:48Z",
          "publishedAt": "2023-02-02T17:44:04Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you please post more about what indicates the setting bc is not correct. Is there a jump in the Y direction?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4854312",
                  "updatedAt": "2023-02-02T17:46:07Z",
                  "publishedAt": "2023-02-02T17:46:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "abc-hy"
                          },
                          "bodyText": "I ran several simulation of the layer propagation, with 2 different boundary conditions and compared them.\n(1)Case 1\nFirst BC I used is Neumann in all directions, I got the following first results\n\nThen, by using another boundary condition, which is periodic for the top and bottom boundary and Neumann for the left and right, I got this result:\n\nFor the second simulation, the interface in the middle behaves differently as interfaces at the boundary.\n(2) Case 2\nAlso, I ran another layer propagation simulation, First I use all Neumann BC for all the boundaries, and I got this,\n\nThen, I use periodic for top and bottom boundary, Neumann for the left and right boundary, I got this,\n\nFrom the periodic case, the triple junction behaviour in the middle is different from that at the boundaries.\nCould you tell me how is the periodic BC implemented in MOOSE? Where can I get the periodic BC implementation code?\nAlso, is the 2D model in MOOSE really a 2D model, or, it is actually 3D, but with the third dimension unchanged?",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4856813",
                          "updatedAt": "2023-02-02T23:53:45Z",
                          "publishedAt": "2023-02-02T23:53:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The periodic BC is actually implemented in libmesh more than in MOOSE. You can have a look at the doxygen to look at the code but it will use some libmesh objects in there\nhttps://mooseframework.inl.gov/docs/doxygen/moose/classAddPeriodicBCAction.html\nThe results you are getting look periodic to me\nShould they match the neumann BC ? Why ? because of symmetry?",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4856878",
                          "updatedAt": "2023-02-03T00:01:24Z",
                          "publishedAt": "2023-02-03T00:01:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abc-hy"
                          },
                          "bodyText": "I still have a question about the dimension of model in MOOSE.\nAlso, are the 2D models in MOOSE really only have 2D or, it actually has 3D, but with the third dimension unchanged?",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4897648",
                          "updatedAt": "2023-02-07T20:23:50Z",
                          "publishedAt": "2023-02-07T20:23:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "We have true 2D, with 2D elements, and true 3D with 3D elements",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4897674",
                          "updatedAt": "2023-02-07T20:27:00Z",
                          "publishedAt": "2023-02-07T20:26:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abc-hy"
                          },
                          "bodyText": "How does true 2D look like?\n\nIs this true 2D? without the third axis, z.",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4897724",
                          "updatedAt": "2023-02-07T20:35:02Z",
                          "publishedAt": "2023-02-07T20:35:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abc-hy"
                          },
                          "bodyText": "the z here is 0, so this means the z axis does not exist?",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4897731",
                          "updatedAt": "2023-02-07T20:35:38Z",
                          "publishedAt": "2023-02-07T20:35:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "QUAD4 are 2D eleemnts.\nYou dont need to specify the z parameters",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4897966",
                          "updatedAt": "2023-02-07T21:01:41Z",
                          "publishedAt": "2023-02-07T21:01:41Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abc-hy"
                          },
                          "bodyText": "How do you know? I did not find the introduction of QUAD4",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4898402",
                          "updatedAt": "2023-02-07T21:47:19Z",
                          "publishedAt": "2023-02-07T21:47:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "have a look at libmesh doxygen for more info on QUAD4",
                          "url": "https://github.com/idaholab/moose/discussions/23322#discussioncomment-4898448",
                          "updatedAt": "2023-02-07T21:52:43Z",
                          "publishedAt": "2023-02-07T21:52:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MultiAppGeneralFieldShapeEvaluationTransfer Differences vs MultiAppShapeEvaluationTransfer",
          "author": {
            "login": "maxnezdyur"
          },
          "bodyText": "Am I misusing the new transfer? I am getting different results on a simple example between the two transfers. I am using an example where the child app has a mesh that moves a lot and that movement needs to be captured.\nTimestep 0: Both Transfers match\n\nTimestep 10: MultiAppShapeEvaluationTransfer\n\nTimestep 10: MultiAppGeneralFieldShapeEvaluationTransfer\n\nparent.i\n[Mesh]\n  [gen]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmin = -1.0\n    xmax = 3.0\n    ymin = 0.0\n    ymax = 1.0\n    nx = 100\n    ny = 25\n    elem_type = QUAD4\n  []\n[]\n\n[Problem]\n  kernel_coverage_check = false\n  skip_nl_system_check = true\n  solve = false\n  verbose_multiapps = true\n[]\n\n[AuxVariables]\n  [indicator]\n    order = FIRST\n    family = LAGRANGE\n    initial_condition = 0.0\n  []\n  [indicator_new]\n    order = FIRST\n    family = LAGRANGE\n    initial_condition = 0.0\n  []\n[]\n\n[Executioner]\n  type = Transient\n  dt = 0.05\n  num_steps = 10\n[]\n\n[Outputs]\n  [out]\n    type = Exodus\n    execute_on = 'INITIAL TIMESTEP_END'\n  []\n[]\n\n[MultiApps]\n  [solid_domain]\n    type = TransientMultiApp\n    input_files = child.i\n    execute_on = 'initial timestep_begin'\n  []\n[]\n\n[Transfers]\n  [pull_indicator]\n    type = MultiAppShapeEvaluationTransfer\n    from_multi_app = solid_domain\n    source_variable = solid_indicator\n    variable = indicator\n    displaced_source_mesh = true\n    execute_on = 'initial timestep_begin'\n  []\n  [pull_indicator_new]\n    type = MultiAppGeneralFieldShapeEvaluationTransfer\n    from_multi_app = solid_domain\n    source_variable = solid_indicator\n    variable = indicator_new\n    displaced_source_mesh = true\n    execute_on = 'initial timestep_begin'\n  []\n[]\n\n\nchild.i\n[GlobalParams]\n    displacements = 'disp_x disp_y'\n[]\n\n  [Mesh]\n    [gen]\n      type = GeneratedMeshGenerator\n      dim = 2\n      xmin = 0\n      ymin = 0\n      xmax = 0.2\n      ymax = 0.5\n      nx = 5\n      ny = 15\n      elem_type = QUAD4\n    []\n    displacements = 'disp_x disp_y'\n  []\n\n  [Variables]\n    [disp_x][]\n    [disp_y][]\n  []\n\n  [AuxVariables]\n    [solid_indicator]\n      initial_condition = 1.0\n    []\n  []\n\n  [Modules/TensorMechanics/Master]\n    [all]\n      strain = SMALL\n      incremental = true\n    []\n  []\n\n  [Materials]\n    [elastic_tensor]\n      type = ComputeIsotropicElasticityTensor\n      youngs_modulus = 10000.0\n      poissons_ratio = 0.3\n      use_displaced_mesh = true\n    []\n    [stress]\n      type = ComputeFiniteStrainElasticStress\n    []\n  []\n\n  [BCs]\n    [move_bottom_x]\n      type = FunctionDirichletBC\n      boundary = bottom\n      variable = disp_x\n      function = 't'\n    []\n    [move_bottom_y]\n      type = DirichletBC\n      boundary = bottom\n      variable = disp_y\n      value = '0'\n    []\n  []\n\n  [Executioner]\n    type = Transient\n    num_steps = 1\n    solve_type = 'NEWTON'\n    petsc_options = '-snes_ksp_ew'\n    petsc_options_iname = '-pc_type -pc_factor_mat_solver_type -pc_factor_shift_type'\n    petsc_options_value = 'lu       superlu_dist               NONZERO'\n    nl_max_its = 40\n    l_max_its = 15\n    line_search = 'none'\n    nl_abs_tol = 1e-5\n    nl_rel_tol = 1e-4\n    automatic_scaling = true\n  []",
          "url": "https://github.com/idaholab/moose/discussions/23350",
          "updatedAt": "2023-02-07T19:56:08Z",
          "publishedAt": "2023-02-06T13:59:00Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Thanks for reporting. I ll take a look\nThe new transfer passes all the tests for displaced meshes, but you're the first to actually use it on displaced meshes.",
                  "url": "https://github.com/idaholab/moose/discussions/23350#discussioncomment-4883221",
                  "updatedAt": "2023-02-06T14:44:35Z",
                  "publishedAt": "2023-02-06T14:44:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "first finding is that the problem is limited to LAGRANGE target variables. Constant monomials and higher order elemental for the target variable work fine.",
                          "url": "https://github.com/idaholab/moose/discussions/23350#discussioncomment-4886004",
                          "updatedAt": "2023-02-06T19:11:25Z",
                          "publishedAt": "2023-02-06T19:11:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok found the issue, the point locators are created only on initialSetup and if there s displacement we need to refresh them every timestep\nI m going to put a PR up for MOOSE today. If you need a today fix you can also change in MultiAppGeneralFieldTransfer.C\n  params.addParam<bool>(\n      \"from_app_must_contain_point\",\n      false,    // instead of true\n\nThis will bypass the point locators in that transfer",
                          "url": "https://github.com/idaholab/moose/discussions/23350#discussioncomment-4886179",
                          "updatedAt": "2023-02-06T19:35:16Z",
                          "publishedAt": "2023-02-06T19:35:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "#23360 has been merged.\nPlease let me know if the problem is not solved. I changed your input a bit before adding it as a test to MOOSE",
                          "url": "https://github.com/idaholab/moose/discussions/23350#discussioncomment-4897424",
                          "updatedAt": "2023-02-07T19:56:08Z",
                          "publishedAt": "2023-02-07T19:56:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Summer 2022 Workshop Recording",
          "author": {
            "login": "thomas-allard"
          },
          "bodyText": "When can we expect the recording from this summer's training to be available? Will it be posted to this youtube channel: https://www.youtube.com/channel/UClljZCDkwVHSvBxK-fKMxMA ?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/21308",
          "updatedAt": "2023-06-24T19:40:38Z",
          "publishedAt": "2022-06-15T15:54:12Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Sorry for the delay. The Teams recording is proving to be a little more difficult to cut up than expected. It will be posted to the same channel either tomorrow or at the beginning of next week (this Friday is our day off).",
                  "url": "https://github.com/idaholab/moose/discussions/21308#discussioncomment-2961111",
                  "updatedAt": "2022-06-16T04:56:43Z",
                  "publishedAt": "2022-06-16T04:56:42Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "thomas-allard"
                          },
                          "bodyText": "Logan, that would be great, thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/21308#discussioncomment-2966862",
                          "updatedAt": "2022-06-16T20:18:08Z",
                          "publishedAt": "2022-06-16T20:18:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "thomas-allard"
                          },
                          "bodyText": "Any update? I've been hoping to watch the sections on the tensor mechanics and solid mechanics modules.",
                          "url": "https://github.com/idaholab/moose/discussions/21308#discussioncomment-3231305",
                          "updatedAt": "2022-07-26T13:33:31Z",
                          "publishedAt": "2022-07-26T13:33:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It's pretty labor intensive to edit the video, sorry for the delay, we'll get to it",
                          "url": "https://github.com/idaholab/moose/discussions/21308#discussioncomment-3232405",
                          "updatedAt": "2022-07-26T15:33:32Z",
                          "publishedAt": "2022-07-26T15:33:32Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "thomas-allard"
                  },
                  "bodyText": "Is there any update on this?\nI'm very interested in at least watching the tensor and solid mechanics portions of the workshop",
                  "url": "https://github.com/idaholab/moose/discussions/21308#discussioncomment-4896052",
                  "updatedAt": "2023-02-07T17:18:20Z",
                  "publishedAt": "2023-02-07T17:18:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "We've had issues editing the videos and dropped it. The hybrid setup was not good. We can have a look at those two parts specifically though there will be a delay",
                          "url": "https://github.com/idaholab/moose/discussions/21308#discussioncomment-4896075",
                          "updatedAt": "2023-02-07T17:20:25Z",
                          "publishedAt": "2023-02-07T17:20:24Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "thomas-allard"
                          },
                          "bodyText": "Ok gotcha. Are there plans for another workshop sometime in 2023?",
                          "url": "https://github.com/idaholab/moose/discussions/21308#discussioncomment-4896217",
                          "updatedAt": "2023-02-07T17:35:00Z",
                          "publishedAt": "2023-02-07T17:34:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There will be a workshop second week of June\nWe will announce it momentarily",
                          "url": "https://github.com/idaholab/moose/discussions/21308#discussioncomment-4896724",
                          "updatedAt": "2023-02-07T18:30:52Z",
                          "publishedAt": "2023-02-07T18:30:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}