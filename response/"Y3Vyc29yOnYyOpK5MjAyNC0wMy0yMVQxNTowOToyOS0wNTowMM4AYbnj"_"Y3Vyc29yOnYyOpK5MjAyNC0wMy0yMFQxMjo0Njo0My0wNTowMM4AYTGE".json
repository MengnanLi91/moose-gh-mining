{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wMy0yMFQxMjo0Njo0My0wNTowMM4AYTGE"
    },
    "edges": [
      {
        "node": {
          "title": "Plastic strain rate coupled with concentration",
          "author": {
            "login": "sidharthsarmah"
          },
          "bodyText": "Hi @hugary1995 ,\nI am trying to implement the last term of this equation and can be reduce as follows (with CL and epsilon_p as the two variables):\n\n\nIt consist of a strain rate coupled with concentration_lattice (CL) and the stress-strain variation is as follows:\n\nHere is what I have tried:\n\nIntroduce the effective plastic strain as an ADProperty\n\n[Materials]\n\n\n\nInsert the property as an non-linear variable strain_p\n\n\n\n\nUsed ADHeatConductionTimeDerivative kernels to solve:\n\n\n\n[]\n\nCould you check if I am correct till here, implementing the kernel, if yes, how do I implemeny the stress-strain relationships?",
          "url": "https://github.com/idaholab/moose/discussions/22957",
          "updatedAt": "2024-03-21T19:47:01Z",
          "publishedAt": "2022-12-13T15:55:34Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Take a look at the plasticity/creep regression tests in modules/tensor_mechanics/test/tests. If you set things up correctly, epsilon_p will be available as equivalent_plastic_strain or equivalent_inelastic_strain.\nYou don't need to project the epsilon_p onto a field, because you don't need its gradients. I suggest you implement your own kernel representing this term. If you don't know how to write a custom kernel, check out the tutorials and the workshop.",
                  "url": "https://github.com/idaholab/moose/discussions/22957#discussioncomment-4405497",
                  "updatedAt": "2022-12-15T01:38:44Z",
                  "publishedAt": "2022-12-15T01:38:43Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @hugary1995,\nYes, I will try to build a custom kernel, could you suggest, how do I implement any stress-strain relationship as such?",
                          "url": "https://github.com/idaholab/moose/discussions/22957#discussioncomment-4406020",
                          "updatedAt": "2022-12-15T03:45:57Z",
                          "publishedAt": "2022-12-15T03:45:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "By \"implement\", do you mean that you want to write source code to perform the constitutive update, or do you want to use already implemented materials in the tensor_mechanics module? The former is usually what I mean by \"implementing\" something, but I realize you may be referring to the latter.\nEither way, I recommend you to start with the tensor_mechanics documentation, as always. https://mooseframework.inl.gov/modules/tensor_mechanics/index.html\nOn the right side there is a column listing \"advanced features\", where you will find descriptions on \"Multiple inelastic stress\", \"Crystal plasticity\", \"Viscoplasticity\", etc.. Then, look at the input files inside modules/tensor_mechanics/test/tests for additional examples on how to set up these models.",
                          "url": "https://github.com/idaholab/moose/discussions/22957#discussioncomment-4410438",
                          "updatedAt": "2022-12-15T14:01:23Z",
                          "publishedAt": "2022-12-15T14:01:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "sidharthsarmah"
                          },
                          "bodyText": "Hi @GiudGiud , I want to couple the plastic strain eP with conc, cL. Which is the correct way to do so, the cL here is the primary variable?\n\n[Variables]\n  [./cL]\n  [../]\n\n  [./eP]\n  [../]\n[]\n\n\nUsing ADHeatConductionTimeDerivative:\n\n[Kernels]\n  [./CL_time_term]\n    type = ADHeatConductionTimeDerivative\n    variable = 'cL'\n    specific_heat = '1'\n    density_name = 'func1'\n  [../]\n\n  [./strain_effective]\n    type = ADMaterialPropertyValue\n    prop_name = 'effective_plastic_strain'\n    variable = 'eP'\n  [../]\n\n\n[Materials]\n  [./diff_time]\n    type = ADParsedMaterial\n    expression = 'if(eP < 0.5, (2/3)*cL + eP, (1/2)*cL)'\n    args = 'cL\teP'\n    property_name = 'func1'\n  [../]\n\n\nUsing ADCoupledMatTimeDerivative\n\n  [./strainrate_term]\n    type = ADCoupledMatTimeDerivative\n    variable = 'eP'\n    v = 'cL'\n    coef = 'func2'\n  [../]\n\n  [./strain_effective]\n    type = ADMaterialPropertyValue\n    prop_name = 'effective_plastic_strain'\n    variable = 'eP'\n  [../]\n\n\n[Materials]\n  [./diff_time]\n    type = ADParsedMaterial\n    expression = 'if(eP < 0.5, (2/3)*cL + eP, (1/2)*cL)'\n    args = 'cL\teP'\n    property_name = 'func2'\n  [../]",
                          "url": "https://github.com/idaholab/moose/discussions/22957#discussioncomment-8870342",
                          "updatedAt": "2024-03-21T19:46:56Z",
                          "publishedAt": "2024-03-21T19:46:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Array Variable Solution IC",
          "author": {
            "login": "gabburgio"
          },
          "bodyText": "Greetings everyone,\nI wanted to ask about the possibility of using the SolutionIC / SolutionUserObject procedure to initialize an array variable.\nIt seems to me that, at the moment, this is not possible ( \"// We can handle only FIRST order scalar variables\" is written in the SolutionUserObject source file, and if I try to follow the example at /moose/test/tests/ics/solution_ic/solution_ic.i with array variable, I get a \"_Map_base::at\" error).\nIs there any other procedure that is standard for this purpose?\nI realize that one could for instance use an \"ArrayConstantIC\", but I would much rather be able to just carry over solution values from a previous simulation.\nFor context, I am looking to use the solution of the k eigenproblem for the multigroup diffusion equation as the initial condition for a transient, where the initial precursor distribution is calculated with an auxkernel.\nIn case the solution would indeed be to produce an array version of SolutionIC / SolutionUserObject, I could try to take a stab at it. Is there any reason this would be impractical?\nThanks for your time,\nGabriele",
          "url": "https://github.com/idaholab/moose/discussions/26932",
          "updatedAt": "2024-03-21T17:45:26Z",
          "publishedAt": "2024-02-29T12:32:04Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou probably wont want to initialize every variable manually from SolutionICs + a SolutionUO, even though I think we should be able to make it work with a (newly created) SolutionArrayIC.\nI would recommend trying either of these two techniques to initialize everything at once:\nhttps://mooseframework.inl.gov/application_usage/restart_recover.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/26932#discussioncomment-8632978",
                  "updatedAt": "2024-02-29T16:09:41Z",
                  "publishedAt": "2024-02-29T16:09:40Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "if you want to code up the SolutionArrayIC we would love to have it in moose btw",
                          "url": "https://github.com/idaholab/moose/discussions/26932#discussioncomment-8633012",
                          "updatedAt": "2024-02-29T16:11:52Z",
                          "publishedAt": "2024-02-29T16:11:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gabburgio"
                          },
                          "bodyText": "Thanks for the solution.\nI do have a followup question, since it appears that now the flux variables are being correctly copied from the checkpoint file, but the precursor auxiliary variables are not.\nBy using postprocessors to compute the integrals, I can tell that the precursor concentrations are all set to zero in the beginning of the transient simulation (unlike the fluxes, whose integral are the same as those in TIMESTEP_END of the eigenvalue calculation).\nIs this due to the fact that I am trying to copy auxiliary variables into normal ones?\nIs there any other syntax/flag that I should add in this case?\nI am using what I think are the standard advanced restart commands:\n[Outputs]\n[cp]\ntype = Checkpoint\nexecute_on = TIMESTEP_END \n[]\n[]\n\n\n[Mesh]\nfile = eigen_cp_cp/0001-mesh.cpr\n[]\n\n[Problem]\nrestart_file_base = eigen_cp_cp/LATEST  \n[]\n\nAlso this doesn't seem to be due to the execution flag on the auxiliary kernels for the precusors in the eigenvalue calculation, which I have tried changing without result.\nI would be very grateful for any indication about what's going wrong.\nThanks again,\nGabriele",
                          "url": "https://github.com/idaholab/moose/discussions/26932#discussioncomment-8693186",
                          "updatedAt": "2024-03-06T12:26:26Z",
                          "publishedAt": "2024-03-06T12:26:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nCan you please paste the auxkernel and auxvariables block?\nThe change of system is indeed the problem.\nI think the ArraySolutionIC is the solution for this\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/26932#discussioncomment-8695382",
                          "updatedAt": "2024-03-06T15:22:50Z",
                          "publishedAt": "2024-03-06T15:22:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "Is this due to the fact that I am trying to copy auxiliary variables into normal ones?\n\nAre you saying precursor concentrations are aux variables in the eigenvalue calculation but primal variables during transient? If so, I think the restart system cannot handle this. @GiudGiud has commented. I think @loganharbour will be working on a capability that allows users to restart individual items from a checkpoint file, which will have a similar syntax like Variables/*/initial_from_file_var. But you may need to wait for a while on this.",
                          "url": "https://github.com/idaholab/moose/discussions/26932#discussioncomment-8698366",
                          "updatedAt": "2024-03-06T19:46:19Z",
                          "publishedAt": "2024-03-06T19:46:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "gabburgio"
                          },
                          "bodyText": "Thank you both for the information, indeed it is the case that precursor would have gone from auxiliary to primal",
                          "url": "https://github.com/idaholab/moose/discussions/26932#discussioncomment-8869307",
                          "updatedAt": "2024-03-21T17:45:27Z",
                          "publishedAt": "2024-03-21T17:45:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Electromagnetics Module 3D capability",
          "author": {
            "login": "nathmay"
          },
          "bodyText": "I noticed that the Electromagnetics Module documentation says:\n\n... (3D is currently in development)\n\nI was curious if there are any existing branches where this is being tested, and if there are tentative plans for release dates!",
          "url": "https://github.com/idaholab/moose/discussions/27162",
          "updatedAt": "2024-03-21T13:46:12Z",
          "publishedAt": "2024-03-21T13:37:52Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@cticenhour",
                  "url": "https://github.com/idaholab/moose/discussions/27162#discussioncomment-8866291",
                  "updatedAt": "2024-03-21T13:46:14Z",
                  "publishedAt": "2024-03-21T13:46:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error when running the PETSc tests",
          "author": {
            "login": "Ethan-xj"
          },
          "bodyText": "@milljm Hello. I want to run the PETSc tests to check the PETSc install. Here is the info when I type the script ./contrib/moose/scripts/update_and_rebuild_petsc.sh. By the way, some packages are downloaded by myself, so the real script is: ./contrib/moose/scripts/update_and_rebuild_petsc.sh --download-ptscotch=0 --download-scalapack=/home/linux/Downloads/scalapack-5bad7487f496c811192334640ce4d3fc5f88144b.tar.gz --download-superlu_dist=/home/linux/Downloads/superlu_dist-02b7c0d71bc33e785d098b0f8e4c26414bb8e39a.tar.gz --download-hypre=/home/linux/Downloads/hypre-2.29.0.tar.gz\nAnd there's no warning in the terminal:\n          CC arch-moose/obj/src/nep/impls/nleigs/nleigs.o\n          CC arch-moose/obj/src/lme/interface/lmebasic.o\n          CC arch-moose/obj/src/lme/interface/lmemon.o\n          CC arch-moose/obj/src/lme/interface/lmeregis.o\n          CC arch-moose/obj/src/lme/interface/lmedense.o\n          CC arch-moose/obj/src/lme/interface/lmeopts.o\n          CC arch-moose/obj/src/lme/interface/lmesetup.o\n          CC arch-moose/obj/src/lme/impls/krylov/lmekrylov.o\n          CC arch-moose/obj/src/lme/interface/lmesolve.o\n     CLINKER arch-moose/lib/libslepc.so.3.20.1\nNow to install the library do:\nmake SLEPC_DIR=/home/linux/cardinal/contrib/moose/petsc/arch-moose/externalpackages/git.slepc PETSC_DIR=/home/linux/cardinal/contrib/moose/scripts/../petsc install\n=========================================\n*** Installing SLEPc ***\n*** Installing SLEPc at prefix location: /home/linux/cardinal/contrib/moose/petsc/arch-moose  ***\n====================================\nInstall complete.\nNow to check if the libraries are working do (in current directory):\nmake SLEPC_DIR=/home/linux/cardinal/contrib/moose/petsc/arch-moose PETSC_DIR=/home/linux/cardinal/contrib/moose/scripts/../petsc PETSC_ARCH=arch-moose check\n====================================\n/usr/bin/gmake --no-print-directory -f makefile PETSC_ARCH=arch-moose PETSC_DIR=/home/linux/cardinal/contrib/moose/scripts/../petsc SLEPC_DIR=/home/linux/cardinal/contrib/moose/petsc/arch-moose/externalpackages/git.slepc install-builtafterslepc\n/usr/bin/gmake --no-print-directory -f makefile PETSC_ARCH=arch-moose PETSC_DIR=/home/linux/cardinal/contrib/moose/scripts/../petsc SLEPC_DIR=/home/linux/cardinal/contrib/moose/petsc/arch-moose/externalpackages/git.slepc slepc4py-install\ngmake[6]: Nothing to be done for 'slepc4py-install'.\n=========================================\nNow to check if the libraries are working do:\nmake PETSC_DIR=/home/linux/cardinal/contrib/moose/scripts/../petsc PETSC_ARCH=arch-moose check\n=========================================\n\nBut when I run the tests:\n(base) [linux@localhost cardinal]$ make PETSC_DIR=/home/linux/cardinal/contrib/moose/scripts/../petsc PETSC_ARCH=arch-moose check\nCardinal is using HDF5 from    /home/linux/cardinal/contrib/moose/scripts/../petsc/arch-moose\nCardinal is using MOOSE from   /home/linux/cardinal/contrib/moose\nCardinal is using NekRS from   /home/linux/cardinal/contrib/nekRS\nCardinal is using OpenMC from  /home/linux/cardinal/contrib/openmc\n\nCardinal is compiled with the following MOOSE modules\n  FLUID_PROPERTIES\n  HEAT_TRANSFER\n  NAVIER_STOKES\n  REACTOR\n  SOLID_PROPERTIES\n  STOCHASTIC_TOOLS\n  THERMAL_HYDRAULICS\n\n\nNot compiling MOOSE with NEML2 because NEML2_DIR is not a valid NEML2 checkout and/or libtorch is not enabled.\nTraceback (most recent call last):\n  File \"/home/linux/cardinal/contrib/moose/framework/scripts/find_dep_apps.py\", line 16, in <module>\n    from TestHarness import *\n  File \"/home/linux/cardinal/contrib/moose/python/TestHarness/__init__.py\", line 15, in <module>\n    from .TestHarness import TestHarness\n  File \"/home/linux/cardinal/contrib/moose/python/TestHarness/TestHarness.py\", line 23, in <module>\n    from . import util\n  File \"/home/linux/cardinal/contrib/moose/python/TestHarness/util.py\", line 15, in <module>\n    import yaml\nModuleNotFoundError: No module named 'yaml'\nmake: *** No rule to make target 'check'.  Stop.\n\n\nWhat should I do?\nEthan",
          "url": "https://github.com/idaholab/moose/discussions/27146",
          "updatedAt": "2024-03-21T13:39:49Z",
          "publishedAt": "2024-03-20T05:51:16Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "you need to install yaml\nif you are on a cluster, you can use a \"python-only\" conda that is local to only your account and download pyaml",
                  "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8848780",
                  "updatedAt": "2024-03-20T06:01:51Z",
                  "publishedAt": "2024-03-20T06:01:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "Thanks, I've already installed pyymal, but new error appears:\n(base) [linux@localhost petsc]$ make PETSC_DIR=$HOME/cardinal/contrib/moose/scripts/../petsc PETSC_ARCH=arch-moose check\nRunning PETSc check examples to verify correct installation\nUsing PETSC_DIR=/home/linux/cardinal/contrib/moose/scripts/../petsc and PETSC_ARCH=arch-moose\nPossible error running C/C++ src/snes/tutorials/ex19 with 1 MPI process\nSee https://petsc.org/release/faq/\nPossible error running C/C++ src/snes/tutorials/ex19 with 2 MPI processes\nSee https://petsc.org/release/faq/\n1,5d0\n< lid velocity = 0.0016, prandtl # = 1., grashof # = 1.\n<   0 SNES Function norm 0.0406612 \n<   1 SNES Function norm 4.12227e-06 \n<   2 SNES Function norm 6.098e-11 \n< Number of SNES iterations = 2\n/home/linux/cardinal/contrib/moose/petsc/src/snes/tutorials\nPossible problem with ex19 running with hypre, diffs above\n=========================================\n1,9d0\n< lid velocity = 0.0625, prandtl # = 1., grashof # = 1.\n<   0 SNES Function norm 0.239155 \n<     0 KSP Residual norm 0.235858 \n<     1 KSP Residual norm < 1.e-11\n<   1 SNES Function norm 6.81968e-05 \n<     0 KSP Residual norm 2.30906e-05 \n<     1 KSP Residual norm < 1.e-11\n<   2 SNES Function norm < 1.e-11\n< Number of SNES iterations = 2\n/home/linux/cardinal/contrib/moose/petsc/src/snes/tutorials\nPossible problem with ex19 running with mumps, diffs above\n=========================================\n1,2d0\n< lid velocity = 0.0025, prandtl # = 1., grashof # = 1.\n< Number of SNES iterations = 2\n/home/linux/cardinal/contrib/moose/petsc/src/snes/tutorials\nPossible problem with ex19 running with superlu_dist, diffs above\n=========================================\nC/C++ example src/vec/vec/tests/ex47 run successfully with hdf5\nRunning SLEPc check examples to verify correct installation\nUsing SLEPC_DIR=/home/linux/cardinal/contrib/moose/petsc/arch-moose/externalpackages/git.slepc, PETSC_DIR=/home/linux/cardinal/contrib/moose/scripts/../petsc, and PETSC_ARCH=arch-moose\nPossible error running C/C++ src/eps/tests/test10 with 1 MPI process\nPossible error running C/C++ src/eps/tests/test10 with 2 MPI processes\nCompleted SLEPc check examples\nError while running make check\ngmake[5]: *** [makefile:123: check] Error 1\ngmake[4]: *** [GNUmakefile:12: check] Error 2\ngmake[3]: *** [/home/linux/cardinal/contrib/moose/scripts/../petsc/arch-moose/lib/petsc/conf/petscrules:49: slepc-check] Error 2\ngmake[2]: *** [makefile:159: check_build] Error 2\nError while running make check\ngmake[1]: *** [makefile:132: check] Error 1\nmake: *** [GNUmakefile:17: check] Error 2",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8849097",
                          "updatedAt": "2024-03-20T07:00:21Z",
                          "publishedAt": "2024-03-20T07:00:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "@milljm @brandonlangley Hello! Do you have any ideas?",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8852049",
                          "updatedAt": "2024-03-20T12:05:56Z",
                          "publishedAt": "2024-03-20T12:05:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "brandonlangley"
                          },
                          "bodyText": "@Ethan-xj -\nUnfortunately I do not. I'm just the WASP guy and don't know anything about manually building PETSc.\nI only use the prebuilt Conda package for PETSc and am not familiar with the common building pitfalls.\nYou'll probably have to wait for maybe @milljm or @GiudGiud to see if any of this rings a bell for them.",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8852924",
                          "updatedAt": "2024-03-20T13:11:52Z",
                          "publishedAt": "2024-03-20T13:11:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "OK. Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8853032",
                          "updatedAt": "2024-03-20T13:20:52Z",
                          "publishedAt": "2024-03-20T13:20:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I see this error quite frequently, and have ignored it... I believe it to be related to the MPI flavor (MPICH vs OpenMPI vs MVAPICH, etc).\nThe reason I ignore it, is because MOOSE (and MOOSE based applications) use PETSc extensively so, and we supply our own testing system (TestHarness), via run_tests to test the stack. Through these many thousands of tests we believe we satisfy a \"working PETSc\" installation when they all pass.\nAs for targeting a specific feature/contrib of PETSc though, I am not an expert on. For example, I don't know which tests to ask you to run that make extensive use of SLEPc. But I think I know of a rudimentary way:\nWhen I grep for \"slepc_version\" in the test folder (moose/test), I see several tests that require SLEPc:\ncd moose/test\ngit grep \"slepc_version\"\nLooks like a bunch of \"eigensolver\"-like tests all require SLEPc. Lets run those tests specifically:\ncd moose/test\nmake -j 6\n./run_tests --re=eigensolvers\nDo these all pass? If so, honestly, I would assume SLEPc (and PETSc) is sufficiently being tested.",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8853763",
                          "updatedAt": "2024-03-20T14:17:25Z",
                          "publishedAt": "2024-03-20T14:17:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "I'm asking about PETSc because the compilation in Cardinal didn't pass. Do you know why?\nHere is the info:\n(base) [linux@localhost cardinal]$ make -j8 MAKEFLAGS=-j8\nCardinal is using HDF5 from    /home/linux/cardinal/contrib/moose/petsc/arch-moose\nCardinal is using MOOSE from   /home/linux/cardinal/contrib/moose\nCardinal is using NekRS from   /home/linux/cardinal/contrib/nekRS\nCardinal is using OpenMC from  /home/linux/cardinal/contrib/openmc\n\nCardinal is compiled with the following MOOSE modules\n  FLUID_PROPERTIES\n  HEAT_TRANSFER\n  NAVIER_STOKES\n  REACTOR\n  SOLID_PROPERTIES\n  STOCHASTIC_TOOLS\n  THERMAL_HYDRAULICS\n\n\nNot compiling MOOSE with NEML2 because NEML2_DIR is not a valid NEML2 checkout and/or libtorch is not enabled.\nTraceback (most recent call last):\n  File \"/home/linux/cardinal/contrib/moose/framework/scripts/get_repo_revision.py\", line 19, in <module>\n    from packaging import version\nModuleNotFoundError: No module named 'packaging'\nChecking if header needs updating: /home/linux/cardinal/contrib/moose/framework/include/base/MooseRevision.h...\n\\nFailed to generate MooseRevision.h\\n\nmake: *** [/home/linux/cardinal/contrib/moose/framework/moose.mk:351: /home/linux/cardinal/contrib/moose/framework/include/base/MooseRevision.h] Error 1\nmake: *** Waiting for unfinished jobs....",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8853883",
                          "updatedAt": "2024-03-20T14:27:08Z",
                          "publishedAt": "2024-03-20T14:27:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "You need to install the python package: packaging. And because this is missing, I am going to assume the following required Python packages are also missing and will need to be installed:\nconda create -n cardinal python=3.10 packaging pyaml jinja2\nconda activate cardinal\n\nAnd then attempt to build Cardinal.",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8854117",
                          "updatedAt": "2024-03-20T14:45:51Z",
                          "publishedAt": "2024-03-20T14:45:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "I'm a bit confused, I should be installing Cardinal in a non-conda environment, why should I use conda?",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8864773",
                          "updatedAt": "2024-03-21T11:51:33Z",
                          "publishedAt": "2024-03-21T11:51:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you can use conda to get the packages you are missing. Just dont bring ALL the packages you could use to install moose.\nIt s either that or someone from your HPC cluster adds the missing packages to everyone's python",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8865833",
                          "updatedAt": "2024-03-21T13:12:59Z",
                          "publishedAt": "2024-03-21T13:12:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Ethan-xj"
                          },
                          "bodyText": "I see. thank you",
                          "url": "https://github.com/idaholab/moose/discussions/27146#discussioncomment-8866196",
                          "updatedAt": "2024-03-21T13:39:49Z",
                          "publishedAt": "2024-03-21T13:39:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adding Bloch boundary condition in moose",
          "author": {
            "login": "adhithya96"
          },
          "bodyText": "I want to add bloch type boundary condition for a wave propagation problem that I am solving. The  boundary condition is applied on both the displacement and stress (gradient of displacement). There are two files I found in moose AddPeriodicBCAction.c and FunctionPeriodicBoundary.c. Can someone help me with how to proceed?",
          "url": "https://github.com/idaholab/moose/discussions/26854",
          "updatedAt": "2024-03-21T13:20:06Z",
          "publishedAt": "2024-02-21T05:40:10Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "adhithya96"
                  },
                  "bodyText": "I was trying to implement the suggestion in this #16419 by @crswong888. Ran into a problem of using complex number to signify the complex number  i in $\\exp(ikx)$ in the bloch periodic boundary condition. Any ideas how to solve this problem ?\nBasically incorporating the bloch periodic boundary condition i.e.\n$u_2 = u_1 * \\exp(ikx)$\nusing penalty formulation.",
                  "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8556098",
                  "updatedAt": "2024-02-22T12:17:27Z",
                  "publishedAt": "2024-02-22T12:16:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nYou ll want to split your equation in the real and imaginary part.\nAre u2 and u1 both complex numbers?",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8557755",
                          "updatedAt": "2024-02-22T14:41:04Z",
                          "publishedAt": "2024-02-22T14:41:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "No. So I'm solving an eigenvalue problem to get dispersion curves. The displacements will get eliminated. The unknowns are wave number and eigenfrequency\n$K - \\omega^2 M = 0$\nThanks for the quick reply. I am new to moose but the community is very helpful",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8557839",
                          "updatedAt": "2024-02-22T14:48:23Z",
                          "publishedAt": "2024-02-22T14:46:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Can you split this K - w2 M  equation in its real and imaginary part?",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8558538",
                          "updatedAt": "2024-02-22T15:44:21Z",
                          "publishedAt": "2024-02-22T15:44:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "adhithya96"
                  },
                  "bodyText": "Sorry for the late reply. I wrote a little derivation for the same. ABAQUS uses multipoint constraint to enforce bloch boundary condition.\n$$\\begin{equation}\n    \\begin{aligned}\n        u(x +  h_i)  &= u(x)\\text{exp}(i{k.h_i})\\\\\\\n        \\sigma(x +  h_i)  &= \\sigma(x)\\text{exp}(i{k.h_i})\\\\\\\n    \\end{aligned}\n\\end{equation}$$\n$$\\begin{equation}\n\\begin{aligned}\n    u(x) &=u^{Re}(x) + u^{Im}(x)\\\\\\\n    \\sigma(x) &= \\sigma^{Re}(x) + i\\sigma^{Im}(x)\\\\\\\n\\end{aligned}\n\\end{equation}$$\nSubstituting the second equation in first,\n$$\\begin{equation}\n\\begin{aligned}\n    u^{Re}(x + h) &= u^{Re}(x)cos(ka) - u^{Im}(x)sin(ka)\\\\\\\n    u^{Im}(x + h) &= u^{Re}(x)sin(ka) + u^{Im}(x)cos(ka)\\\\\\\n\\end{aligned}\n\\end{equation}$$\nand\n$$\\begin{equation}\n    \\begin{aligned}\n        \\sigma^{Re}(x + h) &= \\sigma^{Im}(x)sin(ka) - u^{Re}(x)cos(ka)\\\\\\\n        \\sigma^{Im}(x + h) &= -\\sigma^{Re}(x)sin(ka) - \\sigma^{Im}(x)cos(ka)\\\\\\\n    \\end{aligned}\n\\end{equation}$$\nI am using two variables with same set of kernels for both i.e. MatDiffusion and MassEigenKernel . I am using LinearNodalConstraint for the displacement equation. For the stress equation I am not sure how to go about it. This where I am stuck now.",
                  "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8616835",
                  "updatedAt": "2024-02-28T10:46:56Z",
                  "publishedAt": "2024-02-28T10:46:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "once you have the stress in real & imaginary part, you have to add this stress term in the solid mechanics equation.\nAre you planning to use the solid mechanics module? Or implement every equation yourself",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8623226",
                          "updatedAt": "2024-02-28T21:12:00Z",
                          "publishedAt": "2024-02-28T21:11:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "No this is like a traction boundary condition. Shouldn't I use some form of Neumann boundary condition ?\nThe problem is this\n$$\\begin{equation}\n\\begin{aligned}\n    \\nabla . (C(x)  : \\nabla_s u(x))  + \\omega^2\\rho(x)u(x)  &= 0\\\\\\\n    u(x +  h_i)  &= u(x)\\text{exp}(ik.h_i)\\\\\\\n    \\sigma(x + h_i). n(x + h_i) &= \\sigma(x).n(x)\\text{exp}(ik.h_i)\n\\end{aligned}\n\\end{equation}$$\nI am solving a simplified 1-D problem where the $C(x)$ term becomes $E$. I am using MatDiffusion kernel for this and for the other term MassEigenKernel. The two equations below are the boundary conditions.",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626078",
                          "updatedAt": "2024-02-29T05:17:59Z",
                          "publishedAt": "2024-02-29T05:17:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont see sigma in your first equation?\nDoes it come in through C?",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626096",
                          "updatedAt": "2024-02-29T05:20:05Z",
                          "publishedAt": "2024-02-29T05:20:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "The equilibrium equation is simplified by substituting the constitutive relation $\\sigma = C\\epsilon$",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626130",
                          "updatedAt": "2024-02-29T05:24:48Z",
                          "publishedAt": "2024-02-29T05:24:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok I see now.\nis epsilon related to u ?\nYou have two complex variables, you ll likely need two (complex) equations to have a well posed problem.\nThe first equation can be solved as two real equations with the right combination of kernels for each.\nThe boundary conditions can either be written as periodic BC if the size of the domain is right on the period (2 pi / k )?",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626160",
                          "updatedAt": "2024-02-29T05:30:28Z",
                          "publishedAt": "2024-02-29T05:30:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "$\\epsilon = 1/2(\\nabla u + \\nabla u^T)$\nRegarding the complex variables, in the literature they are using the same mesh consdiering uim and ur as separate components.\nPeriodicBC won't work because we need to vary the value of k within the first Briollouin zone which can be like $[0,2\\pi/a]$ to obtain omega for each. The goal is get the dispersion curves which is $\\omega$ vs $k$ graph. PeriodicBC supports only $u(x + h_i) = u(x)$",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626347",
                          "updatedAt": "2024-02-29T06:03:23Z",
                          "publishedAt": "2024-02-29T06:03:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok epsilon is strain.\n\nin the literature they are using the same mesh consdiering uim and ur as separate components.\n\nok good, we can do that.\nok no periodic BC.\nHow big is the solve going to be? I have a solution using functors, but it's not going to work in parallel without a lot more work.",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626424",
                          "updatedAt": "2024-02-29T06:12:52Z",
                          "publishedAt": "2024-02-29T06:12:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "adhithya96"
                  },
                  "bodyText": "Oh that's great. Parallel implementation won't be necessary. I will be using only 2-D mesh.",
                  "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626444",
                  "updatedAt": "2024-02-29T06:15:42Z",
                  "publishedAt": "2024-02-29T06:15:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "`[Mesh]\n[First]\ntype = GeneratedMeshGenerator\nelem_type = EDGE\ndim =  1\nxmin = 0\nxmax = 10\nnx = 10\n[]\n[]\n[Variables]\n[ur]\norder = FIRST\nfamily = LAGRANGE\n[]\n[uim]\norder = FIRST\nfamily = LAGRANGE\n[]\n[]\n[Kernels]\n[diff1]\ntype = Diffusion\nvariable = ur\n[]\n[diff2]\ntype = Diffusion\nvariable = uim\n[]\n[eigen1]\ntype = MassEigenKernel\nvariable = ur\n[]\n[eigen2]\ntype = MassEigenKernel\nvariable = uim\n[]\n[]\n[BCs]\n[]\n[Constraints]\n[./disp_x_1]\ntype = LinearNodalConstraint\nvariable = ur\nvariable_secondary = ur uim\nprimary = left\nweights = '0.7071 -0.7071'\nsecondary_node_set = right\npenalty = 1e8\nformulation = penalty\n[../]\n[./disp_x_1]\ntype = LinearNodalConstraint\nvariable = uim\nvariable_secondary = ur uim\nprimary = left\nweights = '-0.7071 0.7071'\nsecondary_node_set = right\npenalty = 1e8\nformulation = penalty\n[../]\n[]\n[Executioner]\ntype = Eigenvalue\neigen_problem_type = gen_non_hermitian\nwhich_eigen_pairs = SMALLEST_MAGNITUDE\nn_eigen_pairs = 5\nn_basis_vectors = 18\nsolve_type = jacobi_davidson\npetsc_options = '-eps_view'\n[]\n[Outputs]\nexodus = true\n[]'",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626446",
                          "updatedAt": "2024-02-29T06:16:08Z",
                          "publishedAt": "2024-02-29T06:16:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "This is the inp file I wrote for the case so far.",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626448",
                          "updatedAt": "2024-02-29T06:16:34Z",
                          "publishedAt": "2024-02-29T06:16:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok so starting from the FunctorDirichletBC, you create new BCs and modify mainly this routine. There are some other changes to validParams and the constructor to do as well.\nADReal\nFunctorDirichletBC::computeQpValue()\n{\n  // Rough pseudo codes, you ll need to get the syntax right, and add parameters (in validParam) to make it work\n  // Get point locator\n  const auto pl = _mesh.getPointLocator();\n  // Locate node on the other side of the geometry\n  // the translation will be a user parameter\n  new_node = pl.locate_node(_current_node + _translation_vector);\n\n  if (!new_node)\n    mooseError(\"Did not find the opposite side value);\n\n  const Moose::NodeArg space_arg = {new_node, Moose::INVALID_BLOCK_ID};\n\n\n  const Moose::StateArg time_arg = Moose::currentState();\n  return _coef(space_arg, time_arg) * _functor(space_arg, time_arg) * A exp(.....);\n  // A and the exp depend on whether you are doing the real or imaginary part\n}\n\nthen recompile and use it in the input",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626488",
                          "updatedAt": "2024-02-29T06:21:31Z",
                          "publishedAt": "2024-02-29T06:21:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "This is for the bloch boundary condition for displacement right ? But displacement boundary condition I can  apply using LinearNodalConstraint. It is the traction boundary condition where I am stuck.",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626508",
                          "updatedAt": "2024-02-29T06:25:43Z",
                          "publishedAt": "2024-02-29T06:25:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "Ok. will look into FunctorNeumannBC also ang get back. Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626608",
                          "updatedAt": "2024-02-29T06:35:48Z",
                          "publishedAt": "2024-02-29T06:35:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ah good point. I lost track.\nYes if you can formulate it as a FunctorNeumannBC that could work.",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8626636",
                          "updatedAt": "2024-02-29T06:38:05Z",
                          "publishedAt": "2024-02-29T06:38:04Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "adhithya96"
                  },
                  "bodyText": "https://github.com/adhithya96/Static1D\nI tried out what you had suggested. BlochDirichletBC.C and BlochDirichletBC.h. (I couldn't upload all the files. Have to set up the github repository locally. will do it in a few days). I got these errors.\n'const class std::unique_ptrlibMesh::PointLocatorBase' has no member named 'locate_node'\n54 |   const auto new_node = pl.locate_node(_current_node + _translation_vector);\n|                            ^~~~~~~~~~~\n/home/adhithyar/Documents/Project/static1d/src/BlochDirichletBC.C:54:56: error: '_translation_vector' was not declared in this scope\n54 |   const auto new_node = pl.locate_node(_current_node + _translation_vector);\nCouple of questions I have.\n\nWhat does the _functor and _coeff do ?\nI was also trying to write a similar code for Neumann case. How do I mention the gradient of u on the one side of periodic boundary condition ?\nIs there anyway to learn how the code is written ?",
                  "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8639951",
                  "updatedAt": "2024-03-01T08:22:12Z",
                  "publishedAt": "2024-03-01T08:20:35Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "yes this was pseudo code. You have to find the actual names of the routines\nsee the doxygen\nhttps://mooseframework.inl.gov/docs/doxygen/libmesh/classlibMesh_1_1PointLocatorBase.html\nyou need to add _translation_vector to the header too\n\nFunctor and coef can be evaluated anywhere on the mesh and provide the local field value\nFrom a functor, you can get the gradient with _functor.gradient(r,t)\nUse the doxygen. Or the VSCode integration that's also super helpful. And look at other objects in the folders",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8644410",
                          "updatedAt": "2024-03-01T15:22:29Z",
                          "publishedAt": "2024-03-01T15:22:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "After going through the doxygen, I am even more confused. I get the error _curren_node is a const Node* but locate_node takes libMesh::point &  as the argument. I couldn't find any way to get  the  libMesh::point data from _mesh. The question I have is how is MOOSE able to convert the boundary condition specified by lets' say\n[BCs]\n    [fixed1]\n        type = DirichletBC\n        variable = u\n        boundary = 'boundary'\n        value = 0\n    []\n[]\n\nIn the code  we don't write for every point in the specified boundary.",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8678157",
                          "updatedAt": "2024-03-05T10:10:50Z",
                          "publishedAt": "2024-03-05T10:10:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "A node can be caster to a point automatically. But a node pointer is not.\nJust do *_current_node to get a Node and it can be used in lieu of a Point",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8680164",
                          "updatedAt": "2024-03-05T13:19:12Z",
                          "publishedAt": "2024-03-05T13:19:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The dirichlet BC is applied on every node that is part of the 'nodeset' boundary",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8680172",
                          "updatedAt": "2024-03-05T13:19:52Z",
                          "publishedAt": "2024-03-05T13:19:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "adhithya96"
                  },
                  "bodyText": "@GiudGiud\nThis worked! I have implemented the bloch boundary condition for imaginary and real part of displacement. However, when I run the input file, I am getting the following error\nInvalid NodalBC for eigenvalue problems, please use homogeneous (array) Dirichlet\n\nI've added all the files in a github repository - Static1d\nAny suggestions on how to proceed ?",
                  "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8706428",
                  "updatedAt": "2024-03-07T12:07:11Z",
                  "publishedAt": "2024-03-07T12:07:10Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Are you using array variables?",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8708782",
                          "updatedAt": "2024-03-07T15:11:30Z",
                          "publishedAt": "2024-03-07T15:11:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "I am using liMesh::Point to create  the translation vector\nADReal\nBlochDirichletBCReal::computeQpValue()\n{\n  //Get point  locator  \n  const auto pl = _mesh.getPointLocator();\n  //Locate node on the other side of the geometry\n  //The translation vector will be a user parameter\n  libMesh::Point _translation_vec= libMesh::Point(_lattice_vec, 0.0, 0.0);\n  const auto new_node = pl->locate_node(*_current_node + _translation_vec);\n\n\n  if(!new_node)\n    mooseError(\"Did not find the opposite side value\");\n  \n  const Moose::NodeArg space_arg = {new_node, Moose::INVALID_BLOCK_ID};\n  \n  const Moose::StateArg time_arg = Moose::currentState();\n\n  return _coef(space_arg, time_arg) * (_ur(space_arg, time_arg) * cos (_wave_num * _lattice_vec)  -  _uim(space_arg, time_arg) * sin (_wave_num * _lattice_vec));\n\n}\n\nIt's the same for the imaginary part except for the return statement.",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8740690",
                          "updatedAt": "2024-03-11T05:01:41Z",
                          "publishedAt": "2024-03-11T05:01:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "do you have an input I can check out? This error is complaining about the base class of the BC. It does not seem to fit either the variable type or the solve type",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8749347",
                          "updatedAt": "2024-03-11T17:37:58Z",
                          "publishedAt": "2024-03-11T17:37:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "Static1D\nThis link has the file static1D_periodic_eigen.i which is what  I am using. I have also put the files needed  to run the input file. This is  how the input file looks like\n[Mesh]\n    [First]\n        type = GeneratedMeshGenerator\n        elem_type = EDGE\n        dim =  1\n        xmin = 0\n        xmax = 10\n        nx = 10\n    []\n[]\n  \n[Variables]\n    [ur]\n        order = FIRST\n        family = LAGRANGE\n    []\n    [uim]\n        order = FIRST\n        family = LAGRANGE\n    []\n[]\n\n[Kernels]\n    [diff1]\n        type = MatDiffusion\n        variable = ur\n        diffusivity = diffusivity \n    []\n    [diff2]\n        type = MatDiffusion\n        variable = uim\n        diffusivity = diffusivity \n    []\n    [eigen1]\n        type = CoefReaction\n        variable = ur\n        coefficient = -1.0\n        extra_vector_tags = 'eigen'\n    []\n    [eigen2]\n        type = CoefReaction\n        variable = uim\n        coefficient = -1.0\n        extra_vector_tags = 'eigen'\n    []\n[]\n\n[BCs]\n    [Blochur]\n        type = BlochDirichletBCReal\n        variable = ur\n        ur = 'ur'\n        uim = 'uim'\n        lattice_length = 10.0\n        wave_number = 1.732\n        boundary = 'left'\n    []\n    [Blochuim]\n        type = BlochDirichletBCImag\n        variable = uim\n        ur = 'ur'\n        uim = 'uim'\n        lattice_length = 10\n        wave_number = 1.732\n        boundary ='left'\n    []\n[]\n\n[Materials]\n    [nm]\n      type = GenericConstantMaterial\n      prop_names = 'diffusivity'\n      prop_values = 0.333333333333333333\n    []\n[]\n\n[Constraints]\n\n[]\n  \n[Executioner]\n    type = Eigenvalue\n    eigen_problem_type = gen_non_hermitian\n    which_eigen_pairs = SMALLEST_MAGNITUDE\n    n_eigen_pairs = 5\n    n_basis_vectors = 18\n    solve_type = jacobi_davidson\n    petsc_options = '-eps_view'\n[]\n  \n[Outputs]\n    exodus = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8754524",
                          "updatedAt": "2024-03-12T04:32:03Z",
                          "publishedAt": "2024-03-12T04:32:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Thanks I ll try this out tomorrow.\n@cticenhour who is a good person for complex eigenvalue problems ?",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8754907",
                          "updatedAt": "2024-03-12T05:34:13Z",
                          "publishedAt": "2024-03-12T05:34:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "Thanks @GiudGiud . I don't think this is a complex eigenvalue problem as we are using two different variables ur and uim to solve the problem.",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8755311",
                          "updatedAt": "2024-03-12T06:35:32Z",
                          "publishedAt": "2024-03-12T06:35:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@adhithya96 Static1D does not compile for me. I had to change this:\n  // Get point  locator\n  const auto pl = _mesh.getPointLocator();\n  // Locate node on the other side of the geometry\n  // The translation vector will be a user parameter\n  const auto current_point = *_current_node;\n  //  const libMesh::Point current_point = pl->Point();\n  const auto new_node = pl->locate_node(current_point);\n\nin the BlochBC\nalso need to enable XFEM in the Makefile",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8781336",
                          "updatedAt": "2024-03-14T04:37:11Z",
                          "publishedAt": "2024-03-14T04:35:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "once it compiled I hit the same error as on the other discussion\n\n*** ERROR ***\nThe following error occurred in the object \"cut_mesh\", of type \"InterfaceMeshCut2DUserObject\".\n\ncutFragmentByGeometry not yet implemented for InterfaceMeshCut2DUserObject\n\n\nthis makes sense. I ll wait for your reply over there",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8781358",
                          "updatedAt": "2024-03-14T04:39:18Z",
                          "publishedAt": "2024-03-14T04:39:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "adhithya96"
                          },
                          "bodyText": "My sincere apologies,\nI thought I had updated the BlochBC related files on github but I hadn't. I have updated the files. eigen1d. I have checked this. This one compiles properly.\nThe overall problem I'm solving is to evaluate the  dispersion curves  for phononic crystals using XFEM. I have to solve the eigenvalue problem for multiple values of wave number. I have simplified the problem so that I can approach it one step at a time",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8781882",
                          "updatedAt": "2024-03-14T06:05:18Z",
                          "publishedAt": "2024-03-14T06:05:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "how are you getting around this?\n*** ERROR ***\nThe following error occurred in the object \"cut_mesh\", of type \"InterfaceMeshCut2DUserObject\".\n\ncutFragmentByGeometry not yet implemented for InterfaceMeshCut2DUserObject\n\nI wanted to hit this error\nInvalid NodalBC for eigenvalue problems, please use homogeneous (array) Dirichlet\n\nbut the other one came first",
                          "url": "https://github.com/idaholab/moose/discussions/26854#discussioncomment-8789541",
                          "updatedAt": "2024-03-14T17:33:28Z",
                          "publishedAt": "2024-03-14T17:33:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Access out of bounds in MooseArray error in dg kernels",
          "author": {
            "login": "FanZhangchen"
          },
          "bodyText": "Hi all,\nI meet a problem when I am trying to implement DG kernels. I got some info in the debug mode,\nAssertion `i < _size' failed\nAccess out of bounds in MooseArray (i: 2 size: 2)\nat /home/fanzhangchen/projects/moose/framework/build/header_symlinks/MooseArray.h, line 275\nStack frames: 17\n0: libMesh::print_trace(std::ostream&)\n1: /home/fanzhangchen/projects/cdf_update/lib/libcdf_update-dbg.so.0(+0x6ad2f) [0x7ffff7ea5d2f]\n2: CrystalPlasticityBussoUpdate::initQpStatefulProperties()\n3: MaterialBase::initStatefulProperties(unsigned int)\n4: MaterialPropertyStorage::initStatefulProps(unsigned int, std::vector<std::shared_ptr<MaterialBase>, std::allocator<std::shared_ptr<MaterialBase> > > const&, unsigned int, libMesh::Elem const&, unsigned int)\n5: ComputeMaterialsObjectThread::onElement(libMesh::Elem const*)\n6: ThreadedElementLoopBase<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> >::operator()(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&, bool)\n7: /home/fanzhangchen/projects/moose/framework/libmoose-dbg.so.0(+0xf60494) [0x7ffff3560494]\n8: FEProblemBase::initElementStatefulProps(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&, bool)\n9: FEProblemBase::initialSetup()\n10: Transient::init()\n11: MooseApp::executeExecutioner()\n12: MooseApp::run()\n13: main\n14: /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7fffe7829d90]\n15: __libc_start_main\n16: /home/fanzhangchen/projects/cdf_update/cdf_update-dbg(+0x3079) [0x555555557079]\n[0] /home/fanzhangchen/projects/moose/framework/build/header_symlinks/MooseArray.h, line 275, compiled Jan 25 2024 at 19:51:34\n\nBut I am not sure how to fix it. Could anyone give me some advice?\nBest Regards,",
          "url": "https://github.com/idaholab/moose/discussions/26649",
          "updatedAt": "2024-03-21T13:16:18Z",
          "publishedAt": "2024-01-26T08:21:20Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "Stateful material properties and DG kernels are not often used together, so it's possible that there are some bugs. Could you paste an example input file or link to a public github repo with the input that triggers this failed assertion?",
                  "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8259569",
                  "updatedAt": "2024-01-26T16:52:05Z",
                  "publishedAt": "2024-01-26T16:52:04Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "Here is an input file\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n[]\n\n[Mesh]\n  [./gen]\n    type = GeneratedMeshGenerator\n    dim = 2\n    nx = 2\n    ny = 2\n    xmin = 0.0\n    ymin = 0.0\n    xmax = 0.4\n    ymax = 0.4\n  []\n[]\n\n[Variables]\n  [disp_x]\n    order = FIRST\n      family = LAGRANGE\n  []\n  [disp_y]\n    order = FIRST\n      family = LAGRANGE\n  []\n  [rho_edge_pos_1]\n    initial_condition = 1.e6\n  []\n  [rho_edge_neg_1]\n    initial_condition = 1.e6\n  []\n  [rho_edge_pos_2]\n    initial_condition = 1.e6\n  []\n  [rho_edge_neg_2]\n    initial_condition = 1.e6\n  []\n[]\n\n[AuxVariables]\n  [./pk2]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./fp_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./exy]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./slip_increment]\n   order = CONSTANT\n   family = MONOMIAL\n  [../]\n  [./dislo_velocity]\n   order = CONSTANT\n   family = MONOMIAL\n  [../]\n  [./epeq]\n   order = CONSTANT\n   family = MONOMIAL\n  [../]\n[]\n\n[Functions]\n  [disp_load]\n    type = ParsedFunction\n    value = '0.005*4*t'\n  []\n[]\n\n[Modules/TensorMechanics/Master/all]\n  strain = FINITE\n  add_variables = true\n  generate_output = 'stress_xy'\n  additional_generate_output = 'strain_xy'\n[]\n\n[Kernels]\n\n  [Edeg_Pos_Time_Deri_1]\n    type = TimeDerivative\n    variable = rho_edge_pos_1\n  []\n  [Edge_Pos_Flux_1]\n    type = ConservativeAdvectionSchmid\n    variable = rho_edge_pos_1\n    upwinding_type = none\n      dislo_sign = positive\n      slip_sys_index = 0\n      dislo_character = edge\n  []\n\n  [Edeg_Neg_Time_Deri_1]\n    type = TimeDerivative\n    variable = rho_edge_neg_1\n  []\n  [Edge_Neg_Flux_1]\n    type = ConservativeAdvectionSchmid\n    variable = rho_edge_neg_1\n    upwinding_type = none\n      dislo_sign = negative\n      slip_sys_index = 0\n      dislo_character = edge\n  []\n\n  [Edeg_Pos_Time_Deri_2]\n    type = TimeDerivative\n    variable = rho_edge_pos_2\n  []\n  [Edge_Pos_Flux_2]\n    type = ConservativeAdvectionSchmid\n    variable = rho_edge_pos_2\n    upwinding_type = none\n      dislo_sign = positive\n      slip_sys_index = 1\n      dislo_character = edge\n  []\n\n  [Edeg_Neg_Time_Deri_2]\n    type = TimeDerivative\n    variable = rho_edge_neg_2\n  []\n  [Edge_Neg_Flux_2]\n    type = ConservativeAdvectionSchmid\n    variable = rho_edge_neg_2\n    upwinding_type = none\n      dislo_sign = negative\n      slip_sys_index = 1\n      dislo_character = edge\n  []\n\n[]\n\n[DGKernels]\n\n  [dg_edge_pos_1]\n    type = DGAdvectionCoupled\n    variable = rho_edge_pos_1\n      dislo_character = edge\n      dislo_sign = positive\n      slip_sys_index = 0\n  []\n\n  [dg_edge_neg_1]\n    type = DGAdvectionCoupled\n    variable = rho_edge_neg_1\n      dislo_character = edge\n      dislo_sign = negative\n      slip_sys_index = 0\n  []\n\n  [dg_edge_pos_2]\n    type = DGAdvectionCoupled\n    variable = rho_edge_pos_2\n      dislo_character = edge\n      dislo_sign = positive\n      slip_sys_index = 1\n  []\n\n  [dg_edge_neg_2]\n    type = DGAdvectionCoupled\n    variable = rho_edge_neg_2\n      dislo_character = edge\n      dislo_sign = negative\n      slip_sys_index = 1\n  []\n\n[]\n\n[AuxKernels]\n  [./pk2]\n   type = RankTwoAux\n   variable = pk2\n   rank_two_tensor = second_piola_kirchhoff_stress\n   index_j = 0\n   index_i = 0\n   execute_on = timestep_end\n  [../]\n  [./exy]\n    type = RankTwoAux\n    variable = exy\n    rank_two_tensor = total_lagrangian_strain\n    index_j = 0\n    index_i = 1\n    execute_on = timestep_end\n  [../]\n  [./fp_xx]\n    type = RankTwoAux\n    variable = fp_xx\n    rank_two_tensor = plastic_deformation_gradient\n    index_j = 0\n    index_i = 0\n    execute_on = timestep_end\n  [../]\n  [./slip_inc]\n   type = MaterialStdVectorAux\n   variable = slip_increment\n   property = slip_increment\n   index = 0\n   execute_on = timestep_end\n  [../]\n  [./dislo_vel]\n   type = MaterialStdVectorAux\n   variable = dislo_velocity\n   property = dislo_velocity\n   index = 0\n   execute_on = timestep_end\n  [../]\n  [./epeq]\n   type = MaterialRealAux\n   variable = epeq\n   property = accumulated_equivalent_plastic_strain\n   execute_on = timestep_end\n  [../]\n[]\n\n[Materials]\n  [./elasticity_tensor]\n    type = ComputeElasticityTensorCP\n    C_ijkl = '1.129e5 0.664e5 0.664e5 1.129e5 0.664e5 1.129e5 0.279e5 0.279e5 0.279e5'\n    fill_method = symmetric9\n    euler_angle_1 = 0.0\n    euler_angle_2 = 0.0 \n    euler_angle_3 = 0.0 \n  [../]\n  [./stress]\n    type = ComputeCrystalPlasticityDislocationStress\n    crystal_plasticity_models = 'trial_xtalpl'\n    tan_mod_type = exact\n  [../]\n  [./trial_xtalpl]\n    type = CrystalPlasticityBussoUpdate\n    number_slip_systems = 2\n    slip_sys_file_name = input_slip_sys_al.txt\n      w1 = 0.0\n      w2 = 0.0\n      tau_0 = 8.0\n      p = 0.141\n      q = 1.1\n      f0 = 3.e-19\n      gdot0 = 1.73e6\n    edge_dislo_den_pos_1 = rho_edge_pos_1\n    edge_dislo_den_neg_1 = rho_edge_neg_1\n    edge_dislo_den_pos_2 = rho_edge_pos_2\n    edge_dislo_den_neg_2 = rho_edge_neg_2\n  [../]\n[]\n\n[BCs]\n  [bottom_x]\n    type = DirichletBC\n    variable = disp_x\n    boundary = 'bottom'\n    value = 0.0\n  []\n  [bottom_y]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'bottom'\n    value = 0.0\n  []\n\n  [top_x]\n    type = FunctionDirichletBC\n    variable = disp_x\n    boundary = 'top'\n    function = disp_load\n  []\n  [top_y]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'top'\n    value = 0.0\n  []\n\n  # [./Periodic]\n\n  #   [./auto_boundary_x]\n  #     variable = disp_x\n  #     primary = 'left'\n  #   secondary = 'right'\n  #   translation = '0.04 0.0 0.0'\n  #   [../]\n\n  #   [./auto_boundary_y]\n  #     variable = disp_y\n  #     primary = 'left'\n  #   secondary = 'right'\n  #   translation = '0.04 0.0 0.0'\n  #   [../]\n\n  #   [./auto_rho_edge_pos_boundary_x_1]\n  #     variable = rho_edge_pos_1\n  #     primary = 'left'\n  #   secondary = 'right'\n  #   translation = '0.04 0.0 0.0'\n  #   [../]\n\n  #   [./auto_rho_edge_neg_boundary_x_1]\n  #     variable = rho_edge_neg_1\n  #     primary = 'left'\n  #   secondary = 'right'\n  #   translation = '0.04 0.0 0.0'\n  #   [../]\n\n  #   [./auto_rho_edge_pos_boundary_x_2]\n  #     variable = rho_edge_pos_2\n  #     primary = 'left'\n  #   secondary = 'right'\n  #   translation = '0.04 0.0 0.0'\n  #   [../]\n\n  #   [./auto_rho_edge_neg_boundary_x_2]\n  #     variable = rho_edge_neg_2\n  #     primary = 'left'\n  #   secondary = 'right'\n  #   translation = '0.04 0.0 0.0'\n  #   [../]\n\n  # [../]\n\n[]\n\n[Preconditioning]\n  active = 'smp'\n  [./smp]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n\n  type = Transient\n  solve_type = 'NEWTON'\n  petsc_options = '-snes_ksp_ew'\n  petsc_options_iname = '-pc_type -pc_hypre_type -ksp_gmres_restart'\n  petsc_options_value = 'lu    boomeramg          31'\n  line_search = 'none'\n  l_max_its = 50\n  nl_max_its = 50\n  nl_rel_tol = 1e-5\n  nl_abs_tol = 1e-3\n  l_tol = 1e-5\n\n  start_time = 0.0\n  end_time = 0.01 #0.5\n  dt = 5.e-6\n  dtmin = 1.e-9\n[]\n\n[Postprocessors]\n  [./stress_xy]\n    type = ElementAverageValue\n    variable = stress_xy\n  [../]\n  [./pk2]\n   type = ElementAverageValue\n   variable = pk2\n  [../]\n  [./fp_xx]\n    type = ElementAverageValue\n    variable = fp_xx\n  [../]\n  [./exy]\n    type = ElementAverageValue\n    variable = exy\n  [../]\n  [./slip_increment]\n   type = ElementAverageValue\n   variable = slip_increment\n  [../]\n  [./dislo_velocity]\n   type = ElementAverageValue\n   variable = dislo_velocity\n  [../]\n  [./disp_x]\n     type = NodalVariableValue\n     variable = disp_x\n     nodeid = 1\n  [../]\n  [./strain_xy]\n    type = ElementAverageValue\n    variable = strain_xy\n  [../]\n  [./epeq]\n    type = ElementAverageValue\n    variable = epeq\n  [../]\n[]\n\n[VectorPostprocessors]\n  [rhoep]\n    type = LineValueSampler\n    variable = rho_edge_pos_1\n    start_point = '0.005 0 0'\n    end_point = '0.005 0.1 0'\n    num_points = 51\n    sort_by = y\n  []\n  [rhoen]\n    type = LineValueSampler\n    variable = rho_edge_neg_1\n    start_point = '0.005 0 0'\n    end_point = '0.005 0.1 0'\n    num_points = 51\n    sort_by = y\n  []\n[]\n\n[Outputs]\n  exodus = true\n  interval = 20\n  [csv]\n    type = CSV\n    file_base = dg_test\n    execute_on = final\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8263416",
                          "updatedAt": "2024-01-27T04:47:06Z",
                          "publishedAt": "2024-01-27T04:47:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "Hi,\nDo you know how to solve these problems with my input file? I would like to use crystal plasticity with the dg kernels since I have a transport equation.\nBest,\nzc",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8352548",
                          "updatedAt": "2024-02-03T03:50:31Z",
                          "publishedAt": "2024-02-03T03:50:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "sorry it's taken a while to respond. I was about to run your input file, but then I saw the ConservativeAdvectionSchmid object, which is not a MOOSE object. If you want me to be able to run your input as-is, I'll need to be able to access a github repo with that object",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8403032",
                          "updatedAt": "2024-02-08T03:57:46Z",
                          "publishedAt": "2024-02-08T03:57:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "Here is the github repo of my project.\nhttps://github.com/FanZhangchen/cdf_update/tree/dev\nPlease check it. Thanks",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8408100",
                          "updatedAt": "2024-02-08T14:19:32Z",
                          "publishedAt": "2024-02-08T14:19:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Can you fix these reorder errors?\nIn file included from /home/lindad/projects/cdf_update/src/materials/CrystalPlasticityBussoUpdate.C:7,\n                 from /home/lindad/projects/cdf_update/build/unity_src/materials_Unity.C:3:\n/home/lindad/projects/cdf_update/build/header_symlinks/CrystalPlasticityBussoUpdate.h: In constructor 'CrystalPlasticityBussoUpdate::CrystalPlasticityBussoUpdate(const InputParameters&)':\n/home/lindad/projects/cdf_update/build/header_symlinks/CrystalPlasticityBussoUpdate.h:133:28: error: 'CrystalPlasticityBussoUpdate::_grad_rhoep1' will be initialized after [-Werror=reorder]\n  133 |   const VariableGradient & _grad_rhoep1;\n      |                            ^~~~~~~~~~~~\n/home/lindad/projects/cdf_update/build/header_symlinks/CrystalPlasticityBussoUpdate.h:131:25: error:   'const VariableValue& CrystalPlasticityBussoUpdate::_rho_edge_neg_1' [-Werror=reorder]\n  131 |   const VariableValue & _rho_edge_neg_1;\n      |                         ^~~~~~~~~~~~~~~\n/home/lindad/projects/cdf_update/src/materials/CrystalPlasticityBussoUpdate.C:41:1: error:   when initialized here [-Werror=reorder]\n   41 | CrystalPlasticityBussoUpdate::CrystalPlasticityBussoUpdate(\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/lindad/projects/cdf_update/build/header_symlinks/CrystalPlasticityBussoUpdate.h:140:28: error: 'CrystalPlasticityBussoUpdate::_grad_rhoep2' will be initialized after [-Werror=reorder]\n  140 |   const VariableGradient & _grad_rhoep2;\n      |                            ^~~~~~~~~~~~\n/home/lindad/projects/cdf_update/build/header_symlinks/CrystalPlasticityBussoUpdate.h:138:25: error:   'const VariableValue& CrystalPlasticityBussoUpdate::_rho_edge_neg_2' [-Werror=reorder]\n  138 |   const VariableValue & _rho_edge_neg_2;\n      |                         ^~~~~~~~~~~~~~~\n/home/lindad/projects/cdf_update/src/materials/CrystalPlasticityBussoUpdate.C:41:1: error:   when initialized here [-Werror=reorder]\n   41 | CrystalPlasticityBussoUpdate::CrystalPlasticityBussoUpdate(\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/lindad/projects/cdf_update/build/header_symlinks/CrystalPlasticityBussoUpdate.h:184:41: error: 'CrystalPlasticityBussoUpdate::_dislo_velocity' will be initialized after [-Werror=reorder]\n  184 |   MaterialProperty<std::vector<Real>> & _dislo_velocity;\n      |                                         ^~~~~~~~~~~~~~~\n/home/lindad/projects/cdf_update/build/header_symlinks/CrystalPlasticityBussoUpdate.h:180:28: error:   'MaterialProperty<double>& CrystalPlasticityBussoUpdate::_accumulated_equivalent_plastic_strain' [-Werror=reorder]\n  180 |   MaterialProperty<Real> & _accumulated_equivalent_plastic_strain;\n      |                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/lindad/projects/cdf_update/src/materials/CrystalPlasticityBussoUpdate.C:41:1: error:   when initialized here [-Werror=reorder]\n   41 | CrystalPlasticityBussoUpdate::CrystalPlasticityBussoUpdate(\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\ncc1plus: some warnings being treated as errors",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8410286",
                          "updatedAt": "2024-02-08T17:22:59Z",
                          "publishedAt": "2024-02-08T17:22:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "Sure, I will fix these reorder errors. But I think you are on the main branch, not the dev branch with dgkernels inside.",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8420530",
                          "updatedAt": "2024-02-09T15:49:17Z",
                          "publishedAt": "2024-02-09T15:49:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "You were right that I was on the main branch instead of dev. But when I switch to dev, I still get the same order compilation errors",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8445962",
                          "updatedAt": "2024-02-12T19:29:31Z",
                          "publishedAt": "2024-02-12T19:29:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "Sorry for my late reply. I have fixed the reorder errors and updated the GitHub repo.",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8563729",
                          "updatedAt": "2024-02-23T03:01:31Z",
                          "publishedAt": "2024-02-23T03:01:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I get\n*** ERROR ***\nUnable to open file \"/home/lindad/projects/cdf_update/problems/DGTest/input_slip_sys_al.txt\". Check to make sure that it exists and that you have read permission.\n\nprobably because you didn't check that file into git. The default MOOSE application .gitignore ignores *.txt files so in order to add it to git you will probably have to use git add -f",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8601907",
                          "updatedAt": "2024-02-27T08:01:08Z",
                          "publishedAt": "2024-02-27T08:01:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "You are right. I have added this file to git. Please recheck it.",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8601983",
                          "updatedAt": "2024-02-27T08:06:48Z",
                          "publishedAt": "2024-02-27T08:06:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "FanZhangchen"
                  },
                  "bodyText": "Hi @lindsayad ,\nI did not change anything, but I got this segmentation fault after I updated the MOOSE. Here is the info in gdb,\nThread 1 \"cdf_update-dbg\" received signal SIGSEGV, Segmentation fault.\n0x00007ffff383d3d5 in CrystalPlasticityBussoUpdate::calculateSlipResistance (this=0x55555606b710) at /home/fanzhangchen/projects/cdf_update/src/materials/CrystalPlasticityBussoUpdate.C:427\n427\t    _slip_resistance[_qp][i] =\n(gdb) bt\n#0  0x00007ffff383d3d5 in CrystalPlasticityBussoUpdate::calculateSlipResistance\n    (this=0x55555606b710)\n    at /home/fanzhangchen/projects/cdf_update/src/materials/CrystalPlasticityBussoUpdate.C:427\n#1  0x00007ffff3834808 in ComputeCrystalPlasticityDislocationStress::solveQp (\n    this=0x5555560309c0)\n    at /home/fanzhangchen/projects/cdf_update/src/materials/ComputeCrystalPlasticityDislocationStress.C:276\n#2  0x00007ffff38344c9 in ComputeCrystalPlasticityDislocationStress::updateStress (this=0x5555560309c0, cauchy_stress=..., jacobian_mult=...)\n    at /home/fanzhangchen/projects/cdf_update/src/materials/ComputeCrystalPlasticityDislocationStress.C:238\n#3  0x00007ffff3834094 in ComputeCrystalPlasticityDislocationStress::computeQpStress (this=0x5555560309c0)\n    at /home/fanzhangchen/projects/cdf_update/src/materials/ComputeCrystalPlasticityDislocationStress.C:191\n#4  0x00007ffff2946592 in ComputeGeneralStressBase::computeQpProperties (\n    this=0x5555560309c0)\n    at /home/fanzhangchen/projects/moose/modules/solid_mechanics/src/materials/ComputeGeneralStressBase.C:46\n#5  0x00007ffff5a80c4a in Material::computeProperties (this=0x5555560309c0)\n    at /home/fanzhangchen/projects/moose/framework/src/materials/Material.C:139\n#6  0x00007ffff4982d33 in MaterialData::reinit<std::vector<std::shared_ptr<MaterialBase>, std::allocator<std::shared_ptr<MaterialBase> > > > (\n    this=0x555555d33d00, mats=...)\n    at /home/fanzhangchen/projects/moose/framework/build/header_symlinks/MaterialData.h:329\n#7  0x00007ffff4908d7f in FEProblemBase::reinitMaterialsNeighbor (\n    this=0x555555d2f760, blk_id=0, tid=0, swap_stateful=true, reinit_mats=0x0)\n    at /home/fanzhangchen/projects/moose/framework/src/problems/FEProblemBase.C:3628\n#8  0x00007ffff6472bb4 in NonlinearThread::onInternalSide (\n    this=0x7fffffff9860, elem=0x555555d15a30, side=2)\n--Type <RET> for more, q to quit, c to continue without paging--c\n    at /home/fanzhangchen/projects/moose/framework/src/loops/NonlinearThread.C:257\n#9  0x00007ffff4994a43 in ThreadedElementLoopBase<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> >::operator() (this=0x7fffffff9860, range=..., bypass_threading=false) at /home/fanzhangchen/projects/moose/framework/build/header_symlinks/ThreadedElementLoopBase.h:283\n#10 0x00007ffff64717e7 in NonlinearThread::operator() (this=0x7fffffff9860, range=..., bypass_threading=false) at /home/fanzhangchen/projects/moose/framework/src/loops/NonlinearThread.C:60\n#11 0x00007ffff51c3c27 in libMesh::Threads::parallel_reduce<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*>, ComputeResidualThread> (range=..., body=...) at /home/fanzhangchen/mambaforge3/envs/moose/libmesh/include/libmesh/threads_pthread.h:370\n#12 0x00007ffff518ac63 in NonlinearSystemBase::computeResidualInternal (this=0x555555d50d50, tags=...) at /home/fanzhangchen/projects/moose/framework/src/systems/NonlinearSystemBase.C:1702\n#13 0x00007ffff51822c0 in NonlinearSystemBase::computeResidualTags (this=0x555555d50d50, tags=...) at /home/fanzhangchen/projects/moose/framework/src/systems/NonlinearSystemBase.C:791\n#14 0x00007ffff4933bd0 in FEProblemBase::computeResidualTags (this=0x555555d2f760, tags=...) at /home/fanzhangchen/projects/moose/framework/src/problems/FEProblemBase.C:6566\n#15 0x00007ffff4930de7 in FEProblemBase::computeResidualInternal (this=0x555555d2f760, soln=..., residual=..., tags=...) at /home/fanzhangchen/projects/moose/framework/src/problems/FEProblemBase.C:6402\n#16 0x00007ffff492f23d in FEProblemBase::computeResidual (this=0x555555d2f760, soln=..., residual=..., nl_sys_num=0) at /home/fanzhangchen/projects/moose/framework/src/problems/FEProblemBase.C:6223\n#17 0x00007ffff492ed74 in FEProblemBase::computeResidualSys (this=0x555555d2f760, sys=..., soln=..., residual=...) at /home/fanzhangchen/projects/moose/framework/src/problems/FEProblemBase.C:6194\n#18 0x00007ffff517901d in NonlinearSystem::solve (this=0x555555d50d50) at /home/fanzhangchen/projects/moose/framework/src/systems/NonlinearSystem.C:147\n#19 0x00007ffff492610f in FEProblemBase::solve (this=0x555555d2f760, nl_sys_num=0) at /home/fanzhangchen/projects/moose/framework/src/problems/FEProblemBase.C:5843\n#20 0x00007ffff535e390 in FEProblemSolve::solve (this=0x555555d8c2e0) at /home/fanzhangchen/projects/moose/framework/src/executioners/FEProblemSolve.C:285\n#21 0x00007ffff536332e in FixedPointSolve::solveStep (this=0x555555d8c560, begin_norm=@0x55555692bb90: 0, end_norm=@0x55555639d2a0: 0, transformed_dofs=...) at /home/fanzhangchen/projects/moose/framework/src/executioners/FixedPointSolve.C:426\n#22 0x00007ffff53621f4 in FixedPointSolve::solve (this=0x555555d8c560) at /home/fanzhangchen/projects/moose/framework/src/executioners/FixedPointSolve.C:278\n#23 0x00007ffff68095a2 in TimeStepper::step (this=0x555555f95eb0) at /home/fanzhangchen/projects/moose/framework/src/timesteppers/TimeStepper.C:168\n#24 0x00007ffff5372226 in Transient::takeStep (this=0x555555d8bf60, input_dt=-1) at /home/fanzhangchen/projects/moose/framework/src/executioners/Transient.C:416\n#25 0x00007ffff5370d18 in Transient::execute (this=0x555555d8bf60) at /home/fanzhangchen/projects/moose/framework/src/executioners/Transient.C:291\n#26 0x00007ffff5d3b65a in MooseApp::executeExecutioner (this=0x555555794050) at /home/fanzhangchen/projects/moose/framework/src/base/MooseApp.C:1160\n#27 0x00007ffff5d42495 in MooseApp::run (this=0x555555794050) at /home/fanzhangchen/projects/moose/framework/src/base/MooseApp.C:1542\n#28 0x0000555555557db0 in Moose::main<cdf_updateTestApp> (argc=3, argv=0x7fffffffbd48) at /home/fanzhangchen/projects/moose/framework/build/header_symlinks/MooseMain.h:47\n#29 0x00005555555575f4 in main (argc=3, argv=0x7fffffffbd48) at /home/fanzhangchen/projects/cdf_update/src/main.C:17\n\nI am not sure what led to this error. Do you have any ideas?\nBest,",
                  "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8824911",
                  "updatedAt": "2024-03-18T09:03:31Z",
                  "publishedAt": "2024-03-18T09:03:30Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what is the current moose commit you used? (from a git log)\nand did you recompile the dbg executable? Is there any chance the dbg one is old?",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8828418",
                          "updatedAt": "2024-03-18T13:57:48Z",
                          "publishedAt": "2024-03-18T13:57:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "Here is the moose commit\ncommit 864c841f750c0272a19edbf8ee225410768f8555 (HEAD, origin/scheduled, origin/master)\nMerge: cd68a12857 f5ce2c7ab1\nAuthor: MOOSE maintenance <bounces@inl.gov>\nDate:   Fri Mar 15 03:34:07 2024 -0600\n\n    Merge commit 'f5ce2c7ab1f32ca0867aa104c576fca287b26ed0'\n\nYes, I recompiled the dbg after I updated the moose. And I got this segmenation fault, which was not existed in the previous version.",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8834427",
                          "updatedAt": "2024-03-19T00:55:43Z",
                          "publishedAt": "2024-03-19T00:55:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "is it the same commit at the beginning of the simulation log?\nWhat was the commit of the previous version you used?",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8834572",
                          "updatedAt": "2024-03-19T01:18:30Z",
                          "publishedAt": "2024-03-19T01:18:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "The commit at the beginning of the simulation is\nMOOSE Version:           git commit 4a2dd93b74 on 2024-03-13\nThe commit of the previous version was the 3b87952.",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8834615",
                          "updatedAt": "2024-03-19T01:26:17Z",
                          "publishedAt": "2024-03-19T01:26:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did anything change with your app? do you have the same commits on these failures as the commit you had when it worked?",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8834695",
                          "updatedAt": "2024-03-19T01:39:11Z",
                          "publishedAt": "2024-03-19T01:39:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "The only change is the TensorMechanicsApp to SolidMechanicsApp. The code I use is the same as the previous one",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8834881",
                          "updatedAt": "2024-03-19T02:07:54Z",
                          "publishedAt": "2024-03-19T02:07:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This change would not matter.\nOk so this bug is still only in your material that is not in MOOSE, only in your app right? Can you make another MWE and we can check it out? It s always best if you reproduce it only with MOOSE objects but we can take a look at your app too\nThe fact that it worked with an earlier moose commit does not mean it was completely fine either. If we were reading out of bounds but getting lucky, the code could still have run",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8835652",
                          "updatedAt": "2024-03-19T04:22:49Z",
                          "publishedAt": "2024-03-19T04:22:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "I am not sure whether this bug is in my app or in Moose. Since in standard Galerkin problems, this material could work well. Only in discontinuous Galerkin problems, this material will give some errors. Could you tell me what MWE is?",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8836156",
                          "updatedAt": "2024-03-19T05:53:22Z",
                          "publishedAt": "2024-03-19T05:53:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "it's a Minimal Working Example, or the simplest input that shows the problem",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8841352",
                          "updatedAt": "2024-03-19T14:07:21Z",
                          "publishedAt": "2024-03-19T14:07:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "FanZhangchen"
                          },
                          "bodyText": "Sure, I will do a MWE. Another question, if I found the address of the pointer that leads to the segmentation fault is 0x0, does it mean it is a null pointer?",
                          "url": "https://github.com/idaholab/moose/discussions/26649#discussioncomment-8847672",
                          "updatedAt": "2024-03-20T02:17:24Z",
                          "publishedAt": "2024-03-20T02:17:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "yaml module not found",
          "author": {
            "login": "WulfHans"
          },
          "bodyText": "Install on a clean machine (linux, conda environment) failed with\nModuleNotFoundError: No module named 'yaml'\nThe error already occured during build, but the build still finished. However, running any tests fails instantly.\nThe common advice on the net is to install pyyaml. However, this is already installed:\n(moose) wuha@pontos:/home/.local/wuha$ conda list pyyaml\n# packages in environment at /home/.local/wuha/miniforge/envs/moose:\n#\n# Name                    Version                   Build  Channel\npyyaml                    6.0.1           py310h2372a71_1    conda-forge\n\nThe python seems to come from the correct location (miniforge), but yaml is indeed missing:\n(moose) wuha@pontos:/home/.local/wuha$ which python\n/home/wuha/miniforge/bin/python\n(moose) wuha@pontos:/home/.local/wuha$ python\nPython 3.10.13 | packaged by conda-forge | (main, Oct 26 2023, 18:07:37) [GCC 12.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import yaml\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nModuleNotFoundError: No module named 'yaml'\n\nTypical attempts like updating everything or just redoing several steps did not solve it either.\nAny recommendation? Thanks in advance!",
          "url": "https://github.com/idaholab/moose/discussions/27133",
          "updatedAt": "2024-03-21T08:56:18Z",
          "publishedAt": "2024-03-19T16:00:07Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyou can also install yaml.\nconda install yaml\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8843277",
                  "updatedAt": "2024-03-19T16:37:55Z",
                  "publishedAt": "2024-03-19T16:37:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I think its actually pyaml you want. This will get the shared libraries for yaml and the Python module to interface with it import yaml. Can you believe all these exist and are different!?:\nconda install yaml pyaml pyyaml\n\n:)",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8843450",
                          "updatedAt": "2024-03-19T16:54:05Z",
                          "publishedAt": "2024-03-19T16:54:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WulfHans"
                          },
                          "bodyText": "yaml and pyyaml were installed, pyaml was missing. Issues is solved. Please consider adding the module to the dependency package you get with\nconda create -n moose moose-dev=2024.03.15",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8844521",
                          "updatedAt": "2024-03-19T18:26:11Z",
                          "publishedAt": "2024-03-19T18:26:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Well interesting. Something else must have been wrong because that's already a part of moose-dev. \"moose-dev\" depends on \"moose-tools\", which brings in the proper yaml modules. I am not sure how you ended up not having it.\nThe results of my conda list after  conda create -n moose moose-dev=2024.03.15:\n$ conda list | grep yaml\npyaml                     23.12.0            pyhd8ed1ab_0    conda-forge\npyyaml                    6.0.1           py310h2372a71_1    conda-forge\nruamel.yaml               0.18.6          py310h2372a71_0    conda-forge\nruamel.yaml.clib          0.2.8           py310h2372a71_0    conda-forge\nyaml                      0.2.5                h7f98852_2    conda-forge",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8844987",
                          "updatedAt": "2024-03-19T19:21:07Z",
                          "publishedAt": "2024-03-19T19:21:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WulfHans"
                  },
                  "bodyText": "Sorry, I have to reopen the issue.\nToday, it does not work again. I have no idea, what I changed.\nIt seems as if all files and packages are present, but it does not work nevertheless:\n(moose) wuha@pontos:/home/.local/wuha/PRIVAT/moose-projects/moose$ conda list yaml\n# packages in environment at /home/.local/wuha/miniforge/envs/moose:\n#\n# Name                    Version                   Build  Channel\npyaml                     23.12.0            pyhd8ed1ab_0    conda-forge\npyyaml                    6.0.1           py310h2372a71_1    conda-forge\nruamel.yaml               0.18.6          py310h2372a71_0    conda-forge\nruamel.yaml.clib          0.2.8           py310h2372a71_0    conda-forge\nyaml                      0.2.5                h7f98852_2    conda-forge\n(moose) wuha@pontos:/home/.local/wuha/PRIVAT/moose-projects/moose$ python\nPython 3.10.13 | packaged by conda-forge | (main, Oct 26 2023, 18:07:37) [GCC 12.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import yaml\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nModuleNotFoundError: No module named 'yaml'",
                  "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855232",
                  "updatedAt": "2024-03-20T16:08:28Z",
                  "publishedAt": "2024-03-20T16:08:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what does which python return?",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855311",
                          "updatedAt": "2024-03-20T16:15:38Z",
                          "publishedAt": "2024-03-20T16:15:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "This feels like a PATH issue somehow.\nWhat does the following report?\nwhich python python3 conda",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855324",
                          "updatedAt": "2024-03-20T16:16:37Z",
                          "publishedAt": "2024-03-20T16:16:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WulfHans"
                          },
                          "bodyText": "(moose) wuha@pontos:~/PRIVAT/moose-projects/moose_pattern$ which python\n/home/wuha/miniforge/bin/python\n(moose) wuha@pontos:~/PRIVAT/moose-projects/moose_pattern$ which python3\n/home/wuha/miniforge/bin/python3\n(moose) wuha@pontos:~/PRIVAT/moose-projects/moose_pattern$ which conda\n/home/wuha/miniforge/bin/conda\n\nNo big surprises",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855352",
                          "updatedAt": "2024-03-20T16:18:31Z",
                          "publishedAt": "2024-03-20T16:17:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "It is interesting that conda is being reported as a non-function. It's possible Conda is not being initialized properly? Can you print out the conda info page, and then for troubleshooting measures, I want to re-initialize Conda:\nconda info --all\nconda deactivate\nsource activate /home/wuha/miniforge                     # this might fail\nsource activate /home/.local/wuha/miniforge/envs/moose   # this might fail\npython -c 'import yaml; print(yaml.__file__)'",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855391",
                          "updatedAt": "2024-03-20T16:23:28Z",
                          "publishedAt": "2024-03-20T16:21:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WulfHans"
                          },
                          "bodyText": "That gives quite a wall of text...\n\n(moose) wuha@pontos:/home/.local/wuha/PRIVAT/moose-projects/moose$ conda info --all\n\n     active environment : moose\n    active env location : /home/.local/wuha/miniforge/envs/moose\n            shell level : 3\n       user config file : /home/wuha/.condarc\n populated config files : /home/.local/wuha/miniforge/.condarc\n                          /home/wuha/.condarc\n          conda version : 24.1.2\n    conda-build version : not installed\n         python version : 3.10.13.final.0\n                 solver : libmamba (default)\n       virtual packages : __archspec=1=haswell\n                          __conda=24.1.2=0\n                          __glibc=2.36=0\n                          __linux=6.1.0=0\n                          __unix=0=0\n       base environment : /home/.local/wuha/miniforge  (writable)\n      conda av data dir : /home/.local/wuha/miniforge/etc/conda\n  conda av metadata url : None\n           channel URLs : https://conda.software.inl.gov/public/linux-64\n                          https://conda.software.inl.gov/public/noarch\n                          https://conda.anaconda.org/conda-forge/linux-64\n                          https://conda.anaconda.org/conda-forge/noarch\n          package cache : /home/.local/wuha/miniforge/pkgs\n                          /home/wuha/.conda/pkgs\n       envs directories : /home/.local/wuha/miniforge/envs\n                          /home/wuha/.conda/envs\n               platform : linux-64\n             user-agent : conda/24.1.2 requests/2.31.0 CPython/3.10.13 Linux/6.1.0-17-amd64 debian/12.5 glibc/2.36 solver/libmamba conda-libmamba-solver/24.1.0 libmambapy/1.5.7\n                UID:GID : 54477:4000\n             netrc file : None\n           offline mode : False\n\n\n# conda environments:\n#\nbase                     /home/.local/wuha/miniforge\nmoose                 *  /home/.local/wuha/miniforge/envs/moose\n\nsys.version: 3.10.13 | packaged by conda-forge | (mai...\nsys.prefix: /home/.local/wuha/miniforge\nsys.executable: /home/.local/wuha/miniforge/bin/python\nconda location: /home/.local/wuha/miniforge/lib/python3.10/site-packages/conda\nconda-build: None\nconda-env: /home/.local/wuha/miniforge/bin/conda-env\nuser site dirs: ~/.local/lib/python2.7\n\nBOOST_BUILD_PATH: /home/wuha/PRIVAT/OptiSlang/develop/boost/boost_1_72_0/tools/build\nCIO_TEST: <not set>\nCMAKE_PREFIX_PATH: /home/.local/wuha/miniforge/envs/moose:/home/.local/wuha/miniforge/envs/moose/x86_64-conda-linux-gnu/sysroot/usr\nCONDA_BUILD_SYSROOT: /home/.local/wuha/miniforge/envs/moose/x86_64-conda-linux-gnu/sysroot\nCONDA_DEFAULT_ENV: moose\nCONDA_EXE: /home/.local/wuha/miniforge/bin/conda\nCONDA_PREFIX: /home/.local/wuha/miniforge/envs/moose\nCONDA_PREFIX_1: /home/.local/wuha/mambaforge3\nCONDA_PREFIX_2: /home/.local/wuha/miniforge\nCONDA_PROMPT_MODIFIER: (moose) \nCONDA_PYTHON_EXE: /home/.local/wuha/miniforge/bin/python\nCONDA_ROOT: /home/.local/wuha/miniforge\nCONDA_SHLVL: 3\nCONDA_TOOLCHAIN_BUILD: x86_64-conda-linux-gnu\nCONDA_TOOLCHAIN_HOST: x86_64-conda-linux-gnu\nCURL_CA_BUNDLE: <not set>\nC_INCLUDE_PATH: /home/.local/wuha/miniforge/envs/moose/include\nGAPS_PATH: /home/wuha/PRIVAT/Identifikation/ami/gaps/bin/\nLD_LIBRARY_PATH: /usr/local/cuda/lib64/:/usr/local/cuda-7.0/lib64:/lib:/usr/local/mvapich2/lib/:/usr/local/cuda/lib64/:/usr/local/cuda-7.0/lib64:/lib:/usr/local/mvapich2/lib/::/usr/local/cuda-6.5/lib64:/usr/local/cuda-6.5/lib64\nLD_PRELOAD: <not set>\nPATH: /home/wuha/miniforge/bin:/usr/local/cuda-7.0/bin:MPI_HOME_DIR/bin:/home/.local/wuha/miniforge/envs/moose/bin:/home/.local/wuha/mambaforge3/condabin:/home/wuha/miniconda3/bin:/usr/local/cuda-7.0/bin:MPI_HOME_DIR/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home/wuha:/home/wuha/bin:/usr/local/lib:/usr/local/bin:/sbin:/opt/software/MARC/marc2007r1:/opt/software/ANSYS/v121/ansys/bin:/usr/local/cuda-6.5/bin:/home/wuha/PRIVAT/OptiSlang/develop/boost/boost_1_72_0:/home/wuha/PRIVAT/antraege/DFG_KogniProd/Vorarbeiten/fibergen/bin:/home/wuha:/home/wuha/bin:/usr/local/lib:/usr/local/bin:/sbin:/opt/software/MARC/marc2007r1:/opt/software/ANSYS/v121/ansys/bin:/usr/local/cuda-6.5/bin:/home/wuha/PRIVAT/OptiSlang/develop/boost/boost_1_72_0:/home/wuha/PRIVAT/antraege/DFG_KogniProd/Vorarbeiten/fibergen/bin:/home/.local/wuha/miniforge/envs/moose/wasp/bin:/home/.local/wuha/miniforge/envs/moose/wasp/bin:/home/.local/wuha/miniforge/envs/moose/wasp/bin\nQTWEBENGINE_DICTIONARIES_PATH: /usr/share/hunspell-bdic/\nREQUESTS_CA_BUNDLE: <not set>\nSSL_CERT_FILE: <not set>\n\n\nLets continue:\n(moose) wuha@pontos:/home/.local/wuha/PRIVAT/moose-projects/moose$ conda deactivate\n(base) wuha@pontos:/home/.local/wuha/PRIVAT/moose-projects/moose$ source activate /home/wuha/miniforge\n(/home/wuha/miniforge) wuha@pontos:/home/.local/wuha/PRIVAT/moose-projects/moose$ source activate /home/.local/wuha/miniforge/envs/moose\n(moose) wuha@pontos:/home/.local/wuha/PRIVAT/moose-projects/moose$ python -c 'import yaml; print(yaml.__file__)'\n/home/.local/wuha/miniforge/envs/moose/lib/python3.10/site-packages/yaml/__init__.py\n\nAnd now things work:\nPython 3.10.8 | packaged by conda-forge | (main, Nov 22 2022, 08:23:14) [GCC 10.4.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import yaml\n>>> \n\nI have no idea, what is different now.",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855476",
                          "updatedAt": "2024-03-20T16:28:13Z",
                          "publishedAt": "2024-03-20T16:28:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Also, are you interfacing with your terminal via any IDE? Like VS Code? Just curious! I know my integrated VS Code terminal exhibits very strange behavior sometimes with Conda.",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855483",
                          "updatedAt": "2024-03-20T16:28:52Z",
                          "publishedAt": "2024-03-20T16:28:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WulfHans"
                          },
                          "bodyText": "Nope, just pure bash",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855493",
                          "updatedAt": "2024-03-20T16:30:15Z",
                          "publishedAt": "2024-03-20T16:30:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Nopw, just pure bash\n\nOkay!\nWell some of this is interesting:\nCONDA_PREFIX_1: /home/.local/wuha/mambaforge3\nCONDA_PREFIX_2: /home/.local/wuha/miniforge\n\nIt might be that there are two instances of Conda possibly fighting eachother. I don't know what the right solution here is, except to remove one. Probably the mambaforge variant, as that is a deprecated Conda instance as of last September. You probably have that due to MOOSE using mambaforge last year :)",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855548",
                          "updatedAt": "2024-03-20T16:32:53Z",
                          "publishedAt": "2024-03-20T16:32:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WulfHans"
                          },
                          "bodyText": "There was a version with mambaforge on the previous computer, with a different system etc.\nI copied lots of data to the new one, but I am not aware of copying anything related to conda.\nThere is no reference to mambaforge in bashrc. This directory (/home/.local/wuha/mambaforge3) does not exist. I have really no idea what to remove.",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855608",
                          "updatedAt": "2024-03-20T16:38:47Z",
                          "publishedAt": "2024-03-20T16:38:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Can you print the following two files?\ncat ~/.bashrc\ncat ~/.bash_profile\n\nIt seems mambaforge3 is going to be somewhere... since I also notice conda info --all printed out your PATH variable, and it too is listing a mambaforge3/bin PATH. Of course, missing directories among PATH should be okay, and therefor if this location physically does not exist, then I doubt mambaforge3 is getting in the way.\nStill, there is some oddness. A proper installation of Conda, should result in the following which returns:\n\u276f which python python3 conda\n/Users/milljm/miniforge3/envs/moose/bin/python\n/Users/milljm/miniforge3/envs/moose/bin/python3\nconda () {\n\t\\local cmd=\"${1-__missing__}\"\n\tcase \"$cmd\" in\n\t\t(activate | deactivate) __conda_activate \"$@\" ;;\n\t\t(install | update | upgrade | remove | uninstall) __conda_exe \"$@\" || \\return\n\t\t\t__conda_reactivate ;;\n\t\t(*) __conda_exe \"$@\" ;;\n\tesac\n}\nwhere conda is a function, and not a path to the actual binary which is being reported by your which conda statement.\nThe reason why its working \"now\" is because we sourced the moose environment manually, properly. But we shouldn't have to do this. conda activate moose should suffice.",
                          "url": "https://github.com/idaholab/moose/discussions/27133#discussioncomment-8855714",
                          "updatedAt": "2024-03-20T16:47:06Z",
                          "publishedAt": "2024-03-20T16:46:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Reading boundaries from a libmesh (XDA) file.",
          "author": {
            "login": "danielwardstfc"
          },
          "bodyText": "I have a libmesh mesh file (.xda) that looks a bit like this:\nlibMesh-0.7.0+\n          48 # number of elements\n         105 # number of nodes\n           . # boundary condition specification file\n         n/a # subdomain id specification file\n         n/a # processor id specification file\n         n/a # p-level specification file\n          48 # n_elem at level 0, [ type (n0 ... nN-1) ]\n          10          36          43           8           1           0           7          42          35\n          10          37          44           9           2           1           8          43          36\netc...\n           0           0           0\n    0.166667           0           0\n    0.333333           0           0\netc...\n           4# number of boundary conditions\n           0           1           0\n           6           1           0\netc...\n          23           5           0\n          24           5           1\n          30           5           1\netc...\n\nThis hopefully illustrates that there are four boundary conditions in this XDA file, each with a tag from 0 to 3 (here some examples with tags 0 and 1 are shown).  I'm trying to read this into MOOSE and can successfully do so with an empty BCs section in my input file.  However, when I try and read the boundaries I run into issues with MOOSE not being able to see the boundaries.  Here's my input file\n[Mesh]\n  file = in/mesh_singleCylinder.xda\n[]\n\n[Variables]\n  [T]\n    order = FIRST\n    family = LAGRANGE\n  []\n[]\n\n[Kernels]\n  [T]\n    type = NullKernel\n    variable = T\n  []\n[]\n\n[BCs]\n  [./bottom]\n    type = DirichletBC\n    variable = T\n    boundary = 0\n    value = 1\n  [../]\n  [./top]\n    type = DirichletBC\n    variable = T\n    boundary = 1\n    value = 0\n  [../]\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'PJFNK'\n[]\n\n[Outputs]\n  execute_on = 'timestep_end'\n  exodus = true\n[]\n\n[UserObjects]\n[]\n\n[Functions]\n[]\n\nand here's the error:\n(BCs/top/boundary): the following node sets (ids) do not exist on the mesh: 1\nI expected it to read the tags from the boundary section but it isn't.  Does anybody know why?\nBest,\nDaniel",
          "url": "https://github.com/idaholab/moose/discussions/27152",
          "updatedAt": "2024-03-21T04:58:24Z",
          "publishedAt": "2024-03-20T16:35:38Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you paste the output of your run but with --mesh-only on the command line\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27152#discussioncomment-8855663",
                  "updatedAt": "2024-03-20T16:42:46Z",
                  "publishedAt": "2024-03-20T16:42:44Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "danielwardstfc"
                          },
                          "bodyText": "Hi Guillaume,\nThanks for responding so fast!  I get this output:\n Mesh Information:\n  elem_dimensions()={3}\n  spatial_dimension()=3\n  n_nodes()=360\n    n_local_nodes()=360\n  n_elem()=264\n    n_local_elem()=264\n    n_active_elem()=264\n  n_subdomains()=1\n  n_elemsets()=0\n  n_partitions()=1\n  n_processors()=1\n  n_threads()=1\n  processor_id()=0\n  is_prepared()=true\n  is_replicated()=true\n\n Mesh Bounding Box:\n  Minimum: (x,y,z)=(-0.965926, -0.965926,        0)\n  Maximum: (x,y,z)=(0.965926, 0.965926,  8.16667)\n  Delta:   (x,y,z)=( 1.93185,  1.93185,  8.16667)\n\n Mesh Element Type(s):\n  HEX8\n\n Mesh Nodesets:\n  Nodeset 0, 8 nodes\n   Bounding box minimum: (x,y,z)=(-0.620386, -0.620386,        0)\n   Bounding box maximum: (x,y,z)=(-0.172842, 0.620386,        0)\n   Bounding box delta: (x,y,z)=(0.447544,  1.24077,        0)\n\n Mesh Sidesets:\n  Sideset 0, 3 sides (QUAD4), 3 elems (HEX8), 8 nodes\n   Side volume: 0.408139\n   Bounding box minimum: (x,y,z)=(-0.620386, -0.620386,        0)\n   Bounding box maximum: (x,y,z)=(-0.172842, 0.620386,        0)\n   Bounding box delta: (x,y,z)=(0.447544,  1.24077,        0)\n\n Mesh Edgesets:\n  None\n\n Mesh Subdomains:\n  Subdomain 0: 264 elems (HEX8, 264 active), 360 active nodes\n   Volume: 24.5\n   Bounding box minimum: (x,y,z)=(-0.965926, -0.965926,        0)\n   Bounding box maximum: (x,y,z)=(0.965926, 0.965926,  8.16667)\n   Bounding box delta: (x,y,z)=( 1.93185,  1.93185,  8.16667)\n  Global mesh volume = 24.5\n\nWARNING! There are options you set that were not used!\nWARNING! could be spelling mistake, etc!\nThere are 2 unused database options. They are:\nOption left: name:--mesh-only (no value) source: command line\nOption left: name:-i value: 02_boundaryCheck.i source: command line\n\nwhich I think has worked, despite the warnings.",
                          "url": "https://github.com/idaholab/moose/discussions/27152#discussioncomment-8855720",
                          "updatedAt": "2024-03-20T16:47:25Z",
                          "publishedAt": "2024-03-20T16:47:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nSo the only boundary that is being recognized is the '0' indexed one.\nI would create an issue in MOOSE if it does not exist already\nthen use the MeshGenerator system to re-create the boundaries in MOOSE\nhttps://mooseframework.inl.gov/syntax/Mesh/index.html#a6ba103a-75a3-4a72-9a8a-934024667c93\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/27152#discussioncomment-8855789",
                          "updatedAt": "2024-03-20T16:54:19Z",
                          "publishedAt": "2024-03-20T16:54:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "danielwardstfc"
                          },
                          "bodyText": "Okay, I've submitted an issue.  Thank you",
                          "url": "https://github.com/idaholab/moose/discussions/27152#discussioncomment-8856125",
                          "updatedAt": "2024-03-20T17:26:19Z",
                          "publishedAt": "2024-03-20T17:26:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "issue created is: #27153",
                          "url": "https://github.com/idaholab/moose/discussions/27152#discussioncomment-8860921",
                          "updatedAt": "2024-03-21T04:58:25Z",
                          "publishedAt": "2024-03-21T04:58:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to get the value of the ArrayVariable at the end of the last nonlinear iteration",
          "author": {
            "login": "xieeeect"
          },
          "bodyText": "In each iteration of the steady-state calculation, I need the value of the array variable in the previous iteration, but I don't know how to get it. Thanks for the answer.   : )",
          "url": "https://github.com/idaholab/moose/discussions/27148",
          "updatedAt": "2024-03-21T02:05:40Z",
          "publishedAt": "2024-03-20T08:47:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can use the functor interfaces with a previous nonlinear state on the variable\nThis one https://mooseframework.inl.gov/docs/doxygen/moose/classMoose_1_1FunctorBase.html#a9ebde35cd92b43d6ccad6143f96bedec\nand use it in a new auxkernel\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27148#discussioncomment-8854067",
                  "updatedAt": "2024-03-20T14:41:41Z",
                  "publishedAt": "2024-03-20T14:41:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xieeeect"
                          },
                          "bodyText": "Thanks for your help, I'm going to take a closer look.",
                          "url": "https://github.com/idaholab/moose/discussions/27148#discussioncomment-8855402",
                          "updatedAt": "2024-03-20T16:22:30Z",
                          "publishedAt": "2024-03-20T16:22:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "YaqiWang"
                  },
                  "bodyText": "I am not sure what exactly you are looking for. Maybe you want to study this test https://github.com/idaholab/moose/blob/next/test/tests/executioners/fixed_point/nonlinear_fixed_point.i , which uses vector tagging and has a custom solve object with fixed point iterations.",
                  "url": "https://github.com/idaholab/moose/discussions/27148#discussioncomment-8859860",
                  "updatedAt": "2024-03-21T02:05:41Z",
                  "publishedAt": "2024-03-21T02:05:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How do I get rid of spikes in my simulation result?",
          "author": {
            "login": "steam-simulator"
          },
          "bodyText": "Hello,\nMy simulation was successful with the expected result. However, the result show too many spikes. How do I get rid of these spikes? I\u2019m using IterationAdaptiveDT with dt_min = 1e-3. When I removed the IterationAdaptiveDT, I don't see the spikes, but my results deviated slightly from what I would expect. I want to use the iterative adaptive time-stepping. Any suggestion on how I can do this without the spikes? Thanks.\n[Executioner]\n  type = Transient\n  solve_type = Newton\n  end_time = 3e3\n  nl_abs_tol = 1e-9\n  [TimeStepper]\n    type = IterationAdaptiveDT\n    dt = 1e-3          \n    optimal_iterations = 10\n  []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27077",
          "updatedAt": "2024-03-20T17:46:49Z",
          "publishedAt": "2024-03-13T22:01:38Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhat kind of spikes are they? In time? or in the spatial solution?\nMy worry with spikes would be that you have false convergence happening. Change nl_abs_tol = 1e-9 this back to the default. Removing the line will do that\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8779243",
                  "updatedAt": "2024-03-13T22:16:21Z",
                  "publishedAt": "2024-03-13T22:16:20Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "steam-simulator"
                  },
                  "bodyText": "Hello,\nThe spikes occur in time. After changing the tolerance to the default value, I got a convergence error:\n*** ERROR ***\nThe following error occurred in the object \"IterationAdaptiveDT\", of type \"IterationAdaptiveDT\".\n\nSolve failed and timestep already at dtmin, cannot continue!",
                  "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8779580",
                  "updatedAt": "2024-03-20T17:45:44Z",
                  "publishedAt": "2024-03-13T23:15:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok can you turn on automatic scaling then set a reasonably tight tolerance.\nautomatic scaling will normalize the tolerances",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8779591",
                          "updatedAt": "2024-03-13T23:18:05Z",
                          "publishedAt": "2024-03-13T23:18:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "steam-simulator"
                  },
                  "bodyText": "Hello @GiudGiud, my simulation fails to converge after setting a tight tolerance and using automatic scaling.  Any other suggestion to make the IterationAdaptiveDT work without the spike? Thanks.",
                  "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8809248",
                  "updatedAt": "2024-03-22T19:32:30Z",
                  "publishedAt": "2024-03-16T04:02:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont think the time stepper is the problem here. They simply create the time grid. They both can be made to have a sufficiently fine time step for your problem.\nTwo things could be happening here:\n\nthe time steps are not well selected and in the first oscillating case you were violating a CFL-like condition, causing stability issues\nthe convergence criteria were loosened and the results started oscillating because they were not converged.\n\nCould you please paste the executioner block?",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8812352",
                          "updatedAt": "2024-03-16T15:03:29Z",
                          "publishedAt": "2024-03-16T15:03:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "steam-simulator"
                          },
                          "bodyText": "Hi @GiudGiud, here is the executioner block that I used:\n[Executioner]\n  type = Transient\n  solve_type = Newton\n  end_time = 3e3\n  nl_abs_tol = 1e-11\n  [TimeStepper]\n  type = ConstantDT\n  dt = 1\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8814461",
                          "updatedAt": "2024-03-20T17:44:39Z",
                          "publishedAt": "2024-03-16T21:20:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the executioner looks fine to me.\nnl_abs_tol of 1e-11 is probably fine enough. I like to use automatic_scaling = true in that block to normalize the convergence criteria but I see you already have manual scaling in the simulation so it's probably already fine.\nI think looking at the IterativeAdaptiveDT time steps might show you if they were too big for the problem",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8816100",
                          "updatedAt": "2024-03-17T05:07:24Z",
                          "publishedAt": "2024-03-17T05:06:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "steam-simulator"
                          },
                          "bodyText": "Hello @GiudGiud, how do I output the iterativeAdaptiveDT time steps? Should I use the output system to do this?",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8821135",
                          "updatedAt": "2024-03-17T21:21:20Z",
                          "publishedAt": "2024-03-17T21:21:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "You can use a TimeStepSize post processor to save each time step into a csv file",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8822030",
                          "updatedAt": "2024-03-18T01:25:20Z",
                          "publishedAt": "2024-03-18T01:25:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "steam-simulator"
                          },
                          "bodyText": "Hello @GiudGiud @cpgr, thanks for the feedback. Now I know why I'm getting spikes in the result. Is there a way to maintain the time steps in a simulation when using constantDT without the time step fluctuating at certain times? For example, I set dt=4 using constantDT, but the time step is not constant during the simulation. It fluctuates from 4 to 2 at certain times, corresponding to the spikes. Is there a way (or time stepper) to force the time step to remain at a specific value throughout the simulation even if any fluctuation occurs?",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8824039",
                          "updatedAt": "2024-03-18T07:32:41Z",
                          "publishedAt": "2024-03-18T07:32:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nThe fluctuations are probably due to time steps failing? What does the log say?\nI think you are having convergence issues here. You need to work on getting clean nonlinear solve convergence. Maybe that will force a reduction of the time step. Maybe you can work with the executioner parameters (maybe automatic scaling?) to get better convergence\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8829239",
                          "updatedAt": "2024-03-18T14:55:59Z",
                          "publishedAt": "2024-03-18T14:55:58Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "steam-simulator"
                          },
                          "bodyText": "Thanks for the tips, @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/27077#discussioncomment-8856363",
                          "updatedAt": "2024-03-20T17:46:44Z",
                          "publishedAt": "2024-03-20T17:46:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}