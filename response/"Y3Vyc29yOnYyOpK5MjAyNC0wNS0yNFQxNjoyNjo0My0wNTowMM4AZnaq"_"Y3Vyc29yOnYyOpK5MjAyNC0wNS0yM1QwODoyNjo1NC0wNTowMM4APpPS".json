{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wNS0yM1QwODoyNjo1NC0wNTowMM4APpPS"
    },
    "edges": [
      {
        "node": {
          "title": "Griffin Level 4 Cross Section Test Failures",
          "author": {
            "login": "TheMusicalPanther"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A Getting Started is the most appropriate category for my question (trouble installing, beginner user, ...)\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (avoid screenshots if possible, triple back quotes before/after pasted text, etc)\n\nIssue or question about MOOSE\nHello,\nI am trying to compile and build Griffin from source for development. I have followed the instructions provided at https://mooseframework.inl.gov/ncrc/applications/ncrc_develop_griffin.html, with one addition. git submodule update --init was skipping the griffin_data submodule, so in addition to git submodule update --init, I also ran git submodule update --checkout, which appears to have successfully downloaded the data. I am working on the INL HPC.\nHowever, I am failing 15 tests. They seem to fall into one of three categories. Below, I have provided the names of the tests that have failed for each identical error message, and below that, I have included one of the failed tests' outputs. Each named test corresponding to a given number has failed with the same type of error.\n1 Tests\nxs_generation.base/cross_section_generation .................................................. FAILED (ERRMSG)\nxs_generation.base/cross_section_generation_table ............................................ FAILED (ERRMSG)\nxs_generation.rz_spectrum/single_exec ........................................................ FAILED (ERRMSG)\nxs_generation.rz_spectrum/single_exec_het_xml_micro_fullhom_target ........................... FAILED (ERRMSG)\nxs_generation.rz_spectrum/single_exec_het_xml_macro_fullhom_target ........................... FAILED (ERRMSG)\nxs_generation.rz_spectrum/single_exec_het_xml_nonfuel ........................................ FAILED (ERRMSG)\nxs_generation.rz_spectrum/single_exec_keep_inputs ............................................ FAILED (ERRMSG)\nxs_generation.rz_spectrum/two_exec_xs_cal .................................................... FAILED (ERRMSG)\nxs_generation.rz_spectrum/micro_cross_section ................................................ FAILED (ERRMSG)\nxs_generation.rz_spectrum/xml_macro_cross_section ............................................ FAILED (ERRMSG)\n\n2 Tests\nperformance/SelfShieldingAPI/pebblebed.pbr_steadystate_onlinexs_multipebbles ...... [FINISHED] FAILED (ERRMSG)\nexamples/pbr_online_xs.online_xs ............................................................. FAILED (ERRMSG)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs ................................ FAILED (ERRMSG)\n\n\n3 Tests\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ ...................... FAILED (CRASH)\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_ENCM .................... FAILED (CRASH)\n\n1 Error\nxs_generation.rz_spectrum/micro_cross_section: Working Directory: /home/pantandr/projects/griffin/tests/xs_generation\nxs_generation.rz_spectrum/micro_cross_section: Running command: /home/pantandr/projects/griffin/griffin-opt -i rz_spectrum_mesh.i rz_spectrum.i MCC3CrossSection/use_micro_cross_section=true\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: *** Info ***\nxs_generation.rz_spectrum/micro_cross_section: Merging inputs rz_spectrum_mesh.i, rz_spectrum.i\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: ******************************************************************************************************************\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:                       _________                                                   _________\nxs_generation.rz_spectrum/micro_cross_section:                       \\_________\\----------____                   ____----------/_________/\nxs_generation.rz_spectrum/micro_cross_section:                           \\________\\-------\\\\\\\\\\\\               //////-------/________/\nxs_generation.rz_spectrum/micro_cross_section:                               \\________\\------\\\\||             ||//------/________/\nxs_generation.rz_spectrum/micro_cross_section:                                      \\_____\\----\\\\             //----/_____/\nxs_generation.rz_spectrum/micro_cross_section:                          \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2588\u2557  \u2588\u2588\u2557      \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\nxs_generation.rz_spectrum/micro_cross_section:                         \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2551      \u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\nxs_generation.rz_spectrum/micro_cross_section:                         \u2588\u2588\u2551  \u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\nxs_generation.rz_spectrum/micro_cross_section:                         \u2588\u2588\u2551  \u255a\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2551\u255a\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\nxs_generation.rz_spectrum/micro_cross_section:                         \u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2588\u2588\u2588\u2551      \u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\nxs_generation.rz_spectrum/micro_cross_section:                          \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u2550\u255d      \u255a\u2550\u255d     \u255a\u2550\u255d\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:                                     Multiphysics Nuclear Reactor Analysis Code\nxs_generation.rz_spectrum/micro_cross_section:                                             Idaho National Laboratory\nxs_generation.rz_spectrum/micro_cross_section:                                            Argonne National Laboratory\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: ******************************************************************************************************************\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: ------------------------------------------------------------------------------------------------------------------\nxs_generation.rz_spectrum/micro_cross_section: Notice: These data were produced by Battelle Energy Alliance, LLC under contract No.\nxs_generation.rz_spectrum/micro_cross_section: DE-AC07-05ID14517 and UChicago Argonne under contract No. DE-AC02-06CH11357, LLC with\nxs_generation.rz_spectrum/micro_cross_section: the Department of Energy. During the period of commercialization or such other time\nxs_generation.rz_spectrum/micro_cross_section: period specified by the Department of Energy, the Government is granted for itself and\nxs_generation.rz_spectrum/micro_cross_section: others acting on its behalf a nonexclusive, paid-up, irrevocable worldwide license in\nxs_generation.rz_spectrum/micro_cross_section: this data to reproduce, prepare derivative works, and perform publicly and display\nxs_generation.rz_spectrum/micro_cross_section: publicly, by or on behalf of the Government. Subsequent to that period the Government is\nxs_generation.rz_spectrum/micro_cross_section: granted for itself and others acting on its behalf a nonexclusive, paid-up, irrevocable\nxs_generation.rz_spectrum/micro_cross_section: worldwide license in this data to reproduce, prepare derivative works, distribute copies\nxs_generation.rz_spectrum/micro_cross_section: to the public, perform publicly and display publicly, and to permit others to do so. The\nxs_generation.rz_spectrum/micro_cross_section: specific term of the license can be identified by inquiry made to the Contractor or DOE.\nxs_generation.rz_spectrum/micro_cross_section: NEITHER THE UNITED STATES NOR THE UNITED STATES DEPARTMENT OF ENERGY, NOR ANY OF THEIR\nxs_generation.rz_spectrum/micro_cross_section: EMPLOYEES, MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR\nxs_generation.rz_spectrum/micro_cross_section: RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY DATA, APPARATUS,\nxs_generation.rz_spectrum/micro_cross_section: PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE WOULD NOT INFRINGE PRIVATELY\nxs_generation.rz_spectrum/micro_cross_section: OWNED RIGHTS.\nxs_generation.rz_spectrum/micro_cross_section: ------------------------------------------------------------------------------------------------------------------\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Griffin version:         git commit dde282aed on 2024-05-21\nxs_generation.rz_spectrum/micro_cross_section: Framework Information:\nxs_generation.rz_spectrum/micro_cross_section: MOOSE Version:           git commit 82e31844cb on 2024-05-21\nxs_generation.rz_spectrum/micro_cross_section: LibMesh Version:         1c5369aa05eaae8ebeb7930845fce3b1d59cbb37\nxs_generation.rz_spectrum/micro_cross_section: PETSc Version:           3.20.3\nxs_generation.rz_spectrum/micro_cross_section: SLEPc Version:           3.20.1\nxs_generation.rz_spectrum/micro_cross_section: Current Time:            Thu May 23 09:42:44 2024\nxs_generation.rz_spectrum/micro_cross_section: Executable Timestamp:    Thu May 23 09:20:56 2024\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Parallelism:\nxs_generation.rz_spectrum/micro_cross_section:   Num Processors:        1\nxs_generation.rz_spectrum/micro_cross_section:   Num Threads:           1\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Command line: /home/pantandr/projects/griffin/griffin-opt -i rz_spectrum_mesh.i rz_spectrum.i MCC3CrossSection/use_micro_cross_section=true\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Global metadata defined using Reactor Geometry Mesh Builder:\nxs_generation.rz_spectrum/micro_cross_section:   mesh_dimensions: 3\nxs_generation.rz_spectrum/micro_cross_section:   mesh_geometry: Hex\nxs_generation.rz_spectrum/micro_cross_section:   axial_mesh_sizes: 10\nxs_generation.rz_spectrum/micro_cross_section:   axial_mesh_intervals: 5\nxs_generation.rz_spectrum/micro_cross_section: Core-level metadata defined using Reactor Geometry Mesh Builder for core:\nxs_generation.rz_spectrum/micro_cross_section:   assembly_names: fuel_assembly_1, fuel_assembly_2\nxs_generation.rz_spectrum/micro_cross_section:   assembly_lattice:\nxs_generation.rz_spectrum/micro_cross_section:     1, 1\nxs_generation.rz_spectrum/micro_cross_section:     1, 0, 1\nxs_generation.rz_spectrum/micro_cross_section:     1, 1\nxs_generation.rz_spectrum/micro_cross_section: Assembly-level metadata defined using Reactor Geometry Mesh Builder for fuel_assembly_1:\nxs_generation.rz_spectrum/micro_cross_section:   assembly_type: 1\nxs_generation.rz_spectrum/micro_cross_section:   pitch: 5\nxs_generation.rz_spectrum/micro_cross_section:   is_homogenized: false\nxs_generation.rz_spectrum/micro_cross_section:   is_single_pin: false\nxs_generation.rz_spectrum/micro_cross_section:   background_region_id: 3\nxs_generation.rz_spectrum/micro_cross_section:   duct_halfpitches: 2.2\nxs_generation.rz_spectrum/micro_cross_section:   duct_region_ids:\nxs_generation.rz_spectrum/micro_cross_section:     3\nxs_generation.rz_spectrum/micro_cross_section:   pin_names: fuel_pin_1\nxs_generation.rz_spectrum/micro_cross_section:   pin_lattice:\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section: Assembly-level metadata defined using Reactor Geometry Mesh Builder for fuel_assembly_2:\nxs_generation.rz_spectrum/micro_cross_section:   assembly_type: 2\nxs_generation.rz_spectrum/micro_cross_section:   pitch: 5\nxs_generation.rz_spectrum/micro_cross_section:   is_homogenized: false\nxs_generation.rz_spectrum/micro_cross_section:   is_single_pin: false\nxs_generation.rz_spectrum/micro_cross_section:   background_region_id: 3\nxs_generation.rz_spectrum/micro_cross_section:   duct_halfpitches: 2.2\nxs_generation.rz_spectrum/micro_cross_section:   duct_region_ids:\nxs_generation.rz_spectrum/micro_cross_section:     3\nxs_generation.rz_spectrum/micro_cross_section:   pin_names: fuel_pin_2\nxs_generation.rz_spectrum/micro_cross_section:   pin_lattice:\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:     0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section: Pin-level metadata defined using Reactor Geometry Mesh Builder for fuel_pin_1:\nxs_generation.rz_spectrum/micro_cross_section:   pin_type: 1\nxs_generation.rz_spectrum/micro_cross_section:   pitch: 0.9\nxs_generation.rz_spectrum/micro_cross_section:   ring_radii: 0.35\nxs_generation.rz_spectrum/micro_cross_section:   ring_region_ids:\nxs_generation.rz_spectrum/micro_cross_section:     1\nxs_generation.rz_spectrum/micro_cross_section:   background_region_id: 3\nxs_generation.rz_spectrum/micro_cross_section: Pin-level metadata defined using Reactor Geometry Mesh Builder for fuel_pin_2:\nxs_generation.rz_spectrum/micro_cross_section:   pin_type: 2\nxs_generation.rz_spectrum/micro_cross_section:   pitch: 0.9\nxs_generation.rz_spectrum/micro_cross_section:   ring_radii: 0.35\nxs_generation.rz_spectrum/micro_cross_section:   ring_region_ids:\nxs_generation.rz_spectrum/micro_cross_section:     2\nxs_generation.rz_spectrum/micro_cross_section:   background_region_id: 3\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Ring representation of core/assembly_lattice:\nxs_generation.rz_spectrum/micro_cross_section:   Ring 1: 0\nxs_generation.rz_spectrum/micro_cross_section:   Ring 2: 1, 1, 1, 1, 1, 1\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Ring representation of fuel_assembly_1/pin_lattice:\nxs_generation.rz_spectrum/micro_cross_section:   Ring 1: 0\nxs_generation.rz_spectrum/micro_cross_section:   Ring 2: 0, 0, 0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:   Ring 3: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Ring representation of fuel_assembly_2/pin_lattice:\nxs_generation.rz_spectrum/micro_cross_section:   Ring 1: 0\nxs_generation.rz_spectrum/micro_cross_section:   Ring 2: 0, 0, 0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:   Ring 3: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Unique subassembly regions:\nxs_generation.rz_spectrum/micro_cross_section:   100: (fuel_assembly_1, 0)\nxs_generation.rz_spectrum/micro_cross_section:   200: (fuel_assembly_2, 0)\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Subassembly region id mapping:\nxs_generation.rz_spectrum/micro_cross_section:   (fuel_assembly_1, 0): 100\nxs_generation.rz_spectrum/micro_cross_section:   (fuel_assembly_2, 0): 200\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Equivalent 1D Geometry for Subassembly ID: 100\nxs_generation.rz_spectrum/micro_cross_section:   1D Radial Boundaries: 0.35, 0.472534, 0.725019, 1.12279, 1.25021, 1.47233, 1.90729, 2.05973, 2.31017, 2.62519\nxs_generation.rz_spectrum/micro_cross_section:   1D Radial Regions: 1, 3, 3, 1, 3, 3, 1, 3, 3, 3\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Equivalent 1D Geometry for Subassembly ID: 200\nxs_generation.rz_spectrum/micro_cross_section:   1D Radial Boundaries: 0.35, 0.472534, 0.725019, 1.12279, 1.25021, 1.47233, 1.90729, 2.05973, 2.31017, 2.62519\nxs_generation.rz_spectrum/micro_cross_section:   1D Radial Regions: 2, 3, 3, 2, 3, 3, 2, 3, 3, 3\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Regionwise volume fractions by subassembly id:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Subassembly id: 100; heterogeneous region id: 1; Volume fraction: 0.337729\nxs_generation.rz_spectrum/micro_cross_section: Subassembly id: 100; heterogeneous region id: 3; Volume fraction: 0.662271\nxs_generation.rz_spectrum/micro_cross_section: Subassembly id: 200; heterogeneous region id: 2; Volume fraction: 0.337729\nxs_generation.rz_spectrum/micro_cross_section: Subassembly id: 200; heterogeneous region id: 3; Volume fraction: 0.662271\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Collapsed lattice:\nxs_generation.rz_spectrum/micro_cross_section:     fuel_assembly_1, fuel_assembly_2, fuel_assembly_2, fuel_assembly_2, fuel_assembly_2, fuel_assembly_2, fuel_assembly_2\nxs_generation.rz_spectrum/micro_cross_section: Equivalent radial boundaries: 2.62519, 6.94559\nxs_generation.rz_spectrum/micro_cross_section: Equivalent radial assembly names: fuel_assembly_1, fuel_assembly_2\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Mesh Subgenerator calls:\nxs_generation.rz_spectrum/micro_cross_section: [Mesh]\nxs_generation.rz_spectrum/micro_cross_section:   [eqv_core_rz]\nxs_generation.rz_spectrum/micro_cross_section:     type = CartesianMeshGenerator\nxs_generation.rz_spectrum/micro_cross_section:     dim = 2\nxs_generation.rz_spectrum/micro_cross_section:     dx = '2.62519 4.32041'\nxs_generation.rz_spectrum/micro_cross_section:     ix = '1 1'\nxs_generation.rz_spectrum/micro_cross_section:     dy = '10'\nxs_generation.rz_spectrum/micro_cross_section:     iy = '2'\nxs_generation.rz_spectrum/micro_cross_section:     subdomain_id = '\nxs_generation.rz_spectrum/micro_cross_section: 100 200'\nxs_generation.rz_spectrum/micro_cross_section:   []\nxs_generation.rz_spectrum/micro_cross_section:   [eqv_core_rz_matid]\nxs_generation.rz_spectrum/micro_cross_section:     type = ExtraElementIDCopyGenerator\nxs_generation.rz_spectrum/micro_cross_section:     input = eqv_core_rz\nxs_generation.rz_spectrum/micro_cross_section:     source_extra_element_id = subdomain_id\nxs_generation.rz_spectrum/micro_cross_section:     target_extra_element_ids = 'material_id'\nxs_generation.rz_spectrum/micro_cross_section:   []\nxs_generation.rz_spectrum/micro_cross_section: []\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Angular quadrature type: Gauss-Chebyshev\nxs_generation.rz_spectrum/micro_cross_section: Number of polars: 2\nxs_generation.rz_spectrum/micro_cross_section: Number of azimuthals: 3\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: *** Warning ***\nxs_generation.rz_spectrum/micro_cross_section: /home/pantandr/projects/griffin/tests/xs_generation/rz_spectrum.i:1.1:\nxs_generation.rz_spectrum/micro_cross_section: The following parameter error occurred in the Action 'MCC3CrossSection' of type MCC3CrossSectionAction.\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: het_cross_sections:\nxs_generation.rz_spectrum/micro_cross_section:     Parameter is set but composition not found in any subassembly regions. 1D CPM calculations will not be conducted.\nxs_generation.rz_spectrum/micro_cross_section: MCC-3 library directory   = ../../griffin_data/xs_generation/lib.mcc.e70\nxs_generation.rz_spectrum/micro_cross_section: MCC-3 pointwise directory = ./gold\nxs_generation.rz_spectrum/micro_cross_section: MCC-3 gamma directory     = ../../griffin_data/xs_generation/lib.gamma.e70\nxs_generation.rz_spectrum/micro_cross_section: MCC-3 pendf directory     = .\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: ________________________________________________________________________________\nxs_generation.rz_spectrum/micro_cross_section: MCC-3 input file = mcc3_region_100_ref\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Still Setting Up..... Preparing Hyperfine Group Cross Sections for Slowing Down Calculation\nxs_generation.rz_spectrum/micro_cross_section:  nthread==           1\nxs_generation.rz_spectrum/micro_cross_section:  mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc\nxs_generation.rz_spectrum/micro_cross_section:  mcc                         M C C - 3.3.0                                   mcc\nxs_generation.rz_spectrum/micro_cross_section:  mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc-mcc\nxs_generation.rz_spectrum/micro_cross_section:   - Hostname: sawtooth1\nxs_generation.rz_spectrum/micro_cross_section:   - Execution Date/Time: 05/23/2024 09:42:44.64\nxs_generation.rz_spectrum/micro_cross_section:   - Threads:   1\nxs_generation.rz_spectrum/micro_cross_section:   - Input File: input\nxs_generation.rz_spectrum/micro_cross_section:   - Output File: output\nxs_generation.rz_spectrum/micro_cross_section:   - Summary File: output.sum\nxs_generation.rz_spectrum/micro_cross_section:  reading input ...\nxs_generation.rz_spectrum/micro_cross_section:  library / control / material / getting input from Griffin ...\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:  reading MCC libraries ...\nxs_generation.rz_spectrum/micro_cross_section:  file1 / file2 / file3 / file4 / file5 / file6 / file7 / file8 /\nxs_generation.rz_spectrum/micro_cross_section:  file9 / file10 /\nxs_generation.rz_spectrum/micro_cross_section:  loading all isotope data on the memory ...\nxs_generation.rz_spectrum/micro_cross_section:  preparing regionwise data for region ...  1 with   2 nuclides\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:  running for region ...   1 with   2 nuclides\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:  allocating UFG for region ...           1\nxs_generation.rz_spectrum/micro_cross_section:  preparing chi matrix ...\nxs_generation.rz_spectrum/micro_cross_section:  reconstructing infinitedilute base cross sections for region ...           1\nxs_generation.rz_spectrum/micro_cross_section:  self-shielding unresolved resonances ...\nxs_generation.rz_spectrum/micro_cross_section:  reconstructing resolvedres base cross sections for region ...           1\nxs_generation.rz_spectrum/micro_cross_section:  self-shielding resolved resonances ...\nxs_generation.rz_spectrum/micro_cross_section:  pointwise file=   791624307\nxs_generation.rz_spectrum/micro_cross_section:  current input =      416400\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:  subroutine = read_pwfile\nxs_generation.rz_spectrum/micro_cross_section:  error      = pointwise data does not match\nxs_generation.rz_spectrum/micro_cross_section: ERROR STOP\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section: Exit Code: 1\nxs_generation.rz_spectrum/micro_cross_section: ################################################################################\nxs_generation.rz_spectrum/micro_cross_section: Tester failed, reason: ERRMSG\nxs_generation.rz_spectrum/micro_cross_section:\nxs_generation.rz_spectrum/micro_cross_section ................................................ FAILED (ERRMSG)\n\n2 Error\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Working Directory: /home/pantandr/projects/griffin/tests/performance/SelfShieldingAPI/pebblebed\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Running command: /home/pantandr/projects/griffin/griffin-opt -i eq_core_onlinexs.i --check-input\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: ******************************************************************************************************************\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                       _________\n                 _________\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                       \\_________\\----------____\n ____----------/_________/\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                           \\________\\-------\\\\\\\\\\\\               //////-------/________/\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                               \\________\\------\\\\||             ||//------/________/\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                                      \\_____\\----\\\\             //----/_____/\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                          \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2588\u2557  \u2588\u2588\u2557      \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                         \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2551      \u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                         \u2588\u2588\u2551  \u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                         \u2588\u2588\u2551  \u255a\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2551\u255a\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                         \u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2588\u2588\u2588\u2551      \u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                          \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u2550\u255d      \u255a\u2550\u255d     \u255a\u2550\u255d\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                                     Multiphysics Nuclear Reactor Analysis Code\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                                             Idaho National Laboratory\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:                                            Argonne National Laboratory\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: ******************************************************************************************************************\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: ------------------------------------------------------------------------------------------------------------------\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Notice: These data were produced by Battelle Energy Alliance, LLC under contract No.\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: DE-AC07-05ID14517 and UChicago Argonne under contract No. DE-AC02-06CH11357, LLC with\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: the Department of Energy. During the period of commercialization or such other time\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: period specified by the Department of Energy, the Government is granted for itself and\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: others acting on its behalf a nonexclusive, paid-up, irrevocable worldwide license in\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: this data to reproduce, prepare derivative works, and perform publicly and display\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: publicly, by or on behalf of the Government. Subsequent to that period the Government is\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: granted for itself and others acting on its behalf a nonexclusive, paid-up, irrevocable\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: worldwide license in this data to reproduce, prepare derivative works, distribute copies\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: to the public, perform publicly and display publicly, and to permit others to do so. The\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: specific term of the license can be identified by inquiry made to the Contractor or DOE.\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: NEITHER THE UNITED STATES NOR THE UNITED STATES DEPARTMENT OF ENERGY, NOR ANY OF THEIR\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: EMPLOYEES, MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY DATA, APPARATUS,\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE WOULD NOT INFRINGE PRIVATELY\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: OWNED RIGHTS.\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: ------------------------------------------------------------------------------------------------------------------\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Griffin version:         git commit dde282aed on 2024-05-21\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Framework Information:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: MOOSE Version:           git commit 82e31844cb on 2024-05-21\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: LibMesh Version:         1c5369aa05eaae8ebeb7930845fce3b1d59cbb37\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: PETSc Version:           3.20.3\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: SLEPc Version:           3.20.1\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Current Time:            Thu May 23 09:31:00 2024\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Executable Timestamp:    Thu May 23 09:20:56 2024\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Parallelism:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:   Num Processors:        1\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:   Num Threads:           1\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Command line: /home/pantandr/projects/griffin/griffin-opt -i eq_core_onlinexs.i --check-input\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: *** Info ***\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Attempting to gather AQData from an SN system for SN fixed source solver, but none exists. Thus, AQData is built using NPolar = 2 NAzmthl = 3 NA = 3\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Still Setting Up.................................\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: *** ERROR ***\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Failed to initialize SelfShieldingAPI: initialize\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Stack frames: 22\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 0: libMesh::print_trace(std::ostream&)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 1: moose::internal::mooseErrorRaw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 2: void mooseError<char const (&) [50]>(char const (&) [50])\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 3: /home/pantandr/projects/griffin/isoxml/lib/libisoxml-opt.so.0(+0x2093aa) [0x7f9558ff13aa]\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 4: ISOXML::SSMultigroupLibrary::SSMultigroupLibrary(int, ISOXML::SelfShieldingOption, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, double, std::vector<double, std::allocator<double> > const&, bool, ISOXML::SlowingdownOption, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ISOXML::ENDFBType)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 5: ISOXML::PebbleSSMultigroupLibrary::PebbleSSMultigroupLibrary(int, ISOXML::SelfShieldingOption, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, double, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool, std::vector<double, std::allocator<double> > const&, bool, ISOXML::SlowingdownOption, ISOXML::DancoffOption, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ISOXML::ENDFBType)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 6: PebbleBedSelfShielding::PebbleBedSelfShielding(InputParameters const&)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 7: RegistryEntry<PebbleBedSelfShielding>::build(InputParameters const&)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 8: Factory::createUnique(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, InputParameters const&, unsigned int, bool)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 9: std::unique_ptr<UserObject, std::default_delete<UserObject> > Factory::createUnique<UserObject>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, InputParameters const&, unsigned int)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 10: FEProblemBase::addUserObject(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, InputParameters&)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 11: AddUserObjectAction::act()\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 12: Action::timedAct()\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 13: ActionWarehouse::executeActionsWithAction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 14: ActionWarehouse::executeAllActions()\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 15: MooseApp::runInputFile()\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 16: MooseApp::run()\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 17: GriffinApp::run()\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 18: /home/pantandr/projects/griffin/griffin-opt() [0x402961]\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 19: main\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 20: __libc_start_main\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: 21: /home/pantandr/projects/griffin/griffin-opt() [0x402bde]\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: [sawtooth1:mpi_rank_0][MPIDI_CH3_Abort] application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0: Inappropriate ioctl for device (25)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: [000]***ERROR***An error occured in an IO statement\n       - Failed to import the library header structure from a binary file (/home/pantandr/projects/griffin/isoxml/src/selfshieldingapi/ANLLibraryHeader.f90: 581)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: [000]***ERROR***An error occured in the previous subroutine             - Failed to set path to library file (/home/pantandr/projects/griffin/isoxml/src/selfshieldingapi/ANLLib.f90: 344)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: [000]***ERROR***An error occured in the previous subroutine             - Failed to initialize the subgroup API (/home/pantandr/projects/griffin/isoxml/src/selfshieldingapi/sg.f90: 186)\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Exit Code: 1\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: ################################################################################\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs: Tester failed, reason: ERRMSG\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs:\nperformance/SelfShieldingAPI/pebblebed.pbr_depletion_onlinexs ................................ FAILED (ERRMSG)\n\n3 Error\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Working Directory: /home/pantandr/projects/griffin/tests/materials\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Running command: /home/pantandr/projects/griffin/griffin-opt -i pebblebedselfshieldingmaterial_infiniteSZ.i\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: ******************************************************************************************************************\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                       _________                                                   _________\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                       \\_________\\----------____                   ____----------/_________/\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                           \\________\\-------\\\\\\\\\\\\               //////-------/________/\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                               \\________\\------\\\\||             ||//------/________/\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\n \\_____\\----\\\\             //----/_____/\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                          \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2588\u2557  \u2588\u2588\u2557      \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                         \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2551      \u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                         \u2588\u2588\u2551  \u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                         \u2588\u2588\u2551  \u255a\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2551\u255a\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                         \u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2588\u2588\u2588\u2551      \u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                          \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u2550\u255d      \u255a\u2550\u255d     \u255a\u2550\u255d\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nMultiphysics Nuclear Reactor Analysis Code\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\n        Idaho National Laboratory\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\n       Argonne National Laboratory\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: ******************************************************************************************************************\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: ------------------------------------------------------------------------------------------------------------------\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Notice: These data were produced by Battelle Energy Alliance, LLC under contract No.\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: DE-AC07-05ID14517 and UChicago Argonne under contract No. DE-AC02-06CH11357, LLC with\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: the Department of Energy. During the period of commercialization or such other time\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: period specified by the Department of Energy, the Government is granted for itself and\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: others acting on its behalf a nonexclusive, paid-up, irrevocable worldwide license in\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: this data to reproduce, prepare derivative works, and perform publicly and display\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: publicly, by or on behalf of the Government. Subsequent to that period the Government is\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: granted for itself and others acting on its behalf a nonexclusive, paid-up, irrevocable\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: worldwide license in this data to reproduce, prepare derivative works, distribute copies\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: to the public, perform publicly and display publicly, and to permit others to do so. The\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: specific term of the license can be identified by inquiry made to the Contractor or DOE.\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: NEITHER THE UNITED STATES NOR THE UNITED STATES DEPARTMENT OF ENERGY, NOR ANY OF THEIR\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: EMPLOYEES, MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY DATA, APPARATUS,\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE WOULD NOT INFRINGE PRIVATELY\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: OWNED RIGHTS.\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: ------------------------------------------------------------------------------------------------------------------\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Griffin version:         git commit dde282aed on 2024-05-21\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Framework Information:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: MOOSE Version:           git commit 82e31844cb on 2024-05-21\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: LibMesh Version:         1c5369aa05eaae8ebeb7930845fce3b1d59cbb37\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: PETSc Version:           3.20.3\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: SLEPc Version:           3.20.1\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Current Time:            Thu May 23 09:48:10 2024\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Executable Timestamp:    Thu May 23 09:20:56 2024\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Parallelism:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Num Processors:        1\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Num Threads:           1\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Command line: /home/pantandr/projects/griffin/griffin-opt -i pebblebedselfshieldingmaterial_infiniteSZ.i\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Angular quadrature type: Gauss-Chebyshev\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Number of polars: 2\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Number of azimuthals: 3\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: *** Warning ***\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Isotope TM168 is not supported in MC2-3 library for slowing down calculation, so infinite dilute XS will be used.\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: *** Info ***\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Higher order scattering up to 3 above 1 is cut off in material pebblebed_mat\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Objects counting for the transport system *dfem* :\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:       Variables - 4\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:    AuxVariables - 12\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:         Kernels - 12\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:             BCs - 4\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:             ICs - 4\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:       DGKernels - 4\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:  Postprocessors - 1\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:     UserObjects - 1\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:    AuxMaterials - 2\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Mesh:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Parallel Type:           replicated\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Mesh Dimension:          2\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Spatial Dimension:       2\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Nodes:                   4\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Elems:                   1\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Num Subdomains:          1\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Nonlinear System:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Num DOFs:                384\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Num Local DOFs:          384\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Variables:               { \"aflux_g0_0\" \"aflux_g0_1\" \"aflux_g0_2\" \"aflux_g0_3\" \"aflux_g0_4\" ... \"aflux_g3_19\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                              \"aflux_g3_20\" \"aflux_g3_21\" \"aflux_g3_22\" \"aflux_g3_23\" }\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Finite Element Types:    \"L2_LAGRANGE\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Approximation Orders:    \"FIRST\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Auxiliary System:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Num DOFs:                78\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Num Local DOFs:          78\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Variables:               { \"temp_dist\" \"pebble_fuel_temp_0\" \"pebble_fuel_temp_1\" \"pebble_graphite_temp_0\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                              \"pebble_graphite_temp_1\" } { \"fission\" \"kappa_fission\" } { \"pvf_0\" \"pvf_1\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                              } { \"flux_moment_g0_L0_M0\" \"flux_moment_g0_L1_M0\" \"flux_moment_g0_L1_M1\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                              \"flux_moment_g1_L0_M0\" \"flux_moment_g1_L1_M0\" ... \"flux_moment_g2_L1_M0\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                              \"flux_moment_g2_L1_M1\" \"flux_moment_g3_L0_M0\" \"flux_moment_g3_L1_M0\" \"flux_moment_g3_L1_M1\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:                              }\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Finite Element Types:    \"LAGRANGE\" \"L2_LAGRANGE\" \"MONOMIAL\" \"L2_LAGRANGE\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Approximation Orders:    \"FIRST\" \"FIRST\" \"CONSTANT\" \"FIRST\"\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Execution Information:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Executioner:             Eigenvalue\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:   Solver Mode:             Preconditioned JFNK\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Postprocessor Values:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: +----------------+----------------+----------------+-------------------------+----------------+\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: | time           | eigenvalue     | fission        | fission_source_integral | kappa_fission  |\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: +----------------+----------------+----------------+-------------------------+----------------+\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: |   0.000000e+00 |   1.000000e+00 |   0.000000e+00 |            1.018217e+05 |   0.000000e+00 |\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: +----------------+----------------+----------------+-------------------------+----------------+\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:  Reading MCC Libraries ...\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:  FILE1 / FILE2 / FILE3 / FILE4 / FILE5 /\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:  Preprocess MC2-3 data\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:  Preparing Hyperfine Group Cross Sections for Slowing Down Calculation\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Rank    0 Reconstruct PW cross section/pw_041k_C____7.0294\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Rank    0 Reconstruct PW cross section/pw_041k_O16__7.0294\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Rank    0 Reconstruct PW cross section/pw_041k_SI28_7.0294\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Rank    0 Reconstruct PW cross section/pw_041k_U235_7.0294\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: At line 159 of file /home/pantandr/projects/griffin/isoxml/src/base/ACEReaderFortran.f90 (unit = 99, file = '/home/pantandr/projects/griffin/tests/materials/../../griffin_data/xs_generation/lib.ace.e70/./U235_0K.70c')\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Fortran runtime error: Bad value during floating point read\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: [Self-Shielding API]...Reading Base Multi-group Library from Binary..................................................................\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: ################################################################################\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ: Tester failed, reason: CRASH\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ:\nmaterials.PebbleBedSelfShieldingNeutronicsMaterial/pebblebed_infinite_SZ ...................... FAILED (CRASH)\n\nDiagnostics for MOOSE installation issues\n##################################################################################################\nInfluential Environment Variables\n\nCC=mpicc\nCONDA_CHANNEL=https://conda.software.inl.gov/public\nCURL_CA_BUNDLE=\nCXX=mpicxx\nF77=mpif77\nF90=mpif90\nFC=mpif90\nLD_LIBRARY_PATH=/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib\nMODULESHOME=/apps/spack/opt/gcc-12.3.0/lmod-8.7.32-jpqjeet2bt3lyiiwrph7mo6iiznyuiea/lmod/lmod\nMOOSE_JOBS=6\nPATH=/apps/moose/stack/moose-tools-2023.10.19/bin:/apps/local/mvapich2/2.3.7-gcc-12.3.0/bin:/apps/spack/opt/gcc-10.5.0/gcc-12.3.0-vx2ffftzrhvsqiflq3hwu2nissbw5dpf/bin:/apps/local/patchelf/bin:/apps/spack/opt/gcc-12.3.0/cmake-3.27.7-5cfktbfycm7h3l77524abhbkxakzpjyn/bin:/apps/spack/opt/gcc-12.3.0/flex-2.6.4-cnsvdkgp5osil4f72nhihf2khtz3fk2o/bin:/opt/clmgr/sbin:/opt/clmgr/bin:/opt/sgi/sbin:/opt/sgi/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/c3/bin:/opt/pbs/bin:/sbin:/bin\nREQUESTS_CA_BUNDLE=\nSSL_CERT_FILE=\n\n##################################################################################################\nCompiler(s) (CC CXX FC F77 F90):\n\nCC=/apps/local/mvapich2/2.3.7-gcc-12.3.0/bin/mpicc\nCC -show:\ngcc -fPIC -g -O -fno-omit-frame-pointer -I/apps/local/mvapich2/2.3.7-gcc-12.3.0/include -L/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -Wl,-rpath -Wl,/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -Wl,--enable-new-dtags -lmpi\nCC version:     gcc (Spack GCC) 12.3.0\n\nCXX=/apps/local/mvapich2/2.3.7-gcc-12.3.0/bin/mpicxx\nCXX -show:\ng++ -g -O -fPIC -std=gnu++11 -I/apps/local/mvapich2/2.3.7-gcc-12.3.0/include -L/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -lmpicxx -Wl,-rpath -Wl,/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -Wl,--enable-new-dtags -lmpi\nCXX version:    g++ (Spack GCC) 12.3.0\n\nFC=/apps/local/mvapich2/2.3.7-gcc-12.3.0/bin/mpif90\nFC -show:\ngfortran -fPIC -g -O -fallow-argument-mismatch -I/apps/local/mvapich2/2.3.7-gcc-12.3.0/include -I/apps/local/mvapich2/2.3.7-gcc-12.3.0/include -L/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -lmpifort -Wl,-rpath -Wl,/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -Wl,--enable-new-dtags -lmpi\nFC version:     GNU Fortran (Spack GCC) 12.3.0\n\nF77=/apps/local/mvapich2/2.3.7-gcc-12.3.0/bin/mpif77\nF77 -show:\ngfortran -fPIC -g -O -fallow-argument-mismatch -I/apps/local/mvapich2/2.3.7-gcc-12.3.0/include -I/apps/local/mvapich2/2.3.7-gcc-12.3.0/include -L/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -lmpifort -Wl,-rpath -Wl,/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -Wl,--enable-new-dtags -lmpi\nF77 version:    GNU Fortran (Spack GCC) 12.3.0\n\nF90=/apps/local/mvapich2/2.3.7-gcc-12.3.0/bin/mpif90\nF90 -show:\ngfortran -fPIC -g -O -fallow-argument-mismatch -I/apps/local/mvapich2/2.3.7-gcc-12.3.0/include -I/apps/local/mvapich2/2.3.7-gcc-12.3.0/include -L/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -lmpifort -Wl,-rpath -Wl,/apps/local/mvapich2/2.3.7-gcc-12.3.0/lib -Wl,--enable-new-dtags -lmpi\nF90 version:    GNU Fortran (Spack GCC) 12.3.0\n\nOK\n\n##################################################################################################\nPython Sanity Checks\n\nVerify `/usr/bin/env python3 --version` (reporting as: Python 3.10.12),\nmatches versions for: `which python3 && which python`\n\nOK\n\n##################################################################################################\nPython Modules (TestHarness, run-ability)\n\nOK",
          "url": "https://github.com/idaholab/moose/discussions/27700",
          "updatedAt": "2024-05-24T21:19:48Z",
          "publishedAt": "2024-05-23T16:19:24Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThanks for reporting this but you will need to post about this on the griffin discourse. It s not relevant enough to moose users who don't have access to griffin a priori\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27700#discussioncomment-9537510",
                  "updatedAt": "2024-05-23T16:36:34Z",
                  "publishedAt": "2024-05-23T16:36:33Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "YaqiWang"
                          },
                          "bodyText": "If you log in Slack and tell one of Griffin developers your email address, we can also add you into the Slack channel for Griffin users.",
                          "url": "https://github.com/idaholab/moose/discussions/27700#discussioncomment-9551687",
                          "updatedAt": "2024-05-24T21:19:48Z",
                          "publishedAt": "2024-05-24T21:19:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "crank-nicolson fails to converge at the initial step",
          "author": {
            "login": "ananthanarasimhanj"
          },
          "bodyText": "if I use crank nicolson, it fails to converge in the first timestep. What can be evaluated in-general to address this issue? without specifying any scheme, the simulation runs fine.  I can share the input file here if that helps (but input file is for CRANE - a MOOSE based).",
          "url": "https://github.com/idaholab/moose/discussions/27547",
          "updatedAt": "2024-05-24T21:19:36Z",
          "publishedAt": "2024-05-03T23:12:38Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhich equation are you trying to solve?\nIs CRANE open-source?\nYou can try the troubleshooting steps here:\nhttps://mooseframework.inl.gov/moose/application_usage/failed_solves.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9310445",
                  "updatedAt": "2024-05-04T00:38:03Z",
                  "publishedAt": "2024-05-04T00:38:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ananthanarasimhanj"
                          },
                          "bodyText": "Trying to solve \"ChemicalReactions\" network. Yes, CRANE is open source built on MOOSE framework.\nIf I disable \"crank-nicolson\", the solver runs fine.",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9320750",
                          "updatedAt": "2024-05-05T16:18:31Z",
                          "publishedAt": "2024-05-05T16:18:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "What about bdf2?\nDo all the nonlinear equations involved have a time derivative term? That s a known issue for our implementation of crank Nicholson",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9321763",
                          "updatedAt": "2024-05-05T19:21:24Z",
                          "publishedAt": "2024-05-05T19:21:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ananthanarasimhanj"
                          },
                          "bodyText": "Yes, all the equations have a time derivative term.\nI just tried with bdf2, and it works fine and runs very fast also.\nBut the physical end time at which I get steady state convergence changes, and the final solution (density of each species) varies slightly with or without bdf2. Is that fine? what is the default time-integrator if I don't specify any? is there a recommended time-integrator for chemical reaction network?",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9322110",
                          "updatedAt": "2024-05-05T20:48:40Z",
                          "publishedAt": "2024-05-05T20:48:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The default time integrator is implicit (first order) Euler.\nSome differences in the results is expected if you have not converged the time step size.\nI don't know about recommendations for time integration of chemical reaction network. The selection of a numerical scheme is typically done based on what is done elsewhere in the litterature of that field.",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9322311",
                          "updatedAt": "2024-05-05T21:26:42Z",
                          "publishedAt": "2024-05-05T21:26:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ananthanarasimhanj"
                          },
                          "bodyText": "Thanks! I will look into the literature.\nI guess the fast run I observed now is due to disabling the growth factor in the TimeStepper. Here is the executioner block I use now.\n[Executioner]\n  type = Transient\n  end_time = 1e3#s \n  #solve_type = 'newton'\n  solve_type = 'pjfnk'\n  #scheme = crank-nicolson\n  scheme = bdf2\n  petsc_options_iname = '-snes_linesearch_type'\n  petsc_options_value = 'basic'  \n  automatic_scaling = true\n  steady_state_detection = true\n  compute_scaling_once = false\n  #nl_rel_tol = 1e-5\n  [TimeStepper]\n    type = IterationAdaptiveDT\n    dt = 1e-3   \n    growth_factor = 1.01    \n  []\n\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9322338",
                          "updatedAt": "2024-05-05T21:31:51Z",
                          "publishedAt": "2024-05-05T21:31:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The growth factor helps the time stepper increase the time step. This can be useful when simply searching for steady state conditions.\nOf course for a transient one does not want to grow the time step too much, as it results in a loss of accuracy",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9322342",
                          "updatedAt": "2024-05-05T21:33:56Z",
                          "publishedAt": "2024-05-05T21:33:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ananthanarasimhanj"
                          },
                          "bodyText": "Yes, if I disable growth_factor, the simulation is faster and achieve steady state condition quick, but with lose of accuracy. So, I have set it to 1.01. I think the default is 2.\nSo, I guess I can proceed with bdf2 instead of CN?",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9322354",
                          "updatedAt": "2024-05-05T21:39:30Z",
                          "publishedAt": "2024-05-05T21:37:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "You might want to look at this CFD thread regarding BDF2 vs. Crank-Nicolson. I will quote one comment here:\n\n\nIt [BDF2] is, to the best of my knowledge, the only second order implicit A-stable scheme",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9551681",
                          "updatedAt": "2024-05-24T21:18:57Z",
                          "publishedAt": "2024-05-24T21:18:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "another quote from that thread\n\nAs a practitioner, the very point is that BDF2 is more stable than CN and discretizes the time derivative at n+1.",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9551685",
                          "updatedAt": "2024-05-24T21:19:37Z",
                          "publishedAt": "2024-05-24T21:19:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ananthanarasimhanj"
                  },
                  "bodyText": "I was trying to use lstabledirk4 (MOOSE object link), but I get the following error message. And what does the dirk in the below error message refer to? 4th order?\nInvalid option \"lstabledirk4\" in MooseEnum.  Valid options (not case-sensitive) are \"implicit-euler explicit-euler crank-nicolson bdf2 explicit-midpoint dirk explicit-tvd-rk-2 newmark-beta\".",
                  "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9332144",
                  "updatedAt": "2024-05-06T17:14:56Z",
                  "publishedAt": "2024-05-06T17:14:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the shorthand syntax does not support it\nadd a [TimeIntegrator] sub-block to the Executioner blokc",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9332281",
                          "updatedAt": "2024-05-06T17:27:38Z",
                          "publishedAt": "2024-05-06T17:27:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ananthanarasimhanj"
                          },
                          "bodyText": "Thanks! It fixed.\nAlso, whether MOOSE allows high-order (order > 5th) adaptive dt integration?",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9332351",
                          "updatedAt": "2024-05-06T17:34:01Z",
                          "publishedAt": "2024-05-06T17:34:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "5th order has not been implemented but I dont see why we could not implement it if needed",
                          "url": "https://github.com/idaholab/moose/discussions/27547#discussioncomment-9332658",
                          "updatedAt": "2024-05-06T18:00:10Z",
                          "publishedAt": "2024-05-06T18:00:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Jacobian calculation with respect to two variables",
          "author": {
            "login": "AmrIbrahim8894"
          },
          "bodyText": "Hi there,\nI am developing an action for cohesive zone in poroelastodynamic media, I have a question regarding the jacobian calculation for the traction jump. If the traction jump is function of displacement jump only and if, i am understanding correctly, we use computeQpJacobian to calculate the diagonal entries of the jacobian matrix and computeQpOffDiagJacobian to calculate the Off-diagonal entries of the jacobian matrix.\n\n\n\nBut, if the traction jump is function of both displacement jump and fluid velocity jump (another variable), the jacobian matrix will be as  follows:\n\nMy question is how to implement this new jacobian matrix in moose?\nThank you.",
          "url": "https://github.com/idaholab/moose/discussions/27557",
          "updatedAt": "2024-05-24T21:14:18Z",
          "publishedAt": "2024-05-06T21:21:07Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "You still use the computeQpOffDiagJacobian method. You just write different Jacobian statements depending on the passed in jvar. Alternatively you can use automatic differentiation and not worry about writing the Jacobians",
                  "url": "https://github.com/idaholab/moose/discussions/27557#discussioncomment-9551658",
                  "updatedAt": "2024-05-24T21:14:19Z",
                  "publishedAt": "2024-05-24T21:14:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Time variable in ParsedFunction not working",
          "author": {
            "login": "ashishdhole"
          },
          "bodyText": "Hello.\nI am trying to change an aux variable with respect to the simulation time using a custom function defined by ParsedFunction.\nFollowing is the snippet of my code.\n[AuxVariables]\n  [bnds]\n    order = FIRST\n    family = LAGRANGE\n  []\n  [c]\n    [InitialCondition]\n      type = FunctionIC\n      function = time\n    []\n  []\n[]\n[Functions]\n  [time]\n    type = ParsedFunction\n    expression = 't'\n  []\n[]\n\nbut I do not see variable 'c' changing with time.\nFollowing is the output (.csv).\ntime | c | gr1area\n-- | -- | --\n1 | 0 | 654375.0005\n2 | 0 | 654375.001\n3 | 0 | 654375.0014\n4 | 0 | 654375.0019\n.\n.\n.\n\n95 | 0 | 654375.0456\n96 | 0 | 654375.0461\n97 | 0 | 654375.0466\n98 | 0 | 654375.0471\n99 | 0 | 654375.0475\n100 | 0 | 654375.048\n\nBest Regards,\nAshish",
          "url": "https://github.com/idaholab/moose/discussions/27708",
          "updatedAt": "2024-05-24T18:41:15Z",
          "publishedAt": "2024-05-24T18:28:32Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nInitial conditions are evaluated only right before the very first  time step\nuse an auxiliary kernel (AuxKernel) instead for this",
                  "url": "https://github.com/idaholab/moose/discussions/27708#discussioncomment-9550684",
                  "updatedAt": "2024-05-24T18:29:55Z",
                  "publishedAt": "2024-05-24T18:29:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ashishdhole"
                  },
                  "bodyText": "Hello Guillaume,\nThank you very much. Now it is working as expected.\nBest Regards\nAshish",
                  "url": "https://github.com/idaholab/moose/discussions/27708#discussioncomment-9550767",
                  "updatedAt": "2024-05-24T18:41:20Z",
                  "publishedAt": "2024-05-24T18:41:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Create node set from post adaptivity mesh failure",
          "author": {
            "login": "LifengGan"
          },
          "bodyText": "Dear moose user,\nI had a problem on making node set from the post-adaptivity mesh using the following Mesh and Adaptivity block\nI got the noncrack node set only the the original gen mesh, not the one from post adaptivity, see the fig below when loading in y-direction condition\nWould anyone know how to fix this problem, thx.\nBest regards,\nLifeng\n\n[Mesh]\n  [gen]\n    type = GeneratedMeshGenerator\n    dim = 2\n    nx = 20\n    ny = 10\n    xmax = 0.1\n    ymax = 0.05\n  []\n  [./noncrack]\n    type = BoundingBoxNodeSetGenerator\n    new_boundary = noncrack\n    bottom_left = '0.05 0 0'\n    top_right = '0.1 0 0'\n    input = gen\n  [../]\n[]\n\n[Adaptivity]\n  marker = marker\n  initial_marker = marker\n  initial_steps = 2\n  stop_time = 0\n  max_h_level = 5\n  [Markers]\n    [marker]\n      type = OrientedBoxMarker\n      center = '0.07 0 0'\n      length = 0.055\n      width = 0.02\n      height = 0.1\n      length_direction = '1 0 0'\n      width_direction = '0 1 0'\n      inside = REFINE\n      outside = DO_NOTHING\n    []\n  []\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27707",
          "updatedAt": "2024-05-25T01:43:39Z",
          "publishedAt": "2024-05-24T17:11:36Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe ordering of execution does not work to create the nodeset like this.\nThe mesh is generated by gen and noncrack, then adaptivity is run.\nYou could:\n\nsave the mesh using the checkpoint system (.cpr files), reload it with a FileMeshGenerator, then run the noncrack generator again\nOR\ntry to create a new sideset-updater user object that looks like BoundingBoxNodesetGenerator\nAn example here\nhttps://mooseframework.inl.gov/source/userobjects/SidesetAroundSubdomainUpdater.html\nof the user-object version of the SidesetAroundSubdomainGenerator\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27707#discussioncomment-9550252",
                  "updatedAt": "2024-05-24T17:37:53Z",
                  "publishedAt": "2024-05-24T17:37:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Extracting data from exoudsiie",
          "author": {
            "login": "burritotukituki"
          },
          "bodyText": "Hi experts,\nI'm not entirely sure if this is the appropriate platform for my query, but I could really use some guidance.\nI'm currently running numerous small simulations, each of which generates an exodus file. My goal is to extract a specific variable (cell data) but only from a particular block within these files.\nI've been attempting to achieve this using meshio in Python, but I've encountered difficulties in correlating the blocks with my data. It seems that I cannot access the blocks when I open the file with meshio.\nCould someone please suggest an approach for dealing with this data extraction issue?\nThanks in advance!",
          "url": "https://github.com/idaholab/moose/discussions/27508",
          "updatedAt": "2024-05-24T09:52:16Z",
          "publishedAt": "2024-04-30T09:50:54Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI think you can work with the vtk python package to do this. But I have never done it.\nAlternatively, Paraview has programmable filters that may be friendlier than python packages\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27508#discussioncomment-9274668",
                  "updatedAt": "2024-04-30T12:06:26Z",
                  "publishedAt": "2024-04-30T12:06:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GregVernon"
                  },
                  "bodyText": "The best approach is to build the SEACAS project (documentation), which is the project that \"owns\" Exodus (SEACAS might already be built by MOOSE?) and use one of the following approaches:\n\nexodus.py (documentation)\nexo2mat / mat2exo (documentation)\nexotxt / txtexo (documentation)",
                  "url": "https://github.com/idaholab/moose/discussions/27508#discussioncomment-9501157",
                  "updatedAt": "2024-05-20T21:40:22Z",
                  "publishedAt": "2024-05-20T21:40:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "We do package the SEACAS tools for our users. To install in your MOOSE conda environment, simply:\nconda install moose-seacas",
                          "url": "https://github.com/idaholab/moose/discussions/27508#discussioncomment-9501361",
                          "updatedAt": "2024-05-20T22:18:03Z",
                          "publishedAt": "2024-05-20T22:18:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "burritotukituki"
                  },
                  "bodyText": "Hi all,\nthanks for the great ideas. I exported the results as VTK and used meshio to read the files. That worked, thanks!!",
                  "url": "https://github.com/idaholab/moose/discussions/27508#discussioncomment-9545284",
                  "updatedAt": "2024-05-24T09:52:16Z",
                  "publishedAt": "2024-05-24T09:52:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Issue about using MPI for Multiapp",
          "author": {
            "login": "SomnusYu"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHi all,\nI am doing the [TensorMechanics] (old version) and two-phase flow module (like THM) coupling through Multiapp. And the TensorMechanics is the main app in my case.\nWhen I use ./app_name -i case_name_main.i to run my case, it will cost 1693 seconds. However, if I use mpiexec -n 5  ./app_name -i case_name_main.i,  it will cost 5478 seconds. Further, if I use mpiexec -n 10  ./app_name -i case_name_main.i, it will cost 18124 seconds.\nWhy does using more computing core not cause a decrease in computation time, but result in more computation time? Shouldn't parallel computing improve computational efficiency?\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/27705",
          "updatedAt": "2024-05-24T09:16:11Z",
          "publishedAt": "2024-05-24T08:58:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe solvers do not scale to small numbers of DoFs. Using too many processes can slow down the code\nYou can try to identify whether tensormechanics or THM is being slow with higher number of cores. Then you can limit the number of processes of the multiapp using the max_procs_per_app parameter\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27705#discussioncomment-9544754",
                  "updatedAt": "2024-05-24T09:03:07Z",
                  "publishedAt": "2024-05-24T09:03:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/27705#discussioncomment-9544895",
                          "updatedAt": "2024-05-24T09:16:11Z",
                          "publishedAt": "2024-05-24T09:16:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "POD Reduced Basis Surrogate Example Fails in Parallel",
          "author": {
            "login": "rfryeSigma"
          },
          "bodyText": "The POD Reduced Basis Surrogate Example fails when run in parallel.\nThe example code in moose/modules/stochastic_tools/examples/surrogates/pod_rb/2d_multireg has .i files for a full_order model to run on 1000 samples, a trainer on 100 samples, and a surrogate emulating the full_order model on the same 1000 samples. When properly run the outputs of the full_order and the surrogate models agree to about 5 decimal digits.\nThe example codes cannot be run in place using the code generated by the Makefile in the stochastic_tools module because the MaterialReaction and PODSurrogateTester codes are not included. They are provided only in the stochastic_tools/test folder. I created a moose app with stork, modified its Makefile for STOCHASTIC_TOOLS            := yes and copied the supplementary test code to the app's include and src folders. With these modifications, I was able to run all of the .i files with a single processor on an M1 MAC and on an AWS Linux partition.\nWhen I try to run the trainer with mpiexec -n 8, it runs through the first half of the training and reports errors in the second half, I include the output from the end of the first half through the failure:\nsub12: \nsub12: Postprocessor Values:\nsub12: +----------------+----------------+\nsub12: | time           | nodal_l2       |\nsub12: +----------------+----------------+\nsub12: |   0.000000e+00 |   0.000000e+00 |\nsub12: +----------------+----------------+\nsub12: \nsub12:       0 Linear |R| = 1.501988e+03\nsub12:       1 Linear |R| = 5.483291e+01\nsub12:       2 Linear |R| = 2.983655e-01\nsub12:       3 Linear |R| = 4.760389e-03\nsub12:  Solve Converged!\nsub12: \nsub12: Outlier Variable Residual Norms:\nsub12:   psi: 1.501988e+03\nsub12: \nsub12: Postprocessor Values:\nsub12: +----------------+----------------+\nsub12: | time           | nodal_l2       |\nsub12: +----------------+----------------+\nsub12: |   0.000000e+00 |   0.000000e+00 |\nsub12: |   1.000000e+00 |   1.778131e+04 |\nsub12: +----------------+----------------+\nsub12: \nPODFullSolveMultiApp [sub] 13/100 samples complete!\nPODFullSolveMultiApp [sub] 26/100 samples complete!\nPODFullSolveMultiApp [sub] 39/100 samples complete!\nPODFullSolveMultiApp [sub] 52/100 samples complete!\nPODFullSolveMultiApp [sub] 64/100 samples complete!\nPODFullSolveMultiApp [sub] 76/100 samples complete!\nPODFullSolveMultiApp [sub] 88/100 samples complete!\nPODFullSolveMultiApp [sub] 100/100 samples complete!\n      Finished Executing MultiApps                                                       [  2.37 s] [  895 MB]\n    Finished Executing MultiApps                                                         [  2.37 s] [  895 MB]\n  Finished Executing MultiApps                                                           [  2.37 s] [  895 MB]\n Solve Skipped!\n\n\n*** ERROR ***\n/Users/rogerfrye/Documents/Git/multi_ai/problems/POD_trainer.i:56.3:\nThe following error occurred in the MultiApp 'sub' of type PODFullSolveMultiApp.\n\nInternal error, a processor has an undefined app.\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 5\n\n\n*** ERROR ***\n/Users/rogerfrye/Documents/Git/multi_ai/problems/POD_trainer.i:56.3:\nThe following error occurred in the MultiApp 'sub' of type PODFullSolveMultiApp.\n\nInternal error, a processor has an undefined app.\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 6\n\n\n*** ERROR ***\n/Users/rogerfrye/Documents/Git/multi_ai/problems/POD_trainer.i:56.3:\nThe following error occurred in the MultiApp 'sub' of type PODFullSolveMultiApp.\n\nInternal error, a processor has an undefined app.\n\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 7\nmpiexec -n 8 ../multi_ai-opt -i POD_trainer.i  0.01s user 0.01s system 0% cpu 8.589 total\n\n\nThis error does not show up when num_rows in the trainer is less than 15 or for certain other values like 50 and 60. With num_rows = 15, it fails when run in parallel with 3 processors.",
          "url": "https://github.com/idaholab/moose/discussions/27698",
          "updatedAt": "2024-05-24T09:06:27Z",
          "publishedAt": "2024-05-23T15:18:08Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@grmnptr @somu15",
                  "url": "https://github.com/idaholab/moose/discussions/27698#discussioncomment-9544782",
                  "updatedAt": "2024-05-24T09:06:27Z",
                  "publishedAt": "2024-05-24T09:06:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "'FunctionSeries' is not a registered object",
          "author": {
            "login": "WayneX-Wong"
          },
          "bodyText": "Hi,\nI try to use functional expansion tools, so I set FUNCTIONAL_EXPANSION_TOOLS  := yes\nbut it gives A 'FunctionSeries' is not a registered object error.\nI then clean with git clean -xfd make clobberall and remake, but still get this error",
          "url": "https://github.com/idaholab/moose/discussions/27704",
          "updatedAt": "2024-05-24T08:14:48Z",
          "publishedAt": "2024-05-24T06:23:03Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis is a known past issue\nIt s already fixed in a recent moose version",
                  "url": "https://github.com/idaholab/moose/discussions/27704#discussioncomment-9544047",
                  "updatedAt": "2024-05-24T08:05:27Z",
                  "publishedAt": "2024-05-24T08:05:26Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "GPUs and/or CUDA",
          "author": {
            "login": "aladshaw3"
          },
          "bodyText": "I know that PETSc has some methods to utilize GPUs and was wondering if MOOSE makes use of GPUs?\nIf so, how would users invoke GPUs for scaling on hybrid computer systems?\nAnd if not, are there any future plans for making MOOSE scalable on hybrid systems (CPUs and GPUs)?\nThanks.",
          "url": "https://github.com/idaholab/moose/discussions/21152",
          "updatedAt": "2024-05-23T13:26:54Z",
          "publishedAt": "2022-05-26T15:19:54Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThere are plans. Though not sure if we have something laid out somewhere to share.\n@fdkong can call Petsc for MOOSE on GPU.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-2828438",
                  "updatedAt": "2022-05-26T15:23:15Z",
                  "publishedAt": "2022-05-26T15:22:36Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fdkong"
                  },
                  "bodyText": "I know that PETSc has some methods to utilize GPUs and was wondering if MOOSE makes use of GPUs?\n\nMOOSE can now seamlessly use GPUs for algebra operations (linear solvers, preconditioners) via PETSc. It will significantly speed up the simulation if it is expensive on the solvers, which is valid for many applications.\nWe form matrix and vector on CPU and move that to GPU to solve\nIn the future, we plan to explore the approaches to move more calculations on GPU. It will also depend on the resources.",
                  "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-2828492",
                  "updatedAt": "2022-05-26T15:32:11Z",
                  "publishedAt": "2022-05-26T15:30:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aladshaw3"
                          },
                          "bodyText": "Thanks for the information. As a follow up, I assume that only certain PETSc operations (specific linear solvers or preconditioners) utilize GPUs. Is there a comprehensive list somewhere so I know which solvers to invoke? Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-2828560",
                          "updatedAt": "2022-05-26T15:40:43Z",
                          "publishedAt": "2022-05-26T15:40:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "This was a great question. We (PETSc team) will work on a table for that. In general, AMG and other iterative methods work pretty well on GPUs and direct solvers such as LU, CC do not play well with GPUs because of data dependency. In theory, at the algebra side, the GPU support is almost  about Vec and Mat. Here is a roadmap at PETSc side https://petsc.org/release/overview/gpu_roadmap/\nFor practice,  you could start with a simple example and then use \"-snes_view\" to check what solvers are you using and use \"-log_view\" to check what operations are carried out on GPU/CPU. By doing that, you will have enough information to understand the simulation.",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-2828721",
                          "updatedAt": "2022-05-26T16:04:44Z",
                          "publishedAt": "2022-05-26T16:04:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mangerij"
                          },
                          "bodyText": "This is a fantastic development!",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-2833757",
                          "updatedAt": "2022-05-27T11:51:25Z",
                          "publishedAt": "2022-05-27T11:51:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ajdubas"
                          },
                          "bodyText": "Good morning,\nI was wondering if you could shed a little more light on how to get MOOSE to solve GPU?  So far I have built PETSc with CUDA and have tried passing in various -dm_mat_type and -dm_vec_type flags to my MOOSE app to utilise the GPU solvers in PETSc but so far to no avail; -log_view shows no data transfer or GPU FLOPS.  Do you have a guide to what I need to do to solve on GPU?  Or any thoughts on what I might be missing?\nMany Thanks in Advance,\nAleks",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-5098480",
                          "updatedAt": "2023-02-24T10:10:30Z",
                          "publishedAt": "2023-02-24T10:10:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@fdkong can you please share your branch where you were doing that?",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-5102326",
                          "updatedAt": "2023-02-24T16:33:10Z",
                          "publishedAt": "2023-02-24T16:33:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "All GPU related stuffs have been merged into libMesh and MOOSE. You might use -mat_type and -vec_type instead of -dm_mat_type and -dm_vec_type to take GPU matrix and vector.\nIn MOOSE, we do not really support DM.  BTW,  if you still have issue, please post the result of \"-snes_view\" and \"-log_view\" to us. Otherwise, we are simply blind.\nThanks for asking",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-5102539",
                          "updatedAt": "2023-02-24T16:56:52Z",
                          "publishedAt": "2023-02-24T16:56:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ajdubas"
                          },
                          "bodyText": "Ok, my initial approach was to use -mat_type and -vec_type of aijcuda and cuda respectively; are these the right types to be using?\nCheers,\nAleks",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-5123606",
                          "updatedAt": "2023-02-27T14:41:42Z",
                          "publishedAt": "2023-02-27T14:41:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ajdubas"
                          },
                          "bodyText": "An update: I have managed to confirm that the compiled PETSc is GPU enabled with the flags -mat_type seqaijcusparse -vec_type seqcuda passed directly to PETSc.  However, when I try the same with a MOOSE problem it does not work neither as part of the [Executioner] block nor as direct command line inputs.  Where do I go from here?\nAll the best,\nAleks",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-5290682",
                          "updatedAt": "2023-03-13T12:15:37Z",
                          "publishedAt": "2023-03-13T12:15:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hi,\nCould you please attach the run log with with  the result of \"-snes_view\" and \"-log_view\" passed to Petsc\nthanks\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-5292292",
                          "updatedAt": "2023-03-13T14:26:24Z",
                          "publishedAt": "2023-03-13T14:26:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ajdubas"
                          },
                          "bodyText": "Is there an example input file or command line invocation for running on GPU?",
                          "url": "https://github.com/idaholab/moose/discussions/21152#discussioncomment-5300525",
                          "updatedAt": "2023-03-14T08:38:28Z",
                          "publishedAt": "2023-03-14T08:38:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}