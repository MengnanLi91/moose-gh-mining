{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0wMi0xNVQxMTo1NDo0NC0wNjowMM4AMTAV"
    },
    "edges": [
      {
        "node": {
          "title": "ld error while compiling tests on a cluster",
          "author": {
            "login": "mcacace"
          },
          "bodyText": "Dear all,\nI just tried to update the moose installation on a local cluster, all ran fine (petsc and libmesh), but when trying to make the test I encountered a \"strange\" (== never seen before) error attached. Was wondering if anyone could point to a solution.\n\nThanks for any update,\nMauro",
          "url": "https://github.com/idaholab/moose/discussions/17037",
          "updatedAt": "2021-02-17T17:28:36Z",
          "publishedAt": "2021-02-17T14:28:29Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "mcacace"
                  },
                  "bodyText": "I think I mixed up moose directories. I was trying to install the newest branch but forgot to update the MOOSE_DIR accordingly and it install libmesh on my old installation.\nWill try to re-install everything from scratch and re-open the post if I encounter any problem.\nSorry for that,\nmauro",
                  "url": "https://github.com/idaholab/moose/discussions/17037#discussioncomment-378424",
                  "updatedAt": "2021-02-17T17:06:44Z",
                  "publishedAt": "2021-02-17T17:06:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Linear and Powerlaw strain hardening question?",
          "author": {
            "login": "naveeniisc"
          },
          "bodyText": "Hi Moose Experts,\nI'm new to the MOOSE environment and trying to run some Tensor Mechanics examples. I need to verify analytical solution of this paper \"Plastic Relaxation of the Transformation Strain Energy of a Misfitting Spherical Precipitate: Linear and Power-Law Strain Hardening\"  with moose numerical solution.  Can anyone suggest me where should I start? Is this sufficient to start with this examples projects/moose/modules/tensor_mechanics/test/tests/recompute_radial_return/isotropic_plasticity_finite_strain.i  and projects/moose/modules/combined/test/tests/power_law_hardening/PowrLawHardening.i ? Paper Attached in this discussion.\nEarmme1981_Article_PlasticRelaxationOfTheTransfor.pdf\nThanks for the assistance!\nNaveen",
          "url": "https://github.com/idaholab/moose/discussions/16449",
          "updatedAt": "2022-10-17T14:47:53Z",
          "publishedAt": "2020-12-10T03:45:35Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "crswong888"
                  },
                  "bodyText": "@hrishiv @albiedahal",
                  "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-190170",
                  "updatedAt": "2022-10-17T14:48:15Z",
                  "publishedAt": "2020-12-11T02:08:17Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "If you are new to MOOSE, I suggest you start to read the Tensor Mechanics documentation, i.e. https://mooseframework.inl.gov/source/materials/IsotropicPowerLawHardeningStressUpdate.html",
                  "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-200412",
                  "updatedAt": "2022-10-17T14:48:18Z",
                  "publishedAt": "2020-12-12T17:19:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "naveeniisc"
                          },
                          "bodyText": "Thank you jiangwen84 let me go through this.",
                          "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-203561",
                          "updatedAt": "2022-10-17T14:48:18Z",
                          "publishedAt": "2020-12-14T02:04:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "naveeniisc"
                  },
                  "bodyText": "Hi Moose Experts,\nI could create the input file for the problem as mentioned in the last post (for isotropic plasticity\n), however the solution is not converging.\nI have read this information here :https://mooseframework.inl.gov/modules/tensor_mechanics/Convergence.html\n, but could not understand the process of setting up the convergence criteria?\nCan someone please explain the convergence criteria in detail.\nThanks in advanced,\nNaveen\nJKlee_test.txt",
                  "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-337369",
                  "updatedAt": "2022-10-17T14:48:20Z",
                  "publishedAt": "2021-02-04T09:14:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "naveeniisc"
                          },
                          "bodyText": "Hi @jiangwen84 @\ncan you explain my above post in detail?\nThanks in advance\nnaveen",
                          "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-354867",
                          "updatedAt": "2022-10-17T14:48:22Z",
                          "publishedAt": "2021-02-09T23:30:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "For mechanics problem, you have to use Global Strain system to setup strain periodicity. https://mooseframework.inl.gov/source/actions/GlobalStrainAction.html\nCould you start with a simpler problem? e.g. 2D, without periodicity. Once successfully, add periodicity, and then 3D.",
                          "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-361264",
                          "updatedAt": "2022-10-17T14:48:23Z",
                          "publishedAt": "2021-02-11T23:31:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "naveeniisc"
                          },
                          "bodyText": "sorry about late reply thank you @jiangwen84. i will follow your instruction.",
                          "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-369021",
                          "updatedAt": "2022-10-17T14:48:23Z",
                          "publishedAt": "2021-02-15T05:42:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "Dear @naveeniisc\nI noticed you fixed the displacement only on one node, called boundary = 100\nCan you try more standard boundary conditions for mechanics problems,\nlike constraining your cubic RVE in a corner,\nsomething like:\n[./z0_bot]\ntype = DirichletBC\nvariable = disp_z\nboundary = back\nvalue = 0.0\n[../]\n[./y0_bot]\ntype = DirichletBC\nvariable = disp_y\nboundary = bottom\nvalue = 0.0\n[../]\n[./x0_bot]\ntype = DirichletBC\nvariable = disp_x\nboundary = left\nvalue = 0.0\n[../]\nConvergence problems are likely to appear if you don't constrain properly your system.\nBest Regards,\nNicol\u00f2 Grilli\nNational University of Singapore",
                  "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-373323",
                  "updatedAt": "2022-11-01T14:55:29Z",
                  "publishedAt": "2021-02-16T11:37:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "naveeniisc"
                          },
                          "bodyText": "Dear @ngrilli  thanks for suggestion, let me try your solution.",
                          "url": "https://github.com/idaholab/moose/discussions/16449#discussioncomment-375749",
                          "updatedAt": "2022-11-01T14:55:29Z",
                          "publishedAt": "2021-02-17T03:06:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to print the output just before failed-solve ?",
          "author": {
            "login": "KamalnathOSU"
          },
          "bodyText": "Dear all,\nI am running a lengthy phase-field simulation where I print the exodus output for every 1000 iterations. After the a few thousand iterations, my simulations stopped because of \"failed-solve\".\nIs there any way in which I can get the exodus file at the last time step before my simulation stops ?\nI tried adding\n[Outputs]\n      [./end]\n          type = Exodus\n          execute_on= 'FINAL'\n       [../]\n[]\n\nBut it does not print *_end.e  file.\nRegards,\nKamal",
          "url": "https://github.com/idaholab/moose/discussions/16994",
          "updatedAt": "2023-09-26T11:19:37Z",
          "publishedAt": "2021-02-14T22:07:12Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Give execute_on='FAILED' a try.",
                  "url": "https://github.com/idaholab/moose/discussions/16994#discussioncomment-374384",
                  "updatedAt": "2023-09-26T11:19:47Z",
                  "publishedAt": "2021-02-16T17:31:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "Thank you Andrew. I will try this.",
                          "url": "https://github.com/idaholab/moose/discussions/16994#discussioncomment-374447",
                          "updatedAt": "2023-09-26T11:19:51Z",
                          "publishedAt": "2021-02-16T17:46:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Three concentration components diffusion model",
          "author": {
            "login": "styyokuda"
          },
          "bodyText": "Hi all,\nI am modeling three concentration components diffusion (please see attached).\nIt would be appreciated if you could provide me with examples (suggestions).\nSincerely,\nThomas\nThree_components_diffusion_model.pdf",
          "url": "https://github.com/idaholab/moose/discussions/17008",
          "updatedAt": "2023-03-29T14:10:02Z",
          "publishedAt": "2021-02-16T00:09:23Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Naively, this is just 3 decoupled diffusion equations, so you'd have three Variables, and three Diffusion Kernels and three TimeDerivative Kernels.\nMore interestingly, do the diffusion coefficients (D_{1-gas}, etc) depend on the concentrations in some way?  Are they scalars or tensors?  How about the source terms (g_{1}, etc) - are they constants, or do they depend on concentration?",
                  "url": "https://github.com/idaholab/moose/discussions/17008#discussioncomment-372103",
                  "updatedAt": "2023-03-29T14:10:01Z",
                  "publishedAt": "2021-02-16T00:27:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "styyokuda"
                          },
                          "bodyText": "Thank you, WilkAndy.\nYes, the diffusion coefficients and sources are actually a function of gas, c1, c2, c3, temperature, and time.\nThe diffusion coefficients are scalars.\nBut I would like to start the diffusion coefficients and sources as a function of gas and temperature only.\nIt would be appreciated if you could tell me where I look for the examples.\nSincerely,\nThomas",
                          "url": "https://github.com/idaholab/moose/discussions/17008#discussioncomment-373793",
                          "updatedAt": "2023-03-29T14:10:17Z",
                          "publishedAt": "2021-02-16T14:31:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "I don't think we have an example of this, but it shouldn't be hard to solve. I would begin by setting up the 3 diffusion equations as @WilkAndy suggested. Then switch over to using the Material system to compute the correct coefficients for each equation: https://mooseframework.inl.gov/syntax/Materials/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/17008#discussioncomment-374349",
                          "updatedAt": "2023-03-29T14:10:17Z",
                          "publishedAt": "2021-02-16T17:18:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Phase Field - Grain growth - ACGrGrPoly",
          "author": {
            "login": "EtienneSwerim"
          },
          "bodyText": "Hi!\nCould somebody help me with the following?\nI am trying to set up the simplest possible grain growth model (three grains) in the Phase Field module by combining parts of existing example files.\nI append my input file (myTricrystalTripleJunction.docx); it runs well to the end but the results do not seem physically correct: the three order parameters even out to 0.3 over the whole model instead of being either 1 (grain) or 0 (no grain).\nCan it be so that I need to modify the ACCGrGrPoly.C file? I noticed that the residual it returns is only d_F/d_eta. Firstly, there is no test function term and secondly there is no parameter L like in the manual (Basic Phase Field Equations). L only appear later in the file for the offDiagonal jacobian terms. I append it in the Appendix.docx file.\nVery grateful for help!\nBest Regards\nEtienne\nAppendix.docx\nmyTricrystalTripleJunction.docx",
          "url": "https://github.com/idaholab/moose/discussions/16550",
          "updatedAt": "2022-10-25T02:27:17Z",
          "publishedAt": "2020-12-20T14:20:51Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "Hi Etienne,\nACGrGrPoly is a class derived from ACGrGrBase, which is in turn derived from ACBulk. Multiplying by the Allen-Cahn mobility L actually is done in ACBulk in the function precomputeQpResidual. ACBulk is a then a derived class of KernelValue. Multiplying by the test function is done in KernelValue.\nTo get started with a grain-growth simulation, I'd suggest using one of the example input files in the MOOSE repository and changing parameters for your problem, rather than trying to create your own input file. The simplest to start with is probably moose/modules/phase_field/examples/grain_growth/grain_growth_2D_random.i. You can change the number of order parameters using the global parameter op_num and change initial conditions to what you prefer. This example uses the Action system to add all the required kernels and materials to obtain the evolution equations.\nAs far as the non-physical behavior you were seeing, I looked quickly at your input file and I think the problem is at least partially coming from the fact that you are specifying v = 'eta0 eta1 eta2' as a GlobalParam. Each ACGrGrPoly kernel needs v specified, and it needs to be a list of all the other order parameters in the system besides the nonlinear variable for that kernel. For example in the ACGrGrPoly kernel for variable = eta0, you would specify v = 'eta1 eta2'. With v specified as a GlobalParam you end up with extra terms in your evolution equations which do not give the correct physics. For these reasons I'd suggest you start with the example from the paragraph above which uses the action system to fill in the correct kernels and parameters specified to each one.",
                  "url": "https://github.com/idaholab/moose/discussions/16550#discussioncomment-231491",
                  "updatedAt": "2022-10-25T02:27:18Z",
                  "publishedAt": "2020-12-21T20:59:36Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "EtienneSwerim"
                          },
                          "bodyText": "Dear Larry,\nThank you very much for your detailed answer! I really appreciate you took the time to go through the relation between all the classes you mentioned.\nI have now looked at grain_growth_2D_random.i and even at grain_growth_2D_voronoi.i and I will now try to understand how the Action system works.\nI have also modified my input file according to your advice. I define a different v-vector for each ACGrGrPoly and it works perfectly! Again, I am very grateful for your help.\nBest Regards\nEtienne",
                          "url": "https://github.com/idaholab/moose/discussions/16550#discussioncomment-234437",
                          "updatedAt": "2022-10-25T02:27:18Z",
                          "publishedAt": "2020-12-22T13:10:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Great glad that helped!",
                          "url": "https://github.com/idaholab/moose/discussions/16550#discussioncomment-234814",
                          "updatedAt": "2022-10-25T02:27:18Z",
                          "publishedAt": "2020-12-22T15:29:19Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "EtienneSwerim"
                  },
                  "bodyText": "Hi,\nCould I get a little help with the appended example file: grain_growth_2D_random.i?\nAs I understand from the Grain Growth Model section of the Moose Manual, order parameters and kernels are automatically created by the Action system called GrainGrowthAction. I even found the files GrainGrowthAction.h and GrainGrowthAction.C.\nWhat I do not understand is:\n\n\nWhere, in the grain_growth_2D_random.i, are the GrainGrowthAction files called? The name GrainGrowthAction is not present in the file. I guess these files are called implicitly but how?\n\n\nWhen it comes to variables, only the name PolycrystalVariables is defined but neither a type nor an action, see below. I noticed that Moose crashes if the name PolycrystalVariables is changed and I noticed that there is a folder called PolycrystalVariables\n(moose/module/phase_field/doc/content/syntax/Variables/PolycrystalVariables)\n\n\nThis folder contains a single file called index.md which contain the following single line:\n!template load file=stubs/moose_system.md.template name=PolycrystalVariables syntax=/Variables/PolycrystalVariables\na) Is this index.md file called by the variable name PolycrystalVariables in the grain_growth_2D_random.i?\nb) What does this index.md file do? I noticed there were a lot of theses files in the moose folder for example one below PolycrystalKernel and one below PolycrystalRandomIC and I do not understand what these two do either.\nVery grateful for help!\nBest Regards\nEtienne\n[Variables]\nVariable block, where all variables in the simulation are declared\n[./PolycrystalVariables]\n# Custom action that created all of the grain variables and sets their initial condition\n[../]\n[]\ngrain_growth_2D_random.txt",
                  "url": "https://github.com/idaholab/moose/discussions/16550#discussioncomment-359834",
                  "updatedAt": "2022-11-16T02:52:35Z",
                  "publishedAt": "2021-02-11T15:00:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Hi Etienne,\n\n\nThe kernels are created by the PolycrystalKernel action, which is called in the Kernels block of that file. The variables are created by the PolycrystalVariables action. This particular example doesn't use the GrainGrowthAction. The source code files for these actions are in the same directory as the GrainGrowthAction files.\n\n\nThe files with the .md extension are markdown files for the MOOSE documentation system. They are used to create the web-based documentation you see at, for example, https://mooseframework.inl.gov/modules/phase_field/index.html. You shouldn't need to look at these unless you are creating or modifying documentation.",
                          "url": "https://github.com/idaholab/moose/discussions/16550#discussioncomment-371788",
                          "updatedAt": "2022-11-16T02:52:52Z",
                          "publishedAt": "2021-02-15T21:16:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "EtienneSwerim"
                          },
                          "bodyText": "Hi Larry,\nThanks a lot for your answer! I understand now that these action files are called by the name of the variables and the name of the kernel.\nBest regards\nEtienne",
                          "url": "https://github.com/idaholab/moose/discussions/16550#discussioncomment-373209",
                          "updatedAt": "2022-11-16T02:52:52Z",
                          "publishedAt": "2021-02-16T10:43:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to set gravity in porous media \"thm_example\"?",
          "author": {
            "login": "zhang-rite"
          },
          "bodyText": "Hi\nCurrently the example (modules/porous_flow/examples/thm_example/2D.i) does not consider gravity. I have attempted to set it by setting \"gravity = '0 -9.8 0'. However, it seems the gravity effect does not appear--there is no difference in fluid saturation whether I set gravity on or off. I expect the gas phase would move to upper regions.\nHow can I correct this? Thank you!\nModified file  with following modifications:\n[Mesh]\ntype = GeneratedMesh\ndim = 2\nnx = 50\nbias_x = 1.2\nxmin = 0.1\nxmax = 5000\nny = 50\nymin = 0\nymax = 5000\n[]\n[GlobalParams]\ndisplacements = 'disp_r disp_z'\nPorousFlowDictator = dictator\ngravity = '0 -9.8 0'\nbiot_coefficient = 1.0\n[]",
          "url": "https://github.com/idaholab/moose/discussions/17015",
          "updatedAt": "2023-08-22T14:29:37Z",
          "publishedAt": "2021-02-16T05:58:38Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "zhang-rite"
                  },
                  "bodyText": "Oh, it is just due to I did not notice the setting of permeability field in the original 1D problem.\npermeability = '2e-12 0 0  0 0 0  0 0 0'",
                  "url": "https://github.com/idaholab/moose/discussions/17015#discussioncomment-372621",
                  "updatedAt": "2023-08-22T14:29:56Z",
                  "publishedAt": "2021-02-16T07:03:54Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "BC setting between two computational domains",
          "author": {
            "login": "styyokuda"
          },
          "bodyText": "BC_setting_between_two_computational_domains.pdf\nAll,\nI am trying to set up boundary conditions between two concentration diffusion computational domains which are a function of concentration and time (please see the attached file).\nIt would be appreciated if you could give me your suggestion(s) for how to set up these BC settings.\nSincerely,\nThomas",
          "url": "https://github.com/idaholab/moose/discussions/16874",
          "updatedAt": "2022-06-15T15:31:38Z",
          "publishedAt": "2021-02-03T14:45:27Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Thomas\nLet's take the Dirichlet BC for c1 in the center for an example:\nI think you should create a new class that derives from DirichletBCBase. You can look at the framework/src/bcs/DirichletBC.C file for an example.\nThen in that class you add c2 and c3 as coupled variables (named _c2 and _c3 for example)\n-add them to the input parameters with params.addCoupledVar(\"c2\", \"the concentration of species 2\")\n-initialize them in the constructor\nThen override the computeValue function from DirichletBCBase with your own function that defines the value that c1 should have on the boundary, based on the values of c2, c3\nTo introduce time as its own variable (and not through c23(t)), use _t. See SinDirichletBC.C for an example.\nEDIT: Yaqi's got a point. Interface fits the use case more than boundary conditions.\nHope this helps,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16874#discussioncomment-335078",
                  "updatedAt": "2022-06-15T15:31:39Z",
                  "publishedAt": "2021-02-03T15:14:27Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "styyokuda"
                          },
                          "bodyText": "Thank you, Guillaume.\nI found the way to work. :)",
                          "url": "https://github.com/idaholab/moose/discussions/16874#discussioncomment-372072",
                          "updatedAt": "2022-06-15T15:31:39Z",
                          "publishedAt": "2021-02-15T23:58:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "YaqiWang"
                  },
                  "bodyText": "I think you can consider InterfaceKernel, which essentially imposes boundary conditions weakly (Neumann) for both sides. I doubt directly using Dirichlet BC will work.",
                  "url": "https://github.com/idaholab/moose/discussions/16874#discussioncomment-335801",
                  "updatedAt": "2022-10-12T18:05:03Z",
                  "publishedAt": "2021-02-03T19:19:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "styyokuda"
                          },
                          "bodyText": "Thank you, YaqiWang.\nI found the way to work. :)",
                          "url": "https://github.com/idaholab/moose/discussions/16874#discussioncomment-372074",
                          "updatedAt": "2022-10-12T18:05:05Z",
                          "publishedAt": "2021-02-15T23:58:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Problem in analyzing the check point file",
          "author": {
            "login": "KamalnathOSU"
          },
          "bodyText": "Hi,\nI performed a KKS model based phase-field simulation. My simulation crashed after a few thousand numerical iterations due to numerical problems, i.e., solve did not converge. Hence, I wanted to view the checkpoint file to check the status of the non-linear variables just before the failed iteration. As paraview can't open *.xdr format, I wrote a dummy restart file which will read the *.xdr file and create a exodus file from it (shown below).  I followed the Variable Initialization approach given in  Restart and Recovery page .\nBut I am getting a error (\"ERROR: Unknown element type 2\") while trying to run it.\nMy input script:\n[GlobalParams]\n        initial_from_file_timestep = 'LATEST'\n[]\n\n[Mesh]\n        file = 'sub_111_out_cp/5726.xdr'\n        distribution = 'parallel'\n[]\n\n\n[Variables]\n\n  # order parameter\n  [./eta]\n    order = FIRST\n    family = LAGRANGE\n    initial_from_file_var = 'eta'\n  [../]\n\n  # solute concentration\n  [./c]\n    order = FIRST\n    family = LAGRANGE\n    initial_from_file_var = 'c'\n  [../]\n\n  # chemical potential\n  [./w]\n    order = FIRST\n    family = LAGRANGE\n    initial_from_file_var = 'w'\n  [../]\n\n  # Liquid phase solute concentration\n  [./cl]\n    order = FIRST\n    family = LAGRANGE\n    initial_from_file_var = 'cl'\n  [../]\n  # Solid phase solute concentration\n  [./cs]\n    order = FIRST\n    family = LAGRANGE\n    initial_from_file_var = 'cs'\n  [../]\n[]\n\n[Executioner]\n  type = Steady\n  solve_type = 'PJFNK'\n  automatic_scaling = true\n\n  petsc_options_iname = '-pc_type -sub_pc_type -sub_pc_factor_shift_type'\n  petsc_options_value = 'asm      ilu          nonzero'\n\n  l_max_its = 100\n  nl_max_its = 100\n\n  nl_rel_tol = 1e-8\n  nl_abs_tol = 1e-50\n[]\n\n[Outputs]\n  [./exo]\n      type = Exodus\n  [../]\n[]\n\n[Preconditioning]\n  [./full]\n    type = SMP\n    full = true\n  [../]\n[]\n[Kernels]\n\n        [./cl]\n                type = NullKernel\n                variable = cl\n        [../]\n        [./cs]\n                type = NullKernel\n                variable = cs\n        [../]\n        [./c]\n                type = NullKernel\n                variable = c\n        [../]\n        [./eta]\n                type = NullKernel\n                variable = eta\n        [../]\n        [./w]\n                type = NullKernel\n                variable = w\n        [../]\n\n[]\n\nError Message:\nBuilding mesh ......................................                                       [ 39.12 s]\nERROR: Unknown element type 2\nStack frames: 19\n0: libMesh::print_trace(std::ostream&)\n1: libMesh::MacroFunctions::report_error(char const*, int, char const*, char const*)\n2: libMesh::FEAbstract::get_refspace_nodes(libMesh::ElemType, std::vector<libMesh::Point, std::allocator<libMesh::Point> >&)\n3: libMesh::FE<1u, (libMesh::FEFamily)0>::side_map(libMesh::Elem const*, libMesh::Elem const*, unsigned int, std::vector<libMesh::Point, std::allocator<libMesh::Point> > const&, std::vector<libMesh::Point, std::allocator<libMesh::Point> >&)\n4: libMesh::FE<1u, (libMesh::FEFamily)0>::reinit(libMesh::Elem const*, unsigned int, double, std::vector<libMesh::Point, std::allocator<libMesh::Point> > const*, std::vector<double, std::allocator<double> > const*)\n5: MaxQpsThread::operator()(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&)\n6: /users/PAS1784/sarita/projects/moose/framework/libmoose-opt.so.0(+0xed8fe7) [0x2ad98616ffe7]\n7: GOMP_parallel\n8: void libMesh::Threads::parallel_reduce<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*>, MaxQpsThread>(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&, MaxQpsThread&)\n9: FEProblemBase::updateMaxQps()\n10: SetupQuadratureAction::act()\n11: Action::timedAct()\n12: ActionWarehouse::executeActionsWithAction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n13: ActionWarehouse::executeAllActions()\n14: MooseApp::runInputFile()\n15: MooseApp::run()\n16: /users/PAS1784/sarita/projects/horse/problems/Pitting_corrosion_data/batch_ori_t04/horse-opt() [0x4024d5]\n17: __libc_start_main\n18: /users/PAS1784/sarita/projects/horse/problems/Pitting_corrosion_data/batch_ori_t04/horse-opt() [0x4026fe]\n[0] /opt/moose/scripts/../libmesh/src/fe/fe_abstract.C, line 610, compiled Oct 14 2020 at 05:18:05\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\n\nAny help will be appreciated.\nThank you,\nKamal",
          "url": "https://github.com/idaholab/moose/discussions/16910",
          "updatedAt": "2022-06-23T20:10:45Z",
          "publishedAt": "2021-02-06T23:50:12Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hi Kamal,\nCan you try with '  distribution = serial' in the mesh block?\nDid you use the same element type in the first run?\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16910#discussioncomment-366641",
                  "updatedAt": "2022-06-23T20:10:59Z",
                  "publishedAt": "2021-02-13T20:55:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "KamalnathOSU"
                  },
                  "bodyText": "With distribution = 'serial' also I am getting the same error. What is the meaning of \"distribution \" parameter ? I am running the input script with 10 MPI processes with each 4 thread. Does serial mean, that the entire mesh will be saved in each of the 40 sub-process ?\nBuilding mesh .................................................................            [ 66.54 s]\nERROR: Unknown element type 2\n[1] /opt/moose/scripts/../libmesh/src/fe/fe_abstract.C, line 610, compiled Oct 14 2020 at 05:18:05\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 1\nsrun: Job step aborted: Waiting up to 32 seconds for job step to finish.\nslurmstepd: error: *** STEP 2970931.2 ON p0004 CANCELLED AT 2021-02-14T13:14:58 ***\nsrun: error: p0004: tasks 0-9: Killed\n\nYes. I always use Linear Lagrange elements.\nIs there a way to view the checkpoint files directly ?",
                  "url": "https://github.com/idaholab/moose/discussions/16910#discussioncomment-368134",
                  "updatedAt": "2022-06-23T20:11:01Z",
                  "publishedAt": "2021-02-14T18:30:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "For what you want to do, you could simply add execute_on = 'LINEAR NONLINEAR' to your exodus block, so that all variables will be written to exodus at every linear and nonlinear iteration.",
                  "url": "https://github.com/idaholab/moose/discussions/16910#discussioncomment-368299",
                  "updatedAt": "2022-06-23T20:11:01Z",
                  "publishedAt": "2021-02-14T19:45:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "KamalnathOSU"
                          },
                          "bodyText": "But my problem is not with the exodus file. During my simulation, at some time, my solve is not converging. Hence, I want to view the checkpoint file in paraview to see which non-linear variable caused the crash.\nDo you know of any way to print all the non-linear variables in my simulation  just before the  failed convergence ?",
                          "url": "https://github.com/idaholab/moose/discussions/16910#discussioncomment-368377",
                          "updatedAt": "2022-06-23T20:11:01Z",
                          "publishedAt": "2021-02-14T20:23:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "A couple of suggestions:\n-If you suspect one particular variable is causing the convergence problems, you will probably have better luck isolating it by looking at the variable contributions to the residual rather than actually trying to visualize the variables during the solve. You can track this by adding the following Debug block:\n[Debug]\n   show_var_residual_norms = true\n[]\n\n-Are you sure that the simulation has not reached steady-state? If you use the default absolute convergence criterion of nl_abs_tol = 1e-50 and don't turn on steady-state detection, the solve can fail if you reach steady state because the solver cannot meet either the absolute or relative convergence tolerance. Have a look at your microstructure prior to the point and which you get the failed solve and see if there is any microstructure evolution happening.\n-If neither of these helps you might try the new automatic variable scaling option. Set automatic_scaling = true in the Executioner block.",
                  "url": "https://github.com/idaholab/moose/discussions/16910#discussioncomment-371833",
                  "updatedAt": "2022-06-23T20:11:01Z",
                  "publishedAt": "2021-02-15T21:33:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Problems with make after using stork.",
          "author": {
            "login": "TLWise"
          },
          "bodyText": "After using stork to create an application I get the following error after using the command make -j4:\nIn member function 'virtual void PhysicsBasedPreconditioner::init()':\n/home/twise/projects/moose/framework/src/preconditioners/PhysicsBasedPreconditioner.C:209:41: error: 'class libMesh::LinearImplicitSystem' has no member named 'get_system_matrix'; did you mean 'add_system_matrix'?\npreconditioner->set_matrix(u_system.get_system_matrix());\n^~~~~~~~~~~~~~~~~\nWhat should I do to fix this problem.\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/16988",
          "updatedAt": "2022-11-02T10:03:18Z",
          "publishedAt": "2021-02-13T19:39:30Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nMost libmesh-related compilation issues are usually resolved by updating libmesh.\nIf you installed with ana/miniconda just run 'conda update --all' in the moose environment\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366611",
                  "updatedAt": "2022-11-02T10:03:18Z",
                  "publishedAt": "2021-02-13T20:34:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Thank you for the advice on this issue. I ran the 'conda update --all' and the software informed me that all the updates were current. I also ran 'conda update -n base -c defaults conda', which did some additional installs, but still results in the same errors with the 'make -j4' command.",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366632",
                          "updatedAt": "2021-02-13T20:50:29Z",
                          "publishedAt": "2021-02-13T20:50:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Did you have a previous moose install before this one? Any chance a LIBMESH_DIR environment variable is set to a previously installed libmesh?\nAre you on the latest moose master commit?",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366656",
                          "updatedAt": "2021-02-13T21:02:43Z",
                          "publishedAt": "2021-02-13T21:02:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "I did have a previous install that I believed was totally uninstalled, but may not have been properly done. What can I do to ensure there are not remnants of a previous install, outside of reinstalling Ubuntu?",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366665",
                          "updatedAt": "2021-02-13T21:05:53Z",
                          "publishedAt": "2021-02-13T21:05:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I would check MOOSE_DIR and LIBMESH_DIR (echo $MOOSE_DIR, echo ..) to see if they are not pointing somewhere from the previous installation.\nJust to check, you ran 'conda update --all' after having activated the moose conda environment right?",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366680",
                          "updatedAt": "2022-11-02T10:03:21Z",
                          "publishedAt": "2021-02-13T21:19:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Also maybe check CPATH, C_INCLUDE_PATH, CPLUS_INCLUDE_PATH if you had set those (I dont think you would have) at the time",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366684",
                          "updatedAt": "2023-01-27T19:28:09Z",
                          "publishedAt": "2021-02-13T21:20:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Yes. I ran each command after having executed \"conda activate moose\". I will check each of the files you indicated to see if the are pointing to a previous install.\nThank you.",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366685",
                          "updatedAt": "2023-01-27T19:28:09Z",
                          "publishedAt": "2021-02-13T21:21:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "echo $LIBMESH_DIR results in this:\n/home/twise/miniconda3/envs/moose/libmesh\necho $MOOSE_DIR results in a null result. I believe this indicates the working directory is the directory.",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366697",
                          "updatedAt": "2023-01-27T19:28:09Z",
                          "publishedAt": "2021-02-13T21:29:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This all seems normal to me. I don't know what's wrong then. Someone else will have to weigh in.",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-366758",
                          "updatedAt": "2023-01-27T19:28:09Z",
                          "publishedAt": "2021-02-13T22:16:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "You\u2019ve updated libmesh but you haven\u2019t updated moose. The libmesh you\u2019ve updated to within conda is no longer with the moose you have.\nIf you need help with this using git - let us know.",
                  "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-367652",
                  "updatedAt": "2023-01-27T19:28:10Z",
                  "publishedAt": "2021-02-14T14:22:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TLWise"
                          },
                          "bodyText": "Thank you. Where can I find the directions to remove an old installation of moose?",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-371308",
                          "updatedAt": "2023-01-27T19:28:11Z",
                          "publishedAt": "2021-02-15T18:01:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "The following should work:\ncd /home/twise/projects/moose\ngit pull\n\nThis should work if the origin remote of your moose installation is idaholab/moose, which will be the case if you used the getting started pages on mooseframework.org. git pull will fetch the new commits from idaholab, and merge them into the branch that you are currently on.",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-371386",
                          "updatedAt": "2023-01-27T19:28:11Z",
                          "publishedAt": "2021-02-15T18:35:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "TLWise"
                  },
                  "bodyText": "Thank you for advising me on how to solve this issue. Prior to your last bit of advise, I had already executed the conda uninstall of moose. I then attempted to reinstall moose via conda create. That did not go so well. In the end I went back to the mooseframework web page and went down the list of instructions for installing moose. After the install  Make -j4 and run_test executed with no problems.\n\n\nGet Outlook for iOS<https://aka.ms/o0ukef>\n\u2026\n________________________________\nFrom: Logan Harbour <notifications@github.com>\nSent: Monday, February 15, 2021 1:35:51 PM\nTo: idaholab/moose <moose@noreply.github.com>\nCc: WISE, TAMMY <wisetl@email.sc.edu>; Author <author@noreply.github.com>\nSubject: Re: [idaholab/moose] Problems with make after using stork. (#16988)\n\n\nThe following should work:\n\ncd /home/twise/projects/moose\ngit pull\n\n\nThis should work if the origin remote of your moose installation is idaholab/moose, which will be the case if you used the getting started pages on mooseframework.org. git pull will fetch the new commits from idaholab, and merge them into the branch that you are currently on.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://protect2.fireeye.com/v1/url?k=874fffa9-d8d4c6aa-874fb168-86aa398f0cb5-ed253c1bfa8c56d6&q=1&e=550d3252-adf8-424f-aeed-3b05d25aad20&u=https%3A%2F%2Fgithub.com%2Fidaholab%2Fmoose%2Fdiscussions%2F16988%23discussioncomment-371386>, or unsubscribe<https://protect2.fireeye.com/v1/url?k=5254c457-0dcffd54-52548a96-86aa398f0cb5-679e7e865596f210&q=1&e=550d3252-adf8-424f-aeed-3b05d25aad20&u=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAJQ6AYROU66NYH3DLQE2GIDS7FSQPANCNFSM4XSOENGQ>.",
                  "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-371652",
                  "updatedAt": "2023-01-27T19:28:11Z",
                  "publishedAt": "2021-02-15T20:18:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "Glad to help!\nHere, it's important to note that our default conda instructions provide an environment for compiling moose (by providing its dependencies and a compiled version of libmesh). To update, you do not need to remove and \"re-install\" everything. You simply need to update conda with conda update --all and update your moose repository (typically with git pull).",
                          "url": "https://github.com/idaholab/moose/discussions/16988#discussioncomment-371721",
                          "updatedAt": "2023-01-27T19:28:13Z",
                          "publishedAt": "2021-02-15T20:49:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "controlling inheritance between auxkernels",
          "author": {
            "login": "mcacace"
          },
          "bodyText": "Dear all,\nI was sure my question have been already asked (therefore I do apologize for the multiple posting), but I could not find anything similar in the discussion forum ...\nMy question: Is there any way to control the order of inheritance among different auxkernels/variables?\nProblem: I have an auxkernel (aux_1) that computes the difference between the value of an auxvariable over time (u-u_old) where the auxvariable is provided by a different auxkernel (aux_0). This said, I need to force the computation of the latter (aux_0) to be done before I am calling it inside aux_1.\nThe main issue I see is that both kernels must be computed  at timestep_end since aux_0 requires the values of a material property and I want to pass the final value of the same quantity. I know I could do the same computation at a material level, but still I would love it to be done at the auxkernel level if possible.\nAny help would be highly appreciated,\nMauro",
          "url": "https://github.com/idaholab/moose/discussions/16996",
          "updatedAt": "2023-08-21T14:11:41Z",
          "publishedAt": "2021-02-15T12:31:01Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "permcody"
                  },
                  "bodyText": "You mean \"order of execution\". MOOSE has a basic \"dependency resolution\" system built in to compute things that it knows about in the right order. As long as your execute_on matches and you use normal coupling syntax to link to variables that you depend on, objects will be computed in the right order. You can find several tests in our suite that demonstrate that execution order is handled:\nhttps://github.com/idaholab/moose/tree/next/test/tests/auxkernels/element_aux_var",
                  "url": "https://github.com/idaholab/moose/discussions/16996#discussioncomment-370910",
                  "updatedAt": "2023-08-21T14:11:41Z",
                  "publishedAt": "2021-02-15T15:45:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Thanks, and of course \"execution order\" is the right word. Will test my auxkernels and let you know in case I have any problems.\nThanks again,\nMauro",
                          "url": "https://github.com/idaholab/moose/discussions/16996#discussioncomment-371286",
                          "updatedAt": "2023-08-21T14:11:51Z",
                          "publishedAt": "2021-02-15T17:54:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}