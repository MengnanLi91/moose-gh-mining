{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wMS0yMlQxNToxOTozMy0wNjowMM4ASOa4"
    },
    "edges": [
      {
        "node": {
          "title": "How to properly access variables and aux variables at arbitrary nodes",
          "author": {
            "login": "Eilloo"
          },
          "bodyText": "Hi all,\nI'm wondering what the 'best' way to access both variables, and aux variables at some arbitrary node is - for example, at the nearest node on a particular boundary, or a neighbour to the current node. Obtaining the node ID's is not a problem.\nI have had some success by setting the coupled variable type to be an integer in the header file, then using this to to get the dof number for that variable at a particular node, and finally pulling the appropriate value out from _nl.sys.currentSolution.\nThis was an approach I saw in another auxkernel (I'd have to dig around to remember which one!), rather than something I came up with myself.\nThe problem I am now having is that it doesn't seem to work for aux variables?\nWhen I try and pass in aux variables using the same syntax, the integer associated with them is negative. Even stranger to me, the value doesn't change whether I include the aux variable in the input file or not (it is not a required variable).\nAll of this makes me think the negative integer values I'm seeing associated with aux variables here are nonsense?\nNow I'm wondering two things:\n\n\nAre aux variables also stored in currentSolution, or are they dealt with differently? Is there a way I can access their values at a specific node?\n\n\nIs there a conventional way of doing this in general? So far I have been using a method from another aux kernel, but perhaps this isn't the intended/best method for achieving this?\n\n\nHopefully the problem makes sense - if anything needs clarification, please let me know.\nThanks!",
          "url": "https://github.com/idaholab/moose/discussions/23236",
          "updatedAt": "2023-06-24T19:56:14Z",
          "publishedAt": "2023-01-24T10:11:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nauxiliary variables should be in the auxiliary system solution not the _nl\nI can look for them later but this has been a fairly common need and there s at least another post about this on this forum.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23236#discussioncomment-4765594",
                  "updatedAt": "2023-01-24T11:16:05Z",
                  "publishedAt": "2023-01-24T11:16:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Eilloo"
                          },
                          "bodyText": "Hi Guillaume, thanks for the quick response!\nI have been looking on the forum but so far haven't found anything looking specifically at aux variables at nodes besides the current node. If you do happen to know of any threads I should take a look at, these are very welcome (and apologies if this turns out to be a duplicate!).\nThanks for pointing out the different systems - I'll look at the auxiliary system documentation to try and get the right syntax.\nNegative integers (in my head, I'm expecting these to represent an index?) associated with the aux variables still seems strange, but I could be misunderstanding what's going on behind the scenes, and what these values represent?\nEven stranger is the fact they don't change, whether I do or don't pass in a variable from the input file, so I think I must be totally going wrong in this part.\nJust in case I've done something daft in the code, I have const int _myAuxVar in the header file, then params.addCoupledVar(\"myAuxVar\") and _myAuxVar(coupled(\"myAuxVar\")) in the class definition and initialiser list in the .C file.",
                          "url": "https://github.com/idaholab/moose/discussions/23236#discussioncomment-4765917",
                          "updatedAt": "2023-01-24T11:52:47Z",
                          "publishedAt": "2023-01-24T11:52:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This is the index of the variable.\nYou need to use coupledValue() to get the value at the local qp/node (for a nodal variable)",
                          "url": "https://github.com/idaholab/moose/discussions/23236#discussioncomment-4766326",
                          "updatedAt": "2023-01-24T12:43:44Z",
                          "publishedAt": "2023-01-24T12:43:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Eilloo"
                          },
                          "bodyText": "Thank you for clarifying.\nI believe I do want the index of my aux variables, rather than the value in order to subsequently get the value at some other node, besides the local node/qp.\nPrinting the value of the index, I am seeing '-1' and '-2' for my two auxvariables.\nAttempting to use these in, say, someNode->dof_number(_aux_sys.number(), myVarIndex, 0) results in a segfault (Which I think is expected, given the index seems wrong).\nAs a check, replacing 'myVarIndex' with '0', runs with no segfault (although I don't know which variable this corresponds to).\nI think there are two questions from this:\n1) Is it possible to use coupledValue() to get the variable at node besides the local node/qp? This would allow me to take a different approach entirely. EDIT: I thought this part had been answered previously, and found the thread - I believe the coupled interface only allows you to access local values?\n\nShould the index be negative for auxvariables? If not, have I done something wrong in declaring these as described above?\n\nThanks",
                          "url": "https://github.com/idaholab/moose/discussions/23236#discussioncomment-4767279",
                          "updatedAt": "2023-01-24T14:35:21Z",
                          "publishedAt": "2023-01-24T14:29:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "coupledValue should only give the local value\ni suspect not but I dont see how we handle auxiliary variables in this code\nhttps://mooseframework.inl.gov/docs/doxygen/moose/classCoupleable.html#ae04c38300772a77cd4632168742eea80\n\nso I think this needs a patch.\nOther threads about this\n#21907\nyour own comment here\n#22895 (reply in thread)",
                          "url": "https://github.com/idaholab/moose/discussions/23236#discussioncomment-4767344",
                          "updatedAt": "2023-01-24T14:38:03Z",
                          "publishedAt": "2023-01-24T14:38:02Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Eilloo"
                  },
                  "bodyText": "Ah yes - using unsigned int rather than int, I get the max possible integer minus 1 or 2, so it's definitely hitting that last line from https://mooseframework.inl.gov/docs/doxygen/moose/classCoupleable.html#ae04c38300772a77cd4632168742eea80 as you suggested.\nAs a workaround in the meantime, it seems I can subtract the number returned from numeric_limits....etc....max() to get back to var->number().\nThe comment in the code you linked to suggests that generally, this could cause bad jacobians. Are we safe to do this in the context of aux kernels, since these do not have a residual contribution?\nThanks for your help!",
                  "url": "https://github.com/idaholab/moose/discussions/23236#discussioncomment-4768021",
                  "updatedAt": "2023-01-24T15:39:49Z",
                  "publishedAt": "2023-01-24T15:39:48Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "yeah dont worry about the bad jacobian message, that s for another context",
                          "url": "https://github.com/idaholab/moose/discussions/23236#discussioncomment-4768230",
                          "updatedAt": "2023-01-24T16:01:15Z",
                          "publishedAt": "2023-01-24T16:01:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Eilloo"
                          },
                          "bodyText": "Noted, thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/23236#discussioncomment-4768736",
                          "updatedAt": "2023-01-24T16:49:51Z",
                          "publishedAt": "2023-01-24T16:49:51Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Question about the Postprocessor  'PointValue '",
          "author": {
            "login": "echo1115"
          },
          "bodyText": "Hi all,\nAs described in https://mooseframework.inl.gov/source/postprocessors/PointValue.html , when using PointValue , it will throw an error if the point being sampled lies outside of the domain.\nIf we use it to get the variable at a point on the  surface of simulating object, there would be no mesh at the original location of the point because the mesh deforms during calculating, I want to konw whether this could cause an error or how to avoid it.\nThanks in advance!",
          "url": "https://github.com/idaholab/moose/discussions/23237",
          "updatedAt": "2023-02-04T06:53:29Z",
          "publishedAt": "2023-01-24T13:19:54Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou ll want to use the SideValueSampler, this will follow the mesh.\nhttps://mooseframework.inl.gov/source/vectorpostprocessors/SideValueSampler.html\nOtherwise you can try the use_displaced_mesh parameter but sampling on an external boundary is already iffy, you're depending on rounding errors placing the point inside the mesh\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23237#discussioncomment-4767013",
                  "updatedAt": "2023-01-24T14:00:27Z",
                  "publishedAt": "2023-01-24T14:00:26Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "@GiudGiud  Thanks for your reply. Acturally I want to get the value at specific point on the surface,  but the SideValueSampler  cannot set a point parameter. As for the use_displaced_mesh parameter in PointValue , does it means by setting it to 'true' then it will keep following the original point I set even the mesh deforms?",
                          "url": "https://github.com/idaholab/moose/discussions/23237#discussioncomment-4767149",
                          "updatedAt": "2023-01-24T14:15:23Z",
                          "publishedAt": "2023-01-24T14:15:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "see this explanation for the behavior of PPs under displaced meshes\n#22935 (comment)",
                          "url": "https://github.com/idaholab/moose/discussions/23237#discussioncomment-4767252",
                          "updatedAt": "2023-01-24T14:26:32Z",
                          "publishedAt": "2023-01-24T14:26:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "@GiudGiud Thanks.  So according to the explanation, to avoid the mesh displace casusing the point locates at unexist domain, I should set use_displaced_mesh = false , which is also the default option. Another question:\nFor getting variables on surface by using PPs, whether only the nodal variable can be obtained but elemental variable can't?",
                          "url": "https://github.com/idaholab/moose/discussions/23237#discussioncomment-4767492",
                          "updatedAt": "2023-01-24T14:52:59Z",
                          "publishedAt": "2023-01-24T14:52:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Elemental variables are not always defined on a boundary, they can be discontiuous there it depends on the variable type.\nSo it might not be supported to sample them on boundaries, as devs have been a little too careful banning elemental variables instead of banning discontinuous ones",
                          "url": "https://github.com/idaholab/moose/discussions/23237#discussioncomment-4767533",
                          "updatedAt": "2023-01-24T14:56:09Z",
                          "publishedAt": "2023-01-24T14:56:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Ok,thanks a lot for your kindly help! @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/23237#discussioncomment-4767636",
                          "updatedAt": "2023-01-24T15:05:35Z",
                          "publishedAt": "2023-01-24T15:05:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Cannot get peacock to work.",
          "author": {
            "login": "wlindqwister"
          },
          "bodyText": "I am unable to get peacock to work from a fresh install of moose.\nUpon trying to start peacock, I get the following error:\nError starting peacock: Could not import vtk\n\nYou may need to either create or load an environment providing PyQt, VTK, etc.\nThe MOOSE development team provides a conda package with the required dependencies:\n\n\tmamba create -n peacock moose-peacock python=3.7\n\tmamba activate peacock\n\nThen run peacock again\n\nWhen following these steps, I get the same error.\nI've also tried to install vtk and PyQt manually through mamba, however when trying to install vtk on the moose environment I get the following error:\nEncountered problems while solving:\n  - package moose-libmesh-2022.11.07-build_0 requires moose-mpich 4.0.2 build_4, but none of the providers can be installed\n\nAny help would be greatly appreciated!",
          "url": "https://github.com/idaholab/moose/discussions/23226",
          "updatedAt": "2023-02-04T06:54:07Z",
          "publishedAt": "2023-01-23T16:34:09Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you type mamba list in the peacock environment please\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4759672",
                  "updatedAt": "2023-01-23T18:30:42Z",
                  "publishedAt": "2023-01-23T18:30:42Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Can you try:\nmamba activate peacock\npython\n>>> import vtk\n>>> vtk.__file__\nI am curious as to the error that may pop up. I am thinking there may be none at all... the error provided usually doesn't match the issue (we should probably try and solve that). Anyways, if no error, try to import more modules:\nimport PyQt5\nfrom matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg\nIf no error... lets next try to run a simple Chigger test (which I believe makes use of the same Qt/PyQt5) API.\nmamba activate peacock\ncd ~/projects/moose/python\nexport PYTHONPATH=`pwd`\ncd ~/projects/moose/python/chigger/tests/writers/\n./writers.py",
                          "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4759681",
                          "updatedAt": "2023-01-23T18:31:35Z",
                          "publishedAt": "2023-01-23T18:31:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wlindqwister"
                          },
                          "bodyText": "Hello\nCan you type mamba list in the peacock environment please\nGuillaume\nThese are the packages in the peacock environment:\n\n# packages in environment at /Users/hadrienrattez/mambaforge3/envs/peacock:\n#\n# Name                    Version                   Build  Channel\naom                       3.5.0                hf0c8a7f_0    conda-forge\nbrotli                    1.0.9                hb7f2c08_8    conda-forge\nbrotli-bin                1.0.9                hb7f2c08_8    conda-forge\nbzip2                     1.0.8                h0d85af4_4    conda-forge\nc-ares                    1.18.1               h0d85af4_0    conda-forge\nca-certificates           2022.12.7            h033912b_0    conda-forge\ncertifi                   2022.12.7          pyhd8ed1ab_0    conda-forge\ncurl                      7.86.0               h57eb407_1    conda-forge\ncycler                    0.11.0             pyhd8ed1ab_0    conda-forge\ndouble-conversion         3.2.0                hf0c8a7f_1    conda-forge\neigen                     3.4.0                h940c156_0    conda-forge\nexpat                     2.5.0                hf0c8a7f_0    conda-forge\nffmpeg                    4.4.2           gpl_h1c50e5d_110    conda-forge\nfont-ttf-dejavu-sans-mono 2.37                 hab24e00_0    conda-forge\nfont-ttf-inconsolata      3.000                h77eed37_0    conda-forge\nfont-ttf-source-code-pro  2.038                h77eed37_0    conda-forge\nfont-ttf-ubuntu           0.83                 hab24e00_0    conda-forge\nfontconfig                2.14.1               h5bb23bf_0    conda-forge\nfonts-conda-ecosystem     1                             0    conda-forge\nfonts-conda-forge         1                             0    conda-forge\nfonttools                 4.38.0           py37h8052db5_0    conda-forge\nfreetype                  2.12.1               h3f81eb7_1    conda-forge\ngettext                   0.21.1               h8a4c099_0    conda-forge\ngl2ps                     1.4.2                h4cff582_0    conda-forge\nglew                      2.1.0                h046ec9c_2    conda-forge\nglib                      2.74.1               hbc0c0cd_1    conda-forge\nglib-tools                2.74.1               hbc0c0cd_1    conda-forge\ngmp                       6.2.1                h2e338ed_0    conda-forge\ngnutls                    3.7.8                h207c4f0_0    conda-forge\ngst-plugins-base          1.20.3               h37e1711_2    conda-forge\ngstreamer                 1.20.3               h1d18e73_2    conda-forge\nhdf4                      4.2.15               h7aa5921_5    conda-forge\nhdf5                      1.12.2          nompi_hc782337_100    conda-forge\nicu                       70.1                 h96cf925_0    conda-forge\njpeg                      9e                   hac89ed1_2    conda-forge\njsoncpp                   1.9.5                h940c156_1    conda-forge\nkiwisolver                1.4.4            py37h229a17a_0    conda-forge\nkrb5                      1.19.3               hb49756b_0    conda-forge\nlame                      3.100             hb7f2c08_1003    conda-forge\nlcms2                     2.14                 h90f4b2a_0    conda-forge\nlerc                      4.0.0                hb486fe8_0    conda-forge\nlibblas                   3.9.0           16_osx64_openblas    conda-forge\nlibbrotlicommon           1.0.9                hb7f2c08_8    conda-forge\nlibbrotlidec              1.0.9                hb7f2c08_8    conda-forge\nlibbrotlienc              1.0.9                hb7f2c08_8    conda-forge\nlibcblas                  3.9.0           16_osx64_openblas    conda-forge\nlibclang                  14.0.6          default_h55ffa42_0    conda-forge\nlibclang13                14.0.6          default_hb5731bd_0    conda-forge\nlibcurl                   7.86.0               h57eb407_1    conda-forge\nlibcxx                    14.0.6               hccf4f1f_0    conda-forge\nlibdeflate                1.14                 hb7f2c08_0    conda-forge\nlibedit                   3.1.20191231         h0678c8f_2    conda-forge\nlibev                     4.33                 haf1e3a3_1    conda-forge\nlibffi                    3.4.2                h0d85af4_5    conda-forge\nlibgfortran               5.0.0           9_5_0_h97931a8_26    conda-forge\nlibgfortran5              11.3.0              h082f757_26    conda-forge\nlibglib                   2.74.1               h4c723e1_1    conda-forge\nlibiconv                  1.17                 hac89ed1_0    conda-forge\nlibidn2                   2.3.4                hb7f2c08_0    conda-forge\nliblapack                 3.9.0           16_osx64_openblas    conda-forge\nlibllvm14                 14.0.6               h5b596cc_1    conda-forge\nlibnetcdf                 4.8.1           nompi_hc61b76e_106    conda-forge\nlibnghttp2                1.47.0               h7cbc4dc_1    conda-forge\nlibogg                    1.3.4                h35c211d_1    conda-forge\nlibopenblas               0.3.21          openmp_h429af6e_3    conda-forge\nlibopus                   1.3.1                hc929b4f_1    conda-forge\nlibpng                    1.6.39               ha978bb4_0    conda-forge\nlibpq                     14.5                 h4aa9af9_2    conda-forge\nlibsqlite                 3.40.0               ha978bb4_0    conda-forge\nlibssh2                   1.10.0               h7535e13_3    conda-forge\nlibtasn1                  4.19.0               hb7f2c08_0    conda-forge\nlibtheora                 1.1.1             h0d85af4_1005    conda-forge\nlibtiff                   4.4.0                hdb44e8a_4    conda-forge\nlibunistring              0.9.10               h0d85af4_0    conda-forge\nlibvorbis                 1.3.7                h046ec9c_0    conda-forge\nlibvpx                    1.11.0               he49afe7_3    conda-forge\nlibwebp-base              1.2.4                h775f41a_0    conda-forge\nlibxcb                    1.13              h0d85af4_1004    conda-forge\nlibxml2                   2.10.3               hb9e07b5_0    conda-forge\nlibzip                    1.9.2                h3ad4413_1    conda-forge\nlibzlib                   1.2.13               hfd90126_4    conda-forge\nllvm-openmp               15.0.6               h61d9ccf_0    conda-forge\nloguru                    0.6.0            py37hf985489_1    conda-forge\nlz4-c                     1.9.3                he49afe7_1    conda-forge\nmatplotlib                3.5.2            py37hf985489_1    conda-forge\nmatplotlib-base           3.5.2            py37h80cb303_1    conda-forge\nmoose-peacock             2022.12.05       py37h23823cc_0    https://conda.software.inl.gov/public\nmunkres                   1.1.4              pyh9f0ad1d_0    conda-forge\nmysql-common              8.0.31               h7ebae80_0    conda-forge\nmysql-libs                8.0.31               hc37e033_0    conda-forge\nncurses                   6.3                  h96cf925_1    conda-forge\nnettle                    3.8.1                h96f3785_1    conda-forge\nnspr                      4.35                 hea0b92c_0    conda-forge\nnss                       3.78                 ha8197d3_0    conda-forge\nnumpy                     1.21.6           py37h345d48f_0    conda-forge\nopenh264                  2.3.1                hf0c8a7f_1    conda-forge\nopenjpeg                  2.5.0                h5d0d7b0_1    conda-forge\nopenssl                   1.1.1s               hfd90126_1    conda-forge\np11-kit                   0.24.1               h65f8906_0    conda-forge\npackaging                 22.0               pyhd8ed1ab_0    conda-forge\npandas                    1.3.5            py37h5b83a90_0    conda-forge\npcre2                     10.40                h1c4e4bc_0    conda-forge\npillow                    9.2.0            py37ha6ba2b9_2    conda-forge\npip                       22.3.1             pyhd8ed1ab_0    conda-forge\nply                       3.11                       py_1    conda-forge\nproj                      9.0.1                h05f0992_1    conda-forge\npthread-stubs             0.4               hc929b4f_1001    conda-forge\npugixml                   1.11.4               he49afe7_0    conda-forge\npyparsing                 3.0.9              pyhd8ed1ab_0    conda-forge\npyqt                      5.15.7           py37h6d02c96_0    conda-forge\npyqt5-sip                 12.11.0          py37h453a0d4_0    conda-forge\npython                    3.7.12          haf480d7_100_cpython    conda-forge\npython-dateutil           2.8.2              pyhd8ed1ab_0    conda-forge\npython_abi                3.7                     3_cp37m    conda-forge\npytz                      2022.6             pyhd8ed1ab_0    conda-forge\nqt-main                   5.15.4               h938c29d_2    conda-forge\nreadline                  8.1.2                h3899abd_0    conda-forge\nsetuptools                59.8.0           py37hf985489_1    conda-forge\nsip                       6.6.2            py37hc568d09_0    conda-forge\nsix                       1.16.0             pyh6c4a22f_0    conda-forge\nsqlite                    3.40.0               h9ae0607_0    conda-forge\nsvt-av1                   1.3.0                hf0c8a7f_0    conda-forge\ntbb                       2021.7.0             hb8565cd_1    conda-forge\ntbb-devel                 2021.7.0             hb8565cd_1    conda-forge\ntk                        8.6.12               h5dbffcc_0    conda-forge\ntoml                      0.10.2             pyhd8ed1ab_0    conda-forge\ntornado                   6.2              py37h994c40b_0    conda-forge\ntyping-extensions         4.4.0                hd8ed1ab_0    conda-forge\ntyping_extensions         4.4.0              pyha770c72_0    conda-forge\nunicodedata2              14.0.0           py37h69ee0a8_1    conda-forge\nutfcpp                    3.2.2                h694c41f_0    conda-forge\nvtk                       9.1.0           qt_py37h65efa5d_214    conda-forge\nwheel                     0.38.4             pyhd8ed1ab_0    conda-forge\nx264                      1!164.3095           h775f41a_2    conda-forge\nx265                      3.5                  hbb4e6a2_3    conda-forge\nxorg-libxau               1.0.9                h35c211d_0    conda-forge\nxorg-libxdmcp             1.1.3                h35c211d_0    conda-forge\nxz                        5.2.6                h775f41a_0    conda-forge\nzlib                      1.2.13               hfd90126_4    conda-forge\nzstd                      1.5.2                hfa58983_4    conda-forge",
                          "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4759957",
                          "updatedAt": "2023-01-23T19:09:43Z",
                          "publishedAt": "2023-01-23T19:09:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wlindqwister"
                          },
                          "bodyText": "Can you try:\nmamba activate peacock\npython\n>>> import vtk\n>>> vtk.__file__\nI am curious as to the error that may pop up. I am thinking there may be none at all... the error provided usually doesn't match the issue (we should probably try and solve that). Anyways, if no error, try to import more modules:\nimport PyQt5\nfrom matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg\nIf no error... lets next try to run a simple Chigger test (which I believe makes use of the same Qt/PyQt5) API.\nmamba activate peacock\ncd ~/projects/moose/python\nexport PYTHONPATH=`pwd`\ncd ~/projects/moose/python/chigger/tests/writers/\n./writers.py\n\nimporting PyQt5 and FigureCanvasQTAgg threw back no errors, however importing vtk gave the following error:\n>>> import vtk\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nModuleNotFoundError: No module named 'vtk'\n\nI retried installing vtk in the peacock environment by entering\nmamba install vtk\n\nBut I just received the message 'All requested packages already installed', and importing vtk in python still returned an error",
                          "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4760021",
                          "updatedAt": "2023-01-23T19:16:40Z",
                          "publishedAt": "2023-01-23T19:16:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "That is really odd, seeing that the vtk package is clearly installed in mamba list.\nThis is a shot in the dark, but what does which python return (after activating the peacock environment)?",
                          "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4760633",
                          "updatedAt": "2023-01-23T20:44:58Z",
                          "publishedAt": "2023-01-23T20:44:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wlindqwister"
                          },
                          "bodyText": "That is really odd, seeing that the vtk package is clearly installed in mamba list.\nThis is a shot in the dark, but what does which python return (after activating the peacock environment)?\n\nwhich python returns\n/Users/hadrienrattez/miniconda3/bin/python",
                          "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4760694",
                          "updatedAt": "2023-01-23T20:55:22Z",
                          "publishedAt": "2023-01-23T20:55:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wlindqwister"
                          },
                          "bodyText": "I tried to install moose on a separate windows 10/ubuntu system to see if I could get peacock to work there, but it similarly is unable to load peacock. Here, I also created a separate environment for the moose install, and another for peacock as outlined above. In this case, moose is able to pass all tests after installation, but peacock does not activate. On the ubuntu system, activating peacock in the peacock environment leads to\nAborted (core dumped)\n\nWhereas activating peacock in the moose environment after manually installing the vtk package returns\nError starting peacock: Could not import vtk\nYou need to use the miniconda module. Run:\n               module load miniconda\n\nI'm not sure if this will help at all seeing as the Windows 10 version of moose is experimental",
                          "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4760845",
                          "updatedAt": "2023-01-23T21:19:26Z",
                          "publishedAt": "2023-01-23T21:19:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "To answer the other question:\nEncountered problems while solving:\n  - package moose-libmesh-2022.11.07-build_0 requires moose-mpich 4.0.2 build_4, but none of the providers can be installed\n\nNot very helpful...\nThe actual dependency breaks down when asking to install pyqt with specific versions of Python and libClang:\nmamba create -n testing pyqt libclang=12 python=3.7 # works\nmamba create -n testing pyqt libclang=12 python=3.8 # fails (or any higher Python version)",
                          "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4761152",
                          "updatedAt": "2023-01-23T22:11:09Z",
                          "publishedAt": "2023-01-23T22:11:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "I am not sure why you cannot simply import vtk. What version of Ubuntu is this? I can instance an Ubuntu Apptainer, try to reproduce the issue. Also, when I get home (I don't have access to a Windows machine at my place of work), I will install the same, make the attempt there.\nI know the following link does not fix the same issue, but can you perhaps peruse through this link: #22718 (reply in thread). See if anything jumps out at you?",
                          "url": "https://github.com/idaholab/moose/discussions/23226#discussioncomment-4766865",
                          "updatedAt": "2023-01-24T13:52:17Z",
                          "publishedAt": "2023-01-24T13:47:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "FluidProperties module: possible bug in MethaneFluidProperties",
          "author": {
            "login": "garciapintado"
          },
          "bodyText": "Hi all,\nJust noted that a PorousFlow simulation using MethaneFluidProperties from the Fluid Properties module was having a negative specific enthalpy, and wondered if that is right. So, I've obtained some tabulated fluid properties for methane and compared those with those obtained by CoolProp [both cite Setzmann and Wagner (1991) as reference]. Both enthalpy and internal energy differ wildly from those obtained from CoolProp [right column here]:\n\nAlso viscosity [although with different references] is rather different and strangely non-dependent on pressure within FluidProperties:\n\nI've tested another gas (hydrogen) as example, and the EOS give similar results in both codes. This is absolutely not a priority for me. Just wanted to report in case it is useful...",
          "url": "https://github.com/idaholab/moose/discussions/23231",
          "updatedAt": "2023-02-04T15:59:32Z",
          "publishedAt": "2023-01-23T20:00:59Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@cpgr any insights on this comparison?\nFor enthalpy and energy values we could work with negative values, it's not wrong it just means the reference energy/enthalpy has been set differently.\nThe viscosity is directly more concerning (but we ll still have a look at enthalpy and energy)",
                  "url": "https://github.com/idaholab/moose/discussions/23231#discussioncomment-4761513",
                  "updatedAt": "2023-01-23T23:19:46Z",
                  "publishedAt": "2023-01-23T23:19:45Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "I'll take a look. Like you say, enthalpy and internal energy could just be referenced from a different state.",
                          "url": "https://github.com/idaholab/moose/discussions/23231#discussioncomment-4762625",
                          "updatedAt": "2023-01-24T03:24:04Z",
                          "publishedAt": "2023-01-24T03:24:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "So, MethaneFluidProperties uses the same reference state for enthalpy and internal energy as Setzmann and Wagner (1991) - which is T = 298.15 K, P = 101.325 kPa - and exactly produces the tables of values provided in that reference.\nIn contrast, CoolProp use the same reference state as REFPROP, which is the boiling point T = 111.667 K. This explains the difference in absolute values.\nIt looks like I implemented a simple viscosity correlation, rather than the much more complicated correlation implemented in CoolProp. I haven't compared either to experimental values I don't think.",
                          "url": "https://github.com/idaholab/moose/discussions/23231#discussioncomment-4765058",
                          "updatedAt": "2023-01-24T10:08:21Z",
                          "publishedAt": "2023-01-24T10:08:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "garciapintado"
                          },
                          "bodyText": "Ah, OK! Many thanks for the explanation!",
                          "url": "https://github.com/idaholab/moose/discussions/23231#discussioncomment-4765275",
                          "updatedAt": "2023-01-24T10:35:48Z",
                          "publishedAt": "2023-01-24T10:35:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PorousFlow: 2D miscible gas injection with gravity - help with convergence",
          "author": {
            "login": "garciapintado"
          },
          "bodyText": "Hi all,\nI am trying to set up a  model with PorousFlow using the UserObject PorousFlowWaterNCG to simulate gas injection. At the very moment that the gas saturation goes over 0 in the injection area, the model stops converging.\nThe setup is mostly based on the test fluidstate/theis_nonisothermal.i in the porous flow module, with some incorporation of what (to me) look reasonable top boundary conditions.\nI am wondering if you might help to spot if there is something wrong in my input file.\nFile is at: https://github.com/garciapintado/MOOSE_porous_flow_stuff/blob/main/gas_injection_gravity_smallbox.i\nMany thanks,",
          "url": "https://github.com/idaholab/moose/discussions/23197",
          "updatedAt": "2023-02-04T15:59:15Z",
          "publishedAt": "2023-01-18T21:53:40Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "cpgr"
                  },
                  "bodyText": "Yeah, a quick look suggests this should work. I'm just updating MOOSE, so will take a better look today",
                  "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4722943",
                  "updatedAt": "2023-01-19T00:34:40Z",
                  "publishedAt": "2023-01-19T00:34:40Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "garciapintado"
                          },
                          "bodyText": "Hi @cpgr\nThanks!\nTo be honest, I find it confusing to use 'variable=pgas' for the PorousFlowPiecewiseLinearSink top flow boundary conditions referring to  the mass of water (the liquid phase; 'fluid_phase=0'). But I think this is fine according to some examples? Although I guess that to be more exact I should have included 'mass_fraction_component=0' to refer only to water in the liquid phase, right?\nIn any case, it seems to me that the lack of convergence is not related to the top boundary conditions, but more to the initiation of the gas phase (as the single-phase initial part of the runs well) on the lateral injection sideset.",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4725981",
                          "updatedAt": "2023-01-19T09:54:34Z",
                          "publishedAt": "2023-01-19T09:54:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "It looks like the bug in #12881 is still around...\nI did come up with a workaround which is to use a dummy Pc in that material, which seems to aid convergence. I reduced your problem a bit to make it faster and was able to get it to run. The key change is to make a second capillary pressure user object where the capillary pressure is constant (so the derivatives wrt saturation are zero) and pass that to the PorousFlowFluidState material. (Note: the value of Pc isn't used in this material, only the derivatives wrt saturation are, so it doesn't change the residual, only the jacobian).\nAlso, I reduced nl_max_its in the Executioner so that the timestep will cut back sooner when a gas phase appears just to make it faster. I get something that looks right - the methane enters the mesh, moves upwards quickly until it reaches the cap, starts to accumulate here until it continues upwards.",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4733031",
                          "updatedAt": "2023-01-20T00:39:38Z",
                          "publishedAt": "2023-01-20T00:36:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "And here is the input file\n# gas injection\n# non-isothermal miscible 2-phase 2-component model with UserObject PorousFlowWaterNCG\n# - 2D domain: rectangular column [width:25m, height:200m]\n# - no mechanics\n# - standard gravity\n# - gas injection increases linearly with time to allow for initial stabilization\n\nybot = -180\nytop = -100\nxmin = 0\nxmax = 25\ndensity0_phase0 = 1000\n\n[Mesh]\n  [gen]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmin = ${xmin}\n    xmax = ${xmax}\n    ymin = ${ybot}\n    ymax = ${ytop}\n    # elem_type = TRI3\n    nx = 20\n    ny = 40\n    bias_x = 1.1\n  []\n  [caps]\n    type = SubdomainBoundingBoxGenerator\n    input = 'gen'\n    block_id = 1\n    bottom_left = '-50 -105 0'\n    top_right = '50 0 0'\n  []\n  [injection_area]\n    type = ParsedGenerateSideset\n    combinatorial_geometry = 'y > -150 & y < -125 & x < ${xmin}+1e-05'\n    included_subdomains = 0\n    new_sideset_name = 'injection_area'\n    input = 'caps'\n  []\n  [rename]\n    type = RenameBlockGenerator\n    old_block = '0 1'\n    new_block = 'aquifer caps'\n    input = 'injection_area'\n  []\n[]\n\n[GlobalParams]\n  PorousFlowDictator = dictator\n  biot_coefficient = 1.0\n  gravity = '0 -9.81 0'\n[]\n\n[UserObjects]\n  [dictator]\n    type = PorousFlowDictator\n    porous_flow_vars = 'pgas zi temperature'\n    number_fluid_phases = 2\n    number_fluid_components = 2\n  []\n  [pc0]\n    type = PorousFlowCapillaryPressureConst # dummy Pc with zero derivatives\n    pc = 0\n  []\n  [pc]\n    type = PorousFlowCapillaryPressureVG\n    alpha = 1E-4\n    m = 0.6\n  []\n  [fs]\n    type = PorousFlowWaterNCG\n    water_fp = true_water\n    gas_fp = true_methane\n    capillary_pressure = pc\n  []\n[]\n\n[Variables]\n  [pgas]\n  []\n  [zi]\n    initial_condition = 0\n  []\n  [temperature]\n    scaling = 1E-5\n  []\n[]\n\n[Debug]\n  show_var_residual_norms = true\n[]\n\n[Kernels]\n  [mass_water_dot]\n    type = PorousFlowMassTimeDerivative\n    fluid_component = 0\n    variable = pgas\n  []\n  [flux_water]\n    type = PorousFlowAdvectiveFlux\n    fluid_component = 0\n    variable = pgas\n  []\n  [mass_methane_dot]\n    type = PorousFlowMassTimeDerivative\n    fluid_component = 1\n    variable = zi\n  []\n  [flux_methane]\n    type = PorousFlowAdvectiveFlux\n    fluid_component = 1\n    variable = zi\n  []\n  [energy_dot]\n    type = PorousFlowEnergyTimeDerivative\n    variable = temperature\n  []\n  [heat_advection]\n    type = PorousFlowHeatAdvection\n    variable = temperature\n  []\n  [heat_conduction]\n    type = PorousFlowHeatConduction\n    variable = temperature\n  []\n[]\n\n[AuxVariables]\n  [darcy_vel_phase0_x]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [darcy_vel_phase0_y]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [darcy_vel_phase1_x]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [darcy_vel_phase1_y]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [pwater_aux]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [pgas_aux]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [swater]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [sgas]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [mfrac_0_0] # _\\beta_\\k\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [mfrac_0_1]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [mfrac_1_0]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [mfrac_1_1]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [density_0_aux]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [density_1_aux]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [viscosity_water]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [viscosity_gas]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [enthalpy_water]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [enthalpy_gas]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [relperm_0_aux]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [relperm_1_aux]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [porosity_aux]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n  [mass_water_flux_top]\n    family = LAGRANGE\n    order = FIRST\n  []\n  [mass_methane_flux_top]\n    family = LAGRANGE\n    order = FIRST\n  []\n  [heat_flux_water_adv_top]\n    family = LAGRANGE\n    order = FIRST\n  []\n  [heat_flux_gas_adv_top]\n    family = LAGRANGE\n    order = FIRST\n  []\n  [heat_flux_dif_top]\n    family = LAGRANGE\n    order = FIRST\n  []\n  [ptop_auxvar]\n    family = LAGRANGE\n    order = FIRST\n  []\n[]\n\n[AuxKernels]\n  [darcy_vel_phase0_x]\n    type = PorousFlowDarcyVelocityComponent\n    component = x\n    variable = darcy_vel_phase0_x\n    fluid_phase = 0\n  []\n  [darcy_vel_phase0_y]\n    type = PorousFlowDarcyVelocityComponent\n    component = y\n    variable = darcy_vel_phase0_y\n    fluid_phase = 0\n  []\n  [darcy_vel_phase1_x]\n    type = PorousFlowDarcyVelocityComponent\n    component = x\n    variable = darcy_vel_phase1_x\n    fluid_phase = 1\n  []\n  [darcy_vel_phase1_y]\n    type = PorousFlowDarcyVelocityComponent\n    component = y\n    variable = darcy_vel_phase1_y\n    fluid_phase = 1\n  []\n  [pwater_aux]\n    type = PorousFlowPropertyAux\n    variable = pwater_aux\n    property = pressure\n    phase = 0\n  []\n  [pgas_aux]\n    type = PorousFlowPropertyAux\n    variable = pgas_aux\n    property = pressure\n    phase = 1\n  []\n  [swater]\n    type = PorousFlowPropertyAux\n    variable = swater\n    property = saturation\n    phase = 0\n  []\n  [sgas]\n    type = PorousFlowPropertyAux\n    variable = sgas\n    property = saturation\n    phase = 1\n  []\n  [mfrac_0_0]\n    type = PorousFlowPropertyAux\n    variable = mfrac_0_0\n    property = mass_fraction\n    phase = 0\n    fluid_component = 0\n  []\n  [mfrac_0_1]\n    type = PorousFlowPropertyAux\n    variable = mfrac_0_1\n    property = mass_fraction\n    phase = 0\n    fluid_component = 1\n  []\n  [mfrac_1_0]\n    type = PorousFlowPropertyAux\n    variable = mfrac_1_0\n    property = mass_fraction\n    phase = 1\n    fluid_component = 0\n  []\n  [mfrac_1_1]\n    type = PorousFlowPropertyAux\n    variable = mfrac_1_1\n    property = mass_fraction\n    phase = 1\n    fluid_component = 1\n  []\n  [density_0]\n    type = PorousFlowPropertyAux\n    variable = density_0_aux\n    property = density\n    phase = 0\n  []\n  [density_1]\n    type = PorousFlowPropertyAux\n    variable = density_1_aux\n    property = density\n    phase = 1\n  []\n  [viscosity_water]\n    type = PorousFlowPropertyAux\n    variable = viscosity_water\n    property = viscosity\n    phase = 0\n  []\n  [viscosity_gas]\n    type = PorousFlowPropertyAux\n    variable = viscosity_gas\n    property = viscosity\n    phase = 1\n  []\n  [enthalpy_water]\n    type = PorousFlowPropertyAux\n    variable = enthalpy_water\n    property = enthalpy\n    phase = 0\n  []\n  [enthalpy_gas]\n    type = PorousFlowPropertyAux\n    variable = enthalpy_gas\n    property = enthalpy\n    phase = 1\n  []\n  [relperm_0]\n    type = PorousFlowPropertyAux\n    variable = relperm_0_aux\n    property = relperm\n    phase = 0\n  []\n  [relperm_1]\n    type = PorousFlowPropertyAux\n    variable = relperm_1_aux\n    property = relperm\n    phase = 1\n  []\n  [porosity]\n    type = PorousFlowPropertyAux\n    variable = porosity_aux\n    property = porosity\n  []\n[]\n\n[Functions]\n  [pressure00]\n    type = ParsedFunction\n    value = '101325*10 + 9.81*(-y)*density0'\n    vars = 'density0'\n    vals = '${density0_phase0}'\n  []\n  [temperature00]\n    type = ParsedFunction\n    value = '273.15 + ttop + dTdz*(-y)'\n    vars = 'ttop dTdz'\n    vals = '5   0.1' # geothermal gradient dT/dz=100K/1km\n  []\n  [gas_injection]\n    type = ParsedFunction\n    value = 'vmax * min(t,1e6)/1e6'\n    vars = 'vmax'\n    vals = '-1e-6'\n  []\n[]\n\n[ICs]\n  [pgas_IC]\n    type = FunctionIC\n    variable = pgas\n    function = pressure00\n  []\n  [temperature_IC]\n    type = FunctionIC\n    variable = temperature\n    function = temperature00\n  []\n  [ptop_auxvar_IC]\n    type = FunctionIC\n    variable = ptop_auxvar\n    function = pressure00\n  []\n[]\n\n[BCs]\n  [constant_gas_injection]\n    type = PorousFlowSink\n    boundary = injection_area\n    variable = zi\n    flux_function = gas_injection\n  []\n  [mass_water_top]\n    type = PorousFlowPiecewiseLinearSink\n    boundary = top\n    variable = pgas\n    fluid_phase = 0\n    PT_shift = ptop_auxvar\n    pt_vals = '-1e9 1e9'\n    multipliers = '-1e9 1e9'\n    use_mobility = true\n    use_relperm = true\n    flux_function = 100\n    save_in = mass_water_flux_top\n  []\n  [heat_phase0_adv_top]\n    type = PorousFlowPiecewiseLinearSink\n    boundary = top\n    variable = temperature\n    fluid_phase = 0\n    PT_shift = ptop_auxvar\n    pt_vals = '-1e9 1e9'\n    multipliers = '-1e9 1e9'\n    use_mobility = true\n    use_relperm = true\n    use_enthalpy = true\n    flux_function = 100\n    save_in = heat_flux_water_adv_top\n  []\n  [mass_methane_top]\n    type = PorousFlowPiecewiseLinearSink\n    boundary = top\n    variable = pgas\n    fluid_phase = 1\n    PT_shift = ptop_auxvar\n    pt_vals = '-1e9 1e9'\n    multipliers = '-1e9 1e9'\n    use_mobility = true\n    use_relperm = true\n    flux_function = 100\n    save_in = mass_methane_flux_top\n  []\n  [heat_phase1_adv_top]\n    type = PorousFlowPiecewiseLinearSink\n    boundary = top\n    variable = temperature\n    fluid_phase = 1\n    PT_shift = ptop_auxvar\n    pt_vals = '-1e9 1e9'\n    multipliers = '-1e9 1e9'\n    use_mobility = true\n    use_relperm = true\n    use_enthalpy = true\n    flux_function = 100\n    save_in = heat_flux_gas_adv_top\n  []\n  [heat_diff_top]\n    type = PorousFlowPiecewiseLinearSink\n    variable = temperature\n    PT_shift = 278.15\n    boundary = top\n    pt_vals = '-1000 0 1000'\n    multipliers = '-1000 0 100'\n    use_thermal_conductivity = true\n    flux_function = 0.1\n    save_in = heat_flux_dif_top\n  []\n  [Tbot]\n    type = FunctionDirichletBC\n    variable = temperature\n    boundary = bottom\n    function = temperature00\n  []\n[]\n\n[FluidProperties]\n  [true_water]\n    type = Water97FluidProperties\n  []\n  [true_methane]\n    type = MethaneFluidProperties\n  []\n[]\n[Materials]\n  [temperature]\n    type = PorousFlowTemperature\n    temperature = temperature\n  []\n  [waterncg]\n    type = PorousFlowFluidState\n    gas_porepressure = pgas\n    z = zi\n    temperature = temperature\n    capillary_pressure = pc0 # Here is the dummy Pc\n    fluid_state = fs\n  []\n  [porosity]\n    type = PorousFlowPorosity\n    fluid = true\n    mechanical = false\n    thermal = true\n    porosity_zero = 0.1\n    reference_temperature = 330\n    reference_porepressure = 20E5\n    thermal_expansion_coeff = 15E-6\n    solid_bulk = 8E9\n  []\n  [effective_fluid_pressure]\n    type = PorousFlowEffectiveFluidPressure\n  []\n\n  [permeability_aquifer]\n    type = PorousFlowPermeabilityKozenyCarman\n    block = aquifer\n    poroperm_function = kozeny_carman_phi0\n    phi0 = 0.1\n    n = 2\n    m = 2\n    k0 = 1E-12\n  []\n  [permeability_caps]\n    type = PorousFlowPermeabilityKozenyCarman\n    block = caps\n    poroperm_function = kozeny_carman_phi0\n    phi0 = 0.1\n    n = 2\n    m = 2\n    k0 = 1E-15\n    k_anisotropy = '1 0 0  0 1 0  0 0 1'\n  []\n\n  [relperm_phase0] # liquid\n    type = PorousFlowRelativePermeabilityCorey\n    n = 2\n    phase = 0\n    s_res = 0.1\n    sum_s_res = 0.1\n  []\n  [relperm_phase1] # gas\n    type = PorousFlowRelativePermeabilityCorey\n    n = 2\n    phase = 1\n    s_res = 0.05\n    sum_s_res = 0.15\n  []\n  [rock_internal_energy]\n    type = PorousFlowMatrixInternalEnergy\n    density = 2500\n    specific_heat_capacity = 1100\n  []\n  [rock_thermal_conductivity]\n    type = PorousFlowThermalConductivityIdeal\n    dry_thermal_conductivity = '2.5 0 0  0 2.5 0  0 0 2.5'\n  []\n[]\n\n[Postprocessors]\n  [ch4]\n    type = PorousFlowFluidMass\n    fluid_component = 1\n    execute_on = TIMESTEP_END\n  []\n  [ch4_gas]\n    type = PorousFlowFluidMass\n    fluid_component = 1\n    phase = 1\n    execute_on = TIMESTEP_END\n  []\n[]\n\n[Preconditioning]\n  active = basic\n  [basic]\n    type = SMP\n    full = true\n    petsc_options = '-snes_converged_reason -ksp_diagonal_scale -ksp_diagonal_scale_fix -ksp_gmres_modifiedgramschmidt'\n    petsc_options_iname = '-ksp_type -pc_type -sub_pc_type -sub_pc_factor_shift_type -pc_asm_overlap'\n    petsc_options_value = 'gmres     asm      lu           NONZERO                   2'\n  []\n  [lu_mumps]\n    type = SMP\n    full = true\n    petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n    petsc_options_value = ' lu       mumps'\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = Newton\n  end_time = 315576000 # 10 years\n  dtmax = 1e6\n  nl_max_its = 15\n  # line_search = none\n  [TimeStepper]\n    type = IterationAdaptiveDT\n    dt = 1E3\n    growth_factor = 1.5\n    optimal_iterations = 5\n  []\n  nl_abs_tol = 1e-10\n  nl_rel_tol = 1e-5\n[]\n\n[Outputs]\n  exodus = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4733038",
                          "updatedAt": "2023-01-20T00:38:34Z",
                          "publishedAt": "2023-01-20T00:38:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "It would be really neat to write this up as an example, @cpgr .   Or a test file.   Or, do you think you'll remember it when the next person asks a similar question?",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4733441",
                          "updatedAt": "2023-01-20T02:08:20Z",
                          "publishedAt": "2023-01-20T02:08:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "Almost certain to forget it!\nI'm actually thinking the best thing to do is to comment out the offending bit of code until I can fix it properly, which would avoid the need for this hack. What do you think?",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4733481",
                          "updatedAt": "2023-01-20T02:14:45Z",
                          "publishedAt": "2023-01-20T02:14:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "I remember that the fix was going to be quite complicated - not just doing a few chain rules, but required quite a lot of MOOSE restructuring - is that correct?  If so, i wonder whether it'll ever get fixed!!",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4733781",
                          "updatedAt": "2023-01-20T03:38:47Z",
                          "publishedAt": "2023-01-20T03:38:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "Yeah, from memory it was super tricky.",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4734177",
                          "updatedAt": "2023-01-20T05:25:52Z",
                          "publishedAt": "2023-01-20T05:25:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "garciapintado"
                          },
                          "bodyText": "Hi @cpgr,\nMany thanks! Sorry there is a bug around\u2026\nThis multiphase stuff is currently not my main activity, but I\u2019m curious to test to see future possibilities.\nI\u2019ve tried your workaround file. Great to see the gas phase generating and moving\u2026\nStill, a bit later I\u2019m getting plenty of messages indicating pressure\nPressure -993566 is out of range in true_water: inRegion()\nand eventually it does not converge. But now, this seems to be related to the top BCs. I\u2019ll try to understand the issue\u2026",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4735517",
                          "updatedAt": "2023-01-20T09:16:42Z",
                          "publishedAt": "2023-01-20T09:16:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "garciapintado"
                          },
                          "bodyText": "Hi @cpgr & @WilkAndy,\nAs the lack of final convergence (due to the top BCs) was still haunting me, I've tried a modification to the top BC regarding the flux of the gas phase:\n[mass_methane_top]\n   type = PorousFlowPiecewiseLinearSink\n   boundary = top\n   variable = zi\n   fluid_phase = 1\n   PT_shift = ptop_auxvar\n   pt_vals = '-1e9 1e9'\n   multipliers = '-1e9 1e9'\n   use_mobility = true\n   use_relperm = true\n   flux_function = 100\n   save_in = mass_methane_flux_top\n []\n\nThis modification (simply using the total methane mass fraction zi instead pf pgas for the top gas flux) makes the model converge, and the patterns at the top look now natural to me. Still, I was trying this out of curiosity, but don't understand how this is working. Does this top BC make sense to you, and if so, please could you indicate how is that this works in a couple of lines and if then the use of pgas for the liquid phase top flux still makes sense?\nSo you see, this is now well\n\nstable up to 3e6 sec [~35 days] simulation.",
                          "url": "https://github.com/idaholab/moose/discussions/23197#discussioncomment-4765165",
                          "updatedAt": "2023-01-24T10:23:12Z",
                          "publishedAt": "2023-01-24T10:23:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Applying a non-linear prestress in a 2D surface",
          "author": {
            "login": "MusannaGalib"
          },
          "bodyText": "Hello,\nI want to add a non-linear pre-stress along the y-direction to my phase field model using a tensor mechanics module (like the figure). Can anyone give me an idea of how to do this?",
          "url": "https://github.com/idaholab/moose/discussions/22936",
          "updatedAt": "2023-02-04T15:57:43Z",
          "publishedAt": "2022-12-09T22:25:06Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@laagesen @amjokisaari",
                  "url": "https://github.com/idaholab/moose/discussions/22936#discussioncomment-4586504",
                  "updatedAt": "2023-01-03T23:22:00Z",
                  "publishedAt": "2023-01-03T23:22:00Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "So it looks like you are running a dendrite growth simulation with the dendrite growing in the y-direction. Are you wanting to apply a stress to the solid dendrite only, or the solid and liquid both? What is the physical mechanism that is causing the stress?",
                          "url": "https://github.com/idaholab/moose/discussions/22936#discussioncomment-4594088",
                          "updatedAt": "2023-01-04T17:32:06Z",
                          "publishedAt": "2023-01-04T17:32:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MusannaGalib"
                          },
                          "bodyText": "So it looks like you are running a dendrite growth simulation with the dendrite growing in the y-direction. Are you wanting to apply a stress to the solid dendrite only, or the solid and liquid both? What is the physical mechanism that is causing the stress?\n\nHello @laagesen,\nI want to add stress on the solid part only. This is a pre-stressed that existed on the system even before the battery operation started.\nI am thinking of adding this as an eigen strain (by converting the stress in terms of strain using a compliance tensor). In the code, sigma_o is that strain. I wanted to apply this in the y-direction. Thats why I put eigen_base = '0.0 1.0 0.0'. However, seems like i am doing something wrong - prefactor is not effecting the eigenstrain for some reason\nAlso, how can I add an equation for sigma_o rather than a constant value? For example,  y = -0.02x^2+0.7591x+0.0079\nPlease give your suggestion on this.\n[./prefactor]\n  type = DerivativeParsedMaterial\n  args = ' eta disp_x'\n  f_name = eigenstrain_prefactor\n  constant_names = 'sigma_o'\n  constant_expressions = '-0.4'\n  function = '(dex/sqrt(dex^2))*sigma_o*(dex/sqrt(dex^2))*((1+eta)/2)'\n  material_property_names = ' dex:=D[eta,disp_x]'\n[../]\n  [./eigenstrain_b]\n  type = ComputeVariableEigenstrain\n  base_name = phaseb\n  eigen_base = '0.0 1.0 0.0'                            \n  args = 'eta disp_x'\n  prefactor = eigenstrain_prefactor\n  eigenstrain_name = eigenstrain\n[../]",
                          "url": "https://github.com/idaholab/moose/discussions/22936#discussioncomment-4700704",
                          "updatedAt": "2023-01-18T18:49:19Z",
                          "publishedAt": "2023-01-16T19:34:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "I'm not exactly sure what the physical effect that the eigenstrain would have here- if this is a solid-liquid system, and you cause the solid to expand further, aren't you just going to displace the liquid phase? I guess if you have a constant-volume system you could compress the liquid, but if the eigenstrain isn't changing it doesn't seem like it would affect the dendrite evolution.\nThat said, if you want to make sure that the eigenstrain is working as you think it should, I would recommend outputting both these material properties to the Exodus file. You can do this for a material by setting outputs = exodus in the material block. Then you can visualize what they are and make sure they are doing what you think they should.",
                          "url": "https://github.com/idaholab/moose/discussions/22936#discussioncomment-4723115",
                          "updatedAt": "2023-01-19T01:11:16Z",
                          "publishedAt": "2023-01-19T01:11:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "MusannaGalib"
                          },
                          "bodyText": "Hello @laagesen and @GiudGiud,\nI tried to implement the mentioned code, but it diverged after 94 seconds. I am adding the log file here. Can you please give me some suggestions on this?\nlog - Copy.txt\nMy scaling used are -\n[Variables]              \n  [./w]                 \n  scaling = 1e+3\n  [../]\n  [./eta]\n  scaling = 1e+3\n  [../]\n  [./pot]\n  scaling = 1e+3\n  [../]\n  [./disp_x]\n  scaling = 1e+3\n  [../]\n  [./disp_y]\n  scaling = 1e+3\n  [../]\n[]\n\nExecutioners are -\n[Preconditioning]                #Reduces the total number of linear iterations\n  [./SMP]                        #Single Matrix Preconditioner (SMP) builds one preconditioning matrix.\n    type = SMP                   #Single Matrix Preconditioner (SMP)\n    full = true                  #To use all off diagonal blocks set\n      petsc_options_iname = '-pc_type -ksp_grmres_restart -sub_ksp_type -sub_pc_type -pc_asm_overlap'\n  petsc_options_value = 'asm      121                  preonly       lu           4'\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  scheme = bdf2\n  verbose = True\n  solve_type ='Newton'\n  l_max_its = 50\n  l_tol = 1e-5\n  nl_max_its = 50\n  nl_rel_tol = 1e-5\n  nl_abs_tol = 1e-6\n    petsc_options_iname = '-pc_type -ksp_gmres_restart -sub_ksp_type -sub_pc_type -pc_asm_overlap'\n  petsc_options_value = 'asm      31                  preonly      lu          4'\n  dt=0.01\n  end_time = 400\n  line_search = 'none'\n[]\n\nSecondly, Is eigen_base = '0.0 1.0 0.0'   represents eigen_base = 'x y z'  ?\nFor some reason, the mentioned prefactor is not affecting the eigenstrain_b. Please give your thoughts on this.  I tried to output the material properties using outputs = exodus, but the imapcts are not significant. However, if dont use prefactor rather than directly give eigen_base = '0.0 -0.4 0.0', it has significant impact.\n[./prefactor]\n  type = DerivativeParsedMaterial\n  args = ' eta disp_x'\n  f_name = eigenstrain_prefactor\n  constant_names = 'sigma_o'\n  constant_expressions = '-0.4'\n  function = '(dex/sqrt(dex^2))*sigma_o*(dex/sqrt(dex^2))*((1+eta)/2)'\n  material_property_names = ' dex:=D[eta,disp_x]'\n[../]\n  [./eigenstrain_b]\n  type = ComputeVariableEigenstrain\n  base_name = phaseb\n  eigen_base = '0.0 1.0 0.0'                            \n  args = 'eta disp_x'\n  prefactor = eigenstrain_prefactor\n  eigenstrain_name = eigenstrain\n[../]",
                          "url": "https://github.com/idaholab/moose/discussions/22936#discussioncomment-4762418",
                          "updatedAt": "2023-01-24T02:31:50Z",
                          "publishedAt": "2023-01-24T02:30:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "For the convergence issues, you are using a Newton solver, which really needs a full and correct Jacobian to work correctly, but the Jacobian couplings between mechanics and phase-field have not been fully implemented. I would try using PJFNK solver instead, there are many examples in the MOOSE phase-field module where you can see examples of how this is done, for example moose/modules/phase_field/examples/grain_growth/grain_growth_2D_random.i. I would also try running without coupled mechanics to make sure it converges without the mechanics part first.\nFor the question about the prefactor not working as you are expecting, I'm not sure what you mean by not affecting the eigenstrain_b. Do you mean that it is not affecting microstructural evolution? The reason I suggested outputting eigenstrain_b to the Exodus file is so that you can visualize it and make sure it is non-zero. If it is zero everyone then you would know there was a problem with your prefactor material property. You can also output prefactor to the Exodus file to visualize it and verify that it looks as you expect it to.",
                          "url": "https://github.com/idaholab/moose/discussions/22936#discussioncomment-4762566",
                          "updatedAt": "2023-01-24T03:08:50Z",
                          "publishedAt": "2023-01-24T03:08:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "question on off-diagonal (nonlocal?) jacobian for nodal kernels",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "With Nodal Kernels, is it possible to set the Jacobian contribution of a nodal value with respect to a different node for the same variable? My understanding of the way off-diagonal Jacobians usually work in MOOSE is you define the contribution of one variable with respect to another variable at a given node/qp. What I'm trying to do is set the Jacobian for $\\frac{\\partial u_i}{\\partial u_j}$, say, for an $N$-node system with one nonlinear variable, and make a dense $N$ x $N$ Jacobian.\nIs this what the computeNonlocalOffDiagJacobian member function is for? If so, are there any examples/documentation on how to use this?",
          "url": "https://github.com/idaholab/moose/discussions/23196",
          "updatedAt": "2023-02-04T15:57:06Z",
          "publishedAt": "2023-01-18T20:43:17Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nNonLocalIntegratedBC seems to be an example doing that.\nI wonder, could you just AD to let it process the off diagonals?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4728179",
                  "updatedAt": "2023-01-19T14:20:05Z",
                  "publishedAt": "2023-01-19T14:20:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "That seems close but unfortunately I don't understand how the Assembly stuff works and how the global residual and Jacobian get numbered/stored. Is that kind of info available to read up on? What changes would need to be made for a NodalKernel?\nNot sure if AD will work in my case because my contribution to the residual/Jacobian includes a Postprocessor value. But if I had the nonlocal variable values then I wouldn't need the Postprocessor in the first place.",
                          "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4729558",
                          "updatedAt": "2023-01-19T16:34:52Z",
                          "publishedAt": "2023-01-19T16:34:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "There's the doxygen for assembly.\nI dont think we have much on the numbering, the main documentation https://mooseframework.inl.gov/moose/source/systems/NonlinearSystem.html has a lot but not that\nLooking at the doxygen for the base nodal kernel, you also have that routine that you can implement if there s a nonlocal off-diagonal contribution to the jacobian\nhttps://mooseframework.inl.gov/docs/doxygen/moose/classResidualObject.html#a706e1d22b9aad2f08bed44606afced07",
                          "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4748031",
                          "updatedAt": "2023-01-22T06:15:18Z",
                          "publishedAt": "2023-01-22T06:15:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Thanks @GiudGiud . Though in my case, I guess I want computeNonlocalJacobian, right? The OffDiag bit refers to derivative with respect to a different variable? I'm looking at derivative with respect to same variable but different DoF.",
                          "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4751689",
                          "updatedAt": "2023-01-22T22:29:24Z",
                          "publishedAt": "2023-01-22T22:29:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "It's still going to be off-diagonal?\nThe diagonal is only for the local element and local variable",
                          "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4751802",
                          "updatedAt": "2023-01-22T23:04:02Z",
                          "publishedAt": "2023-01-22T23:04:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "I guess I'm confused about \"on\" and \"off\" diagonals because I can't see how the system is constructed. What's the reason for having computeNonlocalJacobian and computeNonlocalOffDiagJacobian?",
                          "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4752033",
                          "updatedAt": "2023-01-23T00:05:42Z",
                          "publishedAt": "2023-01-23T00:05:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "not sure. You may be right about the distinction.\n@lindsayad will know.",
                          "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4752109",
                          "updatedAt": "2023-01-23T00:26:22Z",
                          "publishedAt": "2023-01-23T00:26:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "OffDiag generally denotes a different variable and on-diagonal refers to same variable, so these API names are in the block matrix sense.",
                          "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4760339",
                          "updatedAt": "2023-01-23T19:59:41Z",
                          "publishedAt": "2023-01-23T19:59:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "@dschwen and @SudiptaBiswas are the nonlocal authors, so maybe one of them could comment on those APIs",
                          "url": "https://github.com/idaholab/moose/discussions/23196#discussioncomment-4760364",
                          "updatedAt": "2023-01-23T20:03:33Z",
                          "publishedAt": "2023-01-23T20:03:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Tests Failing After Installation",
          "author": {
            "login": "pjheath"
          },
          "bodyText": "Hi, after installing MOOSE I am getting some failed tests. I am using Ubuntu 20.04.5 on Windows 11. Below are the failed tests I get in ~/projects/moose/test from ./run_tests -j4 after successfully doing make -j4. I also ran:\ncd ~/projects/moose/test\nmake -j 8\n./run_tests -i always_ok -p 2\nfrom the troubleshooting guide but the test passed. Any help would be appreciated.\nfvkernels/mms/skewness-correction/adv-diff-react.average ...................................... FAILED (CRASH)\nfvkernels/mms/skewness-correction/diffusion.average ........................................... FAILED (CRASH)\nmortar/convergence-studies/fv-gap-conductance.fv/first_order .................................. FAILED (CRASH)\nfvkernels/mms/skewness-correction/two_term_extrapol.skewcorrected ............................. FAILED (CRASH)\nfvkernels/mms/advective-outflow.outflow ....................................................... FAILED (CRASH)\nfvkernels/mms/harmonic_interpolation.average/quads ............................................ FAILED (CRASH)\nfvkernels/mms/skewness-correction/adv-diff-react.skewcorrected ................................ FAILED (CRASH)\nsamplers/distribute.scale/plot ................................................................ FAILED (CRASH)\nfvkernels/mms/skewness-correction/diffusion.skewcorrected ..................................... FAILED (CRASH)\nmortar/convergence-studies/fv-gap-conductance.fv/second_order ................................. FAILED (CRASH)\nfvkernels/mms/advective-outflow.extrapolate ................................................... FAILED (CRASH)\nfvkernels/mms/harmonic_interpolation.harmonic/tris ............................................ FAILED (CRASH)\nfvkernels/mms/skewness-correction/adv-diff-react.skewcorrected-advection ...................... FAILED (CRASH)\nfvkernels/mms/advective-outflow.UpwindLimiter ................................................. FAILED (CRASH)\nfviks/one-var-diffusion.first_order_convergence/with-ik ....................................... FAILED (CRASH)\nfvkernels/mms/harmonic_interpolation.harmonic/quads ........................................... FAILED (CRASH)\nfvkernels/mms/mass-mom-mat-advection-diffusion.mms ............................... [min_cpus=2] FAILED (CRASH)\nfvkernels/mms/advective-outflow.CentralDifferenceLimiter ...................................... FAILED (CRASH)\nfviks/one-var-diffusion.first_order_convergence/without-ik .................................... FAILED (CRASH)\nfvkernels/mms/advective-outflow.VanLeerLimiter ................................................ FAILED (CRASH)\nfviks/one-var-diffusion.harmonic .............................................................. FAILED (CRASH)\nfvkernels/mms/advective-outflow.MinModLimiter ................................................. FAILED (CRASH)\nfvkernels/mms/advective-outflow.SOULimiter .................................................... FAILED (CRASH)\nfvkernels/mms/advective-outflow.kt/KTLimitedCD ................................................ FAILED (CRASH)\nfvkernels/mms/advective-outflow.kt/KTLimitedUpwind ............................................ FAILED (CRASH)\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer ........................................... FAILED (CRASH)\n--------------------------------------------------------------------------------------------------------------\nRan 3407 tests in 896.7 seconds. Average test time 0.8 seconds, maximum test time 40.0 seconds.\n3380 passed, 93 skipped, 0 pending, 27 FAILED",
          "url": "https://github.com/idaholab/moose/discussions/23042",
          "updatedAt": "2023-01-23T13:35:29Z",
          "publishedAt": "2022-12-29T22:20:04Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAll these tests use MPI. Can you paste here the log for the failed tests rather than just the summary? (higher on the screen)\nIt s likely just this issue with gethostbyname but we ll know more with the log for a failed test\nhttps://mooseframework.inl.gov/help/troubleshooting.html#811225ec-4f15-4717-99a2-0035ee939de4\nYou can run only failed tests with ./run_tests --failed-tests\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23042#discussioncomment-4552695",
                  "updatedAt": "2022-12-29T22:53:10Z",
                  "publishedAt": "2022-12-29T22:53:09Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "pjheath"
                  },
                  "bodyText": "Here is the log. It's too many characters to fit the whole thing, so I have included the information for one of the tests. The entire log is in a text file here: https://github.com/pjheath/MOOSE-Test-Output. If there is a better way to share the log, let me know and I can do it that way instead.\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Running command: python -m unittest -v test.KTLimitedVanLeer\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:29 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   3\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 1.453504e+01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.453504e+01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 2.820896e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 3.416842e+00\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 3.416842e+00\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 6.682368e-11\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 2.639664e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 2.639664e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 2.701894e-16\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  3 Nonlinear |R| = 1.997159e-03\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.997159e-03\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 7.839309e-17\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  4 Nonlinear |R| = 1.171339e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   7.761630e-02 |   5.000000e-01 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:29 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   5\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   4\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                4\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          4\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 2.659223e+00\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 2.659223e+00\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 3.021758e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 9.026574e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 9.026574e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.067332e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 2.070962e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 2.070962e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 7.730398e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  3 Nonlinear |R| = 4.239162e-03\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 4.239162e-03\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 8.760375e-11\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  4 Nonlinear |R| = 1.120935e-06\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.120935e-06\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 3.465048e-14\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  5 Nonlinear |R| = 2.860119e-13\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   6.976847e-02 |   2.500000e-01 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:29 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   9\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   8\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                8\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          8\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 5.664039e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 5.664039e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 2.813910e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 1.386243e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.386243e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 7.729528e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 2.329234e-02\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 2.329234e-02\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.461570e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  3 Nonlinear |R| = 1.925569e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.925569e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 5.448667e-12\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  4 Nonlinear |R| = 6.192457e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 6.192457e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.663797e-16\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  5 Nonlinear |R| = 4.626304e-14\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   4.952952e-02 |   1.250000e-01 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:29 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   17\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   16\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                16\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          16\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 1.279116e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.279116e-01\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 3.645097e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 1.151228e-02\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.151228e-02\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 6.442328e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 3.472451e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 3.472451e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 5.789229e-11\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  3 Nonlinear |R| = 9.605943e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 9.605943e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 5.492340e-15\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  4 Nonlinear |R| = 2.033890e-13\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   1.596050e-02 |   6.250000e-02 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:30 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   33\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   32\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                32\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          32\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 3.069043e-02\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 3.069043e-02\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 6.680806e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 9.773025e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 9.773025e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.688240e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 1.137939e-05\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.137939e-05\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 9.615211e-12\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  3 Nonlinear |R| = 4.282231e-10\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   2.554200e-03 |   3.125000e-02 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:30 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   65\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   64\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                64\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          64\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 7.601987e-03\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 7.601987e-03\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.750464e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 6.255832e-05\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 6.255832e-05\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 2.057899e-10\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 1.327761e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.327761e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 2.929822e-13\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  3 Nonlinear |R| = 1.121600e-12\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   3.931015e-04 |   1.562500e-02 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:30 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   129\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   128\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                128\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          128\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 1.902226e-03\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.902226e-03\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 3.894452e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 4.353246e-06\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 4.353246e-06\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 2.598038e-11\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 9.630056e-10\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   5.843835e-05 |   7.812500e-03 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:30 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   257\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   256\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                256\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          256\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 4.766825e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 4.766825e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.083245e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 5.751849e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 5.751849e-07\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 3.670313e-12\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 1.200172e-11\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   8.598753e-06 |   3.906250e-03 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:30 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   513\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   512\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                512\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          512\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 1.193780e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.193780e-04\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 3.222415e-10\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 9.939180e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 9.939180e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 5.693564e-13\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 9.535880e-13\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   1.302580e-06 |   1.953125e-03 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:31 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   1025\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   1024\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                1024\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          1024\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 2.987493e-05\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 2.987493e-05\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.766509e-10\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 1.516535e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 1.516535e-08\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.042613e-13\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 8.425709e-13\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   2.119369e-07 |   9.765625e-04 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Framework Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: MOOSE Version:           git commit 26b47f2e0e on 2022-12-24\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: LibMesh Version:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: PETSc Version:           3.16.6\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: SLEPc Version:           3.16.2\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Current Time:            Thu Dec 29 17:51:31 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Executable Timestamp:    Thu Dec 29 14:14:02 2022\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Parallelism:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Processors:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Threads:             1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Mesh:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Parallel Type:           replicated\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Mesh Dimension:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Spatial Dimension:       1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Nodes:                   2049\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Elems:                   2048\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Subdomains:          1\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Nonlinear System:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num DOFs:                2048\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Num Local DOFs:          2048\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Variables:               \"u\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Finite Element Types:    \"MONOMIAL\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Approximation Orders:    \"CONSTANT\"\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Execution Information:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Executioner:             Steady\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:   Solver Mode:             Preconditioned JFNK\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  0 Nonlinear |R| = 7.472827e-06\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 7.472827e-06\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 1.035520e-10\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       2 Linear |R| = 9.152083e-16\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  1 Nonlinear |R| = 2.205147e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       0 Linear |R| = 2.205147e-09\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       1 Linear |R| = 2.667511e-14\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:       2 Linear |R| = 3.370902e-19\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  2 Nonlinear |R| = 1.235082e-12\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:  Solve Converged!\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Postprocessor Values:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: | time           | L2u            | h              |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: |   1.000000e+00 |   3.811909e-08 |   4.882812e-04 |\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: +----------------+----------------+----------------+\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: test (test.KTLimitedVanLeer) ... qt.qpa.xcb: could not connect to display localhost:0\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: qt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \"\" even though it was found.\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Available platform plugins are: eglfs, minimal, minimalegl, offscreen, vnc, webgl, xcb.\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Aborted\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Exit Code: 134\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: ################################################################################\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer: Tester failed, reason: CRASH\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer:\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer ................. [previous results: CRASH] FAILED (CRASH)\n\n\nFinal Test Results:\n--------------------------------------------------------------------------------------------------------------\npartitioners/petsc_partitioner.parmetis_weight_both ...... [previous results: TIMEOUT,OVERSIZED,min_cpus=4] OK\nsamplers/distribute.scale/execute ............................................................ [re-running] OK\nfvkernels/mms/advective-outflow.outflow ............................. [previous results: CRASH] FAILED (CRASH)\nfviks/one-var-diffusion.first_order_convergence/with-ik ............. [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/harmonic_interpolation.average/tris ................... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/skewness-correction/adv-diff-react.average ............ [previous results: CRASH] FAILED (CRASH)\nmortar/convergence-studies/fv-gap-conductance.fv/first_order ........ [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/mass-mom-mat-advection-diffusion.mms [previous results: CRASH,OVERSIZED,min_c...] FAILED (CRASH)\nfvkernels/mms/skewness-correction/diffusion.average ................. [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/skewness-correction/two_term_extrapol.skewcorrected ... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/advective-outflow.extrapolate ......................... [previous results: CRASH] FAILED (CRASH)\nfviks/one-var-diffusion.first_order_convergence/without-ik .......... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/harmonic_interpolation.average/quads .................. [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/skewness-correction/adv-diff-react.skewcorrected ...... [previous results: CRASH] FAILED (CRASH)\nmortar/convergence-studies/fv-gap-conductance.fv/second_order ....... [previous results: CRASH] FAILED (CRASH)\nsamplers/distribute.scale/plot ...................................... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/skewness-correction/diffusion.skewcorrected ........... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/advective-outflow.UpwindLimiter ....................... [previous results: CRASH] FAILED (CRASH)\nfviks/one-var-diffusion.harmonic .................................... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/harmonic_interpolation.harmonic/tris .................. [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/skewness-correction/adv-diff-react.skewcorrected-advection [previous results:...] FAILED (CRASH)\nfvkernels/mms/advective-outflow.CentralDifferenceLimiter ............ [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/harmonic_interpolation.harmonic/quads ................. [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/advective-outflow.VanLeerLimiter ...................... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/advective-outflow.MinModLimiter ....................... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/advective-outflow.SOULimiter .......................... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/advective-outflow.kt/KTLimitedCD ...................... [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/advective-outflow.kt/KTLimitedUpwind .................. [previous results: CRASH] FAILED (CRASH)\nfvkernels/mms/advective-outflow.kt/KTLimitedVanLeer ................. [previous results: CRASH] FAILED (CRASH)\n--------------------------------------------------------------------------------------------------------------\nRan 29 tests in 69.2 seconds. Average test time 2.3 seconds, maximum test time 5.6 seconds.\n2 passed, 0 skipped, 0 pending, 27 FAILED",
                  "url": "https://github.com/idaholab/moose/discussions/23042#discussioncomment-4553025",
                  "updatedAt": "2022-12-30T00:30:34Z",
                  "publishedAt": "2022-12-30T00:30:34Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the error message points to display issues.\nIt's not MPI.",
                          "url": "https://github.com/idaholab/moose/discussions/23042#discussioncomment-4553285",
                          "updatedAt": "2022-12-30T01:55:51Z",
                          "publishedAt": "2022-12-30T01:55:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think this might just require setting the display environment variable",
                          "url": "https://github.com/idaholab/moose/discussions/23042#discussioncomment-4553286",
                          "updatedAt": "2022-12-30T01:56:07Z",
                          "publishedAt": "2022-12-30T01:56:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "pjheath"
                          },
                          "bodyText": "Thanks! I did export DISPLAY=:0.0 and got no failures.",
                          "url": "https://github.com/idaholab/moose/discussions/23042#discussioncomment-4553466",
                          "updatedAt": "2022-12-30T02:41:24Z",
                          "publishedAt": "2022-12-30T02:41:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "pjheath"
                  },
                  "bodyText": "It sets the display variable to 0.0. This fixed the errors I was having. I didn't notice any difference otherwise but I'm not too familiar with Linux so I can't say for sure.\n\u2026\n________________________________\nFrom: ananthanarasimhanj ***@***.***>\nSent: Sunday, January 22, 2023 6:54 PM\nTo: idaholab/moose ***@***.***>\nCc: Paxson Heath ***@***.***>; Mention ***@***.***>\nSubject: [EXTERNAL] Re: [idaholab/moose] Tests Failing After Installation (Discussion #23042)\n\n\n@pjheath<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fpjheath&data=05%7C01%7Cpjheath%40crimson.ua.edu%7C639c171020d0423ef06f08dafcdc5ee8%7C2a00728ef0d040b4a4e8ce433f3fbca7%7C0%7C0%7C638100320675985496%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=P7GfolS%2BXb1FMUbdEgnhShzDIvIhjuLBNn6f1uTLY%2F0%3D&reserved=0> what does \"export DISPLAY=:0.0\"actually mean? should i type this in command prompt and see?\n\n\u2014\nReply to this email directly, view it on GitHub<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fidaholab%2Fmoose%2Fdiscussions%2F23042%23discussioncomment-4752290&data=05%7C01%7Cpjheath%40crimson.ua.edu%7C639c171020d0423ef06f08dafcdc5ee8%7C2a00728ef0d040b4a4e8ce433f3fbca7%7C0%7C0%7C638100320675985496%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=e8%2Fbr79WmS6Mv2ObtGqkNkX7j0JECJEcSgbPAT%2BvRdQ%3D&reserved=0>, or unsubscribe<https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA4YEEMIZP5BL5X6INAYIO2TWTXJD7ANCNFSM6AAAAAATMNYCSU&data=05%7C01%7Cpjheath%40crimson.ua.edu%7C639c171020d0423ef06f08dafcdc5ee8%7C2a00728ef0d040b4a4e8ce433f3fbca7%7C0%7C0%7C638100320675985496%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=SUtXwdHV0MnxbivExYzLjAa33BX8UOn45pmkWoJjBSM%3D&reserved=0>.\nYou are receiving this because you were mentioned.Message ID: ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/23042#discussioncomment-4752815",
                  "updatedAt": "2023-01-23T02:56:59Z",
                  "publishedAt": "2023-01-23T02:56:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Strange that so many tests are requiring Qt. Or is this some new requirement from Windows? We don't see this issue on other Linux installs. Just Linux installs within Windows WSL.",
                          "url": "https://github.com/idaholab/moose/discussions/23042#discussioncomment-4756594",
                          "updatedAt": "2023-01-23T13:35:30Z",
                          "publishedAt": "2023-01-23T13:35:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Exodus output within specific time intervals (Control System or...?)",
          "author": {
            "login": "gka80"
          },
          "bodyText": "Hello-\nI have an instance where it would be beneficial to output exodus files only within specific time intervals. The main reason why I want to do this is to save storage space.\nI am wondering if this is possible and, if so, how? I have tried with the Control System using \"BoolFunctionControl\", but I am not sure how to tie this with the \"Outputs/exodus = true\" input.\n[./exodus_bool]\n    type = ParsedFunction\n    value = 'if(t>=0.0,1,0)*if(t<0.1,1,0)'\n  [../]\n\n[Controls]\n  [./exodus_control]\n    type = BoolFunctionControl\n    parameter = 'Ouput/*/exodus'\n    function = 'exodus_bool'\n    execute_on = 'initial timestep_begin'\n  [../]\n[]\n\n[Outputs]\n  # exodus = true\n  [exodus]\n    type = Exodus\n    exodus = true\n  []\n[]\n\nHowever, when I run this, I get the following error:\n*** ERROR ***\nThe following error occurred in the object \"exodus_control\", of type \"BoolFunctionControl\".\n\nThe desired parameter 'Ouput/*/exodus' was not located for the 'exodus_control' object, it either does not exist or has not been declared as controllable.\n\nCan I control output this way? Or is there another (preferred) approach?\nThank you,\n-Garrett",
          "url": "https://github.com/idaholab/moose/discussions/23221",
          "updatedAt": "2023-01-23T00:26:06Z",
          "publishedAt": "2023-01-22T00:45:55Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis is more of a conditional enable control, not a boolean function control.\nYou want to turn on/off the output (exodus) object. You can use this object\nhttps://mooseframework.inl.gov/source/controls/ConditionalFunctionEnableControl.html\nBUT\nyou dont need to do that\nIf you look at the parameters for the exodus output\nhttps://mooseframework.inl.gov/source/outputs/Exodus.html\nthere are already a start_time and end_time parameter.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23221#discussioncomment-4747984",
                  "updatedAt": "2023-01-22T05:53:45Z",
                  "publishedAt": "2023-01-22T05:53:44Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "gka80"
                          },
                          "bodyText": "@GiudGiud\nThank you! Both options worked great.\nFor future reference if anyone needs to do this using the ConditionalFunctionEnableControl:\n[Functions]\n  [./exodus_control]\n      type = ParsedFunction\n      value = '((t >= 0.0)&(t < 0.00128))|((t >= 0.00256)&(t < 0.00576))'\n  [../]\n[]\n\n[Controls]\n  [./exodus_control]\n    type = ConditionalFunctionEnableControl\n    conditional_function = 'exodus_control'\n    enable_objects = 'Outputs::exodus'\n  [../]\n[]\n\n[Outputs]\n  [./exodus]\n    type = Exodus\n    enable = true\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/23221#discussioncomment-4752108",
                          "updatedAt": "2023-01-23T00:26:05Z",
                          "publishedAt": "2023-01-23T00:26:04Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Non-Newtonian Fluid Flow in Porous Media",
          "author": {
            "login": "sinaomrani96"
          },
          "bodyText": "Hi,\nI have searched and did not find anything special regarding non-Newtonian fluid flow in porous media. The only conversation was for 7 years ago. So, I was wondering if anybody knows that this has been developed or not. Thanks.\nBest regards,\nSina",
          "url": "https://github.com/idaholab/moose/discussions/23211",
          "updatedAt": "2023-02-04T15:56:46Z",
          "publishedAt": "2023-01-20T15:12:01Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI dont think anything got developed\n@WilkAndy for confirmation\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23211#discussioncomment-4745396",
                  "updatedAt": "2023-01-21T15:23:37Z",
                  "publishedAt": "2023-01-21T15:23:36Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "sinaomrani96"
                          },
                          "bodyText": "Hi,\nDo you have any suggestion regarding developing it on MOOSE? I mean any similar modules such as PorousFlow that can be modified.\nBest regards,\nSina",
                          "url": "https://github.com/idaholab/moose/discussions/23211#discussioncomment-4749388",
                          "updatedAt": "2023-01-22T13:01:27Z",
                          "publishedAt": "2023-01-22T13:01:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "I have done non-Newtonian slurry flow with MOOSE, but unfortunately that code cannot be released to the general public.  I did not end up modifying PorousFlow - instead, i made my own App, and my input files used as many Kernels/Materials as possible from PorousFlow (and also TensorMechanics, because i was interested in mechanical feedbacks).   As i remember, the non-Newtonian part wasn't difficult, but i had a moving front, of a non-Newtonian slurry invading another fluid, and that was numerically tricky.   Sorry, i can't help any further.",
                          "url": "https://github.com/idaholab/moose/discussions/23211#discussioncomment-4751468",
                          "updatedAt": "2023-01-22T21:19:33Z",
                          "publishedAt": "2023-01-22T21:19:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}