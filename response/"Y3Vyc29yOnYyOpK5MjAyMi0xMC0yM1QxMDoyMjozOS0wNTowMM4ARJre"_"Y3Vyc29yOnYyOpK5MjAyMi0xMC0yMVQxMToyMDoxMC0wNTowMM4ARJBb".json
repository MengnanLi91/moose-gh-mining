{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0xMC0yMVQxMToyMDoxMC0wNTowMM4ARJBb"
    },
    "edges": [
      {
        "node": {
          "title": "Restart on poly_grain_growth_2D_eldrforce.i",
          "author": {
            "login": "PengWei97"
          },
          "bodyText": "Dear MOOSE experts,\nRecently I am using the restart function of moose, based on the examples of power_law_creep_restart1.i and power_law_creep_restart2.i to modify the combined/poly_grain_growth_2D_eldrforce.i to get poly_grain_growth_2D_eldrforce_restart1.i and poly_grain_restart2.i. I hope the restart function can work on this example. But an error is displayed in GrainTracker, and the error displayed to the terminal is as follows, poly_grain_growth_2D_eldrforce_restart.log\nGrain Tracker Status:\n\u2026\ninished inside of GrainTracker\n===================================================================================\n=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES\n=   PID 64255 RUNNING AT xia-virtual-machine\n=   EXIT CODE: 139\n=   CLEANING UP REMAINING PROCESSES\n=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES\n===================================================================================\nYOUR APPLICATION TERMINATED WITH THE EXIT STRING: Segmentation fault (signal 11)\nThis typically refers to a problem with your application.\nPlease see the FAQ page for debugging suggestion\n\nAny suggestions or recommendations to fix these problems would be greatly appreciated.\nThank you\nWei Peng",
          "url": "https://github.com/idaholab/moose/discussions/17441",
          "updatedAt": "2022-10-23T15:21:31Z",
          "publishedAt": "2021-03-28T15:18:27Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCould you please run this in a debugger (gdb or lldb) ? Seg faults should be fairly easy to track and will give us more information about what is failing.\nMuch more information will be displayed if you do this with a debug build of moose (METHOD=dbg make to build)\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-554739",
                  "updatedAt": "2022-07-04T08:29:50Z",
                  "publishedAt": "2021-03-31T20:55:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Hello\nCould you please run this in a debugger (gdb or lldb) ? Seg faults should be fairly easy to track and will give us more information about what is failing.\nMuch more information will be displayed if you do this with a debug build of moose (METHOD=dbg make to build)\nGuillaume\n\nHi, Guillaume. Thank you for your help.\nI used the dbg debugger to run my poly_grain_growth_2D_eldrforce_restart2.i file, and its errors are shown as follows,\nFinished inside of GrainTracker\n\nAssertion'grain id <grain data.size()' failed\nRequested data for invalid grain index.\nat /home/xia/projects/moose/modules/phase field/build/header _symlinks/GrainDataTracker.h,line 46\nStack frames: 22\n\nThis error is displayed in the GrainDataTracker.h file. To be honest, I am not sure how to solve this error. Would you have any suggestions?",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-558359",
                          "updatedAt": "2022-07-04T08:29:49Z",
                          "publishedAt": "2021-04-01T15:37:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Thanks. Could you please provide the backtrace as well? For this, once the debug build has completed in the debugger, type bt\n@permcody should be able to help you then for grain growth problems",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-558440",
                          "updatedAt": "2022-07-04T08:29:50Z",
                          "publishedAt": "2021-04-01T15:44:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Thank you very much for your reply.\nAccording to your suggestion, once the debug build has completed in the debugger, type b MPI_Abort.\nThe information displayed is in the debug_informatin.log file.",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-559240",
                          "updatedAt": "2022-07-04T08:29:50Z",
                          "publishedAt": "2021-04-01T17:45:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "permcody"
                          },
                          "bodyText": "The restart issue may not be the underlying issue here. I seem to recall this particular input needed some other fixups. Are you able to run the simulation to completion without using the restart capability? If so, it may just be a question of going through the specific objects in this file and making sure any stateful data is properly declared as \"restartable\".",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-560247",
                          "updatedAt": "2022-07-05T13:57:13Z",
                          "publishedAt": "2021-04-01T21:23:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Thanks, @permcody\nYes, if the restart capability is not applicable, that is the Problem module is deleted from the input file, the simulation can be run. And, you said to ensure that any stateful data is properly declared as \"restartable\". I don't really understand how to do it.\nI think this problem should appear on the graintracker object, because it is time to use the restart capability to show that it is due to \"Assertion'grain id <grain data.size()' failed\"",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-561813",
                          "updatedAt": "2022-07-05T13:57:12Z",
                          "publishedAt": "2021-04-02T10:09:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "hi @permcody,\nI searched for the keyword \u2018restartable\u2019 on the moose website and found the following. declareRestartableData() is used to declare that the data is \u2018Restartable\u2019. Details as follow,\n\nThen I searched the variables declared as Restartable in GrainTracker.C and found that there are two variables. Respectively are\n\n./GrainTracker.C: _first_time(declareRestartableData(\"first_time\", true)),\n./GrainTracker.C: _max_curr_grain_id(declareRestartableData(\"max_curr_grain_id\", invalid_id)),\n\nAccording to your suggestion, should I look for the variable that cannot be restarted in GrainTracker.C, that is, the variable needed for restart, and finally declare it as \u2018Restartable\u2019.\nBest Regards,\nwei",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-598768",
                          "updatedAt": "2022-07-05T13:57:12Z",
                          "publishedAt": "2021-04-12T09:41:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is this solved?\nFrom the debug log it seems an assert is failing.\nAre both items compared in this assert restarted (grain_id and grain_data I think)? You may want to print them after the restart",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-705417",
                          "updatedAt": "2021-05-06T16:57:10Z",
                          "publishedAt": "2021-05-06T16:57:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Thanks, @GiudGiud\nYes, this problem has not been resolved. So I cannot use the restart function on this coupling example.\n\nFrom the debug log it seems an assert is failing.\n\nPlease forgive me for being a rookie for using the moose debugging environment, and I can only set these 5 breakpoints in the mian function. The following is the information I think is more important when debugging. For detailed information, please read restart02.md.\nHope the following information will help me to solve this problem,\nAssertion `grain_id < _grain_data.size()' failed\nRequested data for invalid grain index.\nat /home/xia/projects/moose/modules/phase_field/build/header_symlinks/GrainDataTracker.h, line 46\nStack frames: 22\n0: libMesh::print_trace(std::ostream&)\n1: GrainDataTracker<RankFourTensorTempl<double> >::getData(unsigned int) const\n2: ComputePolycrystalElasticityTensor::computeQpElasticityTensor()\n3: ComputeElasticityTensorBaseTempl<false>::computeQpProperties()\n4: Material::computeProperties()\n5: MaterialData::reinit(std::__debug::vector<std::shared_ptr<MaterialBase>, std::allocator<std::shared_ptr<MaterialBase> > > const&, bool)\n6: FEProblemBase::reinitMaterials(unsigned short, unsigned int, bool)\n7: ComputeElemAuxVarsThread<AuxKernelTempl<double> >::onElement(libMesh::Elem const*)\n8: ThreadedElementLoopBase<libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> >::operator()(libMesh::StoredRange<libMesh::MeshBase::const_element_iterator, libMesh::Elem const*> const&, bool)\n9: /home/xia/projects/moose/framework/libmoose-dbg.so.0(+0x3ab1c4e) [0x7ffff605dc4e]\n10: void AuxiliarySystem::computeElementalVarsHelper<AuxKernelTempl<double> >(MooseObjectWarehouse<AuxKernelTempl<double> > const&, std::__debug::vector<std::__debug::vector<MooseVariableFieldBase*, std::allocator<MooseVariableFieldBase*> >, std::allocator<std::__debug::vector<MooseVariableFieldBase*, std::allocator<MooseVariableFieldBase*> > > > const&, unsigned int)\n11: AuxiliarySystem::computeElementalVars(MooseEnumItem)\n12: AuxiliarySystem::compute(MooseEnumItem)\n13: FEProblemBase::computeAuxiliaryKernels(MooseEnumItem const&)\n14: FEProblemBase::execute(MooseEnumItem const&)\n15: FEProblemBase::initialSetup()\n16: Transient::init()\n17: MooseApp::executeExecutioner()\n18: MooseApp::run()\n19: /home/xia/projects/kunpeng/kunpeng-dbg(+0x1434b) [0x55555556834b]\n20: __libc_start_main\n21: /home/xia/projects/kunpeng/kunpeng-dbg(+0x13189) [0x555555567189]\n[0] /home/xia/projects/moose/modules/phase_field/build/header_symlinks/GrainDataTracker.h, line 46, compiled May  7 2021 at 17:40:01\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\n[unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1\n:\nsystem msg for write_line failure : Bad file descriptor\n---------------------------------------------------------------------------------\n| Time:           Fri May  7 20:02:09 2021                                        |\n| OS:             Linux                                                           |\n| HostName:       xia-virtual-machine                                             |\n| OS Release:     5.8.0-50-generic                                                |\n| OS Version:     #56~20.04.1-Ubuntu SMP Mon Apr 12 21:46:35 UTC 2021             |\n| Machine:        x86_64                                                          |\n| Username:       xia                                                             |\n| Configuration:  ../configure  '--enable-silent-rules'                           |\n|  '--enable-unique-id'                                                           |\n|  '--disable-warnings'                                                           |\n|  '--enable-glibcxx-debugging'                                                   |\n|  '--with-thread-model=openmp'                                                   |\n|  '--disable-maintainer-mode'                                                    |\n|  '--enable-petsc-hypre-required'                                                |\n|  '--enable-metaphysicl-required'                                                |\n|  '--prefix=/home/xia/miniconda3/envs/moose/libmesh'                             |\n|  '--with-vtk-lib=/home/xia/miniconda3/envs/moose/libmesh-vtk/lib'               |\n|  '--with-vtk-include=/home/xia/miniconda3/envs/moose/libmesh-vtk/include/vtk-6.3'|\n|  '--with-methods=opt oprof devel dbg'                                           |\n|  '--without-gdb-command'                                                        |\n|  'build_alias=x86_64-conda-linux-gnu'                                           |\n|  'host_alias=x86_64-conda-linux-gnu'                                            |\n|  'PETSC_DIR=/home/xia/miniconda3/envs/moose'                                    |\n|  'CC=mpicc'                                                                     |\n|  'CFLAGS=-march=nocona -mtune=haswell'                                          |\n|  'LDFLAGS=-Wl,-S'                                                               |\n|  'FC=mpifort'                                                                   |\n|  'F77=mpifort'                                                                  |\n|  'CXX=mpicxx'                                                                   |\n|  'CXXFLAGS=-march=nocona -mtune=haswell'                                        |\n|  'CPP=/home/xia/miniconda3/envs/moose/bin/x86_64-conda-linux-gnu-cpp'           |\n ---------------------------------------------------------------------------------\n ------------------------------------------------------------------------------------------------------------\n| kunpeng Performance: Alive time=868.405, Active time=0.000206                                              |\n ------------------------------------------------------------------------------------------------------------\n| Event                         nCalls     Total Time  Avg Time    Total Time  Avg Time    % of Active Time  |\n|                                          w/o Sub     w/o Sub     With Sub    With Sub    w/o S    With S   |\n|------------------------------------------------------------------------------------------------------------|\n|                                                                                                            |\n|                                                                                                            |\n| PolycrystalICTools                                                                                         |\n|   assignOpsToGrains()         1          0.0002      0.000206    0.0002      0.000206    100.00   100.00   |\n ------------------------------------------------------------------------------------------------------------\n| Totals:                       1          0.0002                                          100.00            |\n ------------------------------------------------------------------------------------------------------------\n\n--Type <RET> for more, q to quit, c to continue without paging--\n\n\nAre both items compared in this assert restarted (grain_id and grain_data I think)? You may want to print them after the restart\n\nPlease forgive me for not understanding the meaning of this sentence. Is it necessary to set these two data to \"restartable\"?\nAnd according to the suggestion from @permcody , making sure any stateful data is properly declared as \"restartable\". The terminal shows that the error occurred in /home/xia/projects/moose/modules/phase_field/build/header_symlinks/GrainDataTracker.h\ntemplate <typename T>\nconst T &\nGrainDataTracker<T>::getData(unsigned int grain_id) const\n{\n   mooseAssert(grain_id <_grain_data.size(), \"Requested data for invalid grain index.\");\n   return _grain_data[grain_id];\n}\nDo I need to declare grain_id and _grain_data as \"restartable\"?  Feel free to try to do this, but I don't know how to declare a variable to be \"restartable\".\nBest Regards,\nwei",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-709033",
                          "updatedAt": "2021-05-07T12:23:25Z",
                          "publishedAt": "2021-05-07T12:23:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "grain_id is the function parameter so it's not the issue. / it does not need to be declared restartable.\n_grain_data however is a good candidate to be restartable. It's initializaed by newGrainCreated in the initial simulation and I dont know but I suspect it's not called when restarting.\nCould you try that?\nSorry this is not my area of expertise in the code.",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-710005",
                          "updatedAt": "2021-05-07T15:34:09Z",
                          "publishedAt": "2021-05-07T15:34:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "Thanks very much for your enthusiastic answer, @GiudGiud\nI think what you said is correct. I performed the restart operation on grain_growth_2D_graintracker.i, and it proved that it was operational. However, the problematic poly_grain_growth_2D_eldrforce.i used a derived class of GrainDataTracker.h, namely GrainTrackerElasticity, and GrainDataTracker.h is a template class that inherits GrainDataTracker.\nTherefore, I also think that restart is interrupted somewhere in GrainDataTracker.h.\nFinally,I will try my best to solve this problem, and hope you can provide more opinions for moose beginners like me.\nThanks,\nwei",
                          "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-713305",
                          "updatedAt": "2022-09-06T23:49:05Z",
                          "publishedAt": "2021-05-08T14:08:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWith the merging of #22450 the situation should have improved here.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/17441#discussioncomment-3944290",
                  "updatedAt": "2022-10-23T15:21:32Z",
                  "publishedAt": "2022-10-23T15:21:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Phase field modeling",
          "author": {
            "login": "nishant1785"
          },
          "bodyText": "I am new to phase field modeling. I am running 3D version of this code & even after 1000 iterations it's not converging but in 2D it converges really quick. Parameters kappa and M were same for both cases (0.1 & 1).\nThank you\nTest the non-split parsed function free enery Cahn-Hilliard Bulk kernel\n# The free energy used here has the same functional form as the CHPoly kernel\n# If everything works, the output of this test should replicate the output\n# of marmot/tests/chpoly_test/CHPoly_test.i (exodiff match)\n#\n\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 16\n  ny = 16\n  xmax = 50\n  ymax = 50\n  elem_type = QUAD4\n[]\n\n[Variables]\n  [./cv]\n    order = THIRD\n    family = HERMITE\n  [../]\n[]\n\n[ICs]\n  [./InitialCondition]\n    type = CrossIC\n    x1 = 5.0\n    y1 = 5.0\n    x2 = 45.0\n    y2 = 45.0\n    variable = cv\n  [../]\n[]\n\n[Kernels]\n  [./ie_c]\n    type = TimeDerivative\n    variable = cv\n  [../]\n  [./CHSolid]\n    type = CahnHilliard\n    variable = cv\n    f_name = F\n    mob_name = M\n  [../]\n  [./CHInterface]\n    type = CHInterface\n    variable = cv\n    mob_name = M\n    kappa_name = kappa_c\n  [../]\n[]\n\n[Materials]\n  [./consts]\n    type = GenericConstantMaterial\n    prop_names  = 'M kappa_c'\n    prop_values = '1 0.1'\n  [../]\n  [./free_energy]\n    type = DerivativeParsedMaterial\n    f_name = F\n    args = 'cv'\n    function = '(1-cv)^2 * (1+cv)^2'\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  scheme = 'bdf2'\n\n  solve_type = 'NEWTON'\n  petsc_options_iname = '-pc_type -pc_hypre_type -ksp_gmres_restart'\n  petsc_options_value = 'hypre boomeramg 31'\n\n  l_max_its = 15\n  l_tol = 1.0e-4\n  nl_max_its = 10\n  nl_rel_tol = 1.0e-11\n\n  start_time = 0.0\n  num_steps = 2\n  dt = 0.7\n[]\n\n[Outputs]\n  [./out]\n    type = Exodus\n    refinements = 1\n  [../]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/22363",
          "updatedAt": "2022-11-15T18:09:16Z",
          "publishedAt": "2022-10-11T11:11:03Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nCan you try turning on automatic scaling on this?\nSetting convergence parameters manually is not always a good idea, it can accept solution too early or never accept them if too tight.\nAlso could you please attach the console log?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3850336",
                  "updatedAt": "2022-10-11T12:57:30Z",
                  "publishedAt": "2022-10-11T12:57:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "MOOSE automatically changes the strong threshold for boomeramg depending on the topological dimension of your problem. IIRC the threshold is 0.4(or 0.25?) in 2D and 0.7 in 3D. As a result you may need to adjust some other parameters of boomeramg for it to work better. There is a nice documentation on boomeramg here: https://mooseframework.inl.gov/application_development/hypre.html\nAnother issue is that boomeramg doesn't work if you use the split formulation of cahn-hilliard. But it seems like you are solving the original fourth order pde, so that probably isn't culprit here.",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3850389",
                          "updatedAt": "2022-10-11T13:03:58Z",
                          "publishedAt": "2022-10-11T13:03:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "You can also try a much stronger preconditioner, e.g. lu or ilu, just to see if it is a solver issue. If a direct solver works, then almost certainly you'll have to adjust the boomeramg parameters to make it stronger.",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3850404",
                          "updatedAt": "2022-10-11T13:05:45Z",
                          "publishedAt": "2022-10-11T13:05:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Any update on this? @nishant1785",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3937900",
                          "updatedAt": "2022-10-22T00:03:44Z",
                          "publishedAt": "2022-10-22T00:03:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "friedmud"
                  },
                  "bodyText": "An nl_rel_tol of 1-e11 is fairly strict!  I would loosen that up to 1e-8 or 1e-6.  Can you post what your convergence history looks like in 2D and 3D?",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3851204",
                  "updatedAt": "2022-10-11T14:28:58Z",
                  "publishedAt": "2022-10-11T14:28:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nishant1785"
                  },
                  "bodyText": "Hello all, @friedmud and @GiudGiud i did decrease both tolerances you said and i also did automatic rescaling but still after 1000 iterations it did not converge, @hugary1995 for  lu or ilu preconditioner moose is saying no such object exists.\nHere is input file and output file as well. Please take a look.\n\nphase-field1.zip",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3874929",
                  "updatedAt": "2022-10-14T01:50:33Z",
                  "publishedAt": "2022-10-14T01:50:33Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "To set a lu precondition you need to pass:\npetsc_options_iname = '-pc_type'\npetsc_options_ivalue = 'lu'",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3875342",
                          "updatedAt": "2022-10-14T03:19:24Z",
                          "publishedAt": "2022-10-14T03:19:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "nishant1785"
                          },
                          "bodyText": "thank you @GiudGiud  will do so and see.",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3875396",
                          "updatedAt": "2022-10-14T03:30:04Z",
                          "publishedAt": "2022-10-14T03:30:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "looks like it s the nonlinear iteration that does not converge well beyond 4e-4 ?",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3875626",
                          "updatedAt": "2022-10-14T04:27:09Z",
                          "publishedAt": "2022-10-14T04:27:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nishant1785"
                  },
                  "bodyText": "I forgot to mention it tok 2 days to reach 1000 iterations for 8 core processor PC. Does it take this long time ??",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3875005",
                  "updatedAt": "2022-10-14T02:11:13Z",
                  "publishedAt": "2022-10-14T02:11:12Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "No - it shouldn't take 1000 nonlinear iterations... ever.  If it's taking more than ~10 that's not great... more than ~50 means it's probably broken.",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3881052",
                          "updatedAt": "2022-10-14T17:18:18Z",
                          "publishedAt": "2022-10-14T17:18:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "Did you change your mesh between 2D and 3D?",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3881056",
                          "updatedAt": "2022-10-14T17:18:39Z",
                          "publishedAt": "2022-10-14T17:18:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nishant1785"
                  },
                  "bodyText": "Thanks for your response derek & Yeah i did change mesh\n\nNishant Gaikwad-7972836355\nM. Tech student\nMaterials Department\nDIAT, DRDO,Girinagar\n411025-Pune\n\u2026\nOn Fri, 14 Oct, 2022, 10:48 pm Derek Gaston, ***@***.***> wrote:\n Did you change your mesh between 2D and 3D?\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#22363 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/A3ER5T4OXFEF65WB7H3SJ73WDGIXRANCNFSM6AAAAAARCFPLRE>\n .\n You are receiving this because you authored the thread.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3881071",
                  "updatedAt": "2022-10-14T17:21:54Z",
                  "publishedAt": "2022-10-14T17:21:53Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "Did you change the mesh density?  Or just the dimension?",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3881094",
                          "updatedAt": "2022-10-14T17:24:58Z",
                          "publishedAt": "2022-10-14T17:24:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "What I mean is - if it was 20x20 in 2D... did you make it 20x20x20 in 3D?",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3881099",
                          "updatedAt": "2022-10-14T17:25:43Z",
                          "publishedAt": "2022-10-14T17:25:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nishant1785"
                  },
                  "bodyText": "That's what I asked initially in this discussion that I took 2D program &\nconverted it to 3D but it's not converging at all. I have also attached\ninput file.\n\nNishant Gaikwad-7972836355\nM. Tech student\nMaterials Department\nDIAT, DRDO,Girinagar\n411025-Pune\n\nOn Fri, 14 Oct, 2022, 10:51 pm Nishant Gaikwad, ***@***.***>\nwrote:\n\u2026\n Thanks for your response derek & Yeah i did change mesh\n\n Nishant Gaikwad-7972836355\n M. Tech student\n Materials Department\n DIAT, DRDO,Girinagar\n 411025-Pune\n\n On Fri, 14 Oct, 2022, 10:48 pm Derek Gaston, ***@***.***>\n wrote:\n\n> Did you change your mesh between 2D and 3D?\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <#22363 (reply in thread)>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/A3ER5T4OXFEF65WB7H3SJ73WDGIXRANCNFSM6AAAAAARCFPLRE>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3881090",
                  "updatedAt": "2022-10-14T17:24:14Z",
                  "publishedAt": "2022-10-14T17:24:13Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nishant1785"
                  },
                  "bodyText": "Sorry, Yeah yeah that's what i meant earlier I converted it to 3D that is\n20*20*20\n\nNishant Gaikwad-7972836355\nM. Tech student\nMaterials Department\nDIAT, DRDO,Girinagar\n411025-Pune\n\u2026\nOn Fri, 14 Oct, 2022, 10:55 pm Derek Gaston, ***@***.***> wrote:\n What I mean is - if it was 20x20 in 2D... did you make it 20x20x20 in 3D?\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#22363 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/A3ER5T2GMSTBH2TNJKCICSDWDGJSFANCNFSM6AAAAAARCFPLRE>\n .\n You are receiving this because you authored the thread.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3881118",
                  "updatedAt": "2022-10-14T17:30:32Z",
                  "publishedAt": "2022-10-14T17:30:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nishant1785"
                  },
                  "bodyText": "No update sir, it's still not converging.\n\nNishant Gaikwad-7972836355\nM. Tech student\nMaterials Department\nDIAT, DRDO,Girinagar\n411025-Pune\n\u2026\nOn Sat, 22 Oct, 2022, 5:33 am Guillaume Giudicelli, < ***@***.***> wrote:\n Any update on this? @nishant1785 <https://github.com/nishant1785>\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#22363 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/A3ER5T5FXVSAK4VTZWHMSJDWEMVOTANCNFSM6AAAAAARCFPLRE>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3937918",
                  "updatedAt": "2022-10-22T00:13:51Z",
                  "publishedAt": "2022-10-22T00:13:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did you try what @hugary1995 suggested?",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3937921",
                          "updatedAt": "2022-10-22T00:17:41Z",
                          "publishedAt": "2022-10-22T00:17:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nishant1785"
                  },
                  "bodyText": "I did try stronger preconditioner but it didn't converge but I didn't try\nboomeramg options. I will try that.\n\nNishant Gaikwad-7972836355\nM. Tech student\nMaterials Department\nDIAT, DRDO,Girinagar\n411025-Pune\n\u2026\nOn Sat, 22 Oct, 2022, 5:47 am Guillaume Giudicelli, < ***@***.***> wrote:\n did you try what @hugary1995 <https://github.com/hugary1995> suggested?\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#22363 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/A3ER5T4WXQX2CRUCPXKXX4TWEMXDBANCNFSM6AAAAAARCFPLRE>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3937935",
                  "updatedAt": "2022-10-22T00:25:56Z",
                  "publishedAt": "2022-10-22T00:25:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok you should try svd preconditioning with the svd monitor. That will let us know if the problem is singular or not\nThis is very expensive so you ll need to recuse the number of dofs to a few thousands at most",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3941161",
                          "updatedAt": "2022-10-22T19:05:46Z",
                          "publishedAt": "2022-10-22T19:05:46Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "nishant1785"
                  },
                  "bodyText": "But I am not getting this , openFoam software does this problem in 15\nminutes but for MOOSE why is it so hard??\n\nNishant Gaikwad-7972836355\nM. Tech student\nMaterials Department\nDIAT, DRDO,Girinagar\n411025-Pune\n\u2026\nOn Sun, 23 Oct, 2022, 12:35 am Guillaume Giudicelli, < ***@***.***> wrote:\n Ok you should try svd preconditioning with the svd monitor. That will let\n us know if the problem is singular or not\n\n This is very expensive so you ll need to recuse the number of dofs to a\n few thousands at most\n\n \u2014\n Reply to this email directly, view it on GitHub\n <#22363 (reply in thread)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/A3ER5TYSR3TQRE3VN54RLV3WEQ3JLANCNFSM6AAAAAARCFPLRE>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
                  "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3942339",
                  "updatedAt": "2022-10-23T04:18:22Z",
                  "publishedAt": "2022-10-23T04:18:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The problem setup likely has issues.\nmaybe @dschwen can comment on your inputs?",
                          "url": "https://github.com/idaholab/moose/discussions/22363#discussioncomment-3942412",
                          "updatedAt": "2022-10-23T05:09:10Z",
                          "publishedAt": "2022-10-23T05:09:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adding lots of functions",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "I'd like to write a class that creates lots (thousands?) of PiecewiseLinear Functions based on some x-y data. What's a good way to create all those functions? General User Object? Action? Is there an object in MOOSE that does something similar?",
          "url": "https://github.com/idaholab/moose/discussions/22351",
          "updatedAt": "2022-10-23T02:32:33Z",
          "publishedAt": "2022-10-10T19:50:35Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAn Action is likely the way to go.\nThere are numerous examples of creating functions in actions.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22351#discussioncomment-3842451",
                  "updatedAt": "2022-10-10T20:05:33Z",
                  "publishedAt": "2022-10-10T20:05:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "For reading the data for creating the functions, you may consider the DelimitedFileReader btw",
                          "url": "https://github.com/idaholab/moose/discussions/22351#discussioncomment-3937891",
                          "updatedAt": "2022-10-22T00:01:12Z",
                          "publishedAt": "2022-10-22T00:01:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "I did use an action but ended up rolling my own file  reader. I used MooseUtils to parse the lines because DelimitedFileReader (from what I can tell) only handles floats and the function names are in the file as strings.",
                          "url": "https://github.com/idaholab/moose/discussions/22351#discussioncomment-3942147",
                          "updatedAt": "2022-10-23T02:32:33Z",
                          "publishedAt": "2022-10-23T02:32:32Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "friedmud"
                  },
                  "bodyText": "Based on your description: It sounds like you may also want to look into the PiecewiseMultilinear Function: https://mooseframework.inl.gov/moose/source/functions/PiecewiseMultilinear.html",
                  "url": "https://github.com/idaholab/moose/discussions/22351#discussioncomment-3843248",
                  "updatedAt": "2022-10-10T22:34:17Z",
                  "publishedAt": "2022-10-10T22:34:16Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "For generating the data files you also want to look at the CSV combiner: https://mooseframework.inl.gov/python/combine_csv.html",
                          "url": "https://github.com/idaholab/moose/discussions/22351#discussioncomment-3843400",
                          "updatedAt": "2022-10-10T23:04:29Z",
                          "publishedAt": "2022-10-10T23:04:28Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Interface kernel with coupled variable",
          "author": {
            "login": "Chaoyue-Liu"
          },
          "bodyText": "I am building a customized interface kernel with coupled variable involved, but I encountered problem that the interface kernel cannot be calculated. Could you help me to check where I did wrong in the code? Thank you!\nThe model is like the following:\n\nMy interface kernels are the followings, BV is for equation 1), BVFLUX is for equation 2).\nBV:\n#include \"BV.h\"\n\nregisterMooseObject(\"batteryApp\", BV);\n\nInputParameters\nBV::validParams()\n{\n  InputParameters params = ADInterfaceKernel::validParams();\n  params.addParam<MaterialPropertyName>(\"i0\",\"name of i0\");\n  params.addParam<MaterialPropertyName>(\"Eeq\",\"name of Eeq\");\n  params.addCoupledVar(\"cl\",\"solid concentration\");\n  params.addClassDescription(\"Implements a reaction to establish ReactionRate=k_f*u-k_b*v \"\n                             \"at interface.\");\n  return params;\n}\n\nBV::BV(const InputParameters & parameters)\n  : ADInterfaceKernel(parameters),\n  _lstandard(getMaterialProperty<Real>(\"i0\")),\n  _Eeq(getMaterialProperty<Real>(\"Eeq\")),\n  _cl(coupledValue(\"cl\"))\n{\n}\n\nADReal\nBV::computeQpResidual(Moose::DGResidualType type)\n{\n  ADReal r = 0;\n  switch (type)\n  {\n    \n    case Moose::Element:\n      r= -_lstandard[_qp] * 96485.33/8.314/293.15* (_u[_qp]-_neighbor_value[_qp]-_Eeq[_qp]) *_test[_i][_qp] * _cl[_qp];\n      break;\n\n    \n    case Moose::Neighbor:\n      r = _lstandard[_qp] * 96485.33/8.314/293.15* (_u[_qp]-_neighbor_value[_qp]-_Eeq[_qp])*_test_neighbor[_i][_qp] * _cl[_qp];\n      break;\n  }\n  return r;\n}\n\nBVFLUX:\n#include \"BVFLUX.h\"\n\nregisterMooseObject(\"batteryApp\", BVFLUX);\n\nInputParameters\nBVFLUX::validParams()\n{\n  InputParameters params = ADInterfaceKernel::validParams();\n  params.addCoupledVar(\"phis\",\"solid potential\");\n  params.addCoupledVar(\"phil\",\"liquid potential\");\n  params.addParam<MaterialPropertyName>(\"i0\",\"name of i0\");\n  params.addParam<MaterialPropertyName>(\"Eeq\",\"name of Eeq\");\n  params.addClassDescription(\"Implements a reaction to establish ReactionRate=k_f*u-k_b*v \"\n                             \"at interface.\");\n  return params;\n}\n\nBVFLUX::BVFLUX(const InputParameters & parameters)\n  : ADInterfaceKernel(parameters),\n  _phis(coupledValue(\"phis\")),\n  _phil(coupledValue(\"phil\")),\n  _lstandard(getMaterialProperty<Real>(\"i0\")),\n  _Eeq(getMaterialProperty<Real>(\"Eeq\"))\n{\n}\n\nADReal\nBVFLUX::computeQpResidual(Moose::DGResidualType type)\n{\n  ADReal r = 0;\n  switch (type)\n  {\n    case Moose::Element:\n      r=-_lstandard[_qp] * 1/8.314/293.15* (_phis[_qp]-_phil[_qp]-_Eeq[_qp])*_test[_i][_qp]*_u[_qp];\n      break;\n  }\n  return r;\n}\n\nMy input file:\n[Mesh]\n    type = FileMesh\n    file = mesh_realsize.inp\n[]\n\n[Variables]\n    [phis]\n        block='solid_TRI3'\n    []\n    [phil]\n        block='liquid_TRI3'\n    []\n    [cl]\n        block='liquid_TRI3'\n    []\n[]\n\n[Materials]\n    [D_solid]\n        type=GenericConstantMaterial\n        prop_names='sigmas sigmal Dl Eeq i0'\n        prop_values='1 1 1e-10 1 0.1'\n    []\n[]\n\n[Kernels]\n\n    [ohm_s]\n        block='solid_TRI3'\n        type=MatDiffusion\n        variable=phis\n        diffusivity='sigmas'\n    []\n\n    [ohm_l]\n        block='liquid_TRI3'\n        type=MatDiffusion\n        variable=phil\n        diffusivity='sigmal'\n    []\n\n    [diff_l]\n        block='liquid_TRI3'\n        type=MatDiffusion\n        variable=cl \n        diffusivity='Dl'\n    []\n    [time_l]\n        block='liquid_TRI3'\n        type=TimeDerivative\n        variable=cl \n    []\n[]\n\n[ICs]\n    [phis_ic]\n        type=ConstantIC\n        variable=phis\n        value=0\n        block='solid_TRI3'\n    []\n    [phil_ic]\n        type=ConstantIC\n        variable=phil\n        value=0\n        block='liquid_TRI3'\n    []\n    [cl_ic]\n        type=ConstantIC\n        variable=cl \n        value=1000\n        block='liquid_TRI3'\n    []\n[]\n\n[BCs]\n    [phis_neumann]\n        boundary='bottom'\n        type=ADNeumannBC\n        variable=phis\n        value=-1\n    []\n\n    [phil_dirichlet]\n        boundary='top'\n        type=ADDirichletBC\n        variable=phil\n        value=0\n    []\n\n    [cl_dirichlet]\n        boundary='top'\n        type=ADDirichletBC\n        variable=cl\n        value=1000\n    []\n[]\n\n[InterfaceKernels]\n    [BV]\n        type=BV \n        variable=phis\n        neighbor_var=phil\n        cl=cl\n        i0='i0'\n        Eeq='Eeq'\n        boundary='interface'\n    []\n    [BVFLUX]\n        type=BVFLUX\n        variable=cl \n        neighbor_var=phis //here I just put phis as a place holder because InterfaceKernel demand a neighbor_var.\n        phis=phis\n        phil=phil\n        i0='i0'\n        Eeq='Eeq'\n        boundary='interface'\n    []\n[]\n\n\n[Executioner]\n    type=Transient\n    num_steps=10\n    dt=10\n    automatic_scaling=true\n    solve_type=NEWTON\n[]\n\n[Outputs]\n    exodus=true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/22366",
          "updatedAt": "2022-10-22T18:56:15Z",
          "publishedAt": "2022-10-11T13:03:21Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhat do you mean by cannot be calculated? Did you get an error?\nOne thing to be careful about when using interface kernels is that the sideset, here 'interface' is consistently oriented\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3850889",
                  "updatedAt": "2022-10-11T13:57:29Z",
                  "publishedAt": "2022-10-11T13:57:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Chaoyue-Liu"
                          },
                          "bodyText": "Hello,\nThe model cannot converge at the first step. I got the log like this and I have to kill the calculation:",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3852133",
                          "updatedAt": "2022-10-11T15:51:20Z",
                          "publishedAt": "2022-10-11T15:51:20Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "A known issue: if the variable isn't defined on both sides of the interface, the interface kernel won't be calculated. That happens silently so your simulation could still run without warning or error.\nSo... Is your solid concentration block restricted?",
                  "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3850894",
                  "updatedAt": "2022-10-11T13:58:05Z",
                  "publishedAt": "2022-10-11T13:58:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Hmm, I see that you defined a dummy neighbor var. Idk what's going on then...",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3850937",
                          "updatedAt": "2022-10-11T14:01:15Z",
                          "publishedAt": "2022-10-11T14:01:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Chaoyue-Liu"
                          },
                          "bodyText": "Yes, phis in BVFLUX is just place holder, it's not actually used in the residual calculation.",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3852166",
                          "updatedAt": "2022-10-11T15:53:29Z",
                          "publishedAt": "2022-10-11T15:53:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "You phil has a Dirichlet BC so that is okay. The phis only has a Neumann BC at the bottom, so if the butler-volmer condition isn't active, there will indeed be a null space, hence the convergence log you saw (i.e. linear solve stagnates).\nCheck if removing the BV interface changes the residual and/or the convergence log. If nothing changes, then we can look into fixing the BV kernel.",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3852721",
                          "updatedAt": "2022-10-11T16:53:07Z",
                          "publishedAt": "2022-10-11T16:53:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Alternatively, reduce the problem size and run with -pc_type svd -pc_svd_monitor to see if any of the singular values is close to zero.",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3852765",
                          "updatedAt": "2022-10-11T16:58:58Z",
                          "publishedAt": "2022-10-11T16:58:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Chaoyue-Liu"
                          },
                          "bodyText": "Thank you hugary. I did a test which doesn't involve equation 2) (BVFLUX kernel), only equation 1) (BV kernel) is active for bridging phis and phil. The cl domain is changed to covering both liquid_TRI3 and solid_TRI3, with dirichlet on top and neumann on bottom, just to provide cl value to equation 1). The calculation converges fine and the result is correct. Once I involve equation 2) the calculation is not able to proceed. I'm consistently comparing the result with COMSOL with the same equation setup. In COMSOL it's able to converge with equation 2) so I guess the equations are fine. I hope this test replies your first question.\nMy geometry size is 50\u00b5m, I think it's small enough already? And how do I use -pc_type svd -pc_svd_monitor exactly? I'm not expert on this sorry.",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3857937",
                          "updatedAt": "2022-10-12T10:05:21Z",
                          "publishedAt": "2022-10-12T08:24:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "ok, so it seems like the mass balance is affecting the convergence here. But that shouldn't happen as there is a time derivative in cl. Feel free to take a look at what I did here https://github.com/hugary1995/eel/blob/main/test/tests/chemical-electrical/charging.i and work your way back.\n-pc_type svd -pc_svd_monitor are petsc options, you either pass it as cli args, or specify them in the input file as\n[Executioner]\n  petsc_options = '-pc_svd_monitor'\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'svd'\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3870051",
                          "updatedAt": "2022-10-13T13:20:34Z",
                          "publishedAt": "2022-10-13T13:20:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Chaoyue-Liu"
                          },
                          "bodyText": "Thank you hugary! I'll look into it.",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3870826",
                          "updatedAt": "2022-10-13T14:35:39Z",
                          "publishedAt": "2022-10-13T14:35:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Any update on this?",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3937896",
                          "updatedAt": "2022-10-22T00:02:24Z",
                          "publishedAt": "2022-10-22T00:02:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Chaoyue-Liu"
                          },
                          "bodyText": "Hi Guillaume, the problem is solved. It's because I used CoupledValue instead of CoupledNeighborValue for the variable in neighbor element. Also the relative tolerance need ajustment. Now the kernel works fine. Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3939173",
                          "updatedAt": "2022-10-22T09:16:28Z",
                          "publishedAt": "2022-10-22T09:16:27Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Chaoyue-Liu"
                  },
                  "bodyText": "For the convenience of discussion, here is a repository I created with the files I use for your reference:\nhttps://github.com/Chaoyue-Liu/battery.git",
                  "url": "https://github.com/idaholab/moose/discussions/22366#discussioncomment-3858554",
                  "updatedAt": "2022-10-12T09:17:00Z",
                  "publishedAt": "2022-10-12T09:16:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to output the thermal stress?",
          "author": {
            "login": "RECHOA"
          },
          "bodyText": "Hi all,\nIs there any quantity could represent the thermal stress (stress induced by the temperature changes and  the inhomogeneous distribution of temperature ) and output it ?\nThanks in advance.",
          "url": "https://github.com/idaholab/moose/discussions/22404",
          "updatedAt": "2022-11-15T18:07:30Z",
          "publishedAt": "2022-10-14T15:52:46Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "ngrilli"
                  },
                  "bodyText": "@RECHOA  there is an example of adding thermal eigenstrains and visualizing them using AuxVariables here:\nhttps://github.com/idaholab/moose/blob/next/modules/tensor_mechanics/test/tests/thermal_expansion/constant_expansion_stress_free_temp.i\nNicol\u00f2",
                  "url": "https://github.com/idaholab/moose/discussions/22404#discussioncomment-3897202",
                  "updatedAt": "2022-10-17T14:35:05Z",
                  "publishedAt": "2022-10-17T14:35:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "RECHOA"
                          },
                          "bodyText": "Sorry I'm concerned about the thermal stress rather than the thermal strian. Maybe you means using the \u03c3=E\u00b7\u03b5 to obtain it, where \u03c3 is stress, E is the Young's modulus, \u03b5 is the thermal strain.\nBut it only reflect the thermal stress induced by the temperature changes, without the inhomogeneous distribution of temperature.",
                          "url": "https://github.com/idaholab/moose/discussions/22404#discussioncomment-3926072",
                          "updatedAt": "2022-10-20T15:41:48Z",
                          "publishedAt": "2022-10-20T15:41:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "@RECHOA could you write down the expression for the thermal stress you are referring to?",
                          "url": "https://github.com/idaholab/moose/discussions/22404#discussioncomment-3936796",
                          "updatedAt": "2022-10-21T19:52:50Z",
                          "publishedAt": "2022-10-21T19:52:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "RECHOA"
                          },
                          "bodyText": "I'm struggling to find such a expression for the thermal stress, so i turned to the experienced researchers here to help me find a expression or  a quantity of stress could reflect the temperature influence.",
                          "url": "https://github.com/idaholab/moose/discussions/22404#discussioncomment-3938440",
                          "updatedAt": "2022-10-22T04:38:16Z",
                          "publishedAt": "2022-10-22T04:38:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Which kernel should be used?",
          "author": {
            "login": "wowodejiajia"
          },
          "bodyText": "Dear MOOSE experts,\n\nL(u,a,b) and F(u) are defined in the [Materials] respectively. u is a variable. Which kernel should be used?\nThank you.",
          "url": "https://github.com/idaholab/moose/discussions/22459",
          "updatedAt": "2022-10-22T04:11:01Z",
          "publishedAt": "2022-10-21T04:18:05Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIf F is a Material then we dont define its time derivative automatically.\nI think you will want to rewrite F (dF/dt really) within the kernel. This will avoid having to deal with interactions between the time integrator and a time_derivative_material_property.\nEDIT: I saw dt not du\nYou can load L using getMaterialProperty in your custom kernel\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22459#discussioncomment-3930155",
                  "updatedAt": "2022-10-21T12:49:35Z",
                  "publishedAt": "2022-10-21T04:30:04Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "wowodejiajia"
                          },
                          "bodyText": "If I use AllenCahn [kernel]\uff0cI think the form is the same. Can I do this\n[kern_1]\n  type = AllenCahn\n  variable = u\n  f_name = F\n  mob_name = L\n  args = 'a b'\n[]\n\nThank you.",
                          "url": "https://github.com/idaholab/moose/discussions/22459#discussioncomment-3930238",
                          "updatedAt": "2022-10-21T12:51:18Z",
                          "publishedAt": "2022-10-21T04:57:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the form looks the same indeed. I edited the syntax directly in your post",
                          "url": "https://github.com/idaholab/moose/discussions/22459#discussioncomment-3933434",
                          "updatedAt": "2022-10-21T12:51:29Z",
                          "publishedAt": "2022-10-21T12:51:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wowodejiajia"
                          },
                          "bodyText": "OK, I see. Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/22459#discussioncomment-3938390",
                          "updatedAt": "2022-10-22T04:10:42Z",
                          "publishedAt": "2022-10-22T04:10:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "errow in setting thermal-conductivity coupled temperature",
          "author": {
            "login": "DYLDYLDYL"
          },
          "bodyText": "hi,\nI want to set thermal-conductivity coupled temperature.\n[Materials]\n  [thermal]\n    type = HeatConductionMaterial\n    temp = T\n    thermal_conductivity_temperature_function = 0.1*T\n  []\n[]\n\nIt shows: The following error occurred in the object \"MOOSE Problem\", of type \"FEProblem\".Unable to find function 0.1*T\nWhen I set a parsed function K in [functin], and then thermal_conductivity_temperature_function = k,  it will run.\nBut parsed function can only couple xyzt.\nThanks in advance for your help!",
          "url": "https://github.com/idaholab/moose/discussions/22451",
          "updatedAt": "2022-10-22T00:06:54Z",
          "publishedAt": "2022-10-20T06:18:37Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n0.1 * T is not a \"Function\" in MOOSE because it depends on a variable, and it's not in the format MOOSE expects for two reasons:\n\n\nIn general only the ParsedXXX objects will accept this sort of syntax (except with constants, constant parsing is widely supported)\n\n\nThis parameter likely expects a 1D function that maps temperature to thermal conductivity. You can easily reproduce 0.1 T with a real Function by specifying a PiecewiseLinear function for example.\n\n\nNote: this parameter abuses Functions in that it takes 'x' to be temperature. So instead of having a spatial dependence, they have a temperature dependence. The ParsedFunction you could pass here would be: 0.1 * x\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22451#discussioncomment-3924411",
                  "updatedAt": "2022-10-20T12:48:43Z",
                  "publishedAt": "2022-10-20T12:48:42Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "DYLDYLDYL"
                          },
                          "bodyText": "Thanks a lot \uff01Your answer solves my problem perfectly \uff01\nI would like to ask a further question.\nI want to get 2Dor3D function that maps temperature to thermal conductivity,   is PiecewiseLinear function up to the work\uff1f",
                          "url": "https://github.com/idaholab/moose/discussions/22451#discussioncomment-3929626",
                          "updatedAt": "2022-10-21T01:51:33Z",
                          "publishedAt": "2022-10-21T01:51:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "we dont support that.\nUsing T as the 'x' coordinate is kind of a hack.\nYou definitely could implement something like using P and T as x and y, but it would likely be new code",
                          "url": "https://github.com/idaholab/moose/discussions/22451#discussioncomment-3929828",
                          "updatedAt": "2022-10-21T02:46:06Z",
                          "publishedAt": "2022-10-21T02:45:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "DYLDYLDYL"
                          },
                          "bodyText": "Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/22451#discussioncomment-3930926",
                          "updatedAt": "2022-10-21T07:18:37Z",
                          "publishedAt": "2022-10-21T07:18:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "DYLDYLDYL"
                          },
                          "bodyText": "Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/22451#discussioncomment-3930930",
                          "updatedAt": "2022-10-21T07:19:12Z",
                          "publishedAt": "2022-10-21T07:19:12Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Hex VTK Parallel Bug",
          "author": {
            "login": "makeclean"
          },
          "bodyText": "Hi All\nI think there is a bug from libmesh, when running an hex problem in parallel there are oddies along the domain processor boundaries, e.g.\n\nAm I doing something odd, or is this a known problem? Key thing, this is using VTK out\nThanks\nAndy",
          "url": "https://github.com/idaholab/moose/discussions/22273",
          "updatedAt": "2022-10-21T23:59:51Z",
          "publishedAt": "2022-09-30T12:34:46Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@roystgnr has the VTK output been set up for IGA?",
                  "url": "https://github.com/idaholab/moose/discussions/22273#discussioncomment-3772912",
                  "updatedAt": "2022-09-30T14:24:23Z",
                  "publishedAt": "2022-09-30T14:24:22Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "makeclean"
                          },
                          "bodyText": "Sorry I originally tagged this as an IGA mesh, it isn't its a hex mesh",
                          "url": "https://github.com/idaholab/moose/discussions/22273#discussioncomment-3773289",
                          "updatedAt": "2022-09-30T15:14:23Z",
                          "publishedAt": "2022-09-30T15:14:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Is the exodus output normal btw?\nAnd what kind of Hex is this?",
                          "url": "https://github.com/idaholab/moose/discussions/22273#discussioncomment-3773541",
                          "updatedAt": "2022-09-30T15:46:04Z",
                          "publishedAt": "2022-09-30T15:46:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "It's been set up; not sure how reliable it is.  CoreForm wrote the VTK+IGA code, we got it all merged in libMesh and MOOSE including VTK-based XML diff tests in #20783 ... and then we started seeing diffs on older build boxes upgrading to VTK 9.0.  I thought VTK 9.1 was safe, but digging back into it I don't see any response from @loganharbour to my question in #21449 and I'm not liking the strikethrough in the comment in #21450 ...",
                          "url": "https://github.com/idaholab/moose/discussions/22273#discussioncomment-3788274",
                          "updatedAt": "2022-10-03T14:59:39Z",
                          "publishedAt": "2022-10-03T14:59:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "friedmud"
                  },
                  "bodyText": "Hey Andy ( @makeclean ), we need some more info here.  Is this only with VTK - or does this happen with Exodus output as well?  Are you using a pre-split mesh?  Can you post the mesh file somewhere?",
                  "url": "https://github.com/idaholab/moose/discussions/22273#discussioncomment-3789875",
                  "updatedAt": "2022-10-03T18:35:56Z",
                  "publishedAt": "2022-10-03T18:35:55Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "makeclean"
                          },
                          "bodyText": "I've not tried with exodus, I'll try and report back. It is not pre-split, I can post inputs & mesh no problem.",
                          "url": "https://github.com/idaholab/moose/discussions/22273#discussioncomment-3795157",
                          "updatedAt": "2022-10-04T11:14:44Z",
                          "publishedAt": "2022-10-04T11:12:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "makeclean"
                          },
                          "bodyText": "Exodus is fine, see below;\n\nLHS is the temp variable with errors, middle is the partition map and RHS is the exodus file.\nThe meshes are too large to trivially attach - https://file.io/toEiznczSbNI",
                          "url": "https://github.com/idaholab/moose/discussions/22273#discussioncomment-3799466",
                          "updatedAt": "2022-10-04T20:35:59Z",
                          "publishedAt": "2022-10-04T20:35:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Any update on this?\n@friedmud did you get the chance to check out the mesh?",
                  "url": "https://github.com/idaholab/moose/discussions/22273#discussioncomment-3937887",
                  "updatedAt": "2022-10-21T23:59:52Z",
                  "publishedAt": "2022-10-21T23:59:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Updating variable at the end of the time step",
          "author": {
            "login": "Bala-1005"
          },
          "bodyText": "Hello everyone,\nIs there a way to manually update a variable say, elastic strain to a value of zero at a particular region based on the order parameter at the end of every timestep?\nThanks,\nBala",
          "url": "https://github.com/idaholab/moose/discussions/16997",
          "updatedAt": "2022-10-21T23:56:04Z",
          "publishedAt": "2021-02-15T14:23:39Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI think a ConstantAux(Kernel) does most of what you're looking for\n(https://mooseframework.inl.gov/source/auxkernels/ConstantAux.html)\nYou mean the order parameter of the variable? You'll have to modify the AuxKernel for that.\nYou can get the order with .order() from a variable, as shown here for a base class that your variable likely inherits from (https://mooseframework.inl.gov/docs/doxygen/moose/classMooseVariableBase.html)\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/16997#discussioncomment-370680",
                  "updatedAt": "2022-10-21T23:53:13Z",
                  "publishedAt": "2021-02-15T14:30:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Bala-1005"
                          },
                          "bodyText": "Thank you @GiudGiud . I will try out the options.\nEssentially, I need to bring elastic strain to zero(at the end of each timestep) at parts of the domain where the phase field variable is 0 in order to compensate for the lack of stiffness in those regions.\nThanks,\nBala",
                          "url": "https://github.com/idaholab/moose/discussions/16997#discussioncomment-370705",
                          "updatedAt": "2022-10-21T23:55:19Z",
                          "publishedAt": "2021-02-15T14:38:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Are your displacement variables nonlinear? If so this won't work.\nYou'll have to modify the Strain/Stress calculator to achieve that.",
                          "url": "https://github.com/idaholab/moose/discussions/16997#discussioncomment-370788",
                          "updatedAt": "2022-10-21T23:55:19Z",
                          "publishedAt": "2021-02-15T15:05:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "Let me clarify. There are two types of variables in MOOSE, Variables and AuxVariables. The Variables are essentially solutions to your system, and AuxVariables, according to their names, are auxilliary, and you can set their values manually as you wish. You cannot run AuxKernels on Variables.\nI guess you have displacement variables in your input files, and they are Variables instead of AuxVariables. In your input file, you might have a strain calculator that calculates a material property called \"elastic_strain\" or \"mechanical_strain\" based on the current displacements. What you want to do here, is to add a condition in your strain calculator such that, if the value of your coupled order parameter is above (or below) certain value, you set the _elastic_strain[_qp] = 0. There might be existing classes for this particular purpose.",
                          "url": "https://github.com/idaholab/moose/discussions/16997#discussioncomment-370825",
                          "updatedAt": "2022-10-21T23:55:19Z",
                          "publishedAt": "2021-02-15T15:21:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Bala-1005"
                          },
                          "bodyText": "Thank you for the explanation @hugary1995 . This is exactly what I want. Yes, my displacements are variables.",
                          "url": "https://github.com/idaholab/moose/discussions/16997#discussioncomment-370882",
                          "updatedAt": "2022-10-21T23:55:20Z",
                          "publishedAt": "2021-02-15T15:38:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Bala-1005"
                          },
                          "bodyText": "I have been trying to write an if condition such that the body of the if condition executes at the end of timestep. How do I access exec_timestep_end? Or is there any other way to make a custom user material access the end of timestep?\nThanks,\nBala",
                          "url": "https://github.com/idaholab/moose/discussions/16997#discussioncomment-374529",
                          "updatedAt": "2022-10-21T23:55:20Z",
                          "publishedAt": "2021-02-16T18:11:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "sorry we missed this.\nYou can get the current execute on flag from the fe_problem with the getCurrentExecuteOnFlag routine",
                          "url": "https://github.com/idaholab/moose/discussions/16997#discussioncomment-3937867",
                          "updatedAt": "2022-10-21T23:56:01Z",
                          "publishedAt": "2022-10-21T23:56:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "--recover failing to find checkpoint files/headers",
          "author": {
            "login": "Edward-Eth"
          },
          "bodyText": "Hi, I am trying to test MOOSE's --recover feature, using the following input file:\nThermal_Linear.i\n[Mesh]\n  [Block]\n    type = GeneratedMeshGenerator\n    dim = 3\n    xmax = 10\n    ymax = 10\n    zmax = 10\n    nx = 10\n    ny = 10\n    nz = 10\n  []\n[]\n\n[Variables]\n  [temperature]\n    initial_condition = 1000\n  []\n[]\n\n[Kernels]\n  [HeatConduction]\n    type = ADHeatConduction\n    variable = temperature\n  []\n  [HeatConductionTimeDerivative]\n    type = ADHeatConductionTimeDerivative\n    variable = temperature\n  []\n[]\n\n[BCs]\n  [Rad]\n    type = ADFunctionRadiativeBC\n    variable = temperature\n    boundary = 'front back top bottom left right'\n    Tinfinity = 300.0\n    stefan_boltzmann_constant = 5.67037e-11\n    emissivity_function = 0.6\n  []\n  [Conv]\n    type = ADConvectiveHeatFluxBC\n    variable = temperature\n    boundary = 'front back top bottom left right'\n    T_infinity = 300.0\n    heat_transfer_coefficient = 0.02\n  []\n[]\n\n[Materials]\n  [Properties]\n    type = ADGenericConstantMaterial\n    prop_names =  'density thermal_conductivity specific_heat'\n    prop_values = '0.01    10                   100'\n  []\n[]\n\n# Preconditioner\n[Preconditioning]\n  [SMP]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n\n  start_time = 0.0\n  \n  dt = 2.5\n\n  solve_type = 'NEWTON'\n  automatic_scaling = true\n\n  residual_and_jacobian_together = True\n  reuse_preconditioner = True\n\n  line_search = default\n  nl_abs_tol = 1e-10\n  nl_rel_tol = 2e-08\n  l_max_its = 200\n[]\n\n[Outputs]\n  [Checkpoint]\n    type = Checkpoint\n    num_files = 3\n  []\n[]\n\n\n\nwhich I run with the following:\n./my_app -i Thermal_Linear.i\n\nFrom the top level of the moose app directory.\nThis creates checkpoint files as expected in \"Thermal_Linear_Checkpoint_cp\", with contents as shown in the image.\n\nHowever, after cancelling the simulation at a random point to simulate a crash/error of some kind (by simply hitting ctrl+c), running this command:\n./my_app -i Thermal_Linear.i --recover\n\nLeads to the following error:\n*** ERROR ***\nERROR: Neither one of the following files can be located:\n        '_mesh.cpr/1/header.cpr' nor\n        '_mesh.cpr'\nIf you are running a parallel job, double check that you've created a split for 1 ranks.\nNote: One of paths above may refer to a valid directory on your system, however we are attempting to read a valid header file.\n\nEven though those files are present (3 versions of them, given the num_files = 3 flag in the input file)\nWhy is this happening? Thanks for any advice you can provide.",
          "url": "https://github.com/idaholab/moose/discussions/22462",
          "updatedAt": "2022-10-21T16:20:11Z",
          "publishedAt": "2022-10-21T16:05:44Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou just need to provide the file name base / folder on the command line after --recover\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/22462#discussioncomment-3935382",
                  "updatedAt": "2022-10-21T16:16:57Z",
                  "publishedAt": "2022-10-21T16:16:57Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Edward-Eth"
                          },
                          "bodyText": "Ah, I thought that those were determined automatically, thank you! Running the command:\n./my_app -i Thermal_Linear --recover Thermal_Linear_Checkpoint_cp/0008\n\nWorks \ud83d\udc4d",
                          "url": "https://github.com/idaholab/moose/discussions/22462#discussioncomment-3935404",
                          "updatedAt": "2022-10-21T16:20:10Z",
                          "publishedAt": "2022-10-21T16:20:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}