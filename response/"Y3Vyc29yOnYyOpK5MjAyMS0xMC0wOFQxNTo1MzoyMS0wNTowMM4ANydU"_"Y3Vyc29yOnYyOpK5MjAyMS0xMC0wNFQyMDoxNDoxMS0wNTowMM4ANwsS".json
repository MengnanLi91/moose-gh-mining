{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0xMC0wNFQyMDoxNDoxMS0wNTowMM4ANwsS"
    },
    "edges": [
      {
        "node": {
          "title": "Error: No valid AXIS lines found by GriddedData",
          "author": {
            "login": "tstepan333"
          },
          "bodyText": "I'm trying to compile one of the examples for PiecewiseMultilinear function. I copied .i and .txt files to my directory. However, when I try to compile the file, I'm getting the error 'No valid AXIS lines found by GriddedData'. Could you help me to resolve this issue?\nFiles:\nhttps://github.com/idaholab/moose/blob/next/test/tests/functions/piecewise_multilinear/twoDa.i\nhttps://github.com/idaholab/moose/blob/next/test/tests/functions/piecewise_multilinear/twoD_const.txt",
          "url": "https://github.com/idaholab/moose/discussions/19026",
          "updatedAt": "2023-06-14T12:34:58Z",
          "publishedAt": "2021-10-06T19:40:16Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "I'm not sure what you've done exactly.  The MOOSE input file twoDa.i does not use the data file twoD_const.txt.  Instead, it uses twoD1.txt, because of the block\n  [./bilinear1_fcn]\n    type = PiecewiseMultilinear\n    data_file = twoD1.txt\n  [../]\n\nSo, i suspect that you've copied the files, but then modified stuff.  Check your modifications.\nandy",
                  "url": "https://github.com/idaholab/moose/discussions/19026#discussioncomment-1438807",
                  "updatedAt": "2023-06-14T12:34:58Z",
                  "publishedAt": "2021-10-06T20:36:04Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "tstepan333"
                          },
                          "bodyText": "I downloaded files again to my directory and run them w/o modifications. However, I'm still getting the same error. All the files I copy from /moose I store on my computer and compile them with ./giraffe-opt -i /mnt/c/Users/Tatiana/Desktop/MOOSE/test/twoD.i",
                          "url": "https://github.com/idaholab/moose/discussions/19026#discussioncomment-1442168",
                          "updatedAt": "2023-07-13T08:48:44Z",
                          "publishedAt": "2021-10-07T12:52:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Did you also copy twoD1.txt, since that is the file that is used by twoDa.i.",
                          "url": "https://github.com/idaholab/moose/discussions/19026#discussioncomment-1444693",
                          "updatedAt": "2023-06-14T12:35:00Z",
                          "publishedAt": "2021-10-07T20:45:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tstepan333"
                          },
                          "bodyText": "Yes, if there is no twoD1.txt file the error is 'Error opening file '/mnt/c/Users/Tatiana/Desktop/MOOSE/test/twoD1.txt' from GriddedData.'",
                          "url": "https://github.com/idaholab/moose/discussions/19026#discussioncomment-1449310",
                          "updatedAt": "2023-06-14T12:35:00Z",
                          "publishedAt": "2021-10-08T16:27:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This really should not be failing. This is a tested input. i just checked with a fresh MOOSE and it runs fine.\nDid you change anything wrt to these systems in Giraffe?",
                          "url": "https://github.com/idaholab/moose/discussions/19026#discussioncomment-1449919",
                          "updatedAt": "2023-06-14T12:35:01Z",
                          "publishedAt": "2021-10-08T18:23:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tstepan333"
                          },
                          "bodyText": "No, I didn't do anything. Will try to update moose",
                          "url": "https://github.com/idaholab/moose/discussions/19026#discussioncomment-1450045",
                          "updatedAt": "2023-06-14T12:35:01Z",
                          "publishedAt": "2021-10-08T18:53:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This was added in 2018, I doubt this was ever broken since then. But always a good idea",
                          "url": "https://github.com/idaholab/moose/discussions/19026#discussioncomment-1450313",
                          "updatedAt": "2023-06-14T12:35:02Z",
                          "publishedAt": "2021-10-08T20:11:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Compressible Navier Stokes CGFE Resources",
          "author": {
            "login": "maxnezdyur"
          },
          "bodyText": "For the Compressible Navier Stokes CGFE, are there any resources or test input files for it? I found bump.i in the tests section.\nAre there any input files using the Compressible Navier Stokes CGFE method without using the  Modules/Compressible Navier-Stokes System.",
          "url": "https://github.com/idaholab/moose/discussions/19045",
          "updatedAt": "2022-07-26T09:50:40Z",
          "publishedAt": "2021-10-08T11:04:54Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThere isnt much resource for this apart from the bump test and the step test. You can ask for access to Pronghorn to get more input files using CNS, here: https://ncrcaims.inl.gov/Identity/Account/Login\nYou can however look at src/actions/CNSAction.C to see what is done by the Modules/CompressibleNavierStokes syntax precisely.\nOur main focus is finite volume for compressible flows, these two PRs enable it:\n#18395\n#18806\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19045#discussioncomment-1448953",
                  "updatedAt": "2022-07-26T09:50:39Z",
                  "publishedAt": "2021-10-08T15:27:05Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "maxnezdyur"
                          },
                          "bodyText": "Thank you for the information. May I ask why the focus is on finite volume for compressible flow?",
                          "url": "https://github.com/idaholab/moose/discussions/19045#discussioncomment-1449016",
                          "updatedAt": "2022-07-26T09:51:01Z",
                          "publishedAt": "2021-10-08T15:37:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Works a lot better. Conservation of quantities is natural, no need for stabilization, no awkwardness at corners for boundary conditions.",
                          "url": "https://github.com/idaholab/moose/discussions/19045#discussioncomment-1449025",
                          "updatedAt": "2022-07-26T09:51:01Z",
                          "publishedAt": "2021-10-08T15:39:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Function & expression in ParsedMaterial",
          "author": {
            "login": "hokonkim"
          },
          "bodyText": "Hello, I'm trying to use both function and expression(if-else) in \"function in ParsedMaterial\" like below\nHowever, it doesn't work..\n(*** ERROR ***\nInvalid function\nif(aux_eta_tpb > funcOverpotential, 0, 5318)\naux_eta_tpb\nin ParsedMaterialHelper.\n)\nHow can I use \"funcOverpotential function\" in ParsedMaterial?\nThanks.\n[Functions]\n  [./funcPotentialLSM]\n    type = ParsedFunction\n    value = 'init_val := if(t = 0, 0.03607, 0);\n             init_val +BC_YSZ +E_rev - eta * t'\n    vars  = '          BC_YSZ  E_rev   eta'\n    vals  = 'numerical_phi_YSZ 1.03665 0.4' # 0.03607+1.03665\n  [../]\n\n  [./funcOverpotential]\n    type = ParsedFunction\n    value = 'eta * t'\n    vars  = 'eta'\n    vals  = '0.4'\n  [../]\n\n  [./funcTimeStepper]\n    type = PiecewiseLinear\n    x = '0.0  0.1 0.5 1.0' # time_t\n    y = '0.01 0.1 0.1 0.2' # time_dt\n  [../]\n[]\n\n[Materials]\n  [./tpbActivity]\n    type  = ParsedMaterial\n    block = 'PT_TPB_TET4'\n    f_name = 'tpbActivity_S0'\n    function = 'if(aux_eta_tpb > funcOverpotential, 0, 5318)'\n    args = 'aux_eta_tpb'\n    # Make values see at output(*.e) file\n    outputs = exodus\n  [../]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/19040",
          "updatedAt": "2022-07-14T17:02:15Z",
          "publishedAt": "2021-10-07T21:34:45Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nParsedMaterial cannot use a function directly (funcOverpotential).\nYou have to use a GenericFunctionMaterial to transfer the function to a material property. Then make sure to have it listed in material_property_names\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19040#discussioncomment-1446316",
                  "updatedAt": "2022-07-14T17:02:40Z",
                  "publishedAt": "2021-10-08T06:29:45Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "CondaVerificationError",
          "author": {
            "login": "xchengood"
          },
          "bodyText": "Hi Moose expert or user,\nWhen using 'conda update --all' to update my conda environment, as the download of moose-libmesh does not keep going and it is stuck there, I have to force it to break. But when running that command again, I got the CondaVerificationError.  The error message is here.\nCondaVerificationError.txt\nCould anyone help me with solving this issue? Thank you.",
          "url": "https://github.com/idaholab/moose/discussions/19018",
          "updatedAt": "2022-10-20T20:22:01Z",
          "publishedAt": "2021-10-06T15:56:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou might have broken conda a bit by forcing it to break like this.\nCan you try cleaning the conda cache? conda clean --all\nif that does not do it, you can try conda remove moose-libmesh, and if that fails too then you ll have to go in the conda pkg directory and clean manually.\nAlso if you feel conda is too slow, please try out the suggestions in this thread (mamba)\n#18378\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/19018#discussioncomment-1439591",
                  "updatedAt": "2022-10-20T20:22:01Z",
                  "publishedAt": "2021-10-07T00:47:26Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "Hello\nYou might have broken conda a bit by forcing it to break like this. Can you try cleaning the conda cache? conda clean --all if that does not do it, you can try conda remove moose-libmesh, and if that fails too then you ll have to go in the conda pkg directory and clean manually.\nAlso if you feel conda is too slow, please try out the suggestions in this thread (mamba) #18378\nGuillaume\n\nThank you very much. I fix issue by re-installing conda.",
                          "url": "https://github.com/idaholab/moose/discussions/19018#discussioncomment-1439787",
                          "updatedAt": "2022-10-20T20:22:13Z",
                          "publishedAt": "2021-10-07T02:00:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Polynomial order of external mesh",
          "author": {
            "login": "aiskhak"
          },
          "bodyText": "Hi guys,\nI am using a MOOSE-based application (SAM) for 3D fluid dynamics simulations. I have a relatively complex geometry and my mesh is built in ANSYS (scdoc) format. To get .exo format I do the following in ANSYS ICEM:\n\nimport model\nmerge all blocks\noutput mesh\n\nby default, it is HEX8/QUAD4 mesh, which is suitable for FIRST polynomial order (LAGRANGE). This works fine.\nI want to do simulations for SECOND order. If I specify so, I am getting the error:\nError: Exodus file says 20 nodes per Elem, but Elem type HEX8 has 8 nodes.\n[0] ../src/mesh/exodusII_io.C, line 253, compiled Sep 20 2021 at 12:34:20\nThen I tried to \"Create node on interface\" in ICEM and make the mesh HEX20/QUAD8. However, I am getting the same error in my simulation.\nWhat is the problem? Thanks!",
          "url": "https://github.com/idaholab/moose/discussions/19017",
          "updatedAt": "2022-08-23T22:25:02Z",
          "publishedAt": "2021-10-06T15:36:59Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I dont know about a workflow to add the necessary nodes for second order. I suppose setting second_order = true in the [Mesh] block does not work?\n@lindsayad do you know more about this?",
                  "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439597",
                  "updatedAt": "2022-08-23T22:25:26Z",
                  "publishedAt": "2021-10-07T00:50:15Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "Thank you for your answer. No, second_order = true does not work.",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439629",
                          "updatedAt": "2022-08-23T22:25:27Z",
                          "publishedAt": "2021-10-07T01:01:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Using the same file you use for your HEX8 mesh and then specifying second_order = true in the mesh block should work. You say it doesn't work...do you get an error? Can you share your mesh block please?",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439636",
                          "updatedAt": "2022-08-23T22:25:38Z",
                          "publishedAt": "2021-10-07T01:04:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "No, I am not getting errors. The simulation just does not start. It is sort of frozen in the very beginning.\n[Mesh]\ntype = FileMesh\nfile = hirjet_1st.exo\nsecond_order = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439668",
                          "updatedAt": "2022-08-23T22:25:39Z",
                          "publishedAt": "2021-10-07T01:16:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Weird. it might just be working on the mesh.\nIs your moose install recent? The current version should tell you what it s doing when it takes too long",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439675",
                          "updatedAt": "2022-08-23T22:26:00Z",
                          "publishedAt": "2021-10-07T01:18:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "yes, I installed MOOSE yesterday.",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439678",
                          "updatedAt": "2022-08-23T22:25:59Z",
                          "publishedAt": "2021-10-07T01:19:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "Is there any other way to save a moose-compatible mesh from .scdoc format?",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439682",
                          "updatedAt": "2022-08-23T22:26:00Z",
                          "publishedAt": "2021-10-07T01:20:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "How big is that mesh?",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439683",
                          "updatedAt": "2022-08-23T22:26:02Z",
                          "publishedAt": "2021-10-07T01:20:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "It is a 3D case:\n--- Mesh Info ---\nElement types :\nHEXA_8 : 42756\nQUAD_4 : 24016\nElement parts :\nALL : 59952\nINLET : 180\nOUTLET : 180\nWALL : 6460\nTotal elements : 66772\nTotal nodes : 47044\nMin : -0.2027 -0.3548 -0.3048\nMax : 0.5672 0.2413 0.3048",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439697",
                          "updatedAt": "2022-08-23T22:26:03Z",
                          "publishedAt": "2021-10-07T01:24:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont know much about scdoc.\nI wonder if having the Quads in the 3D mesh is the issue for loading it. Can you share that mesh with us?",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439706",
                          "updatedAt": "2022-08-23T22:26:07Z",
                          "publishedAt": "2021-10-07T01:28:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aiskhak"
                          },
                          "bodyText": "I am sorry. Everything works fine. The problem was in the update of the cluster, so the output file was written in a different place. Sorry about that. BIG-BIG thanks for your help!",
                          "url": "https://github.com/idaholab/moose/discussions/19017#discussioncomment-1439710",
                          "updatedAt": "2022-08-23T22:26:07Z",
                          "publishedAt": "2021-10-07T01:28:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Unable to find the object of the individual modules",
          "author": {
            "login": "anilkunwar"
          },
          "bodyText": "I recently installed moose and tried to run two examples :\n(1.) https://github.com/idaholab/moose/tree/next/examples/ex01_inputfile\n(2.) https://github.com/idaholab/moose/blob/next/modules/phase_field/examples/cahn-hilliard/Math_CH.i\nWhile the first example runs perfectly, the app is unable to find the objects inside the phase field module in context of (2.) , and shows the following error:\n*** ERROR ***\nA 'CHMath' is not a registered object.\n\nIf you are trying to find this object in a dynamically linked library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\n\nWhat might be the cause of this error?",
          "url": "https://github.com/idaholab/moose/discussions/18882",
          "updatedAt": "2022-06-23T21:16:48Z",
          "publishedAt": "2021-09-21T11:24:55Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "What executable are you running?\nIf you're running the executable in /test (moose_test-opt), objects that are a part of the phase_field module are not compiled nor registered within this executable. If you want to run just phase_field examples, compile and use the phase_field executable:\ncd /path/to/your/moose/repo\ncd modules/phase_field\nmake -j 8\n./phase_field-opt examples/cahn-hilliard/Math_CH.i",
                  "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1362916",
                  "updatedAt": "2022-06-23T21:16:51Z",
                  "publishedAt": "2021-09-21T15:29:01Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "anilkunwar"
                          },
                          "bodyText": "Thank you for the answers.\nI was running the example traditionally with the external app.\nI already compiled the phase field module to get the executable phase_field-opt, and I can run Math_CH.i example with phase_field-opt.\nHow do we then run the coupled simulations using more than two modules (e.g. phase_field and navier_stokes)? Is it possible through combined module ?",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1363411",
                          "updatedAt": "2022-06-23T21:16:52Z",
                          "publishedAt": "2021-09-21T17:04:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You can use the combined module OR you can change the Makefile in your application to include phase_field",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1363425",
                          "updatedAt": "2022-06-23T21:19:57Z",
                          "publishedAt": "2021-09-21T17:07:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "anilkunwar"
                          },
                          "bodyText": "I am asking this question because compiling the application (panther app) with the following option :\n################################## MODULES ####################################\n# To use certain physics included with MOOSE, set variables below to\n# yes as needed.  Or set ALL_MODULES to yes to turn on everything (overrides\n# other set variables).\n\nALL_MODULES                 := yes #no\n\n#CHEMICAL_REACTIONS          := no\n#CONTACT                     := no\n#EXTERNAL_PETSC_SOLVER       := no\n#FLUID_PROPERTIES            := no\n#FSI                         := no\n#FUNCTIONAL_EXPANSION_TOOLS  := no\n#GEOCHEMISTRY                := no\n#HEAT_CONDUCTION             := no\n#LEVEL_SET                   := no\n#MISC                        := no\n#NAVIER_STOKES               := no\n#PHASE_FIELD                 := yes #no\n#POROUS_FLOW                 := no\n#RAY_TRACING                 := no\n#RDG                         := no\n#RICHARDS                    := no\n#STOCHASTIC_TOOLS            := no\n#TENSOR_MECHANICS            := no\n#XFEM                        := no\n\n\nor separately including the PHASE_FIELD   := yes , showed the error mentioned in the first post.",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1363587",
                          "updatedAt": "2022-06-23T21:19:59Z",
                          "publishedAt": "2021-09-21T17:41:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did you try make clobberall then recompile",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1363592",
                          "updatedAt": "2022-08-02T15:31:16Z",
                          "publishedAt": "2021-09-21T17:42:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "anilkunwar"
                          },
                          "bodyText": "yes after every failed attempts, I had to redo with the $ make clobberall command",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1363598",
                          "updatedAt": "2022-08-02T15:31:16Z",
                          "publishedAt": "2021-09-21T17:44:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "anilkunwar"
                          },
                          "bodyText": "In fact, the app installed in another computer several years ago with moose environment works fine. I have not been able to use codes of individual modules with the external app only for the conda based moose installation.",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1363622",
                          "updatedAt": "2022-08-02T15:31:16Z",
                          "publishedAt": "2021-09-21T17:48:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can you post the result of ldd your_executable-opt please",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1363629",
                          "updatedAt": "2022-08-02T15:31:16Z",
                          "publishedAt": "2021-09-21T17:49:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "anilkunwar"
                          },
                          "bodyText": "the result of $ ldd panther-opt is as following:\nlinux-vdso.so.1 (0x00007ffd9f258000)\n\tlibpanther_test-opt.so.0 => /home/username/moose_projects/panther/test/lib/libpanther_test-opt.so.0 (0x00007fe9abf70000)\n\tlibpanther-opt.so.0 => /home/username/moose_projects/panther/lib/libpanther-opt.so.0 (0x00007fe9abee0000)\n\tlibmodule_loader_with-opt.so.0 => /home/username/moose_projects/moose/modules/module_loader/lib/libmodule_loader_with-opt.so.0 (0x00007fe9abed2000)\n\tlibmoose-opt.so.0 => /home/username/moose_projects/moose/framework/libmoose-opt.so.0 (0x00007fe9aa14b000)\n\tlibpcre-opt.so.0 => /home/username/moose_projects/moose/framework/contrib/pcre/libpcre-opt.so.0 (0x00007fe9aa11d000)\n\tlibhit-opt.so.0 => /home/username/moose_projects/moose/framework/contrib/hit/libhit-opt.so.0 (0x00007fe9aa0b9000)\n\tlibmesh_opt.so.0 => /home/username/anaconda3/envs/pfenv/libmesh/lib/libmesh_opt.so.0 (0x00007fe9a8b77000)\n\tlibtimpi_opt.so.3 => /home/username/anaconda3/envs/pfenv/libmesh/lib/libtimpi_opt.so.3 (0x00007fe9a8b6a000)\n\tlibvtkIOCore-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkIOCore-6.3.so.1 (0x00007fe9a8af0000)\n\tlibvtkCommonCore-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkCommonCore-6.3.so.1 (0x00007fe9a86aa000)\n\tlibvtkCommonDataModel-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkCommonDataModel-6.3.so.1 (0x00007fe9a839c000)\n\tlibvtkFiltersCore-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkFiltersCore-6.3.so.1 (0x00007fe9a7f07000)\n\tlibvtkIOXML-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkIOXML-6.3.so.1 (0x00007fe9a7e3a000)\n\tlibvtkImagingCore-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkImagingCore-6.3.so.1 (0x00007fe9a7c18000)\n\tlibvtkIOImage-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkIOImage-6.3.so.1 (0x00007fe9a7a9a000)\n\tlibvtkImagingMath-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkImagingMath-6.3.so.1 (0x00007fe9a7a54000)\n\tlibvtkIOParallelXML-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkIOParallelXML-6.3.so.1 (0x00007fe9a7a2d000)\n\tlibvtkParallelMPI-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkParallelMPI-6.3.so.1 (0x00007fe9a7a15000)\n\tlibvtkParallelCore-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkParallelCore-6.3.so.1 (0x00007fe9a79c4000)\n\tlibvtkCommonExecutionModel-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/libvtkCommonExecutionModel-6.3.so.1 (0x00007fe9a792b000)\n\tlibz.so.1 => /home/username/anaconda3/envs/pfenv/lib/libz.so.1 (0x00007fe9a790f000)\n\tlibslepc.so.3.15 => /home/username/anaconda3/envs/pfenv/lib/libslepc.so.3.15 (0x00007fe9a754f000)\n\tlibpetsc.so.3.15 => /home/username/anaconda3/envs/pfenv/lib/libpetsc.so.3.15 (0x00007fe9a5da9000)\n\tlibHYPRE-2.20.0.so => /home/username/anaconda3/envs/pfenv/lib/libHYPRE-2.20.0.so (0x00007fe9a58ac000)\n\tlibstrumpack.so => /home/username/anaconda3/envs/pfenv/lib/libstrumpack.so (0x00007fe9a4ec4000)\n\tlibsuperlu_dist.so.6 => /home/username/anaconda3/envs/pfenv/lib/libsuperlu_dist.so.6 (0x00007fe9a4dd0000)\n\tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fe9a4d70000)\n\tlibparmetis.so => /home/username/anaconda3/envs/pfenv/lib/libparmetis.so (0x00007fe9a4d26000)\n\tlibmetis.so => /home/username/anaconda3/envs/pfenv/lib/libmetis.so (0x00007fe9a4cb7000)\n\tlibmpifort.so.12 => /home/username/anaconda3/envs/pfenv/lib/libmpifort.so.12 (0x00007fe9a4c78000)\n\tlibgfortran.so.5 => /home/username/anaconda3/envs/pfenv/lib/libgfortran.so.5 (0x00007fe9a4ad8000)\n\tlibgcc_s.so.1 => /home/username/anaconda3/envs/pfenv/lib/libgcc_s.so.1 (0x00007fe9a4ac4000)\n\tlibrt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007fe9a4ab7000)\n\tlibquadmath.so.0 => /home/username/anaconda3/envs/pfenv/lib/libquadmath.so.0 (0x00007fe9a4a7d000)\n\tlibstdc++.so.6 => /home/username/anaconda3/envs/pfenv/lib/libstdc++.so.6 (0x00007fe9a48d2000)\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fe9a48cc000)\n\tlibmpi.so.12 => /home/username/anaconda3/envs/pfenv/lib/libmpi.so.12 (0x00007fe9a4592000)\n\tlibmpicxx.so.12 => /home/username/anaconda3/envs/pfenv/lib/libmpicxx.so.12 (0x00007fe9a456d000)\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fe9a441c000)\n\tlibgomp.so.1 => /home/username/anaconda3/envs/pfenv/lib/libgomp.so.1 (0x00007fe9a43ef000)\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe9a41fd000)\n\tlibnetcdf.so.13 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/libnetcdf.so.13 (0x00007fe9a40b1000)\n\tlibvtkzlib-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkzlib-6.3.so.1 (0x00007fe9a4096000)\n\tlibvtksys-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtksys-6.3.so.1 (0x00007fe9a4044000)\n\tlibvtkCommonMisc-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkCommonMisc-6.3.so.1 (0x00007fe9a402e000)\n\tlibvtkCommonSystem-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkCommonSystem-6.3.so.1 (0x00007fe9a4018000)\n\tlibvtkCommonTransforms-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkCommonTransforms-6.3.so.1 (0x00007fe9a3fe4000)\n\tlibvtkCommonMath-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkCommonMath-6.3.so.1 (0x00007fe9a3fc2000)\n\tlibvtkIOXMLParser-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkIOXMLParser-6.3.so.1 (0x00007fe9a3fa9000)\n\tlibvtkpng-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkpng-6.3.so.1 (0x00007fe9a3f76000)\n\tlibvtktiff-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtktiff-6.3.so.1 (0x00007fe9a3f0c000)\n\tlibvtkmetaio-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkmetaio-6.3.so.1 (0x00007fe9a3e63000)\n\tlibvtkDICOMParser-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkDICOMParser-6.3.so.1 (0x00007fe9a3e45000)\n\tlibvtkjpeg-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkjpeg-6.3.so.1 (0x00007fe9a3e15000)\n\tlibvtkIOLegacy-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/./libvtkIOLegacy-6.3.so.1 (0x00007fe9a3d71000)\n\t/lib64/ld-linux-x86-64.so.2 (0x00007fe9abf8b000)\n\tlibmfhdf.so.0 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/./libmfhdf.so.0 (0x00007fe9a3d43000)\n\tlibdf.so.0 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/./libdf.so.0 (0x00007fe9a3c95000)\n\tlibhdf5_hl.so.100 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/./libhdf5_hl.so.100 (0x00007fe9a3c6e000)\n\tlibhdf5.so.103 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/./libhdf5.so.103 (0x00007fe9a38da000)\n\tlibcurl.so.4 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/./libcurl.so.4 (0x00007fe9a383d000)\n\tlibvtkexpat-6.3.so.1 => /home/username/anaconda3/envs/pfenv/libmesh-vtk/lib/././libvtkexpat-6.3.so.1 (0x00007fe9a380f000)\n\tlibjpeg.so.9 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libjpeg.so.9 (0x00007fe9a37d1000)\n\tlibnghttp2.so.14 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libnghttp2.so.14 (0x00007fe9a37a8000)\n\tlibssh2.so.1 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libssh2.so.1 (0x00007fe9a3764000)\n\tlibssl.so.1.1 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libssl.so.1.1 (0x00007fe9a36d2000)\n\tlibcrypto.so.1.1 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libcrypto.so.1.1 (0x00007fe9a3406000)\n\tlibgssapi_krb5.so.2 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libgssapi_krb5.so.2 (0x00007fe9a33b3000)\n\tlibkrb5.so.3 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libkrb5.so.3 (0x00007fe9a32df000)\n\tlibk5crypto.so.3 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libk5crypto.so.3 (0x00007fe9a32c5000)\n\tlibcom_err.so.3 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/././libcom_err.so.3 (0x00007fe9a32bf000)\n\tlibkrb5support.so.0 => /home/username/anaconda3/envs/pfenv/libmesh/lib/../../lib/./././libkrb5support.so.0 (0x00007fe9a32ae000)\n\tlibresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 (0x00007fe9a3292000)",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1363970",
                          "updatedAt": "2022-08-02T15:31:16Z",
                          "publishedAt": "2021-09-21T19:21:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok the phase field module, or any module, is not compiled with your application.\nThis is very odd if you have the ALL_MODULES set to yes.\nI would save all your work (commit) then git clean -xfd your repository then try again.\nAnother option  is to use dynamic loading. You just have to give in your input file the path to a compiled module library of phase_field.\nSee more info and the syntax here:\nhttps://mooseframework.inl.gov/source/actions/DynamicObjectRegistrationAction.html",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1364637",
                          "updatedAt": "2022-08-02T15:31:20Z",
                          "publishedAt": "2021-09-21T22:13:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "anilkunwar"
                          },
                          "bodyText": "Thank you very much for your answer on dynamic object registration.  I could successfully run the input file consisting of objects from phase field module by using DynamicObjectRegistrationAction\n[Problem]\n  register_objects_from = 'PhaseFieldApp'\n  library_path = '../../moose/modules/phase_field/lib'\n[]\n\nAre there any possibilities of loading objects dynamically from two or more modules?",
                          "url": "https://github.com/idaholab/moose/discussions/18882#discussioncomment-1364694",
                          "updatedAt": "2022-08-02T15:31:19Z",
                          "publishedAt": "2021-09-21T22:31:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Difference between PF formulations",
          "author": {
            "login": "AlexSacMorane"
          },
          "bodyText": "Dear all,\nI am investigating on  Phase Field formulations from Moose documentation and I do not understand something.\nI have tried the same set-up (2 grains defined by 2 differents conserved variables but with the same material properties). In the first case I use the following kernels (TimeDerivative, CahnHilliard, CHInterface) and in the second one I defined a chemical potential for each grain and I use (CoupleTimeDerivative, SplitCHParsed, SplitCHWRes). Results are not the same and I do not understand this because formulations should be equivalent. I have maybe missunderstood something or made a coding error.\nYou wil find in the attachment the 2 input files.\nPF_2grains_2Phases.txt\nPF_2grains_2Phases_Test.txt\nThanks for all you can say.\nI stay available. Regards.\nAlexandre Sac--Morane",
          "url": "https://github.com/idaholab/moose/discussions/18965",
          "updatedAt": "2023-12-18T20:34:29Z",
          "publishedAt": "2021-09-29T15:44:56Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "AlexSacMorane"
                  },
                  "bodyText": "Moreover, I do not understand why variables c_i skyrocket like this with time! I have consider the same set-up and material as the example Conserved.i from the module combined. Is it because in my case the free energy depends on the 2 variables ?",
                  "url": "https://github.com/idaholab/moose/discussions/18965#discussioncomment-1403772",
                  "updatedAt": "2023-12-18T20:34:33Z",
                  "publishedAt": "2021-09-29T15:47:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@laagesen @SudiptaBiswas @amjokisaari on phase field.",
                          "url": "https://github.com/idaholab/moose/discussions/18965#discussioncomment-1427378",
                          "updatedAt": "2023-12-18T20:34:34Z",
                          "publishedAt": "2021-10-04T23:56:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "AlexSacMorane"
                          },
                          "bodyText": "Concerning this subject I found my error. The free energy was not well formulated.",
                          "url": "https://github.com/idaholab/moose/discussions/18965#discussioncomment-1438374",
                          "updatedAt": "2023-12-18T20:34:36Z",
                          "publishedAt": "2021-10-06T18:47:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "SudiptaBiswas"
                  },
                  "bodyText": "Grains are usually represented by non-conserved order parameters. For simulating multiple grains, you should be looking at Allen-Cahn equation. Grain growth simulations would be a good place to start. If this doesn't help, please provide more information about the problem you are solving so you can point to right model to utilize.",
                  "url": "https://github.com/idaholab/moose/discussions/18965#discussioncomment-1427429",
                  "updatedAt": "2023-12-18T20:34:36Z",
                  "publishedAt": "2021-10-05T00:12:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "AlexSacMorane"
                          },
                          "bodyText": "Ok I will change my simulation. I let you know. Thanks",
                          "url": "https://github.com/idaholab/moose/discussions/18965#discussioncomment-1438379",
                          "updatedAt": "2023-12-18T20:34:36Z",
                          "publishedAt": "2021-10-06T18:48:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MOOSE on Xsede",
          "author": {
            "login": "mamivand"
          },
          "bodyText": "Hello MOOSE users,\nJust wondering if anyone has experience in running MOOSE on Xsede machines? Any recommendation for machine selection?\nThanks,\nMahmood Mamivand",
          "url": "https://github.com/idaholab/moose/discussions/18997",
          "updatedAt": "2022-08-18T13:09:46Z",
          "publishedAt": "2021-10-04T18:37:36Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI have not. Let s see if someone pitches in.\n@friedmud have you heard of anyone?\nWith regards to machine selection, pick something that has:\n\nCPUs with lots of cores\nenough memory for your application\nan infiniband network or similar if you are going to use more than one node. You want small latencies between your compute nodes, as there can be quite a bit of data transfers between processes, depending on your application\nsupport modern gcc/mpi etc so you dont have to deal with older versions\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18997#discussioncomment-1427433",
                  "updatedAt": "2022-08-18T13:09:46Z",
                  "publishedAt": "2021-10-05T00:15:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "I mean - XSEDE is a program, not a machine.  I've used XSEDE a couple of times in the past for running on the Blue Gene machines at ANL.\n@GiudGiud is right... you want something with lots of CPU cores.  GPU won't do anything for you with MOOSE at this point.\nIs there a particular machine you're interested in?",
                          "url": "https://github.com/idaholab/moose/discussions/18997#discussioncomment-1430880",
                          "updatedAt": "2022-08-18T13:09:46Z",
                          "publishedAt": "2021-10-05T15:25:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mamivand"
                          },
                          "bodyText": "Derek and Guillaume,\nThanks for your response.\nThrough XSEDE I can request access to machines that are under XSEDE. I wanted to check if anyone has experience in running MOOSE on any of them. Since MOOSE uses Conda, I think my concern regarding MOOSE compatibility with different clusters is not relevant. I am aiming for Jetstream2 Indiana University .\nMahmood",
                          "url": "https://github.com/idaholab/moose/discussions/18997#discussioncomment-1432410",
                          "updatedAt": "2022-08-18T13:09:51Z",
                          "publishedAt": "2021-10-05T21:18:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "friedmud"
                          },
                          "bodyText": "@mamivand : you won't want to use Conda on the clusters though.  You will need to compile a custom version of MOOSE using the cluster's compilers and MPI stack.\nMOOSE from Conda is just for workstations.\nYou will want to follow our HPC setup instructions here: https://mooseframework.inl.gov/getting_started/installation/hpc_install_moose.html",
                          "url": "https://github.com/idaholab/moose/discussions/18997#discussioncomment-1433004",
                          "updatedAt": "2022-08-18T13:09:57Z",
                          "publishedAt": "2021-10-06T01:26:18Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Nested Mesh Interaction",
          "author": {
            "login": "klaw13"
          },
          "bodyText": "Hi there,\nI'm trying to simulate the flow of water inside a cavity flowing inside the red volume. As the water flows throughout the cavity, the pressure from the flow should be able to push on the mesh boundary to move it. If the force is large\nenough, both the outer and inner volumes should become cylinders.\n\ninput file: input.i.txt )\nI initially tried to just simulate the flow of the water inside the cavity without considering any deformations to the mesh. When I run the simulation, I can get the water to flow about half way through, but then the simulation fails to converge.\nI thought it might be because I need to take into consideration the effects on the mesh, so I  tried to base my approach on the 3D_struc_acoustic.i example, and added in kernels to handle the convected mesh.\nHowever, I have not been able to converge at any timestep. Currently, I'm getting the following error:\n*** ERROR *** MooseVariableFE: Old time derivative of solution (u_dot_old) is not stored. Please set uDotOldRequested() to true in FEProblemBase before requesting u_dot_old.",
          "url": "https://github.com/idaholab/moose/discussions/18267",
          "updatedAt": "2022-07-08T00:11:49Z",
          "publishedAt": "2021-07-06T13:49:44Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe effect on the mesh should be a sufficiently different issue that you should try to get a resolved solution without modeling this effect first.\nOnce you get a good solution without the fluid structure interaction, @somu15 should be able to help with that error message, which I assume is related to a FSI kernel\nBest,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-971357",
                  "updatedAt": "2022-07-08T00:11:49Z",
                  "publishedAt": "2021-07-06T17:55:58Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "somu15"
                          },
                          "bodyText": "Hi @klaw13. As @GiudGiud suggested, try and resolve the problem without FSI. With the FSI, it is important how you define the element and neighbor boundaries when setting the sidesets. I will provide more information once you let me know you have resolved your issue without FSI. Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-971378",
                          "updatedAt": "2022-07-08T00:11:49Z",
                          "publishedAt": "2021-07-06T18:01:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Thanks @GiudGiud.\nHi @somu15\nSo my convergence issue seems to be due to the values I have set in the parameters of my executioner block  - so establishing the flow of water was not my issue. However, I'm still running into the same error when I try to incorporate FSI with the mesh:\n*** ERROR *** MooseVariableFE: Old time derivative of solution (u_dot_old) is not stored. Please set uDotOldRequested() to true in FEProblemBase before requesting u_dot_old.\nTaking a look at a simpler problem, I tried to modify the fsi_flat_channel.i example within the MOOSE repo: simplified.i.txt\nI added the following to the kernels\n\n[./diffusion]\ntype = Diffusion\nvariable = 'p'\nblock = 0\n[../]\n[./inertia]\ntype = AcousticInertia\nvariable = p\nblock = 0\n[../]\n[./DynamicTensorMechanics]\ndisplacements = 'disp_x disp_y'\nblock = 1\n[../]\n\nand then changed the InterfaceKernels block from using CoupledPenaltyInterfaceDiffusion to instead use the StructureAcousticInterface module. This input file setup also results in the same error regardless of the interface kernel I choose.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1001457",
                          "updatedAt": "2022-07-08T00:11:51Z",
                          "publishedAt": "2021-07-14T00:11:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Do you have a working fluid-flow only simulation now?\n@somu15 for the variable error",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1048161",
                          "updatedAt": "2022-07-08T00:11:56Z",
                          "publishedAt": "2021-07-25T20:50:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Yes, I have a working fluid-flow only simulation now.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1058609",
                          "updatedAt": "2022-08-22T04:14:05Z",
                          "publishedAt": "2021-07-26T22:13:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "somu15"
                          },
                          "bodyText": "Hi @klaw13 . Could you try turning off the INS kernels and commenting out the velocity variables for the fluid domain and run FSI?",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1058629",
                          "updatedAt": "2022-08-22T04:14:05Z",
                          "publishedAt": "2021-07-26T22:22:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Hi @somu15, it runs successfully when INS kernels are turned off and velocity variables are removed.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1075026",
                          "updatedAt": "2022-08-22T04:14:05Z",
                          "publishedAt": "2021-07-27T21:43:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "somu15"
                          },
                          "bodyText": "@klaw13 That is what I had expected. The FSI you are using is an acoustic FSI where pressure is the only primary variable in the fluid domain. See the physics here: https://mooseframework.inl.gov/modules/fsi/fsi_acoustics.html I believe @fdkong has an interface kernel that can work with INS kernels. Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1075212",
                          "updatedAt": "2022-08-22T04:14:05Z",
                          "publishedAt": "2021-07-27T21:46:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Thanks @somu15.\nAlso, are there any specific requirements of how the mesh should be defined (more specifically at the interface) for FSI to work correctly?",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1079246",
                          "updatedAt": "2022-08-22T04:14:05Z",
                          "publishedAt": "2021-07-28T00:00:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "somu15"
                          },
                          "bodyText": "@klaw13  Yes, when defining the interface either in Cubit or MOOSE ('SideSetsBetweenSubdomainsGenerator'), the primary side should be the fluid and secondary side should be the structure. This way, the normal vector would point from the fluid to the structure. Correspondingly, in the 'StructureAcousticInterface', the primary variable should be 'p' and neighbor variable should be 'disp'.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1083148",
                          "updatedAt": "2022-08-22T04:14:05Z",
                          "publishedAt": "2021-07-28T15:50:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Hi @somu15 I tried using  'StructureAcousticInterface' for this geometry without any INS kernels. I adjusted the 3D_struc_acoustic.i example for my problem, but still receive the error as before:\n*** ERROR ***\nMooseVariableFE: Old time derivative of solution (u_dot_old) is not stored. Please set uDotOldRequested() to true in FEProblemBase before requesting u_dot_old.\nI've also verified with the geometry that the blocks of the solid and liquid regions are merged together and display in the mesh output, and that the primary variable is 'p' and neighbor variables are 'disp' as you stated.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1421515",
                          "updatedAt": "2022-08-22T04:14:09Z",
                          "publishedAt": "2021-10-03T16:58:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "fdkong"
                  },
                  "bodyText": "It is a fascinating application. We currently do not have a 3D example in FSI module, but we have a 2D model, \"fsi/test/tests/fsi_2d\", with which you could start.\nThe example is simple, but it is pretty general. Most of the components, internals, and kernels, should be ready to use for your applications.\n\nAlso, are there any specific requirements of how the mesh should be defined (more specifically at the interface) for FSI to work correctly?\n\nWe require solid and fluid meshes to match each other on the interface, even though that can be lifted in the future.",
                  "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1084451",
                  "updatedAt": "2022-07-08T00:11:54Z",
                  "publishedAt": "2021-07-28T21:27:28Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Thanks @fdkong and @somu15!\nMore on the mesh specifications, are Cubit and the MOOSE mesh generators the only softwares currently compatible with the FSI module? I am using gmsh which doesn't seem to have an option to specify the primary and secondary sides of an interface.\nI was able to extend the fsi_2d example into 3d with the MOOSE mesh, but when I recreate it with gmsh while ensuring that the meshes match on each side of the interface, the simulation fails to implement the FSI module correctly.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1084505",
                          "updatedAt": "2022-07-11T07:13:40Z",
                          "publishedAt": "2021-07-28T21:48:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "More on the mesh specifications, are Cubit and the MOOSE mesh generators the only softwares currently compatible with the FSI module? I am using gmsh which doesn't seem to have an option to specify the primary and secondary sides of an interface.\n\nHmm, no, we do not put any restriction on FSI module. I have minimal experience with gmsh, but we have a lot of users who use gmsh.\nYou do not necessarily need to generate or mark primary and secondary sides interface using gmsh.  You only need to create fluid and solid meshes using gmsh. Of course, you need to mark each of the domains as a block. And then, you could use SideSetsBetweenSubdomainsGenerator (as @somu15  suggested earlier) to generate interface side sets.\n\nbut when I recreate it with gmsh while ensuring that the meshes match on each side of the interface, the simulation fails to implement the FSI module correctly.\n\nWhat were error messages?",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1084645",
                          "updatedAt": "2022-07-11T07:13:41Z",
                          "publishedAt": "2021-07-28T22:47:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "I wasn't getting an explicit error message, but the fluid would go through the fluid block and nothing would happen to the solid block which is not what we would expect.\nI made two rectangular blocks and specified them accordingly in gmsh, but when I use the SideSetsBetweenSubdomainsGenerator and run the simulation, I get the error that the side set id does not exist...\nMy mesh definition syntax was\n[Mesh]\n[main]\ntype = FileMeshGenerator\nfile = '1side_v0.msh'\n[]\n[interface]\ntype = SideSetsBetweeSubdomainsGenerator\ninput = main\nprimary_block = 'fluid'\npaired_block = 'solid'\nnew_boundary = 'in_between'\n[]\n[]\nAnd in my InterfaceKernels block, I reference the boundary 'in_between' Which based on the examples should be correct.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1084810",
                          "updatedAt": "2022-07-11T07:13:45Z",
                          "publishedAt": "2021-07-29T00:16:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Run your code with \"--mesh-only\", and then use paraview to check if blocks \"fluid\" and \"solid\", and interface set  \"in_between\" do exist",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1122428",
                          "updatedAt": "2022-07-11T07:13:49Z",
                          "publishedAt": "2021-08-02T22:05:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "When running \"--mesh-only\", the solid and fluid blocks exist. However, the \"in_between\" interface set does not exist.",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1122506",
                          "updatedAt": "2022-07-11T07:13:49Z",
                          "publishedAt": "2021-08-02T22:46:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Do you mind sharing the mesh with us?",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1122529",
                          "updatedAt": "2022-07-11T07:13:49Z",
                          "publishedAt": "2021-08-02T22:59:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Sure! 1side_v0.zip",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1122552",
                          "updatedAt": "2022-07-11T07:13:49Z",
                          "publishedAt": "2021-08-02T23:12:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "I meant the exodus file that was  generated by using \"--mesh-only\"",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1122603",
                          "updatedAt": "2022-07-11T07:13:50Z",
                          "publishedAt": "2021-08-02T23:38:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "mesh_exodus.zip",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1122633",
                          "updatedAt": "2022-07-11T07:13:50Z",
                          "publishedAt": "2021-08-02T23:55:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Does gmsh has an equivalent command-line of \"merge volume solid fluid\" of cubit?\nThe interface is not merged between fluid and solid. That can be done via \"merge volume solid fluid\" in cubit. Could you do the same thing in gmsh?",
                          "url": "https://github.com/idaholab/moose/discussions/18267#discussioncomment-1125488",
                          "updatedAt": "2022-07-11T07:13:50Z",
                          "publishedAt": "2021-08-03T14:41:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Line Search Options",
          "author": {
            "login": "maxnezdyur"
          },
          "bodyText": "I apologize if I missed it somewhere.  I am trying to figure out the different line search options. The most information I could find was this \"Options: basic, bt, contact, cp, default, l2, none, project, shell\". The problem I am having is that I am not sure which line search option is which. I can assume bt is backtracking, but I don't know what the others are. Is there a resource I missed when looking at the different line search options?",
          "url": "https://github.com/idaholab/moose/discussions/18993",
          "updatedAt": "2022-10-13T18:22:00Z",
          "publishedAt": "2021-10-04T17:21:16Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThere's a documentation page but it's super short and I m not sure where it is online so no need to look for it.\nThe line searches are mostly inherited from Petsc. You should look at petsc documentation for more explanation on bt etc\nIf they dont work well, try line_search = 'none'\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18993#discussioncomment-1427326",
                  "updatedAt": "2022-10-13T18:22:00Z",
                  "publishedAt": "2021-10-04T23:51:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Can you post a link once you've found the petsc documentation? I'll upgrade our line search docs in moose\nI created an issue #19006",
                          "url": "https://github.com/idaholab/moose/discussions/18993#discussioncomment-1427427",
                          "updatedAt": "2022-10-13T18:22:00Z",
                          "publishedAt": "2021-10-05T00:10:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "maxnezdyur"
                          },
                          "bodyText": "This is good to know. Thank you for the information. https://petsc.org/release/docs/manualpages/SNES/SNESLineSearchSetType.html\nI am sure this is the petsc documentation you are asking for; it includes references to different line searches with many of the same names in Moose.",
                          "url": "https://github.com/idaholab/moose/discussions/18993#discussioncomment-1427472",
                          "updatedAt": "2022-10-13T18:22:00Z",
                          "publishedAt": "2021-10-05T00:33:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Thank you!",
                          "url": "https://github.com/idaholab/moose/discussions/18993#discussioncomment-1427490",
                          "updatedAt": "2022-10-13T18:22:00Z",
                          "publishedAt": "2021-10-05T00:44:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "@GiudGiud while you are at it, maybe it's helpful to also link to the documentation for the contact line search.",
                          "url": "https://github.com/idaholab/moose/discussions/18993#discussioncomment-1427576",
                          "updatedAt": "2022-10-13T18:22:01Z",
                          "publishedAt": "2021-10-05T01:14:11Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}