{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMi0wNy0yN1QyMjoyMDoyMC0wNTowMM4AQPYN"
    },
    "edges": [
      {
        "node": {
          "title": "Convergence issue at the transition between two blocks",
          "author": {
            "login": "ZoeyChen1993"
          },
          "bodyText": "Dear experts,\nI am setting up a simulation of a coupled thermal-chemical problem, the domain is a standard rectangle with two parts, the two parts are using different material properties, there is a heating source from the bottom, then the heat generated a reaction front, both heat and reaction front propagate along the blocks, then when they travel to the boundary between the two blocks, the mesh starts to adaptive and the time step goes to extremely small then solve does not converge.  Could some one help me to solve the convergence issue? The figure attached is a temperature contour when the simulation aborted. And the code from executioner to adaptivity blocks are attached below.\n\n[Executioner]\n  type = Transient\n  num_steps = 80000\n  nl_rel_tol = 1e-6\n\n  end_time=1000\n\n  nl_max_its=10\n  l_max_its=10\n  \n  [./TimeStepper]\n    type = ConstantDT    \n    dt = 0.5\n    # dt = 3.6e14   \n  [../]\n  \n  [./TimeIntegrator]\n   type = ImplicitEuler\n[../]\n  \n  #Preconditioned JFNK (default)\n  solve_type = 'PJFNK'\n  petsc_options_iname = '-pc_type -pc_hypre_type'\n  petsc_options_value = 'hypre boomeramg'\n[]\n\n\n[Adaptivity]\n  marker = combo #this line when commented, switches off adaptivity\n  max_h_level = 3\n  #steps = 2 #this line gets ignored in a transient run\n  [./Indicators]\n    [./Aerror]\n      type = GradientJumpIndicator\n      variable = Cure\n      outputs = none\n    [../]\n\n    [./Terror]\n      type = GradientJumpIndicator\n      variable = Temperature\n      outputs = none\n    [../]\n    [./error]\n      type = GradientJumpIndicator\n      variable = Temperature\n      outputs = none\n    [../]\n    \n  [../]\n  [./Markers]\n    [./Marker1]\n      type = ErrorFractionMarker\n      refine = 0.5\n      coarsen = 0.1\n      indicator = Aerror\n      outputs = none\n    [../]\n\n    [./Marker3]\n      type = ErrorFractionMarker\n      refine = 0.5\n      coarsen = 0.1\n      indicator = Terror\n      outputs = none\n    [../]\n\n    [./combo]\n      type = ComboMarker\n      markers = 'Marker1 Marker3'\n    [../]\n    \n  [../]\n  [./Markers]\n    [./errorfrac]\n      type = ErrorFractionMarker\n      refine = 0.5\n      coarsen = 0.1\n      indicator = error\n      outputs = none\n    [../]\n    \n  [../]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/21742",
          "updatedAt": "2022-08-13T16:06:00Z",
          "publishedAt": "2022-08-01T22:17:16Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIt could be multiple things. Here are a few things I could see as issues\n\nThe rel_tol of 1e-6 on non-linear can be very coarse for some problems. Typically you would want to look at adding automatic scaling to make sure (a little bit, you still need to verify yourself) you are converged for all variables in the simulation\nThe vast differences in cell sizes can be an issue for some physics. Maybe you should limit the adaptivity more to see if you can get a solution. You may need to refine the time step to be able to handle very small cells (again, depends on the pjysics)\nThe max number of iterations in your solve are small, so the solver does not get a lot of iterations to try to converge the problem before declaring a solve failure. You will want to raise both of these 10x to see if it can do better with more iterations\n\n  nl_max_its=10\n  l_max_its=10\n\nFinally, if you have coded your Jacobian well, you should give the Newton method a try instead of PJFNK. It usually converges better\nHope this helps,\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21742#discussioncomment-3303241",
                  "updatedAt": "2022-08-02T00:34:44Z",
                  "publishedAt": "2022-08-02T00:34:13Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to adjust height of a cylinder",
          "author": {
            "login": "Sam777Sam"
          },
          "bodyText": "Hi,\nI am using the \"file=cyl-tet.e\" as my mesh. However the height of the cylinder is given as 5 cm and I would like to make it 15 cm. How can I do that? also is there a link would elaborate more about mesh adjustments? Your help is appreciated. Thank you!\nRegards,\nSam",
          "url": "https://github.com/idaholab/moose/discussions/21715",
          "updatedAt": "2022-08-13T16:09:41Z",
          "publishedAt": "2022-07-28T19:15:46Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nthere s a few ways you could do this. You could load the file several times and stitch it top to bottom\nyou could generate a 2D circle then extrude it.\nPlease look at our mesh generators to find the basic operations you can use to generate cylinders\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21715#discussioncomment-3273326",
                  "updatedAt": "2022-07-28T20:07:04Z",
                  "publishedAt": "2022-07-28T20:07:03Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Sam777Sam"
                          },
                          "bodyText": "Thank you Guillaume!\n1- I'm using ParaView program to open the \"file=cyl-tet.e\" and I couldn't  stich it top to bottom. How can I do that? and do you suggest me to use another program to do that (what is the best program for editing the shapes)?\n2- Also, I did the 2D circle which is same as the rectangular one. I was following a 2D circle example in Moose and here is my code for the mesh:\n[Mesh]\ntype = GeneratedMesh\nxmin = 0.0\nymin = 0.0\nxmax = 0.5\nymax = 15\nnx = 5\nny = 150\n[]\nIs this correct? and does the Moose understand that this is a circle not a rectangle?\n3- I looked at the mesh generators and unfortunately things doesn't seem clear to me, is there a good source or videos talking about mesh adjustments and what kind of functions that can be added in order to edit the meshes.\nI'm new to Moose and your help is highly appreciated. Thank you for your time!\nBest,\nSam",
                          "url": "https://github.com/idaholab/moose/discussions/21715#discussioncomment-3293038",
                          "updatedAt": "2022-07-31T22:30:05Z",
                          "publishedAt": "2022-07-31T22:30:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\n\n\nTo stitch you may use MOOSE mesh generators. I dont know how to do this with paraview.\n\n\nThis is not a circle mesh, this is a rectangle mesh. I recommend you look more at the mesh generator system:\nhttps://mooseframework.inl.gov/syntax/Mesh/index.html#20d24524-c90b-462f-b4da-e1208cc17dcb\n\n\nyou may generate a circle with this one:\nhttps://mooseframework.inl.gov/source/meshgenerators/ConcentricCircleMeshGenerator.html\nYou should try to run some of the inputs in moose/test/tests/mesh_generators to get familiar with that system. Go in each folder, run the input and look at the output exodus to see what the mesh generators (nested in the [Mesh] block) did\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/21715#discussioncomment-3298598",
                          "updatedAt": "2022-08-01T14:22:56Z",
                          "publishedAt": "2022-08-01T14:22:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Libmesh compilation failed on HPC",
          "author": {
            "login": "aashiquear"
          },
          "bodyText": "I am using the following to setup MOOSE on HPC,\ngcc 9.3.1\npython 3.6.5\ncmake 3.22.3\nopenmpi-gnu 3.1\nAfter PETSc compilation I am getting the following error during libmesh compilation,\n../../tests/mesh/mesh_triangulation.C: In member function \u2018void MeshTriangulationTest::testTriangulatorBase(libMesh::MeshBase&, libMesh::TriangulatorInterface&)\u2019: ../../tests/mesh/mesh_triangulation.C:148:9: error: \u2018CPPUNIT_ASSERT_GREATER\u2019 was not declared in this scope; did you mean \u2018CPPUNIT_ASSERT_EQUAL\u2019? 148 |         CPPUNIT_ASSERT_GREATER(Real(0), cross_prod(2)); |         ^~~~~~~~~~~~~~~~~~~~~~ |         CPPUNIT_ASSERT_EQUAL\nHow can I resolve the setup?",
          "url": "https://github.com/idaholab/moose/discussions/21727",
          "updatedAt": "2022-08-13T16:11:27Z",
          "publishedAt": "2022-07-29T21:38:52Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDid you update recently?\nSeems you have an old CPPUNIT with a recent libmesh\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21727#discussioncomment-3289153",
                  "updatedAt": "2022-07-31T04:30:51Z",
                  "publishedAt": "2022-07-31T04:30:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Difficulty in Convergence of Fluid in Conjugate Heat Transfer",
          "author": {
            "login": "Krystalfang"
          },
          "bodyText": "Dear experts\uff0c\nI'm recently trying to make a model of a cold plate with heat sources, radiant elements, power, cold plate, S-shaped channel. This is about 33w grids. I want to achieve fluid-heat coupling via conjugate heat transfer.\n\nHowever, in the calculation process, I found that nonlinear iteration is difficult to converge, but linear iteration is easy to converge. Basically, each step of nonlinear iteration can only be calculated in two steps before jumping out of the loop, and the decline rate can reach 10-8. And the nonlinear The main problem of iteration focuses on the fluid. When I do a rough mesh, the fluid doesn't have that much mesh and it converges very quickly.\n\n# Fluid properties\nmu = 0.001   # Pa*s\nrho = 998.2    #kg/m3\ncp = 4128      #j/kg-k\nk = 0.6     #w/m-k\n\n\n[Mesh]\n  type = FileMesh #Read in mesh from file\n  file = liure2.e\n[]\n\n\n[Variables]\n   [T_s]\n    block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18'\n    initial_condition = 293\n  []\n  [T1]\n    block = '2'\n    initial_condition = 293\n  []\n   [./velocity]\n    family = LAGRANGE_VEC\n    block='2'\n  [../]\n  [./p]\n    order = FIRST\n    family = LAGRANGE\n    block='2'\n  [../]\n[]\n\n[ICs]\n  [velocity]\n    type = VectorConstantIC\n    x_value = 1e-15\n    y_value = 1\n    z_value = 1e-15\n    variable = velocity\n  []\n[]\n\n\n[Kernels]\n  # Diffusion kernel for each block's variable\n  [diff_0]\n    type = ADHeatConduction\n    variable = T_s\n    block ='1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18'\n  []\n  [fluid_conduction]\n    type = ADHeatConduction\n    variable = T1\n    block = '2'\n    thermal_conductivity = 'k'\n  []\n  [source]\n    type = HeatSource\n    variable = T_s\n    value = 1e8\n    block ='3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18'\n  []\n\n [./mass]\n    type = INSADMass\n    variable = p\n  [../]\n  [./mass_pspg]\n    type = INSADMassPSPG\n    variable = p\n  [../]\n  [./momentum_convection]\n    type = INSADMomentumAdvection\n    variable = velocity\n  [../]\n  [./momentum_viscous]\n    type = INSADMomentumViscous\n    variable = velocity\n  [../]\n  [./momentum_pressure]\n    type = INSADMomentumPressure\n    variable = velocity\n    pressure = p\n    integrate_p_by_parts = true\n  [../]\n  [./momentum_supg]\n    type = INSADMomentumSUPG\n    variable = velocity\n    velocity = velocity\n  [../]\n [./temperature_advection]\n   type = INSADEnergyAdvection\n   variable = T1\n [../]\n  [temperature_supg]\n    type = INSADEnergySUPG\n    variable = T1\n    velocity = velocity\n  []\n[]\n\n[InterfaceKernels]\n   [fluid_to_plate_10]\n    type = ConjugateHeatTransfer\n    variable = T1\n    T_fluid = T1\n    neighbor_var = 'T_s'\n    boundary = '2'\n    htc = 5000\n  []\n[]\n\n[AuxVariables]\n  [T]\n  []\n[]\n\n[AuxKernels]\n  [temp_0]\n    type = NormalizationAux\n    variable = T\n    source_variable = T_s\n    block = '1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18'\n  []\n  [temp_1]\n    type = NormalizationAux\n    variable = T\n    source_variable = T1\n    block = '2'\n  []\n[]\n\n[BCs]\n [./plane_wall]#PCB\n  type = ADConvectiveHeatFluxBC\n  variable = T_s\n  boundary = '1'\n  T_infinity = 293\n  heat_transfer_coefficient = 7.62\n  [../]\n  [./vec_inlet]\n    type = VectorFunctionDirichletBC\n    variable = velocity\n    boundary = '3'\n    function_y = 1  #m/s\n  [../]\n  [./inlet_temp]\n    type = DirichletBC\n    variable =T1\n    boundary = '3'\n    value = 293\n  [../]\n  [./outlet_p]\n    type = DirichletBC\n    variable = p\n    boundary = '4'\n    value = 0\n  [../]\n[]\n\n[Materials]\n  [./const_fluid]\n    type = ADGenericConstantMaterial\n    prop_names = 'rho mu cp k'\n    prop_values = '${rho} ${mu}  ${cp}  ${k}'\n    block = '2'\n  [../]\n  [ins_mat]\n    type = INSADStabilized3Eqn\n    velocity = velocity\n    pressure = p\n    temperature = T1\n    block='2'\n  []\n\n  [./plate]\n    type = ADHeatConductionMaterial\n    thermal_conductivity = 202.4    # W/m k\n    specific_heat = 871  # J/kg k\n    block = '1'\n  [../]\n\n  [./fluid]\n    type = ADHeatConductionMaterial\n    thermal_conductivity = .6  # W/m k\n    specific_heat = 4128    # J/kg K\n    block = '2'\n  [../]\n\n\n  [./source]\n    type = ADHeatConductionMaterial\n    thermal_conductivity = 54    # W/m k\n    specific_heat = 330    # J/kg k\n    block = '3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18'\n  [../]\n[]\n\n[Preconditioning]\n  [Newton_SMP]\n    type = SMP\n    full = true\n    petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n    petsc_options_value = ' lu       mumps'\n    solve_type = 'NEWTON'\n  []\n[]\n\n[Executioner]\n  type = Steady\n  l_max_its = 5\n  nl_max_its =1000\n  nl_rel_tol = 1e-8\n  l_tol = 1e-5\n  petsc_options_iname = '-pc_type -pc_factor_mat_solver_package -ksp_gmres_restart'\n  petsc_options_value = 'lu       superlu_dist                  200'\n  automatic_scaling = true\n  scheme = bdf2\n[]\n[Debug]\n  show_var_residual_norms = true\n[]\n\n[Outputs]\n  exodus = true\n  file_base = liure_out3\n  perf_graph = true\n[]\n\nAlso, what does the htc stand for in conjugate heat transfer, since it seems to me that conjugate heat transfer doesn't require the definition of the convective heat transfer coefficient, I'm confused",
          "url": "https://github.com/idaholab/moose/discussions/21605",
          "updatedAt": "2022-07-29T14:11:16Z",
          "publishedAt": "2022-07-18T01:53:26Z",
          "category": {
            "name": "Q&A Modules: Navier-Stokes"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI would try reducing the flow rate to make it an easier problem and see if you can get convergence\nYou can also turn remove part of the physics, like the conjugate heat transfer, and see if you get better convergence that way\nlinear convergence working fine is not surprising given that you are using LU, a direct method.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21605#discussioncomment-3271259",
                  "updatedAt": "2022-07-28T16:24:56Z",
                  "publishedAt": "2022-07-28T16:24:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Krystalfang"
                  },
                  "bodyText": "Hi Guillaume\nThank you very much for your reply, I think your statement is correct. I have also tried this recently, and I found that when I set the flow rate to 0.1m/s, MOOSE can converge, but when I try to adjust the flow rate to 0.5m/s, it does not converge and appears the following question:\n\nThis problem is also encountered in general simulation software, but how to solve this problem in MOOSE,because the flow velocity required by this model is 2.6m/s. I would like to hear your suggestions.\nIn addition, as to what you said to remove the conjugate coupling module, I will try further.\nKrystal",
                  "url": "https://github.com/idaholab/moose/discussions/21605#discussioncomment-3276461",
                  "updatedAt": "2022-07-29T02:16:29Z",
                  "publishedAt": "2022-07-29T02:16:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "For a zero pivot error, you should add this parameter to your preconditioning\n-pc_factor_shift\nNONZERO\nYou can also experiment with different LU solver packages",
                          "url": "https://github.com/idaholab/moose/discussions/21605#discussioncomment-3281021",
                          "updatedAt": "2022-07-29T14:11:17Z",
                          "publishedAt": "2022-07-29T14:11:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Visualizing State Variable from Abaqus UMAT Interface",
          "author": {
            "login": "edwardXZ06"
          },
          "bodyText": "I have successfully run a Neo-Hookean umat and a hyperelastic model with Mullin effects umat, both of which work great and save me tons of time developing the relevant material model in C++ separately. Right now, I really like this interface, while I think it can be further improved by adding the feature of visualizing state variables (STATEV).\nInspecting user-defined state variables is usually more important than reviewing only the total stress/strain in terms of constitutive model development. I am not sure if it is easy to pass STATEV information from materials module to Auxkernals for visualization purpose?\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/18651",
          "updatedAt": "2022-07-29T11:07:07Z",
          "publishedAt": "2021-08-09T16:36:00Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "This is super easy using a MaterialStdVectorAux AuxKernel. This object allows you to pick a component from the state variable vector property to visualize it.",
                  "url": "https://github.com/idaholab/moose/discussions/18651#discussioncomment-1209729",
                  "updatedAt": "2022-06-29T04:38:49Z",
                  "publishedAt": "2021-08-20T03:17:06Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Traiwit"
                  },
                  "bodyText": "Hi @edwardXZ06 and @dschwen are those UMAT available anywhere online, I'm just curious how to implement them into moose?\nis it simply just use AbaqusUMATStress under [Materials]? is there any other section that I need to consider?\n  [constant]\n    type = AbaqusUMATStress\n    #                      Young's modulus,  Poisson's Ratio, Yield, Hardening\n    constant_properties = '1000 0.3 10 100'\n    plugin = ../../plugins/xxxxxx ##(UMAT file)\n    num_state_vars = 3\n  []\n\nThanks guys!",
                  "url": "https://github.com/idaholab/moose/discussions/18651#discussioncomment-1219857",
                  "updatedAt": "2022-06-29T04:39:06Z",
                  "publishedAt": "2021-08-22T23:49:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "afaik yes",
                          "url": "https://github.com/idaholab/moose/discussions/18651#discussioncomment-1359945",
                          "updatedAt": "2022-06-29T04:39:06Z",
                          "publishedAt": "2021-09-21T00:31:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "BilelELLAFI"
                  },
                  "bodyText": "Hello Mr edrwarXZ06\nCould tout please send me the python code of Neo-Hookean umat and a hyperelastic model with Mullin effects umat ?\nThanks",
                  "url": "https://github.com/idaholab/moose/discussions/18651#discussioncomment-3279497",
                  "updatedAt": "2022-07-29T11:07:07Z",
                  "publishedAt": "2022-07-29T11:07:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Postprocessing: compute a residual like quantity with assembly",
          "author": {
            "login": "rcontinuum"
          },
          "bodyText": "Hello,\nI'm using the TotalLagrangianStressDivergence Kernel with the NeoHookean material model. After each time step I want to compute in a postprocessing step a nodal residual like quantity\n$R^\\alpha = \\int_V T_{iK}\\phi^\\alpha_{i,K}  dV$\nwith $T$ a stress tensor (not the PK1!) on element level and then assemble the element vector (a type of element \"internal\" force vector) to a global vector, e.g. an [AuxVariable]. I want to be able to do postprocessing with this global nodal vector and write it to a exodus file. Again: this computation does not contribute to the residual of the system of nonlinear equations. It is just postprocessing.\nIf I understand correct then, but I'm quite new to MOOSE, [AuxKernel] does not give me access to the gradient of the test functions nor to the assembly function.\nThus, conceptually, I would like to have an [AuxKernel] that is like an [Kernel] but does assemble into a user-defined nodal  [AuxVariable].\nAny idea how to do this?\nFrom the Kernel.C code\nhttps://mooseframework.inl.gov/docs/doxygen/moose/Kernel_8C_source.html\n90  void\n91  Kernel::computeResidual()\n92  {\n93  prepareVectorTag(_assembly, _var.number());\n94 \n95  precalculateResidual();\n96  for (_i = 0; _i < _test.size(); _i++)\n97    for (_qp = 0; _qp < _qrule->n_points(); _qp++)\n98      _local_re(_i) += _JxW[_qp] * _coord[_qp] * computeQpResidual();\n99 \n100  accumulateTaggedLocalResidual();\n\nbut the assembly should go to a nodal [AuxVariable] defined in the input file  and not contribute to the global residual.\nAdditionally, I would have to compute in computeQpResidual() or name it  computeQpAuxResidual() my stress $T_{iK}$\nKernel::computeResidual() is called by LagrangianStressDivergenceBase in\nhttps://mooseframework.inl.gov/docs/doxygen/modules/LagrangianStressDivergenceBase_8C_source.html\n75  void\n76  LagrangianStressDivergenceBase::computeResidual()\n77  {\n78    precalculateResidual();\n79    Kernel::computeResidual();\n80  }",
          "url": "https://github.com/idaholab/moose/discussions/21677",
          "updatedAt": "2022-07-29T09:17:36Z",
          "publishedAt": "2022-07-25T12:20:41Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI think the easiest way to do this will be to use the tagging interface\nhttps://mooseframework.inl.gov/framework_development/tagging.html\nWhile computing your kernels, store this quantity in a tagged vector then it can be retrieved by the postprocessors system later\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21677#discussioncomment-3223673",
                  "updatedAt": "2022-07-25T15:38:14Z",
                  "publishedAt": "2022-07-25T15:38:13Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "rcontinuum"
                          },
                          "bodyText": "Dear Guillaume,\nthank you for this hint. I got it running.\nCheers",
                          "url": "https://github.com/idaholab/moose/discussions/21677#discussioncomment-3278793",
                          "updatedAt": "2022-07-29T09:17:36Z",
                          "publishedAt": "2022-07-29T09:17:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "#Include boost",
          "author": {
            "login": "brandon-barclay"
          },
          "bodyText": "Hello, I am trying to use some functions from the BOOST library and running into compile errors. When i try to #include the boost files from the library i get \"file not found\" errors, however when I put the source files directly into the src directory I get a ton of redefinition errors as boost is used in libmesh. Is there a better way to get the code to link against boost?\nThanks for your help.",
          "url": "https://github.com/idaholab/moose/discussions/21644",
          "updatedAt": "2022-08-13T16:11:38Z",
          "publishedAt": "2022-07-20T18:54:02Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "brandon-barclay"
                  },
                  "bodyText": "This is the error message :\n> school@b-mbp \ue0b0 ~/projects/dep \ue0b0 \ue0a0 master \u00b1 \ue0b0 make -j 4\nCompiling C++ (in opt mode) /Users/school/projects/dep/build/unity_src/materials_Unity.C...\nIn file included from /Users/school/projects/dep/build/unity_src/materials_Unity.C:2:\nIn file included from /Users/school/projects/dep/src/materials/Air.C:2:\nIn file included from /Users/school/mambaforge3/envs/moose/libmesh/include/boost/algorithm/string/split.hpp:16:\nIn file included from /Users/school/mambaforge3/envs/moose/libmesh/include/boost/algorithm/string/iter_find.hpp:27:\nIn file included from /Users/school/mambaforge3/envs/moose/libmesh/include/boost/algorithm/string/find_iterator.hpp:24:\nIn file included from /Users/school/mambaforge3/envs/moose/libmesh/include/boost/algorithm/string/detail/find_iterator.hpp:18:\nIn file included from /Users/school/mambaforge3/envs/moose/libmesh/include/boost/function.hpp:24:\nIn file included from /Users/school/mambaforge3/envs/moose/libmesh/include/boost/function/detail/prologue.hpp:18:\nIn file included from /Users/school/mambaforge3/envs/moose/libmesh/include/boost/mem_fn.hpp:22:\nIn file included from /Users/school/mambaforge3/envs/moose/libmesh/include/boost/bind/mem_fn.hpp:25:\n/Users/school/mambaforge3/envs/moose/libmesh/include/boost/get_pointer.hpp:48:23: error: redefinition of 'get_pointer' as different kind of symbol\ntemplate<class T> T * get_pointer(std::auto_ptr<T> const& p)\n                     ^\n/Users/school/mambaforge3/envs/moose/libmesh/include/boost/get_pointer.hpp:20:23: note: previous definition is here\ntemplate<class T> T * get_pointer(T * p)\n                     ^\n/Users/school/mambaforge3/envs/moose/libmesh/include/boost/get_pointer.hpp:48:40: error: no member named 'auto_ptr' in namespace 'std'\ntemplate<class T> T * get_pointer(std::auto_ptr<T> const& p)\n                                 ~~~~~^\n/Users/school/mambaforge3/envs/moose/libmesh/include/boost/get_pointer.hpp:48:49: error: 'T' does not refer to a value\ntemplate<class T> T * get_pointer(std::auto_ptr<T> const& p)\n                                               ^\n/Users/school/mambaforge3/envs/moose/libmesh/include/boost/get_pointer.hpp:48:16: note: declared here\ntemplate<class T> T * get_pointer(std::auto_ptr<T> const& p)\n              ^\n/Users/school/mambaforge3/envs/moose/libmesh/include/boost/get_pointer.hpp:48:52: error: expected expression\ntemplate<class T> T * get_pointer(std::auto_ptr<T> const& p)\n                                                  ^\n/Users/school/mambaforge3/envs/moose/libmesh/include/boost/get_pointer.hpp:48:61: error: expected ';' at end of declaration\ntemplate<class T> T * get_pointer(std::auto_ptr<T> const& p)\n                                                           ^\n                                                           ;\n/Users/school/mambaforge3/envs/moose/libmesh/include/boost/get_pointer.hpp:49:1: error: expected unqualified-id\n{\n^\nIn file included from /Users/school/projects/dep/build/unity_src/materials_Unity.C:2:\n/Users/school/projects/dep/src/materials/Air.C:49:57: error: no member named 'is_any_of' in namespace 'boost'\n     boost::algorithm::split( split_line, line, boost::is_any_of( \" ,\" ) );\n                                                ~~~~~~~^\n/Users/school/projects/dep/src/materials/Air.C:55:19: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::vector<double>')\n       std::cout << split_line_double ;\n       ~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/cstddef:143:3: note: candidate function template not viable: no known conversion from 'std::ostream' (aka 'basic_ostream<char>') to 'std::byte' for 1st argument\n operator<< (byte  __lhs, _Integer __shift) noexcept\n ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:756:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'char' for 2nd argument\noperator<<(basic_ostream<_CharT, _Traits>& __os, char __cn)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:789:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'char' for 2nd argument\noperator<<(basic_ostream<char, _Traits>& __os, char __c)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:796:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'signed char' for 2nd argument\noperator<<(basic_ostream<char, _Traits>& __os, signed char __c)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:803:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'unsigned char' for 2nd argument\noperator<<(basic_ostream<char, _Traits>& __os, unsigned char __c)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:817:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'const char *' for 2nd argument\noperator<<(basic_ostream<_CharT, _Traits>& __os, const char* __strn)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:863:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'const char *' for 2nd argument\noperator<<(basic_ostream<char, _Traits>& __os, const char* __str)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:870:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'const signed char *' for 2nd argument\noperator<<(basic_ostream<char, _Traits>& __os, const signed char* __str)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:878:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'const unsigned char *' for 2nd argument\noperator<<(basic_ostream<char, _Traits>& __os, const unsigned char* __str)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:1063:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'const std::error_code' for 2nd argument\noperator<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __ec)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/thread:215:1: note: candidate function template not viable: no known conversion from 'std::vector<double>' to 'std::__thread_id' for 2nd argument\noperator<<(basic_ostream<_CharT, _Traits>& __os, __thread_id __id)\n^\n/Users/school/mambaforge3/envs/moose/libmesh/include/libmesh/parameters.h:381:16: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'const libMesh::Parameters' for 2nd argument\nstd::ostream & operator << (std::ostream & os, const Parameters & p)\n              ^\n/Users/school/mambaforge3/envs/moose/libmesh/include/libmesh/node.h:229:16: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'const libMesh::Node' for 2nd argument\nstd::ostream & operator << (std::ostream & os, const Node & n)\n              ^\n/Users/school/mambaforge3/envs/moose/libmesh/include/libmesh/elem.h:2123:16: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'const libMesh::Elem' for 2nd argument\nstd::ostream & operator << (std::ostream & os, const Elem & e)\n              ^\n/Users/school/mambaforge3/envs/moose/libmesh/include/libmesh/fe_type.h:168:23: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'const libMesh::OrderWrapper' for 2nd argument\ninline std::ostream & operator << (std::ostream & os, const OrderWrapper & order)\n                     ^\n/Users/school/projects/moose/framework/build/header_symlinks/ReporterName.h:158:16: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'const ReporterName' for 2nd argument\nstd::ostream & operator<<(std::ostream & os, const ReporterName & state);\n              ^\n/Users/school/projects/moose/framework/build/header_symlinks/Attributes.h:44:16: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'Interfaces &' for 2nd argument\nstd::ostream & operator<<(std::ostream & os, Interfaces & iface);\n              ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:749:1: note: candidate template ignored: deduced conflicting types for parameter '_CharT' ('char' vs. 'std::vector<double>')\noperator<<(basic_ostream<_CharT, _Traits>& __os, _CharT __c)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/__random/uniform_int_distribution.h:256:1: note: candidate template ignored: could not match 'uniform_int_distribution' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os,\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:810:1: note: candidate template ignored: could not match 'const _CharT *' against 'std::vector<double>'\noperator<<(basic_ostream<_CharT, _Traits>& __os, const _CharT* __str)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:1046:1: note: candidate template ignored: could not match 'basic_string' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os,\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:1054:1: note: candidate template ignored: could not match 'basic_string_view' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os,\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:1071:1: note: candidate template ignored: could not match 'shared_ptr' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os, shared_ptr<_Yp> const& __p)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:1090:1: note: candidate template ignored: could not match 'bitset' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os, const bitset<_Size>& __x)\n^\n/Users/school/projects/moose/framework/build/header_symlinks/MooseError.h:41:1: note: candidate template ignored: could not match 'tuple' against 'vector'\noperator<<(std::ostream & os, const std::tuple<T...> & tup)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:1038:11: note: candidate template ignored: requirement 'integral_constant<bool, false>::value' was not satisfied [with _Stream = std::ostream &, _Tp = std::vector<double>]\n_Stream&& operator<<(_Stream&& __os, const _Tp& __x)\n         ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:1083:1: note: candidate template ignored: could not match 'unique_ptr' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os, unique_ptr<_Yp, _Dp> const& __p)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/complex:1440:1: note: candidate template ignored: could not match 'complex' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os, const complex<_Tp>& __x)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/iomanip:362:1: note: candidate template ignored: could not match '__iom_t8' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os, const __iom_t8<_MoneyT>& __x)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/iomanip:482:1: note: candidate template ignored: could not match '__iom_t10' against 'vector'\noperator<<(basic_ostream<_CharT, _Traits>& __os, const __iom_t10<_CharT>& __x)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/iomanip:572:33: note: candidate template ignored: could not match '__quoted_output_proxy' against 'vector'\nbasic_ostream<_CharT, _Traits>& operator<<(\n                               ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/iomanip:592:33: note: candidate template ignored: could not match '__quoted_proxy' against 'vector'\nbasic_ostream<_CharT, _Traits>& operator<<(\n                               ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/valarray:4160:1: note: candidate template ignored: substitution failure [with _Expr1 = std::ostream, _Expr2 = std::vector<double>]: no type named 'value_type' in 'std::ostream'\noperator<<(const _Expr1& __x, const _Expr2& __y)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/valarray:4175:1: note: candidate template ignored: substitution failure [with _Expr = std::ostream]: no type named 'value_type' in 'std::ostream'\noperator<<(const _Expr& __x, const typename _Expr::value_type& __y)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/valarray:4191:1: note: candidate template ignored: requirement '__is_val_expr<std::vector<double, std::allocator<double>>>::value' was not satisfied [with _Expr = std::vector<double>]\noperator<<(const typename _Expr::value_type& __x, const _Expr& __y)\n^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:189:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'std::ostream &(*)(std::ostream &)' for 1st argument\n   basic_ostream& operator<<(basic_ostream& (*__pf)(basic_ostream&))\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:193:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'basic_ios<std::basic_ostream<char>::char_type> &(*)(basic_ios<std::basic_ostream<char>::char_type> &)' (aka 'basic_ios<char> &(*)(basic_ios<char> &)') for 1st argument\n   basic_ostream& operator<<(basic_ios<char_type, traits_type>&\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:198:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'std::ios_base &(*)(std::ios_base &)' for 1st argument\n   basic_ostream& operator<<(ios_base& (*__pf)(ios_base&))\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:201:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'bool' for 1st argument\n   basic_ostream& operator<<(bool __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:202:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'short' for 1st argument\n   basic_ostream& operator<<(short __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:203:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'unsigned short' for 1st argument\n   basic_ostream& operator<<(unsigned short __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:204:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'int' for 1st argument\n   basic_ostream& operator<<(int __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:205:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'unsigned int' for 1st argument\n   basic_ostream& operator<<(unsigned int __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:206:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'long' for 1st argument\n   basic_ostream& operator<<(long __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:207:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'unsigned long' for 1st argument\n   basic_ostream& operator<<(unsigned long __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:208:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'long long' for 1st argument\n   basic_ostream& operator<<(long long __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:209:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'unsigned long long' for 1st argument\n   basic_ostream& operator<<(unsigned long long __n);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:210:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'float' for 1st argument\n   basic_ostream& operator<<(float __f);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:211:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'double' for 1st argument\n   basic_ostream& operator<<(double __f);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:212:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'long double' for 1st argument\n   basic_ostream& operator<<(long double __f);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:213:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'const void *' for 1st argument; take the address of the argument with &\n   basic_ostream& operator<<(const void* __p);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:222:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'basic_streambuf<std::basic_ostream<char>::char_type> *' (aka 'basic_streambuf<char> *') for 1st argument\n   basic_ostream& operator<<(basic_streambuf<char_type, traits_type>* __sb);\n                  ^\n/Users/school/mambaforge3/envs/moose/bin/../include/c++/v1/ostream:225:20: note: candidate function not viable: no known conversion from 'std::vector<double>' to 'std::nullptr_t' (aka 'nullptr_t') for 1st argument\n   basic_ostream& operator<<(nullptr_t)\n                  ^\n8 errors generated.\nmake: *** [/Users/school/projects/moose/framework/build.mk:145: /Users/school/projects/dep/build/unity_src/materials_Unity.x86_64-apple-darwin13.4.0.opt.lo] Error 1\n\u2718 school@b-mbp \ue0b0 ~/projects/dep \ue0b0 \ue0a0 master \u00b1 \ue0b0",
                  "url": "https://github.com/idaholab/moose/discussions/21644#discussioncomment-3192104",
                  "updatedAt": "2022-07-21T18:30:55Z",
                  "publishedAt": "2022-07-20T19:03:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@permcody do we know anyone including boost like this who we may tag",
                  "url": "https://github.com/idaholab/moose/discussions/21644#discussioncomment-3271215",
                  "updatedAt": "2022-07-28T16:20:10Z",
                  "publishedAt": "2022-07-28T16:20:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "You can point libmesh to an external boost directory while compiling libmesh.",
                  "url": "https://github.com/idaholab/moose/discussions/21644#discussioncomment-3272801",
                  "updatedAt": "2022-07-28T18:39:59Z",
                  "publishedAt": "2022-07-28T18:39:58Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "MOOSE website not working",
          "author": {
            "login": "Samin-Moghimiasl"
          },
          "bodyText": "Hi all,\nMOOSE website has been down for a couple of hours now. Is anyone else having the same issues? Any ideas of when this can be resolved?\nMany thanks,\nSamin",
          "url": "https://github.com/idaholab/moose/discussions/21686",
          "updatedAt": "2022-07-28T12:49:24Z",
          "publishedAt": "2022-07-26T10:32:59Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWe are aware of this, it's due to testing infrastructure migration. We are working with INL infrastructure to bring it back online. It should be back now or very soon\nEDIT: should be working now\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21686#discussioncomment-3232447",
                  "updatedAt": "2022-07-26T15:42:09Z",
                  "publishedAt": "2022-07-26T15:36:24Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "cticenhour"
                  },
                  "bodyText": "The migration was completed, and https://mooseframework.inl.gov/ is back online.",
                  "url": "https://github.com/idaholab/moose/discussions/21686#discussioncomment-3265067",
                  "updatedAt": "2022-07-27T22:33:39Z",
                  "publishedAt": "2022-07-27T22:33:38Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Hmmm, i still can't connect, and my PRs isn't testing properly either.  Do i have to do something special, eg, to activate the code coverage on PRs?  Other PRs, eg, #21699 , seem to work OK.",
                  "url": "https://github.com/idaholab/moose/discussions/21686#discussioncomment-3266614",
                  "updatedAt": "2022-07-28T05:08:15Z",
                  "publishedAt": "2022-07-28T05:08:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "cticenhour"
                          },
                          "bodyText": "Looks like https://civet.inl.gov is down again, but was working earlier. So that's why the webhook governing the CI connection isn't working for PRs right now.\nTagging @loganharbour @milljm",
                          "url": "https://github.com/idaholab/moose/discussions/21686#discussioncomment-3266712",
                          "updatedAt": "2022-07-28T05:26:38Z",
                          "publishedAt": "2022-07-28T05:26:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "When civet was down, the hook from GitHub that told it a PR was created/updated would not complete. This was unfortunately intentional as we were transitioning to a new server and we had to pause all writes to history on civet.\nThe easiest way to force a new hook for a PR is to rewrite history for the last commit:\ngit commit --amend --no-edit\ngit push --force\n\nthis will basically edit the last commit, changing its date to now. With \u201cnew\u201d commits, a push will trigger a new event.",
                          "url": "https://github.com/idaholab/moose/discussions/21686#discussioncomment-3266879",
                          "updatedAt": "2022-07-28T06:01:30Z",
                          "publishedAt": "2022-07-28T06:00:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Thank you @loganharbour and @cticenhour .  I bet when i wake up tomorrow everything will be hunky dorey.",
                          "url": "https://github.com/idaholab/moose/discussions/21686#discussioncomment-3267959",
                          "updatedAt": "2022-07-28T08:59:29Z",
                          "publishedAt": "2022-07-28T08:59:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Still down. Wonder what happened... Ticket submitted.",
                          "url": "https://github.com/idaholab/moose/discussions/21686#discussioncomment-3269464",
                          "updatedAt": "2022-07-28T12:49:25Z",
                          "publishedAt": "2022-07-28T12:49:24Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PorousFlow - Simulation diverged",
          "author": {
            "login": "josebastiase"
          },
          "bodyText": "Hi all,\nI got a hydro-Mechanical simulation on PorousFlow that diverges even though the residuals are decreasing. As shown here\nTime Step 2, time = 2.1, dt = 1.1\n0 Nonlinear |R| = 9.898234e+06\n0 Linear |R| = 9.898234e+06\n1 Linear |R| = 7.617497e-09\n1 Nonlinear |R| = 7.288478e+00\n0 Linear |R| = 7.288478e+00\n1 Linear |R| = 5.361864e-11\n2 Nonlinear |R| = 3.644174e+00\n0 Linear |R| = 3.644174e+00\n1 Linear |R| = 1.679125e-11\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 2\nSolve Did NOT Converge!\nAborting as solve did not converge\nI am coupling PorousFlow variables to several ODE Kernels. The poor convergence comes from there.\nMy preconditioner\n[Preconditioning]\n[lu]\ntype = SMP\nfull = true\npetsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\npetsc_options_value = ' lu       mumps'\n[]\n[]\nthanks in advance!\nJose",
          "url": "https://github.com/idaholab/moose/discussions/21708",
          "updatedAt": "2022-07-28T12:48:28Z",
          "publishedAt": "2022-07-28T09:41:55Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "maxnezdyur"
                  },
                  "bodyText": "Not sure if this will help. But in the executioner block try line_search = 'none' or line_search = 'bt' . I sometimes have problems with the default line_search option.",
                  "url": "https://github.com/idaholab/moose/discussions/21708#discussioncomment-3268654",
                  "updatedAt": "2022-07-28T10:41:54Z",
                  "publishedAt": "2022-07-28T10:41:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "josebastiase"
                          },
                          "bodyText": "Thanks! line_search = 'none' worked. Also scaling reduce the initial residuals.\nCheers!\nJose",
                          "url": "https://github.com/idaholab/moose/discussions/21708#discussioncomment-3269454",
                          "updatedAt": "2022-07-28T12:48:27Z",
                          "publishedAt": "2022-07-28T12:48:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Non-contact grid on navier-stokes",
          "author": {
            "login": "AdelineHunter"
          },
          "bodyText": "Hi,\nMay I ask if MOOSE can complete the flow calculation on the non_contact grid? In fact, for heat conduction problem MOOSE can solve on the non-contact grid.\n\nThanks.",
          "url": "https://github.com/idaholab/moose/discussions/21706",
          "updatedAt": "2022-08-13T16:11:47Z",
          "publishedAt": "2022-07-28T02:40:48Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nno we don\u2019t. We re adding support for it right now, but we re doing a radiation interface not a convection interface.\nYou really should make a conforming mesh, it seems to me there is no reason not to here?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/21706#discussioncomment-3266196",
                  "updatedAt": "2022-07-28T03:20:21Z",
                  "publishedAt": "2022-07-28T03:20:20Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}