{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQxMTowNzowMy0wNTowMM4AbWkn"
    },
    "edges": [
      {
        "node": {
          "title": "Moose-language-support errors after version 1.0",
          "author": {
            "login": "xiekai-mc"
          },
          "bodyText": "I've encountered an issue after upgrading moose-language-support to version 1.0 and above.\n\nDo you have any idea what might be causing this issue. How I could resolve it?",
          "url": "https://github.com/idaholab/moose/discussions/28677",
          "updatedAt": "2024-09-21T23:09:36Z",
          "publishedAt": "2024-09-21T10:18:21Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIt looks like the version of the language server is requesting content that moose is not producing.\nYou can try updating moose, or you can to downgrade the version of the moose-language-support extension.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28677#discussioncomment-10712700",
                  "updatedAt": "2024-09-21T12:47:48Z",
                  "publishedAt": "2024-09-21T12:47:47Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Running into issue with update libmesh script on HPC",
          "author": {
            "login": "TheGreatCid"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nI am trying to run update_and_rebuild_libmesh.sh on an HPC and I am running into the following error:\nI for src/utilities/include/timpi/timpi_config.h.tmp defines\nconfig.status: executing depfiles commands\nconfig.status: error: in `/ascldap/users/detorre/raccoon/moose/libmesh/build/contrib/timpi':\nconfig.status: error: Something went wrong bootstrapping makefile fragments\n    for automatic dependency tracking.  If GNU make was not used, consider\n    re-running the configure script with MAKE=\"gmake\" (or whatever is\n    necessary).  You can also try re-running configure with the\n    '--disable-dependency-tracking' option to at least be able to build\n    the package (albeit without support for automatic dependency tracking).\nSee `config.log' for more details\nconfigure: WARNING: cache variable ac_cv_env_timpi_CPPFLAGS_value contains a newline\nconfigure: error: ../../../contrib/timpi/configure failed for contrib/timpi\nRunning make -j 15...\nmake: *** No targets specified and no makefile found.  Stop.\n\nI have tried both of the suggestions from the error message to no avail.\nThis is the output of diagnostics.sh\n##################################################################################################\nInfluential Environment Variables\n\nCC=mpicc\nCONDA_CHANNEL=https://conda.software.inl.gov/public\nCONDA_EXE=/home/detorre/mambaforge3/bin/conda\nCONDA_PYTHON_EXE=/home/detorre/mambaforge3/bin/python\nCONDA_SHLVL=0\nCURL_CA_BUNDLE=\nCXX=mpicxx\nF77=mpif77\nF90=mpif90\nFC=mpif90\nhttp_proxy=http://user:pass@proxy.sandia.gov:80\nhttps_proxy=http://user:pass@proxy.sandia.gov:80\nLD_LIBRARY_PATH=/opt/toss/openmpi/4.1/gnu/lib:/usr/lib64/nvidia:/projects/netpub/gnu/11.3.0-toss3/lib64:/projects/netpub/gnu/11.3.0-toss3/lib::\nMODULESHOME=/usr/share/lmod/lmod\nMOOSE_JOBS=15\nPATH=/opt/toss/openmpi/4.1/gnu/bin:/projects/cmake/toss4/3.25.2/bin:/projects/aue/hpc/builds/x86_64/rhel8/ba17d7f2/tooling/install/linux-rhel8-x86_64/gcc-10.3.0/python-3.9.16-a7hvvwm/bin:/projects/netpub/gnu/11.3.0-toss3/bin:/home/detorre/mambaforge3/condabin:/ascldap/users/detorre/mambaforge3/envs/gmsh2/bin:/usr/lpp/mmfs/bin:/opt/ibm/MCStore/bin:/opt/ibm/MCStore/scripts:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin\nREQUESTS_CA_BUNDLE=\nSSL_CERT_FILE=\n\n##################################################################################################\nCompiler(s) (CC CXX FC F77 F90):\n\nCC=/opt/toss/openmpi/4.1/gnu/bin/mpicc\nCC -show:\ngcc -I/opt/toss/openmpi/4.1/gnu/include -pthread -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi\nCC version:\tgcc (GCC) 11.3.0\n\nCXX=/opt/toss/openmpi/4.1/gnu/bin/mpicxx\nCXX -show:\ng++ -I/opt/toss/openmpi/4.1/gnu/include -pthread -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi\nCXX version:\tg++ (GCC) 11.3.0\n\nFC=/opt/toss/openmpi/4.1/gnu/bin/mpif90\nFC -show:\ngfortran -I/opt/toss/openmpi/4.1/gnu/include -pthread -I/opt/toss/openmpi/4.1/gnu/lib -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi\nFC version:\tGNU Fortran (GCC) 11.3.0\n\nF77=/opt/toss/openmpi/4.1/gnu/bin/mpif77\nF77 -show:\ngfortran -I/opt/toss/openmpi/4.1/gnu/include -pthread -I/opt/toss/openmpi/4.1/gnu/lib -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi\nF77 version:\tGNU Fortran (GCC) 11.3.0\n\nF90=/opt/toss/openmpi/4.1/gnu/bin/mpif90\nF90 -show:\ngfortran -I/opt/toss/openmpi/4.1/gnu/include -pthread -I/opt/toss/openmpi/4.1/gnu/lib -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi\nF90 version:\tGNU Fortran (GCC) 11.3.0\n\nOK\n\n##################################################################################################\nPython Sanity Checks\n\nVerify `/usr/bin/env python3 --version` (reporting as: Python 3.9.16),\nmatches versions for: `which python3 && which python`\n\nOK\n\n##################################################################################################\nPython Modules (TestHarness, run-ability)\n\nWARNING: python module: `yaml` not available\n\nWarning Python packages may cause miscellaneous runtime issues.\n\nEither install the above packages, or perhaps you have yet to activate your\nmoose environment: `conda activate moose`.\n\n\nI see the error with yaml but that seems unrelated to this issue. Though I imagine I'll have to address that eventually.\nAny insight into the issue would be appreciated. Thanks!",
          "url": "https://github.com/idaholab/moose/discussions/28530",
          "updatedAt": "2024-09-21T00:24:29Z",
          "publishedAt": "2024-09-03T17:48:11Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Could you please attach the config.log file for more details?\nIt ll be in libmesh/",
                  "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10535376",
                  "updatedAt": "2024-09-03T18:14:19Z",
                  "publishedAt": "2024-09-03T18:14:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "config.log",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10536247",
                          "updatedAt": "2024-09-03T18:45:01Z",
                          "publishedAt": "2024-09-03T18:45:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "i see this there\n/home/detorre/mambaforge3/envs/gmsh2/lib/libmpi.so: undefined reference to `opal_hwloc201_hwloc_get_type_depth'\n\nhow is this being found? We need mpi to solely come a single compiler, here it seems you are using the system one in /opt/",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10537055",
                          "updatedAt": "2024-09-03T19:43:05Z",
                          "publishedAt": "2024-09-03T19:43:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "config.log\nJust fixed that issue, however the original problem still persists.",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10537193",
                          "updatedAt": "2024-09-03T19:57:47Z",
                          "publishedAt": "2024-09-03T19:57:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Can you provide a new diagnostic report? I see several environment variables in the config.log you posted, that should have been captured in the diagnostic script (CXXFLAGS, etc).",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10537383",
                          "updatedAt": "2024-09-03T20:15:21Z",
                          "publishedAt": "2024-09-03T20:15:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "##################################################################################################\nInfluential Environment Variables\n\nCC=mpicc\nCONDA_CHANNEL=https://conda.software.inl.gov/public\nCURL_CA_BUNDLE=\nCXX=mpicxx\nF77=mpif77\nF90=mpif90\nFC=mpif90\nLD_LIBRARY_PATH=/opt/toss/openmpi/4.1/gnu/lib:/usr/lib64/nvidia:/projects/netpub/gnu/11.3.0-toss3/lib64:/projects/netpub/gnu/11.3.0-toss3/lib::\nMODULESHOME=/usr/share/lmod/lmod\nMOOSE_JOBS=6\nPATH=/opt/toss/openmpi/4.1/gnu/bin:/projects/cmake/toss4/3.25.2/bin:/projects/aue/hpc/builds/x86_64/rhel8/ba17d7f2/tooling/install/linux-rhel8-x86_64/gcc-10.3.0/python-3.9.16-a7hvvwm/bin:/projects/netpub/gnu/11.3.0-toss3/bin:/usr/lpp/mmfs/bin:/opt/ibm/MCStore/bin:/opt/ibm/MCStore/scripts:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin\nREQUESTS_CA_BUNDLE=\nSSL_CERT_FILE=\n\n##################################################################################################\nCompiler(s) (CC CXX FC F77 F90):\n\nCC=/opt/toss/openmpi/4.1/gnu/bin/mpicc\nCC -show:\ngcc -I/opt/toss/openmpi/4.1/gnu/include -pthread -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi\nCC version:\tgcc (GCC) 11.3.0\n\nCXX=/opt/toss/openmpi/4.1/gnu/bin/mpicxx\nCXX -show:\ng++ -I/opt/toss/openmpi/4.1/gnu/include -pthread -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi\nCXX version:\tg++ (GCC) 11.3.0\n\nFC=/opt/toss/openmpi/4.1/gnu/bin/mpif90\nFC -show:\ngfortran -I/opt/toss/openmpi/4.1/gnu/include -pthread -I/opt/toss/openmpi/4.1/gnu/lib -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi\nFC version:\tGNU Fortran (GCC) 11.3.0\n\nF77=/opt/toss/openmpi/4.1/gnu/bin/mpif77\nF77 -show:\ngfortran -I/opt/toss/openmpi/4.1/gnu/include -pthread -I/opt/toss/openmpi/4.1/gnu/lib -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi\nF77 version:\tGNU Fortran (GCC) 11.3.0\n\nF90=/opt/toss/openmpi/4.1/gnu/bin/mpif90\nF90 -show:\ngfortran -I/opt/toss/openmpi/4.1/gnu/include -pthread -I/opt/toss/openmpi/4.1/gnu/lib -L/opt/toss/openmpi/4.1/gnu/lib -Wl,-rpath -Wl,/opt/toss/openmpi/4.1/gnu/lib -Wl,--enable-new-dtags -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi\nF90 version:\tGNU Fortran (GCC) 11.3.0\n\nOK\n\n##################################################################################################\nPython Sanity Checks\n\nVerify `/usr/bin/env python3 --version` (reporting as: Python 3.9.16),\nmatches versions for: `which python3 && which python`\n\nOK\n\n##################################################################################################\nPython Modules (TestHarness, run-ability)\n\nWARNING: python module: `yaml` not available\n\nWarning Python packages may cause miscellaneous runtime issues.\n\nEither install the above packages, or perhaps you have yet to activate your\nmoose environment: `conda activate moose`.",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10548326",
                          "updatedAt": "2024-09-04T16:20:21Z",
                          "publishedAt": "2024-09-04T16:20:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did you try to follow the recommendations? e.g. passing --disable-dependency-tracking to the configure option?\nthis can be done by modifying scripts/configure_libmesh.sh",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10549298",
                          "updatedAt": "2024-09-04T18:02:39Z",
                          "publishedAt": "2024-09-04T18:02:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "Yep, I did both. Same error message",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10549425",
                          "updatedAt": "2024-09-04T18:17:45Z",
                          "publishedAt": "2024-09-04T18:17:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "Oh wait. I did it with the MOOSE configure script. Oops.",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10549439",
                          "updatedAt": "2024-09-04T18:18:15Z",
                          "publishedAt": "2024-09-04T18:18:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "Configure complete, now type 'make' and then 'make install'.\n\n---------------------------------------------\n--------- Done Configuring libMesh ----------\n---------------------------------------------\nRunning make -j 15...\nMakefile:7128: *** missing separator.  Stop.\n\nnow I get this error\nHere is the log file.\nconfig.log",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10549543",
                          "updatedAt": "2024-09-04T18:28:55Z",
                          "publishedAt": "2024-09-04T18:28:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "can find the makefile and paste the section around line 7128. see what happened",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10549567",
                          "updatedAt": "2024-09-04T18:30:52Z",
                          "publishedAt": "2024-09-04T18:30:52Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "I think it might be time to get help from @roystgnr on this",
                  "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10572579",
                  "updatedAt": "2024-09-06T18:50:08Z",
                  "publishedAt": "2024-09-06T18:50:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "roystgnr"
                  },
                  "bodyText": "Could we see the config.log from TIMPI?  It'll be in contrib/timpi/config.log\nCould you try just running ./bootstrap in the contrib/timpi directory, and let us know the output?\nThat newline is weird, but it's also a warning and I think it might be a red herring.",
                  "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10584109",
                  "updatedAt": "2024-09-08T19:45:01Z",
                  "publishedAt": "2024-09-08T19:45:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "I am not able to see a config file at contrib/timpi/config.log\n[detorre@manzano-login5 timpi]$ ./bootstrap\nBootstrapping using autoreconf -v -f -i ...\nautoreconf: Entering directory `.'\nautoreconf: configure.ac: not using Gettext\nautoreconf: running: aclocal --force -I m4 -I m4/autoconf-submodule\nautoreconf: configure.ac: tracing\nautoreconf: running: libtoolize --copy --force\nlibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.\nlibtoolize: copying file 'build-aux/ltmain.sh'\nlibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.\nlibtoolize: copying file 'm4/libtool.m4'\nlibtoolize: copying file 'm4/ltoptions.m4'\nlibtoolize: copying file 'm4/ltsugar.m4'\nlibtoolize: copying file 'm4/ltversion.m4'\nlibtoolize: copying file 'm4/lt~obsolete.m4'\nautoreconf: running: /usr/bin/autoconf --force\nautoreconf: running: /usr/bin/autoheader --force\nautoreconf: running: automake --add-missing --copy --force-missing\nconfigure.ac:86: installing 'build-aux/compile'\nconfigure.ac:14: installing 'build-aux/missing'\nsrc/Makefile.am: installing 'build-aux/depcomp'\nautoreconf: Leaving directory `.'\n\nHere is the bootstrap output",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10602548",
                          "updatedAt": "2024-09-10T13:15:26Z",
                          "publishedAt": "2024-09-10T13:15:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "contrib/timpi/config.log in the build directory (the one where libMesh config.log is), not the source directory, is what I'm hoping to see.\nGood to see that the bootstrap looks clean on your system at least.",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10607446",
                          "updatedAt": "2024-09-10T21:45:55Z",
                          "publishedAt": "2024-09-10T21:45:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "config.log\nHere is the config file",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10615989",
                          "updatedAt": "2024-09-11T15:29:40Z",
                          "publishedAt": "2024-09-11T15:29:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "I'm more confused than ever.  The TIMPI config.log here ends with configure: exit 0 (i.e. success), after getting past executing depfiles commands just fine.  The main console output above hits executing depfiles commands for TIMPI and seems to think (and the main config.log agrees) that TIMPI configure exited with failure at that point.  These are definitely all logs from the same single update_and_rebuild_libmesh.sh run?",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10616269",
                          "updatedAt": "2024-09-11T15:56:04Z",
                          "publishedAt": "2024-09-11T15:56:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "I just ran it again\nHere is from libmesh/build\nconfig.log\nHere is from libmesh/build/contrib/timpi\nconfig.log",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10616584",
                          "updatedAt": "2024-09-11T16:27:16Z",
                          "publishedAt": "2024-09-11T16:23:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "though this is with the --disable-dependency-tracking option enabled",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10616656",
                          "updatedAt": "2024-09-11T16:28:50Z",
                          "publishedAt": "2024-09-11T16:28:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "Without that option here is the libmesh config\nconfig.log\nand the timpi config\nconfig.log",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10616688",
                          "updatedAt": "2024-09-11T16:31:23Z",
                          "publishedAt": "2024-09-11T16:31:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "Okay, that second pair makes more sense; there we're getting the exit 1 from TIMPI configure ... and the *** missing separator failure higher up actually does look like it could be from that newline we were warned about, screwing up the whitespace that a Makefile is sensitive to.\nThat first pair of logs ... seems to be completing fine, with the \"Done Configuring libMesh\" message and an exit 0 from libMesh configure ... and then we hit *** missing separator as soon as we try to build, because we didn't actually fix any broken Makefiles, we just delayed the point at which they get used and the brokenness gets discovered.  Looking at the logs here I'm not surprised; that newline seems to be corrupting a half dozen different FLAGS variables.\n... but it looks like it's coming from BOOST_CPPFLAGS, not the other way around, in that case.  And BOOST_CPPFLAGS is coming out of the AX_BOOST_BASE macro ... which is ugly complicated.\nWhat does find /usr/ -name 'shared_ptr.hpp' see on your system?\nFor your own sake, you might be able to get around this bug by passing something like --with-boost=/usr/include/boost1.78 instead of --disable-dependency-tracking, but even if that works I hope you'll still be able to help me figure out what's causing this.  Our last change to ax_boost_base.m4 was over a decade ago and we've never seen anything like this before.",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10617580",
                          "updatedAt": "2024-09-11T17:56:00Z",
                          "publishedAt": "2024-09-11T17:55:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "TheGreatCid"
                          },
                          "bodyText": "For `find /usr/ -name 'shared_ptr.hpp'\n[detorre@mz77 ~]$ find /usr/ -name 'shared_ptr.hpp'\n/usr/include/boost1.78/boost/exception/detail/shared_ptr.hpp\n/usr/include/boost1.78/boost/thread/csbl/memory/shared_ptr.hpp\n/usr/include/boost1.78/boost/shared_ptr.hpp\n/usr/include/boost1.78/boost/interprocess/smart_ptr/shared_ptr.hpp\n/usr/include/boost1.78/boost/serialization/shared_ptr.hpp\n/usr/include/boost1.78/boost/smart_ptr/shared_ptr.hpp\n/usr/include/boost/exception/detail/shared_ptr.hpp\n/usr/include/boost/thread/csbl/memory/shared_ptr.hpp\n/usr/include/boost/shared_ptr.hpp\n/usr/include/boost/interprocess/smart_ptr/shared_ptr.hpp\n/usr/include/boost/serialization/shared_ptr.hpp\n/usr/include/boost/smart_ptr/shared_ptr.hpp\n\nYour suggestion to specify the boost directory did actually work!",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10626042",
                          "updatedAt": "2024-09-12T12:56:01Z",
                          "publishedAt": "2024-09-12T12:56:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "roystgnr"
                          },
                          "bodyText": "Well, hopefully it worked.  Seeing both /usr/include/boost1.78/boost and /usr/include/boost on the same system is scary.  Hopefully the latter is just a symbolic link to the former?\nIf so, then you should be good to go.  I'll see if I can make such a symlink on my laptop to replicate the problem and fix our boost m4 script for that case.\nIf they're not just the same directory via links in the filesystem, but they are the same version or ABI-compatible versions, then you should also be good to go, at least until your package manager decides to upgrade one but not the other.\nIf they're ever ABI-incompatible versions ... something could break, in theory?  Dependency A detects /usr/include/boost1.78 and creates a struct according to one definition, then passes a pointer it to dependency B which detects /usr/include/boost and looks for member offsets according to a different definition, and then you segfault if you're lucky or you get weird corruption if you're not.  I've never had this happen with boost before, but I have seen it with other libraries, and it's even less fun to diagnose than this configure issue was.  If that /usr/include/boost isn't just a symlink then I'd bring it up with your HPC guys; you pretty much never want to have multiple versions of software in system directories where they're likely to be autodetected.",
                          "url": "https://github.com/idaholab/moose/discussions/28530#discussioncomment-10626747",
                          "updatedAt": "2024-09-12T14:04:17Z",
                          "publishedAt": "2024-09-12T14:04:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Jacobian question on heat_conduction module",
          "author": {
            "login": "jsevic"
          },
          "bodyText": "Hello,\nI need a Joule heating kernel that allows coupling of instantaneous electrical conductivity so I made a new kernel that allows\nsigma to be a coupled variable.\nMy kernel computation is identical the JouleHeatingSource kernel .C file however my Jacobian term is missing this term _delec_cond_dT[_qp] and as best as I can tell it looks like this is being computed based on constants from material properties.\nThank you!\nJohn Sevic",
          "url": "https://github.com/idaholab/moose/discussions/28648",
          "updatedAt": "2024-09-19T23:38:25Z",
          "publishedAt": "2024-09-17T19:25:11Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAre you saying because the material properties are constants you expect this term to be 0?\nDoes this term come into the definition of the jacobian?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/28648#discussioncomment-10675666",
                  "updatedAt": "2024-09-17T23:08:38Z",
                  "publishedAt": "2024-09-17T23:08:38Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "Hello,\nYes the material properties in this case would be constant, but the electrical conductivity is not constant it's a coupled variable.\nThank you.\nFor my kernel the Jacobian is\nreturn -1*_D[_qp]*_grad_V[_qp]*_grad_V[_qp]*_phi[_j][_qp]*_test[_i][_qp]; \nand for the built-in Joule heating kernel, JouleHeatingSource, that does not allow for a coupled electrical conductivity, but does depend on material properties specified by mateirlaProperties, the Jacobian is\n return -_delec_cond_dT[_qp] * _grad_elec[_qp] * _grad_elec[_qp] * _phi[_j][_qp] * _test[_i][_qp];",
                          "url": "https://github.com/idaholab/moose/discussions/28648#discussioncomment-10676000",
                          "updatedAt": "2024-09-18T00:40:02Z",
                          "publishedAt": "2024-09-18T00:40:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "are you using AD?\nThe JouleHeatingSource also has off-diagonal terms",
                          "url": "https://github.com/idaholab/moose/discussions/28648#discussioncomment-10676397",
                          "updatedAt": "2024-09-18T02:00:04Z",
                          "publishedAt": "2024-09-18T02:00:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jsevic"
                          },
                          "bodyText": "We have not tried AD, would you suggest that for a problem like this?\nThx!",
                          "url": "https://github.com/idaholab/moose/discussions/28648#discussioncomment-10681244",
                          "updatedAt": "2024-09-18T12:37:19Z",
                          "publishedAt": "2024-09-18T12:37:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "how many variables do you have?\nyou made this kernel\n\na new kernel that allows sigma to be a coupled variable.\n\ndid you add the off-diagonal term for this?\nAD can let you do this easily, but it's a little slower and it requires transitioning all the material properties to AD type",
                          "url": "https://github.com/idaholab/moose/discussions/28648#discussioncomment-10681320",
                          "updatedAt": "2024-09-18T12:43:14Z",
                          "publishedAt": "2024-09-18T12:43:13Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jsevic"
                  },
                  "bodyText": "OK I have found out the issue I had thank you for your help!\nJohn Sevic",
                  "url": "https://github.com/idaholab/moose/discussions/28648#discussioncomment-10685940",
                  "updatedAt": "2024-09-18T20:27:15Z",
                  "publishedAt": "2024-09-18T20:27:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Strange gradient behavior",
          "author": {
            "login": "benjamin-reilly"
          },
          "bodyText": "Hello,\nNew user here, so I apologize in advance if this issue is a simple user error.\nI am experiencing what I think is weird behavior when I have MOOSE compute the gradient of a variable. In short, I am interested in multi-phase-field modeling of non-conserved order parameters, using in particular the model outlined here so as to maintain the ability to specify different mobilities for different interfaces. This model depends on using indicator functions encoding the local number of phases with non-zero gradients, and effectively rescales the mobility in accordance with this local information. Moreover, in pure-phase regions the mobility can effectively be viewed as being set to 0 (of course, you could view this as being the case in most non-conserved phase-field models, but it is especially important in this model when generalizing to > 2 phases, and I am pointing it out here so that my example input file included below makes a bit more sense).\nSo, I am trying to use the norms of the gradients of my variables in order to indicate where these non-zero gradients exist (defining the indicator function simply as if(norm>0,1,0)). However, my gradient norms do not appear to be accurately representing the actual gradient norms of my variables. To simplify the explanation, I am including screenshots below with brief descriptions:\nFirst, the initial state of one of my phase fields:\n\nThe corresponding L2 norm of the gradient of this phase field:\n\nSome time later, the phase field has not changed too much (although it is slightly squeezed, since it is hitting a region of the domain in which the mobility is 0-- even though the mobility should be updated to a non-zero value when the gradient becomes non-zero as the interface approaches this region):\n\nThe corresponding gradient norm at this same time, which has decreased relative to the previous time (even though, if anything, it should have increased due to the interface being slightly more confined):\n\nAside from it being concerning that the norms calculated by MOOSE do not appear to accurately be the gradient norms of the variables, this is especially problematic for my model because I would like to update the mobility to be non-zero as the interface advances into new regions, which is not occurring at all. Instead, the only non-zero mobilities throughout the simulation are located at the initial location of the interface, i.e. the \"update\" via investigating the new gradient norms is never actually occurring (and I am guessing that this is most likely related to the gradient norms misbehaving).\nI am in particular using the VariableGradientMaterial material in order to compute the gradient norms, but I have experimented with other methods as well (e.g. using the VariableGradientComponent AuxKernel and then manually constructing the gradient norms in ParsedMaterial materials), to no avail. So, I think there is something I probably just don't understand regarding how MOOSE is computing the gradients of variables.\nBelow I am including an input file that I have created as a minimal reproducible example of this behavior. Note that I am ultimately concerned with simulating multi-phase-field models, and so even though the below input file is effectively only a single-order-parameter model, I am still using e.g. ACMultiInterface in order to incorporate the gradient energy term (so as to make this example consistent with the more complicated systems I am actually interested in).\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 128\n  ny = 16\n  xmin = -120\n  xmax = 120\n  ymin = 0\n  ymax = 30\n  elem_type = QUAD\n[]\n\n[GlobalParams]\noutputs = exodus\n[]\n\n[ICs]\n  [eta0_IC]\n    type = FunctionIC\n    variable = eta0\n    function = eta0_IC\n  []\n  [eta1_IC]\n    type = FunctionIC\n    variable = eta1\n    function = eta1_IC\n  []\n[]\n\n[AuxVariables]\n[]\n\n[AuxKernels]\n[]\n\n[Functions]\n  [eta0_IC]\n    type = ParsedFunction\n    expression = 'if(x > -width/2 & x < width/2, 0.5 * (1 + sin(3.14159265359*x/width)), if(x < -width/2,0,1))'\n    symbol_names = 'width'\n    symbol_values = '20'\n  [../]\n  [eta1_IC]\n    type = ParsedFunction\n    expression = '1-eta0_IC'\n    symbol_names = ' eta0_IC'\n    symbol_values = ' eta0_IC'\n  [../]\n[]\n\n[Variables]\n  [./eta0]\n    order = SECOND\n    family = MONOMIAL\n  [../]\n  [./eta1]\n    order = SECOND\n    family = MONOMIAL\n  [../]\n[]\n\n[Kernels]\n  [./deta0dt]\n    type = TimeDerivative\n    variable = eta0\n  [../]\n  [./ACBulk0_self]\n    type = AllenCahn\n    variable = eta0\n    coupled_variables = ' eta0 eta1'\n    mob_name = L0\n    f_name = F0\n  [../]\n  [./ACInterface0_self]\n    type = ACMultiInterface\n    variable = eta0\n    etas = ' eta0 eta1'\n    mob_name = L0\n    kappa_names = ' kappa00 kappa01'\n  [../]\n  [./simplexKernel]\n    type = MaterialPropertyValue\n    prop_name = SimplexMaterial\n    variable = eta1\n  [../]\n[]\n\n[BCs]\n  [NeumannBC0]\n    type = MatNeumannBC\n    variable = eta0\n    boundary = 'top bottom left right'\n    boundary_material = norm0\n    value = 0.\n  []\n  [NeumannBC1]\n    type = MatNeumannBC\n    variable = eta1\n    boundary = 'top bottom left right'\n    boundary_material = norm1\n    value = 0.\n  []\n[]\n\n[Materials]\n  [./consts]\n    type = GenericConstantMaterial\n    prop_names = ' kappa00 kappa01 kappa10 kappa11'\n    prop_values = ' 5.836100177798656 5.836100177798656 5.836100177798656 5.836100177798656'\n  [../]\n  [./mobility_base]\n    type = GenericConstantMaterial\n    prop_names  = 'L_base'\n    prop_values  = '0.25'\n  [../]\n  [./mobility0]\n    type = ParsedMaterial\n    property_name  = L0\n    expression = 'if(norm0>0&norm1>0,L_base,0.)'\n    material_property_names = 'L_base  norm0(eta0) norm1(eta1)'\n  [../]\n  [./simplexMaterial]\n    type = DerivativeParsedMaterial\n    property_name = SimplexMaterial\n    coupled_variables = ' eta0'\n    expression = '1.-eta0'\n  [../]\n  [./etasum]\n    type = ParsedMaterial\n    property_name = etasum\n    coupled_variables = ' eta0 eta1'\n    expression = ' eta0 + eta1'\n  [../]\n  [./phase_free_energy0]\n    type = DerivativeParsedMaterial\n    property_name = F0\n    expression = 'interp:=if(eta0>0&eta0<1,(asin(2*eta0-1)+(4*eta0-2)*sqrt(eta0*(1-eta0)))/3.14159265359,0.); 0.07200000000000001*eta0*eta1*if(eta0*eta1<0,-1.,1.) + -3.58918109*interp'\n    coupled_variables = ' eta0 eta1'\n    constant_names = 'T_m_c'\n    constant_expressions = ' 1687'\n  [../]\n  [./norm0]\n    type = VariableGradientMaterial\n    prop = norm0\n    variable = eta0\n  [../]\n  [./norm1]\n    type = VariableGradientMaterial\n    prop = norm1\n    variable = eta1\n  [../]\n[]\n\n[Postprocessors]\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  scheme = 'implicit-euler'\n  solve_type = 'NEWTON'\n  automatic_scaling = true\n  dtmin = 1e-10\n  l_max_its = 50\n  l_tol = 1.0e-1\n  nl_max_its = 10\n  nl_rel_tol = 1.0e-1\n  start_time = 0\n  dt = 1\n  num_steps = 15\n  dtmax = 1\n[]\n\n[Debug]\n[]\n\n[Outputs]\n  time_step_interval = 1\n  [exodus]\n    type = Exodus\n  []\n  [./table]\n    type = CSV\n    delimiter = ' '\n  [../]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/28660",
          "updatedAt": "2024-09-19T21:28:39Z",
          "publishedAt": "2024-09-18T21:23:16Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI dont see any auxvariable or auxkernel. How are you obtaining the norm of the gradient? With paraview postprocessing?",
                  "url": "https://github.com/idaholab/moose/discussions/28660#discussioncomment-10686674",
                  "updatedAt": "2024-09-18T22:33:50Z",
                  "publishedAt": "2024-09-18T22:33:50Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "benjamin-reilly"
                          },
                          "bodyText": "Hi Guillaume,\nThanks for the quick reply. I am visualizing the norm of the gradient from the output exodus file in Peacock.\nFor the sake of completeness, here's the alternative version I alluded to in my previous message (using the VariableGradientComponent AuxKernel with AuxVariables to store the gradient components), which suffers from the same issues:\n[Mesh]\n  type = GeneratedMesh\n  dim = 2\n  nx = 128\n  ny = 16\n  xmin = -120\n  xmax = 120\n  ymin = 0\n  ymax = 30\n  elem_type = QUAD\n[]\n\n[GlobalParams]\noutputs = exodus\n[]\n\n[ICs]\n  [eta0_IC]\n    type = FunctionIC\n    variable = eta0\n    function = eta0_IC\n  []\n  [eta1_IC]\n    type = FunctionIC\n    variable = eta1\n    function = eta1_IC\n  []\n[]\n\n[AuxVariables]\n  [./eta0_gradx]\n    order = FIRST\n    family = MONOMIAL\n  [../]\n  [./eta0_grady]\n    order = FIRST\n    family = MONOMIAL\n  [../]\n  [./eta1_gradx]\n    order = FIRST\n    family = MONOMIAL\n  [../]\n  [./eta1_grady]\n    order = FIRST\n    family = MONOMIAL\n  [../]\n[]\n\n[AuxKernels]\n  [./eta0_gradx_kernel]\n    type = VariableGradientComponent\n    gradient_variable = eta0\n    variable = eta0_gradx\n    component = x\n    execute_on = 'LINEAR TIMESTEP_BEGIN TIMESTEP_END'\n  [../]\n  [./eta0_grady_kernel]\n    type = VariableGradientComponent\n    gradient_variable = eta0\n    variable = eta0_grady\n    component = y\n    execute_on = 'LINEAR TIMESTEP_BEGIN TIMESTEP_END'\n  [../]\n  [./eta1_gradx_kernel]\n    type = VariableGradientComponent\n    gradient_variable = eta1\n    variable = eta1_gradx\n    component = x\n    execute_on = 'LINEAR TIMESTEP_BEGIN TIMESTEP_END'\n  [../]\n  [./eta1_grady_kernel]\n    type = VariableGradientComponent\n    gradient_variable = eta1\n    variable = eta1_grady\n    component = y\n    execute_on = 'LINEAR TIMESTEP_BEGIN TIMESTEP_END'\n  [../]\n[]\n\n[Functions]\n  [eta0_IC]\n    type = ParsedFunction\n    expression = 'if(x > -width/2 & x < width/2, 0.5 * (1 + sin(3.14159265359*x/width)), if(x < -width/2,0,1))'\n    symbol_names = 'width'\n    symbol_values = '20'\n  [../]\n  [eta1_IC]\n    type = ParsedFunction\n    expression = '1-eta0_IC'\n    symbol_names = ' eta0_IC'\n    symbol_values = ' eta0_IC'\n  [../]\n[]\n\n[Variables]\n  [./eta0]\n    order = SECOND\n    family = MONOMIAL\n  [../]\n  [./eta1]\n    order = SECOND\n    family = MONOMIAL\n  [../]\n[]\n\n[Kernels]\n  [./deta0dt]\n    type = TimeDerivative\n    variable = eta0\n  [../]\n  [./ACBulk0_self]\n    type = AllenCahn\n    variable = eta0\n    coupled_variables = ' eta0 eta1'\n    mob_name = L0\n    f_name = F0\n  [../]\n  [./ACInterface0_self]\n    type = ACMultiInterface\n    variable = eta0\n    etas = ' eta0 eta1'\n    mob_name = L0\n    kappa_names = ' kappa00 kappa01'\n  [../]\n  [./simplexKernel]\n    type = MaterialPropertyValue\n    prop_name = SimplexMaterial\n    variable = eta1\n  [../]\n[]\n\n[BCs]\n  [NeumannBC0]\n    type = MatNeumannBC\n    variable = eta0\n    boundary = 'top bottom left right'\n    boundary_material = norm0\n    value = 0.\n  []\n  [NeumannBC1]\n    type = MatNeumannBC\n    variable = eta1\n    boundary = 'top bottom left right'\n    boundary_material = norm1\n    value = 0.\n  []\n[]\n\n[Materials]\n  [./consts]\n    type = GenericConstantMaterial\n    prop_names = ' kappa00 kappa01 kappa10 kappa11'\n    prop_values = ' 5.836100177798656 5.836100177798656 5.836100177798656 5.836100177798656'\n  [../]\n  [./mobility_base]\n    type = GenericConstantMaterial\n    prop_names  = 'L_base'\n    prop_values  = '0.25'\n  [../]\n  [./mobility0]\n    type = ParsedMaterial\n    property_name  = L0\n    expression = 'if(norm0>0&norm1>0,L_base,0.)'\n    material_property_names = 'L_base  norm0(eta0_gradx,eta0_grady) norm1(eta1_gradx,eta0_grady)'\n  [../]\n  [./simplexMaterial]\n    type = DerivativeParsedMaterial\n    property_name = SimplexMaterial\n    coupled_variables = ' eta0'\n    expression = '1.-eta0'\n  [../]\n  [./etasum]\n    type = ParsedMaterial\n    property_name = etasum\n    coupled_variables = ' eta0 eta1'\n    expression = ' eta0 + eta1'\n  [../]\n  [./phase_free_energy0]\n    type = DerivativeParsedMaterial\n    property_name = F0\n    expression = 'interp:=if(eta0>0&eta0<1,(asin(2*eta0-1)+(4*eta0-2)*sqrt(eta0*(1-eta0)))/3.14159265359,0.); 0.07200000000000001*eta0*eta1*if(eta0*eta1<0,-1.,1.) + -3.58918109*interp'\n    coupled_variables = ' eta0 eta1'\n    constant_names = 'T_m_c'\n    constant_expressions = ' 1687'\n  [../]\n  [./norm0]\n    type = DerivativeParsedMaterial\n    property_name = norm0\n    coupled_variables = 'eta0_gradx eta0_grady'\n    expression = 'sqrt(eta0_gradx^2 + eta0_grady^2)'\n  [../]\n  [./norm1]\n    type = DerivativeParsedMaterial\n    property_name = norm1\n    coupled_variables = 'eta1_gradx eta1_grady'\n    expression = 'sqrt(eta1_gradx^2 + eta1_grady^2)'\n  [../]\n[]\n\n[Postprocessors]\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  scheme = 'implicit-euler'\n  solve_type = 'NEWTON'\n  automatic_scaling = true\n  dtmin = 1e-10\n  l_max_its = 50\n  l_tol = 1.0e-1\n  nl_max_its = 10\n  nl_rel_tol = 1.0e-1\n  #nl_abs_tol = 1.0e-3\n  start_time = 0\n  dt = 1\n  num_steps = 15\n  dtmax = 1\n[]\n\n[Debug]\n[]\n\n[Outputs]\n  time_step_interval = 1\n  [exodus]\n    type = Exodus\n  []\n  [./table]\n    type = CSV\n    delimiter = ' '\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/28660#discussioncomment-10686805",
                          "updatedAt": "2024-09-18T23:03:05Z",
                          "publishedAt": "2024-09-18T23:03:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so the VariableGraidentAux compute the gradient within each element\nbut you are using monomials, which are discontinuous. So the gradient on the faces is infinite and accounts for a good chunk of the jump in values most likely",
                          "url": "https://github.com/idaholab/moose/discussions/28660#discussioncomment-10686865",
                          "updatedAt": "2024-09-18T23:18:16Z",
                          "publishedAt": "2024-09-18T23:18:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You could try this to confirm. it will have a projection error but it might bring some insights\n\nproject eta onto a continuous variable (eta-nodal with 2nd order lagrange for example)\nuse the VariableGradientComponentAux on eta-nodal\n\nAnd check:\n\nif the gradient does appear more pronounced for the second case than the first one.\nif the integral of the gradient does retrieve the expected jump in values eta_right - eta_left",
                          "url": "https://github.com/idaholab/moose/discussions/28660#discussioncomment-10686885",
                          "updatedAt": "2024-09-18T23:21:06Z",
                          "publishedAt": "2024-09-18T23:21:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "benjamin-reilly"
                          },
                          "bodyText": "I understand your suggestion, however I think I currently lack the MOOSE experience to be able to effectively implement such a projection.\nNevertheless, your suggestion reminded me of your response here, which I had come across before making this post. Sure enough, after I switched the gradient component AuxVariables to be constant monomials, the gradients started looking accurate! I'm not sure why this didn't work the first time I came across your response in that other thread-- I was probably tweaking too many things simultaneously in the input file to properly isolate the issue.\nIn any case, things are looking much better now. Thanks a bunch for your help!",
                          "url": "https://github.com/idaholab/moose/discussions/28660#discussioncomment-10698084",
                          "updatedAt": "2024-09-19T21:28:39Z",
                          "publishedAt": "2024-09-19T21:28:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Failure building porous flow module",
          "author": {
            "login": "julianseb"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n I have consulted the Posting Guidelines.\n I have searched the Discussions Forum and MOOSE Framework Troubleshooting and have not found what I was looking for\n Q&A Getting Started is the most appropriate category for my question (trouble installing, beginner user, ...)\n\nIssue or question about MOOSE\nSo i've installed moose an it is running fine, the tests are all passing and the examples from the getting started are also working. Now i wanted to enable the porous flow module and i followed the instruction on the getting started of the porous flow site, but for whatever reason the build is failing. I also tried reinstalling everything but it didn't change the issue.\nI'm running Ubuntu 22.04.4 LTS on an virtual machine with 22Gb memory, an Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz and 10 cores.\n(Optional) code in question / simulation log / errors\nRan 4440 tests in 451.2 seconds. Average test time 0.6 seconds, maximum test time 17.6 seconds.\n4440 passed, 93 skipped, 0 pending, 0 failed\n\n(moose) julian.munz@f6-ing-ubuntuvm-004:~/projects/moose/test$ cd ../\n(moose) julian.munz@f6-ing-ubuntuvm-004:~/projects/moose$ cd modules/porous_flow\nmake -j8\nLinking Library /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/lib/libsolid_mechanics-opt.la...\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::initialize()':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraint10initializeEv+0x0): multiple definition of `HomogenizationConstraint::initialize()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraint10initializeEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::threadJoin(UserObject const&)':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraint10threadJoinERK10UserObject+0x0): multiple definition of `HomogenizationConstraint::threadJoin(UserObject const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraint10threadJoinERK10UserObject+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::execute()':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraint7executeEv+0x0): multiple definition of `HomogenizationConstraint::execute()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraint7executeEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::finalize()':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraint8finalizeEv+0x0): multiple definition of `HomogenizationConstraint::finalize()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraint8finalizeEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::computeJacobian()':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraint15computeJacobianEv+0x0): multiple definition of `HomogenizationConstraint::computeJacobian()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraint15computeJacobianEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::computeResidual()':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraint15computeResidualEv+0x0): multiple definition of `HomogenizationConstraint::computeResidual()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraint15computeResidualEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::HomogenizationConstraint(InputParameters const&)':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraintC2ERK15InputParameters+0x0): multiple definition of `HomogenizationConstraint::HomogenizationConstraint(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraintC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::HomogenizationConstraint(InputParameters const&)':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraintC2ERK15InputParameters+0x0): multiple definition of `HomogenizationConstraint::HomogenizationConstraint(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraintC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraint::validParams()':\nuserobjects_lagrangian_Unity.C:(.text._ZN24HomogenizationConstraint11validParamsEv+0x0): multiple definition of `HomogenizationConstraint::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/userobjects_Unity.x86_64-conda-linux-gnu.opt.o:userobjects_Unity.C:(.text._ZN24HomogenizationConstraint11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraintScalarKernel::reinit()':\nscalarkernels_lagrangian_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernel6reinitEv+0x0): multiple definition of `HomogenizationConstraintScalarKernel::reinit()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_Unity.x86_64-conda-linux-gnu.opt.o:scalarkernels_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernel6reinitEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraintScalarKernel::computeResidual()':\nscalarkernels_lagrangian_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernel15computeResidualEv+0x0): multiple definition of `HomogenizationConstraintScalarKernel::computeResidual()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_Unity.x86_64-conda-linux-gnu.opt.o:scalarkernels_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernel15computeResidualEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraintScalarKernel::computeJacobian()':\nscalarkernels_lagrangian_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernel15computeJacobianEv+0x0): multiple definition of `HomogenizationConstraintScalarKernel::computeJacobian()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_Unity.x86_64-conda-linux-gnu.opt.o:scalarkernels_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernel15computeJacobianEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraintScalarKernel::HomogenizationConstraintScalarKernel(InputParameters const&)':\nscalarkernels_lagrangian_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernelC2ERK15InputParameters+0x0): multiple definition of `HomogenizationConstraintScalarKernel::HomogenizationConstraintScalarKernel(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_Unity.x86_64-conda-linux-gnu.opt.o:scalarkernels_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernelC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraintScalarKernel::HomogenizationConstraintScalarKernel(InputParameters const&)':\nscalarkernels_lagrangian_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernelC2ERK15InputParameters+0x0): multiple definition of `HomogenizationConstraintScalarKernel::HomogenizationConstraintScalarKernel(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_Unity.x86_64-conda-linux-gnu.opt.o:scalarkernels_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernelC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizationConstraintScalarKernel::validParams()':\nscalarkernels_lagrangian_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernel11validParamsEv+0x0): multiple definition of `HomogenizationConstraintScalarKernel::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/scalarkernels_Unity.x86_64-conda-linux-gnu.opt.o:scalarkernels_Unity.C:(.text._ZN36HomogenizationConstraintScalarKernel11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `ExecuteNEML2Model::ExecuteNEML2Model(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN17ExecuteNEML2ModelC2ERK15InputParameters+0x0): multiple definition of `ExecuteNEML2Model::ExecuteNEML2Model(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN17ExecuteNEML2ModelC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `ExecuteNEML2Model::ExecuteNEML2Model(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN17ExecuteNEML2ModelC2ERK15InputParameters+0x0): multiple definition of `ExecuteNEML2Model::ExecuteNEML2Model(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN17ExecuteNEML2ModelC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSERealMaterialPropertyToNEML2::MOOSERealMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN32MOOSERealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSERealMaterialPropertyToNEML2::MOOSERealMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN32MOOSERealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSERealMaterialPropertyToNEML2::MOOSERealMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN32MOOSERealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSERealMaterialPropertyToNEML2::MOOSERealMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN32MOOSERealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSERankTwoTensorMaterialPropertyToNEML2::MOOSERankTwoTensorMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN41MOOSERankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSERankTwoTensorMaterialPropertyToNEML2::MOOSERankTwoTensorMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41MOOSERankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSERankTwoTensorMaterialPropertyToNEML2::MOOSERankTwoTensorMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN41MOOSERankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSERankTwoTensorMaterialPropertyToNEML2::MOOSERankTwoTensorMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41MOOSERankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2::MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN50MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2::MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN50MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2::MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN50MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2::MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN50MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEStdVectorRealMaterialPropertyToNEML2::MOOSEStdVectorRealMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN41MOOSEStdVectorRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEStdVectorRealMaterialPropertyToNEML2::MOOSEStdVectorRealMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41MOOSEStdVectorRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEStdVectorRealMaterialPropertyToNEML2::MOOSEStdVectorRealMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN41MOOSEStdVectorRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEStdVectorRealMaterialPropertyToNEML2::MOOSEStdVectorRealMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41MOOSEStdVectorRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldRealMaterialPropertyToNEML2::MOOSEOldRealMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN35MOOSEOldRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldRealMaterialPropertyToNEML2::MOOSEOldRealMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN35MOOSEOldRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldRealMaterialPropertyToNEML2::MOOSEOldRealMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN35MOOSEOldRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldRealMaterialPropertyToNEML2::MOOSEOldRealMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN35MOOSEOldRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldRankTwoTensorMaterialPropertyToNEML2::MOOSEOldRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN44MOOSEOldRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldRankTwoTensorMaterialPropertyToNEML2::MOOSEOldRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN44MOOSEOldRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldRankTwoTensorMaterialPropertyToNEML2::MOOSEOldRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN44MOOSEOldRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldRankTwoTensorMaterialPropertyToNEML2::MOOSEOldRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN44MOOSEOldRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2::MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN53MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2::MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN53MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2::MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN53MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2::MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN53MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldStdVectorRealMaterialPropertyToNEML2::MOOSEOldStdVectorRealMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN44MOOSEOldStdVectorRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldStdVectorRealMaterialPropertyToNEML2::MOOSEOldStdVectorRealMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN44MOOSEOldStdVectorRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldStdVectorRealMaterialPropertyToNEML2::MOOSEOldStdVectorRealMaterialPropertyToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN44MOOSEOldStdVectorRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldStdVectorRealMaterialPropertyToNEML2::MOOSEOldStdVectorRealMaterialPropertyToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN44MOOSEOldStdVectorRealMaterialPropertyToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEToNEML2::MOOSEToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN12MOOSEToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEToNEML2::MOOSEToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN12MOOSEToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEToNEML2::MOOSEToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN12MOOSEToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEToNEML2::MOOSEToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN12MOOSEToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEVariableToNEML2::MOOSEVariableToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN20MOOSEVariableToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEVariableToNEML2::MOOSEVariableToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN20MOOSEVariableToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEVariableToNEML2::MOOSEVariableToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN20MOOSEVariableToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEVariableToNEML2::MOOSEVariableToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN20MOOSEVariableToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldVariableToNEML2::MOOSEOldVariableToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN23MOOSEOldVariableToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldVariableToNEML2::MOOSEOldVariableToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN23MOOSEOldVariableToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldVariableToNEML2::MOOSEOldVariableToNEML2(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN23MOOSEOldVariableToNEML2C2ERK15InputParameters+0x0): multiple definition of `MOOSEOldVariableToNEML2::MOOSEOldVariableToNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN23MOOSEOldVariableToNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2UO::CauchyStressFromNEML2UO(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN23CauchyStressFromNEML2UOC2ERK15InputParameters+0x0): multiple definition of `CauchyStressFromNEML2UO::CauchyStressFromNEML2UO(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN23CauchyStressFromNEML2UOC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2UO::CauchyStressFromNEML2UO(InputParameters const&)':\nneml2_userobjects_Unity.C:(.text._ZN23CauchyStressFromNEML2UOC2ERK15InputParameters+0x0): multiple definition of `CauchyStressFromNEML2UO::CauchyStressFromNEML2UO(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN23CauchyStressFromNEML2UOC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `ExecuteNEML2Model::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN17ExecuteNEML2Model11validParamsEv+0x0): multiple definition of `ExecuteNEML2Model::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN17ExecuteNEML2Model11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSERealMaterialPropertyToNEML2::validParams() [clone .localalias]':\nneml2_userobjects_Unity.C:(.text._ZN32MOOSERealMaterialPropertyToNEML211validParamsEv+0x0): multiple definition of `MOOSERealMaterialPropertyToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN32MOOSERealMaterialPropertyToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSERankTwoTensorMaterialPropertyToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN41MOOSERankTwoTensorMaterialPropertyToNEML211validParamsEv+0x0): multiple definition of `MOOSERankTwoTensorMaterialPropertyToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41MOOSERankTwoTensorMaterialPropertyToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN50MOOSESymmetricRankTwoTensorMaterialPropertyToNEML211validParamsEv+0x0): multiple definition of `MOOSESymmetricRankTwoTensorMaterialPropertyToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN50MOOSESymmetricRankTwoTensorMaterialPropertyToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEStdVectorRealMaterialPropertyToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN41MOOSEStdVectorRealMaterialPropertyToNEML211validParamsEv+0x0): multiple definition of `MOOSEStdVectorRealMaterialPropertyToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41MOOSEStdVectorRealMaterialPropertyToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldRealMaterialPropertyToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN35MOOSEOldRealMaterialPropertyToNEML211validParamsEv+0x0): multiple definition of `MOOSEOldRealMaterialPropertyToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN35MOOSEOldRealMaterialPropertyToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldRankTwoTensorMaterialPropertyToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN44MOOSEOldRankTwoTensorMaterialPropertyToNEML211validParamsEv+0x0): multiple definition of `MOOSEOldRankTwoTensorMaterialPropertyToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN44MOOSEOldRankTwoTensorMaterialPropertyToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN53MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML211validParamsEv+0x0): multiple definition of `MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN53MOOSEOldSymmetricRankTwoTensorMaterialPropertyToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldStdVectorRealMaterialPropertyToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN44MOOSEOldStdVectorRealMaterialPropertyToNEML211validParamsEv+0x0): multiple definition of `MOOSEOldStdVectorRealMaterialPropertyToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN44MOOSEOldStdVectorRealMaterialPropertyToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN12MOOSEToNEML211validParamsEv+0x0): multiple definition of `MOOSEToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN12MOOSEToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEVariableToNEML2::validParams() [clone .localalias]':\nneml2_userobjects_Unity.C:(.text._ZN20MOOSEVariableToNEML211validParamsEv+0x0): multiple definition of `MOOSEVariableToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN20MOOSEVariableToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `MOOSEOldVariableToNEML2::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN23MOOSEOldVariableToNEML211validParamsEv+0x0): multiple definition of `MOOSEOldVariableToNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN23MOOSEOldVariableToNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_userobjects_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2UO::validParams()':\nneml2_userobjects_Unity.C:(.text._ZN23CauchyStressFromNEML2UO11validParamsEv+0x0): multiple definition of `CauchyStressFromNEML2UO::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN23CauchyStressFromNEML2UO11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2StressToMOOSE::NEML2StressToMOOSE(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN18NEML2StressToMOOSEC2ERK15InputParameters+0x0): multiple definition of `NEML2StressToMOOSE::NEML2StressToMOOSE(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN18NEML2StressToMOOSEC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2StressToMOOSE::NEML2StressToMOOSE(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN18NEML2StressToMOOSEC2ERK15InputParameters+0x0): multiple definition of `NEML2StressToMOOSE::NEML2StressToMOOSE(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN18NEML2StressToMOOSEC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToRealMOOSEMaterialProperty::NEML2ToRealMOOSEMaterialProperty(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN32NEML2ToRealMOOSEMaterialPropertyC2ERK15InputParameters+0x0): multiple definition of `NEML2ToRealMOOSEMaterialProperty::NEML2ToRealMOOSEMaterialProperty(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN32NEML2ToRealMOOSEMaterialPropertyC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToRealMOOSEMaterialProperty::NEML2ToRealMOOSEMaterialProperty(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN32NEML2ToRealMOOSEMaterialPropertyC2ERK15InputParameters+0x0): multiple definition of `NEML2ToRealMOOSEMaterialProperty::NEML2ToRealMOOSEMaterialProperty(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN32NEML2ToRealMOOSEMaterialPropertyC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToStdVectorRealMOOSEMaterialProperty::NEML2ToStdVectorRealMOOSEMaterialProperty(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN41NEML2ToStdVectorRealMOOSEMaterialPropertyC2ERK15InputParameters+0x0): multiple definition of `NEML2ToStdVectorRealMOOSEMaterialProperty::NEML2ToStdVectorRealMOOSEMaterialProperty(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41NEML2ToStdVectorRealMOOSEMaterialPropertyC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToStdVectorRealMOOSEMaterialProperty::NEML2ToStdVectorRealMOOSEMaterialProperty(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN41NEML2ToStdVectorRealMOOSEMaterialPropertyC2ERK15InputParameters+0x0): multiple definition of `NEML2ToStdVectorRealMOOSEMaterialProperty::NEML2ToStdVectorRealMOOSEMaterialProperty(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41NEML2ToStdVectorRealMOOSEMaterialPropertyC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty::NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN50NEML2ToSymmetricRankTwoTensorMOOSEMaterialPropertyC2ERK15InputParameters+0x0): multiple definition of `NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty::NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN50NEML2ToSymmetricRankTwoTensorMOOSEMaterialPropertyC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty::NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN50NEML2ToSymmetricRankTwoTensorMOOSEMaterialPropertyC2ERK15InputParameters+0x0): multiple definition of `NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty::NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN50NEML2ToSymmetricRankTwoTensorMOOSEMaterialPropertyC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty::NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN51NEML2ToSymmetricRankFourTensorMOOSEMaterialPropertyC2ERK15InputParameters+0x0): multiple definition of `NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty::NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN51NEML2ToSymmetricRankFourTensorMOOSEMaterialPropertyC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty::NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN51NEML2ToSymmetricRankFourTensorMOOSEMaterialPropertyC2ERK15InputParameters+0x0): multiple definition of `NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty::NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN51NEML2ToSymmetricRankFourTensorMOOSEMaterialPropertyC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2Receiver::CauchyStressFromNEML2Receiver(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN29CauchyStressFromNEML2ReceiverC2ERK15InputParameters+0x0): multiple definition of `CauchyStressFromNEML2Receiver::CauchyStressFromNEML2Receiver(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN29CauchyStressFromNEML2ReceiverC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2Receiver::CauchyStressFromNEML2Receiver(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN29CauchyStressFromNEML2ReceiverC2ERK15InputParameters+0x0): multiple definition of `CauchyStressFromNEML2Receiver::CauchyStressFromNEML2Receiver(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN29CauchyStressFromNEML2ReceiverC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2::CauchyStressFromNEML2(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN21CauchyStressFromNEML2C2ERK15InputParameters+0x0): multiple definition of `CauchyStressFromNEML2::CauchyStressFromNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN21CauchyStressFromNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2::CauchyStressFromNEML2(InputParameters const&)':\nneml2_materials_Unity.C:(.text._ZN21CauchyStressFromNEML2C2ERK15InputParameters+0x0): multiple definition of `CauchyStressFromNEML2::CauchyStressFromNEML2(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN21CauchyStressFromNEML2C2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2::validParams()':\nneml2_materials_Unity.C:(.text._ZN21CauchyStressFromNEML211validParamsEv+0x0): multiple definition of `CauchyStressFromNEML2::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN21CauchyStressFromNEML211validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `CauchyStressFromNEML2Receiver::validParams()':\nneml2_materials_Unity.C:(.text._ZN29CauchyStressFromNEML2Receiver11validParamsEv+0x0): multiple definition of `CauchyStressFromNEML2Receiver::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN29CauchyStressFromNEML2Receiver11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2StressToMOOSE::validParams() [clone .localalias]':\nneml2_materials_Unity.C:(.text._ZN18NEML2StressToMOOSE11validParamsEv+0x0): multiple definition of `NEML2StressToMOOSE::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN18NEML2StressToMOOSE11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToRealMOOSEMaterialProperty::validParams()':\nneml2_materials_Unity.C:(.text._ZN32NEML2ToRealMOOSEMaterialProperty11validParamsEv+0x0): multiple definition of `NEML2ToRealMOOSEMaterialProperty::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN32NEML2ToRealMOOSEMaterialProperty11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToStdVectorRealMOOSEMaterialProperty::validParams()':\nneml2_materials_Unity.C:(.text._ZN41NEML2ToStdVectorRealMOOSEMaterialProperty11validParamsEv+0x0): multiple definition of `NEML2ToStdVectorRealMOOSEMaterialProperty::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN41NEML2ToStdVectorRealMOOSEMaterialProperty11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty::validParams()':\nneml2_materials_Unity.C:(.text._ZN50NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty11validParamsEv+0x0): multiple definition of `NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN50NEML2ToSymmetricRankTwoTensorMOOSEMaterialProperty11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_materials_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty::validParams()':\nneml2_materials_Unity.C:(.text._ZN51NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty11validParamsEv+0x0): multiple definition of `NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN51NEML2ToSymmetricRankFourTensorMOOSEMaterialProperty11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_actions_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2Action::act()':\nneml2_actions_Unity.C:(.text._ZN11NEML2Action3actEv+0x0): multiple definition of `NEML2Action::act()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN11NEML2Action3actEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_actions_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2Action::NEML2Action(InputParameters const&)':\nneml2_actions_Unity.C:(.text._ZN11NEML2ActionC2ERK15InputParameters+0x0): multiple definition of `NEML2Action::NEML2Action(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN11NEML2ActionC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_actions_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2Action::NEML2Action(InputParameters const&)':\nneml2_actions_Unity.C:(.text._ZN11NEML2ActionC2ERK15InputParameters+0x0): multiple definition of `NEML2Action::NEML2Action(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN11NEML2ActionC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_actions_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2Action::validParams()':\nneml2_actions_Unity.C:(.text._ZN11NEML2Action11validParamsEv+0x0): multiple definition of `NEML2Action::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN11NEML2Action11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_utils_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2Utils::addClassDescription(InputParameters&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\nneml2_utils_Unity.C:(.text._ZN10NEML2Utils19addClassDescriptionER15InputParametersRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x0): multiple definition of `NEML2Utils::addClassDescription(InputParameters&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN10NEML2Utils19addClassDescriptionER15InputParametersRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_utils_Unity.x86_64-conda-linux-gnu.opt.o: in function `NEML2Utils::libraryNotEnabledError(InputParameters const&)':\nneml2_utils_Unity.C:(.text._ZN10NEML2Utils22libraryNotEnabledErrorERK15InputParameters+0x0): multiple definition of `NEML2Utils::libraryNotEnabledError(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/neml2_Unity.x86_64-conda-linux-gnu.opt.o:neml2_Unity.C:(.text._ZN10NEML2Utils22libraryNotEnabledErrorERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `LagrangianStressDivergenceBase::computeQpJacobian()':\nkernels_lagrangian_Unity.C:(.text._ZN30LagrangianStressDivergenceBase17computeQpJacobianEv+0x0): multiple definition of `LagrangianStressDivergenceBase::computeQpJacobian()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30LagrangianStressDivergenceBase17computeQpJacobianEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `LagrangianStressDivergenceBase::computeQpOffDiagJacobian(unsigned int)':\nkernels_lagrangian_Unity.C:(.text._ZN30LagrangianStressDivergenceBase24computeQpOffDiagJacobianEj+0x0): multiple definition of `LagrangianStressDivergenceBase::computeQpOffDiagJacobian(unsigned int)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30LagrangianStressDivergenceBase24computeQpOffDiagJacobianEj+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `TotalLagrangianWeakPlaneStress::computeQpResidual()':\nkernels_lagrangian_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStress17computeQpResidualEv+0x0): multiple definition of `TotalLagrangianWeakPlaneStress::computeQpResidual()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStress17computeQpResidualEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `TotalLagrangianWeakPlaneStress::computeQpJacobian()':\nkernels_lagrangian_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStress17computeQpJacobianEv+0x0): multiple definition of `TotalLagrangianWeakPlaneStress::computeQpJacobian()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStress17computeQpJacobianEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `TotalLagrangianWeakPlaneStress::computeQpOffDiagJacobian(unsigned int)':\nkernels_lagrangian_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStress24computeQpOffDiagJacobianEj+0x0): multiple definition of `TotalLagrangianWeakPlaneStress::computeQpOffDiagJacobian(unsigned int)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStress24computeQpOffDiagJacobianEj+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizedTotalLagrangianStressDivergence::computeOffDiagJacobianScalar(unsigned int)':\nkernels_lagrangian_Unity.C:(.text._ZN42HomogenizedTotalLagrangianStressDivergence28computeOffDiagJacobianScalarEj+0x0): multiple definition of `HomogenizedTotalLagrangianStressDivergence::computeOffDiagJacobianScalar(unsigned int)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN42HomogenizedTotalLagrangianStressDivergence28computeOffDiagJacobianScalarEj+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `TotalLagrangianStressDivergenceBase<GradientOperator<GradientOperatorCoordinates::AxisymmetricCylindrical> >::initialSetup()':\nkernels_lagrangian_Unity.C:(.text._ZN35TotalLagrangianStressDivergenceBaseI16GradientOperatorIN27GradientOperatorCoordinates23AxisymmetricCylindricalEEE12initialSetupEv+0x0): multiple definition of `TotalLagrangianStressDivergenceBase<GradientOperator<GradientOperatorCoordinates::AxisymmetricCylindrical> >::initialSetup()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN35TotalLagrangianStressDivergenceBaseI16GradientOperatorIN27GradientOperatorCoordinates23AxisymmetricCylindricalEEE12initialSetupEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `non-virtual thunk to TotalLagrangianStressDivergenceBase<GradientOperator<GradientOperatorCoordinates::AxisymmetricCylindrical> >::initialSetup()':\nkernels_lagrangian_Unity.C:(.text._ZThn208_N35TotalLagrangianStressDivergenceBaseI16GradientOperatorIN27GradientOperatorCoordinates23AxisymmetricCylindricalEEE12initialSetupEv+0x0): multiple definition of `non-virtual thunk to TotalLagrangianStressDivergenceBase<GradientOperator<GradientOperatorCoordinates::AxisymmetricCylindrical> >::initialSetup()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZThn208_N35TotalLagrangianStressDivergenceBaseI16GradientOperatorIN27GradientOperatorCoordinates23AxisymmetricCylindricalEEE12initialSetupEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `LagrangianStressDivergenceBase::precalculateJacobian()':\nkernels_lagrangian_Unity.C:(.text._ZN30LagrangianStressDivergenceBase20precalculateJacobianEv+0x0): multiple definition of `LagrangianStressDivergenceBase::precalculateJacobian()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30LagrangianStressDivergenceBase20precalculateJacobianEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `LagrangianStressDivergenceBase::precalculateOffDiagJacobian(unsigned int)':\nkernels_lagrangian_Unity.C:(.text._ZN30LagrangianStressDivergenceBase27precalculateOffDiagJacobianEj+0x0): multiple definition of `LagrangianStressDivergenceBase::precalculateOffDiagJacobian(unsigned int)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30LagrangianStressDivergenceBase27precalculateOffDiagJacobianEj+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `LagrangianStressDivergenceBase::LagrangianStressDivergenceBase(InputParameters const&)':\nkernels_lagrangian_Unity.C:(.text._ZN30LagrangianStressDivergenceBaseC2ERK15InputParameters+0x0): multiple definition of `LagrangianStressDivergenceBase::LagrangianStressDivergenceBase(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30LagrangianStressDivergenceBaseC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `LagrangianStressDivergenceBase::LagrangianStressDivergenceBase(InputParameters const&)':\nkernels_lagrangian_Unity.C:(.text._ZN30LagrangianStressDivergenceBaseC2ERK15InputParameters+0x0): multiple definition of `LagrangianStressDivergenceBase::LagrangianStressDivergenceBase(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30LagrangianStressDivergenceBaseC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizedTotalLagrangianStressDivergence::HomogenizedTotalLagrangianStressDivergence(InputParameters const&)':\nkernels_lagrangian_Unity.C:(.text._ZN42HomogenizedTotalLagrangianStressDivergenceC2ERK15InputParameters+0x0): multiple definition of `HomogenizedTotalLagrangianStressDivergence::HomogenizedTotalLagrangianStressDivergence(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN42HomogenizedTotalLagrangianStressDivergenceC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizedTotalLagrangianStressDivergence::HomogenizedTotalLagrangianStressDivergence(InputParameters const&)':\nkernels_lagrangian_Unity.C:(.text._ZN42HomogenizedTotalLagrangianStressDivergenceC2ERK15InputParameters+0x0): multiple definition of `HomogenizedTotalLagrangianStressDivergence::HomogenizedTotalLagrangianStressDivergence(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN42HomogenizedTotalLagrangianStressDivergenceC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `TotalLagrangianWeakPlaneStress::TotalLagrangianWeakPlaneStress(InputParameters const&)':\nkernels_lagrangian_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStressC2ERK15InputParameters+0x0): multiple definition of `TotalLagrangianWeakPlaneStress::TotalLagrangianWeakPlaneStress(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStressC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `TotalLagrangianWeakPlaneStress::TotalLagrangianWeakPlaneStress(InputParameters const&)':\nkernels_lagrangian_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStressC2ERK15InputParameters+0x0): multiple definition of `TotalLagrangianWeakPlaneStress::TotalLagrangianWeakPlaneStress(InputParameters const&)'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStressC2ERK15InputParameters+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `LagrangianStressDivergenceBase::validParams()':\nkernels_lagrangian_Unity.C:(.text._ZN30LagrangianStressDivergenceBase11validParamsEv+0x0): multiple definition of `LagrangianStressDivergenceBase::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30LagrangianStressDivergenceBase11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `TotalLagrangianWeakPlaneStress::validParams()':\nkernels_lagrangian_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStress11validParamsEv+0x0): multiple definition of `TotalLagrangianWeakPlaneStress::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN30TotalLagrangianWeakPlaneStress11validParamsEv+0x0): first defined here\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/../lib/gcc/x86_64-conda-linux-gnu/12.3.0/../../../../x86_64-conda-linux-gnu/bin/ld: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_lagrangian_Unity.x86_64-conda-linux-gnu.opt.o: in function `HomogenizedTotalLagrangianStressDivergence::validParams()':\nkernels_lagrangian_Unity.C:(.text._ZN42HomogenizedTotalLagrangianStressDivergence11validParamsEv+0x0): multiple definition of `HomogenizedTotalLagrangianStressDivergence::validParams()'; /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/build/unity_src/.libs/kernels_Unity.x86_64-conda-linux-gnu.opt.o:kernels_Unity.C:(.text._ZN42HomogenizedTotalLagrangianStressDivergence11validParamsEv+0x0): first defined here\ncollect2: error: ld returned 1 exit status\nmake: *** [/home/julian.munz@anggeo.tu-berlin.de/projects/moose/framework/app.mk:377: /home/julian.munz@anggeo.tu-berlin.de/projects/moose/modules/solid_mechanics/lib/libsolid_mechanics-opt.la] Error 1\nEncountering Errors? Please include diagnostic output\n(moose) julian.munz@f6-ing-ubuntuvm-004:~/projects/moose/scripts$ cd ~/projects/moose\nscripts/diagnostics.sh\n####################################################################################################\nInfluential Environment Variables\n\nCC_FOR_BUILD=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-cc\nCC=mpicc\nCFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include\nCONDA_BUILD_SYSROOT=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/x86_64-conda-linux-gnu/sysroot\nCONDA_CHANNEL=https://conda.software.inl.gov/public\nCONDA_DEFAULT_ENV=moose\nCONDA_EXE=/home/julian.munz@anggeo.tu-berlin.de/miniforge/bin/conda\nCONDA_PREFIX_1=/home/julian.munz@anggeo.tu-berlin.de/miniforge\nCONDA_PREFIX=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose\nCONDA_PROMPT_MODIFIER=(moose) \nCONDA_PYTHON_EXE=/home/julian.munz@anggeo.tu-berlin.de/miniforge/bin/python\nCONDA_SHLVL=2\nCONDA_TOOLCHAIN_BUILD=x86_64-conda-linux-gnu\nCONDA_TOOLCHAIN_HOST=x86_64-conda-linux-gnu\nCPPFLAGS=-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include\nCPP=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-cpp\nCURL_CA_BUNDLE=\nCXXFILT=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-c++filt\nCXXFLAGS=-fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -std=c++17\nCXX_FOR_BUILD=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-c++\nCXX=mpicxx\nF77=mpif77\nF90=mpif90\nF95=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-f95\nFC_FOR_BUILD=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-gfortran\nFC=mpif90\nFFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include\nFI_PROVIDER=tcp\nHDF5_DIR=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose\nLDFLAGS=-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,--allow-shlib-undefined -Wl,-rpath,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,-rpath-link,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib\nLD_GOLD=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-ld.gold\nLD=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/x86_64-conda-linux-gnu-ld\nLIBMESH_DIR=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/libmesh\nMOOSE_JOBS=6\nMOOSE_NO_CODESIGN=true\nPATH=/home/julian.munz@anggeo.tu-berlin.de/.vscode-server/cli/servers/Stable-38c31bc77e0dd6ae88a4e9cc93428cc27a56ba40/server/bin/remote-cli:/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin:/home/julian.munz@anggeo.tu-berlin.de/miniforge/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/wasp/bin\nPETSC_DIR=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/petsc\nREQUESTS_CA_BUNDLE=\nSSL_CERT_FILE=/usr/lib/ssl/certs/ca-certificates.crt\nWASP_DIR=/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/wasp\n####################################################################################################\nCompiler(s) (CC CXX FC F77 F90):\n\nwhich $CC; /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/mpicc\n$CC --version; x86_64-conda-linux-gnu-cc (conda-forge gcc 12.3.0-13) 12.3.0\n$CC -show; x86_64-conda-linux-gnu-cc -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,-rpath,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,-rpath -Wl,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nwhich $CXX; /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/mpicxx\n$CXX --version; x86_64-conda-linux-gnu-c++ (conda-forge gcc 12.3.0-13) 12.3.0\n$CXX -show; x86_64-conda-linux-gnu-c++ -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,-rpath,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -lmpicxx -Wl,-rpath -Wl,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nwhich $FC; /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/mpif90\n$FC --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$FC -show; x86_64-conda-linux-gnu-gfortran -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,-rpath,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nwhich $F77; /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/mpif77\n$F77 --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$F77 -show; x86_64-conda-linux-gnu-gfortran -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -fallow-argument-mismatch -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,-rpath,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nwhich $F90; /home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/mpif90\n$F90 --version; GNU Fortran (conda-forge gcc 12.3.0-7) 12.3.0\n$F90 -show; x86_64-conda-linux-gnu-gfortran -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,-rpath,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -I/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/include -L/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -lmpifort -Wl,-rpath -Wl,/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/lib -Wl,--enable-new-dtags -lmpi\n\nOK\n####################################################################################################\nPython Sanity Checks\n\n/usr/bin/env python3 --version; (reporting as: Python 3.11.8) matches\nwhich python3 python;\n\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/python3 --version; == Python 3.11.8\n/home/julian.munz@anggeo.tu-berlin.de/miniforge/envs/moose/bin/python --version; == Python 3.11.8\n\nOK\n####################################################################################################\nPython Modules (TestHarness, run-ability)\n\nOK\n####################################################################################################\nMOOSE Repository/Conda Version Checks\n\n              Installed     Required\n\nOK\n\nchecks PASSED",
          "url": "https://github.com/idaholab/moose/discussions/28665",
          "updatedAt": "2024-09-19T19:19:24Z",
          "publishedAt": "2024-09-19T12:17:15Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI would:\n\nsave all your work with git commit\nclean the repo with git clean -Xfd in moose/\nthen rebuild",
                  "url": "https://github.com/idaholab/moose/discussions/28665#discussioncomment-10693216",
                  "updatedAt": "2024-09-19T12:43:00Z",
                  "publishedAt": "2024-09-19T12:42:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "julianseb"
                          },
                          "bodyText": "It worked. Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/28665#discussioncomment-10697191",
                          "updatedAt": "2024-09-19T19:19:25Z",
                          "publishedAt": "2024-09-19T19:19:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "ProjectionAux in parallel with lower dimensional elements",
          "author": {
            "login": "mcacace"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nDear moose team,\nI'm trying to convert an elemental auxvariable (storing a material property) onto a nodal auxvariable via ProjectionAux for cases where I have multiple lower dimensional elements in my simulation (3D, 2D and 1D). The error only occurs if I run on multiple nodes. I tried to debug in parallel, but after setting breakpoints, the simulations stops without giving me the chance to get the backtrace and the only message I have reads\n\nlibMesh terminating:\n[1] ../src/systems/system.C, line 2440, compiled May 15 2024 at 11:55:37\n\nI tried to have a look at the system class in libmesh, and it might point to a problem inside Number System::point_value (though I am relying on a conda installation locally and cannot tell if the files are the same).\nAny help? Thanks for any feedback\nOn a side note: I created a very simple file only relying on the framework objects, and I can share if needed.",
          "url": "https://github.com/idaholab/moose/discussions/28599",
          "updatedAt": "2024-09-19T19:14:43Z",
          "publishedAt": "2024-09-11T10:47:32Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "mcacace"
                  },
                  "bodyText": "Forgot to add that without debugger the error is segfault (not sure to which libmesh_assert calls it does refer to)",
                  "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10613044",
                  "updatedAt": "2024-09-11T10:50:15Z",
                  "publishedAt": "2024-09-11T10:50:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Manage to have the bt (attached) and indeed it points to the Number System::point_value call. Sorry for multiple posting\nbt.log",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10613316",
                          "updatedAt": "2024-09-11T11:22:01Z",
                          "publishedAt": "2024-09-11T11:22:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The ProjectionAux has not been fitted to handle lower D elements. We can take a look if you have a minimal example, to see if it can be expanded",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10614939",
                          "updatedAt": "2024-09-11T13:51:46Z",
                          "publishedAt": "2024-09-11T13:51:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "@GiudGiud thanks! My simple test case sums up to around 4k dofs. If you think is doable (in my case it debug over seconds and the segfault only occurs with >=3 processors) I can share it with you (mesh+input file). What would be your preferred options? Thanks for looking into it",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10615904",
                          "updatedAt": "2024-09-11T15:20:03Z",
                          "publishedAt": "2024-09-11T15:20:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "4k is a little much, we ll want something that should be useable as a test after",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10617346",
                          "updatedAt": "2024-09-11T17:32:11Z",
                          "publishedAt": "2024-09-11T17:32:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Ok, tomorrow will try to set up a simple model.",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10617618",
                          "updatedAt": "2024-09-11T18:00:26Z",
                          "publishedAt": "2024-09-11T18:00:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "@GiudGiud I create a minimal example (17 dofs).\nMy suspect is that the error occurs once you have multiple families of LDs (2D and 1D in my test case).\nPlease, let me know how do you prefer for me to share the input and mesh file (sorry I could not find any MeshGenerator nor gmsh functions to have all LDs inside).\nThanks again for helping",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10624027",
                          "updatedAt": "2024-09-12T09:22:37Z",
                          "publishedAt": "2024-09-12T09:22:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think lower-D is immediately a problem, the other variable would not be defined on the lower-D element.\nyou could put the two files on a public github repo of yours and paste a link here for example",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10625388",
                          "updatedAt": "2024-09-12T11:50:06Z",
                          "publishedAt": "2024-09-12T11:50:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "Sorry for being late. Here is the github repo (projectionAux).\nThanks again for helping",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10659183",
                          "updatedAt": "2024-09-16T12:33:43Z",
                          "publishedAt": "2024-09-16T12:33:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I m not hitting a seg fault on this example.\nAre there lower D elements in this example? I see a nodal and an elemental variable but they are not block restricted so they would be defined everywhere",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10659398",
                          "updatedAt": "2024-09-16T12:55:57Z",
                          "publishedAt": "2024-09-16T12:55:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "There should be a 2D and 1D LD elements. Is it possible that you are running on a single processor? The segfault usually occurs while running over multiple processors. And yes, the auxvariables are defined for all blocks, 3D, 2D and 1D.",
                          "url": "https://github.com/idaholab/moose/discussions/28599#discussioncomment-10659424",
                          "updatedAt": "2024-09-16T12:58:33Z",
                          "publishedAt": "2024-09-16T12:58:32Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Applying Neumann BCs to Randomly Distributed Spherical Particles",
          "author": {
            "login": "Josh-Web-700"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHello,\nI am working on a phase-field solidification simulation. I will be trying to create a set of randomly distributed solid spheres in the domain, each with a no-flux boundary condition applied at the surface.\nI was wondering if it would be possible to use MultiSmoothCircleIC for creating an initial condition with multiple spherical solid particles in the domain, and then to apply a no flux Neumann boundary condition to the surface of each of these particles (the dot product of the gradient of the order parameter with the sphere's surface normals should be zero).\nWhat is the best way to apply this BC? Is there any built-in functionality in MOOSE for this? If not, I was wondering if it is possible to modify MultiSmoothCircleIC so that it exports the locations and sizes of each of the spherical particles to a set of variables that can be read by the BCs or Mesh system. Then, the BCs system would somehow need to be able to compute the normal to the nodes on the surface of the sphere and apply the boundary condition.\nIf I understand the MOOSE system and my problem correctly, I have three questions:\n\nWould it be better to supply a mesh with randomly distributed spherical \"holes,\" and apply the BCs to these internal surfaces, or would it be better to begin with a uniform rectangular mesh and apply the BCs to some defined spherical surfaces contained in the domain?\nIf I do need to supply a mesh with randomly distributed spherical holes, how would I customize the BCs system in MOOSE to apply a Neumann BC to these interior surfaces?\nIf it is possible to create these BCs on a uniform rectangular mesh without any \"holes\", what is the best method and syntax for doing so?\n\nFrom my understanding, it looks like I might be able to use ParsedGenerateSideset to define spherical sidesets to apply these BCs, but I am just not sure if this is the most efficient way to do so.\nPlease let me know if you need further clarification. If this is possible with MOOSE, it would be greatly appreciated if you could guide me to the best way to do this. Thank you so much!",
          "url": "https://github.com/idaholab/moose/discussions/28663",
          "updatedAt": "2024-09-19T14:49:59Z",
          "publishedAt": "2024-09-19T03:37:04Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\n\nwould certainly be good. You can do this in gmsh, in cubit learn, or use the XYZDelaunayTriangulator which just got added yesterday (in the next branch only right now) with SphereMeshGenerators for the spheres (and transformGenerator to translate the spheres)\n\n\nBCs are not applied inside the domain of a variable. Is the variable you plan to apply the BC on defined on both sides of the spherical boundaries?\n\n\nMeshGenerators (such as the ParsedGenerateSideset), which are in charge of modifying the mesh at initialization, cannot read variable values, let alone gradient. So instead you will want to create a MeshModifier, and look at the variable gradient on every element side.",
                  "url": "https://github.com/idaholab/moose/discussions/28663#discussioncomment-10692356",
                  "updatedAt": "2024-09-19T11:36:51Z",
                  "publishedAt": "2024-09-19T11:23:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Josh-Web-700"
                          },
                          "bodyText": "Just to clarify, what is the purpose of using a MeshModifier? Would that be for a dynamic or changing mesh, or is there another reason to use a MeshModifier for a mesh like mine that would be static and unchanging with time?\nThank you again!",
                          "url": "https://github.com/idaholab/moose/discussions/28663#discussioncomment-10694411",
                          "updatedAt": "2024-09-19T14:36:35Z",
                          "publishedAt": "2024-09-19T14:35:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The intent of the MeshModifier system is to modify the mesh. It can be for dynamically modifying the mesh, or it can be executed on the INITIAL execue_on flag, only once. The difference with mesh generators is that mesh modifiers can couple to variables, because they execute after the setup phase",
                          "url": "https://github.com/idaholab/moose/discussions/28663#discussioncomment-10694450",
                          "updatedAt": "2024-09-19T14:40:26Z",
                          "publishedAt": "2024-09-19T14:40:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Josh-Web-700"
                          },
                          "bodyText": "That makes sense, thank you. That way, the Mesh Modifier can modify the mesh to adapt to the MultiSmoothCircleIC condition, and do so only on the INITIAL execute_on flag.\nThank you again for your help!",
                          "url": "https://github.com/idaholab/moose/discussions/28663#discussioncomment-10694574",
                          "updatedAt": "2024-09-19T14:50:00Z",
                          "publishedAt": "2024-09-19T14:49:59Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "Josh-Web-700"
                  },
                  "bodyText": "Yes, in case (2) my variable would be defined on both sides of the spherical boundaries, and I see now why that wouldn't work to apply a boundary condition. That is helpful, thank you so much!",
                  "url": "https://github.com/idaholab/moose/discussions/28663#discussioncomment-10692775",
                  "updatedAt": "2024-09-19T12:01:08Z",
                  "publishedAt": "2024-09-19T12:01:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Issue with Custom kernel",
          "author": {
            "login": "ashishdhole"
          },
          "bodyText": "Hello,\nI made this new kernel to incorporate the friction pressure as explained in\n10.1088/0965-0393/20/6/065008\nIdeally, after sometime the friction pressure should get equal to or greater than driving pressure and there should not be any grain boundary movement. but for some reason this is not happening. Is there any issue with the code? Can you have a look at it.\nThe kernel is a combination of two existing kernels ACGrGrPoly and ACInterface with an extra condition and a term I called friction_energy.\n#include \"AdvanceFrictionPressure.h\"\n\nregisterMooseObject(\"pfubcApp\", AdvanceFrictionPressure);\n\nInputParameters\nAdvanceFrictionPressure::validParams()\n{\n  InputParameters params = JvarMapKernelInterface<Kernel>::validParams();\n  params.addClassDescription(\"Gradient energy Allen-Cahn Kernel\");\n  params.addParam<MaterialPropertyName>(\"mob_name\", \"L\", \"The mobility used with the kernel\");\n  params.addParam<MaterialPropertyName>(\"kappa_name\", \"kappa_op\", \"The kappa used with the kernel\");\n  params.addParam<bool>(\"variable_L\",\n                        true,\n                        \"The mobility is a function of any MOOSE variable (if false, L must be \"\n                        \"constant over the entire domain!)\");\n  params.addCoupledVar(\"g\", 0.0, \"Friction pressure\");\n  params.addRequiredCoupledVarWithAutoBuild(\n      \"v\", \"var_name_base\", \"op_num\", \"Array of coupled variables\");\n  params.addParam<MaterialPropertyName>(\"sigma\", \"GB energy (sigma)\");\n  return params;\n}\n\nAdvanceFrictionPressure::AdvanceFrictionPressure(const InputParameters & parameters)\n  : DerivativeMaterialInterface<JvarMapKernelInterface<Kernel>>(parameters),\n    _L(getMaterialProperty<Real>(\"mob_name\")),\n    _kappa(getMaterialProperty<Real>(\"kappa_name\")),\n    _variable_L(getParam<bool>(\"variable_L\")),\n    _dLdop(getMaterialPropertyDerivative<Real>(\"mob_name\", _var.name())),\n    _d2Ldop2(getMaterialPropertyDerivative<Real>(\"mob_name\", _var.name(), _var.name())),\n    _dkappadop(getMaterialPropertyDerivative<Real>(\"kappa_name\", _var.name())),\n    _dLdarg(_n_args),\n    _d2Ldargdop(_n_args),\n    _d2Ldarg2(_n_args),\n    _dkappadarg(_n_args),\n    _gradarg(_n_args),\n    _g(coupledValue(\"g\")),\n    _mu(getMaterialProperty<Real>(\"mu\")),\n    _op_num(coupledComponents(\"v\")),\n    _vals(coupledValues(\"v\")),\n    _vals_var(coupledIndices(\"v\")),\n    _sigma(getMaterialProperty<Real>(\"sigma\")),\n    _gamma(getMaterialProperty<Real>(\"gamma_asymm\"))\n{\n  // Initialize derivatives and gradients for mobility, kappa, and coupled variables\n  for (unsigned int i = 0; i < _n_args; ++i)\n  {\n    MooseVariable * ivar = _coupled_standard_moose_vars[i];\n    const VariableName iname = ivar->name();\n\n    if (iname == _var.name())\n    {\n      // Validate that the kernel variable is not specified in coupled variables\n      if (isCoupled(\"args\"))\n        paramError(\"args\",\n                   \"The kernel variable should not be specified in the coupled `args` parameter.\");\n      else\n        paramError(\"coupled_variables\",\n                   \"The kernel variable should not be specified in the coupled `coupled_variables` \"\n                   \"parameter.\");\n    }\n\n    // Assign material property derivatives and gradients\n    _dLdarg[i] = &getMaterialPropertyDerivative<Real>(\"mob_name\", i);\n    _dkappadarg[i] = &getMaterialPropertyDerivative<Real>(\"kappa_name\", i);\n    _d2Ldargdop[i] = &getMaterialPropertyDerivative<Real>(\"mob_name\", iname, _var.name());\n    _gradarg[i] = &(ivar->gradSln());\n\n    _d2Ldarg2[i].resize(_n_args);\n    for (unsigned int j = 0; j < _n_args; ++j)\n      _d2Ldarg2[i][j] = &getMaterialPropertyDerivative<Real>(\"mob_name\", i, j);\n  }\n}\n\nvoid\nAdvanceFrictionPressure::initialSetup()\n{\n  // Validate coupling for material properties\n  validateCoupling<Real>(\"mob_name\");\n  validateCoupling<Real>(\"kappa_name\");\n}\n\nReal\nAdvanceFrictionPressure::assignThisOp()\n{\n  return _u[_qp];\n}\n\nstd::vector<Real>\nAdvanceFrictionPressure::assignOtherOps()\n{\n  std::vector<Real> other_ops(_op_num);\n  for (unsigned int s = 0; s < _op_num; ++s)\n    other_ops[s] = (*_vals[s])[_qp];\n\n  return other_ops;\n}\n\nRealGradient\nAdvanceFrictionPressure::gradL()\n{\n  RealGradient gradient = _grad_u[_qp] * _dLdop[_qp];\n  for (unsigned int i = 0; i < _n_args; ++i)\n    gradient += (*_gradarg[i])[_qp] * (*_dLdarg[i])[_qp];\n  return gradient;\n}\n\nRealGradient\nAdvanceFrictionPressure::nablaLPsi()\n{\n  // Compute the gradient of L*psi using the product rule\n  RealGradient gradient = _L[_qp] * _grad_test[_i][_qp];\n\n  if (_variable_L)\n    gradient += gradL() * _test[_i][_qp];\n\n  return gradient;\n}\n\nRealGradient\nAdvanceFrictionPressure::kappaNablaLPsi()\n{\n  return _kappa[_qp] * nablaLPsi();\n}\n\nReal\nAdvanceFrictionPressure::computeQpResidual()\n{\n  Real op = assignThisOp();\n  std::vector<Real> other_ops(_op_num);\n  other_ops = assignOtherOps();\n  Real g = _g[_qp];\n\n  // Initialize sums for order parameters\n  Real SumOPGj = 0.0;\n  Real SumOPj = 0.0;\n  for (unsigned int i = 0; i < _op_num; ++i)\n  {\n    SumOPj += other_ops[i] * other_ops[i];\n    SumOPGj += other_ops[i];\n  }\n\n  // Compute intermediate values\n  Real inter = _grad_u[_qp] * _kappa[_qp] * _grad_test[_i][_qp];\n  Real op_cubed = op * op * op;\n  Real f_loc = _mu[_qp] * (op_cubed - op + 2.0 * _gamma[_qp] * op * SumOPj);\n  Real total = f_loc + inter;\n  Real friction_energy = 3.0 * g * op * SumOPGj;\n\n  // Compute sign of total\n  const int sgn = (total > 0) - (total < 0);\n\n  // Initialize residual result\n  Real epsilon = 1e-5;\n  Real Res = 0.0;\n  Real total_abs = std::abs(total);\n  Real friction_energy_abs = std::abs(friction_energy);\n  Real max_abs = std::max(total_abs, friction_energy_abs);\n\n  // Compute residual if condition is met\n  if (total_abs - friction_energy_abs > epsilon * max_abs)\n  {\n    Real op_cubed = op * op * op;\n    Real op_term = op_cubed - op + 2.0 * _gamma[_qp] * op * SumOPj;\n    Real grad_u_term = _grad_u[_qp] * kappaNablaLPsi();\n    Real sigma_term = _L[_qp] * sgn * (3.0 * g * op * SumOPGj);\n\n    Res = (_L[_qp] * _mu[_qp] * op_term) + grad_u_term - sigma_term;\n  }\n  else\n  {\n    Res = 0;\n  }\n\n  return Res;\n}\n\nReal\nAdvanceFrictionPressure::computeQpJacobian()\n{\n  // Assign primary and other order parameters\n  Real op = assignThisOp();\n  std::vector<Real> other_ops = assignOtherOps(); // Direct assignment\n  const Real g = _g[_qp];\n\n  // Initialize sums for order parameters\n  Real SumOPGj = 0.0;\n  Real SumOPj = 0.0;\n  for (unsigned int i = 0; i < _op_num; ++i)\n  {\n    SumOPj += other_ops[i] * other_ops[i];\n    SumOPGj += other_ops[i];\n  }\n\n  // Compute intermediate values\n  Real inter = _grad_u[_qp] * _kappa[_qp] * _grad_test[_i][_qp];\n  Real op_cubed = op * op * op;\n  Real f_loc = _mu[_qp] * (op_cubed - op + 2.0 * _gamma[_qp] * op * SumOPj);\n  Real total = f_loc + inter;\n  Real friction_energy = 3.0 * g * op * SumOPGj;\n\n  // Compute sign of total\n  const int sgn = (total > 0) - (total < 0);\n\n  // Compute the derivative of the gradient of the mobility\n  RealGradient dsum =\n      (_dkappadop[_qp] * _L[_qp] + _kappa[_qp] * _dLdop[_qp]) * _phi[_j][_qp] * _grad_test[_i][_qp];\n\n  if (_variable_L)\n  {\n    RealGradient dgradL =\n        _grad_phi[_j][_qp] * _dLdop[_qp] + _grad_u[_qp] * _phi[_j][_qp] * _d2Ldop2[_qp];\n\n    for (unsigned int i = 0; i < _n_args; ++i)\n      dgradL += (*_gradarg[i])[_qp] * _phi[_j][_qp] * (*_d2Ldargdop[i])[_qp];\n\n    dsum += (_kappa[_qp] * dgradL + _dkappadop[_qp] * _phi[_j][_qp] * gradL()) * _test[_i][_qp];\n  }\n\n  Real epsilon = 1e-5;\n  Real total_abs = std::abs(total);\n  Real friction_energy_abs = std::abs(friction_energy);\n  Real max_abs = std::max(total_abs, friction_energy_abs);\n\n  Real Jac = 0.0; // Initial value\n\n  if (total_abs - friction_energy_abs > epsilon * max_abs)\n  {\n    Real op_squared = op * op;\n    Real phi_term = _phi[_j][_qp] * (3.0 * op_squared - 1.0 + 2.0 * _gamma[_qp] * SumOPj);\n    Real grad_phi_term = _grad_phi[_j][_qp] * kappaNablaLPsi();\n    Real grad_u_term = _grad_u[_qp] * dsum;\n    Real sigma_term = _L[_qp] * sgn * _phi[_j][_qp] * (3.0 * g * SumOPGj);\n\n    Jac = (_L[_qp] * _mu[_qp] * phi_term) + grad_phi_term + grad_u_term - sigma_term;\n  }\n  else\n  {\n    Jac = 0;\n  }\n\n  return Jac;\n}\n\nI deal behaviour\n\nBut I am getting something like this\n\nThank you",
          "url": "https://github.com/idaholab/moose/discussions/28659",
          "updatedAt": "2024-09-19T02:01:11Z",
          "publishedAt": "2024-09-18T21:03:14Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nso this term is supposed to be added only in certain conditions and counter-balance another term in the equations?",
                  "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686655",
                  "updatedAt": "2024-09-18T22:30:46Z",
                  "publishedAt": "2024-09-18T22:30:45Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "yes. only when the total energy is greater than friction energy it is added/subtracted otherwise the entire change is supposed to be zero",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686712",
                          "updatedAt": "2024-09-18T22:38:08Z",
                          "publishedAt": "2024-09-18T22:38:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Can you track both total energy and friction energy? Does it ever get in those conditions?",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686735",
                          "updatedAt": "2024-09-18T22:44:12Z",
                          "publishedAt": "2024-09-18T22:44:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "Ideally it should get. As the grain grows and grain boundary curvature decreases, the total energy should reduce reaching a point where it is either equal or less than friction energy. I tried to put std::cout << total<<std::endl in the code but it gives me the value of each qp at each iteration so it is almost impossible to track it after say 100 timesteps because to reach 100 timestep it takes forever. if there is a way to trace it it would help. But do you think the code is right?",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686753",
                          "updatedAt": "2024-09-18T22:48:00Z",
                          "publishedAt": "2024-09-18T22:47:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you could use material properties or auxiliary variables to output these as fields.\nI think the condition might be met on part of the domain, and not on the rest. This could be a problem for your results",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686773",
                          "updatedAt": "2024-09-18T22:53:03Z",
                          "publishedAt": "2024-09-18T22:53:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "any example I should look for material properties or auxiliary variables to output these as fields. Even if I did that, the calculations happens at every qp. I can see the conditions are met, for different value of friction pressure I see different slope in the plot.\n\nbut never complete stop.",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686787",
                          "updatedAt": "2024-09-18T22:58:39Z",
                          "publishedAt": "2024-09-18T22:58:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you can look at the MaterialRealAux to see how material properties are output.\nBut now that I think about it, you wont be able to output _test and grad_test there.\nCan you examine the energy and friction-energy without using these terms?",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686846",
                          "updatedAt": "2024-09-18T23:13:29Z",
                          "publishedAt": "2024-09-18T23:13:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "I can but again there is not one single value for the entire time step. they are calculated for each qp. SO I don't think that will be of any help. also there are other variables that comes into picture like op which varies from 0 to 1 at the interface and  they can get any value for different interfaces. I just want to confirm that the code I make is following the logic if such conditions occur. If friction > total will my code give 0 value or there is something hidden that prevents this from happening. Because if the code is correct, then probably it is the material properties I need to check, but if the code is not right then the halt condition will never reach.",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686883",
                          "updatedAt": "2024-09-18T23:20:48Z",
                          "publishedAt": "2024-09-18T23:20:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "the if condition looks correct.\n\nI can but again there is not one single value for the entire time step. they are calculated for each qp.\n\nyes this is exactly why outputting the whole field using an auxiliary variable will show you where this condition is met or not met, spatially everywhere on the domain",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686891",
                          "updatedAt": "2024-09-18T23:22:53Z",
                          "publishedAt": "2024-09-18T23:22:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "Ok got it. Let me look into it. Say the condition is achieving, what changes I need to make?\nCan I simply go with\nif (total_abs > friction_energy_abs)\nI am worried about the floating points. because the total at some qp can reach 1e-45 or even less than this. same with friction energy.",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10686926",
                          "updatedAt": "2024-09-18T23:31:42Z",
                          "publishedAt": "2024-09-18T23:31:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ashishdhole"
                          },
                          "bodyText": "I think I won't be able to output the total or friction pressure. Instead in the code I made some changes that output the _qp where the condition is achieved\n  if (total_abs - friction_energy_abs > epsilon * max_abs)\n  {\n    Real op_cubed = op * op * op;\n    Real op_term = op_cubed - op + 2.0 * _gamma[_qp] * op * SumOPj;\n    Real grad_u_term = _grad_u[_qp] * kappaNablaLPsi();\n    Real sigma_term = _L[_qp] * sgn * (3.0 * g * op * SumOPGj);\n    Res = (_L[_qp] * _mu[_qp] * op_term) + grad_u_term - sigma_term;\n  }\n  else if (total_abs - friction_energy_abs < epsilon * max_abs)\n  {\n    std::cout << _op_num << std::endl;\n    std::cout << _qp << std::endl;\n    Res = 0;\n  }\n  else\n  {\n    Res = 0;\n  }\n\nsuch that it output the _qp when condition is met.\nI am getting following output\n\n3\n0\n3\n2\n2\n0\n3\n2\n1\n3\n0\n0\n2\n0\n2\n2\n2\n3\n3\n2\n 4 Nonlinear |R| = 3.038470e-03\n Solve Converged!\n  Finished Solving                                                                       [ 67.60 s] [  489 MB]\n\nOutlier Variable Residual Norms:\n  gr1: 1.568510e-03\n  gr7: 1.298072e-03\n  gr12: 1.777946e-03\n\nPostprocessor Values:\n+----------------+----------------+----------------+----------------+----------------+\n| time           | R              | avg_grain_vol  | g              | grain_tracker  |\n+----------------+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   1.883946e+02 |   0.000000e+00 |   2.000000e+02 |\n|   5.000000e-02 |   7.855635e+00 |   1.938708e+02 |   8.322013e+03 |   2.000000e+02 |\n|   1.100000e-01 |   7.917776e+00 |   1.969501e+02 |   8.322013e+03 |   2.000000e+02 |\n|   1.820000e-01 |   7.930424e+00 |   1.975799e+02 |   8.322013e+03 |   2.000000e+02 |\n|   2.684000e-01 |   7.951380e+00 |   1.986255e+02 |   8.322013e+03 |   1.990000e+02 |\n|   3.720800e-01 |   7.971909e+00 |   1.996524e+02 |   8.322013e+03 |   1.980000e+02 |\n|   4.964960e-01 |   8.012429e+00 |   2.016872e+02 |   8.322013e+03 |   1.960000e+02 |\n+----------------+----------------+----------------+----------------+----------------+\n\n\nthis is just a part of output. I think they are qp index number. can you make anything out of it?\nThanks",
                          "url": "https://github.com/idaholab/moose/discussions/28659#discussioncomment-10687170",
                          "updatedAt": "2024-09-19T00:30:15Z",
                          "publishedAt": "2024-09-19T00:30:14Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "App AuxKernel value changed with new MOOSE build",
          "author": {
            "login": "smpark7"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nI am currently working on bringing the Moltres app up to date with the latest MOOSE build and moose-dev=2024.08.12.\nWe have tests containing an AuxKernel (WallShearStressAux) that we developed. With an old MOOSE build from March 6 2024, the auxkernel along a boundary evaluates to values ranging from 0.0007 to 0.016, which matches our manual calculations. With the latest MOOSE build, the auxkernel evaluates to values ranging from 0.008 to 5.4. As far as I can tell, all other variables and values match our gold copy.\nCould there have been any changes to MOOSE that affected the auxkernel? E.g., monomial constant auxvariable value computations along boundaries, retrieval of variable gradients for auxkernel computations, etc.\nOur source code for WallShearStressAux is here.  It works with vector velocity variables from the INSAD system.",
          "url": "https://github.com/idaholab/moose/discussions/28434",
          "updatedAt": "2024-09-18T19:09:03Z",
          "publishedAt": "2024-08-20T02:35:35Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhere are the diffs happening? In a regular external boundary? Or an internal boundary? Or an interface?\n@lindsayad",
                  "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10390796",
                  "updatedAt": "2024-08-20T03:55:23Z",
                  "publishedAt": "2024-08-20T03:55:22Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "smpark7"
                          },
                          "bodyText": "The WallShearStressAux is limited to the top boundary with boundary = top, which is a regular external wall boundary.",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10391989",
                          "updatedAt": "2024-08-20T06:59:47Z",
                          "publishedAt": "2024-08-20T06:59:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I cannot think of anything off the top of my head. This test case must not have been checked in? Otherwise we would have caught the change in CI",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10401327",
                          "updatedAt": "2024-08-21T00:24:55Z",
                          "publishedAt": "2024-08-21T00:24:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "smpark7"
                          },
                          "bodyText": "Could it be because the auxkernel is only in our heavy tests?\nProbably unrelated, but we recently accidentally broke the CIVET automated merge to master for Moltres because we wanted to limit push privileges of our group users. Do you know how to fix this without lifting the push restrictions?\nIn the meantime, I'll try building Moltres with various MOOSE builds to pinpoint the original issue.",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10401409",
                          "updatedAt": "2024-08-21T00:42:14Z",
                          "publishedAt": "2024-08-21T00:42:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "If it's only tested with heavy, then yea that would be why we missed it when testing MOOSE. I will have to ask @milljm or @loganharbour about the push issue",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10402513",
                          "updatedAt": "2024-08-21T03:50:12Z",
                          "publishedAt": "2024-08-21T03:50:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "smpark7"
                          },
                          "bodyText": "After some testing, we found that the tests pass when compiled with MOOSE from July 24 and moose-dev=2024.07.19. But tests start failing with moose-dev=2024.07.27 (moose version is unchanged). The only significant change between the two moose-dev packages appears to be libmesh.\nThese CIVET test results show the exodiff errors encountered. (Note these tests were on a different MOOSE version but the exodiff error is exactly the same.)\nRelevant info about WallShearStressAux in the tests:\nIt is an auxkernel defined on the top (external) boundary for a constant monomial auxvariable. It computes the magnitude of wall shear stress using gradient values from vector velocity variables (FE) and the boundary normal vector.",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10663789",
                          "updatedAt": "2024-09-16T20:30:41Z",
                          "publishedAt": "2024-09-16T20:23:33Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "great thanks @smpark7 . This should be enough information for me to fairly easily bisect libmesh",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10663901",
                          "updatedAt": "2024-09-16T20:35:57Z",
                          "publishedAt": "2024-09-16T20:35:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "smpark7"
                          },
                          "bodyText": "Thanks for investigating this! Another detail that may be of interest: These are the only tests that use CartesianMeshGenerator.",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10664113",
                          "updatedAt": "2024-09-16T21:05:44Z",
                          "publishedAt": "2024-09-16T21:05:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Will really need to get non-heavy versions of these tests into moltres in the future both for CI coverage (so we know exactly when a breakage occurred in MOOSE) and for ease of doing thinks like bisecting. Have to wait a long time for the test result",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10677612",
                          "updatedAt": "2024-09-18T05:56:47Z",
                          "publishedAt": "2024-09-18T05:56:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "I checked out the MOOSE hash you pointed too and also checked out the libmesh update that occurred when we changed to a moose-dev version of 7.27.24 in #28244. Your exodiffing tests pass for me there",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10677905",
                          "updatedAt": "2024-09-18T06:39:13Z",
                          "publishedAt": "2024-09-18T06:39:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "After running my own bisect, it appears to me that the \"bad commit\" is the merge of @GiudGiud's #28115",
                          "url": "https://github.com/idaholab/moose/discussions/28434#discussioncomment-10678650",
                          "updatedAt": "2024-09-18T07:52:43Z",
                          "publishedAt": "2024-09-18T07:52:43Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Running MultiApps run \"out of sync\" vs Restart",
          "author": {
            "login": "callaway-andrew-dykhuis"
          },
          "bodyText": "Check these boxes if you have followed the posting rules.\n\n Q&A General is the most appropriate section for my question\n I have consulted the posting Guidelines on the Discussions front page\n I have searched the Discussions forum and my question has not been asked before\n I have searched the MOOSE website and the documentation does not answer my question\n I have formatted my post following the posting guidelines (screenshots as a last resort, triple back quotes around pasted text)\n\nQuestion\nHi all, I have a problem setup question dealing with MultiApps and Restarts.\nAt a high level my simulation is this: heat transfer between block 1 and block 2 for a period of time, and then block 1 is removed and then heat transfer to/from block 2 via convection for a different period of time.\nI have a working simulation where I use the Controls system to turn off a Dirichlet BC and turn on a convective BC. I have a larger simulation, with additional blocks, where I use ThermalContact to set up GapHeatTransfer objects for the temperature BC instead (more accurate heat transfer modeling than a DirichletBC based on a function, as in the first case). I'd prefer to just toggle these off and switch to a convective BC at a given point in time, but GapHeatTransfer is not controllable....and then I also have extra blocks that aren't involved in my physics at all.\nFrom my review of the forum/discussions, it seems I have a few options:\n\nreplace the GapHeatTransfer BC with a SideSetHeatTransferKernel, which I believe is controllable. From my understanding, however, this would require me to create duplicate variables on each side of the interface, which I'd rather not do, and has the same extra mesh block issue as in my next point.\nMultiApps: I think this might be the more straightforward option. Use GapHeatTransfer in the parent app, and then run a TransientMultiApp that executes on \"final.\" The issue I'm having with this is getting the subapp to run more than a single timestep. I'm not sure how to use global_time_offset to set it up so that I run for say, 100 seconds, in the parent (from time = 0 to time = 100), and then 200 seconds (from time = 100 to time = 300) in the subapp AFTER the parent app in overall time. At that point the entire simulation should be done, even with the time mismatch, as I care about the subapp's final results. The mesh for the second portion has fewer blocks than the first portion of the problem, so setting this up as a separate simulation to me makes more sense than including extra mesh blocks that don't affect the heat transfer I care about.\nRestart - I haven't played around with this yet, but I'd be able to have the problem change from GapHeatTransfer to convective heat transfer by using the first output to initialize the second. Like the subapp input file, I could remove the extra blocks.\n\nAdditional information:\n\nin the subapp input file I delete the extra mesh blocks using BlockDeletionGenerator, and therefore the mesh that remains is the same as the corresponding block in the parent app, but not close enough to MOOSE to allow use of MultiAppCopyTransfer. It is a smaller problem, however, so an option that lets me skip solving \"block 1\" and just focusing on block 2 is more efficient.\nI have multiple stateful properties. In the MultiApp approach I'd update initQpStatefulProperties to use a variable (if provided) as the initial condition, and this variable would be the transferred values from the parent (MaterialRealAux transferred to a dummy auxvar in the sub app, then coupled to the material). I think stateful properties are now supported in restarts, but perhaps not...or perhaps not in my specific use case here.\nMultiApp or Restart would also enable me to tack on additional steps...add back the original blocks and simulate another step, and repeat.\n\nAny thoughts or guidance would be appreciated!",
          "url": "https://github.com/idaholab/moose/discussions/28602",
          "updatedAt": "2024-09-18T16:07:54Z",
          "publishedAt": "2024-09-11T20:45:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI'm surpised we cant control GapHeatTransfer.\nBut assuming that, there are a few options for the multiapps.\n\nYou can try to use offset 'start_time' of each app's transient executioners to get one to run before the other. With sub_cycling turned on, you should see one app (the one with the early start_time) catch up to the other one's start time. Then depending on the end_time specified, the first app might stop solving.\nEasier way might be to just execute the multiapp and the transfers on FINAL. That way the main app runs to completion, then the sub-app is executed.\n\nFor restart, we don't support changing the mesh (especially with different variable numbers of DOFs) if you use Checkpoint restarts. And we do not support restarting stateful properties if you use SolutionUO or Exodus restart.\nBUT\nyou could use a multiapp that restarts from the checkpoint with an identical mesh from the first simulation, then transfers to another app (either the main one or a subapp) that has the different mesh\n\nbut not close enough to MOOSE to allow use of MultiAppCopyTransfer\n\nUse MultiAppGeneralFieldNearestLocationTransfer or ShapeEvaluation if the meshes strictly overlap\n\nMultiApp or Restart would also enable me to tack on additional steps...add back the original blocks and simulate another step, and repeat.\n\nMultiapp probably best if you plan to do very many steps / iterations between the two simulations",
                  "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10619347",
                  "updatedAt": "2024-09-11T21:26:49Z",
                  "publishedAt": "2024-09-11T21:26:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "callaway-andrew-dykhuis"
                          },
                          "bodyText": "Thanks for the quick response! Okay, so based on SolutionUO or Exodus restart I wouldn't have restart capability so MultiApp is the route. The thing is - I don't need the subapp to catch up to the parent: I want to run it like two separate simulations, just using the results from the end of the parent (execute_on = final) to start the subapp, which will then run past the end_time of the parent.\nRight now, I have the following settings (short times for debugging):\nparent start_time = 0\nparent end_time = 5.0\nsubapp start_time = 0\nsubapp end_time = 50.0\nThe subapp runs after the parent reaches 5.0 seconds, but it just runs a single timestep with dt equal to the final dt of the parent. Then it stops.",
                          "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10619562",
                          "updatedAt": "2024-09-11T21:48:21Z",
                          "publishedAt": "2024-09-11T21:48:20Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you are using a TransientMultiApp though. You could use a FullSolveMultiApp here since you run a full calculation",
                          "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10619587",
                          "updatedAt": "2024-09-11T21:53:08Z",
                          "publishedAt": "2024-09-11T21:53:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "with a transientMultiApp you could do:\n\nexecute_on = FINAL\nsubapp start_time = -50\nsubapp end_time = 0\nthat way, 'catching up' is running a full simulation for the subapp",
                          "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10619594",
                          "updatedAt": "2024-09-11T21:54:45Z",
                          "publishedAt": "2024-09-11T21:54:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "callaway-andrew-dykhuis"
                          },
                          "bodyText": "Looks like FullSolveMultiApp takes care of it.\nI just tried 0-5 for the parent and -50 to 0 for the subapp with a TransientMultiApp and I still get the one time step before it stops, but I believe FullSolveMultiApp solves my main issue. The stateful material initialization in the subapp should be doable via an auxvariable. I might lose a bit of resolution but I can live with that.",
                          "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10619641",
                          "updatedAt": "2024-09-11T22:07:59Z",
                          "publishedAt": "2024-09-11T22:05:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I just tried 0-5 for the parent and -50 to 0 for the subapp with a TransientMultiApp and I still get the one time step before it stop\n\nDid you turn on sub_cycling? SHould have done that.\nIf not then catch_up = true is similar",
                          "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10619704",
                          "updatedAt": "2024-09-11T22:15:20Z",
                          "publishedAt": "2024-09-11T22:15:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "callaway-andrew-dykhuis"
                          },
                          "bodyText": "The timing works out with FullSolveMultiApp, and using the adjusted start_time and end_time, but one additional question I have is in regards to initializing my stateful materials. I have optional coupling to an auxvariable set up so that if the variable is provided then that variable provides the value used in initQpStatefulProperties(). This works for a non-multiapp simulation to set the initial value of the material. However, in my multiapp I transfer material properties via MaterialRealAux to an auxvariable in the subapp, and then couple this auxvariable to the material, but I do not get the coupled value, just the default value. I assume it has something to do with when the transfer occurs vs when the material property is initialized? Is there an option to \"re-initialize\" the stateful material property?",
                          "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10664059",
                          "updatedAt": "2024-09-16T20:58:31Z",
                          "publishedAt": "2024-09-16T20:58:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I dont think we have this option.\nCould you try this material?\nhttps://mooseframework.inl.gov/source/materials/InterpolatedStatefulMaterial.html",
                          "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10664724",
                          "updatedAt": "2024-09-16T22:59:19Z",
                          "publishedAt": "2024-09-16T22:59:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "callaway-andrew-dykhuis"
                          },
                          "bodyText": "I have something working for now, so I should be good. Thanks again! Based on some optional parameters I can couple to a variable for the _old value and then it functions as desired from there.\nFor the record/to clean it up to mark this as the answer:\nThe fix was using FullSolveMultiApp that executes on \"final,\" and where the subapp uses offset start_time and end_time values. This lets me run from say 0 to 100 seconds in the parent, and then 100 to 200 seconds in the subapp. I transfer material properties to the subapp using MultiAppGeneralFieldNearestLocationTransfer from the parent app's MaterialRealAux auxvariables to auxvariables in the subapp. I adjusted my stateful materials so that I could effectively use the transferred auxvariable in the initial properties calculation.",
                          "url": "https://github.com/idaholab/moose/discussions/28602#discussioncomment-10683760",
                          "updatedAt": "2024-09-18T16:07:04Z",
                          "publishedAt": "2024-09-18T16:07:02Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}