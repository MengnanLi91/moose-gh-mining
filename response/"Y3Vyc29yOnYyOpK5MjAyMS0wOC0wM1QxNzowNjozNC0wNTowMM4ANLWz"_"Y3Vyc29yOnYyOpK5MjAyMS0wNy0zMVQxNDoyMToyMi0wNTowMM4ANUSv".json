{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0wNy0zMVQxNDoyMToyMi0wNTowMM4ANUSv"
    },
    "edges": [
      {
        "node": {
          "title": "Obtaining Scalar Values for Postprocessing",
          "author": {
            "login": "JKHINL"
          },
          "bodyText": "Hello,\nI have generated a mesh using Cubit, and am currently in the process of writing an input file for Pronghorn (which uses MOOSE modules). The mesh mostly contains triangles (see Figure below).\nI have a list of instruments with positions in Cartesian coordinates, and would like to compare my simulation results (specifically, the variable T_solid) to the experimental data. The problem is that most of the locations of these instruments are not at nodes, nor situated on lines connecting two nodes. The imperfect solution would be to use NearestNodeNumber but it is giving me the following error:\n*** ERROR ***\nA 'NearestNodeNumberUO' is not a registered object.\nIf you are trying to find this object in a dynamically linked library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.\nI was wondering what the best approach to this would be, and which postprocessors (or userobjects) I should use, or what the issue is with using 'NearestNodeNumber'.\nThanks,\nJosh",
          "url": "https://github.com/idaholab/moose/discussions/18497",
          "updatedAt": "2022-11-08T09:16:35Z",
          "publishedAt": "2021-08-02T22:39:16Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "This sort of question comes up so often: blah is not a registered object.   @JKHINL  , you can search the discussions for various answers.   Your problem is that NearestNodeNumberUO is in the Geochemistry module, so you need to link that in.\ni think we need to have something at mooseframework.org describing how to link parts of MOOSE and why you do/don't need to do it, written in simple English for people like me, since the Registry stuff is rather opaque.",
                  "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1122509",
                  "updatedAt": "2022-11-08T09:17:16Z",
                  "publishedAt": "2021-08-02T22:48:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Should we move NearestNodeUO to the framework folder (since it's a more general capability) or just add a warning that this linking is needed to that object",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1122520",
                          "updatedAt": "2022-11-08T09:17:17Z",
                          "publishedAt": "2021-08-02T22:54:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "I'm happy for you to move it if you decide it's best in framework.",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1122538",
                          "updatedAt": "2022-11-08T09:17:17Z",
                          "publishedAt": "2021-08-02T23:04:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "aprilnovak"
                  },
                  "bodyText": "Hi @JKHINL - another option could be to use the PointValue postprocessor, which will return the value of a variable at a point (I believe by evaluating the actual coefficients * basis functions used to represent that variable) - regardless of whether that point perfectly lines up with a node.",
                  "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1122688",
                  "updatedAt": "2022-11-08T09:17:25Z",
                  "publishedAt": "2021-08-03T00:33:15Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "JKHINL"
                          },
                          "bodyText": "Hello @aprilnovak, I did try the PointValue postprocessor earlier this morning, but unfortunately it gave me a \"No element located at (x,y,z)=(0.6, 0, 0) in PointValue Postprocessor\" message, when that point does fall inside the geometric domain. Is there a way around this?",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1123305",
                          "updatedAt": "2021-08-03T05:41:16Z",
                          "publishedAt": "2021-08-03T05:41:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aprilnovak"
                          },
                          "bodyText": "Hmm, I'm not sure - I've never run into an issue like this myself. Maybe PointValue doesn't work if the point is on a boundary of the domain? (just a guess, since I presume z = 0 might be on the boundary of your geometry).",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1125540",
                          "updatedAt": "2021-08-03T14:51:18Z",
                          "publishedAt": "2021-08-03T14:51:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "JKHINL"
                          },
                          "bodyText": "In this case, the point (x,y,z)=(0.6, 0, 0) is situated right in the middle of the domain. The cylinder will stretch axially along the x-axis.\nIt will work, however, if it is at a node on a boundary (e.g. 0,0,0)",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1125865",
                          "updatedAt": "2022-11-08T09:17:25Z",
                          "publishedAt": "2021-08-03T15:52:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Could you please try this one instead https://mooseframework.inl.gov/source/postprocessors/ElementalVariableValue.html\nwithout having looked at the code, it feels like point value is not doing what we expect.",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1126197",
                          "updatedAt": "2022-11-08T09:17:26Z",
                          "publishedAt": "2021-08-03T16:07:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "@JKHINL is 0.6 0 0 on an edge? If so, as the documentation says, the behavior of that postprocessor is undefined if discontinuous variables are used. What variable type are you sampling?",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1126245",
                          "updatedAt": "2022-11-08T09:17:26Z",
                          "publishedAt": "2021-08-03T16:15:59Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Raised an issue about it: #18509",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1126247",
                          "updatedAt": "2022-11-08T09:17:26Z",
                          "publishedAt": "2021-08-03T16:16:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "JKHINL"
                          },
                          "bodyText": "@GiudGiud @aprilnovak I \"reset\" the coordinates of my mesh by translating it a distance and then back again in Cubit, and PointValue now works. I am not sure what the issue was but I have tested five difference points within the mesh (at nodes, on edges, etc) and they all appear to work.",
                          "url": "https://github.com/idaholab/moose/discussions/18497#discussioncomment-1126481",
                          "updatedAt": "2022-11-08T09:17:26Z",
                          "publishedAt": "2021-08-03T17:09:00Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Changing the C-H kernel by SplitCHWRes and SplitCHParsed",
          "author": {
            "login": "dongcongcong606"
          },
          "bodyText": "Hi moose experts\uff0c\nI want to add an anisotropic effect to mobility, M(c,angle)=MFunction(angle), where c is the order parameter and angle=atan(gradc_y/gradc_x).  My  governing equation is \"cTimeDerivative=grad M(c,angle)grad_w_  ; w is an expression about the order parameter c\".  So I wrote a related subroutine AnisotropicFirst.h/C to introduce Function(angle),  for example:\nANisotropicFirst::ANisotropicFirst(const InputParameters & Parameters)\n  : Material(Parameters),\n    // Get the parameters from the input file\n    _delta(getParam<Real>(\"anisotropy_strength\")),\n    _j(getParam<unsigned int>(\"mode_number\")),\n    _theta0(getParam<Real>(\"reference_angle\")),\n    _mob(declareProperty<Real>(\"mob\")),\n    _dmob(declareProperty<Real>(\"dmob\")),\n    _dmobdgrad_op(declareProperty<RealGradient>(\"dmobdgrad_op\")),\n    _fun(declareProperty<Real>(\"fun\")),\n    _dfun(declareProperty<Real>(\"dfun\")),\n    _dfundgrad_op(declareProperty<RealGradient>(\"dfundgrad_op\")),\t\n    _op(coupledValue(\"op\")),\n    _grad_op(coupledGradient(\"op\"))\t\n{\n  if(_mesh.dimension() != 2)\n    mooseError(\"ANisotropicFirst requires a two-dimensional mesh.\");\n}\n\nvoid\nANisotropicFirst::computeQpProperties()\n{\n  const Real tol = 1e-9;\n  const Real cutoff = 1.0 - tol;\n  // tagent of the gradient orientation angle\n  Real n = 0.0;\n  const Real nsq = _grad_op[_qp].norm_sq();\n  if(nsq>tol)\n    n = std::max(-cutoff, std::min((_grad_op[_qp](1) / _grad_op[_qp](0)) / std::sqrt(nsq), cutoff));\n\n// calculate angle\n  const Real angle = std::atan(n) * MathUtils::sign(_grad_op[_qp](1) / _grad_op[_qp](0));\n\n// Compute derivative of angle wrt n\n const Real dangledn = MathUtils::sign((_grad_op[_qp](1)) / _grad_op[_qp](0)) / (1.0 + n * n);\n \n   RealGradient dndgrad_op;\n  if (nsq > tol)\n  {\n    dndgrad_op(0) = -2 * _grad_op[_qp](1) - _grad_op[_qp](1) * _grad_op[_qp](1) * _grad_op[_qp](1) / (_grad_op[_qp](0) * _grad_op[_qp](0));\n    dndgrad_op(1) = _grad_op[_qp](0);\n    dndgrad_op /= (_grad_op[_qp].norm_sq() * _grad_op[_qp].norm());\n  }\n \n  // Calculate  function of mobility\n\n  _fun[_qp] = ((_delta * std::pow(cos(_j * (angle - _theta0 * libMesh::pi / 180)), 2.0) + 1.0) / (1.0 + _delta));\n  _mob[_qp] = _mob_bar * _fun[_qp];\n  \n  // Calculate interfacial parameter function  's derivatives  \n _dfun[_qp] = -_delta * _j * std::sin(2.0 * _j * (angle - _theta0 * libMesh::pi / 180)) / (1.0 + _delta);\n  _dmob[_qp] = _mob_bar * _dfun[_qp];\n  \n  // Compute derivatives of mobility and its derivative wrt grad_op\n  _dfundgrad_op[_qp] = _dfun[_qp] * dangledn * dndgrad_op;\n  _dmobdgrad_op[_qp] = _mob_bar * _dfundgrad_op[_qp];\n}\n\nAnd do I also need to introduce a coupling variable v(\"Function(angle)\") into the kernel ? Is it enough to do it this way and include _v[_qp] or _grad_v[_qp]  in the residual and jacobian expressions? What am I missing?\ninput file:\n[./w_dot]\n    variable = w\n    type = CoupledTimeDerivative\n    v = c\n  [../]\n  [./coupled_res]\n    variable = w\n    type = SplitCHWResF\n    mob_name = M\n  [../]\n  [./coupled_parsed]\n    variable = c\n    type = SplitCHParsed\n    f_name = F\n    kappa_name = kappa_c\n    w = w\n\n  [./mobility]\n    type = ParsedMaterial\n    f_name = M\n    args = c \n    material_property_names = 'kappa_c'\n    function = 'if(c > -1.0 & c < 1.0,  (1.0 - c^2)^2, 0)'\n    outputs = console\n  [../]\n  [./anisotropy_function]\n   type = ANisotropicFirst\n   op = c\n   anisotropy_strength = 10\n   mode_number = 1\n   reference_angle = 90\n [../]\n\nSplitCHWResBaseF_h_file:\nprivate:\nconst VariableValue & _v;\n_v(coupledValue(\"coupled_mobility\"))\nconst MaterialProperty<Real> & _fun;\nconst MaterialProperty<Real> & _dfun;\nconst MaterialProperty<RealGradient> & _dfundgrad_op;\n\nSplitCHWResBaseF_C_file:\n_fun(getMaterialProperty<Real>(\"fun_name\")),\n_dfun(getMaterialProperty<Real>(\"dfun_name\")),\n_dfundgrad_op(getMaterialProperty<RealGradient>(\"dfundgrad_op_name\")),\n\nResidual:\nReal\nSplitCHWResBaseF::computeQpResidual()\n{\n  return _v[_qp] * _mob[_qp] * _grad_w[_qp] * _grad_test[_i][_qp];\n}\n\nJacobian:\nReal\nSplitCHWResBaseF::computeQpResidual()\n{\n  return _v[_qp] * _mob[_qp] * _grad_w[_qp] * _grad_test[_i][_qp];\n}\n\nOff-Jacobian:\nReal\nSplitCHWResBase4::computeQpOffDiagJacobian(unsigned int jvar)\n{\n  if (_w_var == jvar)\n    return computeQpWJacobian();\nconst unsigned int cvar = mapJvarToCvar(jvar);\n\nconst RealGradient a(-_grad_op[_qp](1), _grad_op[_qp](0), 0);\n\n return a * _dfundgrad_op[_qp] * (*_dmobdarg[cvar])[_qp] * _phi[_j][_qp] * _grad_w[_qp] * _grad_test[_i][_qp];\n}\n\nI am puzzled, and I 'd like to accept your advice and guidance. May someone help me? Thank you very much.",
          "url": "https://github.com/idaholab/moose/discussions/18490",
          "updatedAt": "2022-08-26T17:29:48Z",
          "publishedAt": "2021-07-31T08:32:22Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "First of all\nangle=std::atan2(gradc_y, gradc_x);\n\nfor a well defined angle!\nNext, you are mixing coupled variables (like v) and material properties (like dfundgrad_op). What Kernel computes v? As far as I can tell you need to compute a mobility property and it's derivatives w.r.t. all coupled variables. The mobility does not appear in the variational derivative in the CH equation, so its derivative w.r.t. to order parameter gradients should not matter, right?\nI also suggest you utilize the DerivativeMaterialInterface to declare and get derivative material properties for better interoperability with the rest of the phase field module.\nIn short, this should be really simple to implement with only a material for computing the mobility and simply using all stock split CH formulation kernels.",
                  "url": "https://github.com/idaholab/moose/discussions/18490#discussioncomment-1094660",
                  "updatedAt": "2022-08-26T17:29:55Z",
                  "publishedAt": "2021-07-31T15:59:04Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dongcongcong606"
                          },
                          "bodyText": "First of all\uff0cthanks for your advice, I'll learn \"DerivativeMaterialInterface\".\nSecondly, I am a little confused why Angle is defined as \"angle=std::atan2(gradc_y, gradc_x);\" instead of \"std::atan(n) * MathUtils::sign(_grad_op_qp / _grad_op_qp);\" . Could you tell me the difference ? (Silly question though it may be. )",
                          "url": "https://github.com/idaholab/moose/discussions/18490#discussioncomment-1116896",
                          "updatedAt": "2022-08-26T17:30:00Z",
                          "publishedAt": "2021-08-02T02:26:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "https://stackoverflow.com/questions/283406/what-is-the-difference-between-atan-and-atan2-in-c",
                          "url": "https://github.com/idaholab/moose/discussions/18490#discussioncomment-1122177",
                          "updatedAt": "2022-08-26T17:30:03Z",
                          "publishedAt": "2021-08-02T21:04:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "If you have numerator and denominator of the tangent available always just use std::atan2.",
                          "url": "https://github.com/idaholab/moose/discussions/18490#discussioncomment-1125745",
                          "updatedAt": "2022-08-26T17:30:08Z",
                          "publishedAt": "2021-08-03T15:26:30Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Adaptivity Mesh",
          "author": {
            "login": "ahmad681"
          },
          "bodyText": "I have a problem nanocomposite pillar in a matrix. The interface is modelled as a diffuse and the phases pillar/matrix is define with phase variable chi. The lenght of the interface is 0.5 and described by heaviside type function. I am trying to add addaptive mesh at the interface between the pillar and the matrix and I keep getting this error:\napplication called MPI_Abort(MPI_COMM_WORLD, 1) - process 0\nIn the input file I add:\n[Functions]\n[solution]\ntype = ParsedFunction\nvalue = z*z\n[]\n[]\n[Adaptivity]\ninitial_steps = 2\ncycles_per_step = 2\nmarker = markers\ninitial_marker = markers\nmax_h_level = 2\n[Indicators]\n[error]\ntype = AnalyticalIndicator\nvariable = phase_pillar\nfunction = solution\n[]\n[]\n[Markers]\n[markers]\ntype = ErrorFractionMarker\nindicator = error\ncoarsen = 0.1\nrefine = 0.5\n[]\n[]\n[]\nAny tips in this issue and how I can do it?\nThank you",
          "url": "https://github.com/idaholab/moose/discussions/18314",
          "updatedAt": "2022-10-18T18:44:36Z",
          "publishedAt": "2021-07-12T22:33:52Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "simopier"
                  },
                  "bodyText": "Would you mind sharing a simplified version of your input file? That would help debug.\nThank you!",
                  "url": "https://github.com/idaholab/moose/discussions/18314#discussioncomment-996358",
                  "updatedAt": "2022-10-18T18:44:39Z",
                  "publishedAt": "2021-07-13T01:15:41Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "sure. Below, I am copying the main important ones. The simplest one I could bring it down to:\n  [./msh]\n    type = GeneratedMeshGenerator\n    dim = 3\n    elem_type = HEX8\n    nx = 100\n    ny = 100\n    nz = 100\n    xmin = -25\n    xmax = 25\n    ymin = -21.6506\n    ymax = 21.6506\n    zmin = -60\n    zmax = 30\n  [../]\n  [./ns1]\n    type = ExtraNodesetGenerator\n    input = msh\n    new_boundary = 'nodeset1'\n    nodes = '1'\n  [../]\n[]\n\n\n# length unit: nm\n# stress unit: GPa (force/area)   \n# which leads to the force unit:nN\n# which leads to the energy density: nN*nm/nm^2 = J/m^2 \n# energy unit: nN*nm (force*length)\n\n\n[GlobalParams]\n  L = 0.4\n  n_slip_systems = 2\n  xc = 0.5\n  yc = 0.5\n  zc = 0.5\n  R=0.3\n  \n  # BTO matrix\n  # the order is  \"phase_pillar phase_matrix phase_substrate\"\n  #expansion_coefficient1 = 1.022044088176353 # 4.08/3.992 = 1.022044088176353\n  #expansion_coefficient2 = 1 # 4.08/4.08 = 1\n  #expansion_coefficient3 = 0.9782064128256513 #    # 3.905/3.992 = 0.9782064128256513\n   \n  # LSMO matrix\n  expansion_coefficient1 = 1.044814340588988 # 4.08/3.905 = 1.044814340588988\n  expansion_coefficient2 = 0.9925736235595391 # 3.876/3.905 = 1\n  expansion_coefficient3 = 1 #    # 3.905/3.905 = 1\n   \n     \n   \n  F=sin(x*2*3.1415/25)+sin(y*2*3.1415/25)\n  displacement_vars = 'disp_x disp_y disp_z'\n  vol2_function = sqrt((z-20)*(z-20))-20\n  radius_function=sqrt((z-20)*(z-20))-20\n  z_max = 30 \n  z_min = -60 \n[]  \n\n[Variables]\n  [./disp_x]\n  [../]\n  [./disp_y]\n  [../]\n  [./disp_z]\n  [../]\n  \n[]\n\n[Adaptivity]\ninitial_steps = 2\ncycles_per_step = 2\nmarker = markers\ninitial_marker = markers\nmax_h_level = 2\n[Indicators]\n[error]\ntype = ValueJumpIndicator\nvariable = phase_pillar\n[]\n[]\n[Markers]\n[markers]\ntype = ErrorFractionMarker\nindicator = error\ncoarsen = 0.1\nrefine = 0.5\n[]\n[]\n[]\n\n[AuxVariables]\n\n  [./phase_pillar]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./phase_substrate]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./phase_matrix]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  \n  [./n_pm_x]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_pm_y]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_pm_z]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  \n  \n  \n  [./n_ms_x]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_ms_y]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_ms_z]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  \n  [./n_mf_x]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_mf_y]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_mf_z]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  \n  [./n_ps_x]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_ps_y]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_ps_z]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  \n  \n  [./n_pf_x]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_pf_y]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n  [./n_pf_z]\n    order = FIRST\n  \tfamily = LAGRANGE\n  [../]\n[]  \n[AuxKernels]\n  [./phase_substrate_kernel]    \n    type = DensityDistributionDebugAux\n    type_bc = 8\n    component = 1 \n    variable = phase_substrate\n    execute_on = 'initial timestep_begin'\n  [../]\n  [./pillar_kernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = true\n    invert_var2 = true\n    component = 0\n    variable = phase_pillar\n    execute_on = 'initial timestep_begin' \n  [../]\n  [./matrix_kernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 0\n    variable = phase_matrix\n    execute_on = 'initial timestep_begin'\n  [../]\n  \n \n  [./npmx_kernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 1\n    variable = n_pm_x\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./npmy_kernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 2\n    variable = n_pm_y\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./npmzkernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 3\n    variable = n_pm_z\n    execute_on = 'initial timestep_begin'\n  [../]\n   \n   \n   \n  [./npfx_kernel]    \n    type = ProductInteriorAux\n    set_interior = false\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = true\n    invert_var2 = true\n    component = 1\n    variable = n_pf_x\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./npfy_kernel]    \n    type = ProductInteriorAux\n    set_interior = false\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = true\n    invert_var2 = true\n    component = 2\n    variable = n_pf_y\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./npfzkernel]    \n    type = ProductInteriorAux\n    set_interior = false\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = true\n    invert_var2 = true\n    component = 3\n    variable = n_pf_z\n    execute_on = 'initial timestep_begin'\n  [../]   \n   \n\n   [./nmsx_kernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 1\n    normal_to_set = 1\n    variable = n_ms_x\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./nmsy_kernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 2\n    normal_to_set = 1\n    variable = n_ms_y\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./nmszkernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 3\n    normal_to_set = 1\n    variable = n_ms_z\n    execute_on = 'initial timestep_begin'\n  [../]\n   \n   \n   [./nmfx_kernel]    \n    type = ProductInteriorAux\n    set_interior = false\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 1\n    normal_to_set = 1\n    variable = n_mf_x\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./nmfy_kernel]    \n    type = ProductInteriorAux\n    set_interior = false\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 2\n    normal_to_set = 1\n    variable = n_mf_y\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./nmfzkernel]    \n    type = ProductInteriorAux\n    set_interior = false\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = false\n    invert_var2 = true\n    component = 3\n    normal_to_set = 1\n    variable = n_mf_z\n    execute_on = 'initial timestep_begin'\n  [../]\n   \n   \n   [./npsx_kernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = true\n    invert_var2 = true\n    component = 1\n    normal_to_set = 1\n    variable = n_ps_x\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./npsy_kernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = true\n    invert_var2 = true\n    component = 2\n    normal_to_set = 1\n    variable = n_ps_y\n    execute_on = 'initial timestep_begin'\n  [../]\n   [./npszkernel]    \n    type = ProductAux\n    vol1_function =sqrt(x*x+y*y)\n    invert_var1 = true\n    invert_var2 = true\n    component = 3\n    normal_to_set = 1\n    variable = n_ps_z\n    execute_on = 'initial timestep_begin'\n  [../]  \n[]\n\n\n\n[Materials]\n# unit base is nm, nN, -> stress in GPa\n  [./strain]\n    type = ComputeTotalLagrangeFiniteStrain\n    displacement_vars = 'disp_x disp_y disp_z'\n  [../]\n  \n  [./ET_pillar]\n    # Gold \n    base_name = pillar\n    #type = ComputeElasticityTensor\n    #fill_method = symmetric21\n    #C_ijkl='159.1 136.7  136.7  0 0 0 159.1 136.7  0 0 0 159.1 0 0 0 27.6  0 0 27.6  0 27.6 ' \n    type = ComputeIsotropicElasticityTensor\n    poissons_ratio = 0.416\n    shear_modulus = 27.6\n    \n  [../]\n  [./ET_matrix]     \n    \n    base_name = matrix\n    #type = ComputeElasticityTensor\n    #fill_method = symmetric21 \n    # LMSMO\n    #C_ijkl='228.1 159.6 159.6 0 0 0 228.1 159.6 0 0 0 228.1 0 0 0 67.1 0 0 67.1 0 67.1'\n    type = ComputeIsotropicElasticityTensor\n    poissons_ratio = 0.352\n    shear_modulus = 67.1\n  [../]\n  [./ET_substrate]\n    base_name = substrate\n    # STO \n    #type = ComputeElasticityTensor    \n    #fill_method = symmetric21\n    #C_ijkl='319 100  100  0 0 0 319 100  0 0 0 319 0 0 0 110 0 0 110 0 110'\n    type = ComputeIsotropicElasticityTensor\n    poissons_ratio = 0.238\n    shear_modulus = 110\n  [../]\n  [./stress]\n    type = ComputeMultDecompStressPhase\n    #elasticity_tensor1 = 'pillar_elasticity_tensor'\n    #elasticity_tensor2 = 'matrix_elasticity_tensor'\n    #elasticity_tensor3 = 'substrate_elasticity_tensor'  \n    elasticity_tensor = 'pillar_elasticity_tensor matrix_elasticity_tensor substrate_elasticity_tensor'\n    phase_variable = \"phase_pillar phase_matrix phase_substrate\"\n  [../]\n  [./lattice_distortion]\n    type = ComputeLatticeDistortionVolumetric \n    phase_variable = \"phase_pillar phase_matrix phase_substrate\" \n  [../]\n[]\n\n[Variables]\n  [./disp_x]\n  [../]\n  [./disp_y]\n  [../]\n  [./disp_z]\n  [../] \n[]\n[Kernels]\n  [surface_tension_pillar_matrix_x]\n    type = BodyForceInterfaceTension\n    variable = disp_x\n    component = 0\n    surface_energy = 2.329 #\n    normal_var = 'n_pm_x n_pm_y n_pm_z'    \n    phase_vars = 'phase_pillar'\n  [../]\n    [surface_tension_pillar_matrix_y]\n    type = BodyForceInterfaceTension\n    variable = disp_y\n    component = 1\n    surface_energy = 2.329 # \n    normal_var = 'n_pm_x n_pm_y n_pm_z'\n    phase_vars = 'phase_pillar'\n  [../]\n  [surface_tension_pillar_matrix_z]\n    type = BodyForceInterfaceTension\n    variable = disp_z\n    component = 2\n    surface_energy = 2.329 # \n    normal_var = 'n_pm_x n_pm_y n_pm_z'\n    phase_vars = 'phase_pillar'\n  [../]\n[]\n[Executioner]\n  type = Transient\n  #Preconditioned JFNK (default)\n  solve_type = 'NEWTON'\n  petsc_options_iname = '-pc_type -pc_hypre_type -ksp_gmres_restart'\n  petsc_options_value = 'hypre boomeramg 101'\n  nl_tol = 1e-5\n  #nl_max_its = 3 \n  nl_rel_tol = 1e-10  # first iteration tolerance/current\n  nl_abs_tol = 1e-12 # current iteration tolerance\n  dtmin = 0.001\n  dt = 1\n  num_steps = 1\n  [./Quadrature]\n    order = THIRD\n  [../] \n[]",
                          "url": "https://github.com/idaholab/moose/discussions/18314#discussioncomment-1001009",
                          "updatedAt": "2022-10-18T18:44:39Z",
                          "publishedAt": "2021-07-13T21:18:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this is not really simplified.\nFor a call to MPI_Abort, we ll need the backtrace.\nplease find instructions here to get that:\nhttps://mooseframework.inl.gov/application_development/debugging.html",
                          "url": "https://github.com/idaholab/moose/discussions/18314#discussioncomment-1048129",
                          "updatedAt": "2022-11-07T14:46:09Z",
                          "publishedAt": "2021-07-25T20:31:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "I am sorry. the input file is way larger than that. I thought this was the simplest thing I could provide. Let me follow the instructions provided and get back to you. Give me a day or two",
                          "url": "https://github.com/idaholab/moose/discussions/18314#discussioncomment-1051670",
                          "updatedAt": "2022-11-07T14:46:11Z",
                          "publishedAt": "2021-07-26T14:44:24Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "any news on this?",
                          "url": "https://github.com/idaholab/moose/discussions/18314#discussioncomment-1122160",
                          "updatedAt": "2022-11-07T14:46:13Z",
                          "publishedAt": "2021-08-02T20:59:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Compiling PETSc",
          "author": {
            "login": "ahmad681"
          },
          "bodyText": "Hello, I am having problem compiling PETSc,\nI am not sure how to understand the compiler on the cluster, but I have already contacted the adminstrator and waiting for for their reply. I thought of consulting you too.\nThe compiler I have is gcc 5.2, and I am not sure why it cannot locate the C compiler. Can you please help me with that?\n=============================================================================================\n                      Configuring PETSc to compile on your system\n=============================================================================================\n=============================================================================================                                                                                                                       ***** WARNING: CC (set to mpicc) found in environment variables - ignoring                                                                                                                                     use ./configure CC=$CC if you really want to use that valueset to mpicxx) found in environment variables - ignoring                                                                                                                                   use ./configure CXX=$CXX if you really want to use that valueset to mpif90) found in environment variables - ignoring                                                                                                                                    use ./configure FC=$FC if you really want to use that valueset to mpif77) found in environment variables - ignoring                                                                                                                                   use ./configure F77=$F77 if you really want to use that valueset to mpif90) found in environment variables - ignoring                                                                                                                                   use ./configure F90=$F90 if you really want to use that value ******                                                                                                                                   =============================================================================================                                                                                                                 TESTING: checkCCompiler from config.setCompilers(config/BuildSystem/config/setCompilers.py:717)                                                                                                               *******************************************************************************\n         UNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\n-------------------------------------------------------------------------------\nCould not locate a functional C compiler\n*******************************************************************************\n\nThere was an error. Exiting...",
          "url": "https://github.com/idaholab/moose/discussions/18253",
          "updatedAt": "2022-06-10T21:03:37Z",
          "publishedAt": "2021-07-05T02:18:02Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nhave you tried following the prompts given by the warnings ? Eg specifying CXX=$CXX and same for the other languages.\nAlso are you installing from source directly or are you using the update_and_rebuild_petsc.ah in moose/scripts/ ?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-964070",
                  "updatedAt": "2022-06-10T21:03:42Z",
                  "publishedAt": "2021-07-05T03:43:16Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "Yes I have tried it, still doesn't work.\nI am also using the are you using the update_and_rebuild_petsc.ah in moose/scripts/",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-966686",
                          "updatedAt": "2022-06-12T06:17:20Z",
                          "publishedAt": "2021-07-05T16:10:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "Still couldn't fix the problem!!\nI am getting the same errory. I have emailed PETSc developers and this was their reply:\nHello,\nYou should be able to fix the first error by applying the following patch:\ndiff --git a/config/BuildSystem/config/framework.py b/config/BuildSystem/config/framework.py\nindex 214b1abef1..cbe269b09d 100644\n--- a/config/BuildSystem/config/framework.py\n+++ b/config/BuildSystem/config/framework.py\n@@ -550,6 +550,7 @@ class Framework(config.base.Configure, script.LanguageProcessor):\nlines = [s for s in lines if s.find(' was built for newer macOS version') < 0]\nlines = [s for s in lines if s.find(' was built for newer OSX version') < 0]\nlines = [s for s in lines if s.find(' stack subq instruction is too different from dwarf stack size') < 0]\n\n\n lines = [s for s in lines if s.find(': no version information available ') < 0]\n if lines: output = '\\n'.join(lines)\n else: output = ''\n self.log.write(\"Linker output after filtering:\\n\"+output+\":\\n\")\n\n\n\nI am not really sure how to do so, but I was wondering if you would agree with this?",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-967736",
                          "updatedAt": "2022-06-12T06:17:21Z",
                          "publishedAt": "2021-07-05T23:22:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I'm not too familiar with the petsc build so i m sure they know better.\nWhen you added those flags (CXX, CC...) , did you still get the same warning messages?",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-967974",
                          "updatedAt": "2022-06-12T06:17:35Z",
                          "publishedAt": "2021-07-06T01:36:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "Yes I still got the same errors.\nThis time, I have used different compiler. I have made little progress finally, but I have different problem, now:\nThe PETSc seems to be compiled properly because it told me in the end: \nmake PETSC_DIR=/home/ahmad68/projects/moose/scripts/../petsc PETSC_ARCH=arch-moose check \nbut the when I tried that in ./petsc directory, it the test did not work: here is the error messege: \nPossible error running C/C++ src/snes/tutorials/ex19 with 1 MPI process\nSee http://www.mcs.anl.gov/petsc/documentation/faq.html\n--------------------------------------------------------------------------\nNo OpenFabrics connection schemes reported that they were able to be\nused on a specific port.  As such, the openib BTL (OpenFabrics\nsupport) will be disabled for this port.\n\n  Local host:           brown-fe02\n  Local device:         mlx5_1\n  Local port:           1\n  CPCs attempted:       rdmacm, udcm\n--------------------------------------------------------------------------\nlid velocity = 0.0016, prandtl # = 1., grashof # = 1.\nNumber of SNES iterations = 2\n[brown-fe02.rcac.purdue.edu:131700] 1 more process has sent help message help-mpi-btl-openib-cpc-base.txt / no cpcs for port\n[brown-fe02.rcac.purdue.edu:131700] Set MCA parameter \"orte_base_help_aggregate\" to 0 to see all help / error messages\nPossible error running C/C++ src/snes/tutorials/ex19 with 2 MPI processes\nSee http://www.mcs.anl.gov/petsc/documentation/faq.html\n--------------------------------------------------------------------------\nNo OpenFabrics connection schemes reported that they were able to be\nused on a specific port.  As such, the openib BTL (OpenFabrics\nsupport) will be disabled for this port.\n\n  Local host:           brown-fe02\n  Local device:         mlx5_1\n  Local port:           1\n  CPCs attempted:       rdmacm, udcm\n--------------------------------------------------------------------------\nlid velocity = 0.0016, prandtl # = 1., grashof # = 1.\nNumber of SNES iterations = 2\n[brown-fe02.rcac.purdue.edu:132012] 3 more processes have sent help message help-mpi-btl-openib-cpc-base.txt / no cpcs for port\n[brown-fe02.rcac.purdue.edu:132012] Set MCA parameter \"orte_base_help_aggregate\" to 0 to see all help / error messages\n0a1,10\n> --------------------------------------------------------------------------\n> No OpenFabrics connection schemes reported that they were able to be\n> used on a specific port.  As such, the openib BTL (OpenFabrics\n> support) will be disabled for this port.\n>\n>   Local host:           brown-fe02\n>   Local device:         mlx5_1\n>   Local port:           1\n>   CPCs attempted:       rdmacm, udcm\n> --------------------------------------------------------------------------\n5a16,17\n> [brown-fe02.rcac.purdue.edu:132431] 3 more processes have sent help message help-mpi-btl-openib-cpc-base.txt / no cpcs for port\n> [brown-fe02.rcac.purdue.edu:132431] Set MCA parameter \"orte_base_help_aggregate\" to 0 to see all help / error messages\n/home/ahmad68/projects/moose/petsc/src/snes/tutorials\nPossible problem with ex19 running with hypre, diffs above\n=========================================\n0a1,10\n> --------------------------------------------------------------------------\n> No OpenFabrics connection schemes reported that they were able to be\n> used on a specific port.  As such, the openib BTL (OpenFabrics\n> support) will be disabled for this port.\n>\n>   Local host:           brown-fe02\n>   Local device:         mlx5_1\n>   Local port:           1\n>   CPCs attempted:       rdmacm, udcm\n> --------------------------------------------------------------------------\n9a20,21\n> [brown-fe02.rcac.purdue.edu:132814] 3 more processes have sent help message help-mpi-btl-openib-cpc-base.txt / no cpcs for port\n> [brown-fe02.rcac.purdue.edu:132814] Set MCA parameter \"orte_base_help_aggregate\" to 0 to see all help / error messages\n/home/ahmad68/projects/moose/petsc/src/snes/tutorials\nPossible problem with ex19 running with mumps, diffs above\n=========================================\n0a1,10\n> --------------------------------------------------------------------------\n> No OpenFabrics connection schemes reported that they were able to be\n> used on a specific port.  As such, the openib BTL (OpenFabrics\n> support) will be disabled for this port.\n>\n>   Local host:           brown-fe02\n>   Local device:         mlx5_1\n>   Local port:           1\n>   CPCs attempted:       rdmacm, udcm\n> --------------------------------------------------------------------------\n2a13,14\n> [brown-fe02.rcac.purdue.edu:133622] 1 more process has sent help message help-mpi-btl-openib-cpc-base.txt / no cpcs for port\n> [brown-fe02.rcac.purdue.edu:133622] Set MCA parameter \"orte_base_help_aggregate\" to 0 to see all help / error messages\n/home/ahmad68/projects/moose/petsc/src/snes/tutorials\nPossible problem with ex19 running with superlu_dist, diffs above\n=========================================\nCompleted test examples```\n\nI have no clue at this point, haha. I am very lost frankly.",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-967990",
                          "updatedAt": "2022-06-15T13:20:36Z",
                          "publishedAt": "2021-07-06T01:42:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "So the flags must have been ignored. You should edit the script 'update_and_rebuild_petsc' to add the flags directly",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-968006",
                          "updatedAt": "2022-06-15T13:20:42Z",
                          "publishedAt": "2021-07-06T01:48:30Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "where should I add those flags? And how can I add them?\nin line 118, I see --with-cxx-dialect=C++11 \\   shouldn't that be C++14?\nAlso do I add CXX = mpixx  and cc = mpicc between lines 121 and 122?\nMany thanks for the help",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-968025",
                          "updatedAt": "2022-06-15T13:20:44Z",
                          "publishedAt": "2021-07-06T01:55:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Dont change the dialect but yes, around those lines is where you would want to add those configure options",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-968051",
                          "updatedAt": "2022-06-15T13:20:42Z",
                          "publishedAt": "2021-07-06T02:03:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "That didn't work too. I added      --with-cxx=mpicc \\ in line 122 as a configure option and\nthe error was\nTESTING: CxxMPICheck from config.packages.MPI(config/BuildSystem/config/packages/MPI.py:482)                                                                                           *******************************************************************************\nUNABLE to CONFIGURE with GIVEN OPTIONS    (see configure.log for details):\nC++ error! MPI_Finalize() could not be located!\n\nI think at this point, it could be a compiler issue. I will contact my cluster adminstrator to check the compiler. If PETSC was compiled first but it the tests didn't successfully, then as you mentioned the flags are ignored and this seems to be a compiler issue! what do you think?",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-968077",
                          "updatedAt": "2022-06-15T13:20:42Z",
                          "publishedAt": "2021-07-06T02:17:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This points towards an issue with your compilers yes.\nYou should be able to google this particular error, or find help on the petsc side.\nalso @fdkong might have seen this error before",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-968104",
                          "updatedAt": "2022-06-15T13:20:57Z",
                          "publishedAt": "2021-07-06T02:28:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "fdkong"
                          },
                          "bodyText": "Could you share \"configure.log\" with us? It is located in moose/petsc",
                          "url": "https://github.com/idaholab/moose/discussions/18253#discussioncomment-970551",
                          "updatedAt": "2022-06-15T13:20:59Z",
                          "publishedAt": "2021-07-06T14:46:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Issue when adding mesh adaptivity to a phase field simulation with elasticity of precipitate growth in a polycrystal",
          "author": {
            "login": "simopier"
          },
          "bodyText": "I am trying to model the growth of precipitates in a polycrystal material with a phase field model that includes elasticity. Everything works without mesh adaptivity. However, when I try to use mesh adaptivity, I get huge errors in local displacements, as shown in the figure below:\n\n\n\nWithout mesh adaptivity\nWith mesh adaptivity - the displacements are unphysical\n\n\n\n\n\n\n\n\n\nThere are a lot of things going on in these simulations, so I broke it down into features:\n\nThe material being a single crystal or a polycrystal.\nThe eigenstrain being null or non-null.\nThe simulations using mesh adaptivity of not\n\nI have created simple input files (attached to this message) to isolate the features and identify which feature causes the problem. Everything in these input files remain the same, except for the specific features being listed here. They run with a combination of the phase field and tensor mechanics modules (combined-opt works well). The results are described in the following table:\n\n\n\nInput file name\nPolycrystal  matrix  ?\nNon-null eigenstrain  ?\nMesh adaptivity ?\nRuns properly ?\n\n\n\n\nSingle_Elasticity_BasicEigenstrain_MeshAdaptivity.i\nNO\nyes\nyes\nyes\n\n\nPoly_Elasticity_0Eigenstrain_MeshAdaptivity.i\nyes\nNO\nyes\nyes\n\n\nPoly_Elasticity_BasicEigenstrain_NoMeshAdaptivity.i\nyes\nyes\nNO\nyes\n\n\nPoly_Elasticity_BasicEigenstrain_MeshAdaptivity.i\nyes\nyes\nyes\nNO\n\n\n\nAs the results in the table show, it is only when all of these features are included together that the issue arrises. Surprisingly, the simulation with unphysical displacements does not show any an error, so I am not sure where the issue is coming from.\nAny idea on what could be causing that problem? Or any tips on how I could figure out where the issue is coming from? Let me know if you need more information!\nThank you!\nEdit: Here are the input files, along with the Euler_angles_3G_same.txt and grain_growth_2D_voronoi_out.e-s020 files for the polycrystal\nMOOSE_discussion_input_file.zip",
          "url": "https://github.com/idaholab/moose/discussions/18003",
          "updatedAt": "2023-03-11T03:31:22Z",
          "publishedAt": "2021-06-03T20:23:28Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jiangwen84"
                  },
                  "bodyText": "@simopier Can you also upload Euler_angles_3G_same.txt and grain_growth_2D_voronoi_out.e-s020 ?",
                  "url": "https://github.com/idaholab/moose/discussions/18003#discussioncomment-858811",
                  "updatedAt": "2023-03-11T03:32:31Z",
                  "publishedAt": "2021-06-11T15:39:18Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "I think the issue might be related to SolutionUserObject. When you use SolutionUserObject, the solution vector can be read correctly, but the adaptivity information (e.g. hanging nodes constraints) will not be read. So your finite element mesh and/or solution will have some discontinuities.\nAnother issue is to use adaptivity with stateful properties. Since you are using small deformation, you can set incremental = false to not use the stateful property.",
                          "url": "https://github.com/idaholab/moose/discussions/18003#discussioncomment-858873",
                          "updatedAt": "2023-03-11T03:32:32Z",
                          "publishedAt": "2021-06-11T15:49:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "simopier"
                          },
                          "bodyText": "Thanks for taking a stab at this!\n\n@simopier Can you also upload Euler_angles_3G_same.txt and grain_growth_2D_voronoi_out.e-s020 ?\n\nMy bad! I edited the question to include these two files.\nI'll try with incremental = false to see how it does, and come back to you.\nThank you!",
                          "url": "https://github.com/idaholab/moose/discussions/18003#discussioncomment-859366",
                          "updatedAt": "2023-03-11T03:32:32Z",
                          "publishedAt": "2021-06-11T16:43:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "simopier"
                          },
                          "bodyText": "I have tried to run the simulations with incremental = false, but it behaves the same way. The complete simulation (poly + non-null eigenstrain + mesh adaptivity) still has unphysical displacements.\nAs for the potential issue with SolutionUserObject, I only use it at the very beginning of the simulation to establish the polycrystal (which does not evolve during the simulation), whereas the issues arrive only after the first time step. Moreover, I am not sure of what I could do instead of using the SolutionUserObject...",
                          "url": "https://github.com/idaholab/moose/discussions/18003#discussioncomment-868648",
                          "updatedAt": "2023-03-11T03:32:32Z",
                          "publishedAt": "2021-06-14T14:44:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You could use another restart option. Like using an exodus file.\nThis seems like a bug judging by the figure. Could you please create an issue for it?",
                          "url": "https://github.com/idaholab/moose/discussions/18003#discussioncomment-1048095",
                          "updatedAt": "2023-03-11T03:32:32Z",
                          "publishedAt": "2021-07-25T20:16:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "final ping before I mark this as answered",
                          "url": "https://github.com/idaholab/moose/discussions/18003#discussioncomment-1122132",
                          "updatedAt": "2023-03-11T03:32:34Z",
                          "publishedAt": "2021-08-02T20:53:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Cannot stop MOOSE from renumbering nodeID (importing from .inp)",
          "author": {
            "login": "Traiwit"
          },
          "bodyText": "Hi guys,\nI'm having an issue with importing a mesh using FileMesh\nI see it has this option: allow_renumbering=false, I tried but it still changed my nodeID\nHere is an input file (below), as you can see the nodeID should jumps from 182 to 100001, but MOOSE continues with 183\n\nIs there a way to work around this?\n[Mesh]\n  type = FileMesh\n  file = HTTRANS2020_G01HTv2_TETL_W2FF.inp\n  allow_renumbering = false\n  dim = 3\n[]\n\nKind regards,\nTraiwit",
          "url": "https://github.com/idaholab/moose/discussions/18358",
          "updatedAt": "2023-05-02T14:05:02Z",
          "publishedAt": "2021-07-16T06:19:16Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI suspect the renumbering that is allowed/disallowed is the one by further mesh operations (refinement etc)\nWhat do you need this for?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18358#discussioncomment-1024823",
                  "updatedAt": "2023-05-02T14:05:11Z",
                  "publishedAt": "2021-07-20T05:18:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "Hi @GiudGiud,\nIt will be very ideal for me if MOOSE can keep the node numbering to be exactly the same as the .inp file that I input, eg 182 then 100001, not 182 then 183.\nI need it to be the same for Multi-point constraints (MPCs) which help me work with the fault within the domain.\nFor the small sample, I can use excel/python to work around this, but my work usually requires a couple million elements, and this will make it more difficult.\nTraiwit",
                          "url": "https://github.com/idaholab/moose/discussions/18358#discussioncomment-1024861",
                          "updatedAt": "2023-05-02T14:05:11Z",
                          "publishedAt": "2021-07-20T05:37:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Umm I cant see where this param is being used in the code. This might be a bug.\nDo you mind trying to add a getMesh().allow_renumbering(false); at the top of void FileMesh::buildMesh() in FileMesh.C and see if it does the trick?",
                          "url": "https://github.com/idaholab/moose/discussions/18358#discussioncomment-1024897",
                          "updatedAt": "2023-05-02T14:05:16Z",
                          "publishedAt": "2021-07-20T05:50:25Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "(just a try, my suspicion is that this param isnt meant for that)",
                          "url": "https://github.com/idaholab/moose/discussions/18358#discussioncomment-1024914",
                          "updatedAt": "2023-05-02T14:05:20Z",
                          "publishedAt": "2021-07-20T05:59:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "All good, thanks @GiudGiud\nI probs need python to work around this problem, thanks for trying though.\nTraiwit",
                          "url": "https://github.com/idaholab/moose/discussions/18358#discussioncomment-1024948",
                          "updatedAt": "2023-05-02T14:05:21Z",
                          "publishedAt": "2021-07-20T06:09:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Ok. I ll create an issue for this as we are trying to gather what our meshing needs are",
                          "url": "https://github.com/idaholab/moose/discussions/18358#discussioncomment-1121756",
                          "updatedAt": "2023-05-02T14:05:32Z",
                          "publishedAt": "2021-08-02T18:56:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Periodic boundary condition for an RVE sub-model",
          "author": {
            "login": "abarun22"
          },
          "bodyText": "My current work focus on modelling a material microstructure on an RVE and eventually embedding the homogenized behaviour of this model on to bigger component models in continuum scale. As a first step i am interested in applying peridoc boundary conditions to this RVE and i was exploring various methods available in MOOSE which can do that job. The AddPeriodicBCAction objects contain straight forward methods to apply this BC, however to my dismay, the results were not on the expected lines. All of the related methods (auto, translation, function transformation) were tried.\nAlternatively i tried an another route in the form of constraints which might as well model the periodic boundary conditions. This however does not allow me to reference the two pairs of edges participating in this model. Seems like the meshgenerator would either want one pair of edges to be defined or definition of \"final_generator\" parameter which i could not understand, especially for this single domain model.\nA look in to the test suite (/test/tests/mortar/periodic-value/gold) suggests that this approach might give closer results, provided we reference the boundaries to be matched correctly. Here is what i received.\n*** ERROR ***\nYour MeshGenerator tree contains multiple possible generator outputs :\n\"master_y and one or more of the following from an independent set: \"master_x, slave_y\"\n\nThis may be due to a missing dependency or may be intentional. Please select the final MeshGenerator in\nthe [Mesh] block with the \"final_generator\" parameter or add additional dependencies to remove the ambiguity.\nAs far my submodel is concerned it is a simple 2D square block with normal displacements constrained in two of the edges and displacement loads applied on the right edge. The application of PBC's must ensure that the displacements on the respective opposite edges are the same and that we get the simlar deformed profiles on these edges. At present i could not get the sort of behaviour one would expect realistically for this kind of model. e.g., similar to the results in the above folder. I really appreciate any suggestion or pointers in this regard, that would provide a solid start to the work. The attached files might give you an insight in to the schematic of the model, input structure and the results obtained so far.\n19072021.zip\nKind regards,\nArun",
          "url": "https://github.com/idaholab/moose/discussions/18380",
          "updatedAt": "2022-06-24T03:31:45Z",
          "publishedAt": "2021-07-19T17:58:09Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "abarun22"
                  },
                  "bodyText": "A further update to my earlier query on cracking the PBC application. Here is an improved version of the input file for mortar based PBC, where the input meshes (for the object 'LowerDBlockFromSidesetGenerator') were given in sequence for each extraction of block of elements in the edge pairs. This has cured the problem of multiple mesh generator outputs that i mentioned before. Following is the modified version of input commands used.\n[Mesh]\n  [file]\n    type = FileMeshGenerator\n    file = Square.e\n  []\n  [slave_x]\n    input = file\n    type = LowerDBlockFromSidesetGenerator\n    new_block_id = 11\n    new_block_name = \"secondary_x\"\n    sidesets = 'right_edge'\n  []\n  [master_x]\n    input = slave_x\n    type = LowerDBlockFromSidesetGenerator\n    new_block_id = 12\n    new_block_name = \"primary_x\"\n    sidesets = 'left_edge'\n  []\n  [slave_y]\n    input = master_x\n    type = LowerDBlockFromSidesetGenerator\n    new_block_id = 13\n    new_block_name = \"secondary_y\"\n    sidesets = 'bottom_edge'\n  []\n  [master_y]\n    input = slave_y\n    type = LowerDBlockFromSidesetGenerator\n    new_block_id = 14\n    new_block_name = \"primary_y\"\n    sidesets = 'top_edge'\n  []\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n[]\n\n[Variables]\n  [lmx]\n    block = \"secondary_x\"\n  []\n  [lmy]\n    block = \"secondary_y\"\n  []\n[]\n\n[Variables]\n  [./disp_x]\n    scaling = 1e-10\n  [../]\n  [./disp_y]\n    scaling = 1e-10\n  [../]\n[]\n\n[Kernels]\n  [./stress_x]\n    type = ADStressDivergenceTensors\n    component = 0\n    variable = disp_x\n    use_displaced_mesh = true\n  [../]\n  [./stress_y]\n    type = ADStressDivergenceTensors\n    component = 1\n    variable = disp_y\n    use_displaced_mesh = true\n  [../]\n[]\n\n[BCs]\n  [./symmty]\n      type = DirichletBC\n      variable = disp_y\n      boundary = \"top_edge\"\n      value = 0.0\n  [../]\n\n  [./symmlx]\n      type = DirichletBC\n     variable = disp_x\n      boundary = \"left_edge\"\n      value = 0.0\n  [../]\n\n  [./dispR]\n    type = FunctionDirichletBC\n    variable = disp_x\n    function = '0.1*t'\n    boundary = \"right_edge\"\n  [../]\n[]\n\n[Constraints]\n  [cx]\n    type = EqualValueConstraint\n    variable = lmx\n    secondary_variable = disp_x\n    primary_boundary = \"left_edge\"\n    secondary_boundary = \"right_edge\"\n    primary_subdomain = 12\n    secondary_subdomain = 11\n    periodic = true\n  []\n  [cy]\n    type = EqualValueConstraint\n    variable = lmy\n    secondary_variable = disp_y\n    primary_boundary = \"top_edge\"\n    secondary_boundary = \"bottom_edge\"\n    primary_subdomain = 14\n    secondary_subdomain = 13\n    periodic = true\n  []\n[]\n\n\n[AuxVariables]\n  [./stress_xx]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./stress_yy]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n  [./von_mises]\n    #Dependent variable used to visualize the Von Mises stress\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n\n[AuxKernels]\n  [./str_xx]\n    type = ADRankTwoAux\n    rank_two_tensor = stress\n    variable = stress_xx\n    index_i = 0\n    index_j = 0\n  [../]\n\n  [./str_yy]\n    type = ADRankTwoAux\n    rank_two_tensor = stress\n    variable = stress_yy\n    index_i = 1\n    index_j = 1\n  [../] \n  \n  [./von_mises_kernel]\n    #Calculates the von mises stress and assigns it to von_mises\n    type = ADRankTwoScalarAux\n    variable = von_mises\n    rank_two_tensor = stress\n    execute_on = timestep_end\n    scalar_type = VonMisesStress\n  [../]\n[]\n[Materials]\n  [./elasticity]\n    type = ADComputeIsotropicElasticityTensor\n    poissons_ratio = 0.3\n    youngs_modulus = 1e5\n  [../]\n  [./strain]\n    type = ADComputeFiniteStrain\n  [../]\n  [./stress]\n    type = ADComputeFiniteStrainElasticStress\n  [../]\n[]\n\n[Postprocessors]\n  [./stress_xx]\n    type = ElementAverageValue\n    variable = stress_xx\n  [../]\n  [./stress_yy]\n    type = ElementAverageValue\n    variable = stress_yy\n [../]\n[]\n\n[Preconditioning]\n  [./smp]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  num_steps = 50\n  dt = 0.1\n  type = Transient\n\n nl_rel_tol = 1e-6\n nl_max_its = 10\n  l_tol = 1e-4\n  l_max_its = 50\n\n  solve_type = Newton\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'lu'\n[]\n\n[Outputs]\n  exodus = true\n  csv = true\n[]\n\nThis time i am hit with zero pivoting issues during the solution stage, that could possibly be related to rigid body displacements happening in the model.\n_**Time Step 1, time = 0.05, dt = 0.05\n 0 Nonlinear |R| = 1.541104e-03\n      0 Linear |R| = 1.541104e-03\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_NUMERIC_ZEROPIVOT\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nAborting as solve did not converge\n\nTime Step 1, time = 0.025, dt = 0.025\n 0 Nonlinear |R| = 7.705519e-04\n      0 Linear |R| = 7.705519e-04\n  Linear solve did not converge due to DIVERGED_PC_FAILED iterations 0\n                 PC failed due to FACTOR_NUMERIC_ZEROPIVOT\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 0\n Solve Did NOT Converge!\nAborting as solve did not converge**_\n\nThe model treats all the boundaries to be restrained in their respective normal directions and the application of constraints does not seem to resolve this, while the application of displacement controlled loads does not seem to deform the model. Kindly request you please to pour in your comments that would enable to me check if there are any deficiencies in the current input structure.\nKind regards,\nArun",
                  "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1032194",
                  "updatedAt": "2022-06-24T03:32:05Z",
                  "publishedAt": "2021-07-21T12:02:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Your are overcomplicating PBCs. The [Periodic] action should be sufficient here. However it requires nodes to line up across periodic boundaries. Make sure your mesh is constructed accordingly (GeneratedMeshGenerator does it right by default).",
                  "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1038726",
                  "updatedAt": "2022-06-24T15:02:07Z",
                  "publishedAt": "2021-07-22T17:03:31Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "Thanks Daniel. Yes you are right. It works now, however with modified BC's as given below. This gives enough room for the model to deform in the loading direction preventing the RBM encountered earlier.\n\n\nI hope the BC applied in this manner mimics realistically the response obtained for an infinite body, while integrating the results with larger continuum models.\nKind regards,\nArun",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1038942",
                          "updatedAt": "2022-06-24T15:02:05Z",
                          "publishedAt": "2021-07-22T18:10:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "@abarun22 Could you paste your PBC block here? From the figure, it seems that you have some incompatible BCs.",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1040136",
                          "updatedAt": "2022-06-24T15:02:37Z",
                          "publishedAt": "2021-07-23T01:25:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "Dear Gary,\nHere is the block for boundary conditions and also attached the new model file.\n[BCs]\n[./Periodic]\n[./all]\nvariable = 'disp_x disp_y'\nauto_direction = 'x y'\n[../]\n[../]\n[./top_x]\ntype = DirichletBC\nvariable = disp_x\nboundary = \"left_top\"\nvalue = 0.0\n[../]\n[./lbot_x]\ntype = DirichletBC\nvariable = disp_x\nboundary = \"left_bot\"\nvalue = 0.0\n[../]\n[./lbot_y]\ntype = DirichletBC\nvariable = disp_y\nboundary = \"left_bot\"\nvalue = 0.0\n[../]\n[./rbot_x]\ntype = DirichletBC\nvariable = disp_x\nboundary = \"right_bot\"\nvalue = 0.0\n[../]\n[./dispLoad]\ntype = FunctionDirichletBC\nvariable = disp_x\nfunction = '0.1*t'\nboundary = \"right_edge\"\n[../]\n[]\nSquare.zip",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1041547",
                          "updatedAt": "2022-06-24T15:02:37Z",
                          "publishedAt": "2021-07-23T09:48:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "For example, the rbot_x and dispLoad are incompatible at the bottom right corner.",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1041779",
                          "updatedAt": "2022-06-24T15:03:33Z",
                          "publishedAt": "2021-07-23T10:55:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "Yes i see that there is a problem of resolution at the bottom right corner. I guess the preference is given to the effect of restraint rather than the application of loads and therefore you see no displacements there. I guess with a denser mesh the kink at the top and bottom displacement profiles would be not that obvious. I am not pretty sure whether we are on the same lines.",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1041916",
                          "updatedAt": "2022-06-24T15:03:33Z",
                          "publishedAt": "2021-07-23T11:33:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "Further problems were observed when the model is run with a refined mesh. The periodicity effects are subdued and i see a variation in displacement profile along the boundaries. Attached please find the displacement contour along the same loading direction, that shows this effect. I guess there is certainly a problem here, as i do not see a dependency with respect to the FE model size. Any suggestions on fixing this issue would be highly appreciated.",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1047217",
                          "updatedAt": "2022-06-24T15:03:33Z",
                          "publishedAt": "2021-07-25T12:25:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "Any suggestions/ideas on fixing this issue with refined mesh?",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1082426",
                          "updatedAt": "2022-06-24T15:03:33Z",
                          "publishedAt": "2021-07-28T13:04:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "You need to look at the Global Strain system https://mooseframework.inl.gov/source/actions/GlobalStrainAction.html will will ensure periodic strains! That's the right approach fro an RVE. Your loading will have to be formulated in terms of an applied stress to the RVE.",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1084569",
                          "updatedAt": "2022-06-24T15:03:33Z",
                          "publishedAt": "2021-07-28T22:10:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "abarun22"
                          },
                          "bodyText": "Thanks Daniel. Thanks for pointing me to the right direction. Indeed this would fit my requirements very much and i hope to extend my developments further. I wanted to ask whether the framework would with external mesh combined with automatic mode of PBC application. Executing this i received the following error.\n*** ERROR ***\nCouldn't auto-detect a paired boundary for use with periodic boundary conditions\nLooks like there is a issue identifying the periodic boundaries. Here is the input file, i've used for your reference.\n[Mesh]\n[file]\ntype = FileMeshGenerator\nfile = cube.inp\n[]\n[cnode]\ntype = ExtraNodesetGenerator\ncoord = '0.0 0.0 0.0'\nnew_boundary = 100\ninput = file\n[]\n[]\n[Variables]\n[./u_x]\n[../]\n[./u_y]\n[../]\n[./u_z]\n[../]\n[./global_strain]\norder = SIXTH\nfamily = SCALAR\n[../]\n[]\n[AuxVariables]\n[./disp_x]\n[../]\n[./disp_y]\n[../]\n[./disp_z]\n[../]\n[./s00]\norder = CONSTANT\nfamily = MONOMIAL\n[../]\n[./s11]\norder = CONSTANT\nfamily = MONOMIAL\n[../]\n[./e00]\norder = CONSTANT\nfamily = MONOMIAL\n[../]\n[./e11]\norder = CONSTANT\nfamily = MONOMIAL\n[../]\n[]\n[AuxKernels]\n[./disp_x]\ntype = GlobalDisplacementAux\nvariable = disp_x\nscalar_global_strain = global_strain\nglobal_strain_uo = global_strain_uo\ncomponent = 0\n[../]\n[./disp_y]\ntype = GlobalDisplacementAux\nvariable = disp_y\nscalar_global_strain = global_strain\nglobal_strain_uo = global_strain_uo\ncomponent = 1\n[../]\n[./disp_z]\ntype = GlobalDisplacementAux\nvariable = disp_z\nscalar_global_strain = global_strain\nglobal_strain_uo = global_strain_uo\ncomponent = 2\n[../]\n[./s00]\ntype = RankTwoAux\nvariable = s00\nrank_two_tensor = stress\nindex_i = 0\nindex_j = 0\n[../]\n[./s11]\ntype = RankTwoAux\nvariable = s11\nrank_two_tensor = stress\nindex_i = 1\nindex_j = 1\n[../]\n[./e00]\ntype = RankTwoAux\nvariable = e00\nrank_two_tensor = total_strain\nindex_i = 0\nindex_j = 0\n[../]\n[./e11]\ntype = RankTwoAux\nvariable = e11\nrank_two_tensor = total_strain\nindex_i = 1\nindex_j = 1\n[../]\n[]\n[GlobalParams]\ndisplacements = 'u_x u_y u_z'\n[]\n[Kernels]\n[./TensorMechanics]\n[../]\n[]\n[ScalarKernels]\n[./global_strain]\ntype = GlobalStrain\nvariable = global_strain\nglobal_strain_uo = global_strain_uo\n[../]\n[]\n[BCs]\n[./Periodic]\n[./au]\nvariable = ' u_x u_y u_z'\nauto_direction = 'x y z'\n[../]\n[./LR]\nvariable = 'u_x u_y u_z'\nprimary = \"left\"\nsecondary = \"right\"\ntranslation = '1 0 0'\n[../]\n[./TB]\nvariable = 'u_x u_y u_z'\nprimary = \"top\"\nsecondary = \"bottom\"\ntranslation = '0 1 0'\n[../]\n[./FB]\nvariable = 'u_x u_y u_z'\nprimary = \"front\"\nsecondary = \"back\"\ntranslation = '0 0 1'\n[../]\n[../]\nfix center point location\n[./centerfix_x]\ntype = DirichletBC\nboundary = 100\nvariable = u_x\nvalue = 0\n[../]\n[./centerfix_y]\ntype = DirichletBC\nboundary = 100\nvariable = u_y\nvalue = 0\n[../]\n[./centerfix_z]\ntype = DirichletBC\nboundary = 100\nvariable = u_z\nvalue = 0\n[../]\n[]\n[Materials]\n[./elasticity_tensor]\ntype = ComputeElasticityTensor\nC_ijkl = '70e9 0.33'\nfill_method = symmetric_isotropic_E_nu\n[../]\n[./strain]\ntype = ComputeSmallStrain\nglobal_strain = global_strain\n[../]\n[./global_strain]\ntype = ComputeGlobalStrain\nscalar_global_strain = global_strain\nglobal_strain_uo = global_strain_uo\n[../]\n[./stress]\ntype = ComputeLinearElasticStress\n[../]\n[]\n[UserObjects]\n[./global_strain_uo]\ntype = GlobalStrainUserObject\napplied_stress_tensor = '5e9 0 0 0 0 0'\nexecute_on = 'Initial Linear Nonlinear'\n[../]\n[]\n[Postprocessors]\n[./l2err_e00]\ntype = ElementL2Error\nvariable = e00\nfunction = 0.07142857 #strain_xx = C1111/sigma_xx\n[../]\n[./l2err_e11]\ntype = ElementL2Error\nvariable = e11\nfunction = -0.071428570.33 #strain_yy = -nustrain_xx\n[../]\n[]\n[Preconditioning]\n[./SMP]\ntype = SMP\nfull = true\n[../]\n[]\n[Executioner]\ntype = Transient\nscheme = bdf2\nsolve_type = 'PJFNK'\nline_search = basic\npetsc_options_iname = '-pc_type -ksp_gmres_restart -sub_ksp_type -sub_pc_type -pc_asm_overlap'\npetsc_options_value = 'asm         31   preonly   lu      1'\nl_max_its = 30\nnl_max_its = 12\nnl_rel_tol = 1.0e-10\nstart_time = 0.0\nnum_steps = 5\n[]\n[Outputs]\nexodus = true\n[]\nInstead i tried to use the translational PBC, (ones which are under commented section in BCs) which did not produce any results (pls refer the results pased below).\nFramework Information:\nMOOSE Version:           git commit b06f1d9 on 2016-03-01\nLibMesh Version:         c70ab40900490f44391f1b891c8c3731c45f0cf1\nPETSc Version:           3.14.2\nSLEPc Version:           3.14.0\nCurrent Time:            Mon Aug  2 19:14:28 2021\nExecutable Timestamp:    Wed Jul 28 17:30:08 2021\nParallelism:\nNum Processors:          1\nNum Threads:             1\nMesh:\nParallel Type:           replicated\nMesh Dimension:          3\nSpatial Dimension:       3\nNodes:\nTotal:                 1331\nLocal:                 1331\nElems:\nTotal:                 1000\nLocal:                 1000\nNum Subdomains:          4\nNum Partitions:          1\nNonlinear System:\nNum DOFs:                3999\nNum Local DOFs:          3999\nVariables:               { \"u_x\" \"u_y\" \"u_z\" } \"global_strain\"\nFinite Element Types:    \"LAGRANGE\" \"SCALAR\"\nApproximation Orders:    \"FIRST\" \"SIXTH\"\nAuxiliary System:\nNum DOFs:                7993\nNum Local DOFs:          7993\nVariables:               { \"disp_x\" \"disp_y\" \"disp_z\" } { \"s00\" \"s11\" \"e00\" \"e11\" }\nFinite Element Types:    \"LAGRANGE\" \"MONOMIAL\"\nApproximation Orders:    \"FIRST\" \"CONSTANT\"\nExecution Information:\nExecutioner:             Transient\nTimeStepper:             ConstantDT\nSolver Mode:             Preconditioned JFNK\nMOOSE Preconditioner:    SMP\nLEGACY MODES ENABLED:\nThis application uses the legacy material output option: material properties are output only on TIMESTEP_END, not INITIAL. To                                                                remove this message, set 'use_legacy_material_output' to false in this application. If there are gold output files that conta                                                               in material property output for which output occurs on INITIAL, then these will generate diffs due to zero values being stored                                                               , and these tests should be re-golded.\nTime Step 0, time = 0\nPostprocessor Values:\n+----------------+----------------+----------------+\n| time           | l2err_e00      | l2err_e11      |\n+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+\nScalar Variable Values:\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n| time           | global_strain_0| global_strain_1| global_strain_2| global_strain_3| global_strain_4| global_strain_5|\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\nTime Step 1, time = 1, dt = 1\n0 Nonlinear |R| = 0.000000e+00\nNonlinear solve converged due to CONVERGED_FNORM_ABS iterations 0\nSolve Converged!\nPostprocessor Values:\n+----------------+----------------+----------------+\n| time           | l2err_e00      | l2err_e11      |\n+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   1.000000e+00 |   7.142857e-02 |   2.357143e-02 |\n+----------------+----------------+----------------+\nScalar Variable Values:\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n| time           | global_strain_0| global_strain_1| global_strain_2| global_strain_3| global_strain_4| global_strain_5|\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n|   1.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |   0.000000e+00 |\n+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\nI guess this formulation based load application will not be done discretely and so the reason for a single time step given in the executioner block. Please could you advise me whether \"GeneratedMesh\" is the only option to execute problems with PBC's applied in an automatic fashion? And offcourse, any suggestions to make the translational method to work would be much welcomed.\nAttached here is the ABAQUS mesh used for this model, if you would like to give a check.\ncube.txt\nKind regards,\nArun",
                          "url": "https://github.com/idaholab/moose/discussions/18380#discussioncomment-1121641",
                          "updatedAt": "2022-06-24T15:03:44Z",
                          "publishedAt": "2021-08-02T18:24:53Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Generating output with timesteps",
          "author": {
            "login": "japresa"
          },
          "bodyText": "Hello, I'm new to MOOSE and am working on a code using SAM and MOOSE. I am running a steady state simulation and am trying to generate the output. However, I can't seem to edit the start time, end time, time steps, etc in the Executioner and Outputs blocks.\nIf I define parameters in the executioner block, P = {start_time, end_time, dt, num_steps}, they go unused and I'm not able to control the simulation. \"/home/projects/file.i: unused parameter 'Executioner/P\"\nIs there a way that I can control the parameters P, in any block, to manage my output's time frame?",
          "url": "https://github.com/idaholab/moose/discussions/18452",
          "updatedAt": "2022-08-09T15:15:17Z",
          "publishedAt": "2021-07-27T00:10:11Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhat do you mean by this P syntax?\nAlso,\nA steady state simulation won't take a time step parameter, it's solving for steady state not for the evolution of something over time. So if you are trying to do a relaxation transient to steady state, then you need to use a transient simulation, with a transient executioner.\nRegardless, could you please paste your executioner block here so we can have a look\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18452#discussioncomment-1059226",
                  "updatedAt": "2022-08-09T15:15:17Z",
                  "publishedAt": "2021-07-27T00:35:47Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "I am wondering if you are mixing syntax with general MOOSE and SAM. SAM likely has syntax that is specific to that application. Also, make sure you don't post input file syntax for SAM in this forum.\nPerhaps @andrsd can help out here?",
                          "url": "https://github.com/idaholab/moose/discussions/18452#discussioncomment-1063604",
                          "updatedAt": "2022-08-09T15:15:17Z",
                          "publishedAt": "2021-07-27T15:17:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "andrsd"
                          },
                          "bodyText": "Your executioner block should look like this:\n[Executioner]\n   start_time = <double>\n   end_time = <double>\n   dt = <double>\n[]\n\nwhere you need to substitute<double> with a floating point number. num_steps and end_time are mutually exclusive. If you specify both, end_time wins (IIRC).\nThen, output will happen for your initial condition and every time step - that's the default. As long as you have something like this in your input file:\n[Outputs]\n  [out_displaced]\n    type = Exodus\n    use_displaced = true\n    sequence = false\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/18452#discussioncomment-1084428",
                          "updatedAt": "2022-08-09T15:15:17Z",
                          "publishedAt": "2021-07-28T21:18:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "japresa"
                          },
                          "bodyText": "Thank you for your response,\nThe variables that @andrsd defined in the executioner block were the \"parameters p\" I was referring to. I will continue to model my executioner and output blocks in style you've provided.\nAlso, @GiudGiud, thank you for clarifying about how steady state simulations won't take time-step-parameters. I was assuming I had to analyze a transient simulation and manually gather the steady state information when reached. This software is powerful :)",
                          "url": "https://github.com/idaholab/moose/discussions/18452#discussioncomment-1117130",
                          "updatedAt": "2022-08-16T19:37:22Z",
                          "publishedAt": "2021-08-02T03:56:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "About rigid body motion (RBM) in two particle sintering simulation",
          "author": {
            "login": "KaijieNing"
          },
          "bodyText": "Hi, everyone,\nI got the question about using rigid body motion for two-particle sintering with phase field module.\nI tried the input file from (modules/phase_field/test/tests/rigidbodymotion/polycrystal_action.i) which worked. I found that when I set up the two-particle along x-direction as an initial condition, the simulation itself ran well but I could not see the reaction force/advection velocity from Paraview.\nSince the physics for two-particle sintering should not rely on two-particle orientation for isotropic diffusion, I wanted to know why I could not see the reaction force/advection velocity. Is it ok to use it for two-particle along x-direction? Do I need to change rotation_constant/translation_constant/stiffness_constant?\nThanks very much,\nKaijie",
          "url": "https://github.com/idaholab/moose/discussions/18305",
          "updatedAt": "2022-06-29T07:37:10Z",
          "publishedAt": "2021-07-12T02:02:57Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "SudiptaBiswas"
                  },
                  "bodyText": "What do you mean by 'could not see the reaction force'? Did the simulation not output the forces for visualization or were the values zero?\nFirst, please make sure you are properly outputting the variables you are interested in. Next, when two particles are aligned along the same axes, there will not be any rotation. There could be some translation though depending on the force values. You can find a bit more details here, https://link.springer.com/article/10.1007/s10853-017-1846-3.",
                  "url": "https://github.com/idaholab/moose/discussions/18305#discussioncomment-1022910",
                  "updatedAt": "2022-06-29T07:37:10Z",
                  "publishedAt": "2021-07-19T16:40:21Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "KaijieNing"
                          },
                          "bodyText": "Thanks very much.\nI should say the outputting variables were all zero for my case when I put particles along the same x-axis. I have been reading that particle and other related articles many times, which were great work. And I wanted to apply this PFM model to my studies.\nHere are the pictures for you to see the test case from MOOSE and the application to my case. Is there a problem with my case? But your paper showed the different Vx/Vy to mine. I do not why?\nTest case for c and force df0:\n\nTest case for velocity x and y:\n\nMy case for c and force df0:\n\nMy case for velocity x and y:",
                          "url": "https://github.com/idaholab/moose/discussions/18305#discussioncomment-1032892",
                          "updatedAt": "2022-06-29T07:37:10Z",
                          "publishedAt": "2021-07-21T14:32:58Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "SudiptaBiswas"
                  },
                  "bodyText": "For the first case, you are looking at the total advection velocities whereas the paper shows the translation and rotation components separately. That's why the difference.\nFor the second case, it might be that the particles don't have enough overlap to generate the forces. Try increasing the interface width and look at a later timestep. Although,  it's hard to pinpoint the reason just from the image.",
                  "url": "https://github.com/idaholab/moose/discussions/18305#discussioncomment-1043146",
                  "updatedAt": "2022-06-29T07:37:38Z",
                  "publishedAt": "2021-07-23T17:00:25Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "KaijieNing"
                          },
                          "bodyText": "You are correct. I just finished my new test, and it worked as seen below. Thanks very much.",
                          "url": "https://github.com/idaholab/moose/discussions/18305#discussioncomment-1115676",
                          "updatedAt": "2022-06-29T07:37:39Z",
                          "publishedAt": "2021-08-01T14:33:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Creating nonlinear variables in global user object",
          "author": {
            "login": "rtaylo45"
          },
          "bodyText": "Hello,\nI created a user object that hold information about specific species such as molar mass, species name, phase... etc. The sample code in the input block is:\n[UserObjects]\n  [spec_def]\n    type = SpeciesDefinition\n    species_names = 'U-235 Xe-135 Xe-135 I-135'\n    phase_names = 'liq gas gas liq'\n    molar_masses  = '235 135 135 135'\n  []\n[]\n\nand i would like for the user block to automatically create the nonlinear variables and add them to the problem but i can not figure out a way to go about this. This is because the GeneralUserObject does not have access to the _factory object or _problem object. I have tried inheriting my object from the Action class as well. But this doesn't really work, lots of compiler errors with multiple functions being defined with GeneralUserObject and Action. I have tried looking at examples in the Geochemistry and chemical reactions modules but they make the user add in the variables themselves. The problem is that in the future i will be needing to add hundreds of species and i don't want the input file to be super long, might switch to an addition input file for that. So my question is: Can we create nonlinear variables and add them to the problem using GeneralUserObjects?\nIf this is not the case, the other idea i had was to create a AddSpeciesAction that takes in my SpeciesDefinition user object as a parameter. It would then iterate though the species and add them as variables. But im not sure how to add parameters of custom types. Is there a way to add parameters of custom types?\nThanks,\nZack",
          "url": "https://github.com/idaholab/moose/discussions/18483",
          "updatedAt": "2022-07-12T01:47:28Z",
          "publishedAt": "2021-07-30T15:50:08Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe cannon way to add non linear variables to the problem like this is to define a new action. You can keep the same syntax in the input file, just replace [UserObjects] by a new category with an associated action that does the non linear variable creation.\nI m not sure about adding a UserObject parameter to this action with a custom type. I would pass a string (the name) then go retrieve the UO from the action.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18483#discussioncomment-1092126",
                  "updatedAt": "2022-07-12T01:47:31Z",
                  "publishedAt": "2021-07-30T16:37:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "To expand on @GiudGiud's comment: Create both the variables and the user object in the action. Only actions can (should) create other objects, and you cannot have an object derive from multiple systems.",
                          "url": "https://github.com/idaholab/moose/discussions/18483#discussioncomment-1095016",
                          "updatedAt": "2022-07-12T01:47:31Z",
                          "publishedAt": "2021-07-31T19:21:22Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}