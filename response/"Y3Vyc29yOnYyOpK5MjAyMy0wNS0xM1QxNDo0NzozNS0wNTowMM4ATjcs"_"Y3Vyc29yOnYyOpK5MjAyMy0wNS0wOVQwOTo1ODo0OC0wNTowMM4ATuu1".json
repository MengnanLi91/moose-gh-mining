{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wNS0wOVQwOTo1ODo0OC0wNTowMM4ATuu1"
    },
    "edges": [
      {
        "node": {
          "title": "How to use one block's information and put in a different block's boundary condition with existing kernels?",
          "author": {
            "login": "K-Komal-98"
          },
          "bodyText": "For a battery, there will be an anode, cathode and electrolyte separately represented as blocks. Say block 1 for anode, 2 for electrolyte and 3 for cathode. Each block will have their diffusion ODEs for evolution of their respective ionic concentrations say c_a, c_e and c_c for blocks 1, 2 and 3 respectively. The connection between the blocks are only through the boundary conditions where block 1 is connected to block 2 via some current boundary condition in which c_e (block 2 variable) extreme cell value appears. The same is for the other blocks. Is it possible to use some existing kernels to perform this without coding anything.",
          "url": "https://github.com/idaholab/moose/discussions/24084",
          "updatedAt": "2023-06-24T22:36:28Z",
          "publishedAt": "2023-04-16T21:23:34Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI dont think we have a boundary condition that depends directly on the extreme value of a variable over one block.\nYou could get a prototype going where this extreme gets computed using an ExtremeValuePostprocessor, then use this in a ParsedMaterial or a ParsedAux (the Jacobian will be imperfect, but this is just a first draft).\nYou can then use the material property or auxiliary variable defined to help build this boundary condition\nThe boundary condition may or may not already exist in the framework, we would need to know the expression to determine that.\n\nEach block will have their diffusion ODEs for evolution of their respective ionic concentrations say c_a, c_e and c_c for blocks 1, 2 and 3 respectively\n\nYou mean PDE right? Or is steady state 1D diffusion?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5630664",
                  "updatedAt": "2023-04-16T22:21:24Z",
                  "publishedAt": "2023-04-16T22:21:23Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "K-Komal-98"
                          },
                          "bodyText": "The actual problem is a PDE which I have broken down into simpler problems. I have figured out how to handle the other parts but am\n\nstuck with how to add the robin bc. To explain this part of the problem, I have attached a file where there are two subdomains with its different variables. These variables are interconnected by boundary conditions at interface. Can you please guide me how to take it further?",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5724640",
                          "updatedAt": "2023-04-25T21:03:52Z",
                          "publishedAt": "2023-04-25T21:03:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The robin BC can be implemented as an interface kernel here.\nThey look fairly like a BC but they are meant to couple touching subdomains",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5725420",
                          "updatedAt": "2023-04-25T23:47:53Z",
                          "publishedAt": "2023-04-25T23:47:52Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "K-Komal-98"
                          },
                          "bodyText": "To solve this problem. I am first trying to run the examples provided. In many of the cases I find a missing kernel. Where can I find the application for it? For example, this is an example I was trying to run, but Coefparamdiffusion is an unregistered object.\neg.txt\nHow can I go about?",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5780475",
                          "updatedAt": "2023-05-02T12:37:01Z",
                          "publishedAt": "2023-05-02T12:37:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "is this this one?\nhttps://mooseframework.inl.gov/source/kernels/CoefDiffusion.html",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5780481",
                          "updatedAt": "2023-05-02T12:38:17Z",
                          "publishedAt": "2023-05-02T12:38:16Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "K-Komal-98"
                  },
                  "bodyText": "It is in this folder test/tests/interfacekernels/2d_interface/coupled_value_coupled_flux.i",
                  "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5780564",
                  "updatedAt": "2023-05-02T12:45:50Z",
                  "publishedAt": "2023-05-02T12:45:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "that's a test object then.\nIf you cant use the one I linked to, you can use the test object only with the test executable and also passing --allow-test-objects on the command line",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5781067",
                          "updatedAt": "2023-05-02T13:36:50Z",
                          "publishedAt": "2023-05-02T13:36:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "K-Komal-98"
                  },
                  "bodyText": "I could solve. Thanks for helping out!",
                  "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5781308",
                  "updatedAt": "2023-05-02T13:58:01Z",
                  "publishedAt": "2023-05-02T13:58:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "K-Komal-98"
                          },
                          "bodyText": "Hi,\nThere is no kernel named RobinBC. Were you saying about the BC or the kernel? To implement this boundary condition, which interface kernel can I use?",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5880432",
                          "updatedAt": "2023-05-12T04:09:28Z",
                          "publishedAt": "2023-05-12T04:09:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This boundary condition is a BC not a kernel.\nYou should use the BC system\nYou can have a look at the code in the electromagnetics module for this BC\nhttps://mooseframework.inl.gov/docs/PRs/24293/site/source/bcs/EMRobinBC.html",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5884999",
                          "updatedAt": "2023-05-12T13:17:41Z",
                          "publishedAt": "2023-05-12T13:17:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "K-Komal-98"
                          },
                          "bodyText": "EMRbinBC seems to work for single variable. Am I missing something? My system has total 4 variables and 3 variables in the Robin BC. Can I still use this, or I have to make a custom BC?",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5890088",
                          "updatedAt": "2023-05-13T04:06:56Z",
                          "publishedAt": "2023-05-13T04:06:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You have to make a custom one. We dont have something that will just do f(something) or g(something) for the BC like you have in your equation. There is no ParsedBC (currently)",
                          "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5890099",
                          "updatedAt": "2023-05-13T04:11:36Z",
                          "publishedAt": "2023-05-13T04:11:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "K-Komal-98"
                  },
                  "bodyText": "Okay. Thankyou! I will try this out",
                  "url": "https://github.com/idaholab/moose/discussions/24084#discussioncomment-5890118",
                  "updatedAt": "2023-05-13T04:20:43Z",
                  "publishedAt": "2023-05-13T04:20:43Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "issue with building the test after update",
          "author": {
            "login": "Khaksarkn"
          },
          "bodyText": "Hi, I have an m1 macbook air and had a working moose. But recently when I created new application, running the first test gave me segmentation error. So, I updated moose and now I cannot even make the tests in the moose directory to test if moose works right. this is the error I get when I try to make in the /projects/moose/test/ directory:\nI tried installing packaging (pip install packaging and python -m ensurepip --upgrade) but it already has the packaging.\nI would appreciate it if you could help me out. Thanks.\nI also tried the steps in https://mooseframework.inl.gov/help/troubleshooting.html#buildissues\nand got the mentioned outputs. but this error still is:\nTraceback (most recent call last):\nFile \"/Users/kiankhaksar/projects/moose/framework/scripts/get_repo_revision.py\", line 19, in \nfrom packaging import version\nModuleNotFoundError: No module named 'packaging'\nChecking if header needs updating: /Users/kiankhaksar/projects/moose/framework/include/base/MooseRevision.h...\nFailed to generate MooseRevision.h\nmake: *** [/Users/kiankhaksar/projects/moose/framework/moose.mk:347: /Users/kiankhaksar/projects/moose/framework/include/base/MooseRevision.h] Error 1",
          "url": "https://github.com/idaholab/moose/discussions/24342",
          "updatedAt": "2023-05-12T19:07:16Z",
          "publishedAt": "2023-05-12T17:33:25Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAre you not using mamba?\nWhy are you using pip?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887770",
                  "updatedAt": "2023-05-12T18:11:27Z",
                  "publishedAt": "2023-05-12T18:11:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Khaksarkn"
                          },
                          "bodyText": "Hi,\nThanks for the reply.\nYes, I am using mamba. I searched for possible solutions. they suggested insalling packaging this way. How may I resolve the issue?\nThanks.",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887817",
                          "updatedAt": "2023-05-12T18:15:56Z",
                          "publishedAt": "2023-05-12T18:15:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Khaksarkn"
                          },
                          "bodyText": "I just tried (mamba install packaging). But I am still getting the same thing.",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887830",
                          "updatedAt": "2023-05-12T18:18:47Z",
                          "publishedAt": "2023-05-12T18:18:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I'm worried there's different python being found.\nWhat does which python return ?",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887852",
                          "updatedAt": "2023-05-12T18:22:45Z",
                          "publishedAt": "2023-05-12T18:22:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Khaksarkn"
                          },
                          "bodyText": "This is the output:\n/Users/kiankhaksar/mambaforge3/envs/moose/bin/python",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887869",
                          "updatedAt": "2023-05-12T18:25:32Z",
                          "publishedAt": "2023-05-12T18:25:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "in fact what does the diagnostics script in moose/scripts return?",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887872",
                          "updatedAt": "2023-05-12T18:25:46Z",
                          "publishedAt": "2023-05-12T18:25:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This is the output: /Users/kiankhaksar/mambaforge3/envs/moose/bin/python\n\nlooks good",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887876",
                          "updatedAt": "2023-05-12T18:26:02Z",
                          "publishedAt": "2023-05-12T18:26:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Khaksarkn"
                          },
                          "bodyText": "I run the diagnostics.sh file in the terminal and this is the output:\nFri 12 May 2023 14:27:32 EDT\nSystem Arch: Darwin Kernel Version 22.4.0: Mon Mar 6 21:00:41 PST 2023; root:xnu-8796.101.5~3/RELEASE_ARM64_T8103\nMOOSE Package Version: Custom Build\nCPU Count: 8\nMemory Free: 335.703 MB\nVariable which $CC check:\n/Users/kiankhaksar/mambaforge3/envs/moose/bin/mpicc\n$CC --version:\nclang version 12.0.1\nTarget: arm64-apple-darwin20.0.0\nThread model: posix\nInstalledDir: /Users/kiankhaksar/mambaforge3/envs/moose/bin\nMPICC:\nwhich mpicc:\n/Users/kiankhaksar/mambaforge3/envs/moose/bin/mpicc\nmpicc -show:\narm64-apple-darwin20.0.0-clang -I/Users/kiankhaksar/mambaforge3/envs/moose/include -I/Users/kiankhaksar/mambaforge3/envs/moose/include -L/Users/kiankhaksar/mambaforge3/envs/moose/lib -Wl,-rpath,/Users/kiankhaksar/mambaforge3/envs/moose/lib -Wl,-commons,use_dylibs -I/Users/kiankhaksar/mambaforge3/envs/moose/include -L/Users/kiankhaksar/mambaforge3/envs/moose/lib -lmpi -lpmpi\nCOMPILER arm64-apple-darwin20.0.0-clang:\nclang version 12.0.1\nTarget: arm64-apple-darwin20.0.0\nThread model: posix\nInstalledDir: /Users/kiankhaksar/mambaforge3/envs/moose/bin\nPython:\n/Users/kiankhaksar/mambaforge3/envs/moose/bin/python\nPython 3.10.8\nMODULES NOT AVAILABLE\nPETSc configure:\nstatic const char *petscconfigureoptions = \"--download-hypre=1 --with-shared-libraries=1 --with-hdf5-dir=${PREFIX}  --with-make-np=8  --with-debugging=no --download-fblaslapack=1 --download-metis=1 --download-ptscotch=1 --download-parmetis=1 --download-superlu_dist=1 --download-mumps=1 --download-strumpack=1 --download-scalapack=1 --download-slepc=1 --with-mpi=1 --with-openmp=1 --with-cxx-dialect=C++11 --with-fortran-bindings=0 --with-sowing=0 --with-64-bit-indices --COPTFLAGS=-O3 --CXXOPTFLAGS=-O3 --FOPTFLAGS=-O3 --with-x=0 --with-ssl=0 CC=mpicc CXX=mpicxx FC=mpif90 FC=mpif90 FC=mpif77 AR=arm64-apple-darwin20.0.0-ar RANLIB=arm64-apple-darwin20.0.0-ranlib CFLAGS=\"-ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include   -mcpu=apple-a12\" CXXFLAGS=\"-ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -isystem ${PREFIX}/include -std=c++17 -mcpu=apple-a12\" CPPFLAGS=\"-D_FORTIFY_SOURCE=2 -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include -mmacosx-version-min=11.3\" FFLAGS=\"-march=armv8.3-a -ftree-vectorize -fPIC -fno-stack-protector -O2 -pipe -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include   -march=armv8.3-a\" FCFLAGS=\"-march=armv8.3-a -ftree-vectorize -fPIC -fno-stack-protector -O2 -pipe -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include   -march=armv8.3-a\" LDFLAGS=\"-Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,/Users/kiankhaksar/mambaforge3/envs/moose/lib -L/Users/kiankhaksar/mambaforge3/envs/moose/lib\" --prefix=/Users/kiankhaksar/mambaforge3/envs/moose\";\nPETSc linked libraries:\n/Users/kiankhaksar/mambaforge3/envs/moose/lib/libpetsc.dylib:\n@rpath/libpetsc.3.16.dylib (compatibility version 3.16.0, current version 3.16.6)\n@rpath/libHYPRE-2.23.0.dylib (compatibility version 0.0.0, current version 0.0.0)\n@rpath/libstrumpack.dylib (compatibility version 0.0.0, current version 0.0.0)\n@rpath/libsuperlu_dist.7.dylib (compatibility version 7.0.0, current version 7.1.1)\n@rpath/libhdf5.200.dylib (compatibility version 202.0.0, current version 202.0.0)\n@rpath/libparmetis.dylib (compatibility version 0.0.0, current version 0.0.0)\n@rpath/libmetis.dylib (compatibility version 0.0.0, current version 0.0.0)\n@rpath/libc++.1.dylib (compatibility version 1.0.0, current version 1.0.0)\n/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1292.100.5)\n@rpath/libmpifort.12.dylib (compatibility version 15.0.0, current version 15.2.0)\n@rpath/libmpi.12.dylib (compatibility version 15.0.0, current version 15.2.0)\n@rpath/libgfortran.5.dylib (compatibility version 6.0.0, current version 6.0.0)\n@rpath/libomp.dylib (compatibility version 5.0.0, current version 5.0.0)\nENVIRONMENT:\nAS=arm64-apple-darwin20.0.0-as\nMANPATH=/opt/homebrew/share/man:\nAR=arm64-apple-darwin20.0.0-ar\nLDFLAGS=-Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,/Users/kiankhaksar/mambaforge3/envs/moose/lib -L/Users/kiankhaksar/mambaforge3/envs/moose/lib\nac_cv_func_malloc_0_nonnull=yes\nMOOSE_NO_CODESIGN=true\nTERM_PROGRAM=Apple_Terminal\nVTKINCLUDE_DIR=/Users/kiankhaksar/mambaforge3/envs/moose/libmesh-vtk/include/vtk-9.2\nHDF5_DIR=/Users/kiankhaksar/mambaforge3/envs/moose\nac_cv_func_realloc_0_nonnull=yes\nTERM=xterm-256color\nSHELL=/bin/bash\nHOST=arm64-apple-darwin20.0.0\nOBJC=arm64-apple-darwin20.0.0-clang\nNM=arm64-apple-darwin20.0.0-nm\nTMPDIR=/var/folders/z1/fk6267bx7bqdpn5b8g2ry23w0000gn/T/\nHOMEBREW_REPOSITORY=/opt/homebrew\nCPPFLAGS=-D_FORTIFY_SOURCE=2 -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include\nCONDA_SHLVL=2\nPAGESTUFF=arm64-apple-darwin20.0.0-pagestuff\nTERM_PROGRAM_VERSION=447\nCONDA_PROMPT_MODIFIER=(moose)\nLIPO=arm64-apple-darwin20.0.0-lipo\nNMEDIT=arm64-apple-darwin20.0.0-nmedit\nSIZE=arm64-apple-darwin20.0.0-size\nGSETTINGS_SCHEMA_DIR_CONDA_BACKUP=\nSDKROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk\nTERM_SESSION_ID=08866D55-8C7E-443D-BC98-59D868116CA9\nINSTALL_NAME_TOOL=arm64-apple-darwin20.0.0-install_name_tool\nCXX_FOR_BUILD=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-clang++\nGFORTRAN=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-gfortran\nSEGEDIT=arm64-apple-darwin20.0.0-segedit\nUSER=kiankhaksar\nSEG_HACK=arm64-apple-darwin20.0.0-seg_hack\nLIBTOOL=arm64-apple-darwin20.0.0-libtool\nCLANGXX=arm64-apple-darwin20.0.0-clang++\nEigen3_DIR=/Users/kiankhaksar/mambaforge3/envs/moose/libmesh/include/Eigen\nCONDA_EXE=/Users/kiankhaksar/mambaforge3/bin/conda\nFC_FOR_BUILD=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-gfortran\nCONDA_TOOLCHAIN_BUILD=arm64-apple-darwin20.0.0\nOTOOL=arm64-apple-darwin20.0.0-otool\nWASP_DIR=/Users/kiankhaksar/mambaforge3/envs/moose/wasp\nSSH_AUTH_SOCK=/private/tmp/com.apple.launchd.P5UEBmFNyE/Listeners\nDEBUG_FORTRANFLAGS=-march=armv8.3-a -ftree-vectorize -fPIC -fno-stack-protector -O2 -pipe -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include -march=armv8.3-a -ftree-vectorize -fPIC -fno-stack-protector -O2 -pipe -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments\nCXXFLAGS=-ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include -std=c++17\nCONDA_TOOLCHAIN_HOST=arm64-apple-darwin20.0.0\nSTRINGS=arm64-apple-darwin20.0.0-strings\n_CE_CONDA=\nCONDA_PREFIX_1=/Users/kiankhaksar/mambaforge3\nCHECKSYMS=arm64-apple-darwin20.0.0-checksyms\nPATH=/opt/homebrew/bin:/opt/homebrew/sbin:/opt/miniconda/bin:/Users/kiankhaksar/mambaforge3/envs/moose/bin:/Users/kiankhaksar/mambaforge3/condabin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/kiankhaksar/mambaforge3/envs/moose/wasp/bin:/Users/kiankhaksar/mambaforge3/envs/moose/wasp/bin:/Users/kiankhaksar/mambaforge3/envs/moose/wasp/bin:/Users/kiankhaksar/mambaforge3/envs/moose/wasp/bin:/Users/kiankhaksar/mambaforge3/envs/moose/wasp/bin\nMESON_ARGS=--buildtype release\nGSETTINGS_SCHEMA_DIR=/Users/kiankhaksar/mambaforge3/envs/moose/share/glib-2.0/schemas\nXML_CATALOG_FILES=file:///Users/kiankhaksar/mambaforge3/envs/moose/etc/xml/catalog file:///etc/xml/catalog\n__CFBundleIdentifier=com.apple.Terminal\nCONDA_PREFIX=/Users/kiankhaksar/mambaforge3/envs/moose\nLD=arm64-apple-darwin20.0.0-ld\nBUILD=arm64-apple-darwin20.0.0\nDEBUG_CXXFLAGS=-ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -Og -g -Wall -Wextra -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include\nC_INCLUDE_PATH=/Users/kiankhaksar/mambaforge3/envs/moose/include\nPWD=/Users/kiankhaksar/projects/moose\nF90=mpif90\nSTRIP=arm64-apple-darwin20.0.0-strip\nLIBMESH_DIR=/Users/kiankhaksar/mambaforge3/envs/moose/libmesh\nCMAKE_ARGS=-DCMAKE_AR=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-ar -DCMAKE_CXX_COMPILER_AR=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-ar -DCMAKE_C_COMPILER_AR=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-ar -DCMAKE_RANLIB=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-ranlib -DCMAKE_CXX_COMPILER_RANLIB=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-ranlib -DCMAKE_C_COMPILER_RANLIB=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-ranlib -DCMAKE_LINKER=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-ld -DCMAKE_STRIP=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-strip -DCMAKE_INSTALL_NAME_TOOL=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-install_name_tool -DCMAKE_LIBTOOL=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-libtool -DCMAKE_OSX_DEPLOYMENT_TARGET= -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_SYSROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk\nLANG=en_CA.UTF-8\nF95=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-gfortran\nXPC_FLAGS=0x0\nDEBUG_FFLAGS=-march=armv8.3-a -ftree-vectorize -fPIC -fno-stack-protector -O2 -pipe -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include -march=armv8.3-a -ftree-vectorize -fPIC -fno-stack-protector -O2 -pipe -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments\nF77=mpif77\nREDO_PREBINDING=arm64-apple-darwin20.0.0-redo_prebinding\nXPC_SERVICE_NAME=0\n_CE_M=\nCLANG=arm64-apple-darwin20.0.0-clang\nCC_FOR_BUILD=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-clang\nCXX=mpicxx\nHOME=/Users/kiankhaksar\nSHLVL=2\nFORTRANFLAGS=-march=armv8.3-a -ftree-vectorize -fPIC -fno-stack-protector -O2 -pipe -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include\nHOMEBREW_PREFIX=/opt/homebrew\nCFLAGS=-ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include\nFC=mpif90\n_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_arm64_apple_darwin20_0_0\nMPIHOME=/Users/kiankhaksar/mambaforge3/envs/moose\nVTKLIB_DIR=/Users/kiankhaksar/mambaforge3/envs/moose/libmesh-vtk/lib\nLOGNAME=kiankhaksar\nCONDA_PYTHON_EXE=/Users/kiankhaksar/mambaforge3/bin/python\nbuild_alias=arm64-apple-darwin20.0.0\nCONDA_DEFAULT_ENV=moose\nRANLIB=arm64-apple-darwin20.0.0-ranlib\nDEBUG_CFLAGS=-ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -Og -g -Wall -Wextra -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include\nHOMEBREW_CELLAR=/opt/homebrew/Cellar\nINFOPATH=/opt/homebrew/share/info:\nSEG_ADDR_TABLE=arm64-apple-darwin20.0.0-seg_addr_table\nCC=mpicc\nCMAKE_PREFIX_PATH=:/Users/kiankhaksar/mambaforge3/envs/moose\nhost_alias=arm64-apple-darwin20.0.0\nLDFLAGS_LD=-pie -headerpad_max_install_names -dead_strip_dylibs -rpath /Users/kiankhaksar/mambaforge3/envs/moose/lib -L/Users/kiankhaksar/mambaforge3/envs/moose/lib\nPETSC_DIR=/Users/kiankhaksar/mambaforge3/envs/moose\nFFLAGS=-march=armv8.3-a -ftree-vectorize -fPIC -fno-stack-protector -O2 -pipe -isystem /Users/kiankhaksar/mambaforge3/envs/moose/include\nOBJC_FOR_BUILD=/Users/kiankhaksar/mambaforge3/envs/moose/bin/arm64-apple-darwin20.0.0-clang\n_=/usr/bin/env",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887892",
                          "updatedAt": "2023-05-12T18:28:23Z",
                          "publishedAt": "2023-05-12T18:28:22Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "PATH=/opt/homebrew/bin this is likely the problem\nLet s shuffle this up, get conda before homebrew\nexport PATH=\"/Users/kiankhaksar/mambaforge3/envs/moose/bin:/Users/kiankhaksar/mambaforge3/condabin:$PATH\"",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5887917",
                          "updatedAt": "2023-05-12T18:31:50Z",
                          "publishedAt": "2023-05-12T18:31:49Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Khaksarkn"
                          },
                          "bodyText": "It started to build! and the tests are being OK'ed! still running!\nThank you very much. I really appreciate it.\nSo, using this command, I added the the paths to moose/bin and mambaforge3/condabin before the path to homebrew? since the program was accessing the python of homebrew before the python of moose? I'm guessing!\nIs there a way of permanently changing the PATH ?\nThank you for your help.",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5888027",
                          "updatedAt": "2023-05-12T18:57:20Z",
                          "publishedAt": "2023-05-12T18:46:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes homebrew was (is) briniging in another python\nYou can add this command to your .bash_profile",
                          "url": "https://github.com/idaholab/moose/discussions/24342#discussioncomment-5888100",
                          "updatedAt": "2023-05-12T18:59:27Z",
                          "publishedAt": "2023-05-12T18:59:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to separate a cylinder and a sphere in the same [mesh] without touching each other?",
          "author": {
            "login": "Strawberrybrother"
          },
          "bodyText": "I've looked at some examples of squares or cubes, which can be separated by parameters like xmin, xmax, ymax, ymin, zmin, zmax, but how can we separate a sphere and a cylinder?Thank you for your help and answers.",
          "url": "https://github.com/idaholab/moose/discussions/24336",
          "updatedAt": "2023-06-24T22:36:06Z",
          "publishedAt": "2023-05-12T01:30:52Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nyou can make those meshes with mesh generators then use a combiner generator to have them in the same simulation without touching.\nUnless you use interface kernels or dedicated user objects, they will not influence each other\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24336#discussioncomment-5880157",
                  "updatedAt": "2023-05-12T03:14:20Z",
                  "publishedAt": "2023-05-12T03:14:19Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nYou can translate any of those two meshes using the TransformGenerator\nhttps://mooseframework.inl.gov/docs/PRs/24293/site/source/meshgenerators/TransformGenerator.html\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/24336#discussioncomment-5885021",
                          "updatedAt": "2023-05-12T13:19:05Z",
                          "publishedAt": "2023-05-12T13:19:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Strawberrybrother"
                          },
                          "bodyText": "Hello Guillaume,\nThank you for your help. My problem has been solved. I have another question: if I want the ball to fall vertically onto the cylinder, do I need to add [Kernels] or [BCs] or other parts?\nBest regards,\nStrawberrybrother",
                          "url": "https://github.com/idaholab/moose/discussions/24336#discussioncomment-5887252",
                          "updatedAt": "2023-05-12T16:58:52Z",
                          "publishedAt": "2023-05-12T16:58:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "so you want the mesh to move?",
                          "url": "https://github.com/idaholab/moose/discussions/24336#discussioncomment-5887345",
                          "updatedAt": "2023-05-12T17:12:50Z",
                          "publishedAt": "2023-05-12T17:12:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Strawberrybrother"
                          },
                          "bodyText": "Yes,I want the ball to impact this cylinder. The bottom of the cylinder is fixed . I want to observe the plastic deformation of the ball",
                          "url": "https://github.com/idaholab/moose/discussions/24336#discussioncomment-5887409",
                          "updatedAt": "2023-05-12T17:21:47Z",
                          "publishedAt": "2023-05-12T17:21:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You should look for examples in the repository, this will be hard to build from scratch.\nI think the contact module will have some",
                          "url": "https://github.com/idaholab/moose/discussions/24336#discussioncomment-5887546",
                          "updatedAt": "2023-05-12T17:39:33Z",
                          "publishedAt": "2023-05-12T17:39:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Strawberrybrother"
                          },
                          "bodyText": "Thank you very much",
                          "url": "https://github.com/idaholab/moose/discussions/24336#discussioncomment-5887605",
                          "updatedAt": "2023-05-12T17:46:54Z",
                          "publishedAt": "2023-05-12T17:46:54Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Inquiry about using Exodus mesh format for initial grain structure",
          "author": {
            "login": "PengWei97"
          },
          "bodyText": "Dear MOOSE experts,\nI am writing to seek your advice on how to use an exodus mesh format file as input to create an initial grain structure for phase-field simulation of grain growth. Specifically, I want to utilize the ElementBlockIds information in the mesh file to create the initial grain structure.\nout_test4_01.e.38.05.txt\nAs you can see from the attached figure, the ElementBlockIds in the exodus file are labeled differently for each grain. I want to use this information to assign different grain IDs to each grain and create an initial grain structure.\n\nCould you please guide me on how to achieve this in MOOSE? Any suggestions or examples would be greatly appreciated.\nThank you very much for your time and help.\nBest regards,\nwei",
          "url": "https://github.com/idaholab/moose/discussions/24328",
          "updatedAt": "2023-06-24T22:35:59Z",
          "publishedAt": "2023-05-11T14:16:11Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@laagesen @amjokisaari",
                  "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5873918",
                  "updatedAt": "2023-05-11T14:19:06Z",
                  "publishedAt": "2023-05-11T14:19:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "laagesen"
                  },
                  "bodyText": "Sorry I don't have a good idea off the top of my head",
                  "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5875182",
                  "updatedAt": "2023-05-11T16:04:33Z",
                  "publishedAt": "2023-05-11T16:04:33Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "How is a grain defined in the code again? You keep track of the boundary with variables right?",
                          "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5875196",
                          "updatedAt": "2023-05-11T16:05:42Z",
                          "publishedAt": "2023-05-11T16:05:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "No each grain is represented with an order parameter, a number that is 1 inside a given grain and 0 outside, with a diffuse interface between 0 and 1 at interfaces. So in the absence of the GrainTracker, if we have 20 grains, we need 20 order parameters. The GrainTracker allows 1 order parameter to represent multiple grains to be represented by 1 OP by monitoring for overlaps and re-assigning grains if necessary. The GrainTracker does keep a unique ID for each grain so maybe this data could be mapped into the unique ID but I'm not sure if you can get the order parameter mapping directly from that.",
                          "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5875286",
                          "updatedAt": "2023-05-11T16:14:07Z",
                          "publishedAt": "2023-05-11T16:14:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "is this kept on a per-element basis?",
                          "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5875363",
                          "updatedAt": "2023-05-11T16:19:47Z",
                          "publishedAt": "2023-05-11T16:19:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "I think you can select whether the unique IDs are stored at nodes or elements but I should ask @permcody to confirm this",
                          "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5877845",
                          "updatedAt": "2023-05-11T20:55:49Z",
                          "publishedAt": "2023-05-11T20:55:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "PengWei97"
                          },
                          "bodyText": "I believe can simplify the problem further. Suppose we have a mesh file (.e/.vtk) that already stores GrainID or ElementBlockIds for each node/element. Can we use this file as the initial microstructure for grain growth simulations with GrainTracker, instead of using built-in methods such as VT algorithm to establish the initial microstructure? Additionally, I believe there may be some insights we can gain from using EBSD as an input file for the simulation.",
                          "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5880038",
                          "updatedAt": "2023-05-12T02:51:45Z",
                          "publishedAt": "2023-05-12T02:51:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "If you can load them into variables, can the FeatureFloodCount do that?\n@permcody on initializing grains from Exodus/EBSD",
                          "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5885064",
                          "updatedAt": "2023-05-12T13:22:41Z",
                          "publishedAt": "2023-05-12T13:22:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "permcody"
                          },
                          "bodyText": "We do have an ImageFunction object which is pretty close to what you need, but I don't think it's exactly what you'd need for a polycrystal simulation without a little additional development. I've wanted to create an image reader for starting polycrystal simulations for many years, but I just don't have the time. However, the PolycrystalUserObjectBase was designed with exactly this use case in mind:\nEssentially the user interface is to query each element in your domain and your job as the developer of a derived class is supply one or more active grains at that location. That's it! That object will do the proper assignment of those grains to order parameters and your simulation will run. The way I'd approach this task would be to investigate the capabilities of that ImageFunction object and see if you can get unique values for each color in your image, if you can, then you are pretty much done on creating an \"ImageFunctioPolycrystalIC\" class.\nDoes this make sense? Take a look and ask me questions!",
                          "url": "https://github.com/idaholab/moose/discussions/24328#discussioncomment-5886019",
                          "updatedAt": "2023-05-12T14:50:34Z",
                          "publishedAt": "2023-05-12T14:50:34Z",
                          "isAnswer": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Using Dirac Kernel to apply values from VectorPostprocessor in 2D",
          "author": {
            "login": "salaudeen-ya"
          },
          "bodyText": "Hello,\nI need to sample along a line/side set in 2D. The sampled values would be applied in another system as a Dirac force. I have been able to do this in 1D by simple transfer, PointValueSampler and using FunctionDiracSource to use the sampled values. How can I do this for a 2D?",
          "url": "https://github.com/idaholab/moose/discussions/24320",
          "updatedAt": "2023-05-11T17:07:36Z",
          "publishedAt": "2023-05-10T16:17:14Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThere's a linevalueSampler vector postprocessor (VPP) to get the values on the line\nThen there is https://mooseframework.inl.gov/source/dirackernels/ReporterPointSource.html\nVPP are Reporters in the backend, you just need to pass the  name_of_object slash name_of_vector to access the Reporter Name of a VPP\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24320#discussioncomment-5864504",
                  "updatedAt": "2023-05-10T18:36:34Z",
                  "publishedAt": "2023-05-10T18:36:33Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "salaudeen-ya"
                          },
                          "bodyText": "Thank you!\nAlthough I figure out that it might lag one iteration especially when the transfer is done using MultiApps",
                          "url": "https://github.com/idaholab/moose/discussions/24320#discussioncomment-5875907",
                          "updatedAt": "2023-05-11T17:08:26Z",
                          "publishedAt": "2023-05-11T17:07:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Fail to run run_tests in latest master (commitID = b3305e18e7adf62db58d8f0dc4b075772201a35c)",
          "author": {
            "login": "one-step-per-week"
          },
          "bodyText": "Error message:\nError! Could not find libmesh_config.h in any of the usual locations!\nI am using a docker with a clean ubuntu 22.04 image following this Conda-way installation: installation Steps. I could be able to run the run_tests yesterday, but 5 of them failed. Today I want to rerun the tests, but the above error occurred.",
          "url": "https://github.com/idaholab/moose/discussions/24323",
          "updatedAt": "2023-05-11T02:04:47Z",
          "publishedAt": "2023-05-10T21:10:56Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDid you remember to activate the conda environment?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24323#discussioncomment-5866900",
                  "updatedAt": "2023-05-10T23:30:54Z",
                  "publishedAt": "2023-05-10T23:30:53Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "one-step-per-week"
                          },
                          "bodyText": "Thanks for your reply. There is a \"(moose)\" prefix in front of my terminal prompt, I guess it is the correct conda environment you mentioned?",
                          "url": "https://github.com/idaholab/moose/discussions/24323#discussioncomment-5867608",
                          "updatedAt": "2023-05-11T01:50:30Z",
                          "publishedAt": "2023-05-11T01:50:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "one-step-per-week"
                          },
                          "bodyText": "@GiudGiud My bad... I just found that I didn't execute the \"make -j 6\"... what a silly mistake! Now it can run. Thank you for your time.",
                          "url": "https://github.com/idaholab/moose/discussions/24323#discussioncomment-5867683",
                          "updatedAt": "2023-05-11T02:04:46Z",
                          "publishedAt": "2023-05-11T02:04:46Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "[MultiApps] Setting second sub-application's variable ICs by 'initial_from_file_var' or 'SolutionUserObject' from 1st sub-application's latest results",
          "author": {
            "login": "Joseph-0123"
          },
          "bodyText": "Dear all,\nI use 'type = TimePeriod' setting of [Controls] blocks to allow different sub-applications in [MultiApps] blocks to run in time sequence.\nI want to set the second sub-application's variable ICs by 'initial_from_file_var' or 'SolutionUserObject' from 1st sub-application's latest results. But all the sub-applications set their variables' initialization at the beginning of the whole simulation and just get the initial results from corresponding exodus files.\nI tried the 'global_time_offset' and 'wait_for_first_app_init=true' but I could not get my expected results.\nCould you please help me with this?\nThanks a lot.\nJ",
          "url": "https://github.com/idaholab/moose/discussions/24324",
          "updatedAt": "2023-05-15T22:48:33Z",
          "publishedAt": "2023-05-10T21:36:31Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou can just chain the subapps using the execute_on flags.\nAn app executing on timestep_end of another app will execute after. This lets you stagger the solves and transfer from one app to another before.\nGlobal_time_offset can be used as well to execute a some time steps in one app before starting the other, but you have to turn on catch_up as well iirc to force the two applications to synchronize in time.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24324#discussioncomment-5866894",
                  "updatedAt": "2023-05-10T23:30:15Z",
                  "publishedAt": "2023-05-10T23:30:14Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PorousFlow: Fracture aperture evolution",
          "author": {
            "login": "batodon"
          },
          "bodyText": "Hello,\nThis problem might be a bit convoluted, but please bear with me. I\u2019m trying to re-implement the fracture aperture evolution (i.e., equations 6 and 8) of the following publication:  https://doi.org/10.1029/2020WR027213  into my model, but I\u2019m unsure of the routine:\n\n\nI found an input file online (see attached) which treats the aperture evolution as an aux variable. This aux variable then feeds the permeability. However, I have some doubts about this input file. Probably, it is deprecated.\nFirst, I\u2019m guessing it is possible to use an aux variable inside an auxKernel. Correct? It seems like that is what the input file is indicating. The get_aperture_old auxKernel uses an aperture aux variable as a function to compute the aperture_old aux variable. This aperture_old aux variable feeds the change_aperture AuxKernel, which computes the aperture (evolution) as an aux variable. Then this aperture aux variable contributes to the change_permeability auxKernel, which computes the permeability. There seems to be an exchange of the respective aux variables between change_aperture and get_aperture_old AuxKernels. I find it odd because aperture_old is a function of aperture; at the same time, aperture is a function of aperture_old. Perhaps the function used in the get_aperture_old auxKernel is an imported aperture field. I don\u2019t know. Can someone please guide me? I\u2019m unsure why they needed to convert the aperture (evolution) into an aux variable in the first place. I think they could implement it as a material. Then this material feeds the permeability. Any thoughts?\npc_0_N18S_gap000_apert764.txt",
          "url": "https://github.com/idaholab/moose/discussions/24322",
          "updatedAt": "2023-05-10T16:43:38Z",
          "publishedAt": "2023-05-10T16:42:16Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "info on failed solves",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "Is there any info available, or can any be saved, about failed solves during a run? I'm hoping for something systematic that doesn't involve grepping through stdout.",
          "url": "https://github.com/idaholab/moose/discussions/24318",
          "updatedAt": "2023-05-10T15:07:18Z",
          "publishedAt": "2023-05-10T12:56:04Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "There s the troubleshooting failed solve page.\nI m revamping rn it I ll post a link to the page in my PR",
                  "url": "https://github.com/idaholab/moose/discussions/24318#discussioncomment-5861420",
                  "updatedAt": "2023-05-10T14:08:31Z",
                  "publishedAt": "2023-05-10T14:08:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Current page\nhttps://mooseframework.inl.gov/releases/moose/v1.0.0/application_usage/failed_solves.html\nPR page isnt generated yet",
                          "url": "https://github.com/idaholab/moose/discussions/24318#discussioncomment-5861582",
                          "updatedAt": "2023-05-10T14:21:42Z",
                          "publishedAt": "2023-05-10T14:21:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "jessecarterMOOSE"
                  },
                  "bodyText": "So far cutting the time step on a failed solve has been sufficient for me\nto get to the end of the run. It's detecting if and when those cutbacks\noccurred that I'm interested in.",
                  "url": "https://github.com/idaholab/moose/discussions/24318#discussioncomment-5861693",
                  "updatedAt": "2023-05-10T14:31:39Z",
                  "publishedAt": "2023-05-10T14:31:39Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "oh my bad\nthere s this\nhttps://mooseframework.inl.gov/source/postprocessors/NumFailedTimeSteps.html",
                          "url": "https://github.com/idaholab/moose/discussions/24318#discussioncomment-5861710",
                          "updatedAt": "2023-05-10T14:33:23Z",
                          "publishedAt": "2023-05-10T14:33:22Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "this will give you 'if' and 'how often'. It wont give you 'when'. But with a ParsedPostpcoessor and a TimePostprocessor you could detect 'the first time when' or 'the last time when' or the 'number of times when' pretty easily",
                          "url": "https://github.com/idaholab/moose/discussions/24318#discussioncomment-5861718",
                          "updatedAt": "2023-05-10T17:54:10Z",
                          "publishedAt": "2023-05-10T14:34:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "That should do the trick. Thanks. Wasn't aware of that postprocessor (there are so many!).",
                          "url": "https://github.com/idaholab/moose/discussions/24318#discussioncomment-5862152",
                          "updatedAt": "2023-05-10T15:07:09Z",
                          "publishedAt": "2023-05-10T15:07:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Cannot update stateful material property with its old value:",
          "author": {
            "login": "steam-simulator"
          },
          "bodyText": "Hello,\nI\u2019m using the computeQpProperties virtual function to update my stateful material property but I keep getting a constant value. It seems my stateful material property is not changing. Please, help.\nmy h file:\nMaterialProperty<Real>& _b;\nconst MaterialProperty<Real>& _b_old;\n\nconst VariableValue& _sat;\n\nconst Real _rm;\n\nmy c file:\nInputParameters\nABC::validParams()\n{\n  InputParameters params = PorousFlowMaterial::validParams();\n  params.addRequiredCoupledVar(\"sat\", \"saturation\");\n  params.addParam<Real>(\"rm\", 0.277, \" coefficient\");\n  \n  return params;\n  }\n\nABC::ABC(const InputParameters & parameters)\n    : PorousFlowMaterial(parameters),\n  _b(_nodal_material\n                   ? declareProperty<Real>(\"initial_fracture_aperture_nodal\")\n                   : declareProperty<Real>(\"initial_fracture_aperture_qp\")),\n  _b_old(_nodal_material\n                   ? getMaterialPropertyOld<Real>(\"initial_fracture_aperture_nodal\")\n                   : getMaterialPropertyOld<Real>(\"initial_fracture_aperture_qp\")),\n  _sat (coupledValue(\"sat\")),\n  _rm(getParam<Real>(\"rm\")) \n  {\n  }\n\n\nvoid\nABC::initQpStatefulProperties()\n{\n _b[_qp] = 1.0;\n}\n\n\nvoid\nABC::computeQpProperties()\n{\n _b[_qp] = _b_old[_qp] - (_dt * _b_old[_qp] * _sat[_qp] *_rm); \n    _console << \"b = \" << _b[_qp]<< std::endl;\n}",
          "url": "https://github.com/idaholab/moose/discussions/24291",
          "updatedAt": "2023-05-09T14:58:48Z",
          "publishedAt": "2023-05-08T00:25:15Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhat do you get from this print? And from printing _b_old?\nMaybe you are at a fixed point?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5838695",
                  "updatedAt": "2023-05-08T14:05:13Z",
                  "publishedAt": "2023-05-08T14:05:12Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "steam-simulator"
                          },
                          "bodyText": "Hello @GiudGiud, I got 1 for both _b and _b_old (i.e., the initQpStatefulProperties value for _b ). Pls, any idea why I\u2019m getting only this initial value?",
                          "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5839848",
                          "updatedAt": "2023-05-08T15:59:43Z",
                          "publishedAt": "2023-05-08T15:59:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "how much is sat ?\nand _rm ?\nif either is 0, then 1 is expected:\nb = 1 - ... * 0",
                          "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5839873",
                          "updatedAt": "2023-05-08T16:02:28Z",
                          "publishedAt": "2023-05-08T16:02:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "steam-simulator"
                          },
                          "bodyText": "Hi, sat is 0.18 and rm = 0.277.",
                          "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5839965",
                          "updatedAt": "2023-05-08T16:13:54Z",
                          "publishedAt": "2023-05-08T16:11:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "any idea @jiangwen84",
                          "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5840234",
                          "updatedAt": "2023-05-08T16:34:37Z",
                          "publishedAt": "2023-05-08T16:34:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Is this a nodal material? I would not be all that surprised if the nodal material properties that porous flow has implemented do not work with our stateful material property infrastructure in the framework. @cpgr @WilkAndy can you guys comment on that?",
                          "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5840771",
                          "updatedAt": "2023-05-08T17:32:41Z",
                          "publishedAt": "2023-05-08T17:32:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "steam-simulator"
                          },
                          "bodyText": "Hi @GiudGiud @lindsayad.\n    _b[_qp] = _b_old[_qp] - (_dt * _b_old[_qp] * _sat[_qp] *_rm); \n    _console << \"b = \" << _b[_qp]<< std::endl;\n    _console << \"bOld = \" << _b_old[_qp]<< std::endl;\n    _console << \"Timestep = \" << _dt<< std::endl;\n\nIt works now. I found the source of the problem after I printed out _dt. My simulation does not converge. However, it cuts the size of _dt to 0.5, but the actual Time step is still 1; therefore, _b_old doesn\u2019t get updated even though _b changes.\nb = 0.95014\nbOld = 1\nTimestep = 1\nb = 0.95014\nbOld = 1\nTimestep = 1\nNonlinear solve did not converge due to DIVERGED_LINE_SEARCH iterations 2\n Solve Did NOT Converge!\n  Finished Solving                                                                       [  8.98 s] [    3 MB]\nAborting as solve did not converge\n\nSolve failed, cutting timestep.\n\nTime Step 1, time = 0.5, dt = 0.5\nb = 0.97507\nbOld = 1\nTimestep = 0.5\nb = 0.97507\nbOld = 1\nTimestep = 0.5",
                          "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5841317",
                          "updatedAt": "2023-05-08T18:33:15Z",
                          "publishedAt": "2023-05-08T18:33:15Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "cpgr"
                          },
                          "bodyText": "The nodal materials do work with the stateful property infrastructure and we use it extensively. It's just crazy enough to work!\nIt looks like it will work once your solution converges and the current b gets propagated to bOld.",
                          "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5842572",
                          "updatedAt": "2023-05-08T21:35:06Z",
                          "publishedAt": "2023-05-08T21:35:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Thanks for the info @cpgr !",
                          "url": "https://github.com/idaholab/moose/discussions/24291#discussioncomment-5850441",
                          "updatedAt": "2023-05-09T14:58:48Z",
                          "publishedAt": "2023-05-09T14:58:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}