{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMS0wNy0xOVQxMjozNjo0NS0wNTowMM4ANNzt"
    },
    "edges": [
      {
        "node": {
          "title": "[Peacock][Windows10]",
          "author": {
            "login": "coskrrb2002"
          },
          "bodyText": "Dear moose users,\nIs there any method to use peacock in windows 10?\nI used ubuntu as an app in windows 10 and used Paraview to analyze output files.\nBut, I found a bug in Paraview to analyze my data, so I want to use Peacock to analyze my data.\nIf it's not possible, then I will use a virtual machine or dual booting of windows and Linux...\nBest regards,\nNakkyu",
          "url": "https://github.com/idaholab/moose/discussions/18303",
          "updatedAt": "2022-07-10T14:53:14Z",
          "publishedAt": "2021-07-11T06:21:57Z",
          "category": {
            "name": "Q&A Tools"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nAs mentioned here, you will see some artefacts when using peacock on WSL with windows 10.\nhttps://mooseframework.inl.gov/getting_started/installation/windows10.html\nBut it should launch, using the X-server for visualization\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18303#discussioncomment-991736",
                  "updatedAt": "2022-07-10T14:53:14Z",
                  "publishedAt": "2021-07-12T03:01:34Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dongcongcong606"
                          },
                          "bodyText": "I \u2018ve met the same question too.",
                          "url": "https://github.com/idaholab/moose/discussions/18303#discussioncomment-1037750",
                          "updatedAt": "2022-07-10T14:53:52Z",
                          "publishedAt": "2021-07-22T13:31:09Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "peacock error",
          "author": {
            "login": "xchengood"
          },
          "bodyText": "Hi Moose expert and user,\nI try to execute the input file in peacock. The following error appears. I have no idea what happened. Before I succeeded in implementing the same file in peacock and everything is fine. But I failed when performing execution again.\n\nThank you for your help.",
          "url": "https://github.com/idaholab/moose/discussions/18362",
          "updatedAt": "2022-06-10T17:36:03Z",
          "publishedAt": "2021-07-16T19:26:49Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis looks like a missing python package error.\nLooks like you have activated the moose environment so that's good. Could you please try updating moose and its dependencies?\nSo conda update --all then git fetch upstream, git rebase upstream/devel OR git checkout upstream/devel depending on whether you are developing or just using.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18362#discussioncomment-1014724",
                  "updatedAt": "2022-06-10T17:36:10Z",
                  "publishedAt": "2021-07-16T19:58:56Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "@GiudGiud. Thanks. I try it according to your instruction. One message shows below when trying 'git fetch upstream'.\n\nAny advices? Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/18362#discussioncomment-1014817",
                          "updatedAt": "2022-06-10T17:39:17Z",
                          "publishedAt": "2021-07-16T20:35:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The remote is probably called origin not upstream on your machine",
                          "url": "https://github.com/idaholab/moose/discussions/18362#discussioncomment-1016703",
                          "updatedAt": "2022-06-10T17:39:17Z",
                          "publishedAt": "2021-07-17T18:13:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "@GiudGiud is correct, you are just missing a python package. Be sure your conda enviroment has \"moose-tools\" installed, it will give you all the packages needed for Peacock. Running conda list will show if it is there or not.",
                          "url": "https://github.com/idaholab/moose/discussions/18362#discussioncomment-1022548",
                          "updatedAt": "2022-06-10T17:39:18Z",
                          "publishedAt": "2021-07-19T15:28:40Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "The remote is probably called origin not upstream on your machine\n\n@GiudGiud Thanks. After updating conda, when I try 'git checkout origin/devel', the message below was got. Any advice? Thank you.",
                          "url": "https://github.com/idaholab/moose/discussions/18362#discussioncomment-1026896",
                          "updatedAt": "2022-06-10T17:39:41Z",
                          "publishedAt": "2021-07-20T15:14:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "@GiudGiud is correct, you are just missing a python package. Be sure your conda enviroment has \"moose-tools\" installed, it will give you all the packages needed for Peacock. Running conda list will show if it is there or not.\n\nHi @aeslaughter Thank you. I use 'conda list' to confirm there is the moose-tools. But peacock is still not working and shows same error.",
                          "url": "https://github.com/idaholab/moose/discussions/18362#discussioncomment-1026913",
                          "updatedAt": "2022-06-10T17:39:42Z",
                          "publishedAt": "2021-07-20T15:17:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Well updating moose might not be as critical.\nIf you want to do it anyway:\nIt looks like there are some merge conflicts. You ll have to either deal with those or just get rid of your changes (git stash) before checking out the latest moose\nThe ciritical thing here is that your moose-tools package is severely outdated.\nPlease follow the instructions in this post to delete and re-install the moose environment: #18378\npasted here:\nconda deactivate\nconda env remove -n moose\nconda install mamba\nmamba create -n moose moose-libmesh moose-tools\nconda activate moose",
                          "url": "https://github.com/idaholab/moose/discussions/18362#discussioncomment-1027154",
                          "updatedAt": "2022-06-10T17:39:55Z",
                          "publishedAt": "2021-07-20T16:14:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "xchengood"
                          },
                          "bodyText": "Well updating moose might not be as critical.\nIf you want to do it anyway:\nIt looks like there are some merge conflicts. You ll have to either deal with those or just get rid of your changes (git stash) before checking out the latest moose\nThe ciritical thing here is that your moose-tools package is severely outdated.\nPlease follow the instructions in this post to delete and re-install the moose environment: #18378\npasted here:\nconda deactivate\nconda env remove -n moose\nconda install mamba\nmamba create -n moose moose-libmesh moose-tools\nconda activate moose\n\n\n@GiudGiud Thank you. It works well now.",
                          "url": "https://github.com/idaholab/moose/discussions/18362#discussioncomment-1034488",
                          "updatedAt": "2022-06-10T17:40:06Z",
                          "publishedAt": "2021-07-21T19:09:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Cubit meshing a few elements manually / meshing a weird sector region",
          "author": {
            "login": "GiudGiud"
          },
          "bodyText": "Is there a way in Cubit to mesh a few elements manually?\nDo I need to specify just a single volume = 1 element and be careful that the volume shape corresponds to an element?\nIf I create a few elements manually, should I:\n\ndo this region first and the other volumes will pick up on the nodes I created\ndo this region last and use the nodes created by the other regions (how do I retrieve them then?)\n\nAlternatively, does anyone know a scheme that can mesh this, and connect with the hex mesh volumes nearby\nHere's a closeup on the volume (orange) I'm trying to mesh. It's an open source model.\n\nAdditional details on the mesh:\n\n2D surfaces revolved using the sweep (0 steps in angle) to create 3D volumes\n3D volumes meshed directly using the auto scheme\n\nThanks!\nGuillaume",
          "url": "https://github.com/idaholab/moose/discussions/18341",
          "updatedAt": "2022-10-06T06:11:09Z",
          "publishedAt": "2021-07-15T05:57:26Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GregVernon"
                  },
                  "bodyText": "In your picture, it looks like the orange volume is \"pyramidal\" in shape... would you be able to share the .cub file?  If it is, in fact pyramidal, Cubit doesn't have a built-in method for meshing it with hexes (though you could tetmesh it, then thex it into hexes...).  Meshing a pyramid is the great challenge in hex-meshing, look up \"Schneider's Pyramid\".\nOne option may be to build a mixed-mesh on that volume - essentially building a pyramid-tet mesh on the orange volume that interfaces with the hex elements on the neighboring volumes.  If your volumes are imprinted & merged, trying doing the following:\nvol {orange_volume_id} scheme tetmesh\nmesh volume {orange_volume_id} \n\nOne general comment regarding meshing, not necessarily specific to Cubit is that you should mesh the \"most constrained\" regions of your model first.  And then mesh the \"next most constrained\" (which are often the neighbors of the most-constrained regions) and so on.",
                  "url": "https://github.com/idaholab/moose/discussions/18341#discussioncomment-1025122",
                  "updatedAt": "2022-10-06T06:11:10Z",
                  "publishedAt": "2021-07-20T07:23:34Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\ncub file attached.\nI would be fine with a single tet/pyramid at the top of the pyramid and the rest being hexes.\nIs there an easy way to do that or should I just cut the top of the pyramid into one block?\nIs there a way to ask for a pyramid mesh cell?\nI ll try the test mesh -> hex route now\nfhr_core.zip\nThanks for the advice on the ordering of the mesh. I ll definitely do that once I can get a coarse-ish hex mesh for that volume.",
                          "url": "https://github.com/idaholab/moose/discussions/18341#discussioncomment-1027439",
                          "updatedAt": "2022-10-06T06:11:18Z",
                          "publishedAt": "2021-07-20T16:52:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "One issue with the tet mesh is that the elements are really small, and only get smaller with the THex operation. I tried to set a really large size for the initial mesh. Should I define intervals on the curves instead?\n    cubit.cmd('volume 8 size 20')\n    cubit.cmd('volume 8 scheme Tetmesh')\n    cubit.cmd('mesh volume 8')\n    cubit.cmd('THex volume 8')",
                          "url": "https://github.com/idaholab/moose/discussions/18341#discussioncomment-1027555",
                          "updatedAt": "2022-10-06T06:11:23Z",
                          "publishedAt": "2021-07-20T16:58:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GregVernon"
                          },
                          "bodyText": "See attached meshed geometry.\nfhr_core_meshed.zip\nHere are the cubit commands that I did:\nopen \"fhr_core.cub\"\n\n## All volumes, except for the challenge volume, are already meshed\n## The surfaces of the challenge volume that are shared with neighboring, meshed volumes, are also meshed (with quads)\n## We want to mesh the unmeshed surfaces of the challenge volume with triangles\nsurface 38 37 8  scheme trimesh geometry approximation angle 15 \nTrimesher surface gradation 1.3\nTrimesher geometry sizing on\nmesh surface 38 37 8 \n\n## Mesh the challenge region with the tetmesh scheme, resulting in a pyramid-to-tet mesh\nvolume 8  scheme tetmesh\nmesh volume 8 \n\nIn the below image: tet elements are green, pyramid are yellow, hexes are magenta\n\nAnd detail of the challenge volume:\n\n\nThe tetmesh scheme in Cubit is from the 3D Precise Mesh library licensed from Dassault, which they acquired from Distene (library was Distene MeshGems).  The tet meshing library that they provide will automatically produce a mixed tet-pyramid mesh if the input volume has even a single quad element within its bounding surfaces.\nMore information\nThe reason this was challenging is because you have a pyramid-like volume (grey).  In this below picture, you made a webcut (highlighted) that resulted in this volume's shape/topology:\n\nYou additionally assigned a block that only contained this exact volume.  This is likely intentional -- you may have a body-load or material assignment that needs to take up this exact region.  However, if you didn't mean to have this be a separate block, and it could be united with the blue volume below it, then you could generate a mesh more easily as the resulting body would be prism-like (and thus sweepable):\n\n\nNotice how we've effectively relaxed a constraint on the mesh, which makes it easier to hex-mesh.  This may not be a constraint you're able to relax, but it hopefully shows that sometimes \"less is more\".",
                          "url": "https://github.com/idaholab/moose/discussions/18341#discussioncomment-1028788",
                          "updatedAt": "2022-10-06T06:11:23Z",
                          "publishedAt": "2021-07-20T21:05:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Thanks for the detailed reply. I was trying to cut the volumes into smaller chunks to make it easier to mesh / narrow down the problem to a single region. We are actually able to relax that constraint.\nWe are good with this mesh now. Thanks a lot for helping out.",
                          "url": "https://github.com/idaholab/moose/discussions/18341#discussioncomment-1034186",
                          "updatedAt": "2022-10-06T06:12:03Z",
                          "publishedAt": "2021-07-21T17:55:10Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Error when running with exported mesh",
          "author": {
            "login": "rtaylo45"
          },
          "bodyText": "Hello,\nI seem to have an error when using a pre generated mesh when trying to apply boundary conditions to my problem. I created the mesh from SAM example ex01 and im trying to run my moose app using the same mesh. This is the output of my error.\nFileMeshGenerator 'sam_mesh':  Mesh Information:\nFileMeshGenerator 'sam_mesh':   elem_dimensions()={1}\nFileMeshGenerator 'sam_mesh':   spatial_dimension()=1\nFileMeshGenerator 'sam_mesh':   n_nodes()=101\nFileMeshGenerator 'sam_mesh':     n_local_nodes()=101\nFileMeshGenerator 'sam_mesh':   n_elem()=100\nFileMeshGenerator 'sam_mesh':     n_local_elem()=100\nFileMeshGenerator 'sam_mesh':     n_active_elem()=100\nFileMeshGenerator 'sam_mesh':   n_subdomains()=1\nFileMeshGenerator 'sam_mesh':   n_partitions()=1\nFileMeshGenerator 'sam_mesh':   n_processors()=1\nFileMeshGenerator 'sam_mesh':   n_threads()=1\nFileMeshGenerator 'sam_mesh':   processor_id()=0\nFileMeshGenerator 'sam_mesh':   is_prepared()=true\nFileMeshGenerator 'sam_mesh':   is_replicated()=true\nFileMeshGenerator 'sam_mesh':\nFileMeshGenerator 'sam_mesh':  Mesh Bounding Box:\nFileMeshGenerator 'sam_mesh':   Minimum: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':   Maximum: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':   Delta:   (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':\nFileMeshGenerator 'sam_mesh':  Mesh Element Type(s):\nFileMeshGenerator 'sam_mesh':   EDGE2\nFileMeshGenerator 'sam_mesh':\nFileMeshGenerator 'sam_mesh':  Mesh Nodesets:\nFileMeshGenerator 'sam_mesh':   Nodeset 0 (inlet), 1 nodes\nFileMeshGenerator 'sam_mesh':    Bounding box minimum: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box maximum: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box delta: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':   Nodeset 1 (outlet), 1 nodes\nFileMeshGenerator 'sam_mesh':    Bounding box minimum: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box maximum: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box delta: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':   Nodeset 2, 101 nodes\nFileMeshGenerator 'sam_mesh':    Bounding box minimum: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box maximum: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box delta: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':   Nodeset 32766, 2 nodes\nFileMeshGenerator 'sam_mesh':    Bounding box minimum: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box maximum: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box delta: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':\nFileMeshGenerator 'sam_mesh':  Mesh Sidesets:\nFileMeshGenerator 'sam_mesh':   Sideset 0 (inlet), 1 sides (NODEELEM), 1 elems (EDGE2), 1 nodes\nFileMeshGenerator 'sam_mesh':    Side volume: 1\nFileMeshGenerator 'sam_mesh':    Bounding box minimum: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box maximum: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box delta: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':   Sideset 1 (outlet), 1 sides (NODEELEM), 1 elems (EDGE2), 1 nodes\nFileMeshGenerator 'sam_mesh':    Side volume: 1\nFileMeshGenerator 'sam_mesh':    Bounding box minimum: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box maximum: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box delta: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':\nFileMeshGenerator 'sam_mesh':  Mesh Edgesets:\nFileMeshGenerator 'sam_mesh':   None\nFileMeshGenerator 'sam_mesh':\nFileMeshGenerator 'sam_mesh':  Mesh Subdomains:\nFileMeshGenerator 'sam_mesh':   Subdomain 0 (pipe1): 100 elems (EDGE2, 100 active), 101 active nodes\nFileMeshGenerator 'sam_mesh':    Volume: 1\nFileMeshGenerator 'sam_mesh':    Bounding box minimum: (x,y,z)=(       0,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box maximum: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':    Bounding box delta: (x,y,z)=(       1,        0,        0)\nFileMeshGenerator 'sam_mesh':   Global mesh volume = 1\n\n\n*** ERROR ***\n(BCs/c_liquid_inlet/boundary): the following node set ids do not exist on the mesh: 32767\n\nHere is my moose version\nFramework Information:\nMOOSE Version:           git commit 00fa7c0bbe on 2021-06-01\nLibMesh Version:\nPETSc Version:           3.15.1\nSLEPc Version:           3.15.1\n\nI think SAM does some internal meshing under the hood so im not sure if this would be related to that.",
          "url": "https://github.com/idaholab/moose/discussions/18399",
          "updatedAt": "2024-01-23T05:08:02Z",
          "publishedAt": "2021-07-21T02:11:16Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nWhat is the boundary specified for c_liquid_inlet?\nThe output log should tell us if it does exist.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18399#discussioncomment-1030345",
                  "updatedAt": "2024-01-23T05:08:03Z",
                  "publishedAt": "2021-07-21T05:20:21Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "travismui"
                          },
                          "bodyText": "@rtaylo45 To add onto this\u2013 if you are using the mesh generated from SAM ex01, were you attempting to set a BC at the inlet? The inlet/outlet sidesets may not actually be named for 1D fluid components, you can try using boundary = 0 for the inlet but I haven't tried this myself.",
                          "url": "https://github.com/idaholab/moose/discussions/18399#discussioncomment-1030361",
                          "updatedAt": "2024-01-23T05:08:03Z",
                          "publishedAt": "2021-07-21T05:23:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "rtaylo45"
                          },
                          "bodyText": "@travismui yes i am using ex01 to generate this mesh. Adding boundary = 0 for the inlet and boundary = 1 for the outlet fixed my problem.",
                          "url": "https://github.com/idaholab/moose/discussions/18399#discussioncomment-1032686",
                          "updatedAt": "2024-01-23T05:08:03Z",
                          "publishedAt": "2021-07-21T14:01:57Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to push to large_media",
          "author": {
            "login": "reverendbedford"
          },
          "bodyText": "I have some large media files that belong in the large_media submodule as part of PR #17475 .  It's a submodule so don't I have to first update the large_media repository and then update my ref to it in moose?  If so how can I submit changes to large_media?",
          "url": "https://github.com/idaholab/moose/discussions/18387",
          "updatedAt": "2022-09-30T01:44:56Z",
          "publishedAt": "2021-07-20T14:57:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Oh sorry I thought I replied to you in that PR but it turns out I never hit that \"comment\" button...\nAnyways, I think you should submit a PR to large_media. @aeslaughter or someone else with write access will merge it. Then you can update the large media commit in your moose PR.",
                  "url": "https://github.com/idaholab/moose/discussions/18387#discussioncomment-1027021",
                  "updatedAt": "2022-09-30T01:44:56Z",
                  "publishedAt": "2021-07-20T15:40:35Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "reverendbedford"
                          },
                          "bodyText": "Thanks.  I don't see any PRs on github against large_media but maybe I'm just the first person in awhile to not have direct write access that wants to add something.",
                          "url": "https://github.com/idaholab/moose/discussions/18387#discussioncomment-1027030",
                          "updatedAt": "2022-09-30T01:44:56Z",
                          "publishedAt": "2021-07-20T15:42:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "The repository is here: https://github.com/idaholab/large_media\nThere have been 16 closed PRs already.\nAt least I don't have write access to it either \ud83d\ude03",
                          "url": "https://github.com/idaholab/moose/discussions/18387#discussioncomment-1027038",
                          "updatedAt": "2022-09-30T01:44:56Z",
                          "publishedAt": "2021-07-20T15:44:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "reverendbedford"
                          },
                          "bodyText": "Fair enough, I opened the PR.",
                          "url": "https://github.com/idaholab/moose/discussions/18387#discussioncomment-1027044",
                          "updatedAt": "2022-09-30T01:45:13Z",
                          "publishedAt": "2021-07-20T15:45:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "*** ERROR *** Cannot allocate a NumericVector",
          "author": {
            "login": "ykvishal"
          },
          "bodyText": "I was trying to run a large 3D grain growth simulation  (3D_6000_gr.i)  and I am getting following error\n\n*** ERROR ***\nCannot allocate a NumericVector with 3224060050 degrees of freedom. The vector can only index up to 2147483647 entries.\n\n\n\nMPI_ABORT was invoked on rank 60 in communicator MPI_COMM_WORLD\nwith errorcode 1.\n\n\nNOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.\nYou may or may not see output from other processes, depending on\nexactly when Open MPI kills them.\n\nMy mesh block is shown here\n[Mesh]\n  [gmg]\n    type = DistributedRectilinearMeshGenerator\n    dim = 3\n    nx = 400\n    ny = 400\n    nz = 400\n    xmin = 0\n    xmax = 400\n    ymin = 0\n    ymax = 400\n    zmin = 0\n    zmax = 400\n    elem_type = HEX8\n  []\n   parallel_type = distributed\n[]\n\nI am using 50 order parameters and 20K grains. In the past #17422, I did not face this issue. (I was using different HPC for this case.)\nI tried following steps: 1) update Libmesh and MOOSE; 2) Install new MOOSE; and 3) Install new Moose with ./scripts/update_and_rebuild_petsc.sh option (our HPC has installed PETSc for us). I am getting same error.\nAny suggestions?\nThank you very much.\nKind regards\nVishal Yadav",
          "url": "https://github.com/idaholab/moose/discussions/18386",
          "updatedAt": "2021-07-25T20:55:53Z",
          "publishedAt": "2021-07-20T02:50:53Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThis should have worked..\nThis error should be linked to the petsc indexing scheme, and since you ran update_and_rebuild_petsc, this should have been using 64 bit indices.\nCould you please check that script, update_and_rebuild_petsc and see if the  --with-64-bit-indices is present in the ./configure call for petsc\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18386#discussioncomment-1024641",
                  "updatedAt": "2021-07-20T03:26:11Z",
                  "publishedAt": "2021-07-20T03:25:42Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ykvishal"
                          },
                          "bodyText": "Thank  you @GiudGiud !\nThis suggestion worked.  Now, I can start this simulation.",
                          "url": "https://github.com/idaholab/moose/discussions/18386#discussioncomment-1027025",
                          "updatedAt": "2021-07-20T15:40:55Z",
                          "publishedAt": "2021-07-20T15:40:55Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Segmentation Fault when running input file from terminal",
          "author": {
            "login": "richmondodufisan"
          },
          "bodyText": "Hi all,\nI'm getting the following segmentation fault error, I checked with gdb and this is what I got:\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff7ef9ff7 in xxxMaterial::validParams ()\nDoes it have to with my code, or is it something else? I can't seem to figure it out, as the fault is occurring before anything is even done (line 8). All my required material properties are initialized in the input file, so I don't have any idea what else could be causing this. I'm using Ubuntu 20.04 on Windows (WSL).",
          "url": "https://github.com/idaholab/moose/discussions/18385",
          "updatedAt": "2022-06-02T15:03:30Z",
          "publishedAt": "2021-07-20T00:46:44Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "hello\nIf you using gdb could you please provide us with the backtrace then?\nIf you could build in debug mode (METHOD=dbg make) first, that would help since it ll give the exact line of the set fault.\nAlternatively, you could run valgrind and it ll point out where the memory error happened\nBest\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18385#discussioncomment-1024327",
                  "updatedAt": "2022-06-02T15:03:39Z",
                  "publishedAt": "2021-07-20T01:00:24Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "richmondodufisan"
                          },
                          "bodyText": "Thanks, I was able to figure it out with the backtrace, I didn't know about that before. Also, a quick question: I'm automatically calculating the Jacobian instead of doing it manually, because it's a system of 4 coupled PDEs. It converged and it's pretty convenient, but I was wondering why I'm getting this output on the terminal\n\nI usually get \"neatly arranged\" tables while it's solving, but I guess it's fine since I still get a good result. This just threw me off at first.",
                          "url": "https://github.com/idaholab/moose/discussions/18385#discussioncomment-1024603",
                          "updatedAt": "2022-06-02T15:03:38Z",
                          "publishedAt": "2021-07-20T03:03:45Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "This looks like you have a print statement somewhere. Like in a kernel or a material property. And it s flooding the console output",
                          "url": "https://github.com/idaholab/moose/discussions/18385#discussioncomment-1024628",
                          "updatedAt": "2022-06-02T15:04:16Z",
                          "publishedAt": "2021-07-20T03:15:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Look for \"std::cout\", \"std::cerr\" lines",
                          "url": "https://github.com/idaholab/moose/discussions/18385#discussioncomment-1024670",
                          "updatedAt": "2022-06-02T15:04:16Z",
                          "publishedAt": "2021-07-20T03:42:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "I'd hazard a guess that it's your \"xxxMaterial\": look in the validParams() function.",
                  "url": "https://github.com/idaholab/moose/discussions/18385#discussioncomment-1024362",
                  "updatedAt": "2022-06-02T15:04:28Z",
                  "publishedAt": "2021-07-20T01:28:07Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to SetSide only on the outside of the domain",
          "author": {
            "login": "Traiwit"
          },
          "bodyText": "Hi all,\nJust wondering on how to How to SetSide only on the outside of the domain?\nThis is what I use\n  [add_side_sets]\n    type = SideSetsFromNormalsGenerator\n    input = mesh\n    normals = '0  0  1\n               0  1  0\n               1  0  0\n               0  0 -1\n               0 -1  0\n              -1  0  0'\n    fixed_normal = true\n    new_boundary = 'front top right back bottom left'\n    variance = 0.5\n    #\n  []\n\n\nI don't want the middle planes to be considered as a side, does anyone know how to fix this?\nThank you!\nKind regards,\nTraiwit",
          "url": "https://github.com/idaholab/moose/discussions/18376",
          "updatedAt": "2024-09-06T04:15:45Z",
          "publishedAt": "2021-07-19T13:37:00Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAre these inner sidesets perfectly horizontal? If not, you could tighten down the variance.\nIf so, I would use another sideset generator for the horizontal sides.\nLike a ParsedSideSetGenerator with z < eps or a SidesetAroundSubdomainGenerator , which will also accept a normal and should stick to external faces.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/18376#discussioncomment-1022086",
                  "updatedAt": "2024-09-13T19:09:00Z",
                  "publishedAt": "2021-07-19T14:13:19Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Traiwit"
                          },
                          "bodyText": "awesome, got it thanks @GiudGiud\na quick question, can the function take min/max value? for example 'z = max'",
                          "url": "https://github.com/idaholab/moose/discussions/18376#discussioncomment-1024629",
                          "updatedAt": "2024-09-13T19:09:01Z",
                          "publishedAt": "2021-07-20T03:16:35Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I would avoid an equal, because this could fail with numerical precision errors. But I think that would be parsed correctly",
                          "url": "https://github.com/idaholab/moose/discussions/18376#discussioncomment-1024634",
                          "updatedAt": "2024-09-13T19:09:01Z",
                          "publishedAt": "2021-07-20T03:19:44Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Lack of contact despite enforced glued contact",
          "author": {
            "login": "klaw13"
          },
          "bodyText": "Hello,\nI've been running into some problems with getting the following volumes to stay in contact with one another.\n\nI'm using the contact module and the glued model, but the volumes detached from one another during simulation when the four cylindrical components are pressurized.\nI then constrained the variables (disp_x, disp_y, and disp_z) on each side of each volume using the EqualValueBoundaryConstraint. In Paraview, it seems that the parts now stay together, but the simulation still generates the following message:\n*** Warning ***\nWarning in PenetrationLocator. Penetration is not detected for one or more secondary nodes. This could be because those secondary nodes simply do not project to faces on the primary surface. However, this could also be because contact should be enforced on those nodes, but the faces that they project to are outside the contact patch, which will give an erroneous result. Use appropriate options for 'patch_size' and 'patch_update_strategy' in the Mesh block to avoid this issue. Setting 'patch_update_strategy=iteration' is recommended because it completely avoids this potential issue. Also note that this warning is printed only once, so a similar situation could occur multiple times during the simulation but this warning is printed only at the first occurrence.\" \n\nDoes anyone have any suggestions as to how to resolve this?\nThanks!\nKelsey",
          "url": "https://github.com/idaholab/moose/discussions/17591",
          "updatedAt": "2022-06-02T07:05:40Z",
          "publishedAt": "2021-04-13T03:33:46Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@lindsayad @bwspenc on constraints / contact",
                  "url": "https://github.com/idaholab/moose/discussions/17591#discussioncomment-705541",
                  "updatedAt": "2022-06-02T07:05:59Z",
                  "publishedAt": "2021-05-06T17:24:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "bwspenc"
                          },
                          "bodyText": "My first thought is that the blocks might not actually be touching each other initially.",
                          "url": "https://github.com/idaholab/moose/discussions/17591#discussioncomment-987127",
                          "updatedAt": "2022-06-02T07:06:01Z",
                          "publishedAt": "2021-07-09T23:54:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "makeclean"
                          },
                          "bodyText": "Could you share your inputs?",
                          "url": "https://github.com/idaholab/moose/discussions/17591#discussioncomment-1002875",
                          "updatedAt": "2022-06-02T07:06:01Z",
                          "publishedAt": "2021-07-14T09:08:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Thanks for all your input! Seems our system was weakly constrained. We put in additional boundary conditions at the points of contact and were able to resolve the issue.",
                          "url": "https://github.com/idaholab/moose/discussions/17591#discussioncomment-1014824",
                          "updatedAt": "2022-06-02T07:06:01Z",
                          "publishedAt": "2021-07-16T20:37:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jbadger95"
                          },
                          "bodyText": "@klaw13 3D mortar constraints are coming soon, still putting the finishing touches on it and the contact kernels will need some tweaks but in case you're interested #18203.",
                          "url": "https://github.com/idaholab/moose/discussions/17591#discussioncomment-1020011",
                          "updatedAt": "2022-06-02T07:06:07Z",
                          "publishedAt": "2021-07-19T05:38:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "klaw13"
                          },
                          "bodyText": "Good to know, thanks @jbadger95!",
                          "url": "https://github.com/idaholab/moose/discussions/17591#discussioncomment-1024091",
                          "updatedAt": "2022-06-02T07:06:07Z",
                          "publishedAt": "2021-07-19T22:57:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "RVE periodic boundary condition",
          "author": {
            "login": "ada-ayy"
          },
          "bodyText": "Dear MOOSE\uff0c\nI have a problem with the RVE periodic boundary condition: U^2-U^1=f(t), where the enforced displacement f(t) is applied on the opposite boundaries U^2 and U^1.\nI learn from #16419, then copy and modify the codes from EqualValueBoundaryConstraint and https://github.com/crswong888/scorpion/blob/master/src/constraints/EqualValuePlusConstant.C\nThis is my code:\nFunctionValueBoundaryConstraint-C.txt\nFunctionValueBoundaryConstraint-h.txt\nHowever, I don't know exactly how to test the validity of the codes. But I find it always works like DirichletBC, as the nodes of U^1(U^2) always keep the same value. So are there any problems with my codes? Or other methods to achieve this boundary condition?",
          "url": "https://github.com/idaholab/moose/discussions/18367",
          "updatedAt": "2022-10-03T02:28:35Z",
          "publishedAt": "2021-07-17T02:10:24Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Well, if the values are equal, then it's clearly not working...\nAlso, did you see @SudiptaBiswas 's reply in your original post? #16419 (comment)",
                  "url": "https://github.com/idaholab/moose/discussions/18367#discussioncomment-1015924",
                  "updatedAt": "2022-10-03T02:29:01Z",
                  "publishedAt": "2021-07-17T11:20:11Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ada-ayy"
                          },
                          "bodyText": "Really thank you for your reply! But I am unfamiliar with the global strain system, and so I am still confused that how should I apply an increased strain on the whole model rather than the constant stress?\nThanks again!",
                          "url": "https://github.com/idaholab/moose/discussions/18367#discussioncomment-1018562",
                          "updatedAt": "2022-10-03T02:29:01Z",
                          "publishedAt": "2021-07-18T13:43:42Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jbadger95"
                          },
                          "bodyText": "I saw on your original post you were asking about using Lagrange multipliers to accomplish this. In case you're still interested, the answer is yes in 2D (although you'd need to modify the residual like suggested before) and almost in 3D. I have a PR up right now #18203, I'm still putting the finishing touches on it but the code (in theory) is fully functional.\nIf you modify the EqualValueConstraint (see test/tests/mortar/solution-continuity/ for an example use of this constraint) and set periodic = true, it might work. For how to modify the residual, the continuity constraint is actually enforced when the LM variable acts as a test function. So if you think of the 2x2 block structure for the system, the constraint is enforced in the lower-left block and you'd essentially be adding a non-zero forcing term on the LM variable (so where you have (secondary - primary)*test you'd instead have (secondary - primary - your_value)*test ).\nFrom a math perspective this gives me pause though, the solution will essentially be discontinuous and using a trace (the Lagrange multiplier) assumes you have enough regularity for it to be well-defined. Good luck!",
                          "url": "https://github.com/idaholab/moose/discussions/18367#discussioncomment-1019988",
                          "updatedAt": "2022-10-03T02:29:01Z",
                          "publishedAt": "2021-07-19T05:26:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "SudiptaBiswas"
                          },
                          "bodyText": "@ada-ayy The global-strain system might just work for you. There are some examples here, https://github.com/idaholab/moose/tree/next/modules/combined/examples/periodic_strain on how to set this up. You can find several applications of how to utilize the system here, https://www.sciencedirect.com/science/article/pii/S0168874X20301165.",
                          "url": "https://github.com/idaholab/moose/discussions/18367#discussioncomment-1023157",
                          "updatedAt": "2022-10-03T02:29:02Z",
                          "publishedAt": "2021-07-19T17:36:45Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}