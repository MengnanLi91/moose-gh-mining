{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wOS0yNVQxNTowODo0MC0wNTowMM4AVoW7"
    },
    "edges": [
      {
        "node": {
          "title": "Contact Distance Parameter",
          "author": {
            "login": "vtnick"
          },
          "bodyText": "I am working a problem with thermal expansion between two bodies with a small initial gap (1E-4). Based on hand calculations and other FE solvers the two bodies will not come into contact but have a very small gap (1E-5), but with the MOOSE simulation the bodies do in fact come in to contact and at a lower heat input. Is there a parameter I am missing in the contact action block that controls the nodal distance when checking for contact?",
          "url": "https://github.com/idaholab/moose/discussions/25526",
          "updatedAt": "2023-09-26T19:47:30Z",
          "publishedAt": "2023-09-20T14:10:41Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIs your result in MOOSE converged?\nIn terms of:\n\nmesh density\ntime grid size\nnonlinear residuals\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7059230",
                  "updatedAt": "2023-09-20T14:12:56Z",
                  "publishedAt": "2023-09-20T14:12:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "looks like you can play with detection of contact pairs to prevent contact from being detected with automatic_pairing_distance\nhttps://mooseframework.inl.gov/syntax/Contact/index.html",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7059281",
                          "updatedAt": "2023-09-20T14:16:02Z",
                          "publishedAt": "2023-09-20T14:16:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vtnick"
                          },
                          "bodyText": "I am able to get a converged solution in MOOSE.\nFrom the link you provided, my understanding is that is for automatic pairing correct? I would need to not use the primary and secondary keys but instead provide the surfaces in the auto pairing and let MOOSE figure it out that way?",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7059366",
                          "updatedAt": "2023-09-20T14:22:44Z",
                          "publishedAt": "2023-09-20T14:22:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "I think so\n@recuero will know on setting contact parameters",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7059388",
                          "updatedAt": "2023-09-20T14:24:47Z",
                          "publishedAt": "2023-09-20T14:24:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "recuero"
                  },
                  "bodyText": "Is there a parameter I am missing in the contact action block that controls the nodal distance when checking for contact?\n\nIf the bodies come into contact, and you expect them not to be, I wouldn't look into contact or contact parameters. My suggestion: Remove contact and analyze your setup and model parameters so that they match the expected thermal expansion behavior.",
                  "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7060266",
                  "updatedAt": "2023-09-20T15:43:29Z",
                  "publishedAt": "2023-09-20T15:43:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "vtnick"
                          },
                          "bodyText": "I can give that another try on the higher heat input case. My initial thought on looking at the contact parameters is because with a lower heat input case (the rest of the input file remaining the same), the thermal expansion lines up with hand calcs.  In that version of the problem the expected gap is still on the E-4 range so my initial thought was that at E-5 I was running up a tolerance somewhere.\nI will rerun both cases without contact.",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7060610",
                          "updatedAt": "2023-09-20T16:16:47Z",
                          "publishedAt": "2023-09-20T16:16:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "at E-5 I was running up a tolerance somewhere\n\nThere is no default parameter or behavior that would cause that. That could maybe happen if you are using contact constraints and your tolerances are very loose, but it's rare, that's why I'd double check the results without contact. Also, if you output the mesh on a visualization software, you should be able to see if there is contact.",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7060695",
                          "updatedAt": "2023-09-20T16:24:00Z",
                          "publishedAt": "2023-09-20T16:24:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vtnick"
                          },
                          "bodyText": "I am still running the cases without contact. The lower heat input case can solve quickly, but the higher heat input seems to be having issues finishing the solve requiring me to ramp up the BC. I am able to get to about 80% of the final heat input before the simulation slows down and requires really small timesteps to continue through. From the output so far, it appears that the expansion and temperatures are lining up well with my hand calcs.",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7071119",
                          "updatedAt": "2023-09-21T14:15:39Z",
                          "publishedAt": "2023-09-21T14:15:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "If I understand well, when you run this simulation you last mentioned the bodies do not come into contact. But in the statement of the problem at the top you mention they do come into contact: Do you have an image that shows this?",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7071831",
                          "updatedAt": "2023-09-21T15:22:24Z",
                          "publishedAt": "2023-09-21T15:22:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vtnick"
                          },
                          "bodyText": "I have a lower heat input that does not come into contact and a higher that still shouldn't come into contact. This is based on hand calcs and running in Ansys. For my higher heat input the bodies do come into contact.\nI have attached 3 images. The simulation at the beginning, the end and the contact pressure plot. All for the higher heat input case. I am also using a postprocessor to output the displacements on the OD of the inner cylinder and the ID of the outer cylinder. These relative displacements also show the gap is closed.",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7072204",
                          "updatedAt": "2023-09-21T15:51:02Z",
                          "publishedAt": "2023-09-21T15:51:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "You have negative contact pressure?",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7072442",
                          "updatedAt": "2023-09-21T16:14:47Z",
                          "publishedAt": "2023-09-21T16:14:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vtnick"
                          },
                          "bodyText": "Yes, that also does not make much sense to me. But since they weren't supposed to be in contact anyway, I figured I would start with that problem first. Unless you think they are related?",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7072699",
                          "updatedAt": "2023-09-21T16:42:06Z",
                          "publishedAt": "2023-09-21T16:42:05Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "recuero"
                          },
                          "bodyText": "Contact doesn't \"attract\" surfaces, so I am still confused as to why you might be getting contact (zero gap) only when you include the contact action. It seems that your simulation without contact didn't finish; I'd first make sure that, with that single change, i.e. removing the contact action, you don't get the zero gap result.\nYou can attach your input file and I can take a quick look.",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7072899",
                          "updatedAt": "2023-09-21T17:04:57Z",
                          "publishedAt": "2023-09-21T17:04:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vtnick"
                          },
                          "bodyText": "Yeah, I will let you know when the non-contact run finishes.\nI have attached the input file associated with the images previously. The only change other than the contact vs non-contact between what is running now and this is that I am building the mesh within moose right now so I can more easily play with the mesh density rather than going back and forth with cubit.\nclosed_gap_contact_hex20.zip",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7073361",
                          "updatedAt": "2023-09-21T18:03:24Z",
                          "publishedAt": "2023-09-21T18:03:23Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "vtnick"
                          },
                          "bodyText": "It does not appear that the thermal expansion case is going to finish....or at least in a reasonable amount of time. It went to about 85% of the required input before slashing the time steps/ramping on the heat input. At about 4 hours now and its sitting at 91% and taking E-8 time steps. The lower heat (an order of magnitude less) was less than 5 minutes.\nAs of right now in the simulation based on the displacement values, the bodies are not in contact which is an improvement since I believe when I ran the contact solution they were already in contact at this point.\nI have tried running a thermal only solution at the expected final gap number and it seems to line up well with hand calcs as well. So is there something wrong with my expansion inputs? I would imagine if they were really wrong the other solution wouldn't work at all, but maybe I need to adjust something due to the amount of expansion?",
                          "url": "https://github.com/idaholab/moose/discussions/25526#discussioncomment-7074459",
                          "updatedAt": "2023-09-21T20:14:36Z",
                          "publishedAt": "2023-09-21T20:14:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "2D Axisymmetric PorousFlow",
          "author": {
            "login": "nlosacco"
          },
          "bodyText": "Hi all,\nwhile learning to use MOOSE for our coupled hydro-mechanical problems, I am trying to replicate PorousFlow tutorial 10:\nhttps://mooseframework.inl.gov/modules/porous_flow/tutorial_10.html\nas a 2D axisymmetric problem. Hence I am modelling only a vertical section of the original 3D geometry and using\n[Problem]\n  coord_type = RZ\n[]\n\nAll residuals are zero during the analysis and all variables are constantly zero when the output file is open in Paraview.\nAm I missing something?\nHere's the code:\n# Unsaturated Darcy-Richards flow without using an Action\n[Mesh]\n  [rectangle]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmax = 9.\n    ymax = 6.\n    nx = 90\n    ny = 60\n  []\n  [aquifer]\n    type = SubdomainBoundingBoxGenerator\n    block_id = 1\n    bottom_left = '0. 0. 0.'\n    top_right = '9. 2. 0.'\n    input = rectangle\n  []\n  [injection_area]\n    type = ParsedGenerateSideset\n    combinatorial_geometry = 'x<0.01'\n    included_subdomain_ids = 1\n    new_sideset_name = 'injection_area'\n    input = 'aquifer'\n  []\n  [rename]\n    type = RenameBlockGenerator\n    old_block = '0 1'\n    new_block = 'caps aquifer'\n    input = 'injection_area'\n  []\n[]\n\n[Problem]\n  coord_type = RZ\n[]\n \n[UserObjects]\n  [dictator]\n    type = PorousFlowDictator\n    porous_flow_vars = pp\n    number_fluid_phases = 1\n    number_fluid_components = 1\n  []\n  [pc]\n    type = PorousFlowCapillaryPressureVG\n    alpha = 1E-6\n    m = 0.6\n  []\n[]\n\n[GlobalParams]\n  PorousFlowDictator = dictator\n[]\n\n[Variables]\n  [pp]\n  []\n[]\n\n[Kernels]\n  [time_derivative]\n    type = PorousFlowMassTimeDerivative\n    variable = pp\n  []\n  [flux]\n    type = PorousFlowAdvectiveFlux\n    variable = pp\n    gravity = '0 0 0'\n  []\n[]\n\n[AuxVariables]\n  [sat]\n    family = MONOMIAL\n    order = CONSTANT\n  []\n[]\n\n[AuxKernels]\n  [saturation]\n    type = PorousFlowPropertyAux\n    variable = sat\n    property = saturation\n  []\n[]\n\n\n[BCs]\n  [production]\n    type = PorousFlowSink\n    variable = pp\n    fluid_phase = 0\n    flux_function = 1E-2\n    use_relperm = true\n    boundary = injection_area\n  []\n[]\n\n[FluidProperties]\n  [the_simple_fluid]\n    type = SimpleFluidProperties\n    bulk_modulus = 2E9\n    viscosity = 1.0E-3\n    density0 = 1000.0\n  []\n[]\n\n[Materials]\n  [porosity]\n    type = PorousFlowPorosity\n    porosity_zero = 0.1\n  []\n  [permeability_aquifer]\n    type = PorousFlowPermeabilityConst\n    block = aquifer\n    permeability = '1E-14 0 0   0 1E-14 0   0 0 1E-14'\n  []\n  [permeability_caps]\n    type = PorousFlowPermeabilityConst\n    block = caps\n    permeability = '1E-15 0 0   0 1E-15 0   0 0 1E-16'\n  []\n  [saturation_calculator]\n    type = PorousFlow1PhaseP\n    porepressure = pp\n    capillary_pressure = pc\n  []\n  [temperature]\n    type = PorousFlowTemperature\n    temperature = 293\n  []\n  [massfrac]\n    type = PorousFlowMassFraction\n  []\n  [simple_fluid]\n    type = PorousFlowSingleComponentFluid\n    fp = the_simple_fluid\n    phase = 0\n  []\n  [relperm]\n    type = PorousFlowRelativePermeabilityCorey\n    n = 3\n    s_res = 0.1\n    sum_s_res = 0.1\n    phase = 0\n  []\n[]\n\n[Preconditioning]\n  active = basic\n  [basic]\n    type = SMP\n    full = true\n    petsc_options = '-ksp_diagonal_scale -ksp_diagonal_scale_fix'\n    petsc_options_iname = '-pc_type -sub_pc_type -sub_pc_factor_shift_type -pc_asm_overlap'\n    petsc_options_value = ' asm      lu           NONZERO                   2'\n  []\n  [preferred_but_might_not_be_installed]\n    type = SMP\n    full = true\n    petsc_options_iname = '-pc_type -pc_factor_mat_solver_package'\n    petsc_options_value = ' lu       mumps'\n  []\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = Newton\n  end_time = 1E6\n  dt = 1E5\n  nl_abs_tol = 1E-7\n[]\n\n[Outputs]\n  exodus = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/25589",
          "updatedAt": "2023-09-26T18:34:07Z",
          "publishedAt": "2023-09-26T17:00:02Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "nlosacco"
                  },
                  "bodyText": "my fault, xmin=0. was the problem",
                  "url": "https://github.com/idaholab/moose/discussions/25589#discussioncomment-7115754",
                  "updatedAt": "2023-09-26T18:14:53Z",
                  "publishedAt": "2023-09-26T18:14:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Using BFGS Solver",
          "author": {
            "login": "prajwalka"
          },
          "bodyText": "Is there a way of using BFGS solver instead of the Newton solver for the nonlinear iterations?",
          "url": "https://github.com/idaholab/moose/discussions/24798",
          "updatedAt": "2023-09-26T17:24:33Z",
          "publishedAt": "2023-06-23T06:55:38Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "Yes petsc has several quasi newton nonlinear solvers. BFGS is one of them.",
                  "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-6261914",
                  "updatedAt": "2023-06-23T12:44:57Z",
                  "publishedAt": "2023-06-23T12:44:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "You can use it by simply adding the petsc option -snes_type qn",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-6264324",
                          "updatedAt": "2023-06-23T16:56:55Z",
                          "publishedAt": "2023-06-23T16:56:54Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "prajwalka"
                          },
                          "bodyText": "Thank you very much!",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-6267139",
                          "updatedAt": "2023-06-24T02:18:49Z",
                          "publishedAt": "2023-06-24T02:18:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tqcthai"
                          },
                          "bodyText": "Hello,\nOne more question. If I use the -snes_type_qn, should I specify the preconditioner -pc_type?\nIf I don't specify the -pc_type, it takes nearly 20 iterations for a linear problem, this is nonsense. But using -snes_type_qn, I don't see any difference in the convergent behavior between\npetsc_options_iname = '-pc_type  -snes_type_qn'\npetsc_options_value = 'lu               lbfgs'\nand\n#petsc_options_iname = '-pc_type -pc_hypre_type'\n#petsc_options_value = 'lu       boomeramg'",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-7048793",
                          "updatedAt": "2023-09-19T16:58:09Z",
                          "publishedAt": "2023-09-19T16:58:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes there is a difference between the nonlinear solve method (newton, bfgs, PJFNK etc) and the linear solve method (which we partially specify using pc_type, but it s not always that clear especially for Krylov subspace methods). When you specify LU as the preconditioning, the linear solve is short (one step to solve) as the preconditioner inverses the system already. This preconditioner is expensive though. I ll refer you to the PETSc docs for LU as there are some subtletites\n#petsc_options_iname = '-pc_type -pc_hypre_type'\n#petsc_options_value = 'lu boomeramg'\n\nthese arent valid. LU is not part of hypre\nmaybe this?\npetsc_options_iname = '-pc_type -pc_hypre_type'\npetsc_options_value = 'hypre boomeramg'",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-7048842",
                          "updatedAt": "2023-09-19T17:11:00Z",
                          "publishedAt": "2023-09-19T17:03:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tqcthai"
                          },
                          "bodyText": "@GiudGiud thank you. However here I want to study to make a comparison in the convergent behavior between Newton and BFGS.\nFor the fully Newton iteration, it should be as you mentioned\npetsc_options_iname = '-pc_type -pc_hypre_type'\npetsc_options_value = 'hypre boomeramg'\nHowever, for quasi-Newton, should specify like this?\npetsc_options_iname = '-pc_type   -snes_type_qn'\npetsc_options_value =  'hypre         lbfgs'",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-7048928",
                          "updatedAt": "2023-09-19T17:11:43Z",
                          "publishedAt": "2023-09-19T17:11:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "try this\npetsc_options_iname = '-pc_type -pc_hypre_type -snes_type -snes_qn_type'\npetsc_options_value = 'hypre         boomeramg        qn               lbfgs'\n\nyou really need to check on the PETSc manual to explore these options. They are not standard in MOOSE\nhttps://petsc4py.readthedocs.io/en/stable/manual/snes/#tab-qndefaults",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-7049028",
                          "updatedAt": "2023-09-19T17:20:33Z",
                          "publishedAt": "2023-09-19T17:20:32Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "tqcthai"
                          },
                          "bodyText": "thank you @GiudGiud, I found out it works for this setup\n  petsc_options_iname = '-pc_type   -pc_hypre_type     -snes_type        -snes_qn_type   -snes_qn_scale_type' petsc_options_value = 'lu         boomeramg           qn               lbfgs           jacobian'\nOne more thing, do you know how to jump/switch between different solver in Moose Executioner? For instance, using quasi Newton firstly, once the convergence is having a problem switch it into fully Newton.",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-7115118",
                          "updatedAt": "2023-09-26T16:57:13Z",
                          "publishedAt": "2023-09-26T16:57:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nWe will be able to support that once the Executor system is fully deployed\nFor now you ll have to use Restarting https://mooseframework.inl.gov/application_usage/restart_recover.html",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-7115131",
                          "updatedAt": "2023-09-26T16:58:57Z",
                          "publishedAt": "2023-09-26T16:58:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lindsayad"
                          },
                          "bodyText": "Note that -pc_hypre_type boomeramg is not used for -pc_type lu",
                          "url": "https://github.com/idaholab/moose/discussions/24798#discussioncomment-7115338",
                          "updatedAt": "2023-09-26T17:24:34Z",
                          "publishedAt": "2023-09-26T17:24:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Order parameters output method",
          "author": {
            "login": "Wolke926"
          },
          "bodyText": "Dear MOOSE users,\nAre there any methods we can use for order parameters' value output in a 2D simulation\uff1f If I just open the Paraview output file, these different values are only identified in colors, although we have a scale bar, I am still wondering if there are more straightforward ways.",
          "url": "https://github.com/idaholab/moose/discussions/25586",
          "updatedAt": "2023-09-26T17:24:28Z",
          "publishedAt": "2023-09-26T15:30:59Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Could you clarify what you want the output to look like? Are we talking about visualizing a grain structure? Or do you simply want to map the output space? You could use a ParsedAux kernel to compute new values from a combination of order parameter values, using any expression you'd like.",
                  "url": "https://github.com/idaholab/moose/discussions/25586#discussioncomment-7115336",
                  "updatedAt": "2023-09-26T17:24:29Z",
                  "publishedAt": "2023-09-26T17:24:28Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "PETSc Updated to the 3.19 series",
          "author": {
            "login": "cticenhour"
          },
          "bodyText": "The moose-petsc package was recently updated alongside the repository submodule to 3.19.3 -\nspecifically, a pre-release version (3.19.3-884-g08c1f94318e). As a result of this change, moose-mpich\nrequired a new pinned dependency, GNU bison version 3.4. Subsequently, all conda packages have been\nincremented and should be updated.\nTo update your MOOSE packages, please activate your MOOSE conda environment and\nperform the command:\nmamba update moose-dev\n\nThe following package versions and builds outlined in the update prompt should be\nat least the following:\nPackage                  Version                     Build\n============================================================\nmoose-dev                2023.09.15                  build_0\nmoose-libmesh            2023.09.06                  build_2\nmoose-libmesh-vtk        9.2.6                       build_4\nmoose-petsc              3.19.3.884.g08c1f94318e     build_0\nmoose-mpich              4.0.2                       build_11\nmoose-peacock            2023.09.15                  build_0",
          "url": "https://github.com/idaholab/moose/discussions/25588",
          "updatedAt": "2023-09-26T16:47:24Z",
          "publishedAt": "2023-09-26T16:13:54Z",
          "category": {
            "name": "News"
          },
          "comments": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "The viscoplatic model implemented in MOOSE",
          "author": {
            "login": "lixinjie-1996"
          },
          "bodyText": "Does anyone know which model exactly is implemented in the material class FiniteStrainHyperElasticViscoPlastic? Is there any documentation referred to?",
          "url": "https://github.com/idaholab/moose/discussions/25554",
          "updatedAt": "2023-09-26T16:15:03Z",
          "publishedAt": "2023-09-22T14:47:29Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nso the object duocumentation is not great\nhttps://mooseframework.inl.gov/source/materials/FiniteStrainHyperElasticViscoPlastic.html\nbut there's doxygen documentation\nhttps://mooseframework.inl.gov/docs/doxygen/modules/classFiniteStrainHyperElasticViscoPlastic.html\nand this page has more details too\nhttps://mooseframework.inl.gov/modules/tensor_mechanics/Stresses.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25554#discussioncomment-7085538",
                  "updatedAt": "2023-09-22T20:34:06Z",
                  "publishedAt": "2023-09-22T20:34:05Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "lixinjie-1996"
                          },
                          "bodyText": "Thank you so much for your reply. it helps!",
                          "url": "https://github.com/idaholab/moose/discussions/25554#discussioncomment-7085574",
                          "updatedAt": "2023-09-22T20:40:52Z",
                          "publishedAt": "2023-09-22T20:40:51Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "lixinjie-1996"
                          },
                          "bodyText": "But is there any bibliography that explains more about the constitutive models? In all three documentation, there is no specific definition of 'flow rate'. After reading the documentation I still don't really understand how to adapt this model to my material. Could you please provide more references?",
                          "url": "https://github.com/idaholab/moose/discussions/25554#discussioncomment-7114746",
                          "updatedAt": "2023-09-26T16:15:03Z",
                          "publishedAt": "2023-09-26T16:15:03Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Single phase flow input template",
          "author": {
            "login": "asm-fakhrul"
          },
          "bodyText": "The problem in question can be found in the following directory on MOOSE website: modules > thermal_hydraulics > tutorials > single_phase_flow\nurl: https://mooseframework.inl.gov/modules/thermal_hydraulics/tutorials/single_phase_flow/problem_description.html#introduction\nWhy is the water coolant on the secondary side not cooling down the helium coolant in the primary loop? Although the hx/wall seems physically not connected to hx/pri and hx/sec when viewed on Paraview, the hx/pri and hx/sec are thermally connected through the hx/wall according to the input file.\nI have played around with the mass flow rate in both loops but could not get the primary coolant to cool down. The hx_sec_T_in and hx_sex_T_out are always in thermal equilibrium with the primary loop at the end of the simulation.\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/25262",
          "updatedAt": "2023-09-26T16:02:31Z",
          "publishedAt": "2023-08-21T23:18:42Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "lindsayad"
                  },
                  "bodyText": "@joshuahansel",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6786972",
                  "updatedAt": "2023-08-22T02:33:41Z",
                  "publishedAt": "2023-08-22T02:33:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Why is the water coolant on the secondary side not cooling down the helium coolant in the primary loop? Although the hx/wall seems physically not connected to hx/pri and hx/sec when viewed on Paraview, the hx/pri and hx/sec are thermally connected through the hx/wall according to the input file.\n\nIn THM you can have components connect even though they are not close in the Mesh.\nThis can be done for various reasons, to make outputs cleaner and more spaced out in Paraview for example, or simply to connect models that were developed independently at different locations in space.\nThis simulation marches to steady state. So we do expect to be at thermal equilibrium at the end.\nBut what you're seeing does not seem right to me. We'll take a look at those inputs",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6792070",
                  "updatedAt": "2023-08-22T13:41:12Z",
                  "publishedAt": "2023-08-22T13:41:11Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "joshuahansel"
                  },
                  "bodyText": "Why do you say that the primary coolant isn't cooling down? I ran step 5 of the tutorial, and I see it cool down:\n\nWhat quantity are you looking at? I plotted \"T\".",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6793806",
                  "updatedAt": "2023-08-22T16:20:15Z",
                  "publishedAt": "2023-08-22T16:20:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "Color range is roughly 610 K to 800 K.",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6793817",
                          "updatedAt": "2023-08-22T16:21:36Z",
                          "publishedAt": "2023-08-22T16:21:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "asm-fakhrul"
                  },
                  "bodyText": "@joshuahansel, please see the attached images.\nI am referring to step 6 and 7 of the tutorial that include the HX. Please see the attached results. In the second case, I have doubled the power, the length of the HX and the mass flow rate. The core is getting hotter and hotter with the HX inlet and outlet temp being stuck at around 400.\nCase 1: step 6 template\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nCase 2: step 6 template input values changed",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6795999",
                  "updatedAt": "2023-08-22T21:12:40Z",
                  "publishedAt": "2023-08-22T21:10:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "seems to be the opposite here.\nFigure 1 shows HX secondary temperatures in the 4000s and Figure 2 in the 400 range.\nAnyhow could you please paste text inside triple backquotes next time? Screenshots dont render as well. thx!",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6796114",
                          "updatedAt": "2023-08-22T21:32:08Z",
                          "publishedAt": "2023-08-22T21:32:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "Could you provide an input file for your second case?\nIt's interesting that your mass flow rate is in the opposite direction (and several orders of magnitude higher). I wonder if the PID controller is to blame. Still, the small heat transfer is interesting.",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6803057",
                          "updatedAt": "2023-08-23T13:45:50Z",
                          "publishedAt": "2023-08-23T13:45:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "asm-fakhrul"
                  },
                  "bodyText": "That's correct. In the first case, everything is in thermal equilibrium at around 4000 K i.e. primary outlet temperature and secondary inlet and outlet temperature. In the second case, the core is getting hotter (16,000 K) but the HX (400 K) is not removing the heat.",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6796149",
                  "updatedAt": "2023-08-22T21:39:01Z",
                  "publishedAt": "2023-08-22T21:39:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "joshuahansel"
                  },
                  "bodyText": "On a general note, I'm running these tutorial steps, and I'm surprised on how poorly they're running. It's clear that they need some work (but I'm unable to spare all of that time right now). If it's helpful to you, there are these Brayton cycle examples as well: https://mooseframework.inl.gov/modules/thermal_hydraulics/modeling_guide/index.html. These I have been personally developed, so I'm more familiar. It's interesting that these tutorial steps are using so few elements in each channel - that's not the way we usually run these simulations. It's also interesting that we're not using a steady-state check (and apparently not reaching a steady state anyway). I would expect the system to physically reach a steady state much sooner in physical time. It may be some kind of control logic loop to blame.",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6803165",
                  "updatedAt": "2023-08-23T13:55:30Z",
                  "publishedAt": "2023-08-23T13:55:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "asm-fakhrul"
                  },
                  "bodyText": "Okay. Thank you for looking into it for me.\nSorry, seems like uploading *.i file type is not allowed. Let me share the content of the file in most cumbersome way for your reference.",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6804730",
                  "updatedAt": "2023-08-23T18:14:21Z",
                  "publishedAt": "2023-08-23T16:13:27Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "Thanks, but I'd still like to get your file directly because I want to diff the file, and your copy-paste changed space stuff. Just rename the extension of the file to .txt instead of .i and then you can upload.",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6804928",
                          "updatedAt": "2023-08-23T16:34:41Z",
                          "publishedAt": "2023-08-23T16:34:41Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "asm-fakhrul"
                  },
                  "bodyText": "The input file is attached.\nsingle_phase_flow_ex06.txt",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6805326",
                  "updatedAt": "2023-08-23T18:13:41Z",
                  "publishedAt": "2023-08-23T17:22:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "I ran this input file and do not get the results you did:\n+----------------+----------------+--------------------------------------+----------------+----------------+----------------+----------------+\n| time           | core_T_out     | core_heating:power_shape_fn:integral | hx_pri_T_out   | hx_sec_T_in    | hx_sec_T_out   | m_dot_pump     |\n+----------------+----------------+--------------------------------------+----------------+----------------+----------------+----------------+\n:                :                :                                      :                :                :                :                :\n|   1.414094e+05 |   7.275276e+03 |                         3.141593e-04 |   7.327430e+03 |   7.340079e+03 |   7.340125e+03 |   4.426889e-05 |\n+----------------+----------------+--------------------------------------+----------------+----------------+----------------+----------------+\n\n(and then it failed after this step). Did you change something since you posted your results? If so, please do not do that - else we have a moving target.\nI diffed the files, and I see that you've changed closures as well. I recommend that you change one thing at a time and then you can let us know which change causes the issue.",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6805876",
                          "updatedAt": "2023-08-23T18:30:58Z",
                          "publishedAt": "2023-08-23T18:30:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "asm-fakhrul"
                          },
                          "bodyText": "@joshuahansel, unfortunately, could not recover or recreate the exact input file (after my pc crashed before I could save the file) that gave the results I shared earlier. However, I hope I was able to communicate the issue/concern in the meantime.",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6814971",
                          "updatedAt": "2023-08-24T16:04:19Z",
                          "publishedAt": "2023-08-24T16:04:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "That's ok. You just need some kind of input file that gives the kind of issue you were seeing before, and then we can start over at that point. Then I would ask that you work your way from the original tutorial file, one change at a time, to see what causes this issue.",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6816148",
                          "updatedAt": "2023-08-24T18:29:43Z",
                          "publishedAt": "2023-08-24T18:29:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "asm-fakhrul"
                          },
                          "bodyText": "@joshuahansel, I have been trying to reproduce the result I shared earlier (primary coolant outlet temp 16000K, HX temp 400 K) but could not reproduce it. Do not remember the combination of parameters that I put together intentionally to show the extreme temp difference between the primary and the secondary side. But how would you explain the results you are getting? hx_pri and hx_sec inlet and outlet temperatures are all at 734 K, when the global T_in is set at 300 K. How come the hx_sec_T_in is not 300 K? PS: I am new to MOOSE so pardon me if I am missing something.",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6845269",
                          "updatedAt": "2023-08-28T17:53:20Z",
                          "publishedAt": "2023-08-28T17:52:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "The problem is that the setup is bad. It was originally designed for the smaller power. The system just keeps heating up indefinitely because it's unable to remove the increased heat. The provided temperature value of 300 K is not necessarily reflected at the inlet because the provided value is what is just outside of the inlet. If your flow is slow enough and the heat source is large enough, then the first element's solution can still be far away from that provided value. Ultimately I think what needs to happen is that the secondary side mass flow rate needs to be increased. I don't have a feel for how much. Perhaps you can apply a PID controller on the secondary side mass flow rate to achieve a certain temperature in the primary loop.",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6853264",
                          "updatedAt": "2023-08-29T13:24:17Z",
                          "publishedAt": "2023-08-29T13:24:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "asm-fakhrul"
                          },
                          "bodyText": "Playing around with the input parameters in the attached file, the core is generating a lot less power (20 W) now and should be cooled down with less mass flow. Would you be able to take a quick look to see if you can cool down the coolant to, say, 500 K, before it re-enters the primary loop? The coolant leaves the core at around 1050 K now. Thank you for your time and help!\nsingle_phase_flow_ex05.txt",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6918385",
                          "updatedAt": "2023-09-05T20:35:44Z",
                          "publishedAt": "2023-09-05T20:35:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "joshuahansel"
                          },
                          "bodyText": "I'm sorry for the delay in response - have you figured things out? Otherwise we can have someone look at it. Note that the THM tutorial is currently being modified by @GiudGiud .",
                          "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-7114618",
                          "updatedAt": "2023-09-26T16:02:32Z",
                          "publishedAt": "2023-09-26T16:02:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "asm-fakhrul"
                  },
                  "bodyText": "Apologies about the confusion. My laptop crashed/shut down in the middle of the correspondence. So I am not sure if the input file I shared is the exact version that corresponds to the results. When opened the file later, I did found that the input file had a mass flow rate of e-4. Meaning, the file was in the middle of making changes when the laptop crashed. Let me rerun the case and share the results and the input file again to be precisely sure that we all are on the same page.",
                  "url": "https://github.com/idaholab/moose/discussions/25262#discussioncomment-6805913",
                  "updatedAt": "2023-08-23T18:36:24Z",
                  "publishedAt": "2023-08-23T18:36:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Caluclating the spatial derivative of a material peroperty",
          "author": {
            "login": "alimostafavi24"
          },
          "bodyText": "Hello,\nI wanted to write a kernel to calculate the derivative of a material property w.r.t x, y and z. I just do not know how to declare them in the .h and .C files. Is there any specific example that I can look through?\nThanks,\nAli",
          "url": "https://github.com/idaholab/moose/discussions/25578",
          "updatedAt": "2023-09-26T03:04:26Z",
          "publishedAt": "2023-09-26T02:39:12Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nDo you want to declare each derivative separately?\nOr all of them in a vector (gradient) ?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/25578#discussioncomment-7107808",
                  "updatedAt": "2023-09-26T02:57:24Z",
                  "publishedAt": "2023-09-26T02:57:23Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "I need them separately (by component).\nCan they also be used for determining the residual and off diag jacobian?",
                          "url": "https://github.com/idaholab/moose/discussions/25578#discussioncomment-7107817",
                          "updatedAt": "2023-09-26T02:59:35Z",
                          "publishedAt": "2023-09-26T02:59:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "you can just declare 3 properties then, changing the name using a utility as can be seen in DerivativeParsedMaterial.C for example\nYou ll need to write the expression yourself.\nfor example if M = u (variable), then you ll need to compute dM/dx = du/dx and for that you ll retrieve coupledGrdient(u) and retrieve it at the right index",
                          "url": "https://github.com/idaholab/moose/discussions/25578#discussioncomment-7107841",
                          "updatedAt": "2023-09-26T03:04:26Z",
                          "publishedAt": "2023-09-26T03:04:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Getting UMAT state variable vector as an AuxVariable",
          "author": {
            "login": "jessecarterMOOSE"
          },
          "bodyText": "I thought I might be able to accomplish this using VectorMaterialRealVectorValueAux, but I get an error about the \"state_var\" material property created by the UMAT material is of type libMesh::VectorValue<double> and not std::vector<double>. Is there a different AuxKernel I should use?",
          "url": "https://github.com/idaholab/moose/discussions/25546",
          "updatedAt": "2023-09-25T21:29:50Z",
          "publishedAt": "2023-09-21T20:05:35Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "so std::vector<double> is going to be the type for an array material property\nRealVectorValue is a 3-sized vector (or libmesh_dim-sized)\nso instead of std::vector<double> you should look at returning RealVectorValue?\nwhat type is your material property?",
                  "url": "https://github.com/idaholab/moose/discussions/25546#discussioncomment-7076971",
                  "updatedAt": "2023-09-22T02:59:42Z",
                  "publishedAt": "2023-09-22T02:59:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "The material property ( defined here \n  \n    \n      moose/modules/tensor_mechanics/include/materials/abaqus/AbaqusUMATStress.h\n    \n    \n         Line 214\n      in\n      81a54cc\n    \n  \n  \n    \n\n        \n          \n           MaterialProperty<std::vector<Real>> & _state_var; \n        \n    \n  \n\n) gets an arbitrary size.",
                          "url": "https://github.com/idaholab/moose/discussions/25546#discussioncomment-7081905",
                          "updatedAt": "2023-09-22T13:50:11Z",
                          "publishedAt": "2023-09-22T13:50:10Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Then you must use array auxkernels for output.",
                          "url": "https://github.com/idaholab/moose/discussions/25546#discussioncomment-7082168",
                          "updatedAt": "2023-09-22T14:13:35Z",
                          "publishedAt": "2023-09-22T14:13:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Does moose already have one that would work in this case? I'd like to have the whole array in one auxkernel because the state variable list could be 100 entries long.",
                          "url": "https://github.com/idaholab/moose/discussions/25546#discussioncomment-7083005",
                          "updatedAt": "2023-09-22T15:23:29Z",
                          "publishedAt": "2023-09-22T15:23:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "does this work?\nhttps://mooseframework.inl.gov/source/auxkernels/MaterialStdVectorAux.html",
                          "url": "https://github.com/idaholab/moose/discussions/25546#discussioncomment-7085543",
                          "updatedAt": "2023-09-22T20:35:59Z",
                          "publishedAt": "2023-09-22T20:35:58Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "That's not an array kernel, right? Just pulls one component of the vector.",
                          "url": "https://github.com/idaholab/moose/discussions/25546#discussioncomment-7085902",
                          "updatedAt": "2023-09-22T21:35:15Z",
                          "publishedAt": "2023-09-22T21:35:14Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ah ok. Then we dont have it.\nI think it would be the MaterialArrayAux and you'd have to create it",
                          "url": "https://github.com/idaholab/moose/discussions/25546#discussioncomment-7085996",
                          "updatedAt": "2023-09-22T21:54:12Z",
                          "publishedAt": "2023-09-22T21:54:12Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jessecarterMOOSE"
                          },
                          "bodyText": "Is there already an aux kernel base class that I could inherit from that can hold arbitrary size mat props?",
                          "url": "https://github.com/idaholab/moose/discussions/25546#discussioncomment-7106202",
                          "updatedAt": "2023-09-25T21:29:50Z",
                          "publishedAt": "2023-09-25T21:29:50Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "hello.c build issue",
          "author": {
            "login": "adinovi1"
          },
          "bodyText": "I just set up a MOOSE on a remote hpc and was having trouble with building the MOOSE package. I went to the troubleshooting page and followed the example for building hello.c and got the following error when trying to run a.out\n./a.out: symbol lookup error: /home/a******/mambaforge3/envs/moose/lib/libmpicxx.so.12: undefined symbol: MPII_Errhandler_set_cxx\n./a.out: symbol lookup error: /home/a******/mambaforge3/envs/moose/lib/libmpicxx.so.12: undefined symbol: MPII_Errhandler_set_cxx\n./a.out: symbol lookup error: /home/a******/mambaforge3/envs/moose/lib/libmpicxx.so.12: undefined symbol: MPII_Errhandler_set_cxx\n./a.out: symbol lookup error: /home/a******/mambaforge3/envs/moose/lib/libmpicxx.so.12: undefined symbol: MPII_Errhandler_set_cxx\nI updated mamba and re-pulled the moose repository as described in the troubleshooting article. Any idea what could be causing this problem?\nThank you!",
          "url": "https://github.com/idaholab/moose/discussions/25573",
          "updatedAt": "2023-09-25T20:08:40Z",
          "publishedAt": "2023-09-25T18:42:16Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "Can you post what a.out is linked to?\nldd a.out",
                  "url": "https://github.com/idaholab/moose/discussions/25573#discussioncomment-7105107",
                  "updatedAt": "2023-09-25T18:47:26Z",
                  "publishedAt": "2023-09-25T18:47:26Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "adinovi1"
                          },
                          "bodyText": "Here is the output to ldd a.out\nlinux-vdso.so.1 (0x0000155555551000)\n        libmpicxx.so.12 => /home/adinovi1/mambaforge3/envs/moose/lib/libmpicxx.so.12 (0x0000155555527000)\n        libmpi.so.12 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/openmpi-3.1.6-rk3nyoehbq3pke4zy4hn7unns3ujtutx/lib/libmpi.so.12 (0x0000155554ec0000)\n        libstdc++.so.6 => /data/apps/linux-centos8-cascadelake/gcc-9.2.0/gcc-9.3.0-bnvby67rgbqevwsd264rgz44xucnkhpm/lib64/libstdc++.so.6 (0x0000155554ae0000)\n        libm.so.6 => /lib64/libm.so.6 (0x000015555475e000)\n        libgomp.so.1 => /data/apps/linux-centos8-cascadelake/gcc-9.2.0/gcc-9.3.0-bnvby67rgbqevwsd264rgz44xucnkhpm/lib64/libgomp.so.1 (0x0000155554527000)\n        libgcc_s.so.1 => /data/apps/linux-centos8-cascadelake/gcc-9.2.0/gcc-9.3.0-bnvby67rgbqevwsd264rgz44xucnkhpm/lib64/libgcc_s.so.1 (0x000015555430f000)\n        libpthread.so.0 => /lib64/libpthread.so.0 (0x00001555540ef000)\n        libc.so.6 => /lib64/libc.so.6 (0x0000155553d2a000)\n        librt.so.1 => /lib64/librt.so.1 (0x0000155553b22000)\n        libgpfs.so => /lib64/libgpfs.so (0x000015555390c000)\n        libopen-rte.so.40 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/openmpi-3.1.6-rk3nyoehbq3pke4zy4hn7unns3ujtutx/lib/libopen-rte.so.40 (0x00001555535c6000)\n        libopen-pal.so.40 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/openmpi-3.1.6-rk3nyoehbq3pke4zy4hn7unns3ujtutx/lib/libopen-pal.so.40 (0x000015555316e000)\n        librdmacm.so.1 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/rdma-core-20-yi5fs36dd6z7mgdaoqrzszdrf6uprsnj/lib64/librdmacm.so.1 (0x0000155552f57000)\n        libibverbs.so.1 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/rdma-core-20-yi5fs36dd6z7mgdaoqrzszdrf6uprsnj/lib64/libibverbs.so.1 (0x0000155552d3f000)\n        libpmi2.so.0 => /cm/shared/apps/slurm/current/lib64/libpmi2.so.0 (0x0000155552b27000)\n        libpmi.so.0 => /cm/shared/apps/slurm/current/lib64/libpmi.so.0 (0x0000155552921000)\n        libdl.so.2 => /lib64/libdl.so.2 (0x000015555271d000)\n        libnl-3.so.200 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/libnl-3.3.0-l36dn7efsyzwwzyckbxsnckuooisjlku/lib/libnl-3.so.200 (0x00001555524fc000)\n        libnl-route-3.so.200 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/libnl-3.3.0-l36dn7efsyzwwzyckbxsnckuooisjlku/lib/libnl-route-3.so.200 (0x0000155552289000)\n        libutil.so.1 => /lib64/libutil.so.1 (0x0000155552085000)\n        libz.so.1 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/zlib-1.2.11-e3b5lv4p74sarztga2utttylgq33e3ve/lib/libz.so.1 (0x0000155551e6e000)\n        libhwloc.so.5 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/hwloc-1.11.11-24iqfu5al52h6gnowpvbiomuee7ftkb2/lib/libhwloc.so.5 (0x0000155551c2e000)\n        /lib64/ld-linux-x86-64.so.2 (0x0000155555325000)\n        libresolv.so.2 => /lib64/libresolv.so.2 (0x0000155551a16000)\n        libslurm_pmi.so => /cm/shared/apps/slurm/23.02.2/lib64/slurm/libslurm_pmi.so (0x0000155551625000)\n        libnuma.so.1 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/numactl-2.0.12-5ubxntlq66g7a4u3wh7c2hr2jupbi75r/lib/libnuma.so.1 (0x000015555141a000)\n        libpciaccess.so.0 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/libpciaccess-0.16-u54tvp6b5ako2v6do34d6sejnet3ho3g/lib/libpciaccess.so.0 (0x0000155551211000)\n        libxml2.so.2 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/libxml2-2.9.10-slof272cgdju36m2ymoyzbpsf74ylohg/lib/libxml2.so.2 (0x0000155550eac000)\n        liblzma.so.5 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/xz-5.2.5-bnzogy626curvqbpenizjf3ygqpsslze/lib/liblzma.so.5 (0x0000155550c86000)",
                          "url": "https://github.com/idaholab/moose/discussions/25573#discussioncomment-7105332",
                          "updatedAt": "2023-09-25T20:07:01Z",
                          "publishedAt": "2023-09-25T19:16:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "there s a mix of compilers in there\nlibmpicxx.so.12 => /home/adinovi1/mambaforge3/envs/moose/lib/libmpicxx.so.12 (0x0000155555527000)\nlibmpi.so.12 => /data/apps/linux-centos8-cascadelake/gcc-9.3.0/openmpi-3.1.6-rk3nyoehbq3pke4zy4hn7unns3ujtutx/lib/libmpi.so.12 (0x0000155554ec0000)\n\njust those two show our mamba installed compiler and your local ones.\nSo you need to clean your environment, unload some modules maybe, maybe modify some of the environment variable, so you consistently use our mamba compilers",
                          "url": "https://github.com/idaholab/moose/discussions/25573#discussioncomment-7105358",
                          "updatedAt": "2023-09-25T19:19:57Z",
                          "publishedAt": "2023-09-25T19:19:56Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "This is the sort of thing which would help @GiudGiud ticket: #25510\nBut honestly, that's tricky to do/add to the diagnostic script.",
                          "url": "https://github.com/idaholab/moose/discussions/25573#discussioncomment-7105678",
                          "updatedAt": "2023-09-25T20:08:41Z",
                          "publishedAt": "2023-09-25T20:08:40Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}