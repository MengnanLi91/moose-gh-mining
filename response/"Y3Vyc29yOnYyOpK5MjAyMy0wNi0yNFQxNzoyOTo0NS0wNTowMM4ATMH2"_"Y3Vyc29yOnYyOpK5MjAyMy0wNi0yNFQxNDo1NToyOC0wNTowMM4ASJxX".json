{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wNi0yNFQxNDo1NToyOC0wNTowMM4ASJxX"
    },
    "edges": [
      {
        "node": {
          "title": "signal_handler.test_signal_parallel test CRASH",
          "author": {
            "login": "hzclarksm"
          },
          "bodyText": "I am using gcc 8.3.0, openmpi 3.1.4\npetsc and libmesh provided in moose repository are used.\nHere is the log message from moose/test/run_tests :\nmisc/signal_handler.test_signal_parallel: Working Directory: /depot/nanohub/apps/HUBapps/share64/moose/moose-20230410/build/moose/test/tests/misc/signal_handler\nmisc/signal_handler.test_signal_parallel: Running command: mpiexec -n 3 /depot/nanohub/apps/HUBapps/share64/moose/moose-20230410/build/moose/test/moose_test-opt -i simple_transient_diffusion_scaled.i Executioner/num_steps=70 --error --error-override --no-gdb-backtrace\nmisc/signal_handler.test_signal_parallel: Framework Information:\nmisc/signal_handler.test_signal_parallel: MOOSE Version:           git commit cb1ac8fbe7 on 2023-04-10\nmisc/signal_handler.test_signal_parallel: LibMesh Version:         80494219d2293e467392189814d30330c4f87a25\nmisc/signal_handler.test_signal_parallel: PETSc Version:           3.16.6\nmisc/signal_handler.test_signal_parallel: SLEPc Version:           3.16.2\nmisc/signal_handler.test_signal_parallel: Current Time:            Wed Apr 12 14:47:32 2023\nmisc/signal_handler.test_signal_parallel: Executable Timestamp:    Tue Apr 11 19:44:09 2023\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Parallelism:\nmisc/signal_handler.test_signal_parallel:   Num Processors:          3\nmisc/signal_handler.test_signal_parallel:   Num Threads:             1\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Mesh: \nmisc/signal_handler.test_signal_parallel:   Parallel Type:           replicated\nmisc/signal_handler.test_signal_parallel:   Mesh Dimension:          2\nmisc/signal_handler.test_signal_parallel:   Spatial Dimension:       2\nmisc/signal_handler.test_signal_parallel:   Nodes:                   \nmisc/signal_handler.test_signal_parallel:     Total:                 1681\nmisc/signal_handler.test_signal_parallel:     Local:                 584\nmisc/signal_handler.test_signal_parallel:     Min/Max/Avg:           526/584/560\nmisc/signal_handler.test_signal_parallel:   Elems:                   \nmisc/signal_handler.test_signal_parallel:     Total:                 1600\nmisc/signal_handler.test_signal_parallel:     Local:                 533\nmisc/signal_handler.test_signal_parallel:     Min/Max/Avg:           533/534/533\nmisc/signal_handler.test_signal_parallel:   Num Subdomains:          1\nmisc/signal_handler.test_signal_parallel:   Num Partitions:          3\nmisc/signal_handler.test_signal_parallel:   Partitioner:             metis\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Nonlinear System:\nmisc/signal_handler.test_signal_parallel:   Num DOFs:                1681\nmisc/signal_handler.test_signal_parallel:   Num Local DOFs:          584\nmisc/signal_handler.test_signal_parallel:   Variables:               \"u\" \nmisc/signal_handler.test_signal_parallel:   Finite Element Types:    \"LAGRANGE\" \nmisc/signal_handler.test_signal_parallel:   Approximation Orders:    \"FIRST\" \nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Execution Information:\nmisc/signal_handler.test_signal_parallel:   Executioner:             Transient\nmisc/signal_handler.test_signal_parallel:   TimeStepper:             ConstantDT\nmisc/signal_handler.test_signal_parallel:   TimeIntegrator:          ImplicitEuler\nmisc/signal_handler.test_signal_parallel:   Solver Mode:             Preconditioned JFNK\nmisc/signal_handler.test_signal_parallel:   PETSc Preconditioner:    hypre boomeramg \nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 0, time = 0\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 1, time = 0.01, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 5.630225e-01\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 5.630225e-01\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 7.125723e-03\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 7.570264e-05\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 1.443721e-06\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 1.443351e-06\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.443351e-06\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 3.522111e-08\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 4.012508e-10\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 4.546590e-12\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 4.547959e-12\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 2, time = 0.02, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 2.170642e-01\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 2.170642e-01\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 4.316293e-03\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 4.847690e-05\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 8.948288e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 8.944465e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 8.944465e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 2.143715e-08\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.098128e-10\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 3.231108e-12\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 3.229214e-12\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 3, time = 0.03, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 1.046202e-01\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.046202e-01\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 2.683197e-03\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.962110e-05\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 4.892972e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 4.893441e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 4.893441e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.126257e-08\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 1.686581e-10\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 1.721788e-12\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 1.721465e-12\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 4, time = 0.04, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 7.116260e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 7.116260e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.952502e-03\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.023476e-05\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 3.244164e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 3.243437e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 3.243437e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 7.452527e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 1.089979e-10\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 1.139484e-12\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 1.139336e-12\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 5, time = 0.05, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 5.512636e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 5.512636e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.533087e-03\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 1.486174e-05\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.426180e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 2.426065e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 2.426065e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 5.665812e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 8.229775e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 8.512549e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 8.517602e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 6, time = 0.06, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 4.556221e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 4.556221e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.259600e-03\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 1.149478e-05\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 1.928391e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 1.928612e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.928612e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 4.582613e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 6.570925e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 6.635604e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 6.633719e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 7, time = 0.07, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 3.913952e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 3.913952e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.067865e-03\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 9.256552e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 1.587324e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 1.588967e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.588967e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 3.833966e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 5.396614e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 5.293314e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 5.295928e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 8, time = 0.08, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 3.449416e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 3.449416e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 9.269955e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 7.704340e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 1.338729e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 1.340841e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.340841e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 3.272325e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 4.500150e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 4.310015e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 4.310646e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 9, time = 0.09, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 3.095910e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 3.095910e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 8.199300e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 6.593256e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 1.151836e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 1.152622e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.152622e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 2.836912e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.810269e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 3.571294e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 3.572787e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 10, time = 0.1, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 2.816755e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 2.816755e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 7.363813e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 5.779050e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 1.009597e-07\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 1.009630e-07\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.009630e-07\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 2.499204e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.298472e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 3.060818e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 3.061900e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 11, time = 0.11, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 2.590020e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 2.590020e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 6.697587e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 5.171914e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 9.012202e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 9.012811e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 9.012811e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 2.237519e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.902504e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.700936e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.701133e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 12, time = 0.12, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 2.401737e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 2.401737e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 6.156447e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 4.712919e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 8.188958e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 8.190087e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 8.190087e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 2.033047e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.625506e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.470883e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.472404e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 13, time = 0.13, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 2.242567e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 2.242567e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 5.709736e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 4.361476e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 7.563810e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 7.572088e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 7.572088e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.881548e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.429270e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.332713e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.331790e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 14, time = 0.14, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 2.106009e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 2.106009e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 5.335583e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 4.088667e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 7.085389e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 7.078432e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 7.078432e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.757148e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.289587e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.276234e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.276254e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 15, time = 0.15, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 1.987396e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.987396e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 5.018035e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.873431e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 6.712417e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 6.720896e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 6.720896e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.663234e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.192639e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.276914e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.277145e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 16, time = 0.16, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 1.883281e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.883281e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 4.745253e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.700387e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 6.413549e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 6.416836e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 6.416836e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.581220e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.119894e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.317647e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.317508e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 17, time = 0.17, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 1.791061e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.791061e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 4.508313e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.558288e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 6.166194e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 6.163965e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 6.163965e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.515322e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.073482e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.393908e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.394275e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 18, time = 0.18, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 1.708732e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.708732e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 4.300412e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.438967e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 5.954818e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 5.956418e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 5.956418e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.458319e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.035316e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.492780e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.492926e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 19, time = 0.19, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 1.634723e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.634723e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 4.116293e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.336543e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 5.769137e-08\nmisc/signal_handler.test_signal_parallel:  1 Nonlinear |R| = 5.768308e-08\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 5.768308e-08\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 1.406911e-09\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 2.007276e-11\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 2.605256e-13\nmisc/signal_handler.test_signal_parallel:  2 Nonlinear |R| = 2.605521e-13\nmisc/signal_handler.test_signal_parallel:  Solve Converged!\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Time Step 20, time = 0.2, dt = 0.01\nmisc/signal_handler.test_signal_parallel:  0 Nonlinear |R| = 1.567785e-02\nmisc/signal_handler.test_signal_parallel:       0 Linear |R| = 1.567785e-02\nmisc/signal_handler.test_signal_parallel:       1 Linear |R| = 3.951859e-04\nmisc/signal_handler.test_signal_parallel:       2 Linear |R| = 3.246797e-06\nmisc/signal_handler.test_signal_parallel:       3 Linear |R| = 5.602446e-08\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel: Exit Code: -10\nmisc/signal_handler.test_signal_parallel: ################################################################################\nmisc/signal_handler.test_signal_parallel: Tester failed, reason: CRASH\nmisc/signal_handler.test_signal_parallel: \nmisc/signal_handler.test_signal_parallel ................. [previous results: CRASH,min_cpus=3] FAILED (CRASH)\n\n\nFinal Test Results:\n--------------------------------------------------------------------------------------------------------------\nmeshgenerators/distributed_rectilinear/partition.3D_8 [min_cpus=8,previous results: ERRMSG,insufficie...] SKIP\nmisc/signal_handler.test_signal_parallel ................. [previous results: CRASH,min_cpus=3] FAILED (CRASH)\n--------------------------------------------------------------------------------------------------------------\nRan 1 tests in 21.9 seconds. Average test time 4.1 seconds, maximum test time 4.1 seconds.\n0 passed, 1 skipped, 0 pending, 1 FAILED",
          "url": "https://github.com/idaholab/moose/discussions/24050",
          "updatedAt": "2023-06-24T22:29:15Z",
          "publishedAt": "2023-04-12T19:40:45Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Thanks for reporting.\nI ll keep this in mind, but the test works everywhere else fine for now.\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24050#discussioncomment-6271081",
                  "updatedAt": "2023-06-24T22:29:15Z",
                  "publishedAt": "2023-06-24T22:29:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Eigen strain function of nodal coordinate",
          "author": {
            "login": "devesh-tiwari"
          },
          "bodyText": "Hello, I want to use a nodal coordinate dependent eigen strain in my phase field model (e^(-kx) where s is the position along x axis. Kindly guide me about how to access the nodal coordinate",
          "url": "https://github.com/idaholab/moose/discussions/23990",
          "updatedAt": "2023-06-24T22:28:25Z",
          "publishedAt": "2023-04-06T00:17:20Z",
          "category": {
            "name": "Q&A Modules: Phase field"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nI m not sure what you mean here.\nYou need to get a coordinate from a mesh that meets a certain criterion?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23990#discussioncomment-6271077",
                  "updatedAt": "2023-06-24T22:27:34Z",
                  "publishedAt": "2023-06-24T22:27:33Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "oh in your eigenstrain model (a material property) you want to access the local position?\nWell first, we do not have nodal material properties\nWe could develop them using the functor system if needed, though there might be a delay there",
                          "url": "https://github.com/idaholab/moose/discussions/23990#discussioncomment-6271079",
                          "updatedAt": "2023-06-24T22:28:34Z",
                          "publishedAt": "2023-06-24T22:28:25Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "FSP output",
          "author": {
            "login": "nanguaxiaofendui"
          },
          "bodyText": "Hello all,\nWhy do I use different FSP preprocessing options (additive, multiplicative, schur), but using -ksp_view_pmat are jacobian matrix output?",
          "url": "https://github.com/idaholab/moose/discussions/23692",
          "updatedAt": "2023-06-24T22:26:38Z",
          "publishedAt": "2023-03-11T14:14:56Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nField splits are not just a different preconditioning matrix, they are also a sequence of steps to solve the linear systems.\nThis isnt shown by view_pmat\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23692#discussioncomment-6271073",
                  "updatedAt": "2023-06-24T22:26:38Z",
                  "publishedAt": "2023-06-24T22:26:37Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Trying to install an older app from 3 years ago",
          "author": {
            "login": "ahmad681"
          },
          "bodyText": "Bug Description\n\nI am trying to install an app that was developed 3-4 years ago.\nI already installed the latest version of MOOSE, and all tests ran just fine.\nI have a copy of the app, when I put it in next MOOSE and make it, i  get the following errors:\nCDD-MOOSE/src/main.C:23:17: error: 'exII' is not a namespace-name\n   23 | using namespace exII;\n      |                 ^~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C: In function 'int createMesh()':\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:562:11: error: 'EX_VERBOSE' was not declared in this scope\n  562 |   ex_opts(EX_VERBOSE | EX_ABORT);\n      |           ^~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:562:24: error: 'EX_ABORT' was not declared in this scope; did you mean 'PETSCABORT'?\n  562 |   ex_opts(EX_VERBOSE | EX_ABORT);\n      |                        ^~~~~~~~\n      |                        PETSCABORT\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:562:3: error: 'ex_opts' was not declared in this scope\n  562 |   ex_opts(EX_VERBOSE | EX_ABORT);\n      |   ^~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:571:7: error: 'EX_CLOBBER' was not declared in this scope\n  571 |       EX_CLOBBER,     /* create mode */\n      |       ^~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:570:11: error: 'ex_create' was not declared in this scope\n  570 |   exoid = ex_create(\"test.exo\",     /* filename path */\n      |           ^~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:583:11: error: 'ex_put_init' was not declared in this scope\n  583 |   error = ex_put_init(exoid, \"This is a test\", num_dim, num_nodes, num_elem, num_elem_blk,\n      |           ^~~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:588:11: error: 'ex_put_coord' was not declared in this scope\n  588 |   error = ex_put_coord(exoid, &coords_x[0], &coords_y[0], &coords_z[0]);\n      |           ^~~~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:594:11: error: 'ex_put_coord_names' was not declared in this scope\n  594 |   error = ex_put_coord_names(exoid, coord_names);\n      |           ^~~~~~~~~~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:604:11: error: 'ex_put_map' was not declared in this scope\n  604 |   error = ex_put_map(exoid, elem_map);\n      |           ^~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:619:31: error: 'EX_ELEM_BLOCK' was not declared in this scope; did you mean 'XTERM_BL                                                                      ACK'?\n  619 |   error = ex_put_block(exoid, EX_ELEM_BLOCK, ebids[0], \"PYRAMID5\", num_elem_in_block[0],\n      |                               ^~~~~~~~~~~~~\n      |                               XTERM_BLACK\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:619:11: error: 'ex_put_block' was not declared in this scope\n  619 |   error = ex_put_block(exoid, EX_ELEM_BLOCK, ebids[0], \"PYRAMID5\", num_elem_in_block[0],\n      |           ^~~~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:622:7: error: 'ex_close' was not declared in this scope; did you mean 'pclose'?\n  622 |       ex_close(exoid);\n      |       ^~~~~~~~\n      |       pclose\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:628:7: error: 'ex_close' was not declared in this scope; did you mean 'pclose'?\n  628 |       ex_close(exoid);\n      |       ^~~~~~~~\n      |       pclose\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:631:11: error: 'ex_put_name' was not declared in this scope\n  631 |   error = ex_put_name(exoid, EX_ELEM_BLOCK, ebids[0], \"PYRAMID5 BLOCK\");\n      |           ^~~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:633:7: error: 'ex_close' was not declared in this scope; did you mean 'pclose'?\n  633 |       ex_close(exoid);\n      |       ^~~~~~~~\n      |       pclose\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:638:7: error: 'ex_close' was not declared in this scope; did you mean 'pclose'?\n  638 |       ex_close(exoid);\n      |       ^~~~~~~~\n      |       pclose\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:642:11: error: 'ex_put_conn' was not declared in this scope\n  642 |   error = ex_put_conn(exoid, EX_ELEM_BLOCK, ebids[0], &elements_pyr[0], NULL, NULL);\n      |           ^~~~~~~~~~~\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:644:7: error: 'ex_close' was not declared in this scope; did you mean 'pclose'?\n  644 |       ex_close(exoid);\n      |       ^~~~~~~~\n      |       pclose\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:649:7: error: 'ex_close' was not declared in this scope; did you mean 'pclose'?\n  649 |       ex_close(exoid);\n      |       ^~~~~~~~\n      |       pclose\n/home/ahmad68/projects/CDD-MOOSE/src/main.C:680:11: error: 'ex_close' was not declared in this scope; did you mean 'pclose'?\n  680 |   error = ex_close(exoid);\n      |           ^~~~~~~~\n      |           pclose\n\n\nInterestingly, when I make it again, I get new errors somehow like the following:\nCDD-MOOSE/src/materials/ComputeMultDecompStress.C:139:18: error: 'RankTwoTensor' {aka 'class RankTwoTensorTempl<double>'} has no member named 'mixedProductIkJl'; did you mean 'mixedProductJkI'?\n  139 |   _tan_mod = _fe.mixedProductIkJl(_fe) * _dpk2_dfe;\n      |                  ^~~~~~~~~~~~~~~~\n      |                  mixedProductJkI\nmake: *** [/home/ahmad68/projects/CDD-MOOSE/build/unity_src/materials_Unity.x86_64-pc-linux-gnu.opt.lo] Error 1\n\n\nSteps to Reproduce\n\nI am just making the CDD-MOOSE app\nImpact\n\nI need to have the CDD_MOOSE, it used to work for me 2 years ago just fine.",
          "url": "https://github.com/idaholab/moose/discussions/23556",
          "updatedAt": "2023-06-24T22:24:52Z",
          "publishedAt": "2023-02-27T18:02:56Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThere has been a lot of changes in 3 years.\nI suspect exII is now exodusII_helper.\nYou should have a look at the current exodus output code to update this.\nThen you should make sure you're up to date on this:\nhttps://mooseframework.inl.gov/newsletter/2020/2020_04.html#c1ba1ef6-13a6-4210-bedb-0b691fec2ce7\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23556#discussioncomment-5156310",
                  "updatedAt": "2023-02-28T18:30:03Z",
                  "publishedAt": "2023-02-28T18:30:02Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "Thanks for the reply Guillaume,\nActually, there is a lot of problem I am facing now, haha. so it seems like I would have to update the old app we built, which is actually a lot of work unfortunately. Take a look at some of the errors I am getting when I try to make\nIn file included from /home/ahmad68/projects/CDD-MOOSE/build/unity_src/constraint_Unity.C:2:\n/home/ahmad68/projects/CDD-MOOSE/src/constraint/KinematicLinearNodalConstraint.C:17:51: error: expected constructor, destructor, or type conversion before ';' token\n   17 | defineLegacyParams(KinematicLinearNodalConstraint);\n\n/home/ahmad68/projects/CDD-MOOSE/src/materials/ComputeMultDecompStress.C:139:18: error: 'RankTwoTensor' {aka 'class RankTwoTensorTempl<double>'} has no member named 'mixedProductIkJl'; did you mean 'mixedProductJkI'?\n  139 |   _tan_mod = _fe.mixedProductIkJl(_fe) * _dpk2_dfe;\n\n/home/ahmad68/projects/moose/framework/build/header_symlinks/PostprocessorInterface.h:41:26: note: candidates are: 'static InputParameters PostprocessorInterface::validParams()'\n   41 |   static InputParameters validParams();\n\n/home/ahmad68/projects/CDD-MOOSE/src/auxkernels/DivergenceAux.C:31:1: error: specializing member 'DivergenceAuxTempl<false>::computeValue' requires 'template<>' syntax\n   31 | DivergenceAux::computeValue()\n\n\n/home/ahmad68/projects/moose/framework/build/header_symlinks/InputParameters.h:1820:24: error: reference to 'TransientTransport::validParams' is ambiguous\n 1820 |   return T::validParams();\n\nSo I have a question, it seems like the link you've attached above would fix my problems after I update, i just wanted to make sure.\nmixedProductIkJl'; did you mean 'mixedProductJkI'?, so the product ijkl was updated , correct?\nlastly, I am not sure what it means by this error reference to 'TransientTransport::validParams' is ambiguous\n1820 |   return T::validParams();\nThanks a lot for the help. Ahmad",
                          "url": "https://github.com/idaholab/moose/discussions/23556#discussioncomment-5180896",
                          "updatedAt": "2023-03-02T16:38:47Z",
                          "publishedAt": "2023-03-02T16:35:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The validParams stuff, eg most of the errors you are getting here, is a hard deprecation of an old way to define parameters for an object.\nYou will need to follow everything mentioned here\nhttps://mooseframework.inl.gov/newsletter/2020/2020_04.html#c1ba1ef6-13a6-4210-bedb-0b691fec2ce7\nthere is no other way about this.\n\nmixedProductIkJl'; did you mean 'mixedProductJkI'?, so the product ijkl was updated , correct?\n\nI think so yes. You can double check the rankTwoTensor documentation to make sure:\nhttps://mooseframework.inl.gov/docs/doxygen/moose/classRankTwoTensorTempl.html",
                          "url": "https://github.com/idaholab/moose/discussions/23556#discussioncomment-5181031",
                          "updatedAt": "2023-03-02T16:42:26Z",
                          "publishedAt": "2023-03-02T16:42:26Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "Awesome, will work on that. Many thanks.\nsorry, one Last question I forgot to ask in the last thread. I could not find the description for the function defineLegacyParams(), other than you just pass a constant function as variable, I couldn't find the documentation for this function.\nhttps://mooseframework.inl.gov/releases/moose/v1.0.0/doxygen/moose/ConstantFunction_8C.html",
                          "url": "https://github.com/idaholab/moose/discussions/23556#discussioncomment-5181073",
                          "updatedAt": "2023-03-02T16:45:29Z",
                          "publishedAt": "2023-03-02T16:45:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "please remove this legacyParam function entirely, this is not how we do parameters anymore.\nThe newsletter post has the information you need",
                          "url": "https://github.com/idaholab/moose/discussions/23556#discussioncomment-5181174",
                          "updatedAt": "2023-03-02T16:55:04Z",
                          "publishedAt": "2023-03-02T16:55:03Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "awesome thanks, I will work ont it.",
                          "url": "https://github.com/idaholab/moose/discussions/23556#discussioncomment-5183577",
                          "updatedAt": "2023-03-02T21:48:08Z",
                          "publishedAt": "2023-03-02T21:48:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "ahmad681"
                          },
                          "bodyText": "I have an updated code, and it compiles, you can mark this as done. thanks for the help.\nRunning into issues with the input file, about to open up a new discussion",
                          "url": "https://github.com/idaholab/moose/discussions/23556#discussioncomment-5204557",
                          "updatedAt": "2023-03-05T00:08:33Z",
                          "publishedAt": "2023-03-05T00:08:32Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Laplacian of a scalar field",
          "author": {
            "login": "alimostafavi24"
          },
          "bodyText": "Hello everyone,\nIs there anyway in MOOSE to get the Laplacian of a scalar field?\nI need to compute d2c/dx2 but do know how to do it.\nThanks,\nAli",
          "url": "https://github.com/idaholab/moose/discussions/23551",
          "updatedAt": "2023-06-24T22:21:33Z",
          "publishedAt": "2023-02-27T21:13:16Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nBy scalar field you mean a regular variable?\nDo you mean to use this in a residual or just for postprocessing?\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5128237",
                  "updatedAt": "2023-02-27T21:16:49Z",
                  "publishedAt": "2023-02-27T21:16:49Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Yes, I meant a regular variable. I need it for post processing.",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5128250",
                          "updatedAt": "2023-02-27T21:18:17Z",
                          "publishedAt": "2023-02-27T21:18:17Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "You can look at second derivatives on variables (retrieve using getVar())\nhttps://mooseframework.inl.gov/docs/doxygen/moose/classMooseVariableFE.html#a6084c139e379961bfcc3f5ed97d181f4\nor use the Coupleable interface, same as for values, first derivatives etc\nhttps://mooseframework.inl.gov/docs/doxygen/moose/classCoupleable.html#a905ce7bd997b1374a18b0c7a3d3389a5",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5129523",
                          "updatedAt": "2023-02-27T21:58:11Z",
                          "publishedAt": "2023-02-27T21:58:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "Thank you so much. In one part of my code, I also need the gradient of the component to compute the residual. I am not getting the correct result since I am using VariableGradientComponent. In this way the variable is totally constant inside the element. Is there any way to fix this?\nThanks,\nAli",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5135123",
                          "updatedAt": "2023-02-28T00:42:03Z",
                          "publishedAt": "2023-02-28T00:42:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "use coupledGradient to retrieve a gradient within your kernel.\nDo not use an auxiliary variable to store a gradient or a second derivative for anything else than postprocessing.",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5135862",
                          "updatedAt": "2023-02-28T00:56:44Z",
                          "publishedAt": "2023-02-28T00:56:44Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "I have a problem in calculating the residual correctly. Here is my .h and .C file.\n#pragma once\n\n#include \"Kernel.h\"\n\nclass SurfaceTension : public Kernel\n{\npublic:\n  SurfaceTension(const InputParameters & parameters);\n\n  static InputParameters validParams();\n\nprotected:\n  virtual Real computeQpResidual() override;\n\n  virtual Real computeQpJacobian() override;\n\nprivate:\n  unsigned int _v_var;\n  const VariableGradient & _grad_c;\n  const VariableValue & _w;\n  Real _coef;\n};\n\n\n#include \"SurfaceTension.h\"\n\nregisterMooseObject(\"ExampleApp\", SurfaceTension);\n\nInputParameters\nSurfaceTension::validParams()\n{\n  InputParameters params = Kernel::validParams();\n\n  params.addRequiredCoupledVar(\n      \"w\", \"The gradient of this variable will be used.\");\n    params.addRequiredCoupledVar(\n      \"c\", \"The value of this variable will be used.\");\n      params.addParam<Real>(\n      \"coef\", 1.0, \"Coefficent ($\\\\sigma$) multiplier for the coupled force term.\");\n\n\n  return params;\n}\n\nSurfaceTension::SurfaceTension(const InputParameters & parameters)\n  : Kernel(parameters),\n\n    _v_var(coupled(\"v\")),\n    _grad_c(coupledGradient(\"c\")),\n    _w(coupledValue(\"w\"))\n{\n}\n\nReal\nSurfaceTension::computeQpResidual()\n{\n\n  return _test[_i][_qp] * (_grad_c[_qp] * _w[_qp]) * _coef;\n\n}\n\nReal\nSurfaceTension::computeQpJacobian()\n{\n\n  return _test[_i][_qp] * (_grad_c[_qp] * _w[_qp] * _grad_phi[_j][_qp]) * _coef;\n}\n\nThe error that I get while compiling is as below.\n/home/ali/projects/moose/modules/navier_stokes/src/kernels/SurfaceTension.C: In member function 'virtual libMesh::Real SurfaceTension::computeQpResidual()':\n/home/ali/projects/moose/modules/navier_stokes/src/kernels/SurfaceTension.C:48:52: error: cannot convert 'libMesh::boostcopy::enable_if_c<true, libMesh::TypeVector<double> >::type' {aka 'libMesh::TypeVector<double>'} to 'libMesh::Real' {aka 'double'} in return\n   48 |   return _test[_i][_qp] * (_grad_c[_qp] * _w[_qp]) * _coef;\nmake: *** [/home/ali/projects/moose/framework/build.mk:145: /home/ali/projects/moose/modules/navier_stokes/build/unity_src/kernels_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\n\nI would highly appreciate it if you can help me to compute the residual for this source term which essentially is a vector.\nThanks,\nAli",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5137083",
                          "updatedAt": "2023-02-28T02:29:40Z",
                          "publishedAt": "2023-02-28T02:29:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "The source term is a vector?\nIs this contributing to a vector equation (conservation of momentum?)\nor a regular scalar equation.\nAre your variables vector variables? What are the variables?",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5137154",
                          "updatedAt": "2023-02-28T02:41:39Z",
                          "publishedAt": "2023-02-28T02:41:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "alimostafavi24"
                  },
                  "bodyText": "w and c are both scalar variables. Therefore w*grad(c) is a vector value and this is a source term for a vector equation.\nThanks,\nAli",
                  "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5137170",
                  "updatedAt": "2023-02-28T02:43:32Z",
                  "publishedAt": "2023-02-28T02:43:32Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "what is this equation if you dont mind writing it down\nwhat are you planning to use as the main variable for this equation",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5137178",
                          "updatedAt": "2023-02-28T02:45:11Z",
                          "publishedAt": "2023-02-28T02:45:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "w and c are both computed using phase field kernel.",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5137204",
                          "updatedAt": "2023-02-28T02:52:28Z",
                          "publishedAt": "2023-02-28T02:52:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "ok this top equation is indeed a vector equation, it s the conservation of momentum.\nWhat is u in your simulation? Are you using Navier Stokes? and which discretization within Navier Stokes?\nThis is important to advise you on which type of kernel to use to contribute to this equation",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5137484",
                          "updatedAt": "2023-02-28T03:51:54Z",
                          "publishedAt": "2023-02-28T03:51:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "alimostafavi24"
                          },
                          "bodyText": "I am using INSMassRZ, INSMomentumTimeDerivative and INSMomentumLaplaceFormRZ. In addition, my variables in momentum equation are velocity by its components (vel_x, vel_y) and pressure.\nThanks,\nAli",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-5156163",
                          "updatedAt": "2023-02-28T18:16:54Z",
                          "publishedAt": "2023-02-28T18:16:53Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "in that context, you want to use an integration by parts instead of computing the Laplacian",
                          "url": "https://github.com/idaholab/moose/discussions/23551#discussioncomment-6271062",
                          "updatedAt": "2023-06-24T22:21:33Z",
                          "publishedAt": "2023-06-24T22:21:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Execute the input file in Parallel",
          "author": {
            "login": "Judy-22"
          },
          "bodyText": "Dears,\nMy idea is to run an input file in parallel.\nI'm finding that for the same input file, the solve converges with one processor but it does not if I increase the number of processors.",
          "url": "https://github.com/idaholab/moose/discussions/24559",
          "updatedAt": "2023-06-24T22:12:33Z",
          "publishedAt": "2023-06-01T09:36:13Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe default preconditioning is different in parallel.\nYou ll want to set your preconditioning parameters manually\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24559#discussioncomment-6060434",
                  "updatedAt": "2023-06-01T11:54:19Z",
                  "publishedAt": "2023-06-01T11:54:18Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Judy-22"
                          },
                          "bodyText": "@GiudGiud,\nThanks for your reply.\nWhat do you mean by \"You ll want to set your preconditioning parameters manually\"? Do I need to select suitable preconditioning parameters?",
                          "url": "https://github.com/idaholab/moose/discussions/24559#discussioncomment-6061302",
                          "updatedAt": "2023-06-01T13:23:48Z",
                          "publishedAt": "2023-06-01T13:23:47Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yes.\nSome docs here\nhttps://mooseframework.inl.gov/source/executioners/Steady.html",
                          "url": "https://github.com/idaholab/moose/discussions/24559#discussioncomment-6061343",
                          "updatedAt": "2023-06-01T13:27:47Z",
                          "publishedAt": "2023-06-01T13:27:46Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Judy-22"
                          },
                          "bodyText": "Thanks.\nI have already read this document to find suitable preconditioning parameters because my problem is fully coupled with 5 coupled variables. With current preconditioning parameters and adaptative time-step, it's possible to go from 0.01 s to 120 s (simulation time 1600s).\nSo, do you think that it's possible to find easily adequate preconditioning parameters for parallel execution?",
                          "url": "https://github.com/idaholab/moose/discussions/24559#discussioncomment-6061542",
                          "updatedAt": "2023-06-01T13:47:55Z",
                          "publishedAt": "2023-06-01T13:47:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "For a given physics, your best bet is to study the litterature on how to solve it numerically, then implement what is recommended using petsc_options",
                          "url": "https://github.com/idaholab/moose/discussions/24559#discussioncomment-6271032",
                          "updatedAt": "2023-06-24T22:12:34Z",
                          "publishedAt": "2023-06-24T22:12:33Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Patch Size Information",
          "author": {
            "login": "Vandenbg"
          },
          "bodyText": "Hello, I am looking for more information on Patch Size used within the Mesh block. I am not able to find much information or any at all explaining what this parameter is. I have found only this information:\nhttps://mooseframework.inl.gov/source/mesh/FileMesh.html\nhttps://mooseframework.inl.gov/syntax/Mesh/index.html",
          "url": "https://github.com/idaholab/moose/discussions/24663",
          "updatedAt": "2023-06-24T22:11:16Z",
          "publishedAt": "2023-06-12T18:25:43Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThat's all we have. You can dive into the code to find out more.\nI've never used it\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24663#discussioncomment-6271028",
                  "updatedAt": "2023-06-24T22:11:16Z",
                  "publishedAt": "2023-06-24T22:11:15Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "LIBMESH_PETSC_NULLPTR",
          "author": {
            "login": "FatimahDzr"
          },
          "bodyText": "hello,\nI'm trying to install malamute on my pc, through compiling, first I got the following error:\n/mnt/c/moose/projects/malamute/moose/framework/src/base/MooseApp.C:411:48: error: 'class libMesh::Parallel::Communicator' has no member named 'sync_type'\nto solve that I used \"mamba update --all\", but then when I wanted to compile again, I've got this error which I couldn't solve:\n**/mnt/c/moose/projects/malamute/moose/framework/src/meshgenerators/MeshGenerator.C:285:18: error: 'class libMesh::Nemesis_IO' has no member named 'set_hdf5_writing'\n  285 |       nemesis_io.set_hdf5_writing(false);\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /mnt/c/moose/projects/malamute/moose/framework/build/unity_src/meshgenerators_Unity.C:66:\n/mnt/c/moose/projects/malamute/moose/framework/src/meshgenerators/SymmetryTransformGenerator.C: In member function 'virtual std::unique_ptr<libMesh::MeshBase> SymmetryTransformGenerator::generate()':\n/mnt/c/moose/projects/malamute/moose/framework/src/meshgenerators/SymmetryTransformGenerator.C:90:28: error: 'orient_elements' is not a member of 'libMesh::MeshTools::Modification'\n   90 |   MeshTools::Modification::orient_elements(*mesh);\n      |                            ^~~~~~~~~~~~~~~\nCompiling C++ (in opt mode) /mnt/c/moose/projects/malamute/moose/framework/build/unity_src/outputs_png_Unity.C...\nCompiling C++ (in opt mode) /mnt/c/moose/projects/malamute/moose/framework/build/unity_src/parser_Unity.C...\nCompiling C++ (in opt mode) /mnt/c/moose/projects/malamute/moose/framework/build/unity_src/partitioner_Unity.C...\nmake: *** [/mnt/c/moose/projects/malamute/moose/framework/build.mk:148: /mnt/c/moose/projects/malamute/moose/framework/build/unity_src/meshgenerators_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1\nmake: *** Waiting for unfinished jobs....\nIn file included from /mnt/c/moose/projects/malamute/moose/framework/build/unity_src/outputs_Unity.C:23:\n/mnt/c/moose/projects/malamute/moose/framework/src/outputs/PetscOutput.C: In member function 'virtual void PetscOutput::solveSetup()':\n/mnt/c/moose/projects/malamute/moose/framework/src/outputs/PetscOutput.C:151:76: error: 'LIBMESH_PETSC_NULLPTR' was not declared in this scope; did you mean 'LIBMESH_PETSCINT_FMT'?\n  151 |     PetscErrorCode ierr = SNESMonitorSet(snes, petscNonlinearOutput, this, LIBMESH_PETSC_NULLPTR);\n      |                                                                            ^~~~~~~~~~~~~~~~~~~~~\n      |                                                                            LIBMESH_PETSCINT_FMT\n/mnt/c/moose/projects/malamute/moose/framework/src/outputs/PetscOutput.C:158:71: error: 'LIBMESH_PETSC_NULLPTR' was not declared in this scope; did you mean 'LIBMESH_PETSCINT_FMT'?\n  158 |     PetscErrorCode ierr = KSPMonitorSet(ksp, petscLinearOutput, this, LIBMESH_PETSC_NULLPTR);\n      |                                                                       ^~~~~~~~~~~~~~~~~~~~~\n      |                                                                       LIBMESH_PETSCINT_FMT\nmake: *** [/mnt/c/moose/projects/malamute/moose/framework/build.mk:148: /mnt/c/moose/projects/malamute/moose/framework/build/unity_src/outputs_Unity.x86_64-conda-linux-gnu.opt.lo] Error 1**\n\nI would be grateful if someone help me with this issue",
          "url": "https://github.com/idaholab/moose/discussions/24693",
          "updatedAt": "2023-06-24T22:10:04Z",
          "publishedAt": "2023-06-14T20:06:24Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\ncan you to follow this, roughly\nmamba update --all\ncd ~/projects/moose\ngit commit -am \"quick save\"\ngit clean -xfd\ncd ../malamute\ngit commit -am \"quick save\"\ngit clean -xfd\n\nthen\nmake -j6\n\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/24693#discussioncomment-6178881",
                  "updatedAt": "2023-06-14T20:13:36Z",
                  "publishedAt": "2023-06-14T20:13:20Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Material property 'strain', requested by 'TensileStrainEnergy' is not defined on block 0",
          "author": {
            "login": "RWTHLHK"
          },
          "bodyText": "I need to define a custom AuxKernel to help me calculate the tensile strain part from a total strain tensor. But when I execute the simulation it reports this error. By looking at this discussion, I know the reason is that the block name is not the same as material property name. So what is the material_property name that ComputeSmallStrain declares? The following part is the corresponding part in my input file:\n[Variables]\n  [disp_x]\n    order = FIRST\n    family = LAGRANGE\n  []\n  [disp_y]\n    order = FIRST\n    family = LAGRANGE\n  []\n[]\n\n[AuxVariables]\n    [tensile_strain_energy]\n        family = LAGRANGE\n        order = FIRST\n    []\n[]\n\n[Kernels]\n  [TensorMechanics]\n    #Stress divergence kernels\n    displacements = 'disp_x disp_y'\n   []\n[]\n\n[AuxKernels]\n    [TensileStrainEnergy]\n        type = TensileStrainEnergyAux\n        rank_two_tensor = strain\n        variable = tensile_strain_energy\n        lambda = 120\n        mu = 80\n        block = 0\n    []\n[]\n[Materials]\n  [elasticity]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = 1e9\n    poissons_ratio = 0.3\n    block = 0\n  []\n  [./strain]\n    type = ComputeSmallStrain\n    displacements = 'disp_x disp_y'\n    block = 0\n  [../]\n  [./stress]\n    type = ComputeLinearElasticStress\n    block = 0\n  [../]\n[]",
          "url": "https://github.com/idaholab/moose/discussions/23345",
          "updatedAt": "2023-06-24T20:00:04Z",
          "publishedAt": "2023-02-05T14:55:17Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "RWTHLHK"
                  },
                  "bodyText": "i find it in the source codes. It is called mechanical_strain.",
                  "url": "https://github.com/idaholab/moose/discussions/23345#discussioncomment-4874845",
                  "updatedAt": "2023-02-05T15:15:00Z",
                  "publishedAt": "2023-02-05T15:14:59Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Other options that would have worked:\n\noutput all material properties to exodus by adding output=exodus to the materials blocks\nUse the show_material_properties option in the Debug block\n\nI m glad you had a look at the code though! Good reason to open source :)",
                          "url": "https://github.com/idaholab/moose/discussions/23345#discussioncomment-4877301",
                          "updatedAt": "2023-02-05T23:53:12Z",
                          "publishedAt": "2023-02-05T23:53:12Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "RWTHLHK"
                          },
                          "bodyText": "Oh, got it! Thanks a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/23345#discussioncomment-4883608",
                          "updatedAt": "2023-02-06T15:17:04Z",
                          "publishedAt": "2023-02-06T15:17:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "hugary1995"
                          },
                          "bodyText": "I would use elastic_strain instead of mechanical_strain. Though if your simulation is purely elastic, they are equivalent.",
                          "url": "https://github.com/idaholab/moose/discussions/23345#discussioncomment-4883673",
                          "updatedAt": "2023-02-06T15:23:02Z",
                          "publishedAt": "2023-02-06T15:23:01Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to use new system with lagrangian formulation in dynamic analysis?",
          "author": {
            "login": "xiaoruiqi"
          },
          "bodyText": "Hi, every one!\nI met an error when I was doing dynamic analysis by setting new_system = true in DynamicTensorMechanics kernel. The error message is as follows:\n*** ERROR ***\n The following error occurred in the object \"MOOSE Problem\", of type \"FEProblem\".\n  Material property 'stress', requested by 'TM_DynamicTensorMechanics0' is not defined on block plate\n  Material property 'Jacobian_mult', requested by 'TM_DynamicTensorMechanics0' is not defined on block plate\n\nHowever, the name of Cauchy stress and its jacobian should be \"cauchy_stress\" and \"cauchy_jacobian\"  for lagrangian formulation. Is it a bug and we just need to change the name from \"cauchy_stress\" and \"cauchy_jacobian\" to \"stress\" and \"Jacobian_mult\"?",
          "url": "https://github.com/idaholab/moose/discussions/23169",
          "updatedAt": "2023-06-24T19:55:47Z",
          "publishedAt": "2023-01-15T06:22:34Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nthe others will know more but I think you just need both the object that defines and the ones that consume this stress material property to be using the new system\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/23169#discussioncomment-4689205",
                  "updatedAt": "2023-01-15T11:24:02Z",
                  "publishedAt": "2023-01-15T11:24:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hugary1995"
                  },
                  "bodyText": "For the new system, use the action and the InertialForce kernel to define a dynamic analysis.\nNewmark-Beta and HHT-alpha time integrations are supported as usual. Rayleigh damping is not yet supported, hence eta in the InertialForce kernel has to be zero. Feel free to open an issue if you need Rayleigh damping.",
                  "url": "https://github.com/idaholab/moose/discussions/23169#discussioncomment-4692182",
                  "updatedAt": "2023-01-15T22:10:28Z",
                  "publishedAt": "2023-01-15T22:10:28Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "xiaoruiqi"
                          },
                          "bodyText": "Dear hugary1995,\nThe same error message still exists.  I guess the action you referred to should be Tensor Mechanics Master Action System, the settings are listed as follows:\n[Modules/TensorMechanics/DynamicMaster]\n  [all]\n    add_variables = true\n    newmark_beta = 0.25\n    newmark_gamma = 0.5 \n    density = 7750\n    new_system = true\n    incremental = false\n    strain = finite\n  []  \n[]\n\n[Kernels]\n  [inertia_x]\n    type = InertialForce\n    variable = disp_x\n    velocity = vel_x\n    acceleration = accel_x\n    beta = 0.25\n    gamma = 0.5\n  []\n  [inertia_y]\n    type = InertialForce\n    variable = disp_y\n    velocity = vel_y\n    acceleration = accel_y\n    beta = 0.25\n    gamma = 0.5\n  []\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/23169#discussioncomment-4693006",
                          "updatedAt": "2023-06-24T19:55:37Z",
                          "publishedAt": "2023-01-16T02:05:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}