{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyNC0wNC0wMlQwNzoyMjo0OS0wNTowMM4AATtt"
    },
    "edges": [
      {
        "node": {
          "title": "Material property 'matpp', requested by 'max_stress_excess' is not defined on",
          "author": {
            "login": "Rahim-Habibi"
          },
          "bodyText": "Hi all,\nin my simulation I need to track a material property by which to stop/start a step e.g. stoping injection or production from a geothermal reservoir. To track the material property, I have tried to use \"ElementExtremeMaterialProperty\" like the following but i faced up with an error.\nhere is the a part of input file:\n[Materials]\n[failure]\ntype = TigerFailure\nblock = 'fault_left fault_right fault_mid fault_bottom'\nproperty_name = 'matpp'\noutputs = exodus\n[]\n[]\n[Postprocessors]\n[./max_stress_excess]\ntype = ElementExtremeMaterialProperty\nmat_prop = matpp\nvalue_type = max\nexecute_on = ' timestep_end'\nblock = 'fault_left fault_right fault_mid fault_bottom'\n[../]\n[]\nand here is the error:\nMaterial property 'matpp', requested by 'max_stress_excess' is not defined on fault_left fault_right fault_mid fault_bottom\nThanks in advance\nRahim",
          "url": "https://github.com/idaholab/moose/discussions/27267",
          "updatedAt": "2024-04-04T12:50:37Z",
          "publishedAt": "2024-04-02T21:07:59Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nAre these locations for the postprocessor sidesets?\nI think you may need to pass an extra parameter to get material properties defined on sidesets\nCan you please check the Material main documentation page?\nguillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27267#discussioncomment-8989781",
                  "updatedAt": "2024-04-02T21:53:57Z",
                  "publishedAt": "2024-04-02T21:53:56Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Rahim-Habibi"
                          },
                          "bodyText": "Thanks Guillaume,\nThey are not sidesets. Actually they are 2D elements attached to sidesets.\nwhat parameter has to be passed? I looked for it here: https://mooseframework.inl.gov/syntax/Materials/index.html , but could not find.\nRahim",
                          "url": "https://github.com/idaholab/moose/discussions/27267#discussioncomment-8995004",
                          "updatedAt": "2024-04-03T09:50:55Z",
                          "publishedAt": "2024-04-03T09:50:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Can you use Debug/show_material_props to check that the names of the properties declared and used match?\nAnd check the block restrictions",
                          "url": "https://github.com/idaholab/moose/discussions/27267#discussioncomment-8997778",
                          "updatedAt": "2024-04-03T14:14:49Z",
                          "publishedAt": "2024-04-03T14:14:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Rahim-Habibi"
                          },
                          "bodyText": "I just add debug block in input file. The following shows the debug/show_material-props for \"fault_bottom\". I got the same for other subdomins i.e. fault_left fault_right fault_mid.\n\nthe parameter (Coulomb_Stress) I want to track on shows up here. but I got the error.",
                          "url": "https://github.com/idaholab/moose/discussions/27267#discussioncomment-8997970",
                          "updatedAt": "2024-04-03T14:40:11Z",
                          "publishedAt": "2024-04-03T14:28:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "It is noted that TigerFailure is a custom material class created by you. In its source file (TigerFailure.C ), you should have already computed and declared some properties you need, taking diffusivity and density as examples\uff1a\n_diffusivity(declareProperty<Real>(\"diffusivity\")),\n_density(declareProperty<Real>(\"density\")),\n\nThen if you want to track the maximum value of diffusivity, you can use this:\n[Materials]\n  [failure]\n    type = TigerFailure\n    block = 'fault_left fault_right fault_mid fault_bottom'\n    #property_name = 'matpp'   #comment out this line\n    #outputs = exodus         #comment out this line\n  []\n[]\n\n[Postprocessors]\n  [./max_stress_excess]\n      type = ElementExtremeMaterialProperty\n      mat_prop = diffusivity    # the property you declare in the source file\n      value_type = max\n      execute_on = ' timestep_end'\n      block = 'fault_left fault_right fault_mid fault_bottom'\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27267#discussioncomment-8998464",
                          "updatedAt": "2024-04-03T15:06:24Z",
                          "publishedAt": "2024-04-03T15:06:24Z",
                          "isAnswer": true
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "which material is supposed to be declaring matpp ? I dont see it in the Debug log.\nCould you please paste it as text next time, makes searching easier. With triple back-quotes, the formatting of text is fairly decent",
                          "url": "https://github.com/idaholab/moose/discussions/27267#discussioncomment-9005016",
                          "updatedAt": "2024-04-04T05:15:39Z",
                          "publishedAt": "2024-04-04T05:15:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Rahim-Habibi"
                          },
                          "bodyText": "Thanks @echo1115\nIt works in this way. But i did not expect it in this way because here (https://mooseframework.inl.gov/source/postprocessors/ElementExtremeMaterialProperty.html), it is mentioned to use \"property_name\". I followed the examples there.\nAny way, thanks.\n@GiudGiud you can close the discussion, the error did not show up after applying @echo1115 suggestion.\nRahim",
                          "url": "https://github.com/idaholab/moose/discussions/27267#discussioncomment-9006190",
                          "updatedAt": "2024-04-04T07:40:38Z",
                          "publishedAt": "2024-04-04T07:40:38Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "CZM Interface damage always shows zero",
          "author": {
            "login": "echo1115"
          },
          "bodyText": "Hi all,\nTo study the separation of interface between two connected objects (block1-block2), I fixed the bottom of block2 and applied a displacement load boundary condition at the upper edge of block1.\n\nWhen the computation is complete, the interface separation is observed from Paraview\n\nBut when I output the maximum value of the material property 'damage' at the interface, it remains 0.\n...\nTime Step 100, time = 1, dt = 0.01\n 0 Nonlinear |R| = 2.626068e-09\n      0 Linear |R| = 2.626068e-09\n      1 Linear |R| = 1.425100e-23\n 1 Nonlinear |R| = 2.222906e-12\n      0 Linear |R| = 2.222906e-12\n      1 Linear |R| = 1.389330e-26\n 2 Nonlinear |R| = 2.013779e-18\n Solve Converged!\n\nOutlier Variable Residual Norms:\n  disp_y: 1.971589e-18\n\nPostprocessor Values:\n+----------------+----------------------+----------------+\n| time           | interface_damage_max | load           |\n+----------------+----------------------+----------------+\n:                :                      :                :\n|   8.600000e-01 |         0.000000e+00 |   8.600000e-07 |\n|   8.700000e-01 |         0.000000e+00 |   8.700000e-07 |\n|   8.800000e-01 |         0.000000e+00 |   8.800000e-07 |\n|   8.900000e-01 |         0.000000e+00 |   8.900000e-07 |\n|   9.000000e-01 |         0.000000e+00 |   9.000000e-07 |\n|   9.100000e-01 |         0.000000e+00 |   9.100000e-07 |\n|   9.200000e-01 |         0.000000e+00 |   9.200000e-07 |\n|   9.300000e-01 |         0.000000e+00 |   9.300000e-07 |\n|   9.400000e-01 |         0.000000e+00 |   9.400000e-07 |\n|   9.500000e-01 |         0.000000e+00 |   9.500000e-07 |\n|   9.600000e-01 |         0.000000e+00 |   9.600000e-07 |\n|   9.700000e-01 |         0.000000e+00 |   9.700000e-07 |\n|   9.800000e-01 |         0.000000e+00 |   9.800000e-07 |\n|   9.900000e-01 |         0.000000e+00 |   9.900000e-07 |\n|   1.000000e+00 |         0.000000e+00 |   1.000000e-06 |\n+----------------+----------------------+----------------+\n\n\nHere shows my input:\n[Mesh]\n  [gmg]\n    type = GeneratedMeshGenerator\n    dim = 3\n    xmax = 400\n    ymax = 40\n    zmax = 200\n    nx = 20\n    ny = 10\n    nz = 15\n  []\n  [add_subdomain_1]\n    type = SubdomainBoundingBoxGenerator\n    input = gmg\n    block_id = 1\n    bottom_left = '0 20 0'\n    top_right = '400 40 200'\n  []\n  [add_subdomain_2]\n    type = SubdomainBoundingBoxGenerator\n    input = add_subdomain_1\n    block_id = 2\n    bottom_left = '0 0 0'\n    top_right = '400 20 200'\n  []\n  [split]\n    type = BreakMeshByBlockGenerator\n    input = add_subdomain_2\n    show_info = true\n  []\n  [top_line]\n    type = BoundingBoxNodeSetGenerator\n    input = split\n    bottom_left = '0 40 0'\n    top_right = '0 40 200'\n    new_boundary = 'top_line' #nodes_to_convert_to_sides\n  []\n  [create_sideset]\n    type = SideSetsFromNodeSetsGenerator\n    input = top_line\n  []\n  [scale]\n    type = TransformGenerator\n    input = create_sideset\n    transform = SCALE\n    vector_value ='1e-6 1e-6 1e-6'\n  []\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n[]\n        \n[Variables]\n  [./disp_x]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./disp_y]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./disp_z]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n[]\n\n[AuxVariables]\n  [./damage]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n\n[Functions]            \n  [function_load]\n    type = ParsedFunction\n    expression = '1.0e-6*t'   \n  []   \n[]\n    \n[Kernels]\n  [./TensorMechanics]\n    use_displaced_mesh = true\n  [../]\n[]\n\n[Modules/TensorMechanics/CohesiveZoneMaster]\n  [./czm]\n    strain = FINITE\n    boundary = 'interface'\n  [../]\n[]\n\n[AuxKernels]\n  [./damage]\n    type = MaterialRealAux\n    variable = damage\n    property = damage\n    #execute_on = timestep_end\n    boundary = ' interface'\n  [../]    \n[]\n\n[BCs]\n  [./fix_bottom_x]\n    type = DirichletBC\n    variable = disp_x\n    boundary = 'bottom'\n    value = 0.0\n  [../]\n  [./fix_bottom_y]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'bottom'\n    value = 0.0\n  [../]\n  [./fix_bottom_z]\n    type = DirichletBC\n    variable = disp_z\n    boundary = 'bottom'\n    value = 0.0\n  [../]\n\n  [./top]\n    type = FunctionDirichletBC\n    function = function_load\n    variable = disp_y\n    boundary = 'top_line'\n  [../]\n[]\n\n\n[Materials]\n  [./czm]\n    type = BiLinearMixedModeTraction\n    penalty_stiffness = 1.0e15 \n    GI_c = 25 \n    GII_c = 25 \n    normal_strength = 100e6\n    shear_strength = 100e6 \n    eta = 2\n    mixed_mode_criterion = POWER_LAW\n    boundary = 'interface'\n  [../]  \n  [./block1_Ev]\n    type =ComputeIsotropicElasticityTensor\n    youngs_modulus = 4.74e10\n    poissons_ratio = 0.23\n    block = 1\n  [../]\n  [./block2_Ev]\n    type =ComputeIsotropicElasticityTensor\n    block = 2\n    youngs_modulus = 3.4e11\n    poissons_ratio = 0.13\n  [../]\n  [./stress]\n    type = ComputeFiniteStrainElasticStress\n    block = '1 2'\n  [../] \n  [./strain]\n    type = ComputeFiniteStrain\n    block = '1 2'\n  [../]\n[]\n\n[Postprocessors]\n  [load]\n    type = FunctionValuePostprocessor\n    function = function_load\n  []\n    [./interface_damage_max]\n      type = SideExtremeValue\n      value_type = max\n      variable = damage\n      boundary = interface\n    [../]\n[]\n\n\n[Preconditioning]\n  [./smp]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Problem]\n    type = ReferenceResidualProblem\n[]\n\n[Outputs]\n  perf_graph = true\n  interval = 1\n  csv = true\n  exodus = true\n[]   \n\n\n[Executioner]\n  type = Transient\n  solve_type = 'NEWTON'\n  line_search = none\n\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'lu'\n\n  automatic_scaling = true\n\n  l_max_its = 2\n  l_tol = 1e-14\n  nl_max_its = 30\n  nl_rel_tol = 1e-50\n  nl_abs_tol = 1e-15\n  start_time = 0.0\n  dt = 0.01\n  end_time = 1.0 \n  dtmin = 0.01\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27098",
          "updatedAt": "2024-04-04T05:13:29Z",
          "publishedAt": "2024-03-15T02:31:37Z",
          "category": {
            "name": "Q&A Modules: Solid mechanics"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "amassaf"
                  },
                  "bodyText": "Hello,\nWere you able to find a solution to this?",
                  "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8950389",
                  "updatedAt": "2024-03-29T10:34:00Z",
                  "publishedAt": "2024-03-29T10:34:00Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Sorry, I haven't found a solution yet.",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8951030",
                          "updatedAt": "2024-03-29T12:04:08Z",
                          "publishedAt": "2024-03-29T12:04:07Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "If I recall correctly, we do not store the damage quantity on the interface/boundary. We save it as an AuxVariable. Try to output elemental value (rather than side value) of damage in the post processor.",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8951597",
                          "updatedAt": "2024-03-29T13:12:16Z",
                          "publishedAt": "2024-03-29T13:10:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Thanks for your suggestion @jiangwen84\nIn AuxKernels, the boundary = ' interface' must be set, otherwise it would shows:\n*** ERROR ***\nThe following error occurred in the object \"MOOSE Problem\", of type \"ReferenceResidualProblem\".\n\nMaterial property 'damage', requested by 'damage' is not defined on block 1\nMaterial property 'damage', requested by 'damage' is not defined on block 2\n\nThen I try to output elemental value of damage  in post processor:\n  [./damage_max_block1]\n    type = ElementExtremeValue\n    variable = damage\n    value_type = max\n    block = 1\n  [../]\n   [./damage_max_block2]\n    type = ElementExtremeValue\n    variable = damage\n    value_type = max\n    block = 2\n  [../]\n  [./damage_max]\n    type = ElementExtremeValue\n    variable = damage\n    value_type = max\n  [../]\n\nbut it still outputs zero:\nPostprocessor Values:\n+----------------+----------------+-------------------+-------------------+----------------+\n| time           | damage_max     | damage_max_block1 | damage_max_block2 | load           |\n+----------------+----------------+-------------------+-------------------+----------------+\n:                :                :                   :                   :                :\n|   1.860000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.860000e-06 |\n|   1.870000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.870000e-06 |\n|   1.880000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.880000e-06 |\n|   1.890000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.890000e-06 |\n|   1.900000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.900000e-06 |\n|   1.910000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.910000e-06 |\n|   1.920000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.920000e-06 |\n|   1.930000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.930000e-06 |\n|   1.940000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.940000e-06 |\n|   1.950000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.950000e-06 |\n|   1.960000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.960000e-06 |\n|   1.970000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.970000e-06 |\n|   1.980000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.980000e-06 |\n|   1.990000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   1.990000e-06 |\n|   2.000000e+00 |   0.000000e+00 |      0.000000e+00 |      0.000000e+00 |   2.000000e-06 |\n+----------------+----------------+-------------------+-------------------+----------------+\nHere is my new input:\n[Mesh]\n  [gmg]\n    type = GeneratedMeshGenerator\n    dim = 3\n    xmax = 400\n    ymax = 40\n    zmax = 200\n    nx = 20\n    ny = 10\n    nz = 15\n  []\n  [add_subdomain_1]\n    type = SubdomainBoundingBoxGenerator\n    input = gmg\n    block_id = 1\n    bottom_left = '0 20 0'\n    top_right = '400 40 200'\n  []\n  [add_subdomain_2]\n    type = SubdomainBoundingBoxGenerator\n    input = add_subdomain_1\n    block_id = 2\n    bottom_left = '0 0 0'\n    top_right = '400 20 200'\n  []\n  [split]\n    type = BreakMeshByBlockGenerator\n    input = add_subdomain_2\n    show_info = true\n    #surrounding_blocks = 2\n    #split_interface = true\n    #add_interface_on_two_sides = true\n  []\n  [top_line]\n    type = BoundingBoxNodeSetGenerator\n    input = split\n    bottom_left = '0 40 0'\n    top_right = '0 40 200'\n    new_boundary = 'top_line' #nodes_to_convert_to_sides\n  []\n  [create_sideset]\n    type = SideSetsFromNodeSetsGenerator\n    input = top_line\n  []\n  [scale]\n    type = TransformGenerator\n    input = create_sideset\n    transform = SCALE\n    vector_value ='1e-6 1e-6 1e-6'\n  []\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y disp_z'\n[]\n        \n[Variables]\n  [./disp_x]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./disp_y]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n  [./disp_z]\n    order = FIRST\n    family = LAGRANGE\n  [../]\n[]\n\n[AuxVariables]\n  [./damage]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n\n[Functions]            \n  [function_load]\n    type = ParsedFunction\n    expression = '1.0e-6*t'      \n  []   \n[]\n    \n[Kernels]\n  [./TensorMechanics]\n    use_displaced_mesh = true\n  [../]\n[]\n\n[Modules/TensorMechanics/CohesiveZoneMaster]\n  [./czm]\n    strain = FINITE\n    boundary = 'interface'\n  [../]\n[]\n\n[AuxKernels]\n  [./damage]\n    type = MaterialRealAux\n    variable = damage\n    property = damage\n    boundary = ' interface'\n  [../]    \n[]\n\n[BCs]\n  [./fix_bottom_x]\n    type = DirichletBC\n    variable = disp_x\n    boundary = 'bottom'\n    value = 0.0\n  [../]\n  [./fix_bottom_y]\n    type = DirichletBC\n    variable = disp_y\n    boundary = 'bottom'\n    value = 0.0\n  [../]\n  [./fix_bottom_z]\n    type = DirichletBC\n    variable = disp_z\n    boundary = 'bottom'\n    value = 0.0\n  [../]\n\n  [./top]\n    type = FunctionDirichletBC\n    function = function_load\n    variable = disp_y\n    boundary = 'top_line'\n  [../]\n[]\n\n\n[Materials]\n  [./czm]\n    type = BiLinearMixedModeTraction\n    penalty_stiffness = 1.0e15 \n    GI_c = 25 \n    GII_c = 25 \n    normal_strength = 100e6\n    shear_strength = 100e6 \n    eta = 2\n    mixed_mode_criterion = POWER_LAW\n    boundary = 'interface'\n  [../]  \n  [./block1_Ev]\n    type =ComputeIsotropicElasticityTensor\n    youngs_modulus = 4.74e10\n    poissons_ratio = 0.23\n    block = 1\n  [../]\n  [./block2_Ev]\n    type =ComputeIsotropicElasticityTensor\n    block = 2\n    youngs_modulus = 3.4e11\n    poissons_ratio = 0.13\n  [../]\n  [./stress]\n    type = ComputeFiniteStrainElasticStress\n    block = '1 2'\n  [../] \n  [./strain]\n    type = ComputeFiniteStrain\n    block = '1 2'\n  [../]\n[]\n\n[Postprocessors]\n  [load]\n    type = FunctionValuePostprocessor\n    function = function_load\n  []\n    #[./interface_damage_max]\n    #  type = SideExtremeValue\n    #  value_type = max\n    #  variable = damage\n    #  #boundary = interface\n    #[../]\n  [./damage_max_block1]\n    type = ElementExtremeValue\n    variable = damage\n    value_type = max\n    block = 1\n  [../]\n   [./damage_max_block2]\n    type = ElementExtremeValue\n    variable = damage\n    value_type = max\n    block = 2\n  [../]\n  [./damage_max]\n    type = ElementExtremeValue\n    variable = damage\n    value_type = max\n  [../]\n[]\n\n\n[Preconditioning]\n  [./smp]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Problem]\n    type = ReferenceResidualProblem\n[]\n\n[Outputs]\n  perf_graph = true\n  #execute_on = timestep_end\n  interval = 1\n  csv = true\n  exodus = true\n[]   \n\n[Executioner]\n  type = Transient\n  solve_type = 'NEWTON'\n  line_search = none\n\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'lu'\n\n  automatic_scaling = true\n\n  l_max_its = 2\n  l_tol = 1e-14\n  nl_max_its = 30\n  nl_rel_tol = 1e-50\n  nl_abs_tol = 1e-15\n  start_time = 0.0\n  dt = 0.01\n  end_time = 2.0 #1.0 \n  dtmin = 0.01\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8952588",
                          "updatedAt": "2024-03-30T02:49:22Z",
                          "publishedAt": "2024-03-29T14:58:46Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "amassaf"
                  },
                  "bodyText": "It worked for me using this :\n[AuxVariables]\n   [damage]\n    order = CONSTANT\n    family = MONOMIAL\n  [../]\n[]\n\n[AuxKernels]\n  [damage]\n    type = MaterialRealAux\n    variable = damage\n    property = damage\n    execute_on = timestep_end\n    boundary = ' interface'\n  [../]\n[]\n\n[Postprocessors]\n  [damage]\n    type = ElementAverageValue\n    variable = damage\n  [../]\n[]\n\nIt took some time though for the damage to increase, but I guess this has to do with my material properties.",
                  "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8954174",
                  "updatedAt": "2024-03-29T17:16:41Z",
                  "publishedAt": "2024-03-29T17:16:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Thanks @amassaf , I tried ElementAverageValue but it still shows zero. Maybe there is something wrong with my input file, but I can't find it.",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8957017",
                          "updatedAt": "2024-03-30T02:52:19Z",
                          "publishedAt": "2024-03-30T02:52:19Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Even when I tried to output damage in moose's built-in example bilinear_mixed_scale_strength.i, it was also 0.\nHere is the input of bilinear_mixed_scale_strength.i :\n[Mesh]\n  [msh]\n    type = GeneratedMeshGenerator\n    dim = 2\n    xmax = 1\n    ymax = 2\n    nx = 5\n    ny = 10\n  []\n  [block1]\n    type = SubdomainBoundingBoxGenerator\n    input = 'msh'\n    bottom_left = '0 0 0'\n    top_right = '1 1 0'\n    block_id = 1\n    block_name = 'block1'\n  []\n  [block2]\n    type = SubdomainBoundingBoxGenerator\n    input = 'block1'\n    bottom_left = '0 1 0'\n    top_right = '1 2 0'\n    block_id = 2\n    block_name = 'block2'\n  []\n  [split]\n    type = BreakMeshByBlockGenerator\n    input = block2\n  []\n  [top_node]\n    type = ExtraNodesetGenerator\n    coord = '0 2 0'\n    input = split\n    new_boundary = top_node\n  []\n  [bottom_node]\n    type = ExtraNodesetGenerator\n    coord = '0 0 0'\n    input = top_node\n    new_boundary = bottom_node\n  []\n[]\n\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n[]\n\n[Modules]\n  [TensorMechanics]\n    [Master]\n      generate_output = 'stress_yy'\n      [all]\n        strain = FINITE\n        add_variables = true\n        use_automatic_differentiation = true\n        decomposition_method = TaylorExpansion\n      []\n    []\n  []\n[]\n\n[BCs]\n  [fix_x]\n    type = DirichletBC\n    preset = true\n    value = 0.0\n    boundary = bottom_node\n    variable = disp_x\n  []\n\n  [fix_top]\n    type = DirichletBC\n    preset = true\n    boundary = top\n    variable = disp_x\n    value = 0\n  []\n\n  [top]\n    type = FunctionDirichletBC\n    boundary = top\n    variable = disp_y\n    function = 'if(t<=0.3,t,if(t<=0.6,0.3-(t-0.3),0.6-t))'\n    preset = true\n  []\n\n  [bottom]\n    type = DirichletBC\n    boundary = bottom\n    variable = disp_y\n    value = 0\n    preset = true\n  []\n[]\n\n[AuxVariables]\n  [mode_mixity_ratio]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n  [damage]\n    order = CONSTANT\n    family = MONOMIAL\n  []\n[]\n\n[AuxKernels]\n  [mode_mixity_ratio]\n    type = MaterialRealAux\n    variable = mode_mixity_ratio\n    property = mode_mixity_ratio\n    execute_on = timestep_end\n    boundary = interface\n  []\n  [damage]\n    type = MaterialRealAux\n    variable = damage\n    property = damage\n    execute_on = timestep_end\n    boundary = interface\n  []\n[]\n\n[Modules/TensorMechanics/CohesiveZoneMaster]\n  [czm_ik]\n    boundary = 'interface'\n  []\n[]\n\n[Materials]\n  [stress]\n    type = ADComputeFiniteStrainElasticStress\n  []\n  [elasticity_tensor]\n    type = ADComputeElasticityTensor\n    fill_method = symmetric9\n    C_ijkl = '1.684e5 0.176e5 0.176e5 1.684e5 0.176e5 1.684e5 0.754e5 0.754e5 0.754e5'\n  []\n  [normal_strength]\n    type = GenericFunctionMaterial\n    prop_names = 'N'\n    prop_values = 'if(x<0.5,1,100)*1e4'\n  []\n  [czm]\n    type = BiLinearMixedModeTraction\n    boundary = 'interface'\n    penalty_stiffness = 1e6\n    GI_c = 1e3\n    GII_c = 1e2\n    normal_strength = N\n    shear_strength = 1e3\n    displacements = 'disp_x disp_y'\n    eta = 2.2\n    viscosity = 1e-3\n  []\n[]\n\n[Postprocessors] #added\n  [./damage_max]\n    type = ElementExtremeValue\n    variable = damage\n    value_type = max\n  [../]\n  [./damage_ave]\n    type = ElementAverageValue\n    variable = damage\n  [../]\n[]\n\n[Preconditioning]\n  [smp]\n    type = SMP\n    full = true\n  []\n[]\n\n[Executioner]\n  type = Transient\n\n  solve_type = 'NEWTON'\n  line_search = none\n\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'lu'\n\n  automatic_scaling = true\n\n  l_max_its = 2\n  l_tol = 1e-14\n  nl_max_its = 30\n  nl_rel_tol = 1e-10\n  nl_abs_tol = 1e-10\n  start_time = 0.0\n  dt = 0.01\n  end_time = 0.05\n  dtmin = 0.01\n[]\n\n[Outputs]\n  exodus = true\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8957133",
                          "updatedAt": "2024-03-30T03:27:55Z",
                          "publishedAt": "2024-03-30T03:27:54Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "amassaf"
                          },
                          "bodyText": "This is because the end_time is too early, if you increase it you'll see damage increase :\nTime Step 16, time = 0.16, dt = 0.01\n 0 Nonlinear |R| = 1.005167e-02\n      0 Linear |R| = 1.005167e-02\n      1 Linear |R| = 9.659680e-18\n 1 Nonlinear |R| = 2.763960e-04\n      0 Linear |R| = 2.763960e-04\n      1 Linear |R| = 1.980941e-19\n 2 Nonlinear |R| = 1.739959e-07\n      0 Linear |R| = 1.739959e-07\n      1 Linear |R| = 1.467677e-22\n 3 Nonlinear |R| = 7.375892e-14\n Solve Converged!\n\nPostprocessor Values:\n+----------------+----------------+\n| time           | damage         |\n+----------------+----------------+\n:                :                :\n|   2.000000e-02 |   0.000000e+00 |\n|   3.000000e-02 |   0.000000e+00 |\n|   4.000000e-02 |   0.000000e+00 |\n|   5.000000e-02 |   0.000000e+00 |\n|   6.000000e-02 |   0.000000e+00 |\n|   7.000000e-02 |   0.000000e+00 |\n|   8.000000e-02 |   0.000000e+00 |\n|   9.000000e-02 |   0.000000e+00 |\n|   1.000000e-01 |   0.000000e+00 |\n|   1.100000e-01 |   0.000000e+00 |\n|   1.200000e-01 |   0.000000e+00 |\n|   1.300000e-01 |   0.000000e+00 |\n|   1.400000e-01 |   1.076705e-02 |\n|   1.500000e-01 |   2.543058e-02 |\n|   1.600000e-01 |   3.550804e-02 |\n+----------------+----------------+\n\n\n\n[Executioner]\n  type = Transient\n\n  solve_type = 'NEWTON'\n  line_search = none\n\n  petsc_options_iname = '-pc_type'\n  petsc_options_value = 'lu'\n\n  automatic_scaling = true\n\n  l_max_its = 2\n  l_tol = 1e-14\n  nl_max_its = 30\n  nl_rel_tol = 1e-10\n  nl_abs_tol = 1e-10\n  start_time = 0.0\n  dt = 0.01\n  end_time = 1 \n  dtmin = 0.01\n[]\n\n[Postprocessors]\n  [damage]\n    type = ElementAverageValue\n    variable = damage\n  [../]\n[]",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8957498",
                          "updatedAt": "2024-03-30T05:44:50Z",
                          "publishedAt": "2024-03-30T05:44:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "amassaf"
                          },
                          "bodyText": "It also works using the ElementExtremeValue ofc",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8957511",
                          "updatedAt": "2024-03-30T05:51:04Z",
                          "publishedAt": "2024-03-30T05:51:04Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Thanks for your reply! @amassaf After increasing the end_time, I found that not only is the use of elemental value, using SideExtremeValue or InterfaceAverageVariableValuePostprocessor also can see the damage output.\nNow there is another question that makes me confused:\nwhen t=0.1, the damage in case bilinear_mixed_scale_strength.i is 0, but from paraview, the interface looks has been separated, is this just a visual illusion?",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8957598",
                          "updatedAt": "2024-03-30T06:18:43Z",
                          "publishedAt": "2024-03-30T06:18:43Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "amassaf"
                          },
                          "bodyText": "I think this is due to the material property... the damage will only be >0 if delta_m > delta_0 and the set penalty stiffness and normal/shear strength would give a delta around 1e-2 which is whydamage will be > 0 when delta_m > 1e-2",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8996863",
                          "updatedAt": "2024-04-03T13:04:21Z",
                          "publishedAt": "2024-04-03T13:04:21Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "echo1115"
                          },
                          "bodyText": "Thank you! @amassaf\nI understand that damage will only be greater than 0 when _delta_m is greater than _delta_init, and the interface will split when the damage reaches 1.\n$\\delta_m^{max}&gt;\\delta_m^0\\to$ $damage&gt;0$ $\\dots$ then  $damage=1\\to 'interface-split'$\nMy question is that I seem to have seen 'interface-split' in paraview at t=0.1, but  the damage doesn't reach 1, so the  'interface-split'  is actually an illusion?",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8997908",
                          "updatedAt": "2024-04-03T14:24:32Z",
                          "publishedAt": "2024-04-03T14:24:31Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "amassaf"
                          },
                          "bodyText": "@jiangwen84 @GiudGiud",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-8998465",
                          "updatedAt": "2024-04-03T15:06:29Z",
                          "publishedAt": "2024-04-03T15:06:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Not my field of expertise sorry",
                          "url": "https://github.com/idaholab/moose/discussions/27098#discussioncomment-9004999",
                          "updatedAt": "2024-04-04T05:13:30Z",
                          "publishedAt": "2024-04-04T05:13:29Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Convergence Issues for Multiapp Fracture Flow Example with Multiphase Mass Transfer",
          "author": {
            "login": "zerog981"
          },
          "bodyText": "Dear MOOSE experts,\nI'm currently trying to adopt the Multiapp Fracture Flow Example for use in a larger project concerning CO2 injection into supercritical water. I was able to implement mass transfer as suggested in the corresponding section, but I keep running into convergence issues.\nAll files can be found in the following repository: https://github.com/zerog981/moose-fracture-example\nThe original example is bundled with Moose (https://github.com/idaholab/moose/tree/next/modules/porous_flow/examples/multiapp_fracture_flow/3dFracture).\nHere is a list of variations I tried:\n\nAll different sizes of meshes.\nReducing Nonlinear absolute tolerance down to 1e-4 with no success.\nChanging fluid properties to SimpleFluidProperties. This does improve the situation, but being in the supercritical region requires more accurate equations of state. I also tried using TabulatedFluidProperties, but then I get errors about MOOSE trying to sample out of range.\nIf mass transfer is deactivated and only conductive heat transfer is considered, the simulation runs without problems.\nInstead of including the varying fracture porosity from the example, I assumed constant aperture for simplification (knowing that this is quite different in reality).\n\nBefore crashing, the exchange of gas into the matrix is clearly visible (after about 170s into the simulation):\n\nI'm still quite new to MOOSE and this is my first project, so any help or guidance is highly appreciated. Please tell me if you need more information.\nThis is the log:\nfailure.log",
          "url": "https://github.com/idaholab/moose/discussions/27212",
          "updatedAt": "2024-04-04T05:12:06Z",
          "publishedAt": "2024-03-28T14:55:44Z",
          "category": {
            "name": "Q&A Modules: Porous Flow"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\n\nbut then I get errors about MOOSE trying to sample out of range.\n\ndid you try to extend the range of the tabulations? also these might not matter if the final converged values are within range.\nThe nonlinear solver can visit non-physical regions during the iteration process.\nCan you try some of the techniques in there and report back?\nhttps://mooseframework.inl.gov/moose/application_usage/failed_solves.html\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27212#discussioncomment-8941787",
                  "updatedAt": "2024-03-28T14:58:25Z",
                  "publishedAt": "2024-03-28T14:58:25Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "zerog981"
                          },
                          "bodyText": "Thank you @GiudGiud for your swift reply, yes, I tried extending the range already to the maximum without success. In the end I was using the EOS objects directly (CO2FluidProperties and Water97FluidProperties).\n\nhttps://mooseframework.inl.gov/moose/application_usage/failed_solves.html\nI'm aware of that page, but I went through it again:\n\n\nInitial conditions seem to be fine to me\nI tried including line_search = 'none' without success\nFrom show_var_residual_norms I saw that temperature residuals are off by 5-6 orders of magnitude (despite automatic_scaling being true). So I added temperature scaling of 1e-6 and deactivated automatic scaling. The convergence issue is not affected by this.\n\nChris",
                          "url": "https://github.com/idaholab/moose/discussions/27212#discussioncomment-8943038",
                          "updatedAt": "2024-03-28T16:31:56Z",
                          "publishedAt": "2024-03-28T16:31:55Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "did you try reducing the problem to a few thousand DOFs and check if SVD gets you a decent condition number\nis the linear solve or the nonlinear solve not converging?",
                          "url": "https://github.com/idaholab/moose/discussions/27212#discussioncomment-8959755",
                          "updatedAt": "2024-03-30T14:38:40Z",
                          "publishedAt": "2024-03-30T14:38:39Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "zerog981"
                          },
                          "bodyText": "I used a strong machine to not have to reduce the DOFs (cannot edit the fracture network meshing), and I got condition numbers as high as 1e12 (fracture network) and 1e11 (matrix). I suppose that's too high?\nOccasionally I see linear solves fail, but this is solved after one timestep cut. The real failure is caused by the nonlinear solve not converging.\nAs reference for SVD: https://mooseframework.inl.gov/moose/application_usage/failed_solves.html",
                          "url": "https://github.com/idaholab/moose/discussions/27212#discussioncomment-9000798",
                          "updatedAt": "2024-04-03T18:41:31Z",
                          "publishedAt": "2024-04-03T18:39:41Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "1e12 might be fine actually. Maybe with a customized nonlinear scaling (scaling parameter for each parameter) you might be able to get convergence?\nUsing Debug/show_var_residual_norms can you find a few good scaling parameters for each variable (equation really)",
                          "url": "https://github.com/idaholab/moose/discussions/27212#discussioncomment-9004987",
                          "updatedAt": "2024-04-04T05:12:06Z",
                          "publishedAt": "2024-04-04T05:12:05Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Combining two sets of meshs with overlapping.",
          "author": {
            "login": "Meghasemi-96"
          },
          "bodyText": "Hello,\nI am having trouble combining two sets of mesh models that I extracted from images. Both sets are the same size and represent different parts of an object, but they share a common region in both images. As shown in attached file, my original structure has three revgions. To have a correct mesh, I divided the structure to two parts (righ hand side image of attached files). I got two separate meshs (each 1000 elements) for these images and then I combineed them, followed by renaming the block IDs. After the combing it seems that two sets of meshes are not merged together and the number of elements were doubled (2000 elements). How can I correct it?\nThanks.\n\nFollowing is the code:\n\n[Mesh]\n    [generate]\n    type = FileMeshGenerator\n    file = image_2d_out1.e\n    []\n    [image]\n      type = ImageSubdomainGenerator\n      input = generate\n      threshold = 90\n      file = 1.png\n    []\n    [interface]\n      type = SideSetsBetweenSubdomainsGenerator\n      input = image\n      primary_block = 0\n      paired_block = 1\n      new_boundary = 10\n    []\n    [generate1]\n      type = FileMeshGenerator\n      file = image_2d_out2.e\n      []\n      [image1]\n        type = ImageSubdomainGenerator\n        input = generate1\n       threshold = 90   \n      file = 2.png\n      []\n      [interface1]\n        type = SideSetsBetweenSubdomainsGenerator\n        input = image1\n        primary_block = 0\n        paired_block = 1\n        new_boundary = 10\n      []\n    [next1]\n      type = RenameBlockGenerator\n      input = interface1\n      old_block = '0 1'\n      new_block = '0 2'\n    []\n    [cmn]\n      type = CombinerGenerator\n      inputs = 'interface next1'\n    []\n  []\n  [Variables]\n    [u]\n    []\n  []\n  [Problem]\n    type = FEProblem\n    solve = false\n  []\n  [Executioner]\n    type = Steady\n  []\n  [Outputs]\n    file_base = image_meshsecond\n    execute_on = 'timestep_end'\n    exodus = true\n  []\n\nimage_2d_out1.e and  image_2d_out2.e were also generated by this code (I checked and they were correct):\n[Mesh]\n  [gen]\n    type = GeneratedMeshGenerator\n    dim = 2\n    nx = 100\n    ny = 100  []\n  [image]\n    input = gen\n    type = ImageSubdomainGenerator\n    file = 2.png\n    file_suffix = png\n    threshold = 90\n  []\n[]\n[Variables]\n  [u]\n  []\n[]\n[Problem]\n  type = FEProblem\n  solve = false\n[]\n[Executioner]\n  type = Transient\n  num_steps = 1\n  dt = 0.1\n[]\n[Outputs]\n  exodus = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27269",
          "updatedAt": "2024-04-03T14:25:31Z",
          "publishedAt": "2024-04-03T09:57:03Z",
          "category": {
            "name": "Q&A Meshing"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nThe overlap must be removed from the mesh, you can\u2019t have overlapping elements during the simulation.\nThe meshRepairGenerator might be able to help, once the mesh is stitched properly.\nhttps://mooseframework.inl.gov/source/meshgenerators/MeshRepairGenerator.html\nyou ll want to use a StitchedMeshGenerator instead of the combiner to make sure the meshes get properly attached\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27269#discussioncomment-8997922",
                  "updatedAt": "2024-04-04T05:17:49Z",
                  "publishedAt": "2024-04-03T14:25:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to convert the value of AuxVariable to [Function] block?",
          "author": {
            "login": "SomnusYu"
          },
          "bodyText": "Hi all,\nI would like to convert AuxVariable value to a function, and then use this function in [Pressure] block of SolidMechanics Module. But I cannot find any type of function to do this.\nCould anyone kindly help me? Thanks!",
          "url": "https://github.com/idaholab/moose/discussions/27271",
          "updatedAt": "2024-04-03T14:17:47Z",
          "publishedAt": "2024-04-03T13:01:21Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "maxnezdyur"
                  },
                  "bodyText": "I think you can use the https://mooseframework.inl.gov/syntax/BCs/CoupledPressure/ action instead. This uses the AuxVariable directly.",
                  "url": "https://github.com/idaholab/moose/discussions/27271#discussioncomment-8997391",
                  "updatedAt": "2024-04-03T13:44:29Z",
                  "publishedAt": "2024-04-03T13:44:29Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "SomnusYu"
                          },
                          "bodyText": "Thanks!",
                          "url": "https://github.com/idaholab/moose/discussions/27271#discussioncomment-8997451",
                          "updatedAt": "2024-04-03T13:49:02Z",
                          "publishedAt": "2024-04-03T13:49:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Yeah functions cannot depend on variables. They should only depend on space and time",
                          "url": "https://github.com/idaholab/moose/discussions/27271#discussioncomment-8997812",
                          "updatedAt": "2024-04-03T14:17:47Z",
                          "publishedAt": "2024-04-03T14:17:47Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "UserObject with an list of sub-objects",
          "author": {
            "login": "jmeier"
          },
          "bodyText": "Dear Moose community,\nI'd like to build an UserObject with an list of nested sub-objects. I hope you can point me in the right direction.\nI know how to register register 'simple' parameters for a user object, e.g.:\n  params.addParam<FileName>(\"data_file\", \"File holding CSV data\");\nThis allows me to use this parameter in my input file (*.i - file) like this:\n  [UserObjects]\n    [MyUserObject1]\n      type = 'MyUserObject'\n      data_file = 'bla.txt'\n    []\n  []\n\nNow I want to build something like this: my user object contains a list of sub-objects beside my 'regular' properties\n  [UserObjects]\n    [MyUserObject1]\n      type = 'MyUserObjectType'\n      data_file = 'bla.txt'\n      [MySubObject1]\n        type = 'MySubObjectTypeA'\n        propA = 'blubb'\n      []\n      [MySubObject2]\n        type = 'MySubObjectTypeB'\n        propY = 888\n      []\n      [MySubObject2]\n        type = 'MySubObjectTypeC'\n        propZ = 123.2\n      []\n      # any more sub-objects as desired by the user...\n    []\n  []\n\nIn my c++ object of type 'MyUserObjectType' it would be nice to have all sub-objects in an list/array/vector.\nHow can I realize this?\nKind regards,\nJ\u00f6rg",
          "url": "https://github.com/idaholab/moose/discussions/27177",
          "updatedAt": "2024-04-03T14:02:24Z",
          "publishedAt": "2024-03-22T14:54:11Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nYou want to create a new Action. See this page\nhttps://mooseframework.inl.gov/source/actions/Action.html\nand this part of the tutorial:\nhttps://mooseframework.inl.gov/workshop/index.html#/57\nYou probably want to create a new syntax for adding user objects. In this case I would recommend differentiating it from our\n[UserObjects]\n\nblock to avoid confusion and to avoid having the Parser read [UserObjects/MyUserObject] and create a regular user object.\nSo maybe\n[NestedUserObjects]\n  [parent_uo]\n    [child1]\n    []\n    [child2]\n    []\n  []\n[]",
                  "url": "https://github.com/idaholab/moose/discussions/27177#discussioncomment-8879409",
                  "updatedAt": "2024-03-22T15:10:56Z",
                  "publishedAt": "2024-03-22T15:10:55Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "jmeier"
                          },
                          "bodyText": "Dear @GiudGiud\nIn the action (more specific in the \"act\" method) creating \"child1\" and \"child2\", how do I get the superordinated \"parent_uo\"? I know about _type and _name - but how about the \"parent\"?",
                          "url": "https://github.com/idaholab/moose/discussions/27177#discussioncomment-8985461",
                          "updatedAt": "2024-04-02T15:08:01Z",
                          "publishedAt": "2024-04-02T15:08:00Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Not sure but I would try\n\naction warehouse to get the name of the current syntax (might have to use the task for that)\nGet the user object (a pointer to) from the problem",
                          "url": "https://github.com/idaholab/moose/discussions/27177#discussioncomment-8986653",
                          "updatedAt": "2024-04-02T16:42:01Z",
                          "publishedAt": "2024-04-02T16:42:01Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jmeier"
                          },
                          "bodyText": "Thanks for the help, @GiudGiud. Now I do the following (within the act method):\n\nFrom the action warehouse I get the current action name (getCurrentActionName). For child1 this string reads NestedUserObjects/parent_uo/child1\nOne can split this string using / as a delimiter.\nUsing _problem->getUserObject<...>(\"parent_uo\") one can now get the parental user object.",
                          "url": "https://github.com/idaholab/moose/discussions/27177#discussioncomment-8997635",
                          "updatedAt": "2024-04-03T14:02:24Z",
                          "publishedAt": "2024-04-03T14:02:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Convergence issue",
          "author": {
            "login": "woojinjung-opt"
          },
          "bodyText": "I'm making phase-field based app using KKS. However, the solution does not converge. Also, there is error related with ConstantDT. Could you give me some help? This is the output message :\nTime Step 1, time = 1.49012e-12, dt = 1.49012e-12\n0 Nonlinear |R| = 1.920919e-05\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to FACTOR_NUMERIC_ZEROPIVOT\nNonlinear solve did not converge due to DIVERGED_LOCAL_MIN iterations 0\nSolve Did NOT Converge!\nAborting as solve did not converge\nTime Step 1, time = 1e-12, dt = 1e-12\n0 Nonlinear |R| = 1.920919e-05\nLinear solve did not converge due to DIVERGED_PC_FAILED iterations 0\nPC failed due to FACTOR_NUMERIC_ZEROPIVOT\nNonlinear solve did not converge due to DIVERGED_LOCAL_MIN iterations 0\nSolve Did NOT Converge!\nAborting as solve did not converge\n*** ERROR ***\nThe following error occurred in the object \"ConstantDT\", of type \"ConstantDT\".\nSolve failed and timestep already at or below dtmin, cannot continue!\nI'll attach full input file.\nredistribution.txt",
          "url": "https://github.com/idaholab/moose/discussions/27034",
          "updatedAt": "2024-04-03T03:26:42Z",
          "publishedAt": "2024-03-08T09:25:35Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nPlease follow the advice on the troubleshooting failed page on the moose website and report on what you tried\nGuillaume",
                  "url": "https://github.com/idaholab/moose/discussions/27034#discussioncomment-8721253",
                  "updatedAt": "2024-03-08T15:16:41Z",
                  "publishedAt": "2024-03-08T15:16:40Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Leeyouan"
                          },
                          "bodyText": "Sorry for late.\nI tried some method. There is issue on initial condition & unit system.\nActually, I have another question in Cahn-Hilliard equation.\nWhat I want is that adapting temperature gradient effect on Cahn-Hilliard equation.\nThis is the equation.\n\nHow can I add temperature gradient effect in MOOSE?\nThank you.\nWoojin",
                          "url": "https://github.com/idaholab/moose/discussions/27034#discussioncomment-8782150",
                          "updatedAt": "2024-03-14T06:46:11Z",
                          "publishedAt": "2024-03-14T06:46:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nYou'll want to create a new kernel if there is none implemented in the phase field module.\nThis does not seem too complex to implement but it would be worth looking through examples. Search for a \"T\" or \"temperature\" variable defined in CH inputs\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/27034#discussioncomment-8789673",
                          "updatedAt": "2024-03-14T17:47:13Z",
                          "publishedAt": "2024-03-14T17:47:13Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Leeyouan"
                          },
                          "bodyText": "Thank you for replying.\nI'm not making kernel for that. But I'm just wondering that is it possible to adapt like this?\n  [./CHBulk]\n    type = KKSSplitCHCRes\n    variable = c\n    ca       = cab\n    fa_name  = fab\n    w        = w\n  [../]\n\n  [./SoretDiffusion]\n    type = SoretDiffusion\n    variable = w\n    c = c\n    T = T\n    diff_name = M_t\n    Q_name = Qstar\n  [../]\n\n  [./dcdt]\n    type = CoupledTimeDerivative\n    variable = w\n    v = c\n  [../]\n  [./ckernel]\n    type = SplitCHWRes\n    mob_name = M\n    variable = w\n  [../]\n\n  [./HeatConduction]\n    type = MatDiffusion\n    variable = T\n    diffusivity = k\n  [../]\n\nI'm really appreciate to your answer.\nWoojin",
                          "url": "https://github.com/idaholab/moose/discussions/27034#discussioncomment-8922031",
                          "updatedAt": "2024-03-27T14:37:29Z",
                          "publishedAt": "2024-03-27T01:07:02Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "GiudGiud"
                          },
                          "bodyText": "Hello\nI dont see the M_c term? Maybe use comments in the inputs to indicate which term is which\nGuillaume",
                          "url": "https://github.com/idaholab/moose/discussions/27034#discussioncomment-8929412",
                          "updatedAt": "2024-03-27T14:39:08Z",
                          "publishedAt": "2024-03-27T14:39:08Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Leeyouan"
                          },
                          "bodyText": "Oh. The term 'M' in the 'SplitCHWRes' denotes M_c. I must revise it to M_c.\nThe solution converges well nonetheless reliability of the result. I'm now going to check it.\nThank you for help.\nWoojin",
                          "url": "https://github.com/idaholab/moose/discussions/27034#discussioncomment-8936353",
                          "updatedAt": "2024-03-28T05:51:17Z",
                          "publishedAt": "2024-03-28T05:51:16Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "Leeyouan"
                          },
                          "bodyText": "I found it does not work well..!\nIf I set temperature profile in first order, that should be no change in the result cause it has two gradient.\nBut it represents different result even though I set first order temperature profile.\nI should make new kernel. Thanks.\nWoojin",
                          "url": "https://github.com/idaholab/moose/discussions/27034#discussioncomment-8991656",
                          "updatedAt": "2024-04-03T03:26:43Z",
                          "publishedAt": "2024-04-03T03:26:42Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Displacment values are not showing correctly as expected",
          "author": {
            "login": "Narayanan1999"
          },
          "bodyText": "Hi,\nI tried to do  displacement analysis by pulling a plate from two opposites side on X axis by 0.001. Using Bond Based Peridynamics and horizon number =1, the displacment along X direction is coming correctly as expected. But displacement along Y direction is obtained as zero irrespective of what the material property is. It seems like Problems are treated as truss structures as element type is EDGE2. What can I do?\nThe Code written is as follows.\nelem = QUAD4\n[GlobalParams]\n  displacements = 'disp_x disp_y'\n[]\n\nL=1.0\nB=1.0\nHor_num=1\ndimension=2\nxn=10\nyn=10\ndelx=${fparse L/xn}\ndely=${fparse L/xn}\nM_L_min=${fparse -delx/2}\nM_L_max=${fparse L+delx/2}\nM_B_min=${fparse -dely/2}\nM_B_max=${fparse B+dely/2}\nM_nx=${fparse xn+1}\nM_ny=${fparse yn+1}\nYM=1000\nPR=0.3\n[Mesh]\n  type = PeridynamicsMesh\n  horizon_number = ${Hor_num}\n  [Mainsec]\n    type = GeneratedMeshGenerator\n    dim = ${dimension}\n    xmin = ${M_L_min}\n    xmax = ${M_L_max}\n    ymin = ${M_B_min}\n    ymax = ${M_B_max}\n    nx = ${M_nx}\n    ny = ${M_ny}\n    elem_type = ${elem}\n    boundary_name_prefix = Mainsec\n    boundary_id_offset = 10\n  []\n  [./gpd]\n    type = MeshGeneratorPD\n    input = Mainsec\n    retain_fe_mesh = false\n  [../]\n[]\n\n[Variables]\n  [./disp_x]\n  [../]\n  [./disp_y]\n  [../]\n[]\n\n[BCs]\n  [./left_x1]\n    type = FunctionDirichletBC\n    variable = disp_x\n    boundary = 1013\n    function = '-0.001 * t'\n  [../]\n  [./right_x1]\n    type = FunctionDirichletBC\n    variable = disp_x\n    boundary = 1011\n    function = '0.001 * t'\n  [../]\n[]\n\n[Modules/Peridynamics/Mechanics/Master]\n  [./all]\n    formulation = BOND\n  [../]\n[]\n\n[Materials]\n  [./elasticity_tensor]\n    type = ComputeIsotropicElasticityTensor\n    youngs_modulus = ${YM}\n    poissons_ratio = ${PR}\n  [../]\n\n  [./force_density]\n    type =  ComputeSmallStrainConstantHorizonMaterialBPD\n\tplane_stress=true\n  [../]\n[]\n\n[Preconditioning]\n  [./SMP]\n    type = SMP\n    full = true\n  [../]\n[]\n\n[Executioner]\n  type = Transient\n  solve_type = NEWTON\n  end_time = 1\n  dt = 1\n  num_steps = 1\n[]\n[Outputs]\n  exodus = true\n[]",
          "url": "https://github.com/idaholab/moose/discussions/27265",
          "updatedAt": "2024-04-02T19:30:36Z",
          "publishedAt": "2024-04-02T10:13:58Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "@hchen139 @laagesen",
                  "url": "https://github.com/idaholab/moose/discussions/27265#discussioncomment-8984001",
                  "updatedAt": "2024-04-02T13:20:15Z",
                  "publishedAt": "2024-04-02T13:20:14Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "laagesen"
                          },
                          "bodyText": "Sorry, afraid peridynamics is not in my wheelhouse. I think a lot of this capability was added by someone who is no longer at INL, I cannot remember the name but @bwspenc might remember who it was",
                          "url": "https://github.com/idaholab/moose/discussions/27265#discussioncomment-8985473",
                          "updatedAt": "2024-04-02T15:08:36Z",
                          "publishedAt": "2024-04-02T15:08:35Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "hchen139"
                  },
                  "bodyText": "Briefly looked at your input file. There are at least two major issues. First, using Hor_num=1 indicates you only consider the interaction with the nearest four neighboring elements. A recommended value is 3. Second, you didn't impose sufficient boundary conditions to fully constrain your problem. What is/are the constraint(s) for disp_y?",
                  "url": "https://github.com/idaholab/moose/discussions/27265#discussioncomment-8985652",
                  "updatedAt": "2024-04-02T15:20:02Z",
                  "publishedAt": "2024-04-02T15:20:01Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "Narayanan1999"
                          },
                          "bodyText": "For Hor_num=3, I tried changing Poisson's ratio and also tried plane stress case, but displacement values along Y-direction obtained is found to be same irrespective of these changes in material properties.",
                          "url": "https://github.com/idaholab/moose/discussions/27265#discussioncomment-8988525",
                          "updatedAt": "2024-04-04T10:59:11Z",
                          "publishedAt": "2024-04-02T19:30:36Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "How to register a task to build user objects",
          "author": {
            "login": "jmeier"
          },
          "bodyText": "Dear Moose community,\nI like my action to create an (user-defined) user object. My registerAll looks like this:\nvoid \nmoose_bare_tmechApp::registerAll(Factory & f, ActionFactory & af, Syntax & syntax)\n{\n  ModulesApp::registerAllObjects<moose_bare_tmechApp>(f, af, syntax);\n  Registry::registerObjectsTo(f, {\"moose_bare_tmechApp\"});\n  Registry::registerActionsTo(af, {\"moose_bare_tmechApp\"});\n\n  /* register custom execute flags, action syntax, etc. here */\n  registerSyntaxTask(\"AddStagesAction\", \"Stages\", \"add_stages\");\n  registerSyntaxTask(\"AddStageAction\", \"Stages/*\", \"add_stage\");\n\n  registerMooseObjectTask(\"add_stages\", Stages, false);\n  registerMooseObjectTask(\"add_stage\", Stage, false);\n}\n\nI can compile my app. Unfortunately, I get the following error when I try to execute:\n*** ERROR ***\nTask add_stages is not registered to build UserObject derived objects\n\nHow can I register my task to build user objects?\nThank you for your attention!",
          "url": "https://github.com/idaholab/moose/discussions/27264",
          "updatedAt": "2024-04-02T13:23:28Z",
          "publishedAt": "2024-04-02T09:29:21Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "GiudGiud"
                  },
                  "bodyText": "Hello\nIf you want add_stages to be able to create user objects you need this\nbase/Moose.C:  registerMooseObjectTask(\"add_stages\",              UserObject,             false);\n\nIf you want Stages to be recognized as something different than User Objects, then you need to do this in the Stage base class validParams\nparams.registerBase(\"Stages\");",
                  "url": "https://github.com/idaholab/moose/discussions/27264#discussioncomment-8983945",
                  "updatedAt": "2024-04-02T13:15:59Z",
                  "publishedAt": "2024-04-02T13:15:58Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Unable to solve environment when installing moose",
          "author": {
            "login": "RuSmith96"
          },
          "bodyText": "Hi All,\nI am installing Moose using the Conda Moose Environment and running into difficulties when trying to install moose ->\n(base) rsmith@ubuntu:$ export PATH=$HOME/miniconda3/bin:$PATH\n(base) rsmith@ubuntu:$ conda config --add channels conda-forge\nWarning: 'conda-forge' already in 'channels' list, moving to the top\n(base) rsmith@ubuntu:$ conda config --add channels idaholab\nWarning: 'idaholab' already in 'channels' list, moving to the top\n(base) rsmith@ubuntu:$ conda create --name moose moose-libmesh moose-tools\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with repodata from current_repodata.json, will retry with next repodata source.\nCollecting package metadata (repodata.json): done\nSolving environment: - Killed\nI am unable to solve the environment and it kills the process. Any fixes/advice/recommendations?\nCheers",
          "url": "https://github.com/idaholab/moose/discussions/16566",
          "updatedAt": "2024-04-02T12:22:49Z",
          "publishedAt": "2020-12-22T12:14:45Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "loganharbour"
                  },
                  "bodyText": "Having conda just die like that could happen when it runs out of memory. How much memory do you have on your machine?",
                  "url": "https://github.com/idaholab/moose/discussions/16566#discussioncomment-234688",
                  "updatedAt": "2022-08-23T11:04:30Z",
                  "publishedAt": "2020-12-22T15:19:57Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "RuSmith96"
                          },
                          "bodyText": "Hi Logan,\nMy computer has 8gb but I am giving my virtual machine 2gb. Is that enough?\nStorage wise, it has 20gb.\nCheers",
                          "url": "https://github.com/idaholab/moose/discussions/16566#discussioncomment-234862",
                          "updatedAt": "2022-08-23T11:04:30Z",
                          "publishedAt": "2020-12-22T15:36:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "I would try upping it to 3 or 4GB to see if you still get the same issue.",
                          "url": "https://github.com/idaholab/moose/discussions/16566#discussioncomment-234889",
                          "updatedAt": "2022-08-23T11:04:32Z",
                          "publishedAt": "2020-12-22T15:38:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "RuSmith96"
                          },
                          "bodyText": "Thanks Logan that has worked! Nothing like a bit of extra juice for the system!",
                          "url": "https://github.com/idaholab/moose/discussions/16566#discussioncomment-235021",
                          "updatedAt": "2022-08-23T11:04:32Z",
                          "publishedAt": "2020-12-22T16:47:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "loganharbour"
                          },
                          "bodyText": "Sure thing! Sorry that the error isn't particularly useful :-)",
                          "url": "https://github.com/idaholab/moose/discussions/16566#discussioncomment-235032",
                          "updatedAt": "2022-10-20T17:58:14Z",
                          "publishedAt": "2020-12-22T16:52:34Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "maqsiddiqui"
                          },
                          "bodyText": "@loganharbour Im having similar issues while updating MOOSE, can you please clarify how to increase the memory as you suggested ? Want to give it a try. Thanks.",
                          "url": "https://github.com/idaholab/moose/discussions/16566#discussioncomment-8979561",
                          "updatedAt": "2024-04-02T06:08:50Z",
                          "publishedAt": "2024-04-02T06:08:49Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "@maqsiddiqui, whatever virtual machine software you are using, you'll want to search the internet on how to do that. As that is what anyone in our group will be doing (WSL, Parallels, VMware, Docker, VirtualBox, etc).",
                          "url": "https://github.com/idaholab/moose/discussions/16566#discussioncomment-8983351",
                          "updatedAt": "2024-04-02T12:22:49Z",
                          "publishedAt": "2024-04-02T12:22:49Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}