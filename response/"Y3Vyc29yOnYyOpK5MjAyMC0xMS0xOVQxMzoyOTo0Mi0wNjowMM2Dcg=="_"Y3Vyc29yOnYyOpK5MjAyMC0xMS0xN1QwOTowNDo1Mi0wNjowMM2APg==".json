{
  "discussions": {
    "pageInfo": {
      "hasNextPage": true,
      "endCursor": "Y3Vyc29yOnYyOpK5MjAyMC0xMS0xN1QwOTowNDo1Mi0wNjowMM2APg=="
    },
    "edges": [
      {
        "node": {
          "title": "Forbidden link",
          "author": {
            "login": "jortensi"
          },
          "bodyText": "In\nhttps://mooseframework.inl.gov/framework_development/contributing.html\nThe \u201cour own slides\u201d in section Create a \"Pull Request\" leads nowhere.",
          "url": "https://github.com/idaholab/moose/discussions/16257",
          "updatedAt": "2020-11-19T18:50:10Z",
          "publishedAt": "2020-11-19T18:43:16Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Fixed in #16254",
                  "url": "https://github.com/idaholab/moose/discussions/16257#discussioncomment-134103",
                  "updatedAt": "2020-11-19T18:50:07Z",
                  "publishedAt": "2020-11-19T18:50:07Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Query results on the mesh",
          "author": {
            "login": "abarun22"
          },
          "bodyText": "Dear all,\nI was wondering if there is an option in MOOSE to probe the nodal values in the mesh during the post-processing stage. I suppose this could be a part of feature in peacock which i am not aware of. I would like to perform a node based comparison of resultants with ANSYS. Please could any body let me know how this can be done?\nKind regards,\nArun",
          "url": "https://github.com/idaholab/moose/discussions/16250",
          "updatedAt": "2023-08-04T16:08:02Z",
          "publishedAt": "2020-11-19T11:08:13Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "jessecarterMOOSE"
                  },
                  "bodyText": "There is a vector postprocessor called NodalValueSampler that might help.\nhttps://mooseframework.inl.gov/source/vectorpostprocessors/NodalValueSampler.html",
                  "url": "https://github.com/idaholab/moose/discussions/16250#discussioncomment-133691",
                  "updatedAt": "2023-08-04T16:08:13Z",
                  "publishedAt": "2020-11-19T14:38:07Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Create a temperature field and heat conduction",
          "author": {
            "login": "wenpeng231024"
          },
          "bodyText": "Hi everyone,\nI want to create a temperature field (the central region is hot).  I use an AuxVariables named \"T\" and FunctionAux of Auxkernel to create this field. It can work. But when I use \"HeatConduction\" kernel to couple the heat conduction equation, there is the error \"No nonlinear variable named T found. Did you specify an auxiliary variable when you meant to specify a nonlinear variable (or vice-versa)?\"\n[AuxVariables]\n[T]\n[]\n[]\n[AuxKernels]\n[T_bounds]\ntype = FunctionAux\nvariable = T\nfunction = '690+0.25*(710-690)*(cos(x/9-1)3.1415926+1)(cos(y/9-1)*3.1415926+1)'\n[]\n[]\n[heat]\ntype = HeatConduction\nvariable = T\n[]\nMy question is how can I build this temperature field and use the \"HeatConduction\" kernel at the same time?\nBest,\nPeng",
          "url": "https://github.com/idaholab/moose/discussions/16234",
          "updatedAt": "2022-11-25T16:22:04Z",
          "publishedAt": "2020-11-18T02:03:24Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "WilkAndy"
                  },
                  "bodyText": "Hey Peng,\nThe problem here is that when you're using T in the HeatConduction Kernel, you are telling MOOSE that you want the solution for T assuming it is governed by the heat equation.  However, when you set T to be an AuxVariable, you are telling MOOSE that you want to control the dynamics of T using the FunctionAux.\nYou've got to decide which one you want to do.   Is T a dynamical variable, or are you setting T externally using your FunctionAux?\nPerhaps what you're trying to do is set an initial condition for T, and then solve for its evolution?  If so, use a FunctionIC.",
                  "url": "https://github.com/idaholab/moose/discussions/16234#discussioncomment-132199",
                  "updatedAt": "2022-12-22T06:07:21Z",
                  "publishedAt": "2020-11-18T03:29:17Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "wenpeng231024"
                          },
                          "bodyText": "Hi WilkAndy,\nThanks for your response. Actually, I want to set this temperature field (hot center and cold boundary) as the boundary conditions.\nfor example, if I set the left boundary temperature is 600 K and the right boundary temperature is 700 K. There is a temperature gradient in the domain. Then I couple the heat conduction equation to research the effect of void or bubble on the temperature gradient due to its different thermal conductivity.\nBut I found I just can set the top, bottom, left, and right for the boundary. So I don't know how to create this temperature field (hot center and cold boundary) using these boundaries. If I use FuntionIC setting this temperature field as the initial condition, I found the temperature will quickly change to a constant for the whole system.\nSo, what I want to do is create a stable temperature field (hot center and cold boundary) like boundary condition. And couple the heat conduction equation to research the effect of void or bubble on the temperature gradient. Do you know how to do this?\nBest,\nPeng",
                          "url": "https://github.com/idaholab/moose/discussions/16234#discussioncomment-132645",
                          "updatedAt": "2022-12-22T06:07:22Z",
                          "publishedAt": "2020-11-18T14:08:48Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "WilkAndy"
                          },
                          "bodyText": "Perhaps your thermal conductivity was too high?  If you set it very small then the temperature will only change very slowly.",
                          "url": "https://github.com/idaholab/moose/discussions/16234#discussioncomment-133097",
                          "updatedAt": "2022-12-22T06:07:22Z",
                          "publishedAt": "2020-11-18T21:08:27Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "wenpeng231024"
                          },
                          "bodyText": "Hi Andy,\nYes, I agree with you. Maybe I need to use a smaller temperature gradient or lower thermal conductivity. I will try these.\nThanks for your help.\nPeng",
                          "url": "https://github.com/idaholab/moose/discussions/16234#discussioncomment-133102",
                          "updatedAt": "2022-12-22T06:07:22Z",
                          "publishedAt": "2020-11-18T21:12:48Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Set the block or boundary IDs for the mesh in MOOSE",
          "author": {
            "login": "wenpeng231024"
          },
          "bodyText": "Hi everyone,\nI want to set the block or boundary IDs for my mesh in MOOSE. I use the \"GeneratedMesh\" type for mesh. Does anyone know how to do this?\nBest,\nPeng",
          "url": "https://github.com/idaholab/moose/discussions/16233",
          "updatedAt": "2023-04-25T19:39:59Z",
          "publishedAt": "2020-11-18T01:27:26Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "There are a few methods of doing this, one of the most common is to use a SubdomainBoundingBoxGenerator to assign an id within a region.\nhttps://mooseframework.inl.gov/source/meshgenerators/SubdomainBoundingBoxGenerator.html\nLook at the various input files listed at the bottom of the page for examples.",
                  "url": "https://github.com/idaholab/moose/discussions/16233#discussioncomment-132838",
                  "updatedAt": "2023-04-25T19:40:06Z",
                  "publishedAt": "2020-11-18T16:47:48Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "wenpeng231024"
                          },
                          "bodyText": "Hi Andrew,\nThanks for your help. I will try this.\nPeng",
                          "url": "https://github.com/idaholab/moose/discussions/16233#discussioncomment-133006",
                          "updatedAt": "2023-04-25T19:40:12Z",
                          "publishedAt": "2020-11-18T19:22:26Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "A 'GrainBoundaryVelocity' is not a registered object",
          "author": {
            "login": "mnabilbhuiyan"
          },
          "bodyText": "Hello,\nI was trying to compute the grain boundary velocity. I followed the link\nhttps://mooseframework.inl.gov/source/auxkernels/GrainBoundaryVelocity.html\nI got the message:\n***** ERROR ***\nA 'GrainBoundaryVelocity' is not a registered object.\nIf you are trying to find this object in a dynamically linked library, make sure that\nthe library can be found either in your \"Problem/library_path\" parameter or in the\nMOOSE_LIBRARY_PATH environment variable.**\nI need some suggestions how I can solve this issue.\nBest Regards\nNabil",
          "url": "https://github.com/idaholab/moose/discussions/16195",
          "updatedAt": "2023-01-04T18:54:10Z",
          "publishedAt": "2020-11-16T01:12:15Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "aeslaughter"
                  },
                  "bodyText": "Make sure you have the phase field module enabled. See \"Enable Physics Modules\" on this page: https://mooseframework.inl.gov/getting_started/new_users.html#create-an-app",
                  "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-131153",
                  "updatedAt": "2023-01-04T18:54:10Z",
                  "publishedAt": "2020-11-16T22:48:41Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "mnabilbhuiyan"
                  },
                  "bodyText": "I enabled phase field module but it didn't work.",
                  "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-131198",
                  "updatedAt": "2023-01-04T18:54:10Z",
                  "publishedAt": "2020-11-17T00:02:30Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "Be sure to re-compile. What application are you running? If you run it with --registry do you see GrainBoundaryVelocity listed?",
                          "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-131200",
                          "updatedAt": "2023-05-17T20:46:59Z",
                          "publishedAt": "2020-11-17T00:09:50Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mnabilbhuiyan"
                          },
                          "bodyText": "My application name is eagle. You are mentioning about the following command to see GrainBoundaryVelocity?\nmnabil@044476jh6xh03-u:~/projects/eagle$ ./eagle-opt --registry",
                          "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-131208",
                          "updatedAt": "2023-05-17T20:46:59Z",
                          "publishedAt": "2020-11-17T00:30:18Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mnabilbhuiyan"
                          },
                          "bodyText": "I am not seeing GrainBoundaryVelocity listed.",
                          "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-131210",
                          "updatedAt": "2023-01-04T18:54:10Z",
                          "publishedAt": "2020-11-17T00:38:36Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "Is Eagle hosted somewhere that I could take a look?",
                          "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-131881",
                          "updatedAt": "2023-01-04T18:54:10Z",
                          "publishedAt": "2020-11-17T18:51:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mnabilbhuiyan"
                          },
                          "bodyText": "All the applications are in my personal computer. Is there anyway that I can show you my applications?",
                          "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-132112",
                          "updatedAt": "2023-01-04T18:54:10Z",
                          "publishedAt": "2020-11-17T23:27:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "mnabilbhuiyan"
                          },
                          "bodyText": "I have compiled some new applications. But I not seeing the GrainBoundaryVelocity and also getting the same error message\n***** ERROR ***\nA 'GrainBoundaryVelocity' is not a registered object.",
                          "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-132116",
                          "updatedAt": "2023-01-04T18:54:10Z",
                          "publishedAt": "2020-11-17T23:29:11Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "aeslaughter"
                          },
                          "bodyText": "The best way to share the code would be to put it on Github",
                          "url": "https://github.com/idaholab/moose/discussions/16195#discussioncomment-132143",
                          "updatedAt": "2023-01-04T18:54:10Z",
                          "publishedAt": "2020-11-18T01:06:07Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "libmesh update (miniconda) and error in RelationshipManager.h",
          "author": {
            "login": "mcacace"
          },
          "bodyText": "Dear all,\njust update my conda environment, and the framework. However, on compiling I get an error as attached.\nCould anyone help?\nThanks,\nmauro",
          "url": "https://github.com/idaholab/moose/discussions/16220",
          "updatedAt": "2023-05-31T12:11:22Z",
          "publishedAt": "2020-11-17T09:38:01Z",
          "category": {
            "name": "Q&A Getting Started"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "mcacace"
                  },
                  "bodyText": "As an update, I tried to deactivate and (re)activate the moose env. Now things are getting worse. While trying to compile moose, I keep receiving the following error from libmesh (path to contrib/lib/libtool):\nusr/bin/sed: not found\n:   error: Failed to create '/.libs'\nI am kind of lost now, and any suggestion is welcome.\nThanks in advance for any help,\nmauro",
                  "url": "https://github.com/idaholab/moose/discussions/16220#discussioncomment-131739",
                  "updatedAt": "2023-05-31T12:11:27Z",
                  "publishedAt": "2020-11-17T16:15:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "milljm"
                  },
                  "bodyText": "This is being discussed here: #16123\n(the sed part)",
                  "url": "https://github.com/idaholab/moose/discussions/16220#discussioncomment-131874",
                  "updatedAt": "2023-05-31T12:11:32Z",
                  "publishedAt": "2020-11-17T18:45:59Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "mcacace"
                          },
                          "bodyText": "thanks",
                          "url": "https://github.com/idaholab/moose/discussions/16220#discussioncomment-131899",
                          "updatedAt": "2023-05-31T12:11:32Z",
                          "publishedAt": "2020-11-17T19:10:38Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "milljm"
                          },
                          "bodyText": "Not sure if I should be given credit... I do not believe your issue is related to the sed issue.  I read 'libmesh update (miniconda)' and assumed the sed issue. It's possible your getting further than others through the use of ccache. maybe.",
                          "url": "https://github.com/idaholab/moose/discussions/16220#discussioncomment-131981",
                          "updatedAt": "2023-05-31T12:11:32Z",
                          "publishedAt": "2020-11-17T20:40:56Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Element type with cubic Lagrange interpolation",
          "author": {
            "login": "ZhouXD1989"
          },
          "bodyText": "Hello all,\nI found higher order element using cubic Lagrange interpolation in the following website:\nhttps://mooseframework.inl.gov/magpie/source/problems/FEProblemBase.html\nDoes moose provide this type of element for 2D and 3D problems?\nBest wishes,\nZhou",
          "url": "https://github.com/idaholab/moose/discussions/16198",
          "updatedAt": "2022-11-04T08:09:09Z",
          "publishedAt": "2020-11-16T10:06:22Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "Given that your link is identical to https://mooseframework.inl.gov/source/problems/FEProblemBase.html (the MOOSE documentation) I think we can confidently answer this with \"yes\".",
                  "url": "https://github.com/idaholab/moose/discussions/16198#discussioncomment-131685",
                  "updatedAt": "2022-11-04T08:09:21Z",
                  "publishedAt": "2020-11-17T15:09:51Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "too confident",
                          "url": "https://github.com/idaholab/moose/discussions/16198#discussioncomment-131722",
                          "updatedAt": "2022-11-04T08:09:26Z",
                          "publishedAt": "2020-11-17T15:58:37Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ZhouXD1989"
                  },
                  "bodyText": "Dear Daniel,\n\nThanks for your reply.\nDoes moose have an introduction of the element library?\nI already found moose have QUAD9 and HEX27 with quadratic basis function,\nbut what is the element name with cubic basis function?\nI am working with gradient elasticity recently, that's why I want to try\nhigher order elements in moose. Does moose have other type of higher order\nelements for gradient elasticity?\n\nThank you for your time and effort.\n\nBest wishes,\nXiandong\n\nDaniel Schwen <notifications@github.com> \u4e8e2020\u5e7411\u670817\u65e5\u5468\u4e8c \u4e0b\u53484:10\u5199\u9053\uff1a\n\u2026\n Given that your link is identical to\n https://mooseframework.inl.gov/source/problems/FEProblemBase.html (the\n MOOSE documentation) I think we can confidently answer this with \"yes\".\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#16198 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/ALDXGIBAFD5ADPBCTEDNURDSQKG47ANCNFSM4TW6T43Q>\n .\n\n\n-- \nBest regards,\nXian-Dong Zhou\nMechanics of Functional Materials, Institution of Materials Science, TU\nDarmstadt\nE-mail: zhouxd22@g <taoyong@pku.edu.cn>mail.com",
                  "url": "https://github.com/idaholab/moose/discussions/16198#discussioncomment-131713",
                  "updatedAt": "2022-11-04T08:09:31Z",
                  "publishedAt": "2020-11-17T15:47:50Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Hey, ugh, yes. I just realized we have second order elements, but not third order elements. So you might have to settle for a hermite shape function!",
                          "url": "https://github.com/idaholab/moose/discussions/16198#discussioncomment-131724",
                          "updatedAt": "2022-11-04T08:09:31Z",
                          "publishedAt": "2020-11-17T15:59:56Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "jiangwen84"
                          },
                          "bodyText": "Daniel is correct, and Hermite shape function is third order shape function with C1 continuity. However, Hermite shape function does not work with the displaced mesh. So only small strain problem would work.",
                          "url": "https://github.com/idaholab/moose/discussions/16198#discussioncomment-131971",
                          "updatedAt": "2022-11-04T08:09:31Z",
                          "publishedAt": "2020-11-17T20:32:02Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "TensorMechanics force boundary condition",
          "author": {
            "login": "ajdubas"
          },
          "bodyText": "Hi there,\nI am working on a TensorMechanics problem using MOOSE and am trying to implement a force boundary condition.  To check I am implementing it correctly I am using a simple beam theory set-up and looking through the example I have tried both a NodalKernels/ConstantRate and NodalKernels/UserForcingFunctionNodalKernal with a transient ramp to the desired load.  Both of these results in a displacement two orders of magnitude greater than expected (they are consistent with each other in their answer), so am I using the correct object?  and secondly am I using it correctly?\nMany Thanks in Advance,\nAleks",
          "url": "https://github.com/idaholab/moose/discussions/16104",
          "updatedAt": "2022-06-30T13:41:47Z",
          "publishedAt": "2020-11-06T13:04:09Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "crswong888"
                  },
                  "bodyText": "UserForcingFunctionNodalKernel is definitely the way to go for concentrated beam forces, since its more flexible than ConstantRate. But for a static load, either should do.\nI will need to see your input file to understand your issue and then I am sure we can resolve it swiftly. Please provide a link to your input file or attach it here by dragging it into the comment box (you might have to zip it if GitHub says \"We don't support that file type\"), or just copy and paste the code here.",
                  "url": "https://github.com/idaholab/moose/discussions/16104#discussioncomment-123559",
                  "updatedAt": "2022-06-30T13:41:48Z",
                  "publishedAt": "2020-11-06T21:18:54Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ajdubas"
                  },
                  "bodyText": "Please find input file attached.\nNote this uses small strain formulation as that is what the analytical validation case is based on.  The expected displacement is 0.01m at the forced end.\nstructural_transient_force_3D.i.zip",
                  "url": "https://github.com/idaholab/moose/discussions/16104#discussioncomment-125017",
                  "updatedAt": "2022-06-30T13:42:03Z",
                  "publishedAt": "2020-11-09T14:10:41Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "crswong888"
                  },
                  "bodyText": "@ajdubas what is it exactly you are trying to model here? A cantilevered steel beam with a concentrated transverse force of -10 kN at the free-end, yes?\nIf so, what are you trying to accomplish by applying 10 N in the axial direction here?\n[Functions]\n  [force]\n    type = PiecewiseLinear\n    x = '0.0 10.0'\n    y = '0.0 -10000.0'\n  []\n[]\n\nI was thinking you were working with beam elements, so that's why I said UserForcingFunctionNodalKernel is the way to go. But now I see that you are using solid elements, and so this is not the case. However, I think I still have a solution for you, but first I need to be clear about what you're trying to model here.",
                  "url": "https://github.com/idaholab/moose/discussions/16104#discussioncomment-125931",
                  "updatedAt": "2022-06-30T13:41:59Z",
                  "publishedAt": "2020-11-10T18:57:29Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "crswong888"
                          },
                          "bodyText": "To be clear, I think you are trying to model this thing:\n\nIf so, do you agree that the analytical max deflection for weak-axis bending should be\n\nor, in accordance with Timoshenko theory:",
                          "url": "https://github.com/idaholab/moose/discussions/16104#discussioncomment-126122",
                          "updatedAt": "2022-06-30T13:41:59Z",
                          "publishedAt": "2020-11-10T22:26:23Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "ajdubas"
                  },
                  "bodyText": "Yes, that is the solution I am trying to replicate - or more generally work out how to accurately apply a force boundary condition to solid elements.\nMy understanding of the PiecewiseLinear function ( https://mooseframework.inl.gov/source/functions/PiecewiseLinear.html ) is that the x array corresponds to time, therefore the force should ramp from 0.0N at 0.0s to -10.0kN at 10.0s if I have specified this function correctly.",
                  "url": "https://github.com/idaholab/moose/discussions/16104#discussioncomment-126451",
                  "updatedAt": "2022-06-30T13:41:59Z",
                  "publishedAt": "2020-11-11T03:58:02Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": []
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "crswong888"
                  },
                  "bodyText": "@ajdubas That's right, my mistake. By default, the ordinates for PiecewiseLinear correspond to time (for some reason I thought there was a t parameter, but all of these details are worked out with the axis parameter).\nThe reason for the large displacements is a vastly over-sized force. Keep in mind that UserForcingFunctionNodalKernel will apply the full magnitude of the specified forcing function to every single node on the specified boundary. Therefore, the total magnitude of the force you are applying is -10000 N / node * 340 nodes = 3.4e6 N. A force that bears more semblance to the concentrated transverse beam force you want would be roughly -29.4118 N / node. So just use this number instead of -10000 and you'll be good.\nNote that simply dividing the total force by the number of nodes and applying exactly this value to every single node isn't quite how we think of concentrated forces on beams. Since each node has a different tributary area, as we like to call it in Civil Engineering, then the force applied at each node should be proportional to this, if it were truly uniformly distributed over the cross-section (which is the assumption of beam theory). I have a very rough MooseObject to handle this calculation if you're interested. Just copy my files, PointForcingFunction3DEquivalent.C and PointForcingFunction3DEquivalent.h to your MOOSE app and recompile.\nI've made some edits to your input file here: https://github.com/crswong888/scorpion/blob/master/inputs/users/structural_transient_force_3D.i\nIt currently uses my object for point forces in 3D, so you will need those files. However, I left your old blocks commented out and also updated the force magnitude to the value you'll want in those. Lastly, I changed your executioner to something that performs at least twice as well. Enjoy :)",
                  "url": "https://github.com/idaholab/moose/discussions/16104#discussioncomment-126470",
                  "updatedAt": "2022-06-30T13:41:59Z",
                  "publishedAt": "2020-11-11T04:57:14Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "ajdubas"
                          },
                          "bodyText": "Thank you, this works brilliantly.\nIs there any way of doing this natively (i.e. just using the TensorMechanics and Contacts module without any extra code)?  It seems to me like something that should come built in, so might it be worth adding the above NodalKernel into the modules?",
                          "url": "https://github.com/idaholab/moose/discussions/16104#discussioncomment-131933",
                          "updatedAt": "2022-06-30T13:41:59Z",
                          "publishedAt": "2020-11-17T19:51:37Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "crswong888"
                          },
                          "bodyText": "I agree that this capability would be a useful tool to have in TensorMechanics. However, formal development of a new MooseObject takes time. I also don't like how my current code requires setting up multiple objects to make it work (i.e., the area postprocessor and the auxiliary kernel to store that pp value). It seems to me like this object should be able to handle the tributary areas on its own (e.g., by interpolating the shape functions to the nodes/qps with that concentrated force value - sort of like how traction loads are handled). So before I ever attempted to develop this in MOOSE, I would want to try to figure this out.\nIf you have the time, feel free to take my code and develop it in MOOSE yourself. See Framework Development to learn how to do this. Once you create a PR, tag me in it, and I can help you develop it.",
                          "url": "https://github.com/idaholab/moose/discussions/16104#discussioncomment-131957",
                          "updatedAt": "2022-06-30T13:41:59Z",
                          "publishedAt": "2020-11-17T20:08:31Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "Syntax error: Unknown identifier",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "Hello everyone,\nI have a problem with my .i file which shows that:\nInvalid function\n1/Vm * ((1-c_Cu)*g_Alpha_Cu + c_Cu*g_Alpha_Sn + R*T*((1-c_Cu)*log(1-c_Cu) + c_Cu*log(c_Cu)) + c_Cu*(1-c_Cu) * (l_Alpha_0 + l_Alpha_1*(1-2*c_Cu)))\nc_Cu,Vm,g_Alpha_Cu,g_Alpha_Sn,l_Alpha_0,l_Alpha_1\nin ParsedMaterialHelper.\nSyntax error: Unknown identifier\n\nDoes it means that c_Cu,Vm,g_Alpha_Cu,g_Alpha_Sn,l_Alpha_0,l_Alpha_1 are  unknown?\nBut I have defined c_Cu in [variable] and others in [Materials] through GenericConstantMaterial.\n  [./**c_Cu**]\n      order = FIRST\n      family = LAGRANGE\n      initial_condition = 0.02\n\n  [./model_constants]\n    type = GenericConstantMaterial\n    prop_names = '**Vm** R T'\n    prop_values = '16.29e-6 8.314 523'    #Vm:m^3/mol T:K\n  [../]\n  [./energy_constant]\n    type = GenericConstantMaterial\n    prop_names = '**g_Alpha_Cu g_Alpha_Sn** g_Ser_Sn g_L_Cu g_L_Sn **l_Alpha_0 l_Alpha_1** l_L_0 l_L_1 l_L_2'\n    prop_values = '-19073 -27280 346160 -11083 -28963 -11448 -11694 -10487 -18198 10528.4'    # J/mol\n  [../]",
          "url": "https://github.com/idaholab/moose/discussions/16197",
          "updatedAt": "2022-09-29T06:54:00Z",
          "publishedAt": "2020-11-16T06:31:59Z",
          "category": {
            "name": "Q&A Modules: General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "LiuPengPeter"
                  },
                  "bodyText": "Could anyone help? I still couldn't find the bug...\nThank you a lot!",
                  "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131205",
                  "updatedAt": "2022-09-29T06:54:23Z",
                  "publishedAt": "2020-11-17T00:25:31Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aprilnovak"
                          },
                          "bodyText": "I think you have a typo here: c_Cug_Alpha_Sn, maybe you are missing a multiplication sign between c_Cu and g_Alpha_Cu? The parser is interpreting this as a missing symbol for c_Cug_Alpha_Sn.",
                          "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131239",
                          "updatedAt": "2022-10-01T19:13:51Z",
                          "publishedAt": "2020-11-17T01:44:28Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Sorry. I post it wrong. But that's correct in my .i file.\nCould you help me check it?\nThank you a lot!",
                          "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131246",
                          "updatedAt": "2022-10-01T19:13:50Z",
                          "publishedAt": "2020-11-17T01:54:08Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "LiuPengPeter"
                  },
                  "bodyText": "My .i file is:\n [./f_Cu]\n    type = ParsedMaterial\n    f_name = f_Cu\n    args = 'c_Cu'\n    material_property_names = 'Vm g_Alpha_Cu g_Alpha_Sn l_Alpha_0 l_Alpha_1'\n    # About unit of f: the unit of Vm is m^3/mol. c is the molar percenage of Sn. f is the free energy density.\n    function = '1/Vm * ((1-c_Cu)*g_Alpha_Cu + c_Cu*g_Alpha_Sn + R*T*((1-c_Cu)*log(1-c_Cu) + c_Cu*log(c_Cu)) + c_Cu*(1-c_Cu) * (l_Alpha_0 + l_Alpha_1*(1-2*c_Cu)))'\n    outputs = exodus\n  [../]\n\nCould anyone help me check? My brain is full of water now....",
                  "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131245",
                  "updatedAt": "2022-10-01T19:13:53Z",
                  "publishedAt": "2020-11-17T01:53:06Z",
                  "isAnswer": false,
                  "replies": {
                    "edges": [
                      {
                        "node": {
                          "author": {
                            "login": "aprilnovak"
                          },
                          "bodyText": "You need to include multiplication signs in a few places - my previous comment was about two of your variables merging into one long name, but for instance I see you also have a problem with (1-c_Cu)g_Alpha_Cu  - you need to change this to (1-c_Cu)*g_Alpha_Cu .  There are a few other places this happens, too.",
                          "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131249",
                          "updatedAt": "2022-10-01T19:14:02Z",
                          "publishedAt": "2020-11-17T01:55:29Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thank you for your patience. But there is *. The first post is wrong by mistake. Please see my .i file.\nIt is:\n [./f_Cu]\n    type = ParsedMaterial\n    f_name = f_Cu\n    args = 'c_Cu'\n    material_property_names = 'Vm g_Alpha_Cu g_Alpha_Sn l_Alpha_0 l_Alpha_1'\n    function = '1/Vm * ((1-c_Cu)*g_Alpha_Cu + c_Cu*g_Alpha_Sn + R*T*((1-c_Cu)*log(1-c_Cu) + c_Cu*log(c_Cu)) + c_Cu*(1-c_Cu) * (l_Alpha_0 + l_Alpha_1*(1-2*c_Cu)))'\n    outputs = exodus\n  [../]",
                          "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131251",
                          "updatedAt": "2022-10-01T19:14:03Z",
                          "publishedAt": "2020-11-17T02:03:57Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "Liu Peng, please use the ``` markup to format excerpts of input files. It is hard to read otherwise.",
                          "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131278",
                          "updatedAt": "2022-10-01T19:14:07Z",
                          "publishedAt": "2020-11-17T03:14:06Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "dschwen"
                          },
                          "bodyText": "R and T are not listed in args or material_property_names",
                          "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131279",
                          "updatedAt": "2022-10-01T19:14:07Z",
                          "publishedAt": "2020-11-17T03:15:09Z",
                          "isAnswer": false
                        }
                      },
                      {
                        "node": {
                          "author": {
                            "login": "LiuPengPeter"
                          },
                          "bodyText": "Thanks a lot!\nI made such low mistake...",
                          "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131619",
                          "updatedAt": "2022-10-01T19:14:07Z",
                          "publishedAt": "2020-11-17T13:58:34Z",
                          "isAnswer": false
                        }
                      }
                    ]
                  }
                }
              },
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "R and T are not listed in args or material_property_names",
                  "url": "https://github.com/idaholab/moose/discussions/16197#discussioncomment-131675",
                  "updatedAt": "2022-10-01T19:14:21Z",
                  "publishedAt": "2020-11-17T15:06:22Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "title": "*** ERROR *** Invalid function",
          "author": {
            "login": "LiuPengPeter"
          },
          "bodyText": "I solved the problem. While, the post couldn't be deleted...",
          "url": "https://github.com/idaholab/moose/discussions/16221",
          "updatedAt": "2023-02-14T15:31:14Z",
          "publishedAt": "2020-11-17T14:04:57Z",
          "category": {
            "name": "Q&A General"
          },
          "comments": {
            "edges": [
              {
                "node": {
                  "author": {
                    "login": "dschwen"
                  },
                  "bodyText": "We do not delete posts here so that other people may find them and lear from them. Please also do not create separate threads on the same topic.",
                  "url": "https://github.com/idaholab/moose/discussions/16221#discussioncomment-131673",
                  "updatedAt": "2023-02-14T15:31:14Z",
                  "publishedAt": "2020-11-17T15:04:52Z",
                  "isAnswer": true,
                  "replies": {
                    "edges": []
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}